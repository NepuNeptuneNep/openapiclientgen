import { Injectable, Inject } from '@angular/core';
import { HttpClient, HttpHeaders, HttpResponse } from '@angular/common/http';
import { Observable } from 'rxjs';
import { FormControl, FormGroup, Validators } from '@angular/forms';
export namespace MyNS {

	/** Allocated connection of the AppGateway. */
	export interface AllocatedConnection {

		/**
		 * Required. The ingress port of an allocated connection
		 * Type: int, -2,147,483,648 to 2,147,483,647
		 */
		ingressPort?: number | null;

		/** Required. The PSC uri of an allocated connection */
		pscUri?: string | null;
	}

	/** Allocated connection of the AppGateway. */
	export interface AllocatedConnectionFormProperties {

		/**
		 * Required. The ingress port of an allocated connection
		 * Type: int, -2,147,483,648 to 2,147,483,647
		 */
		ingressPort: FormControl<number | null | undefined>,

		/** Required. The PSC uri of an allocated connection */
		pscUri: FormControl<string | null | undefined>,
	}
	export function CreateAllocatedConnectionFormGroup() {
		return new FormGroup<AllocatedConnectionFormProperties>({
			ingressPort: new FormControl<number | null | undefined>(undefined),
			pscUri: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** A BeyondCorp AppGateway resource represents a BeyondCorp protected AppGateway to a remote application. It creates all the necessary GCP components needed for creating a BeyondCorp protected AppGateway. Multiple connectors can be authorised for a single AppGateway. */
	export interface AppGateway {

		/** Output only. A list of connections allocated for the Gateway */
		allocatedConnections?: Array<AllocatedConnection>;

		/** Output only. Timestamp when the resource was created. */
		createTime?: string | null;

		/** Optional. An arbitrary user-provided name for the AppGateway. Cannot exceed 64 characters. */
		displayName?: string | null;

		/** Required. The type of hosting used by the AppGateway. */
		hostType?: AppGatewayHostType | null;

		/** Optional. Resource labels to represent user provided metadata. */
		labels?: {[id: string]: string };

		/** Required. Unique resource name of the AppGateway. The name is ignored when creating an AppGateway. */
		name?: string | null;

		/** Output only. The current state of the AppGateway. */
		state?: AppGatewayState | null;

		/** Required. The type of network connectivity used by the AppGateway. */
		type?: AppGatewayType | null;

		/** Output only. A unique identifier for the instance generated by the system. */
		uid?: string | null;

		/** Output only. Timestamp when the resource was last modified. */
		updateTime?: string | null;

		/** Output only. Server-defined URI for this resource. */
		uri?: string | null;
	}

	/** A BeyondCorp AppGateway resource represents a BeyondCorp protected AppGateway to a remote application. It creates all the necessary GCP components needed for creating a BeyondCorp protected AppGateway. Multiple connectors can be authorised for a single AppGateway. */
	export interface AppGatewayFormProperties {

		/** Output only. Timestamp when the resource was created. */
		createTime: FormControl<string | null | undefined>,

		/** Optional. An arbitrary user-provided name for the AppGateway. Cannot exceed 64 characters. */
		displayName: FormControl<string | null | undefined>,

		/** Required. The type of hosting used by the AppGateway. */
		hostType: FormControl<AppGatewayHostType | null | undefined>,

		/** Optional. Resource labels to represent user provided metadata. */
		labels: FormControl<{[id: string]: string } | null | undefined>,

		/** Required. Unique resource name of the AppGateway. The name is ignored when creating an AppGateway. */
		name: FormControl<string | null | undefined>,

		/** Output only. The current state of the AppGateway. */
		state: FormControl<AppGatewayState | null | undefined>,

		/** Required. The type of network connectivity used by the AppGateway. */
		type: FormControl<AppGatewayType | null | undefined>,

		/** Output only. A unique identifier for the instance generated by the system. */
		uid: FormControl<string | null | undefined>,

		/** Output only. Timestamp when the resource was last modified. */
		updateTime: FormControl<string | null | undefined>,

		/** Output only. Server-defined URI for this resource. */
		uri: FormControl<string | null | undefined>,
	}
	export function CreateAppGatewayFormGroup() {
		return new FormGroup<AppGatewayFormProperties>({
			createTime: new FormControl<string | null | undefined>(undefined),
			displayName: new FormControl<string | null | undefined>(undefined),
			hostType: new FormControl<AppGatewayHostType | null | undefined>(undefined),
			labels: new FormControl<{[id: string]: string } | null | undefined>(undefined),
			name: new FormControl<string | null | undefined>(undefined),
			state: new FormControl<AppGatewayState | null | undefined>(undefined),
			type: new FormControl<AppGatewayType | null | undefined>(undefined),
			uid: new FormControl<string | null | undefined>(undefined),
			updateTime: new FormControl<string | null | undefined>(undefined),
			uri: new FormControl<string | null | undefined>(undefined),
		});

	}

	export enum AppGatewayHostType { HOST_TYPE_UNSPECIFIED = 'HOST_TYPE_UNSPECIFIED', GCP_REGIONAL_MIG = 'GCP_REGIONAL_MIG' }

	export enum AppGatewayState { STATE_UNSPECIFIED = 'STATE_UNSPECIFIED', CREATING = 'CREATING', CREATED = 'CREATED', UPDATING = 'UPDATING', DELETING = 'DELETING', DOWN = 'DOWN' }

	export enum AppGatewayType { TYPE_UNSPECIFIED = 'TYPE_UNSPECIFIED', TCP_PROXY = 'TCP_PROXY' }


	/** Represents the metadata of the long-running operation. */
	export interface AppGatewayOperationMetadata {

		/** Output only. API version used to start the operation. */
		apiVersion?: string | null;

		/** Output only. The time the operation was created. */
		createTime?: string | null;

		/** Output only. The time the operation finished running. */
		endTime?: string | null;

		/** Output only. Identifies whether the user has requested cancellation of the operation. Operations that have successfully been cancelled have Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`. */
		requestedCancellation?: boolean | null;

		/** Output only. Human-readable status of the operation, if any. */
		statusMessage?: string | null;

		/** Output only. Server-defined resource path for the target of the operation. */
		target?: string | null;

		/** Output only. Name of the verb executed by the operation. */
		verb?: string | null;
	}

	/** Represents the metadata of the long-running operation. */
	export interface AppGatewayOperationMetadataFormProperties {

		/** Output only. API version used to start the operation. */
		apiVersion: FormControl<string | null | undefined>,

		/** Output only. The time the operation was created. */
		createTime: FormControl<string | null | undefined>,

		/** Output only. The time the operation finished running. */
		endTime: FormControl<string | null | undefined>,

		/** Output only. Identifies whether the user has requested cancellation of the operation. Operations that have successfully been cancelled have Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`. */
		requestedCancellation: FormControl<boolean | null | undefined>,

		/** Output only. Human-readable status of the operation, if any. */
		statusMessage: FormControl<string | null | undefined>,

		/** Output only. Server-defined resource path for the target of the operation. */
		target: FormControl<string | null | undefined>,

		/** Output only. Name of the verb executed by the operation. */
		verb: FormControl<string | null | undefined>,
	}
	export function CreateAppGatewayOperationMetadataFormGroup() {
		return new FormGroup<AppGatewayOperationMetadataFormProperties>({
			apiVersion: new FormControl<string | null | undefined>(undefined),
			createTime: new FormControl<string | null | undefined>(undefined),
			endTime: new FormControl<string | null | undefined>(undefined),
			requestedCancellation: new FormControl<boolean | null | undefined>(undefined),
			statusMessage: new FormControl<string | null | undefined>(undefined),
			target: new FormControl<string | null | undefined>(undefined),
			verb: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** ApplicationEndpoint represents a remote application endpoint. */
	export interface ApplicationEndpoint {

		/** Required. Hostname or IP address of the remote application endpoint. */
		host?: string | null;

		/**
		 * Required. Port of the remote application endpoint.
		 * Type: int, -2,147,483,648 to 2,147,483,647
		 */
		port?: number | null;
	}

	/** ApplicationEndpoint represents a remote application endpoint. */
	export interface ApplicationEndpointFormProperties {

		/** Required. Hostname or IP address of the remote application endpoint. */
		host: FormControl<string | null | undefined>,

		/**
		 * Required. Port of the remote application endpoint.
		 * Type: int, -2,147,483,648 to 2,147,483,647
		 */
		port: FormControl<number | null | undefined>,
	}
	export function CreateApplicationEndpointFormGroup() {
		return new FormGroup<ApplicationEndpointFormProperties>({
			host: new FormControl<string | null | undefined>(undefined),
			port: new FormControl<number | null | undefined>(undefined),
		});

	}


	/** The configuration for Pub/Sub messaging for the connector. */
	export interface CloudPubSubNotificationConfig {

		/** The Pub/Sub subscription the connector uses to receive notifications. */
		pubsubSubscription?: string | null;
	}

	/** The configuration for Pub/Sub messaging for the connector. */
	export interface CloudPubSubNotificationConfigFormProperties {

		/** The Pub/Sub subscription the connector uses to receive notifications. */
		pubsubSubscription: FormControl<string | null | undefined>,
	}
	export function CreateCloudPubSubNotificationConfigFormGroup() {
		return new FormGroup<CloudPubSubNotificationConfigFormProperties>({
			pubsubSubscription: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** ConnectionConfig represents a Connection Configuration object. */
	export interface CloudSecurityZerotrustApplinkAppConnectorProtoConnectionConfig {

		/** application_endpoint is the endpoint of the application the form of host:port. For example, "localhost:80". */
		applicationEndpoint?: string | null;

		/** application_name represents the given name of the application the connection is connecting with. */
		applicationName?: string | null;

		/** gateway lists all instances running a gateway in GCP. They all connect to a connector on the host. */
		gateway?: Array<CloudSecurityZerotrustApplinkAppConnectorProtoGateway>;

		/** name is the unique ID for each connection. TODO(b/190732451) returns connection name from user-specified name in config. Now, name = ${application_name}:${application_endpoint} */
		name?: string | null;

		/** project represents the consumer project the connection belongs to. */
		project?: string | null;

		/**
		 * tunnels_per_gateway reflects the number of tunnels between a connector and a gateway.
		 * Type: uint, 0 to 4,294,967,295
		 */
		tunnelsPerGateway?: number | null;

		/**
		 * user_port specifies the reserved port on gateways for user connections.
		 * Type: int, -2,147,483,648 to 2,147,483,647
		 */
		userPort?: number | null;
	}

	/** ConnectionConfig represents a Connection Configuration object. */
	export interface CloudSecurityZerotrustApplinkAppConnectorProtoConnectionConfigFormProperties {

		/** application_endpoint is the endpoint of the application the form of host:port. For example, "localhost:80". */
		applicationEndpoint: FormControl<string | null | undefined>,

		/** application_name represents the given name of the application the connection is connecting with. */
		applicationName: FormControl<string | null | undefined>,

		/** name is the unique ID for each connection. TODO(b/190732451) returns connection name from user-specified name in config. Now, name = ${application_name}:${application_endpoint} */
		name: FormControl<string | null | undefined>,

		/** project represents the consumer project the connection belongs to. */
		project: FormControl<string | null | undefined>,

		/**
		 * tunnels_per_gateway reflects the number of tunnels between a connector and a gateway.
		 * Type: uint, 0 to 4,294,967,295
		 */
		tunnelsPerGateway: FormControl<number | null | undefined>,

		/**
		 * user_port specifies the reserved port on gateways for user connections.
		 * Type: int, -2,147,483,648 to 2,147,483,647
		 */
		userPort: FormControl<number | null | undefined>,
	}
	export function CreateCloudSecurityZerotrustApplinkAppConnectorProtoConnectionConfigFormGroup() {
		return new FormGroup<CloudSecurityZerotrustApplinkAppConnectorProtoConnectionConfigFormProperties>({
			applicationEndpoint: new FormControl<string | null | undefined>(undefined),
			applicationName: new FormControl<string | null | undefined>(undefined),
			name: new FormControl<string | null | undefined>(undefined),
			project: new FormControl<string | null | undefined>(undefined),
			tunnelsPerGateway: new FormControl<number | null | undefined>(undefined),
			userPort: new FormControl<number | null | undefined>(undefined),
		});

	}


	/** Gateway represents a GCE VM Instance endpoint for use by IAP TCP. */
	export interface CloudSecurityZerotrustApplinkAppConnectorProtoGateway {

		/** interface specifies the network interface of the gateway to connect to. */
		interface?: string | null;

		/** name is the name of an instance running a gateway. It is the unique ID for a gateway. All gateways under the same connection have the same prefix. It is derived from the gateway URL. For example, name=${instance} assuming a gateway URL. https://www.googleapis.com/compute/${version}/projects/${project}/zones/${zone}/instances/${instance} */
		name?: string | null;

		/**
		 * port specifies the port of the gateway for tunnel connections from the connectors.
		 * Type: uint, 0 to 4,294,967,295
		 */
		port?: number | null;

		/** project is the tenant project the gateway belongs to. Different from the project in the connection, it is a BeyondCorpAPI internally created project to manage all the gateways. It is sharing the same network with the consumer project user owned. It is derived from the gateway URL. For example, project=${project} assuming a gateway URL. https://www.googleapis.com/compute/${version}/projects/${project}/zones/${zone}/instances/${instance} */
		project?: string | null;

		/** self_link is the gateway URL in the form https://www.googleapis.com/compute/${version}/projects/${project}/zones/${zone}/instances/${instance} */
		selfLink?: string | null;

		/** zone represents the zone the instance belongs. It is derived from the gateway URL. For example, zone=${zone} assuming a gateway URL. https://www.googleapis.com/compute/${version}/projects/${project}/zones/${zone}/instances/${instance} */
		zone?: string | null;
	}

	/** Gateway represents a GCE VM Instance endpoint for use by IAP TCP. */
	export interface CloudSecurityZerotrustApplinkAppConnectorProtoGatewayFormProperties {

		/** interface specifies the network interface of the gateway to connect to. */
		interface: FormControl<string | null | undefined>,

		/** name is the name of an instance running a gateway. It is the unique ID for a gateway. All gateways under the same connection have the same prefix. It is derived from the gateway URL. For example, name=${instance} assuming a gateway URL. https://www.googleapis.com/compute/${version}/projects/${project}/zones/${zone}/instances/${instance} */
		name: FormControl<string | null | undefined>,

		/**
		 * port specifies the port of the gateway for tunnel connections from the connectors.
		 * Type: uint, 0 to 4,294,967,295
		 */
		port: FormControl<number | null | undefined>,

		/** project is the tenant project the gateway belongs to. Different from the project in the connection, it is a BeyondCorpAPI internally created project to manage all the gateways. It is sharing the same network with the consumer project user owned. It is derived from the gateway URL. For example, project=${project} assuming a gateway URL. https://www.googleapis.com/compute/${version}/projects/${project}/zones/${zone}/instances/${instance} */
		project: FormControl<string | null | undefined>,

		/** self_link is the gateway URL in the form https://www.googleapis.com/compute/${version}/projects/${project}/zones/${zone}/instances/${instance} */
		selfLink: FormControl<string | null | undefined>,

		/** zone represents the zone the instance belongs. It is derived from the gateway URL. For example, zone=${zone} assuming a gateway URL. https://www.googleapis.com/compute/${version}/projects/${project}/zones/${zone}/instances/${instance} */
		zone: FormControl<string | null | undefined>,
	}
	export function CreateCloudSecurityZerotrustApplinkAppConnectorProtoGatewayFormGroup() {
		return new FormGroup<CloudSecurityZerotrustApplinkAppConnectorProtoGatewayFormProperties>({
			interface: new FormControl<string | null | undefined>(undefined),
			name: new FormControl<string | null | undefined>(undefined),
			port: new FormControl<number | null | undefined>(undefined),
			project: new FormControl<string | null | undefined>(undefined),
			selfLink: new FormControl<string | null | undefined>(undefined),
			zone: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** ConnectorDetails reflects the details of a connector. */
	export interface CloudSecurityZerotrustApplinkAppConnectorProtoConnectorDetails {
	}

	/** ConnectorDetails reflects the details of a connector. */
	export interface CloudSecurityZerotrustApplinkAppConnectorProtoConnectorDetailsFormProperties {
	}
	export function CreateCloudSecurityZerotrustApplinkAppConnectorProtoConnectorDetailsFormGroup() {
		return new FormGroup<CloudSecurityZerotrustApplinkAppConnectorProtoConnectorDetailsFormProperties>({
		});

	}


	/** LogAgentDetails reflects the details of a log agent. */
	export interface CloudSecurityZerotrustApplinkLogagentProtoLogAgentDetails {
	}

	/** LogAgentDetails reflects the details of a log agent. */
	export interface CloudSecurityZerotrustApplinkLogagentProtoLogAgentDetailsFormProperties {
	}
	export function CreateCloudSecurityZerotrustApplinkLogagentProtoLogAgentDetailsFormGroup() {
		return new FormGroup<CloudSecurityZerotrustApplinkLogagentProtoLogAgentDetailsFormProperties>({
		});

	}


	/** A BeyondCorp Connection resource represents a BeyondCorp protected connection to a remote application. It creates all the necessary GCP components needed for creating a BeyondCorp protected connection. Multiple connectors can be authorised for a single Connection. */
	export interface Connection {

		/** ApplicationEndpoint represents a remote application endpoint. */
		applicationEndpoint?: ApplicationEndpoint;

		/** Optional. List of [google.cloud.beyondcorp.v1main.Connector.name] that are authorised to be associated with this Connection. */
		connectors?: Array<string>;

		/** Output only. Timestamp when the resource was created. */
		createTime?: string | null;

		/** Optional. An arbitrary user-provided name for the connection. Cannot exceed 64 characters. */
		displayName?: string | null;

		/** Gateway represents a user facing component that serves as an entrance to enable connectivity. */
		gateway?: Gateway;

		/** Optional. Resource labels to represent user provided metadata. */
		labels?: {[id: string]: string };

		/** Required. Unique resource name of the connection. The name is ignored when creating a connection. */
		name?: string | null;

		/** Output only. The current state of the connection. */
		state?: AppGatewayState | null;

		/** Required. The type of network connectivity used by the connection. */
		type?: AppGatewayType | null;

		/** Output only. A unique identifier for the instance generated by the system. */
		uid?: string | null;

		/** Output only. Timestamp when the resource was last modified. */
		updateTime?: string | null;
	}

	/** A BeyondCorp Connection resource represents a BeyondCorp protected connection to a remote application. It creates all the necessary GCP components needed for creating a BeyondCorp protected connection. Multiple connectors can be authorised for a single Connection. */
	export interface ConnectionFormProperties {

		/** Output only. Timestamp when the resource was created. */
		createTime: FormControl<string | null | undefined>,

		/** Optional. An arbitrary user-provided name for the connection. Cannot exceed 64 characters. */
		displayName: FormControl<string | null | undefined>,

		/** Optional. Resource labels to represent user provided metadata. */
		labels: FormControl<{[id: string]: string } | null | undefined>,

		/** Required. Unique resource name of the connection. The name is ignored when creating a connection. */
		name: FormControl<string | null | undefined>,

		/** Output only. The current state of the connection. */
		state: FormControl<AppGatewayState | null | undefined>,

		/** Required. The type of network connectivity used by the connection. */
		type: FormControl<AppGatewayType | null | undefined>,

		/** Output only. A unique identifier for the instance generated by the system. */
		uid: FormControl<string | null | undefined>,

		/** Output only. Timestamp when the resource was last modified. */
		updateTime: FormControl<string | null | undefined>,
	}
	export function CreateConnectionFormGroup() {
		return new FormGroup<ConnectionFormProperties>({
			createTime: new FormControl<string | null | undefined>(undefined),
			displayName: new FormControl<string | null | undefined>(undefined),
			labels: new FormControl<{[id: string]: string } | null | undefined>(undefined),
			name: new FormControl<string | null | undefined>(undefined),
			state: new FormControl<AppGatewayState | null | undefined>(undefined),
			type: new FormControl<AppGatewayType | null | undefined>(undefined),
			uid: new FormControl<string | null | undefined>(undefined),
			updateTime: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Gateway represents a user facing component that serves as an entrance to enable connectivity. */
	export interface Gateway {

		/** Required. The type of hosting used by the gateway. */
		type?: GatewayType | null;

		/** Output only. Server-defined URI for this resource. */
		uri?: string | null;

		/**
		 * Output only. User port reserved on the gateways for this connection, if not specified or zero, the default port is 19443.
		 * Type: int, -2,147,483,648 to 2,147,483,647
		 */
		userPort?: number | null;
	}

	/** Gateway represents a user facing component that serves as an entrance to enable connectivity. */
	export interface GatewayFormProperties {

		/** Required. The type of hosting used by the gateway. */
		type: FormControl<GatewayType | null | undefined>,

		/** Output only. Server-defined URI for this resource. */
		uri: FormControl<string | null | undefined>,

		/**
		 * Output only. User port reserved on the gateways for this connection, if not specified or zero, the default port is 19443.
		 * Type: int, -2,147,483,648 to 2,147,483,647
		 */
		userPort: FormControl<number | null | undefined>,
	}
	export function CreateGatewayFormGroup() {
		return new FormGroup<GatewayFormProperties>({
			type: new FormControl<GatewayType | null | undefined>(undefined),
			uri: new FormControl<string | null | undefined>(undefined),
			userPort: new FormControl<number | null | undefined>(undefined),
		});

	}

	export enum GatewayType { TYPE_UNSPECIFIED = 'TYPE_UNSPECIFIED', GCP_REGIONAL_MIG = 'GCP_REGIONAL_MIG' }


	/** Details of the Connection. */
	export interface ConnectionDetails {

		/** A BeyondCorp Connection resource represents a BeyondCorp protected connection to a remote application. It creates all the necessary GCP components needed for creating a BeyondCorp protected connection. Multiple connectors can be authorised for a single Connection. */
		connection?: Connection;

		/** If type=GCP_REGIONAL_MIG, contains most recent VM instances, like "https://www.googleapis.com/compute/v1/projects/{project_id}/zones/{zone_id}/instances/{instance_id}". */
		recentMigVms?: Array<string>;
	}

	/** Details of the Connection. */
	export interface ConnectionDetailsFormProperties {
	}
	export function CreateConnectionDetailsFormGroup() {
		return new FormGroup<ConnectionDetailsFormProperties>({
		});

	}


	/** Represents the metadata of the long-running operation. */
	export interface ConnectionOperationMetadata {

		/** Output only. API version used to start the operation. */
		apiVersion?: string | null;

		/** Output only. The time the operation was created. */
		createTime?: string | null;

		/** Output only. The time the operation finished running. */
		endTime?: string | null;

		/** Output only. Identifies whether the user has requested cancellation of the operation. Operations that have successfully been cancelled have Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`. */
		requestedCancellation?: boolean | null;

		/** Output only. Human-readable status of the operation, if any. */
		statusMessage?: string | null;

		/** Output only. Server-defined resource path for the target of the operation. */
		target?: string | null;

		/** Output only. Name of the verb executed by the operation. */
		verb?: string | null;
	}

	/** Represents the metadata of the long-running operation. */
	export interface ConnectionOperationMetadataFormProperties {

		/** Output only. API version used to start the operation. */
		apiVersion: FormControl<string | null | undefined>,

		/** Output only. The time the operation was created. */
		createTime: FormControl<string | null | undefined>,

		/** Output only. The time the operation finished running. */
		endTime: FormControl<string | null | undefined>,

		/** Output only. Identifies whether the user has requested cancellation of the operation. Operations that have successfully been cancelled have Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`. */
		requestedCancellation: FormControl<boolean | null | undefined>,

		/** Output only. Human-readable status of the operation, if any. */
		statusMessage: FormControl<string | null | undefined>,

		/** Output only. Server-defined resource path for the target of the operation. */
		target: FormControl<string | null | undefined>,

		/** Output only. Name of the verb executed by the operation. */
		verb: FormControl<string | null | undefined>,
	}
	export function CreateConnectionOperationMetadataFormGroup() {
		return new FormGroup<ConnectionOperationMetadataFormProperties>({
			apiVersion: new FormControl<string | null | undefined>(undefined),
			createTime: new FormControl<string | null | undefined>(undefined),
			endTime: new FormControl<string | null | undefined>(undefined),
			requestedCancellation: new FormControl<boolean | null | undefined>(undefined),
			statusMessage: new FormControl<string | null | undefined>(undefined),
			target: new FormControl<string | null | undefined>(undefined),
			verb: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** A BeyondCorp connector resource that represents an application facing component deployed proximal to and with direct access to the application instances. It is used to establish connectivity between the remote enterprise environment and GCP. It initiates connections to the applications and can proxy the data from users over the connection. */
	export interface Connector {

		/** Output only. Timestamp when the resource was created. */
		createTime?: string | null;

		/** Optional. An arbitrary user-provided name for the connector. Cannot exceed 64 characters. */
		displayName?: string | null;

		/** Optional. Resource labels to represent user provided metadata. */
		labels?: {[id: string]: string };

		/** Required. Unique resource name of the connector. The name is ignored when creating a connector. */
		name?: string | null;

		/** PrincipalInfo represents an Identity oneof. */
		principalInfo?: PrincipalInfo;

		/** ResourceInfo represents the information/status of the associated resource. */
		resourceInfo?: ResourceInfo;

		/** Output only. The current state of the connector. */
		state?: AppGatewayState | null;

		/** Output only. A unique identifier for the instance generated by the system. */
		uid?: string | null;

		/** Output only. Timestamp when the resource was last modified. */
		updateTime?: string | null;
	}

	/** A BeyondCorp connector resource that represents an application facing component deployed proximal to and with direct access to the application instances. It is used to establish connectivity between the remote enterprise environment and GCP. It initiates connections to the applications and can proxy the data from users over the connection. */
	export interface ConnectorFormProperties {

		/** Output only. Timestamp when the resource was created. */
		createTime: FormControl<string | null | undefined>,

		/** Optional. An arbitrary user-provided name for the connector. Cannot exceed 64 characters. */
		displayName: FormControl<string | null | undefined>,

		/** Optional. Resource labels to represent user provided metadata. */
		labels: FormControl<{[id: string]: string } | null | undefined>,

		/** Required. Unique resource name of the connector. The name is ignored when creating a connector. */
		name: FormControl<string | null | undefined>,

		/** Output only. The current state of the connector. */
		state: FormControl<AppGatewayState | null | undefined>,

		/** Output only. A unique identifier for the instance generated by the system. */
		uid: FormControl<string | null | undefined>,

		/** Output only. Timestamp when the resource was last modified. */
		updateTime: FormControl<string | null | undefined>,
	}
	export function CreateConnectorFormGroup() {
		return new FormGroup<ConnectorFormProperties>({
			createTime: new FormControl<string | null | undefined>(undefined),
			displayName: new FormControl<string | null | undefined>(undefined),
			labels: new FormControl<{[id: string]: string } | null | undefined>(undefined),
			name: new FormControl<string | null | undefined>(undefined),
			state: new FormControl<AppGatewayState | null | undefined>(undefined),
			uid: new FormControl<string | null | undefined>(undefined),
			updateTime: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** PrincipalInfo represents an Identity oneof. */
	export interface PrincipalInfo {

		/** ServiceAccount represents a GCP service account. */
		serviceAccount?: ServiceAccount;
	}

	/** PrincipalInfo represents an Identity oneof. */
	export interface PrincipalInfoFormProperties {
	}
	export function CreatePrincipalInfoFormGroup() {
		return new FormGroup<PrincipalInfoFormProperties>({
		});

	}


	/** ServiceAccount represents a GCP service account. */
	export interface ServiceAccount {

		/** Email address of the service account. */
		email?: string | null;
	}

	/** ServiceAccount represents a GCP service account. */
	export interface ServiceAccountFormProperties {

		/** Email address of the service account. */
		email: FormControl<string | null | undefined>,
	}
	export function CreateServiceAccountFormGroup() {
		return new FormGroup<ServiceAccountFormProperties>({
			email: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** ResourceInfo represents the information/status of the associated resource. */
	export interface ResourceInfo {

		/** Required. Unique Id for the resource. */
		id?: string | null;

		/** Specific details for the resource. */
		resource?: {[id: string]: any };

		/** Overall health status. Overall status is derived based on the status of each sub level resources. */
		status?: ResourceInfoStatus | null;

		/** List of Info for the sub level resources. */
		sub?: Array<ResourceInfo>;

		/** The timestamp to collect the info. It is suggested to be set by the topmost level resource only. */
		time?: string | null;
	}

	/** ResourceInfo represents the information/status of the associated resource. */
	export interface ResourceInfoFormProperties {

		/** Required. Unique Id for the resource. */
		id: FormControl<string | null | undefined>,

		/** Specific details for the resource. */
		resource: FormControl<{[id: string]: any } | null | undefined>,

		/** Overall health status. Overall status is derived based on the status of each sub level resources. */
		status: FormControl<ResourceInfoStatus | null | undefined>,

		/** The timestamp to collect the info. It is suggested to be set by the topmost level resource only. */
		time: FormControl<string | null | undefined>,
	}
	export function CreateResourceInfoFormGroup() {
		return new FormGroup<ResourceInfoFormProperties>({
			id: new FormControl<string | null | undefined>(undefined),
			resource: new FormControl<{[id: string]: any } | null | undefined>(undefined),
			status: new FormControl<ResourceInfoStatus | null | undefined>(undefined),
			time: new FormControl<string | null | undefined>(undefined),
		});

	}

	export enum ResourceInfoStatus { HEALTH_STATUS_UNSPECIFIED = 'HEALTH_STATUS_UNSPECIFIED', HEALTHY = 'HEALTHY', UNHEALTHY = 'UNHEALTHY', UNRESPONSIVE = 'UNRESPONSIVE', DEGRADED = 'DEGRADED' }


	/** ConnectorInstanceConfig defines the instance config of a connector. */
	export interface ConnectorInstanceConfig {

		/** ImageConfig defines the control plane images to run. */
		imageConfig?: ImageConfig;

		/** The SLM instance agent configuration. */
		instanceConfig?: {[id: string]: any };

		/** NotificationConfig defines the mechanisms to notify instance agent. */
		notificationConfig?: NotificationConfig;

		/** Required. A monotonically increasing number generated and maintained by the API provider. Every time a config changes in the backend, the sequenceNumber should be bumped up to reflect the change. */
		sequenceNumber?: string | null;
	}

	/** ConnectorInstanceConfig defines the instance config of a connector. */
	export interface ConnectorInstanceConfigFormProperties {

		/** The SLM instance agent configuration. */
		instanceConfig: FormControl<{[id: string]: any } | null | undefined>,

		/** Required. A monotonically increasing number generated and maintained by the API provider. Every time a config changes in the backend, the sequenceNumber should be bumped up to reflect the change. */
		sequenceNumber: FormControl<string | null | undefined>,
	}
	export function CreateConnectorInstanceConfigFormGroup() {
		return new FormGroup<ConnectorInstanceConfigFormProperties>({
			instanceConfig: new FormControl<{[id: string]: any } | null | undefined>(undefined),
			sequenceNumber: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** ImageConfig defines the control plane images to run. */
	export interface ImageConfig {

		/** The stable image that the remote agent will fallback to if the target image fails. */
		stableImage?: string | null;

		/** The initial image the remote agent will attempt to run for the control plane. */
		targetImage?: string | null;
	}

	/** ImageConfig defines the control plane images to run. */
	export interface ImageConfigFormProperties {

		/** The stable image that the remote agent will fallback to if the target image fails. */
		stableImage: FormControl<string | null | undefined>,

		/** The initial image the remote agent will attempt to run for the control plane. */
		targetImage: FormControl<string | null | undefined>,
	}
	export function CreateImageConfigFormGroup() {
		return new FormGroup<ImageConfigFormProperties>({
			stableImage: new FormControl<string | null | undefined>(undefined),
			targetImage: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** NotificationConfig defines the mechanisms to notify instance agent. */
	export interface NotificationConfig {

		/** The configuration for Pub/Sub messaging for the connector. */
		pubsubNotification?: CloudPubSubNotificationConfig;
	}

	/** NotificationConfig defines the mechanisms to notify instance agent. */
	export interface NotificationConfigFormProperties {
	}
	export function CreateNotificationConfigFormGroup() {
		return new FormGroup<NotificationConfigFormProperties>({
		});

	}


	/** Represents the metadata of the long-running operation. */
	export interface ConnectorOperationMetadata {

		/** Output only. API version used to start the operation. */
		apiVersion?: string | null;

		/** Output only. The time the operation was created. */
		createTime?: string | null;

		/** Output only. The time the operation finished running. */
		endTime?: string | null;

		/** Output only. Identifies whether the user has requested cancellation of the operation. Operations that have successfully been cancelled have Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`. */
		requestedCancellation?: boolean | null;

		/** Output only. Human-readable status of the operation, if any. */
		statusMessage?: string | null;

		/** Output only. Server-defined resource path for the target of the operation. */
		target?: string | null;

		/** Output only. Name of the verb executed by the operation. */
		verb?: string | null;
	}

	/** Represents the metadata of the long-running operation. */
	export interface ConnectorOperationMetadataFormProperties {

		/** Output only. API version used to start the operation. */
		apiVersion: FormControl<string | null | undefined>,

		/** Output only. The time the operation was created. */
		createTime: FormControl<string | null | undefined>,

		/** Output only. The time the operation finished running. */
		endTime: FormControl<string | null | undefined>,

		/** Output only. Identifies whether the user has requested cancellation of the operation. Operations that have successfully been cancelled have Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`. */
		requestedCancellation: FormControl<boolean | null | undefined>,

		/** Output only. Human-readable status of the operation, if any. */
		statusMessage: FormControl<string | null | undefined>,

		/** Output only. Server-defined resource path for the target of the operation. */
		target: FormControl<string | null | undefined>,

		/** Output only. Name of the verb executed by the operation. */
		verb: FormControl<string | null | undefined>,
	}
	export function CreateConnectorOperationMetadataFormGroup() {
		return new FormGroup<ConnectorOperationMetadataFormProperties>({
			apiVersion: new FormControl<string | null | undefined>(undefined),
			createTime: new FormControl<string | null | undefined>(undefined),
			endTime: new FormControl<string | null | undefined>(undefined),
			requestedCancellation: new FormControl<boolean | null | undefined>(undefined),
			statusMessage: new FormControl<string | null | undefined>(undefined),
			target: new FormControl<string | null | undefined>(undefined),
			verb: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** ContainerHealthDetails reflects the health details of a container. */
	export interface ContainerHealthDetails {

		/** The version of the current config. */
		currentConfigVersion?: string | null;

		/** The latest error message. */
		errorMsg?: string | null;

		/** The version of the expected config. */
		expectedConfigVersion?: string | null;

		/** The extended status. Such as ExitCode, StartedAt, FinishedAt, etc. */
		extendedStatus?: {[id: string]: string };
	}

	/** ContainerHealthDetails reflects the health details of a container. */
	export interface ContainerHealthDetailsFormProperties {

		/** The version of the current config. */
		currentConfigVersion: FormControl<string | null | undefined>,

		/** The latest error message. */
		errorMsg: FormControl<string | null | undefined>,

		/** The version of the expected config. */
		expectedConfigVersion: FormControl<string | null | undefined>,

		/** The extended status. Such as ExitCode, StartedAt, FinishedAt, etc. */
		extendedStatus: FormControl<{[id: string]: string } | null | undefined>,
	}
	export function CreateContainerHealthDetailsFormGroup() {
		return new FormGroup<ContainerHealthDetailsFormProperties>({
			currentConfigVersion: new FormControl<string | null | undefined>(undefined),
			errorMsg: new FormControl<string | null | undefined>(undefined),
			expectedConfigVersion: new FormControl<string | null | undefined>(undefined),
			extendedStatus: new FormControl<{[id: string]: string } | null | undefined>(undefined),
		});

	}


	/** A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } */
	export interface Empty {
	}

	/** A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } */
	export interface EmptyFormProperties {
	}
	export function CreateEmptyFormGroup() {
		return new FormGroup<EmptyFormProperties>({
		});

	}


	/** Represents the metadata of the long-running operation. */
	export interface GoogleCloudBeyondcorpAppconnectionsV1AppConnectionOperationMetadata {

		/** Output only. API version used to start the operation. */
		apiVersion?: string | null;

		/** Output only. The time the operation was created. */
		createTime?: string | null;

		/** Output only. The time the operation finished running. */
		endTime?: string | null;

		/** Output only. Identifies whether the user has requested cancellation of the operation. Operations that have successfully been cancelled have Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`. */
		requestedCancellation?: boolean | null;

		/** Output only. Human-readable status of the operation, if any. */
		statusMessage?: string | null;

		/** Output only. Server-defined resource path for the target of the operation. */
		target?: string | null;

		/** Output only. Name of the verb executed by the operation. */
		verb?: string | null;
	}

	/** Represents the metadata of the long-running operation. */
	export interface GoogleCloudBeyondcorpAppconnectionsV1AppConnectionOperationMetadataFormProperties {

		/** Output only. API version used to start the operation. */
		apiVersion: FormControl<string | null | undefined>,

		/** Output only. The time the operation was created. */
		createTime: FormControl<string | null | undefined>,

		/** Output only. The time the operation finished running. */
		endTime: FormControl<string | null | undefined>,

		/** Output only. Identifies whether the user has requested cancellation of the operation. Operations that have successfully been cancelled have Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`. */
		requestedCancellation: FormControl<boolean | null | undefined>,

		/** Output only. Human-readable status of the operation, if any. */
		statusMessage: FormControl<string | null | undefined>,

		/** Output only. Server-defined resource path for the target of the operation. */
		target: FormControl<string | null | undefined>,

		/** Output only. Name of the verb executed by the operation. */
		verb: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudBeyondcorpAppconnectionsV1AppConnectionOperationMetadataFormGroup() {
		return new FormGroup<GoogleCloudBeyondcorpAppconnectionsV1AppConnectionOperationMetadataFormProperties>({
			apiVersion: new FormControl<string | null | undefined>(undefined),
			createTime: new FormControl<string | null | undefined>(undefined),
			endTime: new FormControl<string | null | undefined>(undefined),
			requestedCancellation: new FormControl<boolean | null | undefined>(undefined),
			statusMessage: new FormControl<string | null | undefined>(undefined),
			target: new FormControl<string | null | undefined>(undefined),
			verb: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** A BeyondCorp AppConnection resource represents a BeyondCorp protected AppConnection to a remote application. It creates all the necessary GCP components needed for creating a BeyondCorp protected AppConnection. Multiple connectors can be authorised for a single AppConnection. */
	export interface GoogleCloudBeyondcorpAppconnectionsV1alphaAppConnection {

		/** ApplicationEndpoint represents a remote application endpoint. */
		applicationEndpoint?: GoogleCloudBeyondcorpAppconnectionsV1alphaAppConnectionApplicationEndpoint;

		/** Optional. List of [google.cloud.beyondcorp.v1main.Connector.name] that are authorised to be associated with this AppConnection. */
		connectors?: Array<string>;

		/** Output only. Timestamp when the resource was created. */
		createTime?: string | null;

		/** Optional. An arbitrary user-provided name for the AppConnection. Cannot exceed 64 characters. */
		displayName?: string | null;

		/** Gateway represents a user facing component that serves as an entrance to enable connectivity. */
		gateway?: GoogleCloudBeyondcorpAppconnectionsV1alphaAppConnectionGateway;

		/** Optional. Resource labels to represent user provided metadata. */
		labels?: {[id: string]: string };

		/** Required. Unique resource name of the AppConnection. The name is ignored when creating a AppConnection. */
		name?: string | null;

		/** Output only. The current state of the AppConnection. */
		state?: AppGatewayState | null;

		/** Required. The type of network connectivity used by the AppConnection. */
		type?: AppGatewayType | null;

		/** Output only. A unique identifier for the instance generated by the system. */
		uid?: string | null;

		/** Output only. Timestamp when the resource was last modified. */
		updateTime?: string | null;
	}

	/** A BeyondCorp AppConnection resource represents a BeyondCorp protected AppConnection to a remote application. It creates all the necessary GCP components needed for creating a BeyondCorp protected AppConnection. Multiple connectors can be authorised for a single AppConnection. */
	export interface GoogleCloudBeyondcorpAppconnectionsV1alphaAppConnectionFormProperties {

		/** Output only. Timestamp when the resource was created. */
		createTime: FormControl<string | null | undefined>,

		/** Optional. An arbitrary user-provided name for the AppConnection. Cannot exceed 64 characters. */
		displayName: FormControl<string | null | undefined>,

		/** Optional. Resource labels to represent user provided metadata. */
		labels: FormControl<{[id: string]: string } | null | undefined>,

		/** Required. Unique resource name of the AppConnection. The name is ignored when creating a AppConnection. */
		name: FormControl<string | null | undefined>,

		/** Output only. The current state of the AppConnection. */
		state: FormControl<AppGatewayState | null | undefined>,

		/** Required. The type of network connectivity used by the AppConnection. */
		type: FormControl<AppGatewayType | null | undefined>,

		/** Output only. A unique identifier for the instance generated by the system. */
		uid: FormControl<string | null | undefined>,

		/** Output only. Timestamp when the resource was last modified. */
		updateTime: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudBeyondcorpAppconnectionsV1alphaAppConnectionFormGroup() {
		return new FormGroup<GoogleCloudBeyondcorpAppconnectionsV1alphaAppConnectionFormProperties>({
			createTime: new FormControl<string | null | undefined>(undefined),
			displayName: new FormControl<string | null | undefined>(undefined),
			labels: new FormControl<{[id: string]: string } | null | undefined>(undefined),
			name: new FormControl<string | null | undefined>(undefined),
			state: new FormControl<AppGatewayState | null | undefined>(undefined),
			type: new FormControl<AppGatewayType | null | undefined>(undefined),
			uid: new FormControl<string | null | undefined>(undefined),
			updateTime: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** ApplicationEndpoint represents a remote application endpoint. */
	export interface GoogleCloudBeyondcorpAppconnectionsV1alphaAppConnectionApplicationEndpoint {

		/** Required. Hostname or IP address of the remote application endpoint. */
		host?: string | null;

		/**
		 * Required. Port of the remote application endpoint.
		 * Type: int, -2,147,483,648 to 2,147,483,647
		 */
		port?: number | null;
	}

	/** ApplicationEndpoint represents a remote application endpoint. */
	export interface GoogleCloudBeyondcorpAppconnectionsV1alphaAppConnectionApplicationEndpointFormProperties {

		/** Required. Hostname or IP address of the remote application endpoint. */
		host: FormControl<string | null | undefined>,

		/**
		 * Required. Port of the remote application endpoint.
		 * Type: int, -2,147,483,648 to 2,147,483,647
		 */
		port: FormControl<number | null | undefined>,
	}
	export function CreateGoogleCloudBeyondcorpAppconnectionsV1alphaAppConnectionApplicationEndpointFormGroup() {
		return new FormGroup<GoogleCloudBeyondcorpAppconnectionsV1alphaAppConnectionApplicationEndpointFormProperties>({
			host: new FormControl<string | null | undefined>(undefined),
			port: new FormControl<number | null | undefined>(undefined),
		});

	}


	/** Gateway represents a user facing component that serves as an entrance to enable connectivity. */
	export interface GoogleCloudBeyondcorpAppconnectionsV1alphaAppConnectionGateway {

		/** Required. AppGateway name in following format: `projects/{project_id}/locations/{location_id}/appgateways/{gateway_id}` */
		appGateway?: string | null;

		/**
		 * Output only. Ingress port reserved on the gateways for this AppConnection, if not specified or zero, the default port is 19443.
		 * Type: int, -2,147,483,648 to 2,147,483,647
		 */
		ingressPort?: number | null;

		/** Output only. L7 private service connection for this resource. */
		l7psc?: string | null;

		/** Required. The type of hosting used by the gateway. */
		type?: GatewayType | null;

		/** Output only. Server-defined URI for this resource. */
		uri?: string | null;
	}

	/** Gateway represents a user facing component that serves as an entrance to enable connectivity. */
	export interface GoogleCloudBeyondcorpAppconnectionsV1alphaAppConnectionGatewayFormProperties {

		/** Required. AppGateway name in following format: `projects/{project_id}/locations/{location_id}/appgateways/{gateway_id}` */
		appGateway: FormControl<string | null | undefined>,

		/**
		 * Output only. Ingress port reserved on the gateways for this AppConnection, if not specified or zero, the default port is 19443.
		 * Type: int, -2,147,483,648 to 2,147,483,647
		 */
		ingressPort: FormControl<number | null | undefined>,

		/** Output only. L7 private service connection for this resource. */
		l7psc: FormControl<string | null | undefined>,

		/** Required. The type of hosting used by the gateway. */
		type: FormControl<GatewayType | null | undefined>,

		/** Output only. Server-defined URI for this resource. */
		uri: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudBeyondcorpAppconnectionsV1alphaAppConnectionGatewayFormGroup() {
		return new FormGroup<GoogleCloudBeyondcorpAppconnectionsV1alphaAppConnectionGatewayFormProperties>({
			appGateway: new FormControl<string | null | undefined>(undefined),
			ingressPort: new FormControl<number | null | undefined>(undefined),
			l7psc: new FormControl<string | null | undefined>(undefined),
			type: new FormControl<GatewayType | null | undefined>(undefined),
			uri: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Represents the metadata of the long-running operation. */
	export interface GoogleCloudBeyondcorpAppconnectionsV1alphaAppConnectionOperationMetadata {

		/** Output only. API version used to start the operation. */
		apiVersion?: string | null;

		/** Output only. The time the operation was created. */
		createTime?: string | null;

		/** Output only. The time the operation finished running. */
		endTime?: string | null;

		/** Output only. Identifies whether the user has requested cancellation of the operation. Operations that have successfully been cancelled have Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`. */
		requestedCancellation?: boolean | null;

		/** Output only. Human-readable status of the operation, if any. */
		statusMessage?: string | null;

		/** Output only. Server-defined resource path for the target of the operation. */
		target?: string | null;

		/** Output only. Name of the verb executed by the operation. */
		verb?: string | null;
	}

	/** Represents the metadata of the long-running operation. */
	export interface GoogleCloudBeyondcorpAppconnectionsV1alphaAppConnectionOperationMetadataFormProperties {

		/** Output only. API version used to start the operation. */
		apiVersion: FormControl<string | null | undefined>,

		/** Output only. The time the operation was created. */
		createTime: FormControl<string | null | undefined>,

		/** Output only. The time the operation finished running. */
		endTime: FormControl<string | null | undefined>,

		/** Output only. Identifies whether the user has requested cancellation of the operation. Operations that have successfully been cancelled have Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`. */
		requestedCancellation: FormControl<boolean | null | undefined>,

		/** Output only. Human-readable status of the operation, if any. */
		statusMessage: FormControl<string | null | undefined>,

		/** Output only. Server-defined resource path for the target of the operation. */
		target: FormControl<string | null | undefined>,

		/** Output only. Name of the verb executed by the operation. */
		verb: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudBeyondcorpAppconnectionsV1alphaAppConnectionOperationMetadataFormGroup() {
		return new FormGroup<GoogleCloudBeyondcorpAppconnectionsV1alphaAppConnectionOperationMetadataFormProperties>({
			apiVersion: new FormControl<string | null | undefined>(undefined),
			createTime: new FormControl<string | null | undefined>(undefined),
			endTime: new FormControl<string | null | undefined>(undefined),
			requestedCancellation: new FormControl<boolean | null | undefined>(undefined),
			statusMessage: new FormControl<string | null | undefined>(undefined),
			target: new FormControl<string | null | undefined>(undefined),
			verb: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Response message for BeyondCorp.ListAppConnections. */
	export interface GoogleCloudBeyondcorpAppconnectionsV1alphaListAppConnectionsResponse {

		/** A list of BeyondCorp AppConnections in the project. */
		appConnections?: Array<GoogleCloudBeyondcorpAppconnectionsV1alphaAppConnection>;

		/** A token to retrieve the next page of results, or empty if there are no more results in the list. */
		nextPageToken?: string | null;

		/** A list of locations that could not be reached. */
		unreachable?: Array<string>;
	}

	/** Response message for BeyondCorp.ListAppConnections. */
	export interface GoogleCloudBeyondcorpAppconnectionsV1alphaListAppConnectionsResponseFormProperties {

		/** A token to retrieve the next page of results, or empty if there are no more results in the list. */
		nextPageToken: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudBeyondcorpAppconnectionsV1alphaListAppConnectionsResponseFormGroup() {
		return new FormGroup<GoogleCloudBeyondcorpAppconnectionsV1alphaListAppConnectionsResponseFormProperties>({
			nextPageToken: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Response message for BeyondCorp.ResolveAppConnections. */
	export interface GoogleCloudBeyondcorpAppconnectionsV1alphaResolveAppConnectionsResponse {

		/** A list of BeyondCorp AppConnections with details in the project. */
		appConnectionDetails?: Array<GoogleCloudBeyondcorpAppconnectionsV1alphaResolveAppConnectionsResponseAppConnectionDetails>;

		/** A token to retrieve the next page of results, or empty if there are no more results in the list. */
		nextPageToken?: string | null;

		/** A list of locations that could not be reached. */
		unreachable?: Array<string>;
	}

	/** Response message for BeyondCorp.ResolveAppConnections. */
	export interface GoogleCloudBeyondcorpAppconnectionsV1alphaResolveAppConnectionsResponseFormProperties {

		/** A token to retrieve the next page of results, or empty if there are no more results in the list. */
		nextPageToken: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudBeyondcorpAppconnectionsV1alphaResolveAppConnectionsResponseFormGroup() {
		return new FormGroup<GoogleCloudBeyondcorpAppconnectionsV1alphaResolveAppConnectionsResponseFormProperties>({
			nextPageToken: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Details of the AppConnection. */
	export interface GoogleCloudBeyondcorpAppconnectionsV1alphaResolveAppConnectionsResponseAppConnectionDetails {

		/** A BeyondCorp AppConnection resource represents a BeyondCorp protected AppConnection to a remote application. It creates all the necessary GCP components needed for creating a BeyondCorp protected AppConnection. Multiple connectors can be authorised for a single AppConnection. */
		appConnection?: GoogleCloudBeyondcorpAppconnectionsV1alphaAppConnection;

		/** If type=GCP_REGIONAL_MIG, contains most recent VM instances, like `https://www.googleapis.com/compute/v1/projects/{project_id}/zones/{zone_id}/instances/{instance_id}`. */
		recentMigVms?: Array<string>;
	}

	/** Details of the AppConnection. */
	export interface GoogleCloudBeyondcorpAppconnectionsV1alphaResolveAppConnectionsResponseAppConnectionDetailsFormProperties {
	}
	export function CreateGoogleCloudBeyondcorpAppconnectionsV1alphaResolveAppConnectionsResponseAppConnectionDetailsFormGroup() {
		return new FormGroup<GoogleCloudBeyondcorpAppconnectionsV1alphaResolveAppConnectionsResponseAppConnectionDetailsFormProperties>({
		});

	}


	/** Represents the metadata of the long-running operation. */
	export interface GoogleCloudBeyondcorpAppconnectorsV1AppConnectorOperationMetadata {

		/** Output only. API version used to start the operation. */
		apiVersion?: string | null;

		/** Output only. The time the operation was created. */
		createTime?: string | null;

		/** Output only. The time the operation finished running. */
		endTime?: string | null;

		/** Output only. Identifies whether the user has requested cancellation of the operation. Operations that have successfully been cancelled have Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`. */
		requestedCancellation?: boolean | null;

		/** Output only. Human-readable status of the operation, if any. */
		statusMessage?: string | null;

		/** Output only. Server-defined resource path for the target of the operation. */
		target?: string | null;

		/** Output only. Name of the verb executed by the operation. */
		verb?: string | null;
	}

	/** Represents the metadata of the long-running operation. */
	export interface GoogleCloudBeyondcorpAppconnectorsV1AppConnectorOperationMetadataFormProperties {

		/** Output only. API version used to start the operation. */
		apiVersion: FormControl<string | null | undefined>,

		/** Output only. The time the operation was created. */
		createTime: FormControl<string | null | undefined>,

		/** Output only. The time the operation finished running. */
		endTime: FormControl<string | null | undefined>,

		/** Output only. Identifies whether the user has requested cancellation of the operation. Operations that have successfully been cancelled have Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`. */
		requestedCancellation: FormControl<boolean | null | undefined>,

		/** Output only. Human-readable status of the operation, if any. */
		statusMessage: FormControl<string | null | undefined>,

		/** Output only. Server-defined resource path for the target of the operation. */
		target: FormControl<string | null | undefined>,

		/** Output only. Name of the verb executed by the operation. */
		verb: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudBeyondcorpAppconnectorsV1AppConnectorOperationMetadataFormGroup() {
		return new FormGroup<GoogleCloudBeyondcorpAppconnectorsV1AppConnectorOperationMetadataFormProperties>({
			apiVersion: new FormControl<string | null | undefined>(undefined),
			createTime: new FormControl<string | null | undefined>(undefined),
			endTime: new FormControl<string | null | undefined>(undefined),
			requestedCancellation: new FormControl<boolean | null | undefined>(undefined),
			statusMessage: new FormControl<string | null | undefined>(undefined),
			target: new FormControl<string | null | undefined>(undefined),
			verb: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** ContainerHealthDetails reflects the health details of a container. */
	export interface GoogleCloudBeyondcorpAppconnectorsV1ContainerHealthDetails {

		/** The version of the current config. */
		currentConfigVersion?: string | null;

		/** The latest error message. */
		errorMsg?: string | null;

		/** The version of the expected config. */
		expectedConfigVersion?: string | null;

		/** The extended status. Such as ExitCode, StartedAt, FinishedAt, etc. */
		extendedStatus?: {[id: string]: string };
	}

	/** ContainerHealthDetails reflects the health details of a container. */
	export interface GoogleCloudBeyondcorpAppconnectorsV1ContainerHealthDetailsFormProperties {

		/** The version of the current config. */
		currentConfigVersion: FormControl<string | null | undefined>,

		/** The latest error message. */
		errorMsg: FormControl<string | null | undefined>,

		/** The version of the expected config. */
		expectedConfigVersion: FormControl<string | null | undefined>,

		/** The extended status. Such as ExitCode, StartedAt, FinishedAt, etc. */
		extendedStatus: FormControl<{[id: string]: string } | null | undefined>,
	}
	export function CreateGoogleCloudBeyondcorpAppconnectorsV1ContainerHealthDetailsFormGroup() {
		return new FormGroup<GoogleCloudBeyondcorpAppconnectorsV1ContainerHealthDetailsFormProperties>({
			currentConfigVersion: new FormControl<string | null | undefined>(undefined),
			errorMsg: new FormControl<string | null | undefined>(undefined),
			expectedConfigVersion: new FormControl<string | null | undefined>(undefined),
			extendedStatus: new FormControl<{[id: string]: string } | null | undefined>(undefined),
		});

	}


	/** RemoteAgentDetails reflects the details of a remote agent. */
	export interface GoogleCloudBeyondcorpAppconnectorsV1RemoteAgentDetails {
	}

	/** RemoteAgentDetails reflects the details of a remote agent. */
	export interface GoogleCloudBeyondcorpAppconnectorsV1RemoteAgentDetailsFormProperties {
	}
	export function CreateGoogleCloudBeyondcorpAppconnectorsV1RemoteAgentDetailsFormGroup() {
		return new FormGroup<GoogleCloudBeyondcorpAppconnectorsV1RemoteAgentDetailsFormProperties>({
		});

	}


	/** A BeyondCorp connector resource that represents an application facing component deployed proximal to and with direct access to the application instances. It is used to establish connectivity between the remote enterprise environment and GCP. It initiates connections to the applications and can proxy the data from users over the connection. */
	export interface GoogleCloudBeyondcorpAppconnectorsV1alphaAppConnector {

		/** Output only. Timestamp when the resource was created. */
		createTime?: string | null;

		/** Optional. An arbitrary user-provided name for the AppConnector. Cannot exceed 64 characters. */
		displayName?: string | null;

		/** Optional. Resource labels to represent user provided metadata. */
		labels?: {[id: string]: string };

		/** Required. Unique resource name of the AppConnector. The name is ignored when creating a AppConnector. */
		name?: string | null;

		/** PrincipalInfo represents an Identity oneof. */
		principalInfo?: GoogleCloudBeyondcorpAppconnectorsV1alphaAppConnectorPrincipalInfo;

		/** ResourceInfo represents the information/status of an app connector resource. Such as: - remote_agent - container - runtime - appgateway - appconnector - appconnection - tunnel - logagent */
		resourceInfo?: GoogleCloudBeyondcorpAppconnectorsV1alphaResourceInfo;

		/** Output only. The current state of the AppConnector. */
		state?: AppGatewayState | null;

		/** Output only. A unique identifier for the instance generated by the system. */
		uid?: string | null;

		/** Output only. Timestamp when the resource was last modified. */
		updateTime?: string | null;
	}

	/** A BeyondCorp connector resource that represents an application facing component deployed proximal to and with direct access to the application instances. It is used to establish connectivity between the remote enterprise environment and GCP. It initiates connections to the applications and can proxy the data from users over the connection. */
	export interface GoogleCloudBeyondcorpAppconnectorsV1alphaAppConnectorFormProperties {

		/** Output only. Timestamp when the resource was created. */
		createTime: FormControl<string | null | undefined>,

		/** Optional. An arbitrary user-provided name for the AppConnector. Cannot exceed 64 characters. */
		displayName: FormControl<string | null | undefined>,

		/** Optional. Resource labels to represent user provided metadata. */
		labels: FormControl<{[id: string]: string } | null | undefined>,

		/** Required. Unique resource name of the AppConnector. The name is ignored when creating a AppConnector. */
		name: FormControl<string | null | undefined>,

		/** Output only. The current state of the AppConnector. */
		state: FormControl<AppGatewayState | null | undefined>,

		/** Output only. A unique identifier for the instance generated by the system. */
		uid: FormControl<string | null | undefined>,

		/** Output only. Timestamp when the resource was last modified. */
		updateTime: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudBeyondcorpAppconnectorsV1alphaAppConnectorFormGroup() {
		return new FormGroup<GoogleCloudBeyondcorpAppconnectorsV1alphaAppConnectorFormProperties>({
			createTime: new FormControl<string | null | undefined>(undefined),
			displayName: new FormControl<string | null | undefined>(undefined),
			labels: new FormControl<{[id: string]: string } | null | undefined>(undefined),
			name: new FormControl<string | null | undefined>(undefined),
			state: new FormControl<AppGatewayState | null | undefined>(undefined),
			uid: new FormControl<string | null | undefined>(undefined),
			updateTime: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** PrincipalInfo represents an Identity oneof. */
	export interface GoogleCloudBeyondcorpAppconnectorsV1alphaAppConnectorPrincipalInfo {

		/** ServiceAccount represents a GCP service account. */
		serviceAccount?: GoogleCloudBeyondcorpAppconnectorsV1alphaAppConnectorPrincipalInfoServiceAccount;
	}

	/** PrincipalInfo represents an Identity oneof. */
	export interface GoogleCloudBeyondcorpAppconnectorsV1alphaAppConnectorPrincipalInfoFormProperties {
	}
	export function CreateGoogleCloudBeyondcorpAppconnectorsV1alphaAppConnectorPrincipalInfoFormGroup() {
		return new FormGroup<GoogleCloudBeyondcorpAppconnectorsV1alphaAppConnectorPrincipalInfoFormProperties>({
		});

	}


	/** ServiceAccount represents a GCP service account. */
	export interface GoogleCloudBeyondcorpAppconnectorsV1alphaAppConnectorPrincipalInfoServiceAccount {

		/** Email address of the service account. */
		email?: string | null;
	}

	/** ServiceAccount represents a GCP service account. */
	export interface GoogleCloudBeyondcorpAppconnectorsV1alphaAppConnectorPrincipalInfoServiceAccountFormProperties {

		/** Email address of the service account. */
		email: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudBeyondcorpAppconnectorsV1alphaAppConnectorPrincipalInfoServiceAccountFormGroup() {
		return new FormGroup<GoogleCloudBeyondcorpAppconnectorsV1alphaAppConnectorPrincipalInfoServiceAccountFormProperties>({
			email: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** ResourceInfo represents the information/status of an app connector resource. Such as: - remote_agent - container - runtime - appgateway - appconnector - appconnection - tunnel - logagent */
	export interface GoogleCloudBeyondcorpAppconnectorsV1alphaResourceInfo {

		/** Required. Unique Id for the resource. */
		id?: string | null;

		/** Specific details for the resource. This is for internal use only. */
		resource?: {[id: string]: any };

		/** Overall health status. Overall status is derived based on the status of each sub level resources. */
		status?: ResourceInfoStatus | null;

		/** List of Info for the sub level resources. */
		sub?: Array<GoogleCloudBeyondcorpAppconnectorsV1alphaResourceInfo>;

		/** The timestamp to collect the info. It is suggested to be set by the topmost level resource only. */
		time?: string | null;
	}

	/** ResourceInfo represents the information/status of an app connector resource. Such as: - remote_agent - container - runtime - appgateway - appconnector - appconnection - tunnel - logagent */
	export interface GoogleCloudBeyondcorpAppconnectorsV1alphaResourceInfoFormProperties {

		/** Required. Unique Id for the resource. */
		id: FormControl<string | null | undefined>,

		/** Specific details for the resource. This is for internal use only. */
		resource: FormControl<{[id: string]: any } | null | undefined>,

		/** Overall health status. Overall status is derived based on the status of each sub level resources. */
		status: FormControl<ResourceInfoStatus | null | undefined>,

		/** The timestamp to collect the info. It is suggested to be set by the topmost level resource only. */
		time: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudBeyondcorpAppconnectorsV1alphaResourceInfoFormGroup() {
		return new FormGroup<GoogleCloudBeyondcorpAppconnectorsV1alphaResourceInfoFormProperties>({
			id: new FormControl<string | null | undefined>(undefined),
			resource: new FormControl<{[id: string]: any } | null | undefined>(undefined),
			status: new FormControl<ResourceInfoStatus | null | undefined>(undefined),
			time: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** AppConnectorInstanceConfig defines the instance config of a AppConnector. */
	export interface GoogleCloudBeyondcorpAppconnectorsV1alphaAppConnectorInstanceConfig {

		/** ImageConfig defines the control plane images to run. */
		imageConfig?: GoogleCloudBeyondcorpAppconnectorsV1alphaImageConfig;

		/** The SLM instance agent configuration. */
		instanceConfig?: {[id: string]: any };

		/** NotificationConfig defines the mechanisms to notify instance agent. */
		notificationConfig?: GoogleCloudBeyondcorpAppconnectorsV1alphaNotificationConfig;

		/** Required. A monotonically increasing number generated and maintained by the API provider. Every time a config changes in the backend, the sequenceNumber should be bumped up to reflect the change. */
		sequenceNumber?: string | null;
	}

	/** AppConnectorInstanceConfig defines the instance config of a AppConnector. */
	export interface GoogleCloudBeyondcorpAppconnectorsV1alphaAppConnectorInstanceConfigFormProperties {

		/** The SLM instance agent configuration. */
		instanceConfig: FormControl<{[id: string]: any } | null | undefined>,

		/** Required. A monotonically increasing number generated and maintained by the API provider. Every time a config changes in the backend, the sequenceNumber should be bumped up to reflect the change. */
		sequenceNumber: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudBeyondcorpAppconnectorsV1alphaAppConnectorInstanceConfigFormGroup() {
		return new FormGroup<GoogleCloudBeyondcorpAppconnectorsV1alphaAppConnectorInstanceConfigFormProperties>({
			instanceConfig: new FormControl<{[id: string]: any } | null | undefined>(undefined),
			sequenceNumber: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** ImageConfig defines the control plane images to run. */
	export interface GoogleCloudBeyondcorpAppconnectorsV1alphaImageConfig {

		/** The stable image that the remote agent will fallback to if the target image fails. Format would be a gcr image path, e.g.: gcr.io/PROJECT-ID/my-image:tag1 */
		stableImage?: string | null;

		/** The initial image the remote agent will attempt to run for the control plane. Format would be a gcr image path, e.g.: gcr.io/PROJECT-ID/my-image:tag1 */
		targetImage?: string | null;
	}

	/** ImageConfig defines the control plane images to run. */
	export interface GoogleCloudBeyondcorpAppconnectorsV1alphaImageConfigFormProperties {

		/** The stable image that the remote agent will fallback to if the target image fails. Format would be a gcr image path, e.g.: gcr.io/PROJECT-ID/my-image:tag1 */
		stableImage: FormControl<string | null | undefined>,

		/** The initial image the remote agent will attempt to run for the control plane. Format would be a gcr image path, e.g.: gcr.io/PROJECT-ID/my-image:tag1 */
		targetImage: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudBeyondcorpAppconnectorsV1alphaImageConfigFormGroup() {
		return new FormGroup<GoogleCloudBeyondcorpAppconnectorsV1alphaImageConfigFormProperties>({
			stableImage: new FormControl<string | null | undefined>(undefined),
			targetImage: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** NotificationConfig defines the mechanisms to notify instance agent. */
	export interface GoogleCloudBeyondcorpAppconnectorsV1alphaNotificationConfig {

		/** The configuration for Pub/Sub messaging for the AppConnector. */
		pubsubNotification?: GoogleCloudBeyondcorpAppconnectorsV1alphaNotificationConfigCloudPubSubNotificationConfig;
	}

	/** NotificationConfig defines the mechanisms to notify instance agent. */
	export interface GoogleCloudBeyondcorpAppconnectorsV1alphaNotificationConfigFormProperties {
	}
	export function CreateGoogleCloudBeyondcorpAppconnectorsV1alphaNotificationConfigFormGroup() {
		return new FormGroup<GoogleCloudBeyondcorpAppconnectorsV1alphaNotificationConfigFormProperties>({
		});

	}


	/** The configuration for Pub/Sub messaging for the AppConnector. */
	export interface GoogleCloudBeyondcorpAppconnectorsV1alphaNotificationConfigCloudPubSubNotificationConfig {

		/** The Pub/Sub subscription the AppConnector uses to receive notifications. */
		pubsubSubscription?: string | null;
	}

	/** The configuration for Pub/Sub messaging for the AppConnector. */
	export interface GoogleCloudBeyondcorpAppconnectorsV1alphaNotificationConfigCloudPubSubNotificationConfigFormProperties {

		/** The Pub/Sub subscription the AppConnector uses to receive notifications. */
		pubsubSubscription: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudBeyondcorpAppconnectorsV1alphaNotificationConfigCloudPubSubNotificationConfigFormGroup() {
		return new FormGroup<GoogleCloudBeyondcorpAppconnectorsV1alphaNotificationConfigCloudPubSubNotificationConfigFormProperties>({
			pubsubSubscription: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Represents the metadata of the long-running operation. */
	export interface GoogleCloudBeyondcorpAppconnectorsV1alphaAppConnectorOperationMetadata {

		/** Output only. API version used to start the operation. */
		apiVersion?: string | null;

		/** Output only. The time the operation was created. */
		createTime?: string | null;

		/** Output only. The time the operation finished running. */
		endTime?: string | null;

		/** Output only. Identifies whether the user has requested cancellation of the operation. Operations that have successfully been cancelled have Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`. */
		requestedCancellation?: boolean | null;

		/** Output only. Human-readable status of the operation, if any. */
		statusMessage?: string | null;

		/** Output only. Server-defined resource path for the target of the operation. */
		target?: string | null;

		/** Output only. Name of the verb executed by the operation. */
		verb?: string | null;
	}

	/** Represents the metadata of the long-running operation. */
	export interface GoogleCloudBeyondcorpAppconnectorsV1alphaAppConnectorOperationMetadataFormProperties {

		/** Output only. API version used to start the operation. */
		apiVersion: FormControl<string | null | undefined>,

		/** Output only. The time the operation was created. */
		createTime: FormControl<string | null | undefined>,

		/** Output only. The time the operation finished running. */
		endTime: FormControl<string | null | undefined>,

		/** Output only. Identifies whether the user has requested cancellation of the operation. Operations that have successfully been cancelled have Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`. */
		requestedCancellation: FormControl<boolean | null | undefined>,

		/** Output only. Human-readable status of the operation, if any. */
		statusMessage: FormControl<string | null | undefined>,

		/** Output only. Server-defined resource path for the target of the operation. */
		target: FormControl<string | null | undefined>,

		/** Output only. Name of the verb executed by the operation. */
		verb: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudBeyondcorpAppconnectorsV1alphaAppConnectorOperationMetadataFormGroup() {
		return new FormGroup<GoogleCloudBeyondcorpAppconnectorsV1alphaAppConnectorOperationMetadataFormProperties>({
			apiVersion: new FormControl<string | null | undefined>(undefined),
			createTime: new FormControl<string | null | undefined>(undefined),
			endTime: new FormControl<string | null | undefined>(undefined),
			requestedCancellation: new FormControl<boolean | null | undefined>(undefined),
			statusMessage: new FormControl<string | null | undefined>(undefined),
			target: new FormControl<string | null | undefined>(undefined),
			verb: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** ContainerHealthDetails reflects the health details of a container. */
	export interface GoogleCloudBeyondcorpAppconnectorsV1alphaContainerHealthDetails {

		/** The version of the current config. */
		currentConfigVersion?: string | null;

		/** The latest error message. */
		errorMsg?: string | null;

		/** The version of the expected config. */
		expectedConfigVersion?: string | null;

		/** The extended status. Such as ExitCode, StartedAt, FinishedAt, etc. */
		extendedStatus?: {[id: string]: string };
	}

	/** ContainerHealthDetails reflects the health details of a container. */
	export interface GoogleCloudBeyondcorpAppconnectorsV1alphaContainerHealthDetailsFormProperties {

		/** The version of the current config. */
		currentConfigVersion: FormControl<string | null | undefined>,

		/** The latest error message. */
		errorMsg: FormControl<string | null | undefined>,

		/** The version of the expected config. */
		expectedConfigVersion: FormControl<string | null | undefined>,

		/** The extended status. Such as ExitCode, StartedAt, FinishedAt, etc. */
		extendedStatus: FormControl<{[id: string]: string } | null | undefined>,
	}
	export function CreateGoogleCloudBeyondcorpAppconnectorsV1alphaContainerHealthDetailsFormGroup() {
		return new FormGroup<GoogleCloudBeyondcorpAppconnectorsV1alphaContainerHealthDetailsFormProperties>({
			currentConfigVersion: new FormControl<string | null | undefined>(undefined),
			errorMsg: new FormControl<string | null | undefined>(undefined),
			expectedConfigVersion: new FormControl<string | null | undefined>(undefined),
			extendedStatus: new FormControl<{[id: string]: string } | null | undefined>(undefined),
		});

	}


	/** Response message for BeyondCorp.ListAppConnectors. */
	export interface GoogleCloudBeyondcorpAppconnectorsV1alphaListAppConnectorsResponse {

		/** A list of BeyondCorp AppConnectors in the project. */
		appConnectors?: Array<GoogleCloudBeyondcorpAppconnectorsV1alphaAppConnector>;

		/** A token to retrieve the next page of results, or empty if there are no more results in the list. */
		nextPageToken?: string | null;

		/** A list of locations that could not be reached. */
		unreachable?: Array<string>;
	}

	/** Response message for BeyondCorp.ListAppConnectors. */
	export interface GoogleCloudBeyondcorpAppconnectorsV1alphaListAppConnectorsResponseFormProperties {

		/** A token to retrieve the next page of results, or empty if there are no more results in the list. */
		nextPageToken: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudBeyondcorpAppconnectorsV1alphaListAppConnectorsResponseFormGroup() {
		return new FormGroup<GoogleCloudBeyondcorpAppconnectorsV1alphaListAppConnectorsResponseFormProperties>({
			nextPageToken: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** RemoteAgentDetails reflects the details of a remote agent. */
	export interface GoogleCloudBeyondcorpAppconnectorsV1alphaRemoteAgentDetails {
	}

	/** RemoteAgentDetails reflects the details of a remote agent. */
	export interface GoogleCloudBeyondcorpAppconnectorsV1alphaRemoteAgentDetailsFormProperties {
	}
	export function CreateGoogleCloudBeyondcorpAppconnectorsV1alphaRemoteAgentDetailsFormGroup() {
		return new FormGroup<GoogleCloudBeyondcorpAppconnectorsV1alphaRemoteAgentDetailsFormProperties>({
		});

	}


	/** Request report the connector status. */
	export interface GoogleCloudBeyondcorpAppconnectorsV1alphaReportStatusRequest {

		/** Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000). */
		requestId?: string | null;

		/** ResourceInfo represents the information/status of an app connector resource. Such as: - remote_agent - container - runtime - appgateway - appconnector - appconnection - tunnel - logagent */
		resourceInfo?: GoogleCloudBeyondcorpAppconnectorsV1alphaResourceInfo;

		/** Optional. If set, validates request by executing a dry-run which would not alter the resource in any way. */
		validateOnly?: boolean | null;
	}

	/** Request report the connector status. */
	export interface GoogleCloudBeyondcorpAppconnectorsV1alphaReportStatusRequestFormProperties {

		/** Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000). */
		requestId: FormControl<string | null | undefined>,

		/** Optional. If set, validates request by executing a dry-run which would not alter the resource in any way. */
		validateOnly: FormControl<boolean | null | undefined>,
	}
	export function CreateGoogleCloudBeyondcorpAppconnectorsV1alphaReportStatusRequestFormGroup() {
		return new FormGroup<GoogleCloudBeyondcorpAppconnectorsV1alphaReportStatusRequestFormProperties>({
			requestId: new FormControl<string | null | undefined>(undefined),
			validateOnly: new FormControl<boolean | null | undefined>(undefined),
		});

	}


	/** Response message for BeyondCorp.ResolveInstanceConfig. */
	export interface GoogleCloudBeyondcorpAppconnectorsV1alphaResolveInstanceConfigResponse {

		/** AppConnectorInstanceConfig defines the instance config of a AppConnector. */
		instanceConfig?: GoogleCloudBeyondcorpAppconnectorsV1alphaAppConnectorInstanceConfig;
	}

	/** Response message for BeyondCorp.ResolveInstanceConfig. */
	export interface GoogleCloudBeyondcorpAppconnectorsV1alphaResolveInstanceConfigResponseFormProperties {
	}
	export function CreateGoogleCloudBeyondcorpAppconnectorsV1alphaResolveInstanceConfigResponseFormGroup() {
		return new FormGroup<GoogleCloudBeyondcorpAppconnectorsV1alphaResolveInstanceConfigResponseFormProperties>({
		});

	}


	/** Represents the metadata of the long-running operation. */
	export interface GoogleCloudBeyondcorpAppgatewaysV1AppGatewayOperationMetadata {

		/** Output only. API version used to start the operation. */
		apiVersion?: string | null;

		/** Output only. The time the operation was created. */
		createTime?: string | null;

		/** Output only. The time the operation finished running. */
		endTime?: string | null;

		/** Output only. Identifies whether the user has requested cancellation of the operation. Operations that have successfully been cancelled have Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`. */
		requestedCancellation?: boolean | null;

		/** Output only. Human-readable status of the operation, if any. */
		statusMessage?: string | null;

		/** Output only. Server-defined resource path for the target of the operation. */
		target?: string | null;

		/** Output only. Name of the verb executed by the operation. */
		verb?: string | null;
	}

	/** Represents the metadata of the long-running operation. */
	export interface GoogleCloudBeyondcorpAppgatewaysV1AppGatewayOperationMetadataFormProperties {

		/** Output only. API version used to start the operation. */
		apiVersion: FormControl<string | null | undefined>,

		/** Output only. The time the operation was created. */
		createTime: FormControl<string | null | undefined>,

		/** Output only. The time the operation finished running. */
		endTime: FormControl<string | null | undefined>,

		/** Output only. Identifies whether the user has requested cancellation of the operation. Operations that have successfully been cancelled have Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`. */
		requestedCancellation: FormControl<boolean | null | undefined>,

		/** Output only. Human-readable status of the operation, if any. */
		statusMessage: FormControl<string | null | undefined>,

		/** Output only. Server-defined resource path for the target of the operation. */
		target: FormControl<string | null | undefined>,

		/** Output only. Name of the verb executed by the operation. */
		verb: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudBeyondcorpAppgatewaysV1AppGatewayOperationMetadataFormGroup() {
		return new FormGroup<GoogleCloudBeyondcorpAppgatewaysV1AppGatewayOperationMetadataFormProperties>({
			apiVersion: new FormControl<string | null | undefined>(undefined),
			createTime: new FormControl<string | null | undefined>(undefined),
			endTime: new FormControl<string | null | undefined>(undefined),
			requestedCancellation: new FormControl<boolean | null | undefined>(undefined),
			statusMessage: new FormControl<string | null | undefined>(undefined),
			target: new FormControl<string | null | undefined>(undefined),
			verb: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Browser DLP Rule for a PartnerTenant */
	export interface GoogleCloudBeyondcorpPartnerservicesV1alphaBrowserDlpRule {

		/** Message to capture group information */
		group?: GoogleCloudBeyondcorpPartnerservicesV1alphaGroup;

		/** Output only. Unique resource name. The name is ignored when creating BrowserDlpRule. */
		name?: string | null;

		/** Message to capture settings for a BrowserDlpRule */
		ruleSetting?: GoogleCloudBeyondcorpPartnerservicesV1alphaRuleSetting;
	}

	/** Browser DLP Rule for a PartnerTenant */
	export interface GoogleCloudBeyondcorpPartnerservicesV1alphaBrowserDlpRuleFormProperties {

		/** Output only. Unique resource name. The name is ignored when creating BrowserDlpRule. */
		name: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudBeyondcorpPartnerservicesV1alphaBrowserDlpRuleFormGroup() {
		return new FormGroup<GoogleCloudBeyondcorpPartnerservicesV1alphaBrowserDlpRuleFormProperties>({
			name: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Message to capture group information */
	export interface GoogleCloudBeyondcorpPartnerservicesV1alphaGroup {

		/** The group email id */
		email?: string | null;

		/** Google group id */
		id?: string | null;
	}

	/** Message to capture group information */
	export interface GoogleCloudBeyondcorpPartnerservicesV1alphaGroupFormProperties {

		/** The group email id */
		email: FormControl<string | null | undefined>,

		/** Google group id */
		id: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudBeyondcorpPartnerservicesV1alphaGroupFormGroup() {
		return new FormGroup<GoogleCloudBeyondcorpPartnerservicesV1alphaGroupFormProperties>({
			email: new FormControl<string | null | undefined>(undefined),
			id: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Message to capture settings for a BrowserDlpRule */
	export interface GoogleCloudBeyondcorpPartnerservicesV1alphaRuleSetting {

		/** Required. Immutable. The type of the Setting. . */
		type?: string | null;

		/** Required. The value of the Setting. */
		value?: {[id: string]: any };
	}

	/** Message to capture settings for a BrowserDlpRule */
	export interface GoogleCloudBeyondcorpPartnerservicesV1alphaRuleSettingFormProperties {

		/** Required. Immutable. The type of the Setting. . */
		type: FormControl<string | null | undefined>,

		/** Required. The value of the Setting. */
		value: FormControl<{[id: string]: any } | null | undefined>,
	}
	export function CreateGoogleCloudBeyondcorpPartnerservicesV1alphaRuleSettingFormGroup() {
		return new FormGroup<GoogleCloudBeyondcorpPartnerservicesV1alphaRuleSettingFormProperties>({
			type: new FormControl<string | null | undefined>(undefined),
			value: new FormControl<{[id: string]: any } | null | undefined>(undefined),
		});

	}


	/** Message contains the JWT encryption information for the proxy server. */
	export interface GoogleCloudBeyondcorpPartnerservicesV1alphaEncryptionInfo {

		/** Optional. Service Account for encryption key. */
		encryptionSaEmail?: string | null;

		/** Optional. JWK in string. */
		jwk?: string | null;
	}

	/** Message contains the JWT encryption information for the proxy server. */
	export interface GoogleCloudBeyondcorpPartnerservicesV1alphaEncryptionInfoFormProperties {

		/** Optional. Service Account for encryption key. */
		encryptionSaEmail: FormControl<string | null | undefined>,

		/** Optional. JWK in string. */
		jwk: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudBeyondcorpPartnerservicesV1alphaEncryptionInfoFormGroup() {
		return new FormGroup<GoogleCloudBeyondcorpPartnerservicesV1alphaEncryptionInfoFormProperties>({
			encryptionSaEmail: new FormControl<string | null | undefined>(undefined),
			jwk: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Message for response to listing BrowserDlpRules. */
	export interface GoogleCloudBeyondcorpPartnerservicesV1alphaListBrowserDlpRulesResponse {

		/** The list of BrowserDlpRule objects. */
		browserDlpRules?: Array<GoogleCloudBeyondcorpPartnerservicesV1alphaBrowserDlpRule>;
	}

	/** Message for response to listing BrowserDlpRules. */
	export interface GoogleCloudBeyondcorpPartnerservicesV1alphaListBrowserDlpRulesResponseFormProperties {
	}
	export function CreateGoogleCloudBeyondcorpPartnerservicesV1alphaListBrowserDlpRulesResponseFormGroup() {
		return new FormGroup<GoogleCloudBeyondcorpPartnerservicesV1alphaListBrowserDlpRulesResponseFormProperties>({
		});

	}


	/** Message for response to listing PartnerTenants. */
	export interface GoogleCloudBeyondcorpPartnerservicesV1alphaListPartnerTenantsResponse {

		/** A token to retrieve the next page of results, or empty if there are no more results in the list. */
		nextPageToken?: string | null;

		/** The list of PartnerTenant objects. */
		partnerTenants?: Array<GoogleCloudBeyondcorpPartnerservicesV1alphaPartnerTenant>;
	}

	/** Message for response to listing PartnerTenants. */
	export interface GoogleCloudBeyondcorpPartnerservicesV1alphaListPartnerTenantsResponseFormProperties {

		/** A token to retrieve the next page of results, or empty if there are no more results in the list. */
		nextPageToken: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudBeyondcorpPartnerservicesV1alphaListPartnerTenantsResponseFormGroup() {
		return new FormGroup<GoogleCloudBeyondcorpPartnerservicesV1alphaListPartnerTenantsResponseFormProperties>({
			nextPageToken: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Information about a BeyoncCorp Enterprise PartnerTenant. */
	export interface GoogleCloudBeyondcorpPartnerservicesV1alphaPartnerTenant {

		/** Output only. Timestamp when the resource was created. */
		createTime?: string | null;

		/** Optional. An arbitrary caller-provided name for the PartnerTenant. Cannot exceed 64 characters. */
		displayName?: string | null;

		/** Message to capture group information */
		group?: GoogleCloudBeyondcorpPartnerservicesV1alphaGroup;

		/** Output only. Unique resource name of the PartnerTenant. The name is ignored when creating PartnerTenant. */
		name?: string | null;

		/** Metadata associated with PartnerTenant and is provided by the Partner. */
		partnerMetadata?: GoogleCloudBeyondcorpPartnerservicesV1alphaPartnerMetadata;

		/** Output only. Timestamp when the resource was last modified. */
		updateTime?: string | null;
	}

	/** Information about a BeyoncCorp Enterprise PartnerTenant. */
	export interface GoogleCloudBeyondcorpPartnerservicesV1alphaPartnerTenantFormProperties {

		/** Output only. Timestamp when the resource was created. */
		createTime: FormControl<string | null | undefined>,

		/** Optional. An arbitrary caller-provided name for the PartnerTenant. Cannot exceed 64 characters. */
		displayName: FormControl<string | null | undefined>,

		/** Output only. Unique resource name of the PartnerTenant. The name is ignored when creating PartnerTenant. */
		name: FormControl<string | null | undefined>,

		/** Output only. Timestamp when the resource was last modified. */
		updateTime: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudBeyondcorpPartnerservicesV1alphaPartnerTenantFormGroup() {
		return new FormGroup<GoogleCloudBeyondcorpPartnerservicesV1alphaPartnerTenantFormProperties>({
			createTime: new FormControl<string | null | undefined>(undefined),
			displayName: new FormControl<string | null | undefined>(undefined),
			name: new FormControl<string | null | undefined>(undefined),
			updateTime: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Metadata associated with PartnerTenant and is provided by the Partner. */
	export interface GoogleCloudBeyondcorpPartnerservicesV1alphaPartnerMetadata {

		/** Optional. UUID used by the Partner to refer to the PartnerTenant in their internal systems. */
		internalTenantId?: string | null;

		/** Optional. UUID used by the Partner to refer to the PartnerTenant in their internal systems. */
		partnerTenantId?: string | null;
	}

	/** Metadata associated with PartnerTenant and is provided by the Partner. */
	export interface GoogleCloudBeyondcorpPartnerservicesV1alphaPartnerMetadataFormProperties {

		/** Optional. UUID used by the Partner to refer to the PartnerTenant in their internal systems. */
		internalTenantId: FormControl<string | null | undefined>,

		/** Optional. UUID used by the Partner to refer to the PartnerTenant in their internal systems. */
		partnerTenantId: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudBeyondcorpPartnerservicesV1alphaPartnerMetadataFormGroup() {
		return new FormGroup<GoogleCloudBeyondcorpPartnerservicesV1alphaPartnerMetadataFormProperties>({
			internalTenantId: new FormControl<string | null | undefined>(undefined),
			partnerTenantId: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Message for response to listing ProxyConfigs. */
	export interface GoogleCloudBeyondcorpPartnerservicesV1alphaListProxyConfigsResponse {

		/** A token to retrieve the next page of results, or empty if there are no more results in the list. */
		nextPageToken?: string | null;

		/** The list of ProxyConfig objects. */
		proxyConfigs?: Array<GoogleCloudBeyondcorpPartnerservicesV1alphaProxyConfig>;
	}

	/** Message for response to listing ProxyConfigs. */
	export interface GoogleCloudBeyondcorpPartnerservicesV1alphaListProxyConfigsResponseFormProperties {

		/** A token to retrieve the next page of results, or empty if there are no more results in the list. */
		nextPageToken: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudBeyondcorpPartnerservicesV1alphaListProxyConfigsResponseFormGroup() {
		return new FormGroup<GoogleCloudBeyondcorpPartnerservicesV1alphaListProxyConfigsResponseFormProperties>({
			nextPageToken: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Proxy Configuration of a PartnerTenant. */
	export interface GoogleCloudBeyondcorpPartnerservicesV1alphaProxyConfig {

		/** Output only. Timestamp when the resource was created. */
		createTime?: string | null;

		/** Optional. An arbitrary caller-provided name for the ProxyConfig. Cannot exceed 64 characters. */
		displayName?: string | null;

		/** Message contains the JWT encryption information for the proxy server. */
		encryptionInfo?: GoogleCloudBeyondcorpPartnerservicesV1alphaEncryptionInfo;

		/** Output only. ProxyConfig resource name. */
		name?: string | null;

		/** Required. The URI of the proxy server. */
		proxyUri?: string | null;

		/** Message contains the routing information to direct traffic to the proxy server. */
		routingInfo?: GoogleCloudBeyondcorpPartnerservicesV1alphaRoutingInfo;

		/** Message contains the transport layer information to verify the proxy server. */
		transportInfo?: GoogleCloudBeyondcorpPartnerservicesV1alphaTransportInfo;

		/** Output only. Timestamp when the resource was last modified. */
		updateTime?: string | null;
	}

	/** Proxy Configuration of a PartnerTenant. */
	export interface GoogleCloudBeyondcorpPartnerservicesV1alphaProxyConfigFormProperties {

		/** Output only. Timestamp when the resource was created. */
		createTime: FormControl<string | null | undefined>,

		/** Optional. An arbitrary caller-provided name for the ProxyConfig. Cannot exceed 64 characters. */
		displayName: FormControl<string | null | undefined>,

		/** Output only. ProxyConfig resource name. */
		name: FormControl<string | null | undefined>,

		/** Required. The URI of the proxy server. */
		proxyUri: FormControl<string | null | undefined>,

		/** Output only. Timestamp when the resource was last modified. */
		updateTime: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudBeyondcorpPartnerservicesV1alphaProxyConfigFormGroup() {
		return new FormGroup<GoogleCloudBeyondcorpPartnerservicesV1alphaProxyConfigFormProperties>({
			createTime: new FormControl<string | null | undefined>(undefined),
			displayName: new FormControl<string | null | undefined>(undefined),
			name: new FormControl<string | null | undefined>(undefined),
			proxyUri: new FormControl<string | null | undefined>(undefined),
			updateTime: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Message contains the routing information to direct traffic to the proxy server. */
	export interface GoogleCloudBeyondcorpPartnerservicesV1alphaRoutingInfo {

		/** Required. Proxy Auto-Configuration (PAC) URI. */
		pacUri?: string | null;
	}

	/** Message contains the routing information to direct traffic to the proxy server. */
	export interface GoogleCloudBeyondcorpPartnerservicesV1alphaRoutingInfoFormProperties {

		/** Required. Proxy Auto-Configuration (PAC) URI. */
		pacUri: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudBeyondcorpPartnerservicesV1alphaRoutingInfoFormGroup() {
		return new FormGroup<GoogleCloudBeyondcorpPartnerservicesV1alphaRoutingInfoFormProperties>({
			pacUri: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Message contains the transport layer information to verify the proxy server. */
	export interface GoogleCloudBeyondcorpPartnerservicesV1alphaTransportInfo {

		/** Required. PEM encoded CA certificate associated with the proxy server certificate. */
		serverCaCertPem?: string | null;

		/** Optional. PEM encoded CA certificate associated with the certificate used by proxy server for SSL decryption. */
		sslDecryptCaCertPem?: string | null;
	}

	/** Message contains the transport layer information to verify the proxy server. */
	export interface GoogleCloudBeyondcorpPartnerservicesV1alphaTransportInfoFormProperties {

		/** Required. PEM encoded CA certificate associated with the proxy server certificate. */
		serverCaCertPem: FormControl<string | null | undefined>,

		/** Optional. PEM encoded CA certificate associated with the certificate used by proxy server for SSL decryption. */
		sslDecryptCaCertPem: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudBeyondcorpPartnerservicesV1alphaTransportInfoFormGroup() {
		return new FormGroup<GoogleCloudBeyondcorpPartnerservicesV1alphaTransportInfoFormProperties>({
			serverCaCertPem: new FormControl<string | null | undefined>(undefined),
			sslDecryptCaCertPem: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Represents the metadata of the long-running operation. */
	export interface GoogleCloudBeyondcorpPartnerservicesV1alphaPartnerServiceOperationMetadata {

		/** Output only. API version used to start the operation. */
		apiVersion?: string | null;

		/** Output only. The time the operation was created. */
		createTime?: string | null;

		/** Output only. The time the operation finished running. */
		endTime?: string | null;

		/** Output only. Identifies whether the caller has requested cancellation of the operation. Operations that have successfully been cancelled have Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`. */
		requestedCancellation?: boolean | null;

		/** Output only. Human-readable status of the operation, if any. */
		statusMessage?: string | null;

		/** Output only. Server-defined resource path for the target of the operation. */
		target?: string | null;

		/** Output only. Name of the verb executed by the operation. */
		verb?: string | null;
	}

	/** Represents the metadata of the long-running operation. */
	export interface GoogleCloudBeyondcorpPartnerservicesV1alphaPartnerServiceOperationMetadataFormProperties {

		/** Output only. API version used to start the operation. */
		apiVersion: FormControl<string | null | undefined>,

		/** Output only. The time the operation was created. */
		createTime: FormControl<string | null | undefined>,

		/** Output only. The time the operation finished running. */
		endTime: FormControl<string | null | undefined>,

		/** Output only. Identifies whether the caller has requested cancellation of the operation. Operations that have successfully been cancelled have Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`. */
		requestedCancellation: FormControl<boolean | null | undefined>,

		/** Output only. Human-readable status of the operation, if any. */
		statusMessage: FormControl<string | null | undefined>,

		/** Output only. Server-defined resource path for the target of the operation. */
		target: FormControl<string | null | undefined>,

		/** Output only. Name of the verb executed by the operation. */
		verb: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudBeyondcorpPartnerservicesV1alphaPartnerServiceOperationMetadataFormGroup() {
		return new FormGroup<GoogleCloudBeyondcorpPartnerservicesV1alphaPartnerServiceOperationMetadataFormProperties>({
			apiVersion: new FormControl<string | null | undefined>(undefined),
			createTime: new FormControl<string | null | undefined>(undefined),
			endTime: new FormControl<string | null | undefined>(undefined),
			requestedCancellation: new FormControl<boolean | null | undefined>(undefined),
			statusMessage: new FormControl<string | null | undefined>(undefined),
			target: new FormControl<string | null | undefined>(undefined),
			verb: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Represents the metadata of the long-running operation. */
	export interface GoogleCloudBeyondcorpPartnerservicesV1mainPartnerServiceOperationMetadata {

		/** Output only. API version used to start the operation. */
		apiVersion?: string | null;

		/** Output only. The time the operation was created. */
		createTime?: string | null;

		/** Output only. The time the operation finished running. */
		endTime?: string | null;

		/** Output only. Identifies whether the caller has requested cancellation of the operation. Operations that have successfully been cancelled have Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`. */
		requestedCancellation?: boolean | null;

		/** Output only. Human-readable status of the operation, if any. */
		statusMessage?: string | null;

		/** Output only. Server-defined resource path for the target of the operation. */
		target?: string | null;

		/** Output only. Name of the verb executed by the operation. */
		verb?: string | null;
	}

	/** Represents the metadata of the long-running operation. */
	export interface GoogleCloudBeyondcorpPartnerservicesV1mainPartnerServiceOperationMetadataFormProperties {

		/** Output only. API version used to start the operation. */
		apiVersion: FormControl<string | null | undefined>,

		/** Output only. The time the operation was created. */
		createTime: FormControl<string | null | undefined>,

		/** Output only. The time the operation finished running. */
		endTime: FormControl<string | null | undefined>,

		/** Output only. Identifies whether the caller has requested cancellation of the operation. Operations that have successfully been cancelled have Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`. */
		requestedCancellation: FormControl<boolean | null | undefined>,

		/** Output only. Human-readable status of the operation, if any. */
		statusMessage: FormControl<string | null | undefined>,

		/** Output only. Server-defined resource path for the target of the operation. */
		target: FormControl<string | null | undefined>,

		/** Output only. Name of the verb executed by the operation. */
		verb: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudBeyondcorpPartnerservicesV1mainPartnerServiceOperationMetadataFormGroup() {
		return new FormGroup<GoogleCloudBeyondcorpPartnerservicesV1mainPartnerServiceOperationMetadataFormProperties>({
			apiVersion: new FormControl<string | null | undefined>(undefined),
			createTime: new FormControl<string | null | undefined>(undefined),
			endTime: new FormControl<string | null | undefined>(undefined),
			requestedCancellation: new FormControl<boolean | null | undefined>(undefined),
			statusMessage: new FormControl<string | null | undefined>(undefined),
			target: new FormControl<string | null | undefined>(undefined),
			verb: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** The configuration that was applied to generate the result. */
	export interface GoogleCloudBeyondcorpSaasplatformInsightsV1alphaAppliedConfig {

		/** Output only. Aggregation type applied. */
		aggregation?: GoogleCloudBeyondcorpSaasplatformInsightsV1alphaAppliedConfigAggregation | null;

		/** Customised grouping option that allows setting the group_by fields and also the filters togather for a configured insight request. */
		customGrouping?: GoogleCloudBeyondcorpSaasplatformInsightsV1alphaCustomGrouping;

		/** Output only. Ending time for the duration for which insight was pulled. */
		endTime?: string | null;

		/** Output only. Filters applied. */
		fieldFilter?: string | null;

		/** Output only. Group id of the grouping applied. */
		group?: string | null;

		/** Output only. Starting time for the duration for which insight was pulled. */
		startTime?: string | null;
	}

	/** The configuration that was applied to generate the result. */
	export interface GoogleCloudBeyondcorpSaasplatformInsightsV1alphaAppliedConfigFormProperties {

		/** Output only. Aggregation type applied. */
		aggregation: FormControl<GoogleCloudBeyondcorpSaasplatformInsightsV1alphaAppliedConfigAggregation | null | undefined>,

		/** Output only. Ending time for the duration for which insight was pulled. */
		endTime: FormControl<string | null | undefined>,

		/** Output only. Filters applied. */
		fieldFilter: FormControl<string | null | undefined>,

		/** Output only. Group id of the grouping applied. */
		group: FormControl<string | null | undefined>,

		/** Output only. Starting time for the duration for which insight was pulled. */
		startTime: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudBeyondcorpSaasplatformInsightsV1alphaAppliedConfigFormGroup() {
		return new FormGroup<GoogleCloudBeyondcorpSaasplatformInsightsV1alphaAppliedConfigFormProperties>({
			aggregation: new FormControl<GoogleCloudBeyondcorpSaasplatformInsightsV1alphaAppliedConfigAggregation | null | undefined>(undefined),
			endTime: new FormControl<string | null | undefined>(undefined),
			fieldFilter: new FormControl<string | null | undefined>(undefined),
			group: new FormControl<string | null | undefined>(undefined),
			startTime: new FormControl<string | null | undefined>(undefined),
		});

	}

	export enum GoogleCloudBeyondcorpSaasplatformInsightsV1alphaAppliedConfigAggregation { AGGREGATION_UNSPECIFIED = 'AGGREGATION_UNSPECIFIED', HOURLY = 'HOURLY', DAILY = 'DAILY', WEEKLY = 'WEEKLY', MONTHLY = 'MONTHLY', CUSTOM_DATE_RANGE = 'CUSTOM_DATE_RANGE' }


	/** Customised grouping option that allows setting the group_by fields and also the filters togather for a configured insight request. */
	export interface GoogleCloudBeyondcorpSaasplatformInsightsV1alphaCustomGrouping {

		/** Optional. Filterable parameters to be added to the grouping clause. Available fields could be fetched by calling insight list and get APIs in `BASIC` view. `=` is the only comparison operator supported. `AND` is the only logical operator supported. Usage: field_filter="fieldName1=fieldVal1 AND fieldName2=fieldVal2". NOTE: Only `AND` conditions are allowed. NOTE: Use the `filter_alias` from `Insight.Metadata.Field` message for the filtering the corresponding fields in this filter field. (These expressions are based on the filter language described at https://google.aip.dev/160). */
		fieldFilter?: string | null;

		/** Required. Fields to be used for grouping. NOTE: Use the `filter_alias` from `Insight.Metadata.Field` message for declaring the fields to be grouped-by here. */
		groupFields?: Array<string>;
	}

	/** Customised grouping option that allows setting the group_by fields and also the filters togather for a configured insight request. */
	export interface GoogleCloudBeyondcorpSaasplatformInsightsV1alphaCustomGroupingFormProperties {

		/** Optional. Filterable parameters to be added to the grouping clause. Available fields could be fetched by calling insight list and get APIs in `BASIC` view. `=` is the only comparison operator supported. `AND` is the only logical operator supported. Usage: field_filter="fieldName1=fieldVal1 AND fieldName2=fieldVal2". NOTE: Only `AND` conditions are allowed. NOTE: Use the `filter_alias` from `Insight.Metadata.Field` message for the filtering the corresponding fields in this filter field. (These expressions are based on the filter language described at https://google.aip.dev/160). */
		fieldFilter: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudBeyondcorpSaasplatformInsightsV1alphaCustomGroupingFormGroup() {
		return new FormGroup<GoogleCloudBeyondcorpSaasplatformInsightsV1alphaCustomGroupingFormProperties>({
			fieldFilter: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** The response for the configured insight. */
	export interface GoogleCloudBeyondcorpSaasplatformInsightsV1alphaConfiguredInsightResponse {

		/** The configuration that was applied to generate the result. */
		appliedConfig?: GoogleCloudBeyondcorpSaasplatformInsightsV1alphaAppliedConfig;

		/** Output only. Next page token to be fetched. Set to empty or NULL if there are no more pages available. */
		nextPageToken?: string | null;

		/** Output only. Result rows returned containing the required value(s) for configured insight. */
		rows?: Array<GoogleCloudBeyondcorpSaasplatformInsightsV1alphaRow>;
	}

	/** The response for the configured insight. */
	export interface GoogleCloudBeyondcorpSaasplatformInsightsV1alphaConfiguredInsightResponseFormProperties {

		/** Output only. Next page token to be fetched. Set to empty or NULL if there are no more pages available. */
		nextPageToken: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudBeyondcorpSaasplatformInsightsV1alphaConfiguredInsightResponseFormGroup() {
		return new FormGroup<GoogleCloudBeyondcorpSaasplatformInsightsV1alphaConfiguredInsightResponseFormProperties>({
			nextPageToken: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Row of the fetch response consisting of a set of entries. */
	export interface GoogleCloudBeyondcorpSaasplatformInsightsV1alphaRow {

		/** Output only. Columns/entries/key-vals in the result. */
		fieldValues?: Array<GoogleCloudBeyondcorpSaasplatformInsightsV1alphaRowFieldVal>;
	}

	/** Row of the fetch response consisting of a set of entries. */
	export interface GoogleCloudBeyondcorpSaasplatformInsightsV1alphaRowFormProperties {
	}
	export function CreateGoogleCloudBeyondcorpSaasplatformInsightsV1alphaRowFormGroup() {
		return new FormGroup<GoogleCloudBeyondcorpSaasplatformInsightsV1alphaRowFormProperties>({
		});

	}


	/** Column or key value pair from the request as part of key to use in query or a single pair of the fetch response. */
	export interface GoogleCloudBeyondcorpSaasplatformInsightsV1alphaRowFieldVal {

		/** Output only. Name of the field. */
		displayName?: string | null;

		/** Output only. Field name to be used in filter while requesting configured insight filtered on this field. */
		filterAlias?: string | null;

		/** Output only. Field id. */
		id?: string | null;

		/** Output only. Value of the field in string format. Acceptable values are strings or numbers. */
		value?: string | null;
	}

	/** Column or key value pair from the request as part of key to use in query or a single pair of the fetch response. */
	export interface GoogleCloudBeyondcorpSaasplatformInsightsV1alphaRowFieldValFormProperties {

		/** Output only. Name of the field. */
		displayName: FormControl<string | null | undefined>,

		/** Output only. Field name to be used in filter while requesting configured insight filtered on this field. */
		filterAlias: FormControl<string | null | undefined>,

		/** Output only. Field id. */
		id: FormControl<string | null | undefined>,

		/** Output only. Value of the field in string format. Acceptable values are strings or numbers. */
		value: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudBeyondcorpSaasplatformInsightsV1alphaRowFieldValFormGroup() {
		return new FormGroup<GoogleCloudBeyondcorpSaasplatformInsightsV1alphaRowFieldValFormProperties>({
			displayName: new FormControl<string | null | undefined>(undefined),
			filterAlias: new FormControl<string | null | undefined>(undefined),
			id: new FormControl<string | null | undefined>(undefined),
			value: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** The Insight object with configuration that was returned and actual list of records. */
	export interface GoogleCloudBeyondcorpSaasplatformInsightsV1alphaInsight {

		/** The configuration that was applied to generate the result. */
		appliedConfig?: GoogleCloudBeyondcorpSaasplatformInsightsV1alphaAppliedConfig;

		/** Insight filters, groupings and aggregations that can be applied for the insight. Examples: aggregations, groups, field filters. */
		metadata?: GoogleCloudBeyondcorpSaasplatformInsightsV1alphaInsightMetadata;

		/** Output only. The insight resource name. e.g. `organizations/{organization_id}/locations/{location_id}/insights/{insight_id}` OR `projects/{project_id}/locations/{location_id}/insights/{insight_id}`. */
		name?: string | null;

		/** Output only. Result rows returned containing the required value(s). */
		rows?: Array<GoogleCloudBeyondcorpSaasplatformInsightsV1alphaRow>;
	}

	/** The Insight object with configuration that was returned and actual list of records. */
	export interface GoogleCloudBeyondcorpSaasplatformInsightsV1alphaInsightFormProperties {

		/** Output only. The insight resource name. e.g. `organizations/{organization_id}/locations/{location_id}/insights/{insight_id}` OR `projects/{project_id}/locations/{location_id}/insights/{insight_id}`. */
		name: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudBeyondcorpSaasplatformInsightsV1alphaInsightFormGroup() {
		return new FormGroup<GoogleCloudBeyondcorpSaasplatformInsightsV1alphaInsightFormProperties>({
			name: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Insight filters, groupings and aggregations that can be applied for the insight. Examples: aggregations, groups, field filters. */
	export interface GoogleCloudBeyondcorpSaasplatformInsightsV1alphaInsightMetadata {

		/** Output only. List of aggregation types available for insight. */
		aggregations?: Array<GoogleCloudBeyondcorpSaasplatformInsightsV1alphaAppliedConfigAggregation>;

		/** Output only. Category of the insight. */
		category?: string | null;

		/** Output only. Common name of the insight. */
		displayName?: string | null;

		/** Output only. List of fields available for insight. */
		fields?: Array<GoogleCloudBeyondcorpSaasplatformInsightsV1alphaInsightMetadataField>;

		/** Output only. List of groupings available for insight. */
		groups?: Array<string>;

		/** Output only. Sub-Category of the insight. */
		subCategory?: string | null;

		/** Output only. Type of the insight. It is metadata describing whether the insight is a metric (e.g. count) or a report (e.g. list, status). */
		type?: string | null;
	}

	/** Insight filters, groupings and aggregations that can be applied for the insight. Examples: aggregations, groups, field filters. */
	export interface GoogleCloudBeyondcorpSaasplatformInsightsV1alphaInsightMetadataFormProperties {

		/** Output only. Category of the insight. */
		category: FormControl<string | null | undefined>,

		/** Output only. Common name of the insight. */
		displayName: FormControl<string | null | undefined>,

		/** Output only. Sub-Category of the insight. */
		subCategory: FormControl<string | null | undefined>,

		/** Output only. Type of the insight. It is metadata describing whether the insight is a metric (e.g. count) or a report (e.g. list, status). */
		type: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudBeyondcorpSaasplatformInsightsV1alphaInsightMetadataFormGroup() {
		return new FormGroup<GoogleCloudBeyondcorpSaasplatformInsightsV1alphaInsightMetadataFormProperties>({
			category: new FormControl<string | null | undefined>(undefined),
			displayName: new FormControl<string | null | undefined>(undefined),
			subCategory: new FormControl<string | null | undefined>(undefined),
			type: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Field metadata. Commonly understandable name and description for the field. Multiple such fields constitute the Insight. */
	export interface GoogleCloudBeyondcorpSaasplatformInsightsV1alphaInsightMetadataField {

		/** Output only. Description of the field. */
		description?: string | null;

		/** Output only. Name of the field. */
		displayName?: string | null;

		/** Output only. Field name to be used in filter while requesting configured insight filtered on this field. */
		filterAlias?: string | null;

		/** Output only. Indicates whether the field can be used for filtering. */
		filterable?: boolean | null;

		/** Output only. Indicates whether the field can be used for grouping in custom grouping request. */
		groupable?: boolean | null;

		/** Output only. Field id for which this is the metadata. */
		id?: string | null;
	}

	/** Field metadata. Commonly understandable name and description for the field. Multiple such fields constitute the Insight. */
	export interface GoogleCloudBeyondcorpSaasplatformInsightsV1alphaInsightMetadataFieldFormProperties {

		/** Output only. Description of the field. */
		description: FormControl<string | null | undefined>,

		/** Output only. Name of the field. */
		displayName: FormControl<string | null | undefined>,

		/** Output only. Field name to be used in filter while requesting configured insight filtered on this field. */
		filterAlias: FormControl<string | null | undefined>,

		/** Output only. Indicates whether the field can be used for filtering. */
		filterable: FormControl<boolean | null | undefined>,

		/** Output only. Indicates whether the field can be used for grouping in custom grouping request. */
		groupable: FormControl<boolean | null | undefined>,

		/** Output only. Field id for which this is the metadata. */
		id: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudBeyondcorpSaasplatformInsightsV1alphaInsightMetadataFieldFormGroup() {
		return new FormGroup<GoogleCloudBeyondcorpSaasplatformInsightsV1alphaInsightMetadataFieldFormProperties>({
			description: new FormControl<string | null | undefined>(undefined),
			displayName: new FormControl<string | null | undefined>(undefined),
			filterAlias: new FormControl<string | null | undefined>(undefined),
			filterable: new FormControl<boolean | null | undefined>(undefined),
			groupable: new FormControl<boolean | null | undefined>(undefined),
			id: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** The response for the list of insights. */
	export interface GoogleCloudBeyondcorpSaasplatformInsightsV1alphaListInsightsResponse {

		/** Output only. List of all insights. */
		insights?: Array<GoogleCloudBeyondcorpSaasplatformInsightsV1alphaInsight>;

		/** Output only. Next page token to be fetched. Set to empty or NULL if there are no more pages available. */
		nextPageToken?: string | null;
	}

	/** The response for the list of insights. */
	export interface GoogleCloudBeyondcorpSaasplatformInsightsV1alphaListInsightsResponseFormProperties {

		/** Output only. Next page token to be fetched. Set to empty or NULL if there are no more pages available. */
		nextPageToken: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudBeyondcorpSaasplatformInsightsV1alphaListInsightsResponseFormGroup() {
		return new FormGroup<GoogleCloudBeyondcorpSaasplatformInsightsV1alphaListInsightsResponseFormProperties>({
			nextPageToken: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Response message for BeyondCorp.ListSubscriptions. */
	export interface GoogleCloudBeyondcorpSaasplatformSubscriptionsV1alphaListSubscriptionsResponse {

		/** A token to retrieve the next page of results, or empty if there are no more results in the list. */
		nextPageToken?: string | null;

		/** A list of BeyondCorp Subscriptions in the organization. */
		subscriptions?: Array<GoogleCloudBeyondcorpSaasplatformSubscriptionsV1alphaSubscription>;
	}

	/** Response message for BeyondCorp.ListSubscriptions. */
	export interface GoogleCloudBeyondcorpSaasplatformSubscriptionsV1alphaListSubscriptionsResponseFormProperties {

		/** A token to retrieve the next page of results, or empty if there are no more results in the list. */
		nextPageToken: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudBeyondcorpSaasplatformSubscriptionsV1alphaListSubscriptionsResponseFormGroup() {
		return new FormGroup<GoogleCloudBeyondcorpSaasplatformSubscriptionsV1alphaListSubscriptionsResponseFormProperties>({
			nextPageToken: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** A BeyondCorp Subscription resource represents BeyondCorp Enterprise Subscription. BeyondCorp Enterprise Subscription enables BeyondCorp Enterprise permium features for an organization. */
	export interface GoogleCloudBeyondcorpSaasplatformSubscriptionsV1alphaSubscription {

		/** Output only. Represents that, if subscription will renew or end when the term ends. */
		autoRenewEnabled?: boolean | null;

		/** Output only. Create time of the subscription. */
		createTime?: string | null;

		/** Output only. End time of the subscription. */
		endTime?: string | null;

		/** Required. Unique resource name of the Subscription. The name is ignored when creating a subscription. */
		name?: string | null;

		/** Optional. Number of seats in the subscription. */
		seatCount?: string | null;

		/** Required. SKU of subscription. */
		sku?: GoogleCloudBeyondcorpSaasplatformSubscriptionsV1alphaSubscriptionSku | null;

		/** Output only. Start time of the subscription. */
		startTime?: string | null;

		/** Output only. The current state of the subscription. */
		state?: GoogleCloudBeyondcorpSaasplatformSubscriptionsV1alphaSubscriptionState | null;

		/** Required. Type of subscription. */
		type?: GoogleCloudBeyondcorpSaasplatformSubscriptionsV1alphaSubscriptionType | null;
	}

	/** A BeyondCorp Subscription resource represents BeyondCorp Enterprise Subscription. BeyondCorp Enterprise Subscription enables BeyondCorp Enterprise permium features for an organization. */
	export interface GoogleCloudBeyondcorpSaasplatformSubscriptionsV1alphaSubscriptionFormProperties {

		/** Output only. Represents that, if subscription will renew or end when the term ends. */
		autoRenewEnabled: FormControl<boolean | null | undefined>,

		/** Output only. Create time of the subscription. */
		createTime: FormControl<string | null | undefined>,

		/** Output only. End time of the subscription. */
		endTime: FormControl<string | null | undefined>,

		/** Required. Unique resource name of the Subscription. The name is ignored when creating a subscription. */
		name: FormControl<string | null | undefined>,

		/** Optional. Number of seats in the subscription. */
		seatCount: FormControl<string | null | undefined>,

		/** Required. SKU of subscription. */
		sku: FormControl<GoogleCloudBeyondcorpSaasplatformSubscriptionsV1alphaSubscriptionSku | null | undefined>,

		/** Output only. Start time of the subscription. */
		startTime: FormControl<string | null | undefined>,

		/** Output only. The current state of the subscription. */
		state: FormControl<GoogleCloudBeyondcorpSaasplatformSubscriptionsV1alphaSubscriptionState | null | undefined>,

		/** Required. Type of subscription. */
		type: FormControl<GoogleCloudBeyondcorpSaasplatformSubscriptionsV1alphaSubscriptionType | null | undefined>,
	}
	export function CreateGoogleCloudBeyondcorpSaasplatformSubscriptionsV1alphaSubscriptionFormGroup() {
		return new FormGroup<GoogleCloudBeyondcorpSaasplatformSubscriptionsV1alphaSubscriptionFormProperties>({
			autoRenewEnabled: new FormControl<boolean | null | undefined>(undefined),
			createTime: new FormControl<string | null | undefined>(undefined),
			endTime: new FormControl<string | null | undefined>(undefined),
			name: new FormControl<string | null | undefined>(undefined),
			seatCount: new FormControl<string | null | undefined>(undefined),
			sku: new FormControl<GoogleCloudBeyondcorpSaasplatformSubscriptionsV1alphaSubscriptionSku | null | undefined>(undefined),
			startTime: new FormControl<string | null | undefined>(undefined),
			state: new FormControl<GoogleCloudBeyondcorpSaasplatformSubscriptionsV1alphaSubscriptionState | null | undefined>(undefined),
			type: new FormControl<GoogleCloudBeyondcorpSaasplatformSubscriptionsV1alphaSubscriptionType | null | undefined>(undefined),
		});

	}

	export enum GoogleCloudBeyondcorpSaasplatformSubscriptionsV1alphaSubscriptionSku { SKU_UNSPECIFIED = 'SKU_UNSPECIFIED', BCE_STANDARD_SKU = 'BCE_STANDARD_SKU' }

	export enum GoogleCloudBeyondcorpSaasplatformSubscriptionsV1alphaSubscriptionState { STATE_UNSPECIFIED = 'STATE_UNSPECIFIED', ACTIVE = 'ACTIVE', INACTIVE = 'INACTIVE', COMPLETED = 'COMPLETED' }

	export enum GoogleCloudBeyondcorpSaasplatformSubscriptionsV1alphaSubscriptionType { TYPE_UNSPECIFIED = 'TYPE_UNSPECIFIED', TRIAL = 'TRIAL', PAID = 'PAID', ALLOWLIST = 'ALLOWLIST' }


	/** The response message for Locations.ListLocations. */
	export interface GoogleCloudLocationListLocationsResponse {

		/** A list of locations that matches the specified filter in the request. */
		locations?: Array<GoogleCloudLocationLocation>;

		/** The standard List next-page token. */
		nextPageToken?: string | null;
	}

	/** The response message for Locations.ListLocations. */
	export interface GoogleCloudLocationListLocationsResponseFormProperties {

		/** The standard List next-page token. */
		nextPageToken: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudLocationListLocationsResponseFormGroup() {
		return new FormGroup<GoogleCloudLocationListLocationsResponseFormProperties>({
			nextPageToken: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** A resource that represents a Google Cloud location. */
	export interface GoogleCloudLocationLocation {

		/** The friendly name for this location, typically a nearby city name. For example, "Tokyo". */
		displayName?: string | null;

		/** Cross-service attributes for the location. For example {"cloud.googleapis.com/region": "us-east1"} */
		labels?: {[id: string]: string };

		/** The canonical id for this location. For example: `"us-east1"`. */
		locationId?: string | null;

		/** Service-specific metadata. For example the available capacity at the given location. */
		metadata?: {[id: string]: any };

		/** Resource name for the location, which may vary between implementations. For example: `"projects/example-project/locations/us-east1"` */
		name?: string | null;
	}

	/** A resource that represents a Google Cloud location. */
	export interface GoogleCloudLocationLocationFormProperties {

		/** The friendly name for this location, typically a nearby city name. For example, "Tokyo". */
		displayName: FormControl<string | null | undefined>,

		/** Cross-service attributes for the location. For example {"cloud.googleapis.com/region": "us-east1"} */
		labels: FormControl<{[id: string]: string } | null | undefined>,

		/** The canonical id for this location. For example: `"us-east1"`. */
		locationId: FormControl<string | null | undefined>,

		/** Service-specific metadata. For example the available capacity at the given location. */
		metadata: FormControl<{[id: string]: any } | null | undefined>,

		/** Resource name for the location, which may vary between implementations. For example: `"projects/example-project/locations/us-east1"` */
		name: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudLocationLocationFormGroup() {
		return new FormGroup<GoogleCloudLocationLocationFormProperties>({
			displayName: new FormControl<string | null | undefined>(undefined),
			labels: new FormControl<{[id: string]: string } | null | undefined>(undefined),
			locationId: new FormControl<string | null | undefined>(undefined),
			metadata: new FormControl<{[id: string]: any } | null | undefined>(undefined),
			name: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Specifies the audit configuration for a service. The configuration determines which permission types are logged, and what identities, if any, are exempted from logging. An AuditConfig must have one or more AuditLogConfigs. If there are AuditConfigs for both `allServices` and a specific service, the union of the two AuditConfigs is used for that service: the log_types specified in each AuditConfig are enabled, and the exempted_members in each AuditLogConfig are exempted. Example Policy with multiple AuditConfigs: { "audit_configs": [ { "service": "allServices", "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [ "user:jose@example.com" ] }, { "log_type": "DATA_WRITE" }, { "log_type": "ADMIN_READ" } ] }, { "service": "sampleservice.googleapis.com", "audit_log_configs": [ { "log_type": "DATA_READ" }, { "log_type": "DATA_WRITE", "exempted_members": [ "user:aliya@example.com" ] } ] } ] } For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts `jose@example.com` from DATA_READ logging, and `aliya@example.com` from DATA_WRITE logging. */
	export interface GoogleIamV1AuditConfig {

		/** The configuration for logging of each type of permission. */
		auditLogConfigs?: Array<GoogleIamV1AuditLogConfig>;

		/** Specifies a service that will be enabled for audit logging. For example, `storage.googleapis.com`, `cloudsql.googleapis.com`. `allServices` is a special value that covers all services. */
		service?: string | null;
	}

	/** Specifies the audit configuration for a service. The configuration determines which permission types are logged, and what identities, if any, are exempted from logging. An AuditConfig must have one or more AuditLogConfigs. If there are AuditConfigs for both `allServices` and a specific service, the union of the two AuditConfigs is used for that service: the log_types specified in each AuditConfig are enabled, and the exempted_members in each AuditLogConfig are exempted. Example Policy with multiple AuditConfigs: { "audit_configs": [ { "service": "allServices", "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [ "user:jose@example.com" ] }, { "log_type": "DATA_WRITE" }, { "log_type": "ADMIN_READ" } ] }, { "service": "sampleservice.googleapis.com", "audit_log_configs": [ { "log_type": "DATA_READ" }, { "log_type": "DATA_WRITE", "exempted_members": [ "user:aliya@example.com" ] } ] } ] } For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts `jose@example.com` from DATA_READ logging, and `aliya@example.com` from DATA_WRITE logging. */
	export interface GoogleIamV1AuditConfigFormProperties {

		/** Specifies a service that will be enabled for audit logging. For example, `storage.googleapis.com`, `cloudsql.googleapis.com`. `allServices` is a special value that covers all services. */
		service: FormControl<string | null | undefined>,
	}
	export function CreateGoogleIamV1AuditConfigFormGroup() {
		return new FormGroup<GoogleIamV1AuditConfigFormProperties>({
			service: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Provides the configuration for logging a type of permissions. Example: { "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [ "user:jose@example.com" ] }, { "log_type": "DATA_WRITE" } ] } This enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting jose@example.com from DATA_READ logging. */
	export interface GoogleIamV1AuditLogConfig {

		/** Specifies the identities that do not cause logging for this type of permission. Follows the same format of Binding.members. */
		exemptedMembers?: Array<string>;

		/** The log type that this config enables. */
		logType?: GoogleIamV1AuditLogConfigLogType | null;
	}

	/** Provides the configuration for logging a type of permissions. Example: { "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [ "user:jose@example.com" ] }, { "log_type": "DATA_WRITE" } ] } This enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting jose@example.com from DATA_READ logging. */
	export interface GoogleIamV1AuditLogConfigFormProperties {

		/** The log type that this config enables. */
		logType: FormControl<GoogleIamV1AuditLogConfigLogType | null | undefined>,
	}
	export function CreateGoogleIamV1AuditLogConfigFormGroup() {
		return new FormGroup<GoogleIamV1AuditLogConfigFormProperties>({
			logType: new FormControl<GoogleIamV1AuditLogConfigLogType | null | undefined>(undefined),
		});

	}

	export enum GoogleIamV1AuditLogConfigLogType { LOG_TYPE_UNSPECIFIED = 'LOG_TYPE_UNSPECIFIED', ADMIN_READ = 'ADMIN_READ', DATA_WRITE = 'DATA_WRITE', DATA_READ = 'DATA_READ' }


	/** Associates `members`, or principals, with a `role`. */
	export interface GoogleIamV1Binding {

		/** Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language. The syntax and semantics of CEL are documented at https://github.com/google/cel-spec. Example (Comparison): title: "Summary size limit" description: "Determines if a summary is less than 100 chars" expression: "document.summary.size() < 100" Example (Equality): title: "Requestor is owner" description: "Determines if requestor is the document owner" expression: "document.owner == request.auth.claims.email" Example (Logic): title: "Public documents" description: "Determine whether the document should be publicly visible" expression: "document.type != 'private' && document.type != 'internal'" Example (Data Manipulation): title: "Notification string" description: "Create a notification string with a timestamp." expression: "'New message received at ' + string(document.create_time)" The exact variables and functions that may be referenced within an expression are determined by the service that evaluates it. See the service documentation for additional information. */
		condition?: GoogleTypeExpr;

		/** Specifies the principals requesting access for a Google Cloud resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. Does not include identities that come from external identity providers (IdPs) through identity federation. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that represents a Google service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `serviceAccount:{projectid}.svc.id.goog[{namespace}/{kubernetes-sa}]`: An identifier for a [Kubernetes service account](https://cloud.google.com/kubernetes-engine/docs/how-to/kubernetes-service-accounts). For example, `my-project.svc.id.goog[my-namespace/my-kubernetes-sa]`. * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in the binding. */
		members?: Array<string>;

		/** Role that is assigned to the list of `members`, or principals. For example, `roles/viewer`, `roles/editor`, or `roles/owner`. */
		role?: string | null;
	}

	/** Associates `members`, or principals, with a `role`. */
	export interface GoogleIamV1BindingFormProperties {

		/** Role that is assigned to the list of `members`, or principals. For example, `roles/viewer`, `roles/editor`, or `roles/owner`. */
		role: FormControl<string | null | undefined>,
	}
	export function CreateGoogleIamV1BindingFormGroup() {
		return new FormGroup<GoogleIamV1BindingFormProperties>({
			role: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language. The syntax and semantics of CEL are documented at https://github.com/google/cel-spec. Example (Comparison): title: "Summary size limit" description: "Determines if a summary is less than 100 chars" expression: "document.summary.size() < 100" Example (Equality): title: "Requestor is owner" description: "Determines if requestor is the document owner" expression: "document.owner == request.auth.claims.email" Example (Logic): title: "Public documents" description: "Determine whether the document should be publicly visible" expression: "document.type != 'private' && document.type != 'internal'" Example (Data Manipulation): title: "Notification string" description: "Create a notification string with a timestamp." expression: "'New message received at ' + string(document.create_time)" The exact variables and functions that may be referenced within an expression are determined by the service that evaluates it. See the service documentation for additional information. */
	export interface GoogleTypeExpr {

		/** Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI. */
		description?: string | null;

		/** Textual representation of an expression in Common Expression Language syntax. */
		expression?: string | null;

		/** Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file. */
		location?: string | null;

		/** Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression. */
		title?: string | null;
	}

	/** Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language. The syntax and semantics of CEL are documented at https://github.com/google/cel-spec. Example (Comparison): title: "Summary size limit" description: "Determines if a summary is less than 100 chars" expression: "document.summary.size() < 100" Example (Equality): title: "Requestor is owner" description: "Determines if requestor is the document owner" expression: "document.owner == request.auth.claims.email" Example (Logic): title: "Public documents" description: "Determine whether the document should be publicly visible" expression: "document.type != 'private' && document.type != 'internal'" Example (Data Manipulation): title: "Notification string" description: "Create a notification string with a timestamp." expression: "'New message received at ' + string(document.create_time)" The exact variables and functions that may be referenced within an expression are determined by the service that evaluates it. See the service documentation for additional information. */
	export interface GoogleTypeExprFormProperties {

		/** Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI. */
		description: FormControl<string | null | undefined>,

		/** Textual representation of an expression in Common Expression Language syntax. */
		expression: FormControl<string | null | undefined>,

		/** Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file. */
		location: FormControl<string | null | undefined>,

		/** Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression. */
		title: FormControl<string | null | undefined>,
	}
	export function CreateGoogleTypeExprFormGroup() {
		return new FormGroup<GoogleTypeExprFormProperties>({
			description: new FormControl<string | null | undefined>(undefined),
			expression: new FormControl<string | null | undefined>(undefined),
			location: new FormControl<string | null | undefined>(undefined),
			title: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members`, or principals, to a single `role`. Principals can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** ``` { "bindings": [ { "role": "roles/resourcemanager.organizationAdmin", "members": [ "user:mike@example.com", "group:admins@example.com", "domain:google.com", "serviceAccount:my-project-id@appspot.gserviceaccount.com" ] }, { "role": "roles/resourcemanager.organizationViewer", "members": [ "user:eve@example.com" ], "condition": { "title": "expirable access", "description": "Does not grant access after Sep 2020", "expression": "request.time < timestamp('2020-10-01T00:00:00.000Z')", } } ], "etag": "BwWWja0YfJA=", "version": 3 } ``` **YAML example:** ``` bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp('2020-10-01T00:00:00.000Z') etag: BwWWja0YfJA= version: 3 ``` For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/). */
	export interface GoogleIamV1Policy {

		/** Specifies cloud audit logging configuration for this policy. */
		auditConfigs?: Array<GoogleIamV1AuditConfig>;

		/** Associates a list of `members`, or principals, with a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one principal. The `bindings` in a `Policy` can refer to up to 1,500 principals; up to 250 of these principals can be Google groups. Each occurrence of a principal counts towards these limits. For example, if the `bindings` grant 50 different roles to `user:alice@example.com`, and not to any other principal, then you can add another 1,450 principals to the `bindings` in the `Policy`. */
		bindings?: Array<GoogleIamV1Binding>;

		/** `etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. */
		etag?: string | null;

		/**
		 * Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
		 * Type: int, -2,147,483,648 to 2,147,483,647
		 */
		version?: number | null;
	}

	/** An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members`, or principals, to a single `role`. Principals can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** ``` { "bindings": [ { "role": "roles/resourcemanager.organizationAdmin", "members": [ "user:mike@example.com", "group:admins@example.com", "domain:google.com", "serviceAccount:my-project-id@appspot.gserviceaccount.com" ] }, { "role": "roles/resourcemanager.organizationViewer", "members": [ "user:eve@example.com" ], "condition": { "title": "expirable access", "description": "Does not grant access after Sep 2020", "expression": "request.time < timestamp('2020-10-01T00:00:00.000Z')", } } ], "etag": "BwWWja0YfJA=", "version": 3 } ``` **YAML example:** ``` bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp('2020-10-01T00:00:00.000Z') etag: BwWWja0YfJA= version: 3 ``` For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/). */
	export interface GoogleIamV1PolicyFormProperties {

		/** `etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. */
		etag: FormControl<string | null | undefined>,

		/**
		 * Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
		 * Type: int, -2,147,483,648 to 2,147,483,647
		 */
		version: FormControl<number | null | undefined>,
	}
	export function CreateGoogleIamV1PolicyFormGroup() {
		return new FormGroup<GoogleIamV1PolicyFormProperties>({
			etag: new FormControl<string | null | undefined>(undefined),
			version: new FormControl<number | null | undefined>(undefined),
		});

	}


	/** Request message for `SetIamPolicy` method. */
	export interface GoogleIamV1SetIamPolicyRequest {

		/** An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members`, or principals, to a single `role`. Principals can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** ``` { "bindings": [ { "role": "roles/resourcemanager.organizationAdmin", "members": [ "user:mike@example.com", "group:admins@example.com", "domain:google.com", "serviceAccount:my-project-id@appspot.gserviceaccount.com" ] }, { "role": "roles/resourcemanager.organizationViewer", "members": [ "user:eve@example.com" ], "condition": { "title": "expirable access", "description": "Does not grant access after Sep 2020", "expression": "request.time < timestamp('2020-10-01T00:00:00.000Z')", } } ], "etag": "BwWWja0YfJA=", "version": 3 } ``` **YAML example:** ``` bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp('2020-10-01T00:00:00.000Z') etag: BwWWja0YfJA= version: 3 ``` For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/). */
		policy?: GoogleIamV1Policy;

		/** OPTIONAL: A FieldMask specifying which fields of the policy to modify. Only the fields in the mask will be modified. If no mask is provided, the following default mask is used: `paths: "bindings, etag"` */
		updateMask?: string | null;
	}

	/** Request message for `SetIamPolicy` method. */
	export interface GoogleIamV1SetIamPolicyRequestFormProperties {

		/** OPTIONAL: A FieldMask specifying which fields of the policy to modify. Only the fields in the mask will be modified. If no mask is provided, the following default mask is used: `paths: "bindings, etag"` */
		updateMask: FormControl<string | null | undefined>,
	}
	export function CreateGoogleIamV1SetIamPolicyRequestFormGroup() {
		return new FormGroup<GoogleIamV1SetIamPolicyRequestFormProperties>({
			updateMask: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Request message for `TestIamPermissions` method. */
	export interface GoogleIamV1TestIamPermissionsRequest {

		/** The set of permissions to check for the `resource`. Permissions with wildcards (such as `*` or `storage.*`) are not allowed. For more information see [IAM Overview](https://cloud.google.com/iam/docs/overview#permissions). */
		permissions?: Array<string>;
	}

	/** Request message for `TestIamPermissions` method. */
	export interface GoogleIamV1TestIamPermissionsRequestFormProperties {
	}
	export function CreateGoogleIamV1TestIamPermissionsRequestFormGroup() {
		return new FormGroup<GoogleIamV1TestIamPermissionsRequestFormProperties>({
		});

	}


	/** Response message for `TestIamPermissions` method. */
	export interface GoogleIamV1TestIamPermissionsResponse {

		/** A subset of `TestPermissionsRequest.permissions` that the caller is allowed. */
		permissions?: Array<string>;
	}

	/** Response message for `TestIamPermissions` method. */
	export interface GoogleIamV1TestIamPermissionsResponseFormProperties {
	}
	export function CreateGoogleIamV1TestIamPermissionsResponseFormGroup() {
		return new FormGroup<GoogleIamV1TestIamPermissionsResponseFormProperties>({
		});

	}


	/** The request message for Operations.CancelOperation. */
	export interface GoogleLongrunningCancelOperationRequest {
	}

	/** The request message for Operations.CancelOperation. */
	export interface GoogleLongrunningCancelOperationRequestFormProperties {
	}
	export function CreateGoogleLongrunningCancelOperationRequestFormGroup() {
		return new FormGroup<GoogleLongrunningCancelOperationRequestFormProperties>({
		});

	}


	/** The response message for Operations.ListOperations. */
	export interface GoogleLongrunningListOperationsResponse {

		/** The standard List next-page token. */
		nextPageToken?: string | null;

		/** A list of operations that matches the specified filter in the request. */
		operations?: Array<GoogleLongrunningOperation>;
	}

	/** The response message for Operations.ListOperations. */
	export interface GoogleLongrunningListOperationsResponseFormProperties {

		/** The standard List next-page token. */
		nextPageToken: FormControl<string | null | undefined>,
	}
	export function CreateGoogleLongrunningListOperationsResponseFormGroup() {
		return new FormGroup<GoogleLongrunningListOperationsResponseFormProperties>({
			nextPageToken: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** This resource represents a long-running operation that is the result of a network API call. */
	export interface GoogleLongrunningOperation {

		/** If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available. */
		done?: boolean | null;

		/** The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors). */
		error?: GoogleRpcStatus;

		/** Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any. */
		metadata?: {[id: string]: any };

		/** The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`. */
		name?: string | null;

		/** The normal, successful response of the operation. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`. */
		response?: {[id: string]: any };
	}

	/** This resource represents a long-running operation that is the result of a network API call. */
	export interface GoogleLongrunningOperationFormProperties {

		/** If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available. */
		done: FormControl<boolean | null | undefined>,

		/** Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any. */
		metadata: FormControl<{[id: string]: any } | null | undefined>,

		/** The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`. */
		name: FormControl<string | null | undefined>,

		/** The normal, successful response of the operation. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`. */
		response: FormControl<{[id: string]: any } | null | undefined>,
	}
	export function CreateGoogleLongrunningOperationFormGroup() {
		return new FormGroup<GoogleLongrunningOperationFormProperties>({
			done: new FormControl<boolean | null | undefined>(undefined),
			metadata: new FormControl<{[id: string]: any } | null | undefined>(undefined),
			name: new FormControl<string | null | undefined>(undefined),
			response: new FormControl<{[id: string]: any } | null | undefined>(undefined),
		});

	}


	/** The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors). */
	export interface GoogleRpcStatus {

		/**
		 * The status code, which should be an enum value of google.rpc.Code.
		 * Type: int, -2,147,483,648 to 2,147,483,647
		 */
		code?: number | null;

		/** A list of messages that carry the error details. There is a common set of message types for APIs to use. */
		details?: Array<string>;

		/** A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client. */
		message?: string | null;
	}

	/** The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors). */
	export interface GoogleRpcStatusFormProperties {

		/**
		 * The status code, which should be an enum value of google.rpc.Code.
		 * Type: int, -2,147,483,648 to 2,147,483,647
		 */
		code: FormControl<number | null | undefined>,

		/** A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client. */
		message: FormControl<string | null | undefined>,
	}
	export function CreateGoogleRpcStatusFormGroup() {
		return new FormGroup<GoogleRpcStatusFormProperties>({
			code: new FormControl<number | null | undefined>(undefined),
			message: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Response message for BeyondCorp.ListAppGateways. */
	export interface ListAppGatewaysResponse {

		/** A list of BeyondCorp AppGateways in the project. */
		appGateways?: Array<AppGateway>;

		/** A token to retrieve the next page of results, or empty if there are no more results in the list. */
		nextPageToken?: string | null;

		/** A list of locations that could not be reached. */
		unreachable?: Array<string>;
	}

	/** Response message for BeyondCorp.ListAppGateways. */
	export interface ListAppGatewaysResponseFormProperties {

		/** A token to retrieve the next page of results, or empty if there are no more results in the list. */
		nextPageToken: FormControl<string | null | undefined>,
	}
	export function CreateListAppGatewaysResponseFormGroup() {
		return new FormGroup<ListAppGatewaysResponseFormProperties>({
			nextPageToken: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Response message for BeyondCorp.ListConnections. */
	export interface ListConnectionsResponse {

		/** A list of BeyondCorp Connections in the project. */
		connections?: Array<Connection>;

		/** A token to retrieve the next page of results, or empty if there are no more results in the list. */
		nextPageToken?: string | null;

		/** A list of locations that could not be reached. */
		unreachable?: Array<string>;
	}

	/** Response message for BeyondCorp.ListConnections. */
	export interface ListConnectionsResponseFormProperties {

		/** A token to retrieve the next page of results, or empty if there are no more results in the list. */
		nextPageToken: FormControl<string | null | undefined>,
	}
	export function CreateListConnectionsResponseFormGroup() {
		return new FormGroup<ListConnectionsResponseFormProperties>({
			nextPageToken: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Response message for BeyondCorp.ListConnectors. */
	export interface ListConnectorsResponse {

		/** A list of BeyondCorp Connectors in the project. */
		connectors?: Array<Connector>;

		/** A token to retrieve the next page of results, or empty if there are no more results in the list. */
		nextPageToken?: string | null;

		/** A list of locations that could not be reached. */
		unreachable?: Array<string>;
	}

	/** Response message for BeyondCorp.ListConnectors. */
	export interface ListConnectorsResponseFormProperties {

		/** A token to retrieve the next page of results, or empty if there are no more results in the list. */
		nextPageToken: FormControl<string | null | undefined>,
	}
	export function CreateListConnectorsResponseFormGroup() {
		return new FormGroup<ListConnectorsResponseFormProperties>({
			nextPageToken: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** RemoteAgentDetails reflects the details of a remote agent. */
	export interface RemoteAgentDetails {
	}

	/** RemoteAgentDetails reflects the details of a remote agent. */
	export interface RemoteAgentDetailsFormProperties {
	}
	export function CreateRemoteAgentDetailsFormGroup() {
		return new FormGroup<RemoteAgentDetailsFormProperties>({
		});

	}


	/** Request report the connector status. */
	export interface ReportStatusRequest {

		/** Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000). */
		requestId?: string | null;

		/** ResourceInfo represents the information/status of the associated resource. */
		resourceInfo?: ResourceInfo;

		/** Optional. If set, validates request by executing a dry-run which would not alter the resource in any way. */
		validateOnly?: boolean | null;
	}

	/** Request report the connector status. */
	export interface ReportStatusRequestFormProperties {

		/** Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000). */
		requestId: FormControl<string | null | undefined>,

		/** Optional. If set, validates request by executing a dry-run which would not alter the resource in any way. */
		validateOnly: FormControl<boolean | null | undefined>,
	}
	export function CreateReportStatusRequestFormGroup() {
		return new FormGroup<ReportStatusRequestFormProperties>({
			requestId: new FormControl<string | null | undefined>(undefined),
			validateOnly: new FormControl<boolean | null | undefined>(undefined),
		});

	}


	/** Response message for BeyondCorp.ResolveConnections. */
	export interface ResolveConnectionsResponse {

		/** A list of BeyondCorp Connections with details in the project. */
		connectionDetails?: Array<ConnectionDetails>;

		/** A token to retrieve the next page of results, or empty if there are no more results in the list. */
		nextPageToken?: string | null;

		/** A list of locations that could not be reached. */
		unreachable?: Array<string>;
	}

	/** Response message for BeyondCorp.ResolveConnections. */
	export interface ResolveConnectionsResponseFormProperties {

		/** A token to retrieve the next page of results, or empty if there are no more results in the list. */
		nextPageToken: FormControl<string | null | undefined>,
	}
	export function CreateResolveConnectionsResponseFormGroup() {
		return new FormGroup<ResolveConnectionsResponseFormProperties>({
			nextPageToken: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Response message for BeyondCorp.ResolveInstanceConfig. */
	export interface ResolveInstanceConfigResponse {

		/** ConnectorInstanceConfig defines the instance config of a connector. */
		instanceConfig?: ConnectorInstanceConfig;
	}

	/** Response message for BeyondCorp.ResolveInstanceConfig. */
	export interface ResolveInstanceConfigResponseFormProperties {
	}
	export function CreateResolveInstanceConfigResponseFormGroup() {
		return new FormGroup<ResolveInstanceConfigResponseFormProperties>({
		});

	}


	/** TunnelerError is an error proto for errors returned by the connection manager. */
	export interface Tunnelv1ProtoTunnelerError {

		/** Original raw error */
		err?: string | null;

		/** retryable isn't used for now, but we may want to reuse it in the future. */
		retryable?: boolean | null;
	}

	/** TunnelerError is an error proto for errors returned by the connection manager. */
	export interface Tunnelv1ProtoTunnelerErrorFormProperties {

		/** Original raw error */
		err: FormControl<string | null | undefined>,

		/** retryable isn't used for now, but we may want to reuse it in the future. */
		retryable: FormControl<boolean | null | undefined>,
	}
	export function CreateTunnelv1ProtoTunnelerErrorFormGroup() {
		return new FormGroup<Tunnelv1ProtoTunnelerErrorFormProperties>({
			err: new FormControl<string | null | undefined>(undefined),
			retryable: new FormControl<boolean | null | undefined>(undefined),
		});

	}


	/** TunnelerInfo contains metadata about tunneler launched by connection manager. */
	export interface Tunnelv1ProtoTunnelerInfo {

		/**
		 * backoff_retry_count stores the number of times the tunneler has been retried by tunManager for current backoff sequence. Gets reset to 0 if time difference between 2 consecutive retries exceeds backoffRetryResetTime.
		 * Type: uint, 0 to 4,294,967,295
		 */
		backoffRetryCount?: number | null;

		/** id is the unique id of a tunneler. */
		id?: string | null;

		/** TunnelerError is an error proto for errors returned by the connection manager. */
		latestErr?: Tunnelv1ProtoTunnelerError;

		/** latest_retry_time stores the time when the tunneler was last restarted. */
		latestRetryTime?: string | null;

		/**
		 * total_retry_count stores the total number of times the tunneler has been retried by tunManager.
		 * Type: uint, 0 to 4,294,967,295
		 */
		totalRetryCount?: number | null;
	}

	/** TunnelerInfo contains metadata about tunneler launched by connection manager. */
	export interface Tunnelv1ProtoTunnelerInfoFormProperties {

		/**
		 * backoff_retry_count stores the number of times the tunneler has been retried by tunManager for current backoff sequence. Gets reset to 0 if time difference between 2 consecutive retries exceeds backoffRetryResetTime.
		 * Type: uint, 0 to 4,294,967,295
		 */
		backoffRetryCount: FormControl<number | null | undefined>,

		/** id is the unique id of a tunneler. */
		id: FormControl<string | null | undefined>,

		/** latest_retry_time stores the time when the tunneler was last restarted. */
		latestRetryTime: FormControl<string | null | undefined>,

		/**
		 * total_retry_count stores the total number of times the tunneler has been retried by tunManager.
		 * Type: uint, 0 to 4,294,967,295
		 */
		totalRetryCount: FormControl<number | null | undefined>,
	}
	export function CreateTunnelv1ProtoTunnelerInfoFormGroup() {
		return new FormGroup<Tunnelv1ProtoTunnelerInfoFormProperties>({
			backoffRetryCount: new FormControl<number | null | undefined>(undefined),
			id: new FormControl<string | null | undefined>(undefined),
			latestRetryTime: new FormControl<string | null | undefined>(undefined),
			totalRetryCount: new FormControl<number | null | undefined>(undefined),
		});

	}

	@Injectable()
	export class MyClient {
		constructor(@Inject('baseUri') private baseUri: string = location.protocol + '//' + location.hostname + (location.port ? ':' + location.port : '') + '/', private http: HttpClient) {
		}

		/**
		 * Report status for a given connector.
		 * Post v1alpha/{appConnector}:reportStatus
		 * @param {string} appConnector Required. BeyondCorp Connector name using the form: `projects/{project_id}/locations/{location_id}/connectors/{connector}`
		 * @return {GoogleLongrunningOperation} Successful response
		 */
		Beyondcorp_projects_locations_appConnectors_reportStatus(appConnector: string, requestBody: GoogleCloudBeyondcorpAppconnectorsV1alphaReportStatusRequest): Observable<GoogleLongrunningOperation> {
			return this.http.post<GoogleLongrunningOperation>(this.baseUri + 'v1alpha/' + (appConnector == null ? '' : encodeURIComponent(appConnector)) + ':reportStatus', JSON.stringify(requestBody), { headers: { 'Content-Type': 'application/json;charset=UTF-8' } });
		}

		/**
		 * Gets instance configuration for a given AppConnector. An internal method called by a AppConnector to get its container config.
		 * Get v1alpha/{appConnector}:resolveInstanceConfig
		 * @param {string} appConnector Required. BeyondCorp AppConnector name using the form: `projects/{project_id}/locations/{location_id}/appConnectors/{app_connector}`
		 * @return {GoogleCloudBeyondcorpAppconnectorsV1alphaResolveInstanceConfigResponse} Successful response
		 */
		Beyondcorp_projects_locations_appConnectors_resolveInstanceConfig(appConnector: string): Observable<GoogleCloudBeyondcorpAppconnectorsV1alphaResolveInstanceConfigResponse> {
			return this.http.get<GoogleCloudBeyondcorpAppconnectorsV1alphaResolveInstanceConfigResponse>(this.baseUri + 'v1alpha/' + (appConnector == null ? '' : encodeURIComponent(appConnector)) + ':resolveInstanceConfig', {});
		}

		/**
		 * Report status for a given connector.
		 * Post v1alpha/{connector}:reportStatus
		 * @param {string} connector Required. BeyondCorp Connector name using the form: `projects/{project_id}/locations/{location_id}/connectors/{connector}`
		 * @return {GoogleLongrunningOperation} Successful response
		 */
		Beyondcorp_projects_locations_connectors_reportStatus(connector: string, requestBody: ReportStatusRequest): Observable<GoogleLongrunningOperation> {
			return this.http.post<GoogleLongrunningOperation>(this.baseUri + 'v1alpha/' + (connector == null ? '' : encodeURIComponent(connector)) + ':reportStatus', JSON.stringify(requestBody), { headers: { 'Content-Type': 'application/json;charset=UTF-8' } });
		}

		/**
		 * Gets instance configuration for a given connector. An internal method called by a connector to get its container config.
		 * Get v1alpha/{connector}:resolveInstanceConfig
		 * @param {string} connector Required. BeyondCorp Connector name using the form: `projects/{project_id}/locations/{location_id}/connectors/{connector}`
		 * @return {ResolveInstanceConfigResponse} Successful response
		 */
		Beyondcorp_projects_locations_connectors_resolveInstanceConfig(connector: string): Observable<ResolveInstanceConfigResponse> {
			return this.http.get<ResolveInstanceConfigResponse>(this.baseUri + 'v1alpha/' + (connector == null ? '' : encodeURIComponent(connector)) + ':resolveInstanceConfig', {});
		}

		/**
		 * Gets the value for a selected particular insight based on the provided filters. Use the organization level path for fetching at org level and project level path for fetching the insight value specific to a particular project.
		 * Get v1alpha/{insight}:configuredInsight
		 * @param {string} insight Required. The resource name of the insight using the form: `organizations/{organization_id}/locations/{location_id}/insights/{insight_id}` `projects/{project_id}/locations/{location_id}/insights/{insight_id}`.
		 * @param {GoogleCloudBeyondcorpSaasplatformInsightsV1alphaAppliedConfigAggregation} aggregation Required. Aggregation type. Available aggregation could be fetched by calling insight list and get APIs in `BASIC` view.
		 * @param {string} customGrouping_fieldFilter Optional. Filterable parameters to be added to the grouping clause. Available fields could be fetched by calling insight list and get APIs in `BASIC` view. `=` is the only comparison operator supported. `AND` is the only logical operator supported. Usage: field_filter="fieldName1=fieldVal1 AND fieldName2=fieldVal2". NOTE: Only `AND` conditions are allowed. NOTE: Use the `filter_alias` from `Insight.Metadata.Field` message for the filtering the corresponding fields in this filter field. (These expressions are based on the filter language described at https://google.aip.dev/160).
		 * @param {Array<string>} customGrouping_groupFields Required. Fields to be used for grouping. NOTE: Use the `filter_alias` from `Insight.Metadata.Field` message for declaring the fields to be grouped-by here.
		 * @param {string} endTime Required. Ending time for the duration for which insight is to be pulled.
		 * @param {string} fieldFilter Optional. Other filterable/configurable parameters as applicable to the selected insight. Available fields could be fetched by calling insight list and get APIs in `BASIC` view. `=` is the only comparison operator supported. `AND` is the only logical operator supported. Usage: field_filter="fieldName1=fieldVal1 AND fieldName2=fieldVal2". NOTE: Only `AND` conditions are allowed. NOTE: Use the `filter_alias` from `Insight.Metadata.Field` message for the filtering the corresponding fields in this filter field. (These expressions are based on the filter language described at https://google.aip.dev/160).
		 * @param {string} group Optional. Group id of the available groupings for the insight. Available groupings could be fetched by calling insight list and get APIs in `BASIC` view.
		 * @param {number} pageSize Optional. Requested page size. Server may return fewer items than requested. If unspecified, server will pick an appropriate default.
		 *     Type: int, -2,147,483,648 to 2,147,483,647
		 * @param {string} pageToken Optional. Used to fetch the page represented by the token. Fetches the first page when not set.
		 * @param {string} startTime Required. Starting time for the duration for which insight is to be pulled.
		 * @return {GoogleCloudBeyondcorpSaasplatformInsightsV1alphaConfiguredInsightResponse} Successful response
		 */
		Beyondcorp_projects_locations_insights_configuredInsight(insight: string, aggregation: GoogleCloudBeyondcorpSaasplatformInsightsV1alphaAppliedConfigAggregation | null | undefined, customGrouping_fieldFilter: string | null | undefined, customGrouping_groupFields: Array<string> | null | undefined, endTime: string | null | undefined, fieldFilter: string | null | undefined, group: string | null | undefined, pageSize: number | null | undefined, pageToken: string | null | undefined, startTime: string | null | undefined): Observable<GoogleCloudBeyondcorpSaasplatformInsightsV1alphaConfiguredInsightResponse> {
			return this.http.get<GoogleCloudBeyondcorpSaasplatformInsightsV1alphaConfiguredInsightResponse>(this.baseUri + 'v1alpha/' + (insight == null ? '' : encodeURIComponent(insight)) + ':configuredInsight&aggregation=' + aggregation + '&customGrouping_fieldFilter=' + (customGrouping_fieldFilter == null ? '' : encodeURIComponent(customGrouping_fieldFilter)) + '&' + customGrouping_groupFields?.map(z => `customGrouping.groupFields=${encodeURIComponent(z)}`).join('&') + '&endTime=' + (endTime == null ? '' : encodeURIComponent(endTime)) + '&fieldFilter=' + (fieldFilter == null ? '' : encodeURIComponent(fieldFilter)) + '&group=' + (group == null ? '' : encodeURIComponent(group)) + '&pageSize=' + pageSize + '&pageToken=' + (pageToken == null ? '' : encodeURIComponent(pageToken)) + '&startTime=' + (startTime == null ? '' : encodeURIComponent(startTime)), {});
		}

		/**
		 * Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.
		 * Delete v1alpha/{name}
		 * @param {string} name The name of the operation resource to be deleted.
		 * @param {string} requestId Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
		 * @param {boolean} validateOnly Optional. If set, validates request by executing a dry-run which would not alter the resource in any way.
		 * @return {Empty} Successful response
		 */
		Beyondcorp_projects_locations_operations_delete(name: string, requestId: string | null | undefined, validateOnly: boolean | null | undefined): Observable<Empty> {
			return this.http.delete<Empty>(this.baseUri + 'v1alpha/' + (name == null ? '' : encodeURIComponent(name)) + '&requestId=' + (requestId == null ? '' : encodeURIComponent(requestId)) + '&validateOnly=' + validateOnly, {});
		}

		/**
		 * Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.
		 * Get v1alpha/{name}
		 * @param {string} name The name of the operation resource.
		 * @param {Beyondcorp_projects_locations_operations_getView} view Required. Metadata only or full data view.
		 * @return {GoogleLongrunningOperation} Successful response
		 */
		Beyondcorp_projects_locations_operations_get(name: string, view: Beyondcorp_projects_locations_operations_getView | null | undefined): Observable<GoogleLongrunningOperation> {
			return this.http.get<GoogleLongrunningOperation>(this.baseUri + 'v1alpha/' + (name == null ? '' : encodeURIComponent(name)) + '&view=' + view, {});
		}

		/**
		 * Updates the parameters of a single Connector.
		 * Patch v1alpha/{name}
		 * @param {string} name Required. Unique resource name of the connector. The name is ignored when creating a connector.
		 * @param {string} requestId Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
		 * @param {string} updateMask Required. Mask of fields to update. At least one path must be supplied in this field. The elements of the repeated paths field may only include these fields from [BeyondCorp.Connector]: * `labels` * `display_name`
		 * @param {boolean} validateOnly Optional. If set, validates request by executing a dry-run which would not alter the resource in any way.
		 * @return {GoogleLongrunningOperation} Successful response
		 */
		Beyondcorp_projects_locations_connectors_patch(name: string, requestId: string | null | undefined, updateMask: string | null | undefined, validateOnly: boolean | null | undefined, requestBody: Connector): Observable<GoogleLongrunningOperation> {
			return this.http.patch<GoogleLongrunningOperation>(this.baseUri + 'v1alpha/' + (name == null ? '' : encodeURIComponent(name)) + '&requestId=' + (requestId == null ? '' : encodeURIComponent(requestId)) + '&updateMask=' + (updateMask == null ? '' : encodeURIComponent(updateMask)) + '&validateOnly=' + validateOnly, JSON.stringify(requestBody), { headers: { 'Content-Type': 'application/json;charset=UTF-8' } });
		}

		/**
		 * Lists information about the supported locations for this service.
		 * Get v1alpha/{name}/locations
		 * @param {string} name The resource that owns the locations collection, if applicable.
		 * @param {string} filter A filter to narrow down results to a preferred subset. The filtering language accepts strings like `"displayName=tokyo"`, and is documented in more detail in [AIP-160](https://google.aip.dev/160).
		 * @param {number} pageSize The maximum number of results to return. If not set, the service selects a default.
		 *     Type: int, -2,147,483,648 to 2,147,483,647
		 * @param {string} pageToken A page token received from the `next_page_token` field in the response. Send that page token to receive the subsequent page.
		 * @return {GoogleCloudLocationListLocationsResponse} Successful response
		 */
		Beyondcorp_projects_locations_list(name: string, filter: string | null | undefined, pageSize: number | null | undefined, pageToken: string | null | undefined): Observable<GoogleCloudLocationListLocationsResponse> {
			return this.http.get<GoogleCloudLocationListLocationsResponse>(this.baseUri + 'v1alpha/' + (name == null ? '' : encodeURIComponent(name)) + '/locations&filter=' + (filter == null ? '' : encodeURIComponent(filter)) + '&pageSize=' + pageSize + '&pageToken=' + (pageToken == null ? '' : encodeURIComponent(pageToken)), {});
		}

		/**
		 * Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`.
		 * Get v1alpha/{name}/operations
		 * @param {string} name The name of the operation's parent resource.
		 * @param {string} filter The standard list filter.
		 * @param {number} pageSize The standard list page size.
		 *     Type: int, -2,147,483,648 to 2,147,483,647
		 * @param {string} pageToken The standard list page token.
		 * @return {GoogleLongrunningListOperationsResponse} Successful response
		 */
		Beyondcorp_projects_locations_operations_list(name: string, filter: string | null | undefined, pageSize: number | null | undefined, pageToken: string | null | undefined): Observable<GoogleLongrunningListOperationsResponse> {
			return this.http.get<GoogleLongrunningListOperationsResponse>(this.baseUri + 'v1alpha/' + (name == null ? '' : encodeURIComponent(name)) + '/operations&filter=' + (filter == null ? '' : encodeURIComponent(filter)) + '&pageSize=' + pageSize + '&pageToken=' + (pageToken == null ? '' : encodeURIComponent(pageToken)), {});
		}

		/**
		 * Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.
		 * Post v1alpha/{name}:cancel
		 * @param {string} name The name of the operation resource to be cancelled.
		 * @return {Empty} Successful response
		 */
		Beyondcorp_projects_locations_operations_cancel(name: string, requestBody: GoogleLongrunningCancelOperationRequest): Observable<Empty> {
			return this.http.post<Empty>(this.baseUri + 'v1alpha/' + (name == null ? '' : encodeURIComponent(name)) + ':cancel', JSON.stringify(requestBody), { headers: { 'Content-Type': 'application/json;charset=UTF-8' } });
		}

		/**
		 * Lists AppConnections in a given project and location.
		 * Get v1alpha/{parent}/appConnections
		 * @param {string} parent Required. The resource name of the AppConnection location using the form: `projects/{project_id}/locations/{location_id}`
		 * @param {string} filter Optional. A filter specifying constraints of a list operation.
		 * @param {string} orderBy Optional. Specifies the ordering of results. See [Sorting order](https://cloud.google.com/apis/design/design_patterns#sorting_order) for more information.
		 * @param {number} pageSize Optional. The maximum number of items to return. If not specified, a default value of 50 will be used by the service. Regardless of the page_size value, the response may include a partial list and a caller should only rely on response's next_page_token to determine if there are more instances left to be queried.
		 *     Type: int, -2,147,483,648 to 2,147,483,647
		 * @param {string} pageToken Optional. The next_page_token value returned from a previous ListAppConnectionsRequest, if any.
		 * @return {GoogleCloudBeyondcorpAppconnectionsV1alphaListAppConnectionsResponse} Successful response
		 */
		Beyondcorp_projects_locations_appConnections_list(parent: string, filter: string | null | undefined, orderBy: string | null | undefined, pageSize: number | null | undefined, pageToken: string | null | undefined): Observable<GoogleCloudBeyondcorpAppconnectionsV1alphaListAppConnectionsResponse> {
			return this.http.get<GoogleCloudBeyondcorpAppconnectionsV1alphaListAppConnectionsResponse>(this.baseUri + 'v1alpha/' + (parent == null ? '' : encodeURIComponent(parent)) + '/appConnections&filter=' + (filter == null ? '' : encodeURIComponent(filter)) + '&orderBy=' + (orderBy == null ? '' : encodeURIComponent(orderBy)) + '&pageSize=' + pageSize + '&pageToken=' + (pageToken == null ? '' : encodeURIComponent(pageToken)), {});
		}

		/**
		 * Creates a new AppConnection in a given project and location.
		 * Post v1alpha/{parent}/appConnections
		 * @param {string} parent Required. The resource project name of the AppConnection location using the form: `projects/{project_id}/locations/{location_id}`
		 * @param {string} appConnectionId Optional. User-settable AppConnection resource ID. * Must start with a letter. * Must contain between 4-63 characters from `/a-z-/`. * Must end with a number or a letter.
		 * @param {string} requestId Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
		 * @param {boolean} validateOnly Optional. If set, validates request by executing a dry-run which would not alter the resource in any way.
		 * @return {GoogleLongrunningOperation} Successful response
		 */
		Beyondcorp_projects_locations_appConnections_create(parent: string, appConnectionId: string | null | undefined, requestId: string | null | undefined, validateOnly: boolean | null | undefined, requestBody: GoogleCloudBeyondcorpAppconnectionsV1alphaAppConnection): Observable<GoogleLongrunningOperation> {
			return this.http.post<GoogleLongrunningOperation>(this.baseUri + 'v1alpha/' + (parent == null ? '' : encodeURIComponent(parent)) + '/appConnections&appConnectionId=' + (appConnectionId == null ? '' : encodeURIComponent(appConnectionId)) + '&requestId=' + (requestId == null ? '' : encodeURIComponent(requestId)) + '&validateOnly=' + validateOnly, JSON.stringify(requestBody), { headers: { 'Content-Type': 'application/json;charset=UTF-8' } });
		}

		/**
		 * Resolves AppConnections details for a given AppConnector. An internal method called by a connector to find AppConnections to connect to.
		 * Get v1alpha/{parent}/appConnections:resolve
		 * @param {string} parent Required. The resource name of the AppConnection location using the form: `projects/{project_id}/locations/{location_id}`
		 * @param {string} appConnectorId Required. BeyondCorp Connector name of the connector associated with those AppConnections using the form: `projects/{project_id}/locations/{location_id}/appConnectors/{app_connector_id}`
		 * @param {number} pageSize Optional. The maximum number of items to return. If not specified, a default value of 50 will be used by the service. Regardless of the page_size value, the response may include a partial list and a caller should only rely on response's next_page_token to determine if there are more instances left to be queried.
		 *     Type: int, -2,147,483,648 to 2,147,483,647
		 * @param {string} pageToken Optional. The next_page_token value returned from a previous ResolveAppConnectionsResponse, if any.
		 * @return {GoogleCloudBeyondcorpAppconnectionsV1alphaResolveAppConnectionsResponse} Successful response
		 */
		Beyondcorp_projects_locations_appConnections_resolve(parent: string, appConnectorId: string | null | undefined, pageSize: number | null | undefined, pageToken: string | null | undefined): Observable<GoogleCloudBeyondcorpAppconnectionsV1alphaResolveAppConnectionsResponse> {
			return this.http.get<GoogleCloudBeyondcorpAppconnectionsV1alphaResolveAppConnectionsResponse>(this.baseUri + 'v1alpha/' + (parent == null ? '' : encodeURIComponent(parent)) + '/appConnections:resolve&appConnectorId=' + (appConnectorId == null ? '' : encodeURIComponent(appConnectorId)) + '&pageSize=' + pageSize + '&pageToken=' + (pageToken == null ? '' : encodeURIComponent(pageToken)), {});
		}

		/**
		 * Lists AppConnectors in a given project and location.
		 * Get v1alpha/{parent}/appConnectors
		 * @param {string} parent Required. The resource name of the AppConnector location using the form: `projects/{project_id}/locations/{location_id}`
		 * @param {string} filter Optional. A filter specifying constraints of a list operation.
		 * @param {string} orderBy Optional. Specifies the ordering of results. See [Sorting order](https://cloud.google.com/apis/design/design_patterns#sorting_order) for more information.
		 * @param {number} pageSize Optional. The maximum number of items to return. If not specified, a default value of 50 will be used by the service. Regardless of the page_size value, the response may include a partial list and a caller should only rely on response's next_page_token to determine if there are more instances left to be queried.
		 *     Type: int, -2,147,483,648 to 2,147,483,647
		 * @param {string} pageToken Optional. The next_page_token value returned from a previous ListAppConnectorsRequest, if any.
		 * @return {GoogleCloudBeyondcorpAppconnectorsV1alphaListAppConnectorsResponse} Successful response
		 */
		Beyondcorp_projects_locations_appConnectors_list(parent: string, filter: string | null | undefined, orderBy: string | null | undefined, pageSize: number | null | undefined, pageToken: string | null | undefined): Observable<GoogleCloudBeyondcorpAppconnectorsV1alphaListAppConnectorsResponse> {
			return this.http.get<GoogleCloudBeyondcorpAppconnectorsV1alphaListAppConnectorsResponse>(this.baseUri + 'v1alpha/' + (parent == null ? '' : encodeURIComponent(parent)) + '/appConnectors&filter=' + (filter == null ? '' : encodeURIComponent(filter)) + '&orderBy=' + (orderBy == null ? '' : encodeURIComponent(orderBy)) + '&pageSize=' + pageSize + '&pageToken=' + (pageToken == null ? '' : encodeURIComponent(pageToken)), {});
		}

		/**
		 * Creates a new AppConnector in a given project and location.
		 * Post v1alpha/{parent}/appConnectors
		 * @param {string} parent Required. The resource project name of the AppConnector location using the form: `projects/{project_id}/locations/{location_id}`
		 * @param {string} appConnectorId Optional. User-settable AppConnector resource ID. * Must start with a letter. * Must contain between 4-63 characters from `/a-z-/`. * Must end with a number or a letter.
		 * @param {string} requestId Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
		 * @param {boolean} validateOnly Optional. If set, validates request by executing a dry-run which would not alter the resource in any way.
		 * @return {GoogleLongrunningOperation} Successful response
		 */
		Beyondcorp_projects_locations_appConnectors_create(parent: string, appConnectorId: string | null | undefined, requestId: string | null | undefined, validateOnly: boolean | null | undefined, requestBody: GoogleCloudBeyondcorpAppconnectorsV1alphaAppConnector): Observable<GoogleLongrunningOperation> {
			return this.http.post<GoogleLongrunningOperation>(this.baseUri + 'v1alpha/' + (parent == null ? '' : encodeURIComponent(parent)) + '/appConnectors&appConnectorId=' + (appConnectorId == null ? '' : encodeURIComponent(appConnectorId)) + '&requestId=' + (requestId == null ? '' : encodeURIComponent(requestId)) + '&validateOnly=' + validateOnly, JSON.stringify(requestBody), { headers: { 'Content-Type': 'application/json;charset=UTF-8' } });
		}

		/**
		 * Lists AppGateways in a given project and location.
		 * Get v1alpha/{parent}/appGateways
		 * @param {string} parent Required. The resource name of the AppGateway location using the form: `projects/{project_id}/locations/{location_id}`
		 * @param {string} filter Optional. A filter specifying constraints of a list operation.
		 * @param {string} orderBy Optional. Specifies the ordering of results. See [Sorting order](https://cloud.google.com/apis/design/design_patterns#sorting_order) for more information.
		 * @param {number} pageSize Optional. The maximum number of items to return. If not specified, a default value of 50 will be used by the service. Regardless of the page_size value, the response may include a partial list and a caller should only rely on response's next_page_token to determine if there are more instances left to be queried.
		 *     Type: int, -2,147,483,648 to 2,147,483,647
		 * @param {string} pageToken Optional. The next_page_token value returned from a previous ListAppGatewaysRequest, if any.
		 * @return {ListAppGatewaysResponse} Successful response
		 */
		Beyondcorp_projects_locations_appGateways_list(parent: string, filter: string | null | undefined, orderBy: string | null | undefined, pageSize: number | null | undefined, pageToken: string | null | undefined): Observable<ListAppGatewaysResponse> {
			return this.http.get<ListAppGatewaysResponse>(this.baseUri + 'v1alpha/' + (parent == null ? '' : encodeURIComponent(parent)) + '/appGateways&filter=' + (filter == null ? '' : encodeURIComponent(filter)) + '&orderBy=' + (orderBy == null ? '' : encodeURIComponent(orderBy)) + '&pageSize=' + pageSize + '&pageToken=' + (pageToken == null ? '' : encodeURIComponent(pageToken)), {});
		}

		/**
		 * Creates a new AppGateway in a given project and location.
		 * Post v1alpha/{parent}/appGateways
		 * @param {string} parent Required. The resource project name of the AppGateway location using the form: `projects/{project_id}/locations/{location_id}`
		 * @param {string} appGatewayId Optional. User-settable AppGateway resource ID. * Must start with a letter. * Must contain between 4-63 characters from `/a-z-/`. * Must end with a number or a letter.
		 * @param {string} requestId Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
		 * @param {boolean} validateOnly Optional. If set, validates request by executing a dry-run which would not alter the resource in any way.
		 * @return {GoogleLongrunningOperation} Successful response
		 */
		Beyondcorp_projects_locations_appGateways_create(parent: string, appGatewayId: string | null | undefined, requestId: string | null | undefined, validateOnly: boolean | null | undefined, requestBody: AppGateway): Observable<GoogleLongrunningOperation> {
			return this.http.post<GoogleLongrunningOperation>(this.baseUri + 'v1alpha/' + (parent == null ? '' : encodeURIComponent(parent)) + '/appGateways&appGatewayId=' + (appGatewayId == null ? '' : encodeURIComponent(appGatewayId)) + '&requestId=' + (requestId == null ? '' : encodeURIComponent(requestId)) + '&validateOnly=' + validateOnly, JSON.stringify(requestBody), { headers: { 'Content-Type': 'application/json;charset=UTF-8' } });
		}

		/**
		 * Lists BrowserDlpRules for PartnerTenant in a given organization.
		 * Get v1alpha/{parent}/browserDlpRules
		 * @param {string} parent Required. The parent partnerTenant to which the BrowserDlpRules belong. Format: `organizations/{organization_id}/locations/global/partnerTenants/{partner_tenant_id}`
		 * @return {GoogleCloudBeyondcorpPartnerservicesV1alphaListBrowserDlpRulesResponse} Successful response
		 */
		Beyondcorp_organizations_locations_global_partnerTenants_browserDlpRules_list(parent: string): Observable<GoogleCloudBeyondcorpPartnerservicesV1alphaListBrowserDlpRulesResponse> {
			return this.http.get<GoogleCloudBeyondcorpPartnerservicesV1alphaListBrowserDlpRulesResponse>(this.baseUri + 'v1alpha/' + (parent == null ? '' : encodeURIComponent(parent)) + '/browserDlpRules', {});
		}

		/**
		 * Creates a new BrowserDlpRule in a given organization and PartnerTenant.
		 * Post v1alpha/{parent}/browserDlpRules
		 * @param {string} parent Required. The resource name of the BrowserDlpRule parent using the form: `organizations/{organization_id}/locations/global/partnerTenants/{partner_tenant_id}`
		 * @param {string} requestId Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
		 * @return {GoogleLongrunningOperation} Successful response
		 */
		Beyondcorp_organizations_locations_global_partnerTenants_browserDlpRules_create(parent: string, requestId: string | null | undefined, requestBody: GoogleCloudBeyondcorpPartnerservicesV1alphaBrowserDlpRule): Observable<GoogleLongrunningOperation> {
			return this.http.post<GoogleLongrunningOperation>(this.baseUri + 'v1alpha/' + (parent == null ? '' : encodeURIComponent(parent)) + '/browserDlpRules&requestId=' + (requestId == null ? '' : encodeURIComponent(requestId)), JSON.stringify(requestBody), { headers: { 'Content-Type': 'application/json;charset=UTF-8' } });
		}

		/**
		 * Lists Connections in a given project and location.
		 * Get v1alpha/{parent}/connections
		 * @param {string} parent Required. The resource name of the connection location using the form: `projects/{project_id}/locations/{location_id}`
		 * @param {string} filter Optional. A filter specifying constraints of a list operation.
		 * @param {string} orderBy Optional. Specifies the ordering of results. See [Sorting order](https://cloud.google.com/apis/design/design_patterns#sorting_order) for more information.
		 * @param {number} pageSize Optional. The maximum number of items to return. If not specified, a default value of 50 will be used by the service. Regardless of the page_size value, the response may include a partial list and a caller should only rely on response's next_page_token to determine if there are more instances left to be queried.
		 *     Type: int, -2,147,483,648 to 2,147,483,647
		 * @param {string} pageToken Optional. The next_page_token value returned from a previous ListConnectionsRequest, if any.
		 * @return {ListConnectionsResponse} Successful response
		 */
		Beyondcorp_projects_locations_connections_list(parent: string, filter: string | null | undefined, orderBy: string | null | undefined, pageSize: number | null | undefined, pageToken: string | null | undefined): Observable<ListConnectionsResponse> {
			return this.http.get<ListConnectionsResponse>(this.baseUri + 'v1alpha/' + (parent == null ? '' : encodeURIComponent(parent)) + '/connections&filter=' + (filter == null ? '' : encodeURIComponent(filter)) + '&orderBy=' + (orderBy == null ? '' : encodeURIComponent(orderBy)) + '&pageSize=' + pageSize + '&pageToken=' + (pageToken == null ? '' : encodeURIComponent(pageToken)), {});
		}

		/**
		 * Creates a new Connection in a given project and location.
		 * Post v1alpha/{parent}/connections
		 * @param {string} parent Required. The resource project name of the connection location using the form: `projects/{project_id}/locations/{location_id}`
		 * @param {string} connectionId Optional. User-settable connection resource ID. * Must start with a letter. * Must contain between 4-63 characters from `/a-z-/`. * Must end with a number or a letter.
		 * @param {string} requestId Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
		 * @param {boolean} validateOnly Optional. If set, validates request by executing a dry-run which would not alter the resource in any way.
		 * @return {GoogleLongrunningOperation} Successful response
		 */
		Beyondcorp_projects_locations_connections_create(parent: string, connectionId: string | null | undefined, requestId: string | null | undefined, validateOnly: boolean | null | undefined, requestBody: Connection): Observable<GoogleLongrunningOperation> {
			return this.http.post<GoogleLongrunningOperation>(this.baseUri + 'v1alpha/' + (parent == null ? '' : encodeURIComponent(parent)) + '/connections&connectionId=' + (connectionId == null ? '' : encodeURIComponent(connectionId)) + '&requestId=' + (requestId == null ? '' : encodeURIComponent(requestId)) + '&validateOnly=' + validateOnly, JSON.stringify(requestBody), { headers: { 'Content-Type': 'application/json;charset=UTF-8' } });
		}

		/**
		 * Resolves connections details for a given connector. An internal method called by a connector to find connections to connect to.
		 * Get v1alpha/{parent}/connections:resolve
		 * @param {string} parent Required. The resource name of the connection location using the form: `projects/{project_id}/locations/{location_id}`
		 * @param {string} connectorId Required. BeyondCorp Connector name of the connector associated with those connections using the form: `projects/{project_id}/locations/{location_id}/connectors/{connector_id}`
		 * @param {number} pageSize Optional. The maximum number of items to return. If not specified, a default value of 50 will be used by the service. Regardless of the page_size value, the response may include a partial list and a caller should only rely on response's next_page_token to determine if there are more instances left to be queried.
		 *     Type: int, -2,147,483,648 to 2,147,483,647
		 * @param {string} pageToken Optional. The next_page_token value returned from a previous ResolveConnectionsResponse, if any.
		 * @return {ResolveConnectionsResponse} Successful response
		 */
		Beyondcorp_projects_locations_connections_resolve(parent: string, connectorId: string | null | undefined, pageSize: number | null | undefined, pageToken: string | null | undefined): Observable<ResolveConnectionsResponse> {
			return this.http.get<ResolveConnectionsResponse>(this.baseUri + 'v1alpha/' + (parent == null ? '' : encodeURIComponent(parent)) + '/connections:resolve&connectorId=' + (connectorId == null ? '' : encodeURIComponent(connectorId)) + '&pageSize=' + pageSize + '&pageToken=' + (pageToken == null ? '' : encodeURIComponent(pageToken)), {});
		}

		/**
		 * Lists Connectors in a given project and location.
		 * Get v1alpha/{parent}/connectors
		 * @param {string} parent Required. The resource name of the connector location using the form: `projects/{project_id}/locations/{location_id}`
		 * @param {string} filter Optional. A filter specifying constraints of a list operation.
		 * @param {string} orderBy Optional. Specifies the ordering of results. See [Sorting order](https://cloud.google.com/apis/design/design_patterns#sorting_order) for more information.
		 * @param {number} pageSize Optional. The maximum number of items to return. If not specified, a default value of 50 will be used by the service. Regardless of the page_size value, the response may include a partial list and a caller should only rely on response's next_page_token to determine if there are more instances left to be queried.
		 *     Type: int, -2,147,483,648 to 2,147,483,647
		 * @param {string} pageToken Optional. The next_page_token value returned from a previous ListConnectorsRequest, if any.
		 * @return {ListConnectorsResponse} Successful response
		 */
		Beyondcorp_projects_locations_connectors_list(parent: string, filter: string | null | undefined, orderBy: string | null | undefined, pageSize: number | null | undefined, pageToken: string | null | undefined): Observable<ListConnectorsResponse> {
			return this.http.get<ListConnectorsResponse>(this.baseUri + 'v1alpha/' + (parent == null ? '' : encodeURIComponent(parent)) + '/connectors&filter=' + (filter == null ? '' : encodeURIComponent(filter)) + '&orderBy=' + (orderBy == null ? '' : encodeURIComponent(orderBy)) + '&pageSize=' + pageSize + '&pageToken=' + (pageToken == null ? '' : encodeURIComponent(pageToken)), {});
		}

		/**
		 * Creates a new Connector in a given project and location.
		 * Post v1alpha/{parent}/connectors
		 * @param {string} parent Required. The resource project name of the connector location using the form: `projects/{project_id}/locations/{location_id}`
		 * @param {string} connectorId Optional. User-settable connector resource ID. * Must start with a letter. * Must contain between 4-63 characters from `/a-z-/`. * Must end with a number or a letter.
		 * @param {string} requestId Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
		 * @param {boolean} validateOnly Optional. If set, validates request by executing a dry-run which would not alter the resource in any way.
		 * @return {GoogleLongrunningOperation} Successful response
		 */
		Beyondcorp_projects_locations_connectors_create(parent: string, connectorId: string | null | undefined, requestId: string | null | undefined, validateOnly: boolean | null | undefined, requestBody: Connector): Observable<GoogleLongrunningOperation> {
			return this.http.post<GoogleLongrunningOperation>(this.baseUri + 'v1alpha/' + (parent == null ? '' : encodeURIComponent(parent)) + '/connectors&connectorId=' + (connectorId == null ? '' : encodeURIComponent(connectorId)) + '&requestId=' + (requestId == null ? '' : encodeURIComponent(requestId)) + '&validateOnly=' + validateOnly, JSON.stringify(requestBody), { headers: { 'Content-Type': 'application/json;charset=UTF-8' } });
		}

		/**
		 * Lists for all the available insights that could be fetched from the system. Allows to filter using category. Setting the `view` to `BASIC` will let you iterate over the list of insight metadatas.
		 * Get v1alpha/{parent}/insights
		 * @param {string} parent Required. The resource name of InsightMetadata using the form: `organizations/{organization_id}/locations/{location}` `projects/{project_id}/locations/{location_id}`
		 * @param {string} filter Optional. Filter expression to restrict the insights returned. Supported filter fields: * `type` * `category` * `subCategory` Examples: * "category = application AND type = count" * "category = application AND subCategory = iap" * "type = status" Allowed values: * type: [count, latency, status, list] * category: [application, device, request, security] * subCategory: [iap, webprotect] NOTE: Only equality based comparison is allowed. Only `AND` conjunction is allowed. NOTE: The 'AND' in the filter field needs to be in capital letters only. NOTE: Just filtering on `subCategory` is not allowed. It should be passed in with the parent `category` too. (These expressions are based on the filter language described at https://google.aip.dev/160).
		 * @param {string} orderBy Optional. Hint for how to order the results. This is currently ignored.
		 * @param {number} pageSize Optional. Requested page size. Server may return fewer items than requested. If unspecified, server will pick an appropriate default. NOTE: Default page size is 50.
		 *     Type: int, -2,147,483,648 to 2,147,483,647
		 * @param {string} pageToken Optional. A token identifying a page of results the server should return.
		 * @param {Beyondcorp_projects_locations_operations_getView} view Required. List only metadata or full data.
		 * @return {GoogleCloudBeyondcorpSaasplatformInsightsV1alphaListInsightsResponse} Successful response
		 */
		Beyondcorp_projects_locations_insights_list(parent: string, filter: string | null | undefined, orderBy: string | null | undefined, pageSize: number | null | undefined, pageToken: string | null | undefined, view: Beyondcorp_projects_locations_operations_getView | null | undefined): Observable<GoogleCloudBeyondcorpSaasplatformInsightsV1alphaListInsightsResponse> {
			return this.http.get<GoogleCloudBeyondcorpSaasplatformInsightsV1alphaListInsightsResponse>(this.baseUri + 'v1alpha/' + (parent == null ? '' : encodeURIComponent(parent)) + '/insights&filter=' + (filter == null ? '' : encodeURIComponent(filter)) + '&orderBy=' + (orderBy == null ? '' : encodeURIComponent(orderBy)) + '&pageSize=' + pageSize + '&pageToken=' + (pageToken == null ? '' : encodeURIComponent(pageToken)) + '&view=' + view, {});
		}

		/**
		 * Lists PartnerTenants in a given organization.
		 * Get v1alpha/{parent}/partnerTenants
		 * @param {string} parent Required. The parent organization to which the PartnerTenants belong. Format: `organizations/{organization_id}/locations/global`
		 * @param {string} filter Optional. A filter specifying constraints of a list operation. All fields in the PartnerTenant message are supported. For example, the following query will return the PartnerTenants with displayName "test-tenant" organizations/${ORG_ID}/locations/${LOCATION}/partnerTenants?filter=displayName="test-tenant" Nested fields are also supported. The follow query will return PartnerTenants with internal_tenant_id "1234" organizations/${ORG_ID}/locations/${LOCATION}/partnerTenants?filter=partnerMetadata.internalTenantId="1234" For more information, please refer to https://google.aip.dev/160.
		 * @param {string} orderBy Optional. Specifies the ordering of results. See [Sorting order](https://cloud.google.com/apis/design/design_patterns#sorting_order) for more information.
		 * @param {number} pageSize Optional. The maximum number of items to return. If not specified, a default value of 50 will be used by the service. Regardless of the page_size value, the response may include a partial list and a caller should only rely on response's next_page_token to determine if there are more instances left to be queried.
		 *     Type: int, -2,147,483,648 to 2,147,483,647
		 * @param {string} pageToken Optional. The next_page_token value returned from a previous ListPartnerTenantsResponse, if any.
		 * @return {GoogleCloudBeyondcorpPartnerservicesV1alphaListPartnerTenantsResponse} Successful response
		 */
		Beyondcorp_organizations_locations_global_partnerTenants_list(parent: string, filter: string | null | undefined, orderBy: string | null | undefined, pageSize: number | null | undefined, pageToken: string | null | undefined): Observable<GoogleCloudBeyondcorpPartnerservicesV1alphaListPartnerTenantsResponse> {
			return this.http.get<GoogleCloudBeyondcorpPartnerservicesV1alphaListPartnerTenantsResponse>(this.baseUri + 'v1alpha/' + (parent == null ? '' : encodeURIComponent(parent)) + '/partnerTenants&filter=' + (filter == null ? '' : encodeURIComponent(filter)) + '&orderBy=' + (orderBy == null ? '' : encodeURIComponent(orderBy)) + '&pageSize=' + pageSize + '&pageToken=' + (pageToken == null ? '' : encodeURIComponent(pageToken)), {});
		}

		/**
		 * Creates a new BeyondCorp Enterprise partnerTenant in a given organization and can only be called by onboarded BeyondCorp Enterprise partner.
		 * Post v1alpha/{parent}/partnerTenants
		 * @param {string} parent Required. The resource name of the parent organization using the form: `organizations/{organization_id}/locations/global`
		 * @param {string} requestId Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
		 * @return {GoogleLongrunningOperation} Successful response
		 */
		Beyondcorp_organizations_locations_global_partnerTenants_create(parent: string, requestId: string | null | undefined, requestBody: GoogleCloudBeyondcorpPartnerservicesV1alphaPartnerTenant): Observable<GoogleLongrunningOperation> {
			return this.http.post<GoogleLongrunningOperation>(this.baseUri + 'v1alpha/' + (parent == null ? '' : encodeURIComponent(parent)) + '/partnerTenants&requestId=' + (requestId == null ? '' : encodeURIComponent(requestId)), JSON.stringify(requestBody), { headers: { 'Content-Type': 'application/json;charset=UTF-8' } });
		}

		/**
		 * Lists ProxyConfigs for PartnerTenant in a given organization.
		 * Get v1alpha/{parent}/proxyConfigs
		 * @param {string} parent Required. The parent organization to which the ProxyConfigs belong. Format: `organizations/{organization_id}/locations/global/partnerTenants/{partner_tenant_id}`
		 * @param {string} filter Optional. A filter specifying constraints of a list operation. All fields in the ProxyConfig message are supported. For example, the following query will return the ProxyConfigs with displayName "test-config" organizations/${ORG_ID}/locations/global/partnerTenants/${PARTNER_TENANT_ID}/proxyConfigs?filter=displayName="test-config" Nested fields are also supported. The follow query will return ProxyConfigs with pacUri "example.com/pac.pac" organizations/${ORG_ID}/locations/global/partnerTenants/${PARTNER_TENANT_ID}/proxyConfigs?filter=routingInfo.pacUri="example.com/pac.pac" For more information, please refer to https://google.aip.dev/160.
		 * @param {string} orderBy Optional. Specifies the ordering of results. See [Sorting order](https://cloud.google.com/apis/design/design_patterns#sorting_order) for more information.
		 * @param {number} pageSize Optional. The maximum number of items to return. If not specified, a default value of 50 will be used by the service. Regardless of the page_size value, the response may include a partial list and a caller should only rely on response's next_page_token to determine if there are more instances left to be queried.
		 *     Type: int, -2,147,483,648 to 2,147,483,647
		 * @param {string} pageToken Optional. The next_page_token value returned from a previous ListProxyConfigsRequest, if any.
		 * @return {GoogleCloudBeyondcorpPartnerservicesV1alphaListProxyConfigsResponse} Successful response
		 */
		Beyondcorp_organizations_locations_global_partnerTenants_proxyConfigs_list(parent: string, filter: string | null | undefined, orderBy: string | null | undefined, pageSize: number | null | undefined, pageToken: string | null | undefined): Observable<GoogleCloudBeyondcorpPartnerservicesV1alphaListProxyConfigsResponse> {
			return this.http.get<GoogleCloudBeyondcorpPartnerservicesV1alphaListProxyConfigsResponse>(this.baseUri + 'v1alpha/' + (parent == null ? '' : encodeURIComponent(parent)) + '/proxyConfigs&filter=' + (filter == null ? '' : encodeURIComponent(filter)) + '&orderBy=' + (orderBy == null ? '' : encodeURIComponent(orderBy)) + '&pageSize=' + pageSize + '&pageToken=' + (pageToken == null ? '' : encodeURIComponent(pageToken)), {});
		}

		/**
		 * Creates a new BeyondCorp Enterprise ProxyConfig in a given organization and PartnerTenant. Can only be called by on onboarded Beyondcorp Enterprise partner.
		 * Post v1alpha/{parent}/proxyConfigs
		 * @param {string} parent Required. The resource name of the parent PartnerTenant using the form: `organizations/{organization_id}/locations/global/partnerTenants/{partner_tenant_id}`
		 * @param {string} requestId Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
		 * @return {GoogleLongrunningOperation} Successful response
		 */
		Beyondcorp_organizations_locations_global_partnerTenants_proxyConfigs_create(parent: string, requestId: string | null | undefined, requestBody: GoogleCloudBeyondcorpPartnerservicesV1alphaProxyConfig): Observable<GoogleLongrunningOperation> {
			return this.http.post<GoogleLongrunningOperation>(this.baseUri + 'v1alpha/' + (parent == null ? '' : encodeURIComponent(parent)) + '/proxyConfigs&requestId=' + (requestId == null ? '' : encodeURIComponent(requestId)), JSON.stringify(requestBody), { headers: { 'Content-Type': 'application/json;charset=UTF-8' } });
		}

		/**
		 * Lists Subscriptions in a given organization and location.
		 * Get v1alpha/{parent}/subscriptions
		 * @param {string} parent Required. The resource name of Subscription using the form: `organizations/{organization_id}/locations/{location}`
		 * @param {number} pageSize Optional. The maximum number of items to return. If not specified, a default value of 50 will be used by the service. Regardless of the page_size value, the response may include a partial list and a caller should only rely on response's next_page_token to determine if there are more instances left to be queried.
		 *     Type: int, -2,147,483,648 to 2,147,483,647
		 * @param {string} pageToken Optional. The next_page_token value returned from a previous ListSubscriptionsRequest, if any.
		 * @return {GoogleCloudBeyondcorpSaasplatformSubscriptionsV1alphaListSubscriptionsResponse} Successful response
		 */
		Beyondcorp_organizations_locations_subscriptions_list(parent: string, pageSize: number | null | undefined, pageToken: string | null | undefined): Observable<GoogleCloudBeyondcorpSaasplatformSubscriptionsV1alphaListSubscriptionsResponse> {
			return this.http.get<GoogleCloudBeyondcorpSaasplatformSubscriptionsV1alphaListSubscriptionsResponse>(this.baseUri + 'v1alpha/' + (parent == null ? '' : encodeURIComponent(parent)) + '/subscriptions&pageSize=' + pageSize + '&pageToken=' + (pageToken == null ? '' : encodeURIComponent(pageToken)), {});
		}

		/**
		 * Creates a new BeyondCorp Enterprise Subscription in a given organization. Location will always be global as BeyondCorp subscriptions are per organization.
		 * Post v1alpha/{parent}/subscriptions
		 * @param {string} parent Required. The resource name of the subscription location using the form: `organizations/{organization_id}/locations/{location}`
		 * @return {GoogleCloudBeyondcorpSaasplatformSubscriptionsV1alphaSubscription} Successful response
		 */
		Beyondcorp_organizations_locations_subscriptions_create(parent: string, requestBody: GoogleCloudBeyondcorpSaasplatformSubscriptionsV1alphaSubscription): Observable<GoogleCloudBeyondcorpSaasplatformSubscriptionsV1alphaSubscription> {
			return this.http.post<GoogleCloudBeyondcorpSaasplatformSubscriptionsV1alphaSubscription>(this.baseUri + 'v1alpha/' + (parent == null ? '' : encodeURIComponent(parent)) + '/subscriptions', JSON.stringify(requestBody), { headers: { 'Content-Type': 'application/json;charset=UTF-8' } });
		}

		/**
		 * Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.
		 * Get v1alpha/{resource}:getIamPolicy
		 * @param {string} resource REQUIRED: The resource for which the policy is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.
		 * @param {number} options_requestedPolicyVersion Optional. The maximum policy version that will be used to format the policy. Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests for policies with any conditional role bindings must specify version 3. Policies with no conditional role bindings may specify any valid value or leave the field unset. The policy in the response might use the policy version that you specified, or it might use a lower policy version. For example, if you specify version 3, but the policy has no conditional role bindings, the response uses version 1. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
		 *     Type: int, -2,147,483,648 to 2,147,483,647
		 * @return {GoogleIamV1Policy} Successful response
		 */
		Beyondcorp_projects_locations_netConnections_getIamPolicy(resource: string, options_requestedPolicyVersion: number | null | undefined): Observable<GoogleIamV1Policy> {
			return this.http.get<GoogleIamV1Policy>(this.baseUri + 'v1alpha/' + (resource == null ? '' : encodeURIComponent(resource)) + ':getIamPolicy&options_requestedPolicyVersion=' + options_requestedPolicyVersion, {});
		}

		/**
		 * Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.
		 * Post v1alpha/{resource}:setIamPolicy
		 * @param {string} resource REQUIRED: The resource for which the policy is being specified. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.
		 * @return {GoogleIamV1Policy} Successful response
		 */
		Beyondcorp_projects_locations_netConnections_setIamPolicy(resource: string, requestBody: GoogleIamV1SetIamPolicyRequest): Observable<GoogleIamV1Policy> {
			return this.http.post<GoogleIamV1Policy>(this.baseUri + 'v1alpha/' + (resource == null ? '' : encodeURIComponent(resource)) + ':setIamPolicy', JSON.stringify(requestBody), { headers: { 'Content-Type': 'application/json;charset=UTF-8' } });
		}

		/**
		 * Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may "fail open" without warning.
		 * Post v1alpha/{resource}:testIamPermissions
		 * @param {string} resource REQUIRED: The resource for which the policy detail is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.
		 * @return {GoogleIamV1TestIamPermissionsResponse} Successful response
		 */
		Beyondcorp_projects_locations_netConnections_testIamPermissions(resource: string, requestBody: GoogleIamV1TestIamPermissionsRequest): Observable<GoogleIamV1TestIamPermissionsResponse> {
			return this.http.post<GoogleIamV1TestIamPermissionsResponse>(this.baseUri + 'v1alpha/' + (resource == null ? '' : encodeURIComponent(resource)) + ':testIamPermissions', JSON.stringify(requestBody), { headers: { 'Content-Type': 'application/json;charset=UTF-8' } });
		}
	}

	export enum Beyondcorp_projects_locations_operations_getView { INSIGHT_VIEW_UNSPECIFIED = 'INSIGHT_VIEW_UNSPECIFIED', BASIC = 'BASIC', FULL = 'FULL' }

}


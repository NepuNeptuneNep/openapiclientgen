import { Injectable, Inject } from '@angular/core';
import { HttpClient, HttpHeaders, HttpResponse } from '@angular/common/http';
import { Observable } from 'rxjs';
import { FormControl, FormGroup, Validators } from '@angular/forms';
export namespace MyNS {
	@Injectable()
	export class MyClient {
		constructor(@Inject('baseUri') private baseUri: string = location.protocol + '//' + location.hostname + (location.port ? ':' + location.port : '') + '/', private http: HttpClient) {
		}

		/**
		 * Trips - trip details
		 * Trips - trip details
		 * Get mobilesdk/stage/track/get_track/v1
		 * @return {TripsTripDetailsReturn} Success
		 */
		TripsTripDetails(trackToken: string | null | undefined): Observable<TripsTripDetailsReturn> {
			return this.http.get<TripsTripDetailsReturn>(this.baseUri + 'mobilesdk/stage/track/get_track/v1?trackToken=' + (trackToken == null ? '' : encodeURIComponent(trackToken)), {});
		}

		/**
		 * /v1/Scorings/consolidated
		 * /v1/Scorings/consolidated
		 * Get statistics/v1/Scorings/consolidated
		 * @return {void} Success
		 */
		Slashv1SlashscoringsSlashconsolidated(DeviceToken: string | null | undefined, StartDate: string | null | undefined, EndDate: string | null | undefined, Tag: string | null | undefined, InstanceId: string | null | undefined, AppId: string | null | undefined, CompanyId: string | null | undefined): Observable<HttpResponse<string>> {
			return this.http.get(this.baseUri + 'statistics/v1/Scorings/consolidated?DeviceToken=' + (DeviceToken == null ? '' : encodeURIComponent(DeviceToken)) + '&StartDate=' + (StartDate == null ? '' : encodeURIComponent(StartDate)) + '&EndDate=' + (EndDate == null ? '' : encodeURIComponent(EndDate)) + '&Tag=' + (Tag == null ? '' : encodeURIComponent(Tag)) + '&InstanceId=' + (InstanceId == null ? '' : encodeURIComponent(InstanceId)) + '&AppId=' + (AppId == null ? '' : encodeURIComponent(AppId)) + '&CompanyId=' + (CompanyId == null ? '' : encodeURIComponent(CompanyId)), { observe: 'response', responseType: 'text' });
		}

		/**
		 * /v1/Scorings/consolidated/daily
		 * /v1/Scorings/consolidated/daily
		 * Get statistics/v1/Scorings/consolidated/daily
		 * @return {Slashv1SlashscoringsSlashconsolidatedSlashdailyReturn} Success
		 */
		Slashv1SlashscoringsSlashconsolidatedSlashdaily(DeviceToken: string | null | undefined, StartDate: string | null | undefined, EndDate: string | null | undefined, Tag: string | null | undefined, InstanceId: string | null | undefined, AppId: string | null | undefined, CompanyId: string | null | undefined): Observable<Slashv1SlashscoringsSlashconsolidatedSlashdailyReturn> {
			return this.http.get<Slashv1SlashscoringsSlashconsolidatedSlashdailyReturn>(this.baseUri + 'statistics/v1/Scorings/consolidated/daily?DeviceToken=' + (DeviceToken == null ? '' : encodeURIComponent(DeviceToken)) + '&StartDate=' + (StartDate == null ? '' : encodeURIComponent(StartDate)) + '&EndDate=' + (EndDate == null ? '' : encodeURIComponent(EndDate)) + '&Tag=' + (Tag == null ? '' : encodeURIComponent(Tag)) + '&InstanceId=' + (InstanceId == null ? '' : encodeURIComponent(InstanceId)) + '&AppId=' + (AppId == null ? '' : encodeURIComponent(AppId)) + '&CompanyId=' + (CompanyId == null ? '' : encodeURIComponent(CompanyId)), {});
		}

		/**
		 * User safe scoring - Accumulated value - v1/Scorings/individual
		 * Safe driving score API. This API is a part of Telematics API that we provide to our clients.
		 * Rating description presents the universal approach, developed by our company on the basis of many years of experience; most of the input variables presented in this document could be adopted depending on the needs of the company and the focus on the specific characteristics of clients' driving style.
		 * Since 2019 we have moved to the 3rd Generation of the scoring model which allows distinguishing a context of events and add penalty points in accordance with a level of risk generated by an event
		 * [More details](https://docs.telematicssdk.com)
		 * Get statistics/v1/Scorings/individual/
		 * @return {UserSafeScoringAccumulatedValueV1SlashscoringsSlashindividualReturn} Success
		 */
		UserSafeScoringAccumulatedValueV1SlashscoringsSlashindividual(startDate: string | null | undefined, endDate: string | null | undefined): Observable<UserSafeScoringAccumulatedValueV1SlashscoringsSlashindividualReturn> {
			return this.http.get<UserSafeScoringAccumulatedValueV1SlashscoringsSlashindividualReturn>(this.baseUri + 'statistics/v1/Scorings/individual/?startDate=' + (startDate == null ? '' : encodeURIComponent(startDate)) + '&endDate=' + (endDate == null ? '' : encodeURIComponent(endDate)), {});
		}

		/**
		 * User safe scoring - daily value - /v1/Scorings/individual/daily
		 * User safe scoring - daily value - /v1/Scorings/individual/daily
		 * Get statistics/v1/Scorings/individual/daily
		 * @param {string} Tag Optional
		 * @param {string} StartDate (Required) 
		 * @param {string} EndDate (Required) 
		 * @return {UserSafeScoringDailyValueSlashv1SlashscoringsSlashindividualSlashdailyReturn} Success
		 */
		UserSafeScoringDailyValueSlashv1SlashscoringsSlashindividualSlashdaily(Tag: string | null | undefined, StartDate: string | null | undefined, EndDate: string | null | undefined): Observable<UserSafeScoringDailyValueSlashv1SlashscoringsSlashindividualSlashdailyReturn> {
			return this.http.get<UserSafeScoringDailyValueSlashv1SlashscoringsSlashindividualSlashdailyReturn>(this.baseUri + 'statistics/v1/Scorings/individual/daily?Tag=' + (Tag == null ? '' : encodeURIComponent(Tag)) + '&StartDate=' + (StartDate == null ? '' : encodeURIComponent(StartDate)) + '&EndDate=' + (EndDate == null ? '' : encodeURIComponent(EndDate)), {});
		}

		/**
		 * /v1/Statistics/consolidated
		 * /v1/Statistics/consolidated
		 * Get statistics/v1/Statistics/consolidated
		 * @return {void} Success
		 */
		Slashv1SlashstatisticsSlashconsolidated(DeviceToken: string | null | undefined, StartDate: string | null | undefined, EndDate: string | null | undefined, Tag: string | null | undefined, InstanceId: string | null | undefined, AppId: string | null | undefined, CompanyId: string | null | undefined): Observable<HttpResponse<string>> {
			return this.http.get(this.baseUri + 'statistics/v1/Statistics/consolidated?DeviceToken=' + (DeviceToken == null ? '' : encodeURIComponent(DeviceToken)) + '&StartDate=' + (StartDate == null ? '' : encodeURIComponent(StartDate)) + '&EndDate=' + (EndDate == null ? '' : encodeURIComponent(EndDate)) + '&Tag=' + (Tag == null ? '' : encodeURIComponent(Tag)) + '&InstanceId=' + (InstanceId == null ? '' : encodeURIComponent(InstanceId)) + '&AppId=' + (AppId == null ? '' : encodeURIComponent(AppId)) + '&CompanyId=' + (CompanyId == null ? '' : encodeURIComponent(CompanyId)), { observe: 'response', responseType: 'text' });
		}

		/**
		 * /v1/Statistics/consolidated/daily
		 * /v1/Statistics/consolidated/daily
		 * Get statistics/v1/Statistics/consolidated/daily
		 * @return {void} Success
		 */
		Slashv1SlashstatisticsSlashconsolidatedSlashdaily(DeviceToken: string | null | undefined, StartDate: string | null | undefined, EndDate: string | null | undefined, Tag: string | null | undefined, InstanceId: string | null | undefined, AppId: string | null | undefined, CompanyId: string | null | undefined): Observable<HttpResponse<string>> {
			return this.http.get(this.baseUri + 'statistics/v1/Statistics/consolidated/daily?DeviceToken=' + (DeviceToken == null ? '' : encodeURIComponent(DeviceToken)) + '&StartDate=' + (StartDate == null ? '' : encodeURIComponent(StartDate)) + '&EndDate=' + (EndDate == null ? '' : encodeURIComponent(EndDate)) + '&Tag=' + (Tag == null ? '' : encodeURIComponent(Tag)) + '&InstanceId=' + (InstanceId == null ? '' : encodeURIComponent(InstanceId)) + '&AppId=' + (AppId == null ? '' : encodeURIComponent(AppId)) + '&CompanyId=' + (CompanyId == null ? '' : encodeURIComponent(CompanyId)), { observe: 'response', responseType: 'text' });
		}

		/**
		 * User statistics - Accumulated value - /v1/Statistics/individual
		 * User statistics - Accumulated value - /v1/Statistics/individual
		 * Get statistics/v1/Statistics/individual/
		 * @return {UserStatisticsAccumulatedValueSlashv1SlashstatisticsSlashindividualReturn} Success
		 */
		UserStatisticsAccumulatedValueSlashv1SlashstatisticsSlashindividual(startDate: string | null | undefined, endDate: string | null | undefined): Observable<UserStatisticsAccumulatedValueSlashv1SlashstatisticsSlashindividualReturn> {
			return this.http.get<UserStatisticsAccumulatedValueSlashv1SlashstatisticsSlashindividualReturn>(this.baseUri + 'statistics/v1/Statistics/individual/?startDate=' + (startDate == null ? '' : encodeURIComponent(startDate)) + '&endDate=' + (endDate == null ? '' : encodeURIComponent(endDate)), {});
		}

		/**
		 * User statistice - Daily value - v1/Statistics/individual/daily
		 * User statistice - Daily value - v1/Statistics/individual/daily
		 * Get statistics/v1/Statistics/individual/daily/
		 * @return {UserStatisticeDailyValueV1SlashstatisticsSlashindividualSlashdailyReturn} Success
		 */
		UserStatisticeDailyValueV1SlashstatisticsSlashindividualSlashdaily(startDate: string | null | undefined, endDate: string | null | undefined): Observable<UserStatisticeDailyValueV1SlashstatisticsSlashindividualSlashdailyReturn> {
			return this.http.get<UserStatisticeDailyValueV1SlashstatisticsSlashindividualSlashdailyReturn>(this.baseUri + 'statistics/v1/Statistics/individual/daily/?startDate=' + (startDate == null ? '' : encodeURIComponent(startDate)) + '&endDate=' + (endDate == null ? '' : encodeURIComponent(endDate)), {});
		}
	}

	export interface TripsTripDetailsReturn {
		Result?: TripsTripDetailsReturnResult;
	}
	export interface TripsTripDetailsReturnFormProperties {
	}
	export function CreateTripsTripDetailsReturnFormGroup() {
		return new FormGroup<TripsTripDetailsReturnFormProperties>({
		});

	}

	export interface TripsTripDetailsReturnResult {
		Code?: number | null;
		Track?: TripsTripDetailsReturnResultTrack;
	}
	export interface TripsTripDetailsReturnResultFormProperties {
		Code: FormControl<number | null | undefined>,
	}
	export function CreateTripsTripDetailsReturnResultFormGroup() {
		return new FormGroup<TripsTripDetailsReturnResultFormProperties>({
			Code: new FormControl<number | null | undefined>(undefined),
		});

	}

	export interface TripsTripDetailsReturnResultTrack {
		AccelerationCount?: number | null;
		AddressEnd?: string | null;
		AddressFinishParts?: TripsTripDetailsReturnResultTrackAddressFinishParts;
		AddressStart?: string | null;
		AddressStartParts?: TripsTripDetailsReturnResultTrackAddressStartParts;
		BeaconId?: number | null;
		CityFinish?: string | null;
		CityStart?: string | null;
		DecelerationCount?: number | null;
		Distance?: number | null;
		DrivingTips?: string | null;
		Duration?: number | null;
		EcoScore?: number | null;
		EcoScoreBrakes?: number | null;
		EcoScoreDepreciation?: number | null;
		EcoScoreFuel?: number | null;
		EcoScoreTyres?: number | null;
		EndDate?: string | null;
		HighOverSpeedMileage?: number | null;
		MidOverSpeedMileage?: number | null;
		OriginChanged?: boolean | null;
		PhoneUsage?: number | null;
		TripsTripDetailsReturnResultTrackPoints?: Array<TripsTripDetailsReturnResultTrackPoints>;
		Rating?: number | null;
		Rating100?: number | null;
		RatingAcceleration?: number | null;
		RatingAcceleration100?: number | null;
		RatingBraking?: number | null;
		RatingBraking100?: number | null;
		RatingCornering?: number | null;
		RatingCornering100?: number | null;
		RatingPhoneDistraction100?: number | null;
		RatingPhoneUsage?: number | null;
		RatingSpeeding?: number | null;
		RatingSpeeding100?: number | null;
		RatingTimeOfDay?: number | null;
		ShareType?: string | null;
		StartDate?: string | null;
		Status?: string | null;
		TrackOriginCode?: string | null;
	}
	export interface TripsTripDetailsReturnResultTrackFormProperties {
		AccelerationCount: FormControl<number | null | undefined>,
		AddressEnd: FormControl<string | null | undefined>,
		AddressStart: FormControl<string | null | undefined>,
		BeaconId: FormControl<number | null | undefined>,
		CityFinish: FormControl<string | null | undefined>,
		CityStart: FormControl<string | null | undefined>,
		DecelerationCount: FormControl<number | null | undefined>,
		Distance: FormControl<number | null | undefined>,
		DrivingTips: FormControl<string | null | undefined>,
		Duration: FormControl<number | null | undefined>,
		EcoScore: FormControl<number | null | undefined>,
		EcoScoreBrakes: FormControl<number | null | undefined>,
		EcoScoreDepreciation: FormControl<number | null | undefined>,
		EcoScoreFuel: FormControl<number | null | undefined>,
		EcoScoreTyres: FormControl<number | null | undefined>,
		EndDate: FormControl<string | null | undefined>,
		HighOverSpeedMileage: FormControl<number | null | undefined>,
		MidOverSpeedMileage: FormControl<number | null | undefined>,
		OriginChanged: FormControl<boolean | null | undefined>,
		PhoneUsage: FormControl<number | null | undefined>,
		Rating: FormControl<number | null | undefined>,
		Rating100: FormControl<number | null | undefined>,
		RatingAcceleration: FormControl<number | null | undefined>,
		RatingAcceleration100: FormControl<number | null | undefined>,
		RatingBraking: FormControl<number | null | undefined>,
		RatingBraking100: FormControl<number | null | undefined>,
		RatingCornering: FormControl<number | null | undefined>,
		RatingCornering100: FormControl<number | null | undefined>,
		RatingPhoneDistraction100: FormControl<number | null | undefined>,
		RatingPhoneUsage: FormControl<number | null | undefined>,
		RatingSpeeding: FormControl<number | null | undefined>,
		RatingSpeeding100: FormControl<number | null | undefined>,
		RatingTimeOfDay: FormControl<number | null | undefined>,
		ShareType: FormControl<string | null | undefined>,
		StartDate: FormControl<string | null | undefined>,
		Status: FormControl<string | null | undefined>,
		TrackOriginCode: FormControl<string | null | undefined>,
	}
	export function CreateTripsTripDetailsReturnResultTrackFormGroup() {
		return new FormGroup<TripsTripDetailsReturnResultTrackFormProperties>({
			AccelerationCount: new FormControl<number | null | undefined>(undefined),
			AddressEnd: new FormControl<string | null | undefined>(undefined),
			AddressStart: new FormControl<string | null | undefined>(undefined),
			BeaconId: new FormControl<number | null | undefined>(undefined),
			CityFinish: new FormControl<string | null | undefined>(undefined),
			CityStart: new FormControl<string | null | undefined>(undefined),
			DecelerationCount: new FormControl<number | null | undefined>(undefined),
			Distance: new FormControl<number | null | undefined>(undefined),
			DrivingTips: new FormControl<string | null | undefined>(undefined),
			Duration: new FormControl<number | null | undefined>(undefined),
			EcoScore: new FormControl<number | null | undefined>(undefined),
			EcoScoreBrakes: new FormControl<number | null | undefined>(undefined),
			EcoScoreDepreciation: new FormControl<number | null | undefined>(undefined),
			EcoScoreFuel: new FormControl<number | null | undefined>(undefined),
			EcoScoreTyres: new FormControl<number | null | undefined>(undefined),
			EndDate: new FormControl<string | null | undefined>(undefined),
			HighOverSpeedMileage: new FormControl<number | null | undefined>(undefined),
			MidOverSpeedMileage: new FormControl<number | null | undefined>(undefined),
			OriginChanged: new FormControl<boolean | null | undefined>(undefined),
			PhoneUsage: new FormControl<number | null | undefined>(undefined),
			Rating: new FormControl<number | null | undefined>(undefined),
			Rating100: new FormControl<number | null | undefined>(undefined),
			RatingAcceleration: new FormControl<number | null | undefined>(undefined),
			RatingAcceleration100: new FormControl<number | null | undefined>(undefined),
			RatingBraking: new FormControl<number | null | undefined>(undefined),
			RatingBraking100: new FormControl<number | null | undefined>(undefined),
			RatingCornering: new FormControl<number | null | undefined>(undefined),
			RatingCornering100: new FormControl<number | null | undefined>(undefined),
			RatingPhoneDistraction100: new FormControl<number | null | undefined>(undefined),
			RatingPhoneUsage: new FormControl<number | null | undefined>(undefined),
			RatingSpeeding: new FormControl<number | null | undefined>(undefined),
			RatingSpeeding100: new FormControl<number | null | undefined>(undefined),
			RatingTimeOfDay: new FormControl<number | null | undefined>(undefined),
			ShareType: new FormControl<string | null | undefined>(undefined),
			StartDate: new FormControl<string | null | undefined>(undefined),
			Status: new FormControl<string | null | undefined>(undefined),
			TrackOriginCode: new FormControl<string | null | undefined>(undefined),
		});

	}

	export interface TripsTripDetailsReturnResultTrackAddressFinishParts {
		City?: string | null;
		CountryCode?: string | null;
		District?: string | null;
		House?: string | null;
		PostalCode?: string | null;
		Street?: string | null;
	}
	export interface TripsTripDetailsReturnResultTrackAddressFinishPartsFormProperties {
		City: FormControl<string | null | undefined>,
		CountryCode: FormControl<string | null | undefined>,
		District: FormControl<string | null | undefined>,
		House: FormControl<string | null | undefined>,
		PostalCode: FormControl<string | null | undefined>,
		Street: FormControl<string | null | undefined>,
	}
	export function CreateTripsTripDetailsReturnResultTrackAddressFinishPartsFormGroup() {
		return new FormGroup<TripsTripDetailsReturnResultTrackAddressFinishPartsFormProperties>({
			City: new FormControl<string | null | undefined>(undefined),
			CountryCode: new FormControl<string | null | undefined>(undefined),
			District: new FormControl<string | null | undefined>(undefined),
			House: new FormControl<string | null | undefined>(undefined),
			PostalCode: new FormControl<string | null | undefined>(undefined),
			Street: new FormControl<string | null | undefined>(undefined),
		});

	}

	export interface TripsTripDetailsReturnResultTrackAddressStartParts {
		City?: string | null;
		CountryCode?: string | null;
		District?: string | null;
		House?: string | null;
		PostalCode?: string | null;
		Street?: string | null;
	}
	export interface TripsTripDetailsReturnResultTrackAddressStartPartsFormProperties {
		City: FormControl<string | null | undefined>,
		CountryCode: FormControl<string | null | undefined>,
		District: FormControl<string | null | undefined>,
		House: FormControl<string | null | undefined>,
		PostalCode: FormControl<string | null | undefined>,
		Street: FormControl<string | null | undefined>,
	}
	export function CreateTripsTripDetailsReturnResultTrackAddressStartPartsFormGroup() {
		return new FormGroup<TripsTripDetailsReturnResultTrackAddressStartPartsFormProperties>({
			City: new FormControl<string | null | undefined>(undefined),
			CountryCode: new FormControl<string | null | undefined>(undefined),
			District: new FormControl<string | null | undefined>(undefined),
			House: new FormControl<string | null | undefined>(undefined),
			PostalCode: new FormControl<string | null | undefined>(undefined),
			Street: new FormControl<string | null | undefined>(undefined),
		});

	}

	export interface TripsTripDetailsReturnResultTrackPoints {
		AlertType?: string | null;
		AlertValue?: number | null;
		Cornering?: boolean | null;
		Course?: number | null;
		Height?: number | null;
		Id?: number | null;
		Lateral?: number | null;
		Latitude?: number | null;
		Longitude?: number | null;
		MidSpeed?: number | null;
		Number?: number | null;
		PhoneUsage?: boolean | null;
		PointDate?: string | null;
		Speed?: number | null;
		SpeedLimit?: number | null;
		SpeedType?: string | null;
		TotalMeters?: number | null;
		Yaw?: number | null;
	}
	export interface TripsTripDetailsReturnResultTrackPointsFormProperties {
		AlertType: FormControl<string | null | undefined>,
		AlertValue: FormControl<number | null | undefined>,
		Cornering: FormControl<boolean | null | undefined>,
		Course: FormControl<number | null | undefined>,
		Height: FormControl<number | null | undefined>,
		Id: FormControl<number | null | undefined>,
		Lateral: FormControl<number | null | undefined>,
		Latitude: FormControl<number | null | undefined>,
		Longitude: FormControl<number | null | undefined>,
		MidSpeed: FormControl<number | null | undefined>,
		Number: FormControl<number | null | undefined>,
		PhoneUsage: FormControl<boolean | null | undefined>,
		PointDate: FormControl<string | null | undefined>,
		Speed: FormControl<number | null | undefined>,
		SpeedLimit: FormControl<number | null | undefined>,
		SpeedType: FormControl<string | null | undefined>,
		TotalMeters: FormControl<number | null | undefined>,
		Yaw: FormControl<number | null | undefined>,
	}
	export function CreateTripsTripDetailsReturnResultTrackPointsFormGroup() {
		return new FormGroup<TripsTripDetailsReturnResultTrackPointsFormProperties>({
			AlertType: new FormControl<string | null | undefined>(undefined),
			AlertValue: new FormControl<number | null | undefined>(undefined),
			Cornering: new FormControl<boolean | null | undefined>(undefined),
			Course: new FormControl<number | null | undefined>(undefined),
			Height: new FormControl<number | null | undefined>(undefined),
			Id: new FormControl<number | null | undefined>(undefined),
			Lateral: new FormControl<number | null | undefined>(undefined),
			Latitude: new FormControl<number | null | undefined>(undefined),
			Longitude: new FormControl<number | null | undefined>(undefined),
			MidSpeed: new FormControl<number | null | undefined>(undefined),
			Number: new FormControl<number | null | undefined>(undefined),
			PhoneUsage: new FormControl<boolean | null | undefined>(undefined),
			PointDate: new FormControl<string | null | undefined>(undefined),
			Speed: new FormControl<number | null | undefined>(undefined),
			SpeedLimit: new FormControl<number | null | undefined>(undefined),
			SpeedType: new FormControl<string | null | undefined>(undefined),
			TotalMeters: new FormControl<number | null | undefined>(undefined),
			Yaw: new FormControl<number | null | undefined>(undefined),
		});

	}

	export interface Slashv1SlashscoringsSlashconsolidatedSlashdailyReturn {
		Errors?: Array<string>;
		Slashv1SlashscoringsSlashconsolidatedSlashdailyReturnResult?: Array<Slashv1SlashscoringsSlashconsolidatedSlashdailyReturnResult>;
		Status?: number | null;
		Title?: string | null;
	}
	export interface Slashv1SlashscoringsSlashconsolidatedSlashdailyReturnFormProperties {
		Status: FormControl<number | null | undefined>,
		Title: FormControl<string | null | undefined>,
	}
	export function CreateSlashv1SlashscoringsSlashconsolidatedSlashdailyReturnFormGroup() {
		return new FormGroup<Slashv1SlashscoringsSlashconsolidatedSlashdailyReturnFormProperties>({
			Status: new FormControl<number | null | undefined>(undefined),
			Title: new FormControl<string | null | undefined>(undefined),
		});

	}

	export interface Slashv1SlashscoringsSlashconsolidatedSlashdailyReturnResult {
		AccelerationScore?: number | null;
		AppId?: string | null;
		BrakingScore?: number | null;
		CompanyId?: string | null;
		CorneringScore?: number | null;
		DeviceToken?: string | null;
		DistractedScore?: number | null;
		InstanceId?: string | null;
		OverallScore?: number | null;
		ReportDate?: string | null;
		SpeedingScore?: number | null;
	}
	export interface Slashv1SlashscoringsSlashconsolidatedSlashdailyReturnResultFormProperties {
		AccelerationScore: FormControl<number | null | undefined>,
		AppId: FormControl<string | null | undefined>,
		BrakingScore: FormControl<number | null | undefined>,
		CompanyId: FormControl<string | null | undefined>,
		CorneringScore: FormControl<number | null | undefined>,
		DeviceToken: FormControl<string | null | undefined>,
		DistractedScore: FormControl<number | null | undefined>,
		InstanceId: FormControl<string | null | undefined>,
		OverallScore: FormControl<number | null | undefined>,
		ReportDate: FormControl<string | null | undefined>,
		SpeedingScore: FormControl<number | null | undefined>,
	}
	export function CreateSlashv1SlashscoringsSlashconsolidatedSlashdailyReturnResultFormGroup() {
		return new FormGroup<Slashv1SlashscoringsSlashconsolidatedSlashdailyReturnResultFormProperties>({
			AccelerationScore: new FormControl<number | null | undefined>(undefined),
			AppId: new FormControl<string | null | undefined>(undefined),
			BrakingScore: new FormControl<number | null | undefined>(undefined),
			CompanyId: new FormControl<string | null | undefined>(undefined),
			CorneringScore: new FormControl<number | null | undefined>(undefined),
			DeviceToken: new FormControl<string | null | undefined>(undefined),
			DistractedScore: new FormControl<number | null | undefined>(undefined),
			InstanceId: new FormControl<string | null | undefined>(undefined),
			OverallScore: new FormControl<number | null | undefined>(undefined),
			ReportDate: new FormControl<string | null | undefined>(undefined),
			SpeedingScore: new FormControl<number | null | undefined>(undefined),
		});

	}

	export interface UserSafeScoringAccumulatedValueV1SlashscoringsSlashindividualReturn {
		Errors?: Array<string>;
		Result?: UserSafeScoringAccumulatedValueV1SlashscoringsSlashindividualReturnResult;
		Status?: number | null;
		Title?: string | null;
	}
	export interface UserSafeScoringAccumulatedValueV1SlashscoringsSlashindividualReturnFormProperties {
		Status: FormControl<number | null | undefined>,
		Title: FormControl<string | null | undefined>,
	}
	export function CreateUserSafeScoringAccumulatedValueV1SlashscoringsSlashindividualReturnFormGroup() {
		return new FormGroup<UserSafeScoringAccumulatedValueV1SlashscoringsSlashindividualReturnFormProperties>({
			Status: new FormControl<number | null | undefined>(undefined),
			Title: new FormControl<string | null | undefined>(undefined),
		});

	}

	export interface UserSafeScoringAccumulatedValueV1SlashscoringsSlashindividualReturnResult {
		AccelerationScore?: number | null;
		AppId?: string | null;
		BrakingScore?: number | null;
		CompanyId?: string | null;
		CorneringScore?: number | null;
		DeviceToken?: string | null;
		DistractedScore?: number | null;
		InstanceId?: string | null;
		OverallScore?: number | null;
		SpeedingScore?: number | null;
	}
	export interface UserSafeScoringAccumulatedValueV1SlashscoringsSlashindividualReturnResultFormProperties {
		AccelerationScore: FormControl<number | null | undefined>,
		AppId: FormControl<string | null | undefined>,
		BrakingScore: FormControl<number | null | undefined>,
		CompanyId: FormControl<string | null | undefined>,
		CorneringScore: FormControl<number | null | undefined>,
		DeviceToken: FormControl<string | null | undefined>,
		DistractedScore: FormControl<number | null | undefined>,
		InstanceId: FormControl<string | null | undefined>,
		OverallScore: FormControl<number | null | undefined>,
		SpeedingScore: FormControl<number | null | undefined>,
	}
	export function CreateUserSafeScoringAccumulatedValueV1SlashscoringsSlashindividualReturnResultFormGroup() {
		return new FormGroup<UserSafeScoringAccumulatedValueV1SlashscoringsSlashindividualReturnResultFormProperties>({
			AccelerationScore: new FormControl<number | null | undefined>(undefined),
			AppId: new FormControl<string | null | undefined>(undefined),
			BrakingScore: new FormControl<number | null | undefined>(undefined),
			CompanyId: new FormControl<string | null | undefined>(undefined),
			CorneringScore: new FormControl<number | null | undefined>(undefined),
			DeviceToken: new FormControl<string | null | undefined>(undefined),
			DistractedScore: new FormControl<number | null | undefined>(undefined),
			InstanceId: new FormControl<string | null | undefined>(undefined),
			OverallScore: new FormControl<number | null | undefined>(undefined),
			SpeedingScore: new FormControl<number | null | undefined>(undefined),
		});

	}

	export interface UserSafeScoringDailyValueSlashv1SlashscoringsSlashindividualSlashdailyReturn {
		Errors?: Array<string>;
		UserSafeScoringDailyValueSlashv1SlashscoringsSlashindividualSlashdailyReturnResult?: Array<UserSafeScoringDailyValueSlashv1SlashscoringsSlashindividualSlashdailyReturnResult>;
		Status?: number | null;
		Title?: string | null;
	}
	export interface UserSafeScoringDailyValueSlashv1SlashscoringsSlashindividualSlashdailyReturnFormProperties {
		Status: FormControl<number | null | undefined>,
		Title: FormControl<string | null | undefined>,
	}
	export function CreateUserSafeScoringDailyValueSlashv1SlashscoringsSlashindividualSlashdailyReturnFormGroup() {
		return new FormGroup<UserSafeScoringDailyValueSlashv1SlashscoringsSlashindividualSlashdailyReturnFormProperties>({
			Status: new FormControl<number | null | undefined>(undefined),
			Title: new FormControl<string | null | undefined>(undefined),
		});

	}

	export interface UserSafeScoringDailyValueSlashv1SlashscoringsSlashindividualSlashdailyReturnResult {
		AccelerationScore?: number | null;
		AppId?: string | null;
		BrakingScore?: number | null;
		CalcDate?: string | null;
		CompanyId?: string | null;
		CorneringScore?: number | null;
		DeviceToken?: string | null;
		DistractedScore?: number | null;
		InstanceId?: string | null;
		OverallScore?: number | null;
		SpeedingScore?: number | null;
	}
	export interface UserSafeScoringDailyValueSlashv1SlashscoringsSlashindividualSlashdailyReturnResultFormProperties {
		AccelerationScore: FormControl<number | null | undefined>,
		AppId: FormControl<string | null | undefined>,
		BrakingScore: FormControl<number | null | undefined>,
		CalcDate: FormControl<string | null | undefined>,
		CompanyId: FormControl<string | null | undefined>,
		CorneringScore: FormControl<number | null | undefined>,
		DeviceToken: FormControl<string | null | undefined>,
		DistractedScore: FormControl<number | null | undefined>,
		InstanceId: FormControl<string | null | undefined>,
		OverallScore: FormControl<number | null | undefined>,
		SpeedingScore: FormControl<number | null | undefined>,
	}
	export function CreateUserSafeScoringDailyValueSlashv1SlashscoringsSlashindividualSlashdailyReturnResultFormGroup() {
		return new FormGroup<UserSafeScoringDailyValueSlashv1SlashscoringsSlashindividualSlashdailyReturnResultFormProperties>({
			AccelerationScore: new FormControl<number | null | undefined>(undefined),
			AppId: new FormControl<string | null | undefined>(undefined),
			BrakingScore: new FormControl<number | null | undefined>(undefined),
			CalcDate: new FormControl<string | null | undefined>(undefined),
			CompanyId: new FormControl<string | null | undefined>(undefined),
			CorneringScore: new FormControl<number | null | undefined>(undefined),
			DeviceToken: new FormControl<string | null | undefined>(undefined),
			DistractedScore: new FormControl<number | null | undefined>(undefined),
			InstanceId: new FormControl<string | null | undefined>(undefined),
			OverallScore: new FormControl<number | null | undefined>(undefined),
			SpeedingScore: new FormControl<number | null | undefined>(undefined),
		});

	}

	export interface UserStatisticsAccumulatedValueSlashv1SlashstatisticsSlashindividualReturn {
		Errors?: Array<string>;
		Result?: UserStatisticsAccumulatedValueSlashv1SlashstatisticsSlashindividualReturnResult;
		Status?: number | null;
		Title?: string | null;
	}
	export interface UserStatisticsAccumulatedValueSlashv1SlashstatisticsSlashindividualReturnFormProperties {
		Status: FormControl<number | null | undefined>,
		Title: FormControl<string | null | undefined>,
	}
	export function CreateUserStatisticsAccumulatedValueSlashv1SlashstatisticsSlashindividualReturnFormGroup() {
		return new FormGroup<UserStatisticsAccumulatedValueSlashv1SlashstatisticsSlashindividualReturnFormProperties>({
			Status: new FormControl<number | null | undefined>(undefined),
			Title: new FormControl<string | null | undefined>(undefined),
		});

	}

	export interface UserStatisticsAccumulatedValueSlashv1SlashstatisticsSlashindividualReturnResult {
		AccelerationCount?: number | null;
		AppId?: string | null;
		AverageSpeedKmh?: number | null;
		AverageSpeedMileh?: number | null;
		BreakingCount?: number | null;
		CompanyId?: string | null;
		CorneringCount?: number | null;
		DayDrivingTime?: number | null;
		DeviceToken?: string | null;
		DriverTripsCount?: number | null;
		DrivingTime?: number | null;
		InstanceId?: string | null;
		MaxSpeedKmh?: number | null;
		MaxSpeedMileh?: number | null;
		MileageKm?: number | null;
		MileageMile?: number | null;
		NightDrivingTime?: number | null;
		OtherTripsCount?: number | null;
		PhoneUsageDistanceKm?: number | null;
		PhoneUsageDistanceMile?: number | null;
		PhoneUsageDurationMin?: number | null;
		PhoneUsageOverSpeedDistanceKm?: number | null;
		PhoneUsageOverSpeedDistanceMile?: number | null;
		PhoneUsageOverSpeedDurationMin?: number | null;
		RushHoursDrivingTime?: number | null;
		TotalSpeedingKm?: number | null;
		TotalSpeedingMile?: number | null;
		TripsCount?: number | null;
	}
	export interface UserStatisticsAccumulatedValueSlashv1SlashstatisticsSlashindividualReturnResultFormProperties {
		AccelerationCount: FormControl<number | null | undefined>,
		AppId: FormControl<string | null | undefined>,
		AverageSpeedKmh: FormControl<number | null | undefined>,
		AverageSpeedMileh: FormControl<number | null | undefined>,
		BreakingCount: FormControl<number | null | undefined>,
		CompanyId: FormControl<string | null | undefined>,
		CorneringCount: FormControl<number | null | undefined>,
		DayDrivingTime: FormControl<number | null | undefined>,
		DeviceToken: FormControl<string | null | undefined>,
		DriverTripsCount: FormControl<number | null | undefined>,
		DrivingTime: FormControl<number | null | undefined>,
		InstanceId: FormControl<string | null | undefined>,
		MaxSpeedKmh: FormControl<number | null | undefined>,
		MaxSpeedMileh: FormControl<number | null | undefined>,
		MileageKm: FormControl<number | null | undefined>,
		MileageMile: FormControl<number | null | undefined>,
		NightDrivingTime: FormControl<number | null | undefined>,
		OtherTripsCount: FormControl<number | null | undefined>,
		PhoneUsageDistanceKm: FormControl<number | null | undefined>,
		PhoneUsageDistanceMile: FormControl<number | null | undefined>,
		PhoneUsageDurationMin: FormControl<number | null | undefined>,
		PhoneUsageOverSpeedDistanceKm: FormControl<number | null | undefined>,
		PhoneUsageOverSpeedDistanceMile: FormControl<number | null | undefined>,
		PhoneUsageOverSpeedDurationMin: FormControl<number | null | undefined>,
		RushHoursDrivingTime: FormControl<number | null | undefined>,
		TotalSpeedingKm: FormControl<number | null | undefined>,
		TotalSpeedingMile: FormControl<number | null | undefined>,
		TripsCount: FormControl<number | null | undefined>,
	}
	export function CreateUserStatisticsAccumulatedValueSlashv1SlashstatisticsSlashindividualReturnResultFormGroup() {
		return new FormGroup<UserStatisticsAccumulatedValueSlashv1SlashstatisticsSlashindividualReturnResultFormProperties>({
			AccelerationCount: new FormControl<number | null | undefined>(undefined),
			AppId: new FormControl<string | null | undefined>(undefined),
			AverageSpeedKmh: new FormControl<number | null | undefined>(undefined),
			AverageSpeedMileh: new FormControl<number | null | undefined>(undefined),
			BreakingCount: new FormControl<number | null | undefined>(undefined),
			CompanyId: new FormControl<string | null | undefined>(undefined),
			CorneringCount: new FormControl<number | null | undefined>(undefined),
			DayDrivingTime: new FormControl<number | null | undefined>(undefined),
			DeviceToken: new FormControl<string | null | undefined>(undefined),
			DriverTripsCount: new FormControl<number | null | undefined>(undefined),
			DrivingTime: new FormControl<number | null | undefined>(undefined),
			InstanceId: new FormControl<string | null | undefined>(undefined),
			MaxSpeedKmh: new FormControl<number | null | undefined>(undefined),
			MaxSpeedMileh: new FormControl<number | null | undefined>(undefined),
			MileageKm: new FormControl<number | null | undefined>(undefined),
			MileageMile: new FormControl<number | null | undefined>(undefined),
			NightDrivingTime: new FormControl<number | null | undefined>(undefined),
			OtherTripsCount: new FormControl<number | null | undefined>(undefined),
			PhoneUsageDistanceKm: new FormControl<number | null | undefined>(undefined),
			PhoneUsageDistanceMile: new FormControl<number | null | undefined>(undefined),
			PhoneUsageDurationMin: new FormControl<number | null | undefined>(undefined),
			PhoneUsageOverSpeedDistanceKm: new FormControl<number | null | undefined>(undefined),
			PhoneUsageOverSpeedDistanceMile: new FormControl<number | null | undefined>(undefined),
			PhoneUsageOverSpeedDurationMin: new FormControl<number | null | undefined>(undefined),
			RushHoursDrivingTime: new FormControl<number | null | undefined>(undefined),
			TotalSpeedingKm: new FormControl<number | null | undefined>(undefined),
			TotalSpeedingMile: new FormControl<number | null | undefined>(undefined),
			TripsCount: new FormControl<number | null | undefined>(undefined),
		});

	}

	export interface UserStatisticeDailyValueV1SlashstatisticsSlashindividualSlashdailyReturn {
		Errors?: Array<string>;
		UserStatisticeDailyValueV1SlashstatisticsSlashindividualSlashdailyReturnResult?: Array<UserStatisticeDailyValueV1SlashstatisticsSlashindividualSlashdailyReturnResult>;
		Status?: number | null;
		Title?: string | null;
	}
	export interface UserStatisticeDailyValueV1SlashstatisticsSlashindividualSlashdailyReturnFormProperties {
		Status: FormControl<number | null | undefined>,
		Title: FormControl<string | null | undefined>,
	}
	export function CreateUserStatisticeDailyValueV1SlashstatisticsSlashindividualSlashdailyReturnFormGroup() {
		return new FormGroup<UserStatisticeDailyValueV1SlashstatisticsSlashindividualSlashdailyReturnFormProperties>({
			Status: new FormControl<number | null | undefined>(undefined),
			Title: new FormControl<string | null | undefined>(undefined),
		});

	}

	export interface UserStatisticeDailyValueV1SlashstatisticsSlashindividualSlashdailyReturnResult {
		AccelerationCount?: number | null;
		AppId?: string | null;
		AverageSpeedKmh?: number | null;
		AverageSpeedMileh?: number | null;
		BreakingCount?: number | null;
		CompanyId?: string | null;
		CorneringCount?: number | null;
		DayDrivingTime?: number | null;
		DeviceToken?: string | null;
		DriverTripsCount?: number | null;
		DrivingTime?: number | null;
		InstanceId?: string | null;
		MaxSpeedKmh?: number | null;
		MaxSpeedMileh?: number | null;
		MileageKm?: number | null;
		MileageMile?: number | null;
		NightDrivingTime?: number | null;
		OtherTripsCount?: number | null;
		PhoneUsageDistanceKm?: number | null;
		PhoneUsageDistanceMile?: number | null;
		PhoneUsageDurationMin?: number | null;
		PhoneUsageOverSpeedDistanceKm?: number | null;
		PhoneUsageOverSpeedDistanceMile?: number | null;
		PhoneUsageOverSpeedDurationMin?: number | null;
		ReportDate?: string | null;
		RushHoursDrivingTime?: number | null;
		TotalSpeedingKm?: number | null;
		TotalSpeedingMile?: number | null;
		TripsCount?: number | null;
	}
	export interface UserStatisticeDailyValueV1SlashstatisticsSlashindividualSlashdailyReturnResultFormProperties {
		AccelerationCount: FormControl<number | null | undefined>,
		AppId: FormControl<string | null | undefined>,
		AverageSpeedKmh: FormControl<number | null | undefined>,
		AverageSpeedMileh: FormControl<number | null | undefined>,
		BreakingCount: FormControl<number | null | undefined>,
		CompanyId: FormControl<string | null | undefined>,
		CorneringCount: FormControl<number | null | undefined>,
		DayDrivingTime: FormControl<number | null | undefined>,
		DeviceToken: FormControl<string | null | undefined>,
		DriverTripsCount: FormControl<number | null | undefined>,
		DrivingTime: FormControl<number | null | undefined>,
		InstanceId: FormControl<string | null | undefined>,
		MaxSpeedKmh: FormControl<number | null | undefined>,
		MaxSpeedMileh: FormControl<number | null | undefined>,
		MileageKm: FormControl<number | null | undefined>,
		MileageMile: FormControl<number | null | undefined>,
		NightDrivingTime: FormControl<number | null | undefined>,
		OtherTripsCount: FormControl<number | null | undefined>,
		PhoneUsageDistanceKm: FormControl<number | null | undefined>,
		PhoneUsageDistanceMile: FormControl<number | null | undefined>,
		PhoneUsageDurationMin: FormControl<number | null | undefined>,
		PhoneUsageOverSpeedDistanceKm: FormControl<number | null | undefined>,
		PhoneUsageOverSpeedDistanceMile: FormControl<number | null | undefined>,
		PhoneUsageOverSpeedDurationMin: FormControl<number | null | undefined>,
		ReportDate: FormControl<string | null | undefined>,
		RushHoursDrivingTime: FormControl<number | null | undefined>,
		TotalSpeedingKm: FormControl<number | null | undefined>,
		TotalSpeedingMile: FormControl<number | null | undefined>,
		TripsCount: FormControl<number | null | undefined>,
	}
	export function CreateUserStatisticeDailyValueV1SlashstatisticsSlashindividualSlashdailyReturnResultFormGroup() {
		return new FormGroup<UserStatisticeDailyValueV1SlashstatisticsSlashindividualSlashdailyReturnResultFormProperties>({
			AccelerationCount: new FormControl<number | null | undefined>(undefined),
			AppId: new FormControl<string | null | undefined>(undefined),
			AverageSpeedKmh: new FormControl<number | null | undefined>(undefined),
			AverageSpeedMileh: new FormControl<number | null | undefined>(undefined),
			BreakingCount: new FormControl<number | null | undefined>(undefined),
			CompanyId: new FormControl<string | null | undefined>(undefined),
			CorneringCount: new FormControl<number | null | undefined>(undefined),
			DayDrivingTime: new FormControl<number | null | undefined>(undefined),
			DeviceToken: new FormControl<string | null | undefined>(undefined),
			DriverTripsCount: new FormControl<number | null | undefined>(undefined),
			DrivingTime: new FormControl<number | null | undefined>(undefined),
			InstanceId: new FormControl<string | null | undefined>(undefined),
			MaxSpeedKmh: new FormControl<number | null | undefined>(undefined),
			MaxSpeedMileh: new FormControl<number | null | undefined>(undefined),
			MileageKm: new FormControl<number | null | undefined>(undefined),
			MileageMile: new FormControl<number | null | undefined>(undefined),
			NightDrivingTime: new FormControl<number | null | undefined>(undefined),
			OtherTripsCount: new FormControl<number | null | undefined>(undefined),
			PhoneUsageDistanceKm: new FormControl<number | null | undefined>(undefined),
			PhoneUsageDistanceMile: new FormControl<number | null | undefined>(undefined),
			PhoneUsageDurationMin: new FormControl<number | null | undefined>(undefined),
			PhoneUsageOverSpeedDistanceKm: new FormControl<number | null | undefined>(undefined),
			PhoneUsageOverSpeedDistanceMile: new FormControl<number | null | undefined>(undefined),
			PhoneUsageOverSpeedDurationMin: new FormControl<number | null | undefined>(undefined),
			ReportDate: new FormControl<string | null | undefined>(undefined),
			RushHoursDrivingTime: new FormControl<number | null | undefined>(undefined),
			TotalSpeedingKm: new FormControl<number | null | undefined>(undefined),
			TotalSpeedingMile: new FormControl<number | null | undefined>(undefined),
			TripsCount: new FormControl<number | null | undefined>(undefined),
		});

	}

}


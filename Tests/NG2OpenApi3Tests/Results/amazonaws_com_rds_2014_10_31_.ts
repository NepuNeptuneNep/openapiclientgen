import { Injectable, Inject } from '@angular/core';
import { HttpClient, HttpHeaders, HttpResponse } from '@angular/common/http';
import { Observable } from 'rxjs';
import { FormControl, FormGroup, Validators } from '@angular/forms';
export namespace MyNS {
	export interface DBClusterNotFoundFault {
	}
	export interface DBClusterNotFoundFaultFormProperties {
	}
	export function CreateDBClusterNotFoundFaultFormGroup() {
		return new FormGroup<DBClusterNotFoundFaultFormProperties>({
		});

	}

	export interface DBClusterRoleAlreadyExistsFault {
	}
	export interface DBClusterRoleAlreadyExistsFaultFormProperties {
	}
	export function CreateDBClusterRoleAlreadyExistsFaultFormGroup() {
		return new FormGroup<DBClusterRoleAlreadyExistsFaultFormProperties>({
		});

	}

	export interface InvalidDBClusterStateFault {
	}
	export interface InvalidDBClusterStateFaultFormProperties {
	}
	export function CreateInvalidDBClusterStateFaultFormGroup() {
		return new FormGroup<InvalidDBClusterStateFaultFormProperties>({
		});

	}

	export interface DBClusterRoleQuotaExceededFault {
	}
	export interface DBClusterRoleQuotaExceededFaultFormProperties {
	}
	export function CreateDBClusterRoleQuotaExceededFaultFormGroup() {
		return new FormGroup<DBClusterRoleQuotaExceededFaultFormProperties>({
		});

	}

	export interface DBInstanceNotFoundFault {
	}
	export interface DBInstanceNotFoundFaultFormProperties {
	}
	export function CreateDBInstanceNotFoundFaultFormGroup() {
		return new FormGroup<DBInstanceNotFoundFaultFormProperties>({
		});

	}

	export interface DBInstanceRoleAlreadyExistsFault {
	}
	export interface DBInstanceRoleAlreadyExistsFaultFormProperties {
	}
	export function CreateDBInstanceRoleAlreadyExistsFaultFormGroup() {
		return new FormGroup<DBInstanceRoleAlreadyExistsFaultFormProperties>({
		});

	}

	export interface InvalidDBInstanceStateFault {
	}
	export interface InvalidDBInstanceStateFaultFormProperties {
	}
	export function CreateInvalidDBInstanceStateFaultFormGroup() {
		return new FormGroup<InvalidDBInstanceStateFaultFormProperties>({
		});

	}

	export interface DBInstanceRoleQuotaExceededFault {
	}
	export interface DBInstanceRoleQuotaExceededFaultFormProperties {
	}
	export function CreateDBInstanceRoleQuotaExceededFaultFormGroup() {
		return new FormGroup<DBInstanceRoleQuotaExceededFaultFormProperties>({
		});

	}

	export interface AddSourceIdentifierToSubscriptionResult {

		/** Contains the results of a successful invocation of the <code>DescribeEventSubscriptions</code> action. */
		EventSubscription?: EventSubscription;
	}
	export interface AddSourceIdentifierToSubscriptionResultFormProperties {
	}
	export function CreateAddSourceIdentifierToSubscriptionResultFormGroup() {
		return new FormGroup<AddSourceIdentifierToSubscriptionResultFormProperties>({
		});

	}


	/** Contains the results of a successful invocation of the <code>DescribeEventSubscriptions</code> action. */
	export interface EventSubscription {
		CustomerAwsId?: string;
		CustSubscriptionId?: string;
		SnsTopicArn?: string;
		Status?: string;
		SubscriptionCreationTime?: string;
		SourceType?: string;
		SourceIdsList?: Array<string>;
		EventCategoriesList?: Array<string>;
		Enabled?: boolean | null;
		EventSubscriptionArn?: string;
	}

	/** Contains the results of a successful invocation of the <code>DescribeEventSubscriptions</code> action. */
	export interface EventSubscriptionFormProperties {
		CustomerAwsId: FormControl<string | null | undefined>,
		CustSubscriptionId: FormControl<string | null | undefined>,
		SnsTopicArn: FormControl<string | null | undefined>,
		Status: FormControl<string | null | undefined>,
		SubscriptionCreationTime: FormControl<string | null | undefined>,
		SourceType: FormControl<string | null | undefined>,
		Enabled: FormControl<boolean | null | undefined>,
		EventSubscriptionArn: FormControl<string | null | undefined>,
	}
	export function CreateEventSubscriptionFormGroup() {
		return new FormGroup<EventSubscriptionFormProperties>({
			CustomerAwsId: new FormControl<string | null | undefined>(undefined),
			CustSubscriptionId: new FormControl<string | null | undefined>(undefined),
			SnsTopicArn: new FormControl<string | null | undefined>(undefined),
			Status: new FormControl<string | null | undefined>(undefined),
			SubscriptionCreationTime: new FormControl<string | null | undefined>(undefined),
			SourceType: new FormControl<string | null | undefined>(undefined),
			Enabled: new FormControl<boolean | null | undefined>(undefined),
			EventSubscriptionArn: new FormControl<string | null | undefined>(undefined),
		});

	}

	export interface SubscriptionNotFoundFault {
	}
	export interface SubscriptionNotFoundFaultFormProperties {
	}
	export function CreateSubscriptionNotFoundFaultFormGroup() {
		return new FormGroup<SubscriptionNotFoundFaultFormProperties>({
		});

	}

	export interface SourceNotFoundFault {
	}
	export interface SourceNotFoundFaultFormProperties {
	}
	export function CreateSourceNotFoundFaultFormGroup() {
		return new FormGroup<SourceNotFoundFaultFormProperties>({
		});

	}


	/** <p>Metadata assigned to an Amazon RDS resource consisting of a key-value pair.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Tagging.html">Tagging Amazon RDS Resources</a> in the <i>Amazon RDS User Guide.</i> </p> */
	export interface Tag {
		Key?: string;
		Value?: string;
	}

	/** <p>Metadata assigned to an Amazon RDS resource consisting of a key-value pair.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Tagging.html">Tagging Amazon RDS Resources</a> in the <i>Amazon RDS User Guide.</i> </p> */
	export interface TagFormProperties {
		Key: FormControl<string | null | undefined>,
		Value: FormControl<string | null | undefined>,
	}
	export function CreateTagFormGroup() {
		return new FormGroup<TagFormProperties>({
			Key: new FormControl<string | null | undefined>(undefined),
			Value: new FormControl<string | null | undefined>(undefined),
		});

	}

	export interface DBSnapshotNotFoundFault {
	}
	export interface DBSnapshotNotFoundFaultFormProperties {
	}
	export function CreateDBSnapshotNotFoundFaultFormGroup() {
		return new FormGroup<DBSnapshotNotFoundFaultFormProperties>({
		});

	}

	export interface DBProxyNotFoundFault {
	}
	export interface DBProxyNotFoundFaultFormProperties {
	}
	export function CreateDBProxyNotFoundFaultFormGroup() {
		return new FormGroup<DBProxyNotFoundFaultFormProperties>({
		});

	}

	export interface DBProxyTargetGroupNotFoundFault {
	}
	export interface DBProxyTargetGroupNotFoundFaultFormProperties {
	}
	export function CreateDBProxyTargetGroupNotFoundFaultFormGroup() {
		return new FormGroup<DBProxyTargetGroupNotFoundFaultFormProperties>({
		});

	}

	export interface BlueGreenDeploymentNotFoundFault {
	}
	export interface BlueGreenDeploymentNotFoundFaultFormProperties {
	}
	export function CreateBlueGreenDeploymentNotFoundFaultFormGroup() {
		return new FormGroup<BlueGreenDeploymentNotFoundFaultFormProperties>({
		});

	}

	export interface ApplyPendingMaintenanceActionResult {

		/** Describes the pending maintenance actions for a resource. */
		ResourcePendingMaintenanceActions?: ResourcePendingMaintenanceActions;
	}
	export interface ApplyPendingMaintenanceActionResultFormProperties {
	}
	export function CreateApplyPendingMaintenanceActionResultFormGroup() {
		return new FormGroup<ApplyPendingMaintenanceActionResultFormProperties>({
		});

	}


	/** Describes the pending maintenance actions for a resource. */
	export interface ResourcePendingMaintenanceActions {
		ResourceIdentifier?: string;
		PendingMaintenanceActionDetails?: Array<string>;
	}

	/** Describes the pending maintenance actions for a resource. */
	export interface ResourcePendingMaintenanceActionsFormProperties {
		ResourceIdentifier: FormControl<string | null | undefined>,
	}
	export function CreateResourcePendingMaintenanceActionsFormGroup() {
		return new FormGroup<ResourcePendingMaintenanceActionsFormProperties>({
			ResourceIdentifier: new FormControl<string | null | undefined>(undefined),
		});

	}

	export interface ResourceNotFoundFault {
	}
	export interface ResourceNotFoundFaultFormProperties {
	}
	export function CreateResourceNotFoundFaultFormGroup() {
		return new FormGroup<ResourceNotFoundFaultFormProperties>({
		});

	}

	export interface AuthorizeDBSecurityGroupIngressResult {

		/** <p>Contains the details for an Amazon RDS DB security group.</p> <p>This data type is used as a response element in the <code>DescribeDBSecurityGroups</code> action.</p> */
		DBSecurityGroup?: DBSecurityGroup;
	}
	export interface AuthorizeDBSecurityGroupIngressResultFormProperties {
	}
	export function CreateAuthorizeDBSecurityGroupIngressResultFormGroup() {
		return new FormGroup<AuthorizeDBSecurityGroupIngressResultFormProperties>({
		});

	}


	/** <p>Contains the details for an Amazon RDS DB security group.</p> <p>This data type is used as a response element in the <code>DescribeDBSecurityGroups</code> action.</p> */
	export interface DBSecurityGroup {
		OwnerId?: string;
		DBSecurityGroupName?: string;
		DBSecurityGroupDescription?: string;
		VpcId?: string;
		EC2SecurityGroups?: Array<string>;
		IPRanges?: Array<string>;
		DBSecurityGroupArn?: string;
	}

	/** <p>Contains the details for an Amazon RDS DB security group.</p> <p>This data type is used as a response element in the <code>DescribeDBSecurityGroups</code> action.</p> */
	export interface DBSecurityGroupFormProperties {
		OwnerId: FormControl<string | null | undefined>,
		DBSecurityGroupName: FormControl<string | null | undefined>,
		DBSecurityGroupDescription: FormControl<string | null | undefined>,
		VpcId: FormControl<string | null | undefined>,
		DBSecurityGroupArn: FormControl<string | null | undefined>,
	}
	export function CreateDBSecurityGroupFormGroup() {
		return new FormGroup<DBSecurityGroupFormProperties>({
			OwnerId: new FormControl<string | null | undefined>(undefined),
			DBSecurityGroupName: new FormControl<string | null | undefined>(undefined),
			DBSecurityGroupDescription: new FormControl<string | null | undefined>(undefined),
			VpcId: new FormControl<string | null | undefined>(undefined),
			DBSecurityGroupArn: new FormControl<string | null | undefined>(undefined),
		});

	}

	export interface DBSecurityGroupNotFoundFault {
	}
	export interface DBSecurityGroupNotFoundFaultFormProperties {
	}
	export function CreateDBSecurityGroupNotFoundFaultFormGroup() {
		return new FormGroup<DBSecurityGroupNotFoundFaultFormProperties>({
		});

	}

	export interface InvalidDBSecurityGroupStateFault {
	}
	export interface InvalidDBSecurityGroupStateFaultFormProperties {
	}
	export function CreateInvalidDBSecurityGroupStateFaultFormGroup() {
		return new FormGroup<InvalidDBSecurityGroupStateFaultFormProperties>({
		});

	}

	export interface AuthorizationAlreadyExistsFault {
	}
	export interface AuthorizationAlreadyExistsFaultFormProperties {
	}
	export function CreateAuthorizationAlreadyExistsFaultFormGroup() {
		return new FormGroup<AuthorizationAlreadyExistsFaultFormProperties>({
		});

	}

	export interface AuthorizationQuotaExceededFault {
	}
	export interface AuthorizationQuotaExceededFaultFormProperties {
	}
	export function CreateAuthorizationQuotaExceededFaultFormGroup() {
		return new FormGroup<AuthorizationQuotaExceededFaultFormProperties>({
		});

	}


	/** This data type is used as a response element in the <code>DescribeDBClusterBacktracks</code> action. */
	export interface DBClusterBacktrack {
		DBClusterIdentifier?: string;
		BacktrackIdentifier?: string;
		BacktrackTo?: Date;
		BacktrackedFrom?: Date;
		BacktrackRequestCreationTime?: Date;
		Status?: string;
	}

	/** This data type is used as a response element in the <code>DescribeDBClusterBacktracks</code> action. */
	export interface DBClusterBacktrackFormProperties {
		DBClusterIdentifier: FormControl<string | null | undefined>,
		BacktrackIdentifier: FormControl<string | null | undefined>,
		BacktrackTo: FormControl<Date | null | undefined>,
		BacktrackedFrom: FormControl<Date | null | undefined>,
		BacktrackRequestCreationTime: FormControl<Date | null | undefined>,
		Status: FormControl<string | null | undefined>,
	}
	export function CreateDBClusterBacktrackFormGroup() {
		return new FormGroup<DBClusterBacktrackFormProperties>({
			DBClusterIdentifier: new FormControl<string | null | undefined>(undefined),
			BacktrackIdentifier: new FormControl<string | null | undefined>(undefined),
			BacktrackTo: new FormControl<Date | null | undefined>(undefined),
			BacktrackedFrom: new FormControl<Date | null | undefined>(undefined),
			BacktrackRequestCreationTime: new FormControl<Date | null | undefined>(undefined),
			Status: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** <p>Contains the details of a snapshot or cluster export to Amazon S3.</p> <p>This data type is used as a response element in the <code>DescribeExportTasks</code> action.</p> */
	export interface ExportTask {
		ExportTaskIdentifier?: string;
		SourceArn?: string;
		ExportOnly?: Array<string>;
		SnapshotTime?: Date;
		TaskStartTime?: Date;
		TaskEndTime?: Date;
		S3Bucket?: string;
		S3Prefix?: string;
		IamRoleArn?: string;
		KmsKeyId?: string;
		Status?: string;
		PercentProgress?: number | null;
		TotalExtractedDataInGB?: number | null;
		FailureCause?: string;
		WarningMessage?: string;
		SourceType?: ExportSourceType;
	}

	/** <p>Contains the details of a snapshot or cluster export to Amazon S3.</p> <p>This data type is used as a response element in the <code>DescribeExportTasks</code> action.</p> */
	export interface ExportTaskFormProperties {
		ExportTaskIdentifier: FormControl<string | null | undefined>,
		SourceArn: FormControl<string | null | undefined>,
		SnapshotTime: FormControl<Date | null | undefined>,
		TaskStartTime: FormControl<Date | null | undefined>,
		TaskEndTime: FormControl<Date | null | undefined>,
		S3Bucket: FormControl<string | null | undefined>,
		S3Prefix: FormControl<string | null | undefined>,
		IamRoleArn: FormControl<string | null | undefined>,
		KmsKeyId: FormControl<string | null | undefined>,
		Status: FormControl<string | null | undefined>,
		PercentProgress: FormControl<number | null | undefined>,
		TotalExtractedDataInGB: FormControl<number | null | undefined>,
		FailureCause: FormControl<string | null | undefined>,
		WarningMessage: FormControl<string | null | undefined>,
		SourceType: FormControl<ExportSourceType | null | undefined>,
	}
	export function CreateExportTaskFormGroup() {
		return new FormGroup<ExportTaskFormProperties>({
			ExportTaskIdentifier: new FormControl<string | null | undefined>(undefined),
			SourceArn: new FormControl<string | null | undefined>(undefined),
			SnapshotTime: new FormControl<Date | null | undefined>(undefined),
			TaskStartTime: new FormControl<Date | null | undefined>(undefined),
			TaskEndTime: new FormControl<Date | null | undefined>(undefined),
			S3Bucket: new FormControl<string | null | undefined>(undefined),
			S3Prefix: new FormControl<string | null | undefined>(undefined),
			IamRoleArn: new FormControl<string | null | undefined>(undefined),
			KmsKeyId: new FormControl<string | null | undefined>(undefined),
			Status: new FormControl<string | null | undefined>(undefined),
			PercentProgress: new FormControl<number | null | undefined>(undefined),
			TotalExtractedDataInGB: new FormControl<number | null | undefined>(undefined),
			FailureCause: new FormControl<string | null | undefined>(undefined),
			WarningMessage: new FormControl<string | null | undefined>(undefined),
			SourceType: new FormControl<ExportSourceType | null | undefined>(undefined),
		});

	}

	export enum ExportSourceType { SNAPSHOT = 0, CLUSTER = 1 }

	export interface ExportTaskNotFoundFault {
	}
	export interface ExportTaskNotFoundFaultFormProperties {
	}
	export function CreateExportTaskNotFoundFaultFormGroup() {
		return new FormGroup<ExportTaskNotFoundFaultFormProperties>({
		});

	}

	export interface InvalidExportTaskStateFault {
	}
	export interface InvalidExportTaskStateFaultFormProperties {
	}
	export function CreateInvalidExportTaskStateFaultFormGroup() {
		return new FormGroup<InvalidExportTaskStateFaultFormProperties>({
		});

	}

	export interface CopyDBClusterParameterGroupResult {

		/** <p>Contains the details of an Amazon RDS DB cluster parameter group.</p> <p>This data type is used as a response element in the <code>DescribeDBClusterParameterGroups</code> action.</p> */
		DBClusterParameterGroup?: DBClusterParameterGroup;
	}
	export interface CopyDBClusterParameterGroupResultFormProperties {
	}
	export function CreateCopyDBClusterParameterGroupResultFormGroup() {
		return new FormGroup<CopyDBClusterParameterGroupResultFormProperties>({
		});

	}


	/** <p>Contains the details of an Amazon RDS DB cluster parameter group.</p> <p>This data type is used as a response element in the <code>DescribeDBClusterParameterGroups</code> action.</p> */
	export interface DBClusterParameterGroup {
		DBClusterParameterGroupName?: string;
		DBParameterGroupFamily?: string;
		Description?: string;
		DBClusterParameterGroupArn?: string;
	}

	/** <p>Contains the details of an Amazon RDS DB cluster parameter group.</p> <p>This data type is used as a response element in the <code>DescribeDBClusterParameterGroups</code> action.</p> */
	export interface DBClusterParameterGroupFormProperties {
		DBClusterParameterGroupName: FormControl<string | null | undefined>,
		DBParameterGroupFamily: FormControl<string | null | undefined>,
		Description: FormControl<string | null | undefined>,
		DBClusterParameterGroupArn: FormControl<string | null | undefined>,
	}
	export function CreateDBClusterParameterGroupFormGroup() {
		return new FormGroup<DBClusterParameterGroupFormProperties>({
			DBClusterParameterGroupName: new FormControl<string | null | undefined>(undefined),
			DBParameterGroupFamily: new FormControl<string | null | undefined>(undefined),
			Description: new FormControl<string | null | undefined>(undefined),
			DBClusterParameterGroupArn: new FormControl<string | null | undefined>(undefined),
		});

	}

	export interface DBParameterGroupNotFoundFault {
	}
	export interface DBParameterGroupNotFoundFaultFormProperties {
	}
	export function CreateDBParameterGroupNotFoundFaultFormGroup() {
		return new FormGroup<DBParameterGroupNotFoundFaultFormProperties>({
		});

	}

	export interface DBParameterGroupQuotaExceededFault {
	}
	export interface DBParameterGroupQuotaExceededFaultFormProperties {
	}
	export function CreateDBParameterGroupQuotaExceededFaultFormGroup() {
		return new FormGroup<DBParameterGroupQuotaExceededFaultFormProperties>({
		});

	}

	export interface DBParameterGroupAlreadyExistsFault {
	}
	export interface DBParameterGroupAlreadyExistsFaultFormProperties {
	}
	export function CreateDBParameterGroupAlreadyExistsFaultFormGroup() {
		return new FormGroup<DBParameterGroupAlreadyExistsFaultFormProperties>({
		});

	}

	export interface CopyDBClusterSnapshotResult {

		/** <p>Contains the details for an Amazon RDS DB cluster snapshot</p> <p>This data type is used as a response element in the <code>DescribeDBClusterSnapshots</code> action.</p> */
		DBClusterSnapshot?: DBClusterSnapshot;
	}
	export interface CopyDBClusterSnapshotResultFormProperties {
	}
	export function CreateCopyDBClusterSnapshotResultFormGroup() {
		return new FormGroup<CopyDBClusterSnapshotResultFormProperties>({
		});

	}


	/** <p>Contains the details for an Amazon RDS DB cluster snapshot</p> <p>This data type is used as a response element in the <code>DescribeDBClusterSnapshots</code> action.</p> */
	export interface DBClusterSnapshot {
		AvailabilityZones?: Array<string>;
		DBClusterSnapshotIdentifier?: string;
		DBClusterIdentifier?: string;
		SnapshotCreateTime?: Date;
		Engine?: string;
		EngineMode?: string;
		AllocatedStorage?: number | null;
		Status?: string;
		Port?: number | null;
		VpcId?: string;
		ClusterCreateTime?: Date;
		MasterUsername?: string;
		EngineVersion?: string;
		LicenseModel?: string;
		SnapshotType?: string;
		PercentProgress?: number | null;
		StorageEncrypted?: boolean | null;
		KmsKeyId?: string;
		DBClusterSnapshotArn?: string;
		SourceDBClusterSnapshotArn?: string;
		IAMDatabaseAuthenticationEnabled?: boolean | null;

		/** A list of tags. For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Tagging.html">Tagging Amazon RDS Resources</a> in the <i>Amazon RDS User Guide.</i> */
		TagList?: Array<string>;
		DBSystemId?: string;
		StorageType?: string;
		DbClusterResourceId?: string;
	}

	/** <p>Contains the details for an Amazon RDS DB cluster snapshot</p> <p>This data type is used as a response element in the <code>DescribeDBClusterSnapshots</code> action.</p> */
	export interface DBClusterSnapshotFormProperties {
		DBClusterSnapshotIdentifier: FormControl<string | null | undefined>,
		DBClusterIdentifier: FormControl<string | null | undefined>,
		SnapshotCreateTime: FormControl<Date | null | undefined>,
		Engine: FormControl<string | null | undefined>,
		EngineMode: FormControl<string | null | undefined>,
		AllocatedStorage: FormControl<number | null | undefined>,
		Status: FormControl<string | null | undefined>,
		Port: FormControl<number | null | undefined>,
		VpcId: FormControl<string | null | undefined>,
		ClusterCreateTime: FormControl<Date | null | undefined>,
		MasterUsername: FormControl<string | null | undefined>,
		EngineVersion: FormControl<string | null | undefined>,
		LicenseModel: FormControl<string | null | undefined>,
		SnapshotType: FormControl<string | null | undefined>,
		PercentProgress: FormControl<number | null | undefined>,
		StorageEncrypted: FormControl<boolean | null | undefined>,
		KmsKeyId: FormControl<string | null | undefined>,
		DBClusterSnapshotArn: FormControl<string | null | undefined>,
		SourceDBClusterSnapshotArn: FormControl<string | null | undefined>,
		IAMDatabaseAuthenticationEnabled: FormControl<boolean | null | undefined>,
		DBSystemId: FormControl<string | null | undefined>,
		StorageType: FormControl<string | null | undefined>,
		DbClusterResourceId: FormControl<string | null | undefined>,
	}
	export function CreateDBClusterSnapshotFormGroup() {
		return new FormGroup<DBClusterSnapshotFormProperties>({
			DBClusterSnapshotIdentifier: new FormControl<string | null | undefined>(undefined),
			DBClusterIdentifier: new FormControl<string | null | undefined>(undefined),
			SnapshotCreateTime: new FormControl<Date | null | undefined>(undefined),
			Engine: new FormControl<string | null | undefined>(undefined),
			EngineMode: new FormControl<string | null | undefined>(undefined),
			AllocatedStorage: new FormControl<number | null | undefined>(undefined),
			Status: new FormControl<string | null | undefined>(undefined),
			Port: new FormControl<number | null | undefined>(undefined),
			VpcId: new FormControl<string | null | undefined>(undefined),
			ClusterCreateTime: new FormControl<Date | null | undefined>(undefined),
			MasterUsername: new FormControl<string | null | undefined>(undefined),
			EngineVersion: new FormControl<string | null | undefined>(undefined),
			LicenseModel: new FormControl<string | null | undefined>(undefined),
			SnapshotType: new FormControl<string | null | undefined>(undefined),
			PercentProgress: new FormControl<number | null | undefined>(undefined),
			StorageEncrypted: new FormControl<boolean | null | undefined>(undefined),
			KmsKeyId: new FormControl<string | null | undefined>(undefined),
			DBClusterSnapshotArn: new FormControl<string | null | undefined>(undefined),
			SourceDBClusterSnapshotArn: new FormControl<string | null | undefined>(undefined),
			IAMDatabaseAuthenticationEnabled: new FormControl<boolean | null | undefined>(undefined),
			DBSystemId: new FormControl<string | null | undefined>(undefined),
			StorageType: new FormControl<string | null | undefined>(undefined),
			DbClusterResourceId: new FormControl<string | null | undefined>(undefined),
		});

	}

	export interface DBClusterSnapshotAlreadyExistsFault {
	}
	export interface DBClusterSnapshotAlreadyExistsFaultFormProperties {
	}
	export function CreateDBClusterSnapshotAlreadyExistsFaultFormGroup() {
		return new FormGroup<DBClusterSnapshotAlreadyExistsFaultFormProperties>({
		});

	}

	export interface DBClusterSnapshotNotFoundFault {
	}
	export interface DBClusterSnapshotNotFoundFaultFormProperties {
	}
	export function CreateDBClusterSnapshotNotFoundFaultFormGroup() {
		return new FormGroup<DBClusterSnapshotNotFoundFaultFormProperties>({
		});

	}

	export interface InvalidDBClusterSnapshotStateFault {
	}
	export interface InvalidDBClusterSnapshotStateFaultFormProperties {
	}
	export function CreateInvalidDBClusterSnapshotStateFaultFormGroup() {
		return new FormGroup<InvalidDBClusterSnapshotStateFaultFormProperties>({
		});

	}

	export interface SnapshotQuotaExceededFault {
	}
	export interface SnapshotQuotaExceededFaultFormProperties {
	}
	export function CreateSnapshotQuotaExceededFaultFormGroup() {
		return new FormGroup<SnapshotQuotaExceededFaultFormProperties>({
		});

	}

	export interface KMSKeyNotAccessibleFault {
	}
	export interface KMSKeyNotAccessibleFaultFormProperties {
	}
	export function CreateKMSKeyNotAccessibleFaultFormGroup() {
		return new FormGroup<KMSKeyNotAccessibleFaultFormProperties>({
		});

	}

	export interface CopyDBParameterGroupResult {

		/** <p>Contains the details of an Amazon RDS DB parameter group.</p> <p>This data type is used as a response element in the <code>DescribeDBParameterGroups</code> action.</p> */
		DBParameterGroup?: DBParameterGroup;
	}
	export interface CopyDBParameterGroupResultFormProperties {
	}
	export function CreateCopyDBParameterGroupResultFormGroup() {
		return new FormGroup<CopyDBParameterGroupResultFormProperties>({
		});

	}


	/** <p>Contains the details of an Amazon RDS DB parameter group.</p> <p>This data type is used as a response element in the <code>DescribeDBParameterGroups</code> action.</p> */
	export interface DBParameterGroup {
		DBParameterGroupName?: string;
		DBParameterGroupFamily?: string;
		Description?: string;
		DBParameterGroupArn?: string;
	}

	/** <p>Contains the details of an Amazon RDS DB parameter group.</p> <p>This data type is used as a response element in the <code>DescribeDBParameterGroups</code> action.</p> */
	export interface DBParameterGroupFormProperties {
		DBParameterGroupName: FormControl<string | null | undefined>,
		DBParameterGroupFamily: FormControl<string | null | undefined>,
		Description: FormControl<string | null | undefined>,
		DBParameterGroupArn: FormControl<string | null | undefined>,
	}
	export function CreateDBParameterGroupFormGroup() {
		return new FormGroup<DBParameterGroupFormProperties>({
			DBParameterGroupName: new FormControl<string | null | undefined>(undefined),
			DBParameterGroupFamily: new FormControl<string | null | undefined>(undefined),
			Description: new FormControl<string | null | undefined>(undefined),
			DBParameterGroupArn: new FormControl<string | null | undefined>(undefined),
		});

	}

	export interface CopyDBSnapshotResult {

		/** <p>Contains the details of an Amazon RDS DB snapshot.</p> <p>This data type is used as a response element in the <code>DescribeDBSnapshots</code> action.</p> */
		DBSnapshot?: DBSnapshot;
	}
	export interface CopyDBSnapshotResultFormProperties {
	}
	export function CreateCopyDBSnapshotResultFormGroup() {
		return new FormGroup<CopyDBSnapshotResultFormProperties>({
		});

	}


	/** <p>Contains the details of an Amazon RDS DB snapshot.</p> <p>This data type is used as a response element in the <code>DescribeDBSnapshots</code> action.</p> */
	export interface DBSnapshot {
		DBSnapshotIdentifier?: string;
		DBInstanceIdentifier?: string;
		SnapshotCreateTime?: Date;
		Engine?: string;
		AllocatedStorage?: number | null;
		Status?: string;
		Port?: number | null;
		AvailabilityZone?: string;
		VpcId?: string;
		InstanceCreateTime?: Date;
		MasterUsername?: string;
		EngineVersion?: string;
		LicenseModel?: string;
		SnapshotType?: string;
		Iops?: number | null;
		OptionGroupName?: string;
		PercentProgress?: number | null;
		SourceRegion?: string;
		SourceDBSnapshotIdentifier?: string;
		StorageType?: string;
		TdeCredentialArn?: string;
		Encrypted?: boolean | null;
		KmsKeyId?: string;
		DBSnapshotArn?: string;
		Timezone?: string;
		IAMDatabaseAuthenticationEnabled?: boolean | null;
		ProcessorFeatures?: Array<string>;
		DbiResourceId?: string;

		/** A list of tags. For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Tagging.html">Tagging Amazon RDS Resources</a> in the <i>Amazon RDS User Guide.</i> */
		TagList?: Array<string>;
		OriginalSnapshotCreateTime?: Date;
		SnapshotDatabaseTime?: Date;
		SnapshotTarget?: string;
		StorageThroughput?: number | null;
		DBSystemId?: string;
	}

	/** <p>Contains the details of an Amazon RDS DB snapshot.</p> <p>This data type is used as a response element in the <code>DescribeDBSnapshots</code> action.</p> */
	export interface DBSnapshotFormProperties {
		DBSnapshotIdentifier: FormControl<string | null | undefined>,
		DBInstanceIdentifier: FormControl<string | null | undefined>,
		SnapshotCreateTime: FormControl<Date | null | undefined>,
		Engine: FormControl<string | null | undefined>,
		AllocatedStorage: FormControl<number | null | undefined>,
		Status: FormControl<string | null | undefined>,
		Port: FormControl<number | null | undefined>,
		AvailabilityZone: FormControl<string | null | undefined>,
		VpcId: FormControl<string | null | undefined>,
		InstanceCreateTime: FormControl<Date | null | undefined>,
		MasterUsername: FormControl<string | null | undefined>,
		EngineVersion: FormControl<string | null | undefined>,
		LicenseModel: FormControl<string | null | undefined>,
		SnapshotType: FormControl<string | null | undefined>,
		Iops: FormControl<number | null | undefined>,
		OptionGroupName: FormControl<string | null | undefined>,
		PercentProgress: FormControl<number | null | undefined>,
		SourceRegion: FormControl<string | null | undefined>,
		SourceDBSnapshotIdentifier: FormControl<string | null | undefined>,
		StorageType: FormControl<string | null | undefined>,
		TdeCredentialArn: FormControl<string | null | undefined>,
		Encrypted: FormControl<boolean | null | undefined>,
		KmsKeyId: FormControl<string | null | undefined>,
		DBSnapshotArn: FormControl<string | null | undefined>,
		Timezone: FormControl<string | null | undefined>,
		IAMDatabaseAuthenticationEnabled: FormControl<boolean | null | undefined>,
		DbiResourceId: FormControl<string | null | undefined>,
		OriginalSnapshotCreateTime: FormControl<Date | null | undefined>,
		SnapshotDatabaseTime: FormControl<Date | null | undefined>,
		SnapshotTarget: FormControl<string | null | undefined>,
		StorageThroughput: FormControl<number | null | undefined>,
		DBSystemId: FormControl<string | null | undefined>,
	}
	export function CreateDBSnapshotFormGroup() {
		return new FormGroup<DBSnapshotFormProperties>({
			DBSnapshotIdentifier: new FormControl<string | null | undefined>(undefined),
			DBInstanceIdentifier: new FormControl<string | null | undefined>(undefined),
			SnapshotCreateTime: new FormControl<Date | null | undefined>(undefined),
			Engine: new FormControl<string | null | undefined>(undefined),
			AllocatedStorage: new FormControl<number | null | undefined>(undefined),
			Status: new FormControl<string | null | undefined>(undefined),
			Port: new FormControl<number | null | undefined>(undefined),
			AvailabilityZone: new FormControl<string | null | undefined>(undefined),
			VpcId: new FormControl<string | null | undefined>(undefined),
			InstanceCreateTime: new FormControl<Date | null | undefined>(undefined),
			MasterUsername: new FormControl<string | null | undefined>(undefined),
			EngineVersion: new FormControl<string | null | undefined>(undefined),
			LicenseModel: new FormControl<string | null | undefined>(undefined),
			SnapshotType: new FormControl<string | null | undefined>(undefined),
			Iops: new FormControl<number | null | undefined>(undefined),
			OptionGroupName: new FormControl<string | null | undefined>(undefined),
			PercentProgress: new FormControl<number | null | undefined>(undefined),
			SourceRegion: new FormControl<string | null | undefined>(undefined),
			SourceDBSnapshotIdentifier: new FormControl<string | null | undefined>(undefined),
			StorageType: new FormControl<string | null | undefined>(undefined),
			TdeCredentialArn: new FormControl<string | null | undefined>(undefined),
			Encrypted: new FormControl<boolean | null | undefined>(undefined),
			KmsKeyId: new FormControl<string | null | undefined>(undefined),
			DBSnapshotArn: new FormControl<string | null | undefined>(undefined),
			Timezone: new FormControl<string | null | undefined>(undefined),
			IAMDatabaseAuthenticationEnabled: new FormControl<boolean | null | undefined>(undefined),
			DbiResourceId: new FormControl<string | null | undefined>(undefined),
			OriginalSnapshotCreateTime: new FormControl<Date | null | undefined>(undefined),
			SnapshotDatabaseTime: new FormControl<Date | null | undefined>(undefined),
			SnapshotTarget: new FormControl<string | null | undefined>(undefined),
			StorageThroughput: new FormControl<number | null | undefined>(undefined),
			DBSystemId: new FormControl<string | null | undefined>(undefined),
		});

	}

	export interface DBSnapshotAlreadyExistsFault {
	}
	export interface DBSnapshotAlreadyExistsFaultFormProperties {
	}
	export function CreateDBSnapshotAlreadyExistsFaultFormGroup() {
		return new FormGroup<DBSnapshotAlreadyExistsFaultFormProperties>({
		});

	}

	export interface InvalidDBSnapshotStateFault {
	}
	export interface InvalidDBSnapshotStateFaultFormProperties {
	}
	export function CreateInvalidDBSnapshotStateFaultFormGroup() {
		return new FormGroup<InvalidDBSnapshotStateFaultFormProperties>({
		});

	}

	export interface CustomAvailabilityZoneNotFoundFault {
	}
	export interface CustomAvailabilityZoneNotFoundFaultFormProperties {
	}
	export function CreateCustomAvailabilityZoneNotFoundFaultFormGroup() {
		return new FormGroup<CustomAvailabilityZoneNotFoundFaultFormProperties>({
		});

	}

	export interface CopyOptionGroupResult {

		/** <p/> */
		OptionGroup?: OptionGroup;
	}
	export interface CopyOptionGroupResultFormProperties {
	}
	export function CreateCopyOptionGroupResultFormGroup() {
		return new FormGroup<CopyOptionGroupResultFormProperties>({
		});

	}


	/** <p/> */
	export interface OptionGroup {
		OptionGroupName?: string;
		OptionGroupDescription?: string;
		EngineName?: string;
		MajorEngineVersion?: string;
		Options?: Array<string>;
		AllowsVpcAndNonVpcInstanceMemberships?: boolean | null;
		VpcId?: string;
		OptionGroupArn?: string;
		SourceOptionGroup?: string;
		SourceAccountId?: string;
		CopyTimestamp?: Date;
	}

	/** <p/> */
	export interface OptionGroupFormProperties {
		OptionGroupName: FormControl<string | null | undefined>,
		OptionGroupDescription: FormControl<string | null | undefined>,
		EngineName: FormControl<string | null | undefined>,
		MajorEngineVersion: FormControl<string | null | undefined>,
		AllowsVpcAndNonVpcInstanceMemberships: FormControl<boolean | null | undefined>,
		VpcId: FormControl<string | null | undefined>,
		OptionGroupArn: FormControl<string | null | undefined>,
		SourceOptionGroup: FormControl<string | null | undefined>,
		SourceAccountId: FormControl<string | null | undefined>,
		CopyTimestamp: FormControl<Date | null | undefined>,
	}
	export function CreateOptionGroupFormGroup() {
		return new FormGroup<OptionGroupFormProperties>({
			OptionGroupName: new FormControl<string | null | undefined>(undefined),
			OptionGroupDescription: new FormControl<string | null | undefined>(undefined),
			EngineName: new FormControl<string | null | undefined>(undefined),
			MajorEngineVersion: new FormControl<string | null | undefined>(undefined),
			AllowsVpcAndNonVpcInstanceMemberships: new FormControl<boolean | null | undefined>(undefined),
			VpcId: new FormControl<string | null | undefined>(undefined),
			OptionGroupArn: new FormControl<string | null | undefined>(undefined),
			SourceOptionGroup: new FormControl<string | null | undefined>(undefined),
			SourceAccountId: new FormControl<string | null | undefined>(undefined),
			CopyTimestamp: new FormControl<Date | null | undefined>(undefined),
		});

	}

	export interface OptionGroupAlreadyExistsFault {
	}
	export interface OptionGroupAlreadyExistsFaultFormProperties {
	}
	export function CreateOptionGroupAlreadyExistsFaultFormGroup() {
		return new FormGroup<OptionGroupAlreadyExistsFaultFormProperties>({
		});

	}

	export interface OptionGroupNotFoundFault {
	}
	export interface OptionGroupNotFoundFaultFormProperties {
	}
	export function CreateOptionGroupNotFoundFaultFormGroup() {
		return new FormGroup<OptionGroupNotFoundFaultFormProperties>({
		});

	}

	export interface OptionGroupQuotaExceededFault {
	}
	export interface OptionGroupQuotaExceededFaultFormProperties {
	}
	export function CreateOptionGroupQuotaExceededFaultFormGroup() {
		return new FormGroup<OptionGroupQuotaExceededFaultFormProperties>({
		});

	}

	export interface CreateBlueGreenDeploymentResponse {

		/** <p>Details about a blue/green deployment.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/blue-green-deployments.html">Using Amazon RDS Blue/Green Deployments for database updates</a> in the <i>Amazon RDS User Guide</i> and <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/blue-green-deployments.html">Using Amazon RDS Blue/Green Deployments for database updates</a> in the <i>Amazon Aurora User Guide</i>.</p> */
		BlueGreenDeployment?: BlueGreenDeployment;
	}
	export interface CreateBlueGreenDeploymentResponseFormProperties {
	}
	export function CreateCreateBlueGreenDeploymentResponseFormGroup() {
		return new FormGroup<CreateBlueGreenDeploymentResponseFormProperties>({
		});

	}


	/** <p>Details about a blue/green deployment.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/blue-green-deployments.html">Using Amazon RDS Blue/Green Deployments for database updates</a> in the <i>Amazon RDS User Guide</i> and <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/blue-green-deployments.html">Using Amazon RDS Blue/Green Deployments for database updates</a> in the <i>Amazon Aurora User Guide</i>.</p> */
	export interface BlueGreenDeployment {
		BlueGreenDeploymentIdentifier?: string;
		BlueGreenDeploymentName?: string;
		Source?: string;
		Target?: string;
		SwitchoverDetails?: Array<SwitchoverDetail>;
		Tasks?: Array<BlueGreenDeploymentTask>;
		Status?: string;
		StatusDetails?: string;
		CreateTime?: Date;
		DeleteTime?: Date;

		/** A list of tags. For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Tagging.html">Tagging Amazon RDS Resources</a> in the <i>Amazon RDS User Guide.</i> */
		TagList?: Array<string>;
	}

	/** <p>Details about a blue/green deployment.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/blue-green-deployments.html">Using Amazon RDS Blue/Green Deployments for database updates</a> in the <i>Amazon RDS User Guide</i> and <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/blue-green-deployments.html">Using Amazon RDS Blue/Green Deployments for database updates</a> in the <i>Amazon Aurora User Guide</i>.</p> */
	export interface BlueGreenDeploymentFormProperties {
		BlueGreenDeploymentIdentifier: FormControl<string | null | undefined>,
		BlueGreenDeploymentName: FormControl<string | null | undefined>,
		Source: FormControl<string | null | undefined>,
		Target: FormControl<string | null | undefined>,
		Status: FormControl<string | null | undefined>,
		StatusDetails: FormControl<string | null | undefined>,
		CreateTime: FormControl<Date | null | undefined>,
		DeleteTime: FormControl<Date | null | undefined>,
	}
	export function CreateBlueGreenDeploymentFormGroup() {
		return new FormGroup<BlueGreenDeploymentFormProperties>({
			BlueGreenDeploymentIdentifier: new FormControl<string | null | undefined>(undefined),
			BlueGreenDeploymentName: new FormControl<string | null | undefined>(undefined),
			Source: new FormControl<string | null | undefined>(undefined),
			Target: new FormControl<string | null | undefined>(undefined),
			Status: new FormControl<string | null | undefined>(undefined),
			StatusDetails: new FormControl<string | null | undefined>(undefined),
			CreateTime: new FormControl<Date | null | undefined>(undefined),
			DeleteTime: new FormControl<Date | null | undefined>(undefined),
		});

	}


	/** <p>Contains the details about a blue/green deployment.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/blue-green-deployments.html">Using Amazon RDS Blue/Green Deployments for database updates</a> in the <i>Amazon RDS User Guide</i> and <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/blue-green-deployments.html">Using Amazon RDS Blue/Green Deployments for database updates</a> in the <i>Amazon Aurora User Guide</i>.</p> */
	export interface SwitchoverDetail {
		SourceMember?: string;
		TargetMember?: string;
		Status?: string;
	}

	/** <p>Contains the details about a blue/green deployment.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/blue-green-deployments.html">Using Amazon RDS Blue/Green Deployments for database updates</a> in the <i>Amazon RDS User Guide</i> and <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/blue-green-deployments.html">Using Amazon RDS Blue/Green Deployments for database updates</a> in the <i>Amazon Aurora User Guide</i>.</p> */
	export interface SwitchoverDetailFormProperties {
		SourceMember: FormControl<string | null | undefined>,
		TargetMember: FormControl<string | null | undefined>,
		Status: FormControl<string | null | undefined>,
	}
	export function CreateSwitchoverDetailFormGroup() {
		return new FormGroup<SwitchoverDetailFormProperties>({
			SourceMember: new FormControl<string | null | undefined>(undefined),
			TargetMember: new FormControl<string | null | undefined>(undefined),
			Status: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** <p>Details about a task for a blue/green deployment.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/blue-green-deployments.html">Using Amazon RDS Blue/Green Deployments for database updates</a> in the <i>Amazon RDS User Guide</i> and <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/blue-green-deployments.html">Using Amazon RDS Blue/Green Deployments for database updates</a> in the <i>Amazon Aurora User Guide</i>.</p> */
	export interface BlueGreenDeploymentTask {
		Name?: string;
		Status?: string;
	}

	/** <p>Details about a task for a blue/green deployment.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/blue-green-deployments.html">Using Amazon RDS Blue/Green Deployments for database updates</a> in the <i>Amazon RDS User Guide</i> and <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/blue-green-deployments.html">Using Amazon RDS Blue/Green Deployments for database updates</a> in the <i>Amazon Aurora User Guide</i>.</p> */
	export interface BlueGreenDeploymentTaskFormProperties {
		Name: FormControl<string | null | undefined>,
		Status: FormControl<string | null | undefined>,
	}
	export function CreateBlueGreenDeploymentTaskFormGroup() {
		return new FormGroup<BlueGreenDeploymentTaskFormProperties>({
			Name: new FormControl<string | null | undefined>(undefined),
			Status: new FormControl<string | null | undefined>(undefined),
		});

	}

	export interface SourceDatabaseNotSupportedFault {
	}
	export interface SourceDatabaseNotSupportedFaultFormProperties {
	}
	export function CreateSourceDatabaseNotSupportedFaultFormGroup() {
		return new FormGroup<SourceDatabaseNotSupportedFaultFormProperties>({
		});

	}

	export interface SourceClusterNotSupportedFault {
	}
	export interface SourceClusterNotSupportedFaultFormProperties {
	}
	export function CreateSourceClusterNotSupportedFaultFormGroup() {
		return new FormGroup<SourceClusterNotSupportedFaultFormProperties>({
		});

	}

	export interface BlueGreenDeploymentAlreadyExistsFault {
	}
	export interface BlueGreenDeploymentAlreadyExistsFaultFormProperties {
	}
	export function CreateBlueGreenDeploymentAlreadyExistsFaultFormGroup() {
		return new FormGroup<BlueGreenDeploymentAlreadyExistsFaultFormProperties>({
		});

	}

	export interface DBClusterParameterGroupNotFoundFault {
	}
	export interface DBClusterParameterGroupNotFoundFaultFormProperties {
	}
	export function CreateDBClusterParameterGroupNotFoundFaultFormGroup() {
		return new FormGroup<DBClusterParameterGroupNotFoundFaultFormProperties>({
		});

	}

	export interface InstanceQuotaExceededFault {
	}
	export interface InstanceQuotaExceededFaultFormProperties {
	}
	export function CreateInstanceQuotaExceededFaultFormGroup() {
		return new FormGroup<InstanceQuotaExceededFaultFormProperties>({
		});

	}

	export interface DBClusterQuotaExceededFault {
	}
	export interface DBClusterQuotaExceededFaultFormProperties {
	}
	export function CreateDBClusterQuotaExceededFaultFormGroup() {
		return new FormGroup<DBClusterQuotaExceededFaultFormProperties>({
		});

	}


	/** This data type is used as a response element in the action <code>DescribeDBEngineVersions</code>. */
	export interface DBEngineVersion {
		Engine?: string;
		EngineVersion?: string;
		DBParameterGroupFamily?: string;
		DBEngineDescription?: string;
		DBEngineVersionDescription?: string;
		DefaultCharacterSet?: CharacterSet;
		Image?: CustomDBEngineVersionAMI;
		DBEngineMediaType?: string;
		SupportedCharacterSets?: Array<string>;
		SupportedNcharCharacterSets?: Array<string>;
		ValidUpgradeTarget?: Array<string>;
		SupportedTimezones?: Array<string>;
		ExportableLogTypes?: Array<string>;
		SupportsLogExportsToCloudwatchLogs?: boolean | null;
		SupportsReadReplica?: boolean | null;
		SupportedEngineModes?: Array<string>;
		SupportedFeatureNames?: Array<string>;
		Status?: string;
		SupportsParallelQuery?: boolean | null;
		SupportsGlobalDatabases?: boolean | null;
		MajorEngineVersion?: string;
		DatabaseInstallationFilesS3BucketName?: string;
		DatabaseInstallationFilesS3Prefix?: string;
		DBEngineVersionArn?: string;
		KMSKeyId?: string;
		CreateTime?: Date;

		/** A list of tags. For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Tagging.html">Tagging Amazon RDS Resources</a> in the <i>Amazon RDS User Guide.</i> */
		TagList?: Array<string>;
		SupportsBabelfish?: boolean | null;
		CustomDBEngineVersionManifest?: string;
		SupportsCertificateRotationWithoutRestart?: boolean | null;
		SupportedCACertificateIdentifiers?: Array<string>;
		SupportsLocalWriteForwarding?: boolean | null;
	}

	/** This data type is used as a response element in the action <code>DescribeDBEngineVersions</code>. */
	export interface DBEngineVersionFormProperties {
		Engine: FormControl<string | null | undefined>,
		EngineVersion: FormControl<string | null | undefined>,
		DBParameterGroupFamily: FormControl<string | null | undefined>,
		DBEngineDescription: FormControl<string | null | undefined>,
		DBEngineVersionDescription: FormControl<string | null | undefined>,
		DBEngineMediaType: FormControl<string | null | undefined>,
		SupportsLogExportsToCloudwatchLogs: FormControl<boolean | null | undefined>,
		SupportsReadReplica: FormControl<boolean | null | undefined>,
		Status: FormControl<string | null | undefined>,
		SupportsParallelQuery: FormControl<boolean | null | undefined>,
		SupportsGlobalDatabases: FormControl<boolean | null | undefined>,
		MajorEngineVersion: FormControl<string | null | undefined>,
		DatabaseInstallationFilesS3BucketName: FormControl<string | null | undefined>,
		DatabaseInstallationFilesS3Prefix: FormControl<string | null | undefined>,
		DBEngineVersionArn: FormControl<string | null | undefined>,
		KMSKeyId: FormControl<string | null | undefined>,
		CreateTime: FormControl<Date | null | undefined>,
		SupportsBabelfish: FormControl<boolean | null | undefined>,
		CustomDBEngineVersionManifest: FormControl<string | null | undefined>,
		SupportsCertificateRotationWithoutRestart: FormControl<boolean | null | undefined>,
		SupportsLocalWriteForwarding: FormControl<boolean | null | undefined>,
	}
	export function CreateDBEngineVersionFormGroup() {
		return new FormGroup<DBEngineVersionFormProperties>({
			Engine: new FormControl<string | null | undefined>(undefined),
			EngineVersion: new FormControl<string | null | undefined>(undefined),
			DBParameterGroupFamily: new FormControl<string | null | undefined>(undefined),
			DBEngineDescription: new FormControl<string | null | undefined>(undefined),
			DBEngineVersionDescription: new FormControl<string | null | undefined>(undefined),
			DBEngineMediaType: new FormControl<string | null | undefined>(undefined),
			SupportsLogExportsToCloudwatchLogs: new FormControl<boolean | null | undefined>(undefined),
			SupportsReadReplica: new FormControl<boolean | null | undefined>(undefined),
			Status: new FormControl<string | null | undefined>(undefined),
			SupportsParallelQuery: new FormControl<boolean | null | undefined>(undefined),
			SupportsGlobalDatabases: new FormControl<boolean | null | undefined>(undefined),
			MajorEngineVersion: new FormControl<string | null | undefined>(undefined),
			DatabaseInstallationFilesS3BucketName: new FormControl<string | null | undefined>(undefined),
			DatabaseInstallationFilesS3Prefix: new FormControl<string | null | undefined>(undefined),
			DBEngineVersionArn: new FormControl<string | null | undefined>(undefined),
			KMSKeyId: new FormControl<string | null | undefined>(undefined),
			CreateTime: new FormControl<Date | null | undefined>(undefined),
			SupportsBabelfish: new FormControl<boolean | null | undefined>(undefined),
			CustomDBEngineVersionManifest: new FormControl<string | null | undefined>(undefined),
			SupportsCertificateRotationWithoutRestart: new FormControl<boolean | null | undefined>(undefined),
			SupportsLocalWriteForwarding: new FormControl<boolean | null | undefined>(undefined),
		});

	}


	/** This data type is used as a response element in the action <code>DescribeDBEngineVersions</code>. */
	export interface CharacterSet {
		CharacterSetName?: string;
		CharacterSetDescription?: string;
	}

	/** This data type is used as a response element in the action <code>DescribeDBEngineVersions</code>. */
	export interface CharacterSetFormProperties {
		CharacterSetName: FormControl<string | null | undefined>,
		CharacterSetDescription: FormControl<string | null | undefined>,
	}
	export function CreateCharacterSetFormGroup() {
		return new FormGroup<CharacterSetFormProperties>({
			CharacterSetName: new FormControl<string | null | undefined>(undefined),
			CharacterSetDescription: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** A value that indicates the AMI information. */
	export interface CustomDBEngineVersionAMI {
		ImageId?: string;
		Status?: string;
	}

	/** A value that indicates the AMI information. */
	export interface CustomDBEngineVersionAMIFormProperties {
		ImageId: FormControl<string | null | undefined>,
		Status: FormControl<string | null | undefined>,
	}
	export function CreateCustomDBEngineVersionAMIFormGroup() {
		return new FormGroup<CustomDBEngineVersionAMIFormProperties>({
			ImageId: new FormControl<string | null | undefined>(undefined),
			Status: new FormControl<string | null | undefined>(undefined),
		});

	}

	export interface CustomDBEngineVersionAlreadyExistsFault {
	}
	export interface CustomDBEngineVersionAlreadyExistsFaultFormProperties {
	}
	export function CreateCustomDBEngineVersionAlreadyExistsFaultFormGroup() {
		return new FormGroup<CustomDBEngineVersionAlreadyExistsFaultFormProperties>({
		});

	}

	export interface CustomDBEngineVersionQuotaExceededFault {
	}
	export interface CustomDBEngineVersionQuotaExceededFaultFormProperties {
	}
	export function CreateCustomDBEngineVersionQuotaExceededFaultFormGroup() {
		return new FormGroup<CustomDBEngineVersionQuotaExceededFaultFormProperties>({
		});

	}

	export interface Ec2ImagePropertiesNotSupportedFault {
	}
	export interface Ec2ImagePropertiesNotSupportedFaultFormProperties {
	}
	export function CreateEc2ImagePropertiesNotSupportedFaultFormGroup() {
		return new FormGroup<Ec2ImagePropertiesNotSupportedFaultFormProperties>({
		});

	}

	export interface CreateCustomDBEngineVersionFault {
	}
	export interface CreateCustomDBEngineVersionFaultFormProperties {
	}
	export function CreateCreateCustomDBEngineVersionFaultFormGroup() {
		return new FormGroup<CreateCustomDBEngineVersionFaultFormProperties>({
		});

	}

	export interface CreateDBClusterResult {

		/** <p>Contains the details of an Amazon Aurora DB cluster or Multi-AZ DB cluster.</p> <p>For an Amazon Aurora DB cluster, this data type is used as a response element in the operations <code>CreateDBCluster</code>, <code>DeleteDBCluster</code>, <code>DescribeDBClusters</code>, <code>FailoverDBCluster</code>, <code>ModifyDBCluster</code>, <code>PromoteReadReplicaDBCluster</code>, <code>RestoreDBClusterFromS3</code>, <code>RestoreDBClusterFromSnapshot</code>, <code>RestoreDBClusterToPointInTime</code>, <code>StartDBCluster</code>, and <code>StopDBCluster</code>.</p> <p>For a Multi-AZ DB cluster, this data type is used as a response element in the operations <code>CreateDBCluster</code>, <code>DeleteDBCluster</code>, <code>DescribeDBClusters</code>, <code>FailoverDBCluster</code>, <code>ModifyDBCluster</code>, <code>RebootDBCluster</code>, <code>RestoreDBClusterFromSnapshot</code>, and <code>RestoreDBClusterToPointInTime</code>.</p> <p>For more information on Amazon Aurora DB clusters, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/CHAP_AuroraOverview.html"> What is Amazon Aurora?</a> in the <i>Amazon Aurora User Guide.</i> </p> <p>For more information on Multi-AZ DB clusters, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/multi-az-db-clusters-concepts.html"> Multi-AZ deployments with two readable standby DB instances</a> in the <i>Amazon RDS User Guide.</i> </p> */
		DBCluster?: DBCluster;
	}
	export interface CreateDBClusterResultFormProperties {
	}
	export function CreateCreateDBClusterResultFormGroup() {
		return new FormGroup<CreateDBClusterResultFormProperties>({
		});

	}


	/** <p>Contains the details of an Amazon Aurora DB cluster or Multi-AZ DB cluster.</p> <p>For an Amazon Aurora DB cluster, this data type is used as a response element in the operations <code>CreateDBCluster</code>, <code>DeleteDBCluster</code>, <code>DescribeDBClusters</code>, <code>FailoverDBCluster</code>, <code>ModifyDBCluster</code>, <code>PromoteReadReplicaDBCluster</code>, <code>RestoreDBClusterFromS3</code>, <code>RestoreDBClusterFromSnapshot</code>, <code>RestoreDBClusterToPointInTime</code>, <code>StartDBCluster</code>, and <code>StopDBCluster</code>.</p> <p>For a Multi-AZ DB cluster, this data type is used as a response element in the operations <code>CreateDBCluster</code>, <code>DeleteDBCluster</code>, <code>DescribeDBClusters</code>, <code>FailoverDBCluster</code>, <code>ModifyDBCluster</code>, <code>RebootDBCluster</code>, <code>RestoreDBClusterFromSnapshot</code>, and <code>RestoreDBClusterToPointInTime</code>.</p> <p>For more information on Amazon Aurora DB clusters, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/CHAP_AuroraOverview.html"> What is Amazon Aurora?</a> in the <i>Amazon Aurora User Guide.</i> </p> <p>For more information on Multi-AZ DB clusters, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/multi-az-db-clusters-concepts.html"> Multi-AZ deployments with two readable standby DB instances</a> in the <i>Amazon RDS User Guide.</i> </p> */
	export interface DBCluster {
		AllocatedStorage?: number | null;
		AvailabilityZones?: Array<string>;
		BackupRetentionPeriod?: number | null;
		CharacterSetName?: string;
		DatabaseName?: string;
		DBClusterIdentifier?: string;
		DBClusterParameterGroup?: string;
		DBSubnetGroup?: string;
		Status?: string;
		AutomaticRestartTime?: Date;
		PercentProgress?: string;
		EarliestRestorableTime?: Date;
		Endpoint?: string;
		ReaderEndpoint?: string;
		CustomEndpoints?: Array<string>;
		MultiAZ?: boolean | null;
		Engine?: string;
		EngineVersion?: string;
		LatestRestorableTime?: Date;
		Port?: number | null;
		MasterUsername?: string;
		DBClusterOptionGroupMemberships?: Array<string>;
		PreferredBackupWindow?: string;
		PreferredMaintenanceWindow?: string;
		ReplicationSourceIdentifier?: string;
		ReadReplicaIdentifiers?: Array<string>;
		DBClusterMembers?: Array<string>;
		VpcSecurityGroups?: Array<string>;
		HostedZoneId?: string;
		StorageEncrypted?: boolean | null;
		KmsKeyId?: string;
		DbClusterResourceId?: string;
		DBClusterArn?: string;
		AssociatedRoles?: Array<string>;
		IAMDatabaseAuthenticationEnabled?: boolean | null;
		CloneGroupId?: string;
		ClusterCreateTime?: Date;
		EarliestBacktrackTime?: Date;
		BacktrackWindow?: number | null;
		BacktrackConsumedChangeRecords?: number | null;
		EnabledCloudwatchLogsExports?: Array<string>;
		Capacity?: number | null;
		EngineMode?: string;

		/** <p>The scaling configuration for an Aurora DB cluster in <code>serverless</code> DB engine mode.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-serverless.html">Using Amazon Aurora Serverless v1</a> in the <i>Amazon Aurora User Guide</i>.</p> */
		ScalingConfigurationInfo?: ScalingConfigurationInfo;
		DeletionProtection?: boolean | null;
		HttpEndpointEnabled?: boolean | null;
		ActivityStreamMode?: ActivityStreamMode;
		ActivityStreamStatus?: ActivityStreamStatus;
		ActivityStreamKmsKeyId?: string;
		ActivityStreamKinesisStreamName?: string;
		CopyTagsToSnapshot?: boolean | null;
		CrossAccountClone?: boolean | null;
		DomainMemberships?: Array<string>;

		/** A list of tags. For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Tagging.html">Tagging Amazon RDS Resources</a> in the <i>Amazon RDS User Guide.</i> */
		TagList?: Array<string>;
		GlobalWriteForwardingStatus?: WriteForwardingStatus;
		GlobalWriteForwardingRequested?: boolean | null;
		PendingModifiedValues?: ClusterPendingModifiedValues;
		DBClusterInstanceClass?: string;
		StorageType?: string;
		Iops?: number | null;
		PubliclyAccessible?: boolean | null;
		AutoMinorVersionUpgrade?: boolean | null;
		MonitoringInterval?: number | null;
		MonitoringRoleArn?: string;
		PerformanceInsightsEnabled?: boolean | null;
		PerformanceInsightsKMSKeyId?: string;
		PerformanceInsightsRetentionPeriod?: number | null;

		/** <p>The scaling configuration for an Aurora Serverless v2 DB cluster.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-serverless-v2.html">Using Amazon Aurora Serverless v2</a> in the <i>Amazon Aurora User Guide</i>.</p> */
		ServerlessV2ScalingConfiguration?: ServerlessV2ScalingConfigurationInfo;
		NetworkType?: string;
		DBSystemId?: string;
		MasterUserSecret?: MasterUserSecret;
		IOOptimizedNextAllowedModificationTime?: Date;
		LocalWriteForwardingStatus?: LocalWriteForwardingStatus;
	}

	/** <p>Contains the details of an Amazon Aurora DB cluster or Multi-AZ DB cluster.</p> <p>For an Amazon Aurora DB cluster, this data type is used as a response element in the operations <code>CreateDBCluster</code>, <code>DeleteDBCluster</code>, <code>DescribeDBClusters</code>, <code>FailoverDBCluster</code>, <code>ModifyDBCluster</code>, <code>PromoteReadReplicaDBCluster</code>, <code>RestoreDBClusterFromS3</code>, <code>RestoreDBClusterFromSnapshot</code>, <code>RestoreDBClusterToPointInTime</code>, <code>StartDBCluster</code>, and <code>StopDBCluster</code>.</p> <p>For a Multi-AZ DB cluster, this data type is used as a response element in the operations <code>CreateDBCluster</code>, <code>DeleteDBCluster</code>, <code>DescribeDBClusters</code>, <code>FailoverDBCluster</code>, <code>ModifyDBCluster</code>, <code>RebootDBCluster</code>, <code>RestoreDBClusterFromSnapshot</code>, and <code>RestoreDBClusterToPointInTime</code>.</p> <p>For more information on Amazon Aurora DB clusters, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/CHAP_AuroraOverview.html"> What is Amazon Aurora?</a> in the <i>Amazon Aurora User Guide.</i> </p> <p>For more information on Multi-AZ DB clusters, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/multi-az-db-clusters-concepts.html"> Multi-AZ deployments with two readable standby DB instances</a> in the <i>Amazon RDS User Guide.</i> </p> */
	export interface DBClusterFormProperties {
		AllocatedStorage: FormControl<number | null | undefined>,
		BackupRetentionPeriod: FormControl<number | null | undefined>,
		CharacterSetName: FormControl<string | null | undefined>,
		DatabaseName: FormControl<string | null | undefined>,
		DBClusterIdentifier: FormControl<string | null | undefined>,
		DBClusterParameterGroup: FormControl<string | null | undefined>,
		DBSubnetGroup: FormControl<string | null | undefined>,
		Status: FormControl<string | null | undefined>,
		AutomaticRestartTime: FormControl<Date | null | undefined>,
		PercentProgress: FormControl<string | null | undefined>,
		EarliestRestorableTime: FormControl<Date | null | undefined>,
		Endpoint: FormControl<string | null | undefined>,
		ReaderEndpoint: FormControl<string | null | undefined>,
		MultiAZ: FormControl<boolean | null | undefined>,
		Engine: FormControl<string | null | undefined>,
		EngineVersion: FormControl<string | null | undefined>,
		LatestRestorableTime: FormControl<Date | null | undefined>,
		Port: FormControl<number | null | undefined>,
		MasterUsername: FormControl<string | null | undefined>,
		PreferredBackupWindow: FormControl<string | null | undefined>,
		PreferredMaintenanceWindow: FormControl<string | null | undefined>,
		ReplicationSourceIdentifier: FormControl<string | null | undefined>,
		HostedZoneId: FormControl<string | null | undefined>,
		StorageEncrypted: FormControl<boolean | null | undefined>,
		KmsKeyId: FormControl<string | null | undefined>,
		DbClusterResourceId: FormControl<string | null | undefined>,
		DBClusterArn: FormControl<string | null | undefined>,
		IAMDatabaseAuthenticationEnabled: FormControl<boolean | null | undefined>,
		CloneGroupId: FormControl<string | null | undefined>,
		ClusterCreateTime: FormControl<Date | null | undefined>,
		EarliestBacktrackTime: FormControl<Date | null | undefined>,
		BacktrackWindow: FormControl<number | null | undefined>,
		BacktrackConsumedChangeRecords: FormControl<number | null | undefined>,
		Capacity: FormControl<number | null | undefined>,
		EngineMode: FormControl<string | null | undefined>,
		DeletionProtection: FormControl<boolean | null | undefined>,
		HttpEndpointEnabled: FormControl<boolean | null | undefined>,
		ActivityStreamMode: FormControl<ActivityStreamMode | null | undefined>,
		ActivityStreamStatus: FormControl<ActivityStreamStatus | null | undefined>,
		ActivityStreamKmsKeyId: FormControl<string | null | undefined>,
		ActivityStreamKinesisStreamName: FormControl<string | null | undefined>,
		CopyTagsToSnapshot: FormControl<boolean | null | undefined>,
		CrossAccountClone: FormControl<boolean | null | undefined>,
		GlobalWriteForwardingStatus: FormControl<WriteForwardingStatus | null | undefined>,
		GlobalWriteForwardingRequested: FormControl<boolean | null | undefined>,
		DBClusterInstanceClass: FormControl<string | null | undefined>,
		StorageType: FormControl<string | null | undefined>,
		Iops: FormControl<number | null | undefined>,
		PubliclyAccessible: FormControl<boolean | null | undefined>,
		AutoMinorVersionUpgrade: FormControl<boolean | null | undefined>,
		MonitoringInterval: FormControl<number | null | undefined>,
		MonitoringRoleArn: FormControl<string | null | undefined>,
		PerformanceInsightsEnabled: FormControl<boolean | null | undefined>,
		PerformanceInsightsKMSKeyId: FormControl<string | null | undefined>,
		PerformanceInsightsRetentionPeriod: FormControl<number | null | undefined>,
		NetworkType: FormControl<string | null | undefined>,
		DBSystemId: FormControl<string | null | undefined>,
		IOOptimizedNextAllowedModificationTime: FormControl<Date | null | undefined>,
		LocalWriteForwardingStatus: FormControl<LocalWriteForwardingStatus | null | undefined>,
	}
	export function CreateDBClusterFormGroup() {
		return new FormGroup<DBClusterFormProperties>({
			AllocatedStorage: new FormControl<number | null | undefined>(undefined),
			BackupRetentionPeriod: new FormControl<number | null | undefined>(undefined),
			CharacterSetName: new FormControl<string | null | undefined>(undefined),
			DatabaseName: new FormControl<string | null | undefined>(undefined),
			DBClusterIdentifier: new FormControl<string | null | undefined>(undefined),
			DBClusterParameterGroup: new FormControl<string | null | undefined>(undefined),
			DBSubnetGroup: new FormControl<string | null | undefined>(undefined),
			Status: new FormControl<string | null | undefined>(undefined),
			AutomaticRestartTime: new FormControl<Date | null | undefined>(undefined),
			PercentProgress: new FormControl<string | null | undefined>(undefined),
			EarliestRestorableTime: new FormControl<Date | null | undefined>(undefined),
			Endpoint: new FormControl<string | null | undefined>(undefined),
			ReaderEndpoint: new FormControl<string | null | undefined>(undefined),
			MultiAZ: new FormControl<boolean | null | undefined>(undefined),
			Engine: new FormControl<string | null | undefined>(undefined),
			EngineVersion: new FormControl<string | null | undefined>(undefined),
			LatestRestorableTime: new FormControl<Date | null | undefined>(undefined),
			Port: new FormControl<number | null | undefined>(undefined),
			MasterUsername: new FormControl<string | null | undefined>(undefined),
			PreferredBackupWindow: new FormControl<string | null | undefined>(undefined),
			PreferredMaintenanceWindow: new FormControl<string | null | undefined>(undefined),
			ReplicationSourceIdentifier: new FormControl<string | null | undefined>(undefined),
			HostedZoneId: new FormControl<string | null | undefined>(undefined),
			StorageEncrypted: new FormControl<boolean | null | undefined>(undefined),
			KmsKeyId: new FormControl<string | null | undefined>(undefined),
			DbClusterResourceId: new FormControl<string | null | undefined>(undefined),
			DBClusterArn: new FormControl<string | null | undefined>(undefined),
			IAMDatabaseAuthenticationEnabled: new FormControl<boolean | null | undefined>(undefined),
			CloneGroupId: new FormControl<string | null | undefined>(undefined),
			ClusterCreateTime: new FormControl<Date | null | undefined>(undefined),
			EarliestBacktrackTime: new FormControl<Date | null | undefined>(undefined),
			BacktrackWindow: new FormControl<number | null | undefined>(undefined),
			BacktrackConsumedChangeRecords: new FormControl<number | null | undefined>(undefined),
			Capacity: new FormControl<number | null | undefined>(undefined),
			EngineMode: new FormControl<string | null | undefined>(undefined),
			DeletionProtection: new FormControl<boolean | null | undefined>(undefined),
			HttpEndpointEnabled: new FormControl<boolean | null | undefined>(undefined),
			ActivityStreamMode: new FormControl<ActivityStreamMode | null | undefined>(undefined),
			ActivityStreamStatus: new FormControl<ActivityStreamStatus | null | undefined>(undefined),
			ActivityStreamKmsKeyId: new FormControl<string | null | undefined>(undefined),
			ActivityStreamKinesisStreamName: new FormControl<string | null | undefined>(undefined),
			CopyTagsToSnapshot: new FormControl<boolean | null | undefined>(undefined),
			CrossAccountClone: new FormControl<boolean | null | undefined>(undefined),
			GlobalWriteForwardingStatus: new FormControl<WriteForwardingStatus | null | undefined>(undefined),
			GlobalWriteForwardingRequested: new FormControl<boolean | null | undefined>(undefined),
			DBClusterInstanceClass: new FormControl<string | null | undefined>(undefined),
			StorageType: new FormControl<string | null | undefined>(undefined),
			Iops: new FormControl<number | null | undefined>(undefined),
			PubliclyAccessible: new FormControl<boolean | null | undefined>(undefined),
			AutoMinorVersionUpgrade: new FormControl<boolean | null | undefined>(undefined),
			MonitoringInterval: new FormControl<number | null | undefined>(undefined),
			MonitoringRoleArn: new FormControl<string | null | undefined>(undefined),
			PerformanceInsightsEnabled: new FormControl<boolean | null | undefined>(undefined),
			PerformanceInsightsKMSKeyId: new FormControl<string | null | undefined>(undefined),
			PerformanceInsightsRetentionPeriod: new FormControl<number | null | undefined>(undefined),
			NetworkType: new FormControl<string | null | undefined>(undefined),
			DBSystemId: new FormControl<string | null | undefined>(undefined),
			IOOptimizedNextAllowedModificationTime: new FormControl<Date | null | undefined>(undefined),
			LocalWriteForwardingStatus: new FormControl<LocalWriteForwardingStatus | null | undefined>(undefined),
		});

	}


	/** <p>The scaling configuration for an Aurora DB cluster in <code>serverless</code> DB engine mode.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-serverless.html">Using Amazon Aurora Serverless v1</a> in the <i>Amazon Aurora User Guide</i>.</p> */
	export interface ScalingConfigurationInfo {
		MinCapacity?: number | null;
		MaxCapacity?: number | null;
		AutoPause?: boolean | null;
		SecondsUntilAutoPause?: number | null;
		TimeoutAction?: string;
		SecondsBeforeTimeout?: number | null;
	}

	/** <p>The scaling configuration for an Aurora DB cluster in <code>serverless</code> DB engine mode.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-serverless.html">Using Amazon Aurora Serverless v1</a> in the <i>Amazon Aurora User Guide</i>.</p> */
	export interface ScalingConfigurationInfoFormProperties {
		MinCapacity: FormControl<number | null | undefined>,
		MaxCapacity: FormControl<number | null | undefined>,
		AutoPause: FormControl<boolean | null | undefined>,
		SecondsUntilAutoPause: FormControl<number | null | undefined>,
		TimeoutAction: FormControl<string | null | undefined>,
		SecondsBeforeTimeout: FormControl<number | null | undefined>,
	}
	export function CreateScalingConfigurationInfoFormGroup() {
		return new FormGroup<ScalingConfigurationInfoFormProperties>({
			MinCapacity: new FormControl<number | null | undefined>(undefined),
			MaxCapacity: new FormControl<number | null | undefined>(undefined),
			AutoPause: new FormControl<boolean | null | undefined>(undefined),
			SecondsUntilAutoPause: new FormControl<number | null | undefined>(undefined),
			TimeoutAction: new FormControl<string | null | undefined>(undefined),
			SecondsBeforeTimeout: new FormControl<number | null | undefined>(undefined),
		});

	}

	export enum ActivityStreamMode { sync = 0, async = 1 }

	export enum ActivityStreamStatus { stopped = 0, starting = 1, started = 2, stopping = 3 }

	export enum WriteForwardingStatus { enabled = 0, disabled = 1, enabling = 2, disabling = 3, unknown = 4 }


	/** This data type is used as a response element in the <code>ModifyDBCluster</code> operation and contains changes that will be applied during the next maintenance window. */
	export interface ClusterPendingModifiedValues {

		/** A list of the log types whose configuration is still pending. In other words, these log types are in the process of being activated or deactivated. */
		PendingCloudwatchLogsExports?: PendingCloudwatchLogsExports;
		DBClusterIdentifier?: string;
		MasterUserPassword?: string;
		IAMDatabaseAuthenticationEnabled?: boolean | null;
		EngineVersion?: string;
		BackupRetentionPeriod?: number | null;
		AllocatedStorage?: number | null;
		Iops?: number | null;
		StorageType?: string;
	}

	/** This data type is used as a response element in the <code>ModifyDBCluster</code> operation and contains changes that will be applied during the next maintenance window. */
	export interface ClusterPendingModifiedValuesFormProperties {
		DBClusterIdentifier: FormControl<string | null | undefined>,
		MasterUserPassword: FormControl<string | null | undefined>,
		IAMDatabaseAuthenticationEnabled: FormControl<boolean | null | undefined>,
		EngineVersion: FormControl<string | null | undefined>,
		BackupRetentionPeriod: FormControl<number | null | undefined>,
		AllocatedStorage: FormControl<number | null | undefined>,
		Iops: FormControl<number | null | undefined>,
		StorageType: FormControl<string | null | undefined>,
	}
	export function CreateClusterPendingModifiedValuesFormGroup() {
		return new FormGroup<ClusterPendingModifiedValuesFormProperties>({
			DBClusterIdentifier: new FormControl<string | null | undefined>(undefined),
			MasterUserPassword: new FormControl<string | null | undefined>(undefined),
			IAMDatabaseAuthenticationEnabled: new FormControl<boolean | null | undefined>(undefined),
			EngineVersion: new FormControl<string | null | undefined>(undefined),
			BackupRetentionPeriod: new FormControl<number | null | undefined>(undefined),
			AllocatedStorage: new FormControl<number | null | undefined>(undefined),
			Iops: new FormControl<number | null | undefined>(undefined),
			StorageType: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** A list of the log types whose configuration is still pending. In other words, these log types are in the process of being activated or deactivated. */
	export interface PendingCloudwatchLogsExports {
		LogTypesToEnable?: Array<string>;
		LogTypesToDisable?: Array<string>;
	}

	/** A list of the log types whose configuration is still pending. In other words, these log types are in the process of being activated or deactivated. */
	export interface PendingCloudwatchLogsExportsFormProperties {
	}
	export function CreatePendingCloudwatchLogsExportsFormGroup() {
		return new FormGroup<PendingCloudwatchLogsExportsFormProperties>({
		});

	}


	/** <p>The scaling configuration for an Aurora Serverless v2 DB cluster.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-serverless-v2.html">Using Amazon Aurora Serverless v2</a> in the <i>Amazon Aurora User Guide</i>.</p> */
	export interface ServerlessV2ScalingConfigurationInfo {
		MinCapacity?: number | null;
		MaxCapacity?: number | null;
	}

	/** <p>The scaling configuration for an Aurora Serverless v2 DB cluster.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-serverless-v2.html">Using Amazon Aurora Serverless v2</a> in the <i>Amazon Aurora User Guide</i>.</p> */
	export interface ServerlessV2ScalingConfigurationInfoFormProperties {
		MinCapacity: FormControl<number | null | undefined>,
		MaxCapacity: FormControl<number | null | undefined>,
	}
	export function CreateServerlessV2ScalingConfigurationInfoFormGroup() {
		return new FormGroup<ServerlessV2ScalingConfigurationInfoFormProperties>({
			MinCapacity: new FormControl<number | null | undefined>(undefined),
			MaxCapacity: new FormControl<number | null | undefined>(undefined),
		});

	}


	/** <p>Contains the secret managed by RDS in Amazon Web Services Secrets Manager for the master user password.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/rds-secrets-manager.html">Password management with Amazon Web Services Secrets Manager</a> in the <i>Amazon RDS User Guide</i> and <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/rds-secrets-manager.html">Password management with Amazon Web Services Secrets Manager</a> in the <i>Amazon Aurora User Guide.</i> </p> */
	export interface MasterUserSecret {
		SecretArn?: string;
		SecretStatus?: string;
		KmsKeyId?: string;
	}

	/** <p>Contains the secret managed by RDS in Amazon Web Services Secrets Manager for the master user password.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/rds-secrets-manager.html">Password management with Amazon Web Services Secrets Manager</a> in the <i>Amazon RDS User Guide</i> and <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/rds-secrets-manager.html">Password management with Amazon Web Services Secrets Manager</a> in the <i>Amazon Aurora User Guide.</i> </p> */
	export interface MasterUserSecretFormProperties {
		SecretArn: FormControl<string | null | undefined>,
		SecretStatus: FormControl<string | null | undefined>,
		KmsKeyId: FormControl<string | null | undefined>,
	}
	export function CreateMasterUserSecretFormGroup() {
		return new FormGroup<MasterUserSecretFormProperties>({
			SecretArn: new FormControl<string | null | undefined>(undefined),
			SecretStatus: new FormControl<string | null | undefined>(undefined),
			KmsKeyId: new FormControl<string | null | undefined>(undefined),
		});

	}

	export enum LocalWriteForwardingStatus { enabled = 0, disabled = 1, enabling = 2, disabling = 3, requested = 4 }

	export interface DBClusterAlreadyExistsFault {
	}
	export interface DBClusterAlreadyExistsFaultFormProperties {
	}
	export function CreateDBClusterAlreadyExistsFaultFormGroup() {
		return new FormGroup<DBClusterAlreadyExistsFaultFormProperties>({
		});

	}

	export interface InsufficientStorageClusterCapacityFault {
	}
	export interface InsufficientStorageClusterCapacityFaultFormProperties {
	}
	export function CreateInsufficientStorageClusterCapacityFaultFormGroup() {
		return new FormGroup<InsufficientStorageClusterCapacityFaultFormProperties>({
		});

	}

	export interface StorageQuotaExceededFault {
	}
	export interface StorageQuotaExceededFaultFormProperties {
	}
	export function CreateStorageQuotaExceededFaultFormGroup() {
		return new FormGroup<StorageQuotaExceededFaultFormProperties>({
		});

	}

	export interface DBSubnetGroupNotFoundFault {
	}
	export interface DBSubnetGroupNotFoundFaultFormProperties {
	}
	export function CreateDBSubnetGroupNotFoundFaultFormGroup() {
		return new FormGroup<DBSubnetGroupNotFoundFaultFormProperties>({
		});

	}

	export interface InvalidVPCNetworkStateFault {
	}
	export interface InvalidVPCNetworkStateFaultFormProperties {
	}
	export function CreateInvalidVPCNetworkStateFaultFormGroup() {
		return new FormGroup<InvalidVPCNetworkStateFaultFormProperties>({
		});

	}

	export interface InvalidDBSubnetGroupStateFault {
	}
	export interface InvalidDBSubnetGroupStateFaultFormProperties {
	}
	export function CreateInvalidDBSubnetGroupStateFaultFormGroup() {
		return new FormGroup<InvalidDBSubnetGroupStateFaultFormProperties>({
		});

	}

	export interface InvalidSubnet {
	}
	export interface InvalidSubnetFormProperties {
	}
	export function CreateInvalidSubnetFormGroup() {
		return new FormGroup<InvalidSubnetFormProperties>({
		});

	}

	export interface DBSubnetGroupDoesNotCoverEnoughAZs {
	}
	export interface DBSubnetGroupDoesNotCoverEnoughAZsFormProperties {
	}
	export function CreateDBSubnetGroupDoesNotCoverEnoughAZsFormGroup() {
		return new FormGroup<DBSubnetGroupDoesNotCoverEnoughAZsFormProperties>({
		});

	}

	export interface GlobalClusterNotFoundFault {
	}
	export interface GlobalClusterNotFoundFaultFormProperties {
	}
	export function CreateGlobalClusterNotFoundFaultFormGroup() {
		return new FormGroup<GlobalClusterNotFoundFaultFormProperties>({
		});

	}

	export interface InvalidGlobalClusterStateFault {
	}
	export interface InvalidGlobalClusterStateFaultFormProperties {
	}
	export function CreateInvalidGlobalClusterStateFaultFormGroup() {
		return new FormGroup<InvalidGlobalClusterStateFaultFormProperties>({
		});

	}

	export interface DomainNotFoundFault {
	}
	export interface DomainNotFoundFaultFormProperties {
	}
	export function CreateDomainNotFoundFaultFormGroup() {
		return new FormGroup<DomainNotFoundFaultFormProperties>({
		});

	}


	/** <p>This data type represents the information you need to connect to an Amazon Aurora DB cluster. This data type is used as a response element in the following actions:</p> <ul> <li> <p> <code>CreateDBClusterEndpoint</code> </p> </li> <li> <p> <code>DescribeDBClusterEndpoints</code> </p> </li> <li> <p> <code>ModifyDBClusterEndpoint</code> </p> </li> <li> <p> <code>DeleteDBClusterEndpoint</code> </p> </li> </ul> <p>For the data structure that represents Amazon RDS DB instance endpoints, see <code>Endpoint</code>.</p> */
	export interface DBClusterEndpoint {
		DBClusterEndpointIdentifier?: string;
		DBClusterIdentifier?: string;
		DBClusterEndpointResourceIdentifier?: string;
		Endpoint?: string;
		Status?: string;
		EndpointType?: string;
		CustomEndpointType?: string;
		StaticMembers?: Array<string>;
		ExcludedMembers?: Array<string>;
		DBClusterEndpointArn?: string;
	}

	/** <p>This data type represents the information you need to connect to an Amazon Aurora DB cluster. This data type is used as a response element in the following actions:</p> <ul> <li> <p> <code>CreateDBClusterEndpoint</code> </p> </li> <li> <p> <code>DescribeDBClusterEndpoints</code> </p> </li> <li> <p> <code>ModifyDBClusterEndpoint</code> </p> </li> <li> <p> <code>DeleteDBClusterEndpoint</code> </p> </li> </ul> <p>For the data structure that represents Amazon RDS DB instance endpoints, see <code>Endpoint</code>.</p> */
	export interface DBClusterEndpointFormProperties {
		DBClusterEndpointIdentifier: FormControl<string | null | undefined>,
		DBClusterIdentifier: FormControl<string | null | undefined>,
		DBClusterEndpointResourceIdentifier: FormControl<string | null | undefined>,
		Endpoint: FormControl<string | null | undefined>,
		Status: FormControl<string | null | undefined>,
		EndpointType: FormControl<string | null | undefined>,
		CustomEndpointType: FormControl<string | null | undefined>,
		DBClusterEndpointArn: FormControl<string | null | undefined>,
	}
	export function CreateDBClusterEndpointFormGroup() {
		return new FormGroup<DBClusterEndpointFormProperties>({
			DBClusterEndpointIdentifier: new FormControl<string | null | undefined>(undefined),
			DBClusterIdentifier: new FormControl<string | null | undefined>(undefined),
			DBClusterEndpointResourceIdentifier: new FormControl<string | null | undefined>(undefined),
			Endpoint: new FormControl<string | null | undefined>(undefined),
			Status: new FormControl<string | null | undefined>(undefined),
			EndpointType: new FormControl<string | null | undefined>(undefined),
			CustomEndpointType: new FormControl<string | null | undefined>(undefined),
			DBClusterEndpointArn: new FormControl<string | null | undefined>(undefined),
		});

	}

	export interface DBClusterEndpointQuotaExceededFault {
	}
	export interface DBClusterEndpointQuotaExceededFaultFormProperties {
	}
	export function CreateDBClusterEndpointQuotaExceededFaultFormGroup() {
		return new FormGroup<DBClusterEndpointQuotaExceededFaultFormProperties>({
		});

	}

	export interface DBClusterEndpointAlreadyExistsFault {
	}
	export interface DBClusterEndpointAlreadyExistsFaultFormProperties {
	}
	export function CreateDBClusterEndpointAlreadyExistsFaultFormGroup() {
		return new FormGroup<DBClusterEndpointAlreadyExistsFaultFormProperties>({
		});

	}

	export interface CreateDBClusterParameterGroupResult {

		/** <p>Contains the details of an Amazon RDS DB cluster parameter group.</p> <p>This data type is used as a response element in the <code>DescribeDBClusterParameterGroups</code> action.</p> */
		DBClusterParameterGroup?: DBClusterParameterGroup;
	}
	export interface CreateDBClusterParameterGroupResultFormProperties {
	}
	export function CreateCreateDBClusterParameterGroupResultFormGroup() {
		return new FormGroup<CreateDBClusterParameterGroupResultFormProperties>({
		});

	}

	export interface CreateDBClusterSnapshotResult {

		/** <p>Contains the details for an Amazon RDS DB cluster snapshot</p> <p>This data type is used as a response element in the <code>DescribeDBClusterSnapshots</code> action.</p> */
		DBClusterSnapshot?: DBClusterSnapshot;
	}
	export interface CreateDBClusterSnapshotResultFormProperties {
	}
	export function CreateCreateDBClusterSnapshotResultFormGroup() {
		return new FormGroup<CreateDBClusterSnapshotResultFormProperties>({
		});

	}

	export interface CreateDBInstanceResult {

		/** <p>Contains the details of an Amazon RDS DB instance.</p> <p>This data type is used as a response element in the operations <code>CreateDBInstance</code>, <code>CreateDBInstanceReadReplica</code>, <code>DeleteDBInstance</code>, <code>DescribeDBInstances</code>, <code>ModifyDBInstance</code>, <code>PromoteReadReplica</code>, <code>RebootDBInstance</code>, <code>RestoreDBInstanceFromDBSnapshot</code>, <code>RestoreDBInstanceFromS3</code>, <code>RestoreDBInstanceToPointInTime</code>, <code>StartDBInstance</code>, and <code>StopDBInstance</code>.</p> */
		DBInstance?: DBInstance;
	}
	export interface CreateDBInstanceResultFormProperties {
	}
	export function CreateCreateDBInstanceResultFormGroup() {
		return new FormGroup<CreateDBInstanceResultFormProperties>({
		});

	}


	/** <p>Contains the details of an Amazon RDS DB instance.</p> <p>This data type is used as a response element in the operations <code>CreateDBInstance</code>, <code>CreateDBInstanceReadReplica</code>, <code>DeleteDBInstance</code>, <code>DescribeDBInstances</code>, <code>ModifyDBInstance</code>, <code>PromoteReadReplica</code>, <code>RebootDBInstance</code>, <code>RestoreDBInstanceFromDBSnapshot</code>, <code>RestoreDBInstanceFromS3</code>, <code>RestoreDBInstanceToPointInTime</code>, <code>StartDBInstance</code>, and <code>StopDBInstance</code>.</p> */
	export interface DBInstance {
		DBInstanceIdentifier?: string;
		DBInstanceClass?: string;
		Engine?: string;
		DBInstanceStatus?: string;
		AutomaticRestartTime?: Date;
		MasterUsername?: string;
		DBName?: string;
		Endpoint?: Endpoint;
		AllocatedStorage?: number | null;
		InstanceCreateTime?: Date;
		PreferredBackupWindow?: string;
		BackupRetentionPeriod?: number | null;
		DBSecurityGroups?: Array<string>;
		VpcSecurityGroups?: Array<string>;
		DBParameterGroups?: Array<string>;
		AvailabilityZone?: string;
		DBSubnetGroup?: DBSubnetGroup;
		PreferredMaintenanceWindow?: string;
		PendingModifiedValues?: PendingModifiedValues;
		LatestRestorableTime?: Date;
		MultiAZ?: boolean | null;
		EngineVersion?: string;
		AutoMinorVersionUpgrade?: boolean | null;
		ReadReplicaSourceDBInstanceIdentifier?: string;
		ReadReplicaDBInstanceIdentifiers?: Array<string>;
		ReadReplicaDBClusterIdentifiers?: Array<string>;
		ReplicaMode?: ReplicaMode;
		LicenseModel?: string;
		Iops?: number | null;
		OptionGroupMemberships?: Array<string>;
		CharacterSetName?: string;
		NcharCharacterSetName?: string;
		SecondaryAvailabilityZone?: string;
		PubliclyAccessible?: boolean | null;
		StatusInfos?: Array<string>;
		StorageType?: string;
		TdeCredentialArn?: string;
		DbInstancePort?: number | null;
		DBClusterIdentifier?: string;
		StorageEncrypted?: boolean | null;
		KmsKeyId?: string;
		DbiResourceId?: string;
		CACertificateIdentifier?: string;
		DomainMemberships?: Array<string>;
		CopyTagsToSnapshot?: boolean | null;
		MonitoringInterval?: number | null;
		EnhancedMonitoringResourceArn?: string;
		MonitoringRoleArn?: string;
		PromotionTier?: number | null;
		DBInstanceArn?: string;
		Timezone?: string;
		IAMDatabaseAuthenticationEnabled?: boolean | null;
		PerformanceInsightsEnabled?: boolean | null;
		PerformanceInsightsKMSKeyId?: string;
		PerformanceInsightsRetentionPeriod?: number | null;
		EnabledCloudwatchLogsExports?: Array<string>;
		ProcessorFeatures?: Array<string>;
		DeletionProtection?: boolean | null;
		AssociatedRoles?: Array<string>;
		ListenerEndpoint?: Endpoint;
		MaxAllocatedStorage?: number | null;

		/** A list of tags. For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Tagging.html">Tagging Amazon RDS Resources</a> in the <i>Amazon RDS User Guide.</i> */
		TagList?: Array<string>;
		DBInstanceAutomatedBackupsReplications?: Array<string>;
		CustomerOwnedIpEnabled?: boolean | null;
		AwsBackupRecoveryPointArn?: string;
		ActivityStreamStatus?: ActivityStreamStatus;
		ActivityStreamKmsKeyId?: string;
		ActivityStreamKinesisStreamName?: string;
		ActivityStreamMode?: ActivityStreamMode;
		ActivityStreamEngineNativeAuditFieldsIncluded?: boolean | null;
		AutomationMode?: AutomationMode;
		ResumeFullAutomationModeTime?: Date;
		CustomIamInstanceProfile?: string;
		BackupTarget?: string;
		NetworkType?: string;
		ActivityStreamPolicyStatus?: ActivityStreamPolicyStatus;
		StorageThroughput?: number | null;
		DBSystemId?: string;
		MasterUserSecret?: MasterUserSecret;
		CertificateDetails?: CertificateDetails;
		ReadReplicaSourceDBClusterIdentifier?: string;
		PercentProgress?: string;
	}

	/** <p>Contains the details of an Amazon RDS DB instance.</p> <p>This data type is used as a response element in the operations <code>CreateDBInstance</code>, <code>CreateDBInstanceReadReplica</code>, <code>DeleteDBInstance</code>, <code>DescribeDBInstances</code>, <code>ModifyDBInstance</code>, <code>PromoteReadReplica</code>, <code>RebootDBInstance</code>, <code>RestoreDBInstanceFromDBSnapshot</code>, <code>RestoreDBInstanceFromS3</code>, <code>RestoreDBInstanceToPointInTime</code>, <code>StartDBInstance</code>, and <code>StopDBInstance</code>.</p> */
	export interface DBInstanceFormProperties {
		DBInstanceIdentifier: FormControl<string | null | undefined>,
		DBInstanceClass: FormControl<string | null | undefined>,
		Engine: FormControl<string | null | undefined>,
		DBInstanceStatus: FormControl<string | null | undefined>,
		AutomaticRestartTime: FormControl<Date | null | undefined>,
		MasterUsername: FormControl<string | null | undefined>,
		DBName: FormControl<string | null | undefined>,
		AllocatedStorage: FormControl<number | null | undefined>,
		InstanceCreateTime: FormControl<Date | null | undefined>,
		PreferredBackupWindow: FormControl<string | null | undefined>,
		BackupRetentionPeriod: FormControl<number | null | undefined>,
		AvailabilityZone: FormControl<string | null | undefined>,
		PreferredMaintenanceWindow: FormControl<string | null | undefined>,
		LatestRestorableTime: FormControl<Date | null | undefined>,
		MultiAZ: FormControl<boolean | null | undefined>,
		EngineVersion: FormControl<string | null | undefined>,
		AutoMinorVersionUpgrade: FormControl<boolean | null | undefined>,
		ReadReplicaSourceDBInstanceIdentifier: FormControl<string | null | undefined>,
		ReplicaMode: FormControl<ReplicaMode | null | undefined>,
		LicenseModel: FormControl<string | null | undefined>,
		Iops: FormControl<number | null | undefined>,
		CharacterSetName: FormControl<string | null | undefined>,
		NcharCharacterSetName: FormControl<string | null | undefined>,
		SecondaryAvailabilityZone: FormControl<string | null | undefined>,
		PubliclyAccessible: FormControl<boolean | null | undefined>,
		StorageType: FormControl<string | null | undefined>,
		TdeCredentialArn: FormControl<string | null | undefined>,
		DbInstancePort: FormControl<number | null | undefined>,
		DBClusterIdentifier: FormControl<string | null | undefined>,
		StorageEncrypted: FormControl<boolean | null | undefined>,
		KmsKeyId: FormControl<string | null | undefined>,
		DbiResourceId: FormControl<string | null | undefined>,
		CACertificateIdentifier: FormControl<string | null | undefined>,
		CopyTagsToSnapshot: FormControl<boolean | null | undefined>,
		MonitoringInterval: FormControl<number | null | undefined>,
		EnhancedMonitoringResourceArn: FormControl<string | null | undefined>,
		MonitoringRoleArn: FormControl<string | null | undefined>,
		PromotionTier: FormControl<number | null | undefined>,
		DBInstanceArn: FormControl<string | null | undefined>,
		Timezone: FormControl<string | null | undefined>,
		IAMDatabaseAuthenticationEnabled: FormControl<boolean | null | undefined>,
		PerformanceInsightsEnabled: FormControl<boolean | null | undefined>,
		PerformanceInsightsKMSKeyId: FormControl<string | null | undefined>,
		PerformanceInsightsRetentionPeriod: FormControl<number | null | undefined>,
		DeletionProtection: FormControl<boolean | null | undefined>,
		MaxAllocatedStorage: FormControl<number | null | undefined>,
		CustomerOwnedIpEnabled: FormControl<boolean | null | undefined>,
		AwsBackupRecoveryPointArn: FormControl<string | null | undefined>,
		ActivityStreamStatus: FormControl<ActivityStreamStatus | null | undefined>,
		ActivityStreamKmsKeyId: FormControl<string | null | undefined>,
		ActivityStreamKinesisStreamName: FormControl<string | null | undefined>,
		ActivityStreamMode: FormControl<ActivityStreamMode | null | undefined>,
		ActivityStreamEngineNativeAuditFieldsIncluded: FormControl<boolean | null | undefined>,
		AutomationMode: FormControl<AutomationMode | null | undefined>,
		ResumeFullAutomationModeTime: FormControl<Date | null | undefined>,
		CustomIamInstanceProfile: FormControl<string | null | undefined>,
		BackupTarget: FormControl<string | null | undefined>,
		NetworkType: FormControl<string | null | undefined>,
		ActivityStreamPolicyStatus: FormControl<ActivityStreamPolicyStatus | null | undefined>,
		StorageThroughput: FormControl<number | null | undefined>,
		DBSystemId: FormControl<string | null | undefined>,
		ReadReplicaSourceDBClusterIdentifier: FormControl<string | null | undefined>,
		PercentProgress: FormControl<string | null | undefined>,
	}
	export function CreateDBInstanceFormGroup() {
		return new FormGroup<DBInstanceFormProperties>({
			DBInstanceIdentifier: new FormControl<string | null | undefined>(undefined),
			DBInstanceClass: new FormControl<string | null | undefined>(undefined),
			Engine: new FormControl<string | null | undefined>(undefined),
			DBInstanceStatus: new FormControl<string | null | undefined>(undefined),
			AutomaticRestartTime: new FormControl<Date | null | undefined>(undefined),
			MasterUsername: new FormControl<string | null | undefined>(undefined),
			DBName: new FormControl<string | null | undefined>(undefined),
			AllocatedStorage: new FormControl<number | null | undefined>(undefined),
			InstanceCreateTime: new FormControl<Date | null | undefined>(undefined),
			PreferredBackupWindow: new FormControl<string | null | undefined>(undefined),
			BackupRetentionPeriod: new FormControl<number | null | undefined>(undefined),
			AvailabilityZone: new FormControl<string | null | undefined>(undefined),
			PreferredMaintenanceWindow: new FormControl<string | null | undefined>(undefined),
			LatestRestorableTime: new FormControl<Date | null | undefined>(undefined),
			MultiAZ: new FormControl<boolean | null | undefined>(undefined),
			EngineVersion: new FormControl<string | null | undefined>(undefined),
			AutoMinorVersionUpgrade: new FormControl<boolean | null | undefined>(undefined),
			ReadReplicaSourceDBInstanceIdentifier: new FormControl<string | null | undefined>(undefined),
			ReplicaMode: new FormControl<ReplicaMode | null | undefined>(undefined),
			LicenseModel: new FormControl<string | null | undefined>(undefined),
			Iops: new FormControl<number | null | undefined>(undefined),
			CharacterSetName: new FormControl<string | null | undefined>(undefined),
			NcharCharacterSetName: new FormControl<string | null | undefined>(undefined),
			SecondaryAvailabilityZone: new FormControl<string | null | undefined>(undefined),
			PubliclyAccessible: new FormControl<boolean | null | undefined>(undefined),
			StorageType: new FormControl<string | null | undefined>(undefined),
			TdeCredentialArn: new FormControl<string | null | undefined>(undefined),
			DbInstancePort: new FormControl<number | null | undefined>(undefined),
			DBClusterIdentifier: new FormControl<string | null | undefined>(undefined),
			StorageEncrypted: new FormControl<boolean | null | undefined>(undefined),
			KmsKeyId: new FormControl<string | null | undefined>(undefined),
			DbiResourceId: new FormControl<string | null | undefined>(undefined),
			CACertificateIdentifier: new FormControl<string | null | undefined>(undefined),
			CopyTagsToSnapshot: new FormControl<boolean | null | undefined>(undefined),
			MonitoringInterval: new FormControl<number | null | undefined>(undefined),
			EnhancedMonitoringResourceArn: new FormControl<string | null | undefined>(undefined),
			MonitoringRoleArn: new FormControl<string | null | undefined>(undefined),
			PromotionTier: new FormControl<number | null | undefined>(undefined),
			DBInstanceArn: new FormControl<string | null | undefined>(undefined),
			Timezone: new FormControl<string | null | undefined>(undefined),
			IAMDatabaseAuthenticationEnabled: new FormControl<boolean | null | undefined>(undefined),
			PerformanceInsightsEnabled: new FormControl<boolean | null | undefined>(undefined),
			PerformanceInsightsKMSKeyId: new FormControl<string | null | undefined>(undefined),
			PerformanceInsightsRetentionPeriod: new FormControl<number | null | undefined>(undefined),
			DeletionProtection: new FormControl<boolean | null | undefined>(undefined),
			MaxAllocatedStorage: new FormControl<number | null | undefined>(undefined),
			CustomerOwnedIpEnabled: new FormControl<boolean | null | undefined>(undefined),
			AwsBackupRecoveryPointArn: new FormControl<string | null | undefined>(undefined),
			ActivityStreamStatus: new FormControl<ActivityStreamStatus | null | undefined>(undefined),
			ActivityStreamKmsKeyId: new FormControl<string | null | undefined>(undefined),
			ActivityStreamKinesisStreamName: new FormControl<string | null | undefined>(undefined),
			ActivityStreamMode: new FormControl<ActivityStreamMode | null | undefined>(undefined),
			ActivityStreamEngineNativeAuditFieldsIncluded: new FormControl<boolean | null | undefined>(undefined),
			AutomationMode: new FormControl<AutomationMode | null | undefined>(undefined),
			ResumeFullAutomationModeTime: new FormControl<Date | null | undefined>(undefined),
			CustomIamInstanceProfile: new FormControl<string | null | undefined>(undefined),
			BackupTarget: new FormControl<string | null | undefined>(undefined),
			NetworkType: new FormControl<string | null | undefined>(undefined),
			ActivityStreamPolicyStatus: new FormControl<ActivityStreamPolicyStatus | null | undefined>(undefined),
			StorageThroughput: new FormControl<number | null | undefined>(undefined),
			DBSystemId: new FormControl<string | null | undefined>(undefined),
			ReadReplicaSourceDBClusterIdentifier: new FormControl<string | null | undefined>(undefined),
			PercentProgress: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** <p>This data type represents the information you need to connect to an Amazon RDS DB instance. This data type is used as a response element in the following actions:</p> <ul> <li> <p> <code>CreateDBInstance</code> </p> </li> <li> <p> <code>DescribeDBInstances</code> </p> </li> <li> <p> <code>DeleteDBInstance</code> </p> </li> </ul> <p>For the data structure that represents Amazon Aurora DB cluster endpoints, see <code>DBClusterEndpoint</code>.</p> */
	export interface Endpoint {
		Address?: string;
		Port?: number | null;
		HostedZoneId?: string;
	}

	/** <p>This data type represents the information you need to connect to an Amazon RDS DB instance. This data type is used as a response element in the following actions:</p> <ul> <li> <p> <code>CreateDBInstance</code> </p> </li> <li> <p> <code>DescribeDBInstances</code> </p> </li> <li> <p> <code>DeleteDBInstance</code> </p> </li> </ul> <p>For the data structure that represents Amazon Aurora DB cluster endpoints, see <code>DBClusterEndpoint</code>.</p> */
	export interface EndpointFormProperties {
		Address: FormControl<string | null | undefined>,
		Port: FormControl<number | null | undefined>,
		HostedZoneId: FormControl<string | null | undefined>,
	}
	export function CreateEndpointFormGroup() {
		return new FormGroup<EndpointFormProperties>({
			Address: new FormControl<string | null | undefined>(undefined),
			Port: new FormControl<number | null | undefined>(undefined),
			HostedZoneId: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** <p>Contains the details of an Amazon RDS DB subnet group.</p> <p>This data type is used as a response element in the <code>DescribeDBSubnetGroups</code> action.</p> */
	export interface DBSubnetGroup {
		DBSubnetGroupName?: string;
		DBSubnetGroupDescription?: string;
		VpcId?: string;
		SubnetGroupStatus?: string;
		Subnets?: Array<string>;
		DBSubnetGroupArn?: string;
		SupportedNetworkTypes?: Array<string>;
	}

	/** <p>Contains the details of an Amazon RDS DB subnet group.</p> <p>This data type is used as a response element in the <code>DescribeDBSubnetGroups</code> action.</p> */
	export interface DBSubnetGroupFormProperties {
		DBSubnetGroupName: FormControl<string | null | undefined>,
		DBSubnetGroupDescription: FormControl<string | null | undefined>,
		VpcId: FormControl<string | null | undefined>,
		SubnetGroupStatus: FormControl<string | null | undefined>,
		DBSubnetGroupArn: FormControl<string | null | undefined>,
	}
	export function CreateDBSubnetGroupFormGroup() {
		return new FormGroup<DBSubnetGroupFormProperties>({
			DBSubnetGroupName: new FormControl<string | null | undefined>(undefined),
			DBSubnetGroupDescription: new FormControl<string | null | undefined>(undefined),
			VpcId: new FormControl<string | null | undefined>(undefined),
			SubnetGroupStatus: new FormControl<string | null | undefined>(undefined),
			DBSubnetGroupArn: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** This data type is used as a response element in the <code>ModifyDBInstance</code> operation and contains changes that will be applied during the next maintenance window. */
	export interface PendingModifiedValues {
		DBInstanceClass?: string;
		AllocatedStorage?: number | null;
		MasterUserPassword?: string;
		Port?: number | null;
		BackupRetentionPeriod?: number | null;
		MultiAZ?: boolean | null;
		EngineVersion?: string;
		LicenseModel?: string;
		Iops?: number | null;
		DBInstanceIdentifier?: string;
		StorageType?: string;
		CACertificateIdentifier?: string;
		DBSubnetGroupName?: string;

		/** A list of the log types whose configuration is still pending. In other words, these log types are in the process of being activated or deactivated. */
		PendingCloudwatchLogsExports?: PendingCloudwatchLogsExports;
		ProcessorFeatures?: Array<string>;
		IAMDatabaseAuthenticationEnabled?: boolean | null;
		AutomationMode?: AutomationMode;
		ResumeFullAutomationModeTime?: Date;
		StorageThroughput?: number | null;
		Engine?: string;
	}

	/** This data type is used as a response element in the <code>ModifyDBInstance</code> operation and contains changes that will be applied during the next maintenance window. */
	export interface PendingModifiedValuesFormProperties {
		DBInstanceClass: FormControl<string | null | undefined>,
		AllocatedStorage: FormControl<number | null | undefined>,
		MasterUserPassword: FormControl<string | null | undefined>,
		Port: FormControl<number | null | undefined>,
		BackupRetentionPeriod: FormControl<number | null | undefined>,
		MultiAZ: FormControl<boolean | null | undefined>,
		EngineVersion: FormControl<string | null | undefined>,
		LicenseModel: FormControl<string | null | undefined>,
		Iops: FormControl<number | null | undefined>,
		DBInstanceIdentifier: FormControl<string | null | undefined>,
		StorageType: FormControl<string | null | undefined>,
		CACertificateIdentifier: FormControl<string | null | undefined>,
		DBSubnetGroupName: FormControl<string | null | undefined>,
		IAMDatabaseAuthenticationEnabled: FormControl<boolean | null | undefined>,
		AutomationMode: FormControl<AutomationMode | null | undefined>,
		ResumeFullAutomationModeTime: FormControl<Date | null | undefined>,
		StorageThroughput: FormControl<number | null | undefined>,
		Engine: FormControl<string | null | undefined>,
	}
	export function CreatePendingModifiedValuesFormGroup() {
		return new FormGroup<PendingModifiedValuesFormProperties>({
			DBInstanceClass: new FormControl<string | null | undefined>(undefined),
			AllocatedStorage: new FormControl<number | null | undefined>(undefined),
			MasterUserPassword: new FormControl<string | null | undefined>(undefined),
			Port: new FormControl<number | null | undefined>(undefined),
			BackupRetentionPeriod: new FormControl<number | null | undefined>(undefined),
			MultiAZ: new FormControl<boolean | null | undefined>(undefined),
			EngineVersion: new FormControl<string | null | undefined>(undefined),
			LicenseModel: new FormControl<string | null | undefined>(undefined),
			Iops: new FormControl<number | null | undefined>(undefined),
			DBInstanceIdentifier: new FormControl<string | null | undefined>(undefined),
			StorageType: new FormControl<string | null | undefined>(undefined),
			CACertificateIdentifier: new FormControl<string | null | undefined>(undefined),
			DBSubnetGroupName: new FormControl<string | null | undefined>(undefined),
			IAMDatabaseAuthenticationEnabled: new FormControl<boolean | null | undefined>(undefined),
			AutomationMode: new FormControl<AutomationMode | null | undefined>(undefined),
			ResumeFullAutomationModeTime: new FormControl<Date | null | undefined>(undefined),
			StorageThroughput: new FormControl<number | null | undefined>(undefined),
			Engine: new FormControl<string | null | undefined>(undefined),
		});

	}

	export enum AutomationMode { full = 0, 'all-paused' = 1 }

	export enum ReplicaMode { 'open-read-only' = 0, mounted = 1 }

	export enum ActivityStreamPolicyStatus { locked = 0, unlocked = 1, 'locking-policy' = 2, 'unlocking-policy' = 3 }


	/** <p>Returns the details of the DB instance’s server certificate.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/UsingWithRDS.SSL.html">Using SSL/TLS to encrypt a connection to a DB instance</a> in the <i>Amazon RDS User Guide</i> and <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/UsingWithRDS.SSL.html"> Using SSL/TLS to encrypt a connection to a DB cluster</a> in the <i>Amazon Aurora User Guide</i>.</p> */
	export interface CertificateDetails {
		CAIdentifier?: string;
		ValidTill?: Date;
	}

	/** <p>Returns the details of the DB instance’s server certificate.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/UsingWithRDS.SSL.html">Using SSL/TLS to encrypt a connection to a DB instance</a> in the <i>Amazon RDS User Guide</i> and <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/UsingWithRDS.SSL.html"> Using SSL/TLS to encrypt a connection to a DB cluster</a> in the <i>Amazon Aurora User Guide</i>.</p> */
	export interface CertificateDetailsFormProperties {
		CAIdentifier: FormControl<string | null | undefined>,
		ValidTill: FormControl<Date | null | undefined>,
	}
	export function CreateCertificateDetailsFormGroup() {
		return new FormGroup<CertificateDetailsFormProperties>({
			CAIdentifier: new FormControl<string | null | undefined>(undefined),
			ValidTill: new FormControl<Date | null | undefined>(undefined),
		});

	}


	/** <p>Contains the processor features of a DB instance class.</p> <p>To specify the number of CPU cores, use the <code>coreCount</code> feature name for the <code>Name</code> parameter. To specify the number of threads per core, use the <code>threadsPerCore</code> feature name for the <code>Name</code> parameter.</p> <p>You can set the processor features of the DB instance class for a DB instance when you call one of the following actions:</p> <ul> <li> <p> <code>CreateDBInstance</code> </p> </li> <li> <p> <code>ModifyDBInstance</code> </p> </li> <li> <p> <code>RestoreDBInstanceFromDBSnapshot</code> </p> </li> <li> <p> <code>RestoreDBInstanceFromS3</code> </p> </li> <li> <p> <code>RestoreDBInstanceToPointInTime</code> </p> </li> </ul> <p>You can view the valid processor values for a particular instance class by calling the <code>DescribeOrderableDBInstanceOptions</code> action and specifying the instance class for the <code>DBInstanceClass</code> parameter.</p> <p>In addition, you can use the following actions for DB instance class processor information:</p> <ul> <li> <p> <code>DescribeDBInstances</code> </p> </li> <li> <p> <code>DescribeDBSnapshots</code> </p> </li> <li> <p> <code>DescribeValidDBInstanceModifications</code> </p> </li> </ul> <p>If you call <code>DescribeDBInstances</code>, <code>ProcessorFeature</code> returns non-null values only if the following conditions are met:</p> <ul> <li> <p>You are accessing an Oracle DB instance.</p> </li> <li> <p>Your Oracle DB instance class supports configuring the number of CPU cores and threads per core.</p> </li> <li> <p>The current number CPU cores and threads is set to a non-default value.</p> </li> </ul> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.DBInstanceClass.html#USER_ConfigureProcessor">Configuring the Processor of the DB Instance Class</a> in the <i>Amazon RDS User Guide. </i> </p> */
	export interface ProcessorFeature {
		Name?: string;
		Value?: string;
	}

	/** <p>Contains the processor features of a DB instance class.</p> <p>To specify the number of CPU cores, use the <code>coreCount</code> feature name for the <code>Name</code> parameter. To specify the number of threads per core, use the <code>threadsPerCore</code> feature name for the <code>Name</code> parameter.</p> <p>You can set the processor features of the DB instance class for a DB instance when you call one of the following actions:</p> <ul> <li> <p> <code>CreateDBInstance</code> </p> </li> <li> <p> <code>ModifyDBInstance</code> </p> </li> <li> <p> <code>RestoreDBInstanceFromDBSnapshot</code> </p> </li> <li> <p> <code>RestoreDBInstanceFromS3</code> </p> </li> <li> <p> <code>RestoreDBInstanceToPointInTime</code> </p> </li> </ul> <p>You can view the valid processor values for a particular instance class by calling the <code>DescribeOrderableDBInstanceOptions</code> action and specifying the instance class for the <code>DBInstanceClass</code> parameter.</p> <p>In addition, you can use the following actions for DB instance class processor information:</p> <ul> <li> <p> <code>DescribeDBInstances</code> </p> </li> <li> <p> <code>DescribeDBSnapshots</code> </p> </li> <li> <p> <code>DescribeValidDBInstanceModifications</code> </p> </li> </ul> <p>If you call <code>DescribeDBInstances</code>, <code>ProcessorFeature</code> returns non-null values only if the following conditions are met:</p> <ul> <li> <p>You are accessing an Oracle DB instance.</p> </li> <li> <p>Your Oracle DB instance class supports configuring the number of CPU cores and threads per core.</p> </li> <li> <p>The current number CPU cores and threads is set to a non-default value.</p> </li> </ul> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.DBInstanceClass.html#USER_ConfigureProcessor">Configuring the Processor of the DB Instance Class</a> in the <i>Amazon RDS User Guide. </i> </p> */
	export interface ProcessorFeatureFormProperties {
		Name: FormControl<string | null | undefined>,
		Value: FormControl<string | null | undefined>,
	}
	export function CreateProcessorFeatureFormGroup() {
		return new FormGroup<ProcessorFeatureFormProperties>({
			Name: new FormControl<string | null | undefined>(undefined),
			Value: new FormControl<string | null | undefined>(undefined),
		});

	}

	export interface DBInstanceAlreadyExistsFault {
	}
	export interface DBInstanceAlreadyExistsFaultFormProperties {
	}
	export function CreateDBInstanceAlreadyExistsFaultFormGroup() {
		return new FormGroup<DBInstanceAlreadyExistsFaultFormProperties>({
		});

	}

	export interface InsufficientDBInstanceCapacityFault {
	}
	export interface InsufficientDBInstanceCapacityFaultFormProperties {
	}
	export function CreateInsufficientDBInstanceCapacityFaultFormGroup() {
		return new FormGroup<InsufficientDBInstanceCapacityFaultFormProperties>({
		});

	}

	export interface ProvisionedIopsNotAvailableInAZFault {
	}
	export interface ProvisionedIopsNotAvailableInAZFaultFormProperties {
	}
	export function CreateProvisionedIopsNotAvailableInAZFaultFormGroup() {
		return new FormGroup<ProvisionedIopsNotAvailableInAZFaultFormProperties>({
		});

	}

	export interface StorageTypeNotSupportedFault {
	}
	export interface StorageTypeNotSupportedFaultFormProperties {
	}
	export function CreateStorageTypeNotSupportedFaultFormGroup() {
		return new FormGroup<StorageTypeNotSupportedFaultFormProperties>({
		});

	}

	export interface AuthorizationNotFoundFault {
	}
	export interface AuthorizationNotFoundFaultFormProperties {
	}
	export function CreateAuthorizationNotFoundFaultFormGroup() {
		return new FormGroup<AuthorizationNotFoundFaultFormProperties>({
		});

	}

	export interface BackupPolicyNotFoundFault {
	}
	export interface BackupPolicyNotFoundFaultFormProperties {
	}
	export function CreateBackupPolicyNotFoundFaultFormGroup() {
		return new FormGroup<BackupPolicyNotFoundFaultFormProperties>({
		});

	}

	export interface NetworkTypeNotSupported {
	}
	export interface NetworkTypeNotSupportedFormProperties {
	}
	export function CreateNetworkTypeNotSupportedFormGroup() {
		return new FormGroup<NetworkTypeNotSupportedFormProperties>({
		});

	}

	export interface CertificateNotFoundFault {
	}
	export interface CertificateNotFoundFaultFormProperties {
	}
	export function CreateCertificateNotFoundFaultFormGroup() {
		return new FormGroup<CertificateNotFoundFaultFormProperties>({
		});

	}

	export interface CreateDBInstanceReadReplicaResult {

		/** <p>Contains the details of an Amazon RDS DB instance.</p> <p>This data type is used as a response element in the operations <code>CreateDBInstance</code>, <code>CreateDBInstanceReadReplica</code>, <code>DeleteDBInstance</code>, <code>DescribeDBInstances</code>, <code>ModifyDBInstance</code>, <code>PromoteReadReplica</code>, <code>RebootDBInstance</code>, <code>RestoreDBInstanceFromDBSnapshot</code>, <code>RestoreDBInstanceFromS3</code>, <code>RestoreDBInstanceToPointInTime</code>, <code>StartDBInstance</code>, and <code>StopDBInstance</code>.</p> */
		DBInstance?: DBInstance;
	}
	export interface CreateDBInstanceReadReplicaResultFormProperties {
	}
	export function CreateCreateDBInstanceReadReplicaResultFormGroup() {
		return new FormGroup<CreateDBInstanceReadReplicaResultFormProperties>({
		});

	}

	export interface DBSubnetGroupNotAllowedFault {
	}
	export interface DBSubnetGroupNotAllowedFaultFormProperties {
	}
	export function CreateDBSubnetGroupNotAllowedFaultFormGroup() {
		return new FormGroup<DBSubnetGroupNotAllowedFaultFormProperties>({
		});

	}

	export interface InvalidDBSubnetGroupFault {
	}
	export interface InvalidDBSubnetGroupFaultFormProperties {
	}
	export function CreateInvalidDBSubnetGroupFaultFormGroup() {
		return new FormGroup<InvalidDBSubnetGroupFaultFormProperties>({
		});

	}

	export interface CreateDBParameterGroupResult {

		/** <p>Contains the details of an Amazon RDS DB parameter group.</p> <p>This data type is used as a response element in the <code>DescribeDBParameterGroups</code> action.</p> */
		DBParameterGroup?: DBParameterGroup;
	}
	export interface CreateDBParameterGroupResultFormProperties {
	}
	export function CreateCreateDBParameterGroupResultFormGroup() {
		return new FormGroup<CreateDBParameterGroupResultFormProperties>({
		});

	}

	export interface CreateDBProxyResponse {
		DBProxy?: DBProxy;
	}
	export interface CreateDBProxyResponseFormProperties {
	}
	export function CreateCreateDBProxyResponseFormGroup() {
		return new FormGroup<CreateDBProxyResponseFormProperties>({
		});

	}


	/** <p>The data structure representing a proxy managed by the RDS Proxy.</p> <p>This data type is used as a response element in the <code>DescribeDBProxies</code> action.</p> */
	export interface DBProxy {
		DBProxyName?: string;
		DBProxyArn?: string;
		Status?: DBProxyStatus;
		EngineFamily?: string;
		VpcId?: string;
		VpcSecurityGroupIds?: Array<string>;
		VpcSubnetIds?: Array<string>;
		Auth?: Array<UserAuthConfigInfo>;
		RoleArn?: string;
		Endpoint?: string;
		RequireTLS?: boolean | null;
		IdleClientTimeout?: number | null;
		DebugLogging?: boolean | null;
		CreatedDate?: Date;
		UpdatedDate?: Date;
	}

	/** <p>The data structure representing a proxy managed by the RDS Proxy.</p> <p>This data type is used as a response element in the <code>DescribeDBProxies</code> action.</p> */
	export interface DBProxyFormProperties {
		DBProxyName: FormControl<string | null | undefined>,
		DBProxyArn: FormControl<string | null | undefined>,
		Status: FormControl<DBProxyStatus | null | undefined>,
		EngineFamily: FormControl<string | null | undefined>,
		VpcId: FormControl<string | null | undefined>,
		RoleArn: FormControl<string | null | undefined>,
		Endpoint: FormControl<string | null | undefined>,
		RequireTLS: FormControl<boolean | null | undefined>,
		IdleClientTimeout: FormControl<number | null | undefined>,
		DebugLogging: FormControl<boolean | null | undefined>,
		CreatedDate: FormControl<Date | null | undefined>,
		UpdatedDate: FormControl<Date | null | undefined>,
	}
	export function CreateDBProxyFormGroup() {
		return new FormGroup<DBProxyFormProperties>({
			DBProxyName: new FormControl<string | null | undefined>(undefined),
			DBProxyArn: new FormControl<string | null | undefined>(undefined),
			Status: new FormControl<DBProxyStatus | null | undefined>(undefined),
			EngineFamily: new FormControl<string | null | undefined>(undefined),
			VpcId: new FormControl<string | null | undefined>(undefined),
			RoleArn: new FormControl<string | null | undefined>(undefined),
			Endpoint: new FormControl<string | null | undefined>(undefined),
			RequireTLS: new FormControl<boolean | null | undefined>(undefined),
			IdleClientTimeout: new FormControl<number | null | undefined>(undefined),
			DebugLogging: new FormControl<boolean | null | undefined>(undefined),
			CreatedDate: new FormControl<Date | null | undefined>(undefined),
			UpdatedDate: new FormControl<Date | null | undefined>(undefined),
		});

	}

	export enum DBProxyStatus { available = 0, modifying = 1, 'incompatible-network' = 2, 'insufficient-resource-limits' = 3, creating = 4, deleting = 5, suspended = 6, suspending = 7, reactivating = 8 }


	/** Returns the details of authentication used by a proxy to log in as a specific database user. */
	export interface UserAuthConfigInfo {
		Description?: string;
		UserName?: string;
		AuthScheme?: AuthScheme;
		SecretArn?: string;
		IAMAuth?: IAMAuthMode;
		ClientPasswordAuthType?: ClientPasswordAuthType;
	}

	/** Returns the details of authentication used by a proxy to log in as a specific database user. */
	export interface UserAuthConfigInfoFormProperties {
		Description: FormControl<string | null | undefined>,
		UserName: FormControl<string | null | undefined>,
		AuthScheme: FormControl<AuthScheme | null | undefined>,
		SecretArn: FormControl<string | null | undefined>,
		IAMAuth: FormControl<IAMAuthMode | null | undefined>,
		ClientPasswordAuthType: FormControl<ClientPasswordAuthType | null | undefined>,
	}
	export function CreateUserAuthConfigInfoFormGroup() {
		return new FormGroup<UserAuthConfigInfoFormProperties>({
			Description: new FormControl<string | null | undefined>(undefined),
			UserName: new FormControl<string | null | undefined>(undefined),
			AuthScheme: new FormControl<AuthScheme | null | undefined>(undefined),
			SecretArn: new FormControl<string | null | undefined>(undefined),
			IAMAuth: new FormControl<IAMAuthMode | null | undefined>(undefined),
			ClientPasswordAuthType: new FormControl<ClientPasswordAuthType | null | undefined>(undefined),
		});

	}

	export enum AuthScheme { SECRETS = 0 }

	export enum IAMAuthMode { DISABLED = 0, REQUIRED = 1, ENABLED = 2 }

	export enum ClientPasswordAuthType { MYSQL_NATIVE_PASSWORD = 0, POSTGRES_SCRAM_SHA_256 = 1, POSTGRES_MD5 = 2, SQL_SERVER_AUTHENTICATION = 3 }


	/** Specifies the details of authentication used by a proxy to log in as a specific database user. */
	export interface UserAuthConfig {
		Description?: string;
		UserName?: string;
		AuthScheme?: AuthScheme;
		SecretArn?: string;
		IAMAuth?: IAMAuthMode;
		ClientPasswordAuthType?: ClientPasswordAuthType;
	}

	/** Specifies the details of authentication used by a proxy to log in as a specific database user. */
	export interface UserAuthConfigFormProperties {
		Description: FormControl<string | null | undefined>,
		UserName: FormControl<string | null | undefined>,
		AuthScheme: FormControl<AuthScheme | null | undefined>,
		SecretArn: FormControl<string | null | undefined>,
		IAMAuth: FormControl<IAMAuthMode | null | undefined>,
		ClientPasswordAuthType: FormControl<ClientPasswordAuthType | null | undefined>,
	}
	export function CreateUserAuthConfigFormGroup() {
		return new FormGroup<UserAuthConfigFormProperties>({
			Description: new FormControl<string | null | undefined>(undefined),
			UserName: new FormControl<string | null | undefined>(undefined),
			AuthScheme: new FormControl<AuthScheme | null | undefined>(undefined),
			SecretArn: new FormControl<string | null | undefined>(undefined),
			IAMAuth: new FormControl<IAMAuthMode | null | undefined>(undefined),
			ClientPasswordAuthType: new FormControl<ClientPasswordAuthType | null | undefined>(undefined),
		});

	}

	export interface DBProxyAlreadyExistsFault {
	}
	export interface DBProxyAlreadyExistsFaultFormProperties {
	}
	export function CreateDBProxyAlreadyExistsFaultFormGroup() {
		return new FormGroup<DBProxyAlreadyExistsFaultFormProperties>({
		});

	}

	export interface DBProxyQuotaExceededFault {
	}
	export interface DBProxyQuotaExceededFaultFormProperties {
	}
	export function CreateDBProxyQuotaExceededFaultFormGroup() {
		return new FormGroup<DBProxyQuotaExceededFaultFormProperties>({
		});

	}

	export interface CreateDBProxyEndpointResponse {
		DBProxyEndpoint?: DBProxyEndpoint;
	}
	export interface CreateDBProxyEndpointResponseFormProperties {
	}
	export function CreateCreateDBProxyEndpointResponseFormGroup() {
		return new FormGroup<CreateDBProxyEndpointResponseFormProperties>({
		});

	}


	/** <p>The data structure representing an endpoint associated with a DB proxy. RDS automatically creates one endpoint for each DB proxy. For Aurora DB clusters, you can associate additional endpoints with the same DB proxy. These endpoints can be read/write or read-only. They can also reside in different VPCs than the associated DB proxy.</p> <p>This data type is used as a response element in the <code>DescribeDBProxyEndpoints</code> operation.</p> */
	export interface DBProxyEndpoint {
		DBProxyEndpointName?: string;
		DBProxyEndpointArn?: string;
		DBProxyName?: string;
		Status?: DBProxyEndpointStatus;
		VpcId?: string;
		VpcSecurityGroupIds?: Array<string>;
		VpcSubnetIds?: Array<string>;
		Endpoint?: string;
		CreatedDate?: Date;
		TargetRole?: DBProxyEndpointTargetRole;
		IsDefault?: boolean | null;
	}

	/** <p>The data structure representing an endpoint associated with a DB proxy. RDS automatically creates one endpoint for each DB proxy. For Aurora DB clusters, you can associate additional endpoints with the same DB proxy. These endpoints can be read/write or read-only. They can also reside in different VPCs than the associated DB proxy.</p> <p>This data type is used as a response element in the <code>DescribeDBProxyEndpoints</code> operation.</p> */
	export interface DBProxyEndpointFormProperties {
		DBProxyEndpointName: FormControl<string | null | undefined>,
		DBProxyEndpointArn: FormControl<string | null | undefined>,
		DBProxyName: FormControl<string | null | undefined>,
		Status: FormControl<DBProxyEndpointStatus | null | undefined>,
		VpcId: FormControl<string | null | undefined>,
		Endpoint: FormControl<string | null | undefined>,
		CreatedDate: FormControl<Date | null | undefined>,
		TargetRole: FormControl<DBProxyEndpointTargetRole | null | undefined>,
		IsDefault: FormControl<boolean | null | undefined>,
	}
	export function CreateDBProxyEndpointFormGroup() {
		return new FormGroup<DBProxyEndpointFormProperties>({
			DBProxyEndpointName: new FormControl<string | null | undefined>(undefined),
			DBProxyEndpointArn: new FormControl<string | null | undefined>(undefined),
			DBProxyName: new FormControl<string | null | undefined>(undefined),
			Status: new FormControl<DBProxyEndpointStatus | null | undefined>(undefined),
			VpcId: new FormControl<string | null | undefined>(undefined),
			Endpoint: new FormControl<string | null | undefined>(undefined),
			CreatedDate: new FormControl<Date | null | undefined>(undefined),
			TargetRole: new FormControl<DBProxyEndpointTargetRole | null | undefined>(undefined),
			IsDefault: new FormControl<boolean | null | undefined>(undefined),
		});

	}

	export enum DBProxyEndpointStatus { available = 0, modifying = 1, 'incompatible-network' = 2, 'insufficient-resource-limits' = 3, creating = 4, deleting = 5 }

	export enum DBProxyEndpointTargetRole { READ_WRITE = 0, READ_ONLY = 1 }

	export interface DBProxyEndpointAlreadyExistsFault {
	}
	export interface DBProxyEndpointAlreadyExistsFaultFormProperties {
	}
	export function CreateDBProxyEndpointAlreadyExistsFaultFormGroup() {
		return new FormGroup<DBProxyEndpointAlreadyExistsFaultFormProperties>({
		});

	}

	export interface DBProxyEndpointQuotaExceededFault {
	}
	export interface DBProxyEndpointQuotaExceededFaultFormProperties {
	}
	export function CreateDBProxyEndpointQuotaExceededFaultFormGroup() {
		return new FormGroup<DBProxyEndpointQuotaExceededFaultFormProperties>({
		});

	}

	export interface InvalidDBProxyStateFault {
	}
	export interface InvalidDBProxyStateFaultFormProperties {
	}
	export function CreateInvalidDBProxyStateFaultFormGroup() {
		return new FormGroup<InvalidDBProxyStateFaultFormProperties>({
		});

	}

	export interface CreateDBSecurityGroupResult {

		/** <p>Contains the details for an Amazon RDS DB security group.</p> <p>This data type is used as a response element in the <code>DescribeDBSecurityGroups</code> action.</p> */
		DBSecurityGroup?: DBSecurityGroup;
	}
	export interface CreateDBSecurityGroupResultFormProperties {
	}
	export function CreateCreateDBSecurityGroupResultFormGroup() {
		return new FormGroup<CreateDBSecurityGroupResultFormProperties>({
		});

	}

	export interface DBSecurityGroupAlreadyExistsFault {
	}
	export interface DBSecurityGroupAlreadyExistsFaultFormProperties {
	}
	export function CreateDBSecurityGroupAlreadyExistsFaultFormGroup() {
		return new FormGroup<DBSecurityGroupAlreadyExistsFaultFormProperties>({
		});

	}

	export interface DBSecurityGroupQuotaExceededFault {
	}
	export interface DBSecurityGroupQuotaExceededFaultFormProperties {
	}
	export function CreateDBSecurityGroupQuotaExceededFaultFormGroup() {
		return new FormGroup<DBSecurityGroupQuotaExceededFaultFormProperties>({
		});

	}

	export interface DBSecurityGroupNotSupportedFault {
	}
	export interface DBSecurityGroupNotSupportedFaultFormProperties {
	}
	export function CreateDBSecurityGroupNotSupportedFaultFormGroup() {
		return new FormGroup<DBSecurityGroupNotSupportedFaultFormProperties>({
		});

	}

	export interface CreateDBSnapshotResult {

		/** <p>Contains the details of an Amazon RDS DB snapshot.</p> <p>This data type is used as a response element in the <code>DescribeDBSnapshots</code> action.</p> */
		DBSnapshot?: DBSnapshot;
	}
	export interface CreateDBSnapshotResultFormProperties {
	}
	export function CreateCreateDBSnapshotResultFormGroup() {
		return new FormGroup<CreateDBSnapshotResultFormProperties>({
		});

	}

	export interface CreateDBSubnetGroupResult {

		/** <p>Contains the details of an Amazon RDS DB subnet group.</p> <p>This data type is used as a response element in the <code>DescribeDBSubnetGroups</code> action.</p> */
		DBSubnetGroup?: DBSubnetGroup;
	}
	export interface CreateDBSubnetGroupResultFormProperties {
	}
	export function CreateCreateDBSubnetGroupResultFormGroup() {
		return new FormGroup<CreateDBSubnetGroupResultFormProperties>({
		});

	}

	export interface DBSubnetGroupAlreadyExistsFault {
	}
	export interface DBSubnetGroupAlreadyExistsFaultFormProperties {
	}
	export function CreateDBSubnetGroupAlreadyExistsFaultFormGroup() {
		return new FormGroup<DBSubnetGroupAlreadyExistsFaultFormProperties>({
		});

	}

	export interface DBSubnetGroupQuotaExceededFault {
	}
	export interface DBSubnetGroupQuotaExceededFaultFormProperties {
	}
	export function CreateDBSubnetGroupQuotaExceededFaultFormGroup() {
		return new FormGroup<DBSubnetGroupQuotaExceededFaultFormProperties>({
		});

	}

	export interface DBSubnetQuotaExceededFault {
	}
	export interface DBSubnetQuotaExceededFaultFormProperties {
	}
	export function CreateDBSubnetQuotaExceededFaultFormGroup() {
		return new FormGroup<DBSubnetQuotaExceededFaultFormProperties>({
		});

	}

	export interface CreateEventSubscriptionResult {

		/** Contains the results of a successful invocation of the <code>DescribeEventSubscriptions</code> action. */
		EventSubscription?: EventSubscription;
	}
	export interface CreateEventSubscriptionResultFormProperties {
	}
	export function CreateCreateEventSubscriptionResultFormGroup() {
		return new FormGroup<CreateEventSubscriptionResultFormProperties>({
		});

	}

	export interface EventSubscriptionQuotaExceededFault {
	}
	export interface EventSubscriptionQuotaExceededFaultFormProperties {
	}
	export function CreateEventSubscriptionQuotaExceededFaultFormGroup() {
		return new FormGroup<EventSubscriptionQuotaExceededFaultFormProperties>({
		});

	}

	export interface SubscriptionAlreadyExistFault {
	}
	export interface SubscriptionAlreadyExistFaultFormProperties {
	}
	export function CreateSubscriptionAlreadyExistFaultFormGroup() {
		return new FormGroup<SubscriptionAlreadyExistFaultFormProperties>({
		});

	}

	export interface SNSInvalidTopicFault {
	}
	export interface SNSInvalidTopicFaultFormProperties {
	}
	export function CreateSNSInvalidTopicFaultFormGroup() {
		return new FormGroup<SNSInvalidTopicFaultFormProperties>({
		});

	}

	export interface SNSNoAuthorizationFault {
	}
	export interface SNSNoAuthorizationFaultFormProperties {
	}
	export function CreateSNSNoAuthorizationFaultFormGroup() {
		return new FormGroup<SNSNoAuthorizationFaultFormProperties>({
		});

	}

	export interface SNSTopicArnNotFoundFault {
	}
	export interface SNSTopicArnNotFoundFaultFormProperties {
	}
	export function CreateSNSTopicArnNotFoundFaultFormGroup() {
		return new FormGroup<SNSTopicArnNotFoundFaultFormProperties>({
		});

	}

	export interface SubscriptionCategoryNotFoundFault {
	}
	export interface SubscriptionCategoryNotFoundFaultFormProperties {
	}
	export function CreateSubscriptionCategoryNotFoundFaultFormGroup() {
		return new FormGroup<SubscriptionCategoryNotFoundFaultFormProperties>({
		});

	}

	export interface CreateGlobalClusterResult {

		/** A data type representing an Aurora global database. */
		GlobalCluster?: GlobalCluster;
	}
	export interface CreateGlobalClusterResultFormProperties {
	}
	export function CreateCreateGlobalClusterResultFormGroup() {
		return new FormGroup<CreateGlobalClusterResultFormProperties>({
		});

	}


	/** A data type representing an Aurora global database. */
	export interface GlobalCluster {
		GlobalClusterIdentifier?: string;
		GlobalClusterResourceId?: string;
		GlobalClusterArn?: string;
		Status?: string;
		Engine?: string;
		EngineVersion?: string;
		DatabaseName?: string;
		StorageEncrypted?: boolean | null;
		DeletionProtection?: boolean | null;
		GlobalClusterMembers?: Array<string>;
		FailoverState?: FailoverState;
	}

	/** A data type representing an Aurora global database. */
	export interface GlobalClusterFormProperties {
		GlobalClusterIdentifier: FormControl<string | null | undefined>,
		GlobalClusterResourceId: FormControl<string | null | undefined>,
		GlobalClusterArn: FormControl<string | null | undefined>,
		Status: FormControl<string | null | undefined>,
		Engine: FormControl<string | null | undefined>,
		EngineVersion: FormControl<string | null | undefined>,
		DatabaseName: FormControl<string | null | undefined>,
		StorageEncrypted: FormControl<boolean | null | undefined>,
		DeletionProtection: FormControl<boolean | null | undefined>,
	}
	export function CreateGlobalClusterFormGroup() {
		return new FormGroup<GlobalClusterFormProperties>({
			GlobalClusterIdentifier: new FormControl<string | null | undefined>(undefined),
			GlobalClusterResourceId: new FormControl<string | null | undefined>(undefined),
			GlobalClusterArn: new FormControl<string | null | undefined>(undefined),
			Status: new FormControl<string | null | undefined>(undefined),
			Engine: new FormControl<string | null | undefined>(undefined),
			EngineVersion: new FormControl<string | null | undefined>(undefined),
			DatabaseName: new FormControl<string | null | undefined>(undefined),
			StorageEncrypted: new FormControl<boolean | null | undefined>(undefined),
			DeletionProtection: new FormControl<boolean | null | undefined>(undefined),
		});

	}


	/** Contains the state of scheduled or in-process failover operations on an Aurora global database (<a>GlobalCluster</a>). This Data type is empty unless a failover operation is scheduled or is currently underway on the Aurora global database. */
	export interface FailoverState {
		Status?: FailoverStatus;
		FromDbClusterArn?: string;
		ToDbClusterArn?: string;
	}

	/** Contains the state of scheduled or in-process failover operations on an Aurora global database (<a>GlobalCluster</a>). This Data type is empty unless a failover operation is scheduled or is currently underway on the Aurora global database. */
	export interface FailoverStateFormProperties {
		Status: FormControl<FailoverStatus | null | undefined>,
		FromDbClusterArn: FormControl<string | null | undefined>,
		ToDbClusterArn: FormControl<string | null | undefined>,
	}
	export function CreateFailoverStateFormGroup() {
		return new FormGroup<FailoverStateFormProperties>({
			Status: new FormControl<FailoverStatus | null | undefined>(undefined),
			FromDbClusterArn: new FormControl<string | null | undefined>(undefined),
			ToDbClusterArn: new FormControl<string | null | undefined>(undefined),
		});

	}

	export enum FailoverStatus { pending = 0, 'failing-over' = 1, cancelling = 2 }

	export interface GlobalClusterAlreadyExistsFault {
	}
	export interface GlobalClusterAlreadyExistsFaultFormProperties {
	}
	export function CreateGlobalClusterAlreadyExistsFaultFormGroup() {
		return new FormGroup<GlobalClusterAlreadyExistsFaultFormProperties>({
		});

	}

	export interface GlobalClusterQuotaExceededFault {
	}
	export interface GlobalClusterQuotaExceededFaultFormProperties {
	}
	export function CreateGlobalClusterQuotaExceededFaultFormGroup() {
		return new FormGroup<GlobalClusterQuotaExceededFaultFormProperties>({
		});

	}

	export interface CreateOptionGroupResult {

		/** <p/> */
		OptionGroup?: OptionGroup;
	}
	export interface CreateOptionGroupResultFormProperties {
	}
	export function CreateCreateOptionGroupResultFormGroup() {
		return new FormGroup<CreateOptionGroupResultFormProperties>({
		});

	}

	export interface DeleteBlueGreenDeploymentResponse {

		/** <p>Details about a blue/green deployment.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/blue-green-deployments.html">Using Amazon RDS Blue/Green Deployments for database updates</a> in the <i>Amazon RDS User Guide</i> and <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/blue-green-deployments.html">Using Amazon RDS Blue/Green Deployments for database updates</a> in the <i>Amazon Aurora User Guide</i>.</p> */
		BlueGreenDeployment?: BlueGreenDeployment;
	}
	export interface DeleteBlueGreenDeploymentResponseFormProperties {
	}
	export function CreateDeleteBlueGreenDeploymentResponseFormGroup() {
		return new FormGroup<DeleteBlueGreenDeploymentResponseFormProperties>({
		});

	}

	export interface InvalidBlueGreenDeploymentStateFault {
	}
	export interface InvalidBlueGreenDeploymentStateFaultFormProperties {
	}
	export function CreateInvalidBlueGreenDeploymentStateFaultFormGroup() {
		return new FormGroup<InvalidBlueGreenDeploymentStateFaultFormProperties>({
		});

	}

	export interface CustomDBEngineVersionNotFoundFault {
	}
	export interface CustomDBEngineVersionNotFoundFaultFormProperties {
	}
	export function CreateCustomDBEngineVersionNotFoundFaultFormGroup() {
		return new FormGroup<CustomDBEngineVersionNotFoundFaultFormProperties>({
		});

	}

	export interface InvalidCustomDBEngineVersionStateFault {
	}
	export interface InvalidCustomDBEngineVersionStateFaultFormProperties {
	}
	export function CreateInvalidCustomDBEngineVersionStateFaultFormGroup() {
		return new FormGroup<InvalidCustomDBEngineVersionStateFaultFormProperties>({
		});

	}

	export interface DeleteDBClusterResult {

		/** <p>Contains the details of an Amazon Aurora DB cluster or Multi-AZ DB cluster.</p> <p>For an Amazon Aurora DB cluster, this data type is used as a response element in the operations <code>CreateDBCluster</code>, <code>DeleteDBCluster</code>, <code>DescribeDBClusters</code>, <code>FailoverDBCluster</code>, <code>ModifyDBCluster</code>, <code>PromoteReadReplicaDBCluster</code>, <code>RestoreDBClusterFromS3</code>, <code>RestoreDBClusterFromSnapshot</code>, <code>RestoreDBClusterToPointInTime</code>, <code>StartDBCluster</code>, and <code>StopDBCluster</code>.</p> <p>For a Multi-AZ DB cluster, this data type is used as a response element in the operations <code>CreateDBCluster</code>, <code>DeleteDBCluster</code>, <code>DescribeDBClusters</code>, <code>FailoverDBCluster</code>, <code>ModifyDBCluster</code>, <code>RebootDBCluster</code>, <code>RestoreDBClusterFromSnapshot</code>, and <code>RestoreDBClusterToPointInTime</code>.</p> <p>For more information on Amazon Aurora DB clusters, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/CHAP_AuroraOverview.html"> What is Amazon Aurora?</a> in the <i>Amazon Aurora User Guide.</i> </p> <p>For more information on Multi-AZ DB clusters, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/multi-az-db-clusters-concepts.html"> Multi-AZ deployments with two readable standby DB instances</a> in the <i>Amazon RDS User Guide.</i> </p> */
		DBCluster?: DBCluster;
	}
	export interface DeleteDBClusterResultFormProperties {
	}
	export function CreateDeleteDBClusterResultFormGroup() {
		return new FormGroup<DeleteDBClusterResultFormProperties>({
		});

	}

	export interface DBClusterAutomatedBackupQuotaExceededFault {
	}
	export interface DBClusterAutomatedBackupQuotaExceededFaultFormProperties {
	}
	export function CreateDBClusterAutomatedBackupQuotaExceededFaultFormGroup() {
		return new FormGroup<DBClusterAutomatedBackupQuotaExceededFaultFormProperties>({
		});

	}

	export interface DeleteDBClusterAutomatedBackupResult {

		/** An automated backup of a DB cluster. It consists of system backups, transaction logs, and the database cluster properties that existed at the time you deleted the source cluster. */
		DBClusterAutomatedBackup?: DBClusterAutomatedBackup;
	}
	export interface DeleteDBClusterAutomatedBackupResultFormProperties {
	}
	export function CreateDeleteDBClusterAutomatedBackupResultFormGroup() {
		return new FormGroup<DeleteDBClusterAutomatedBackupResultFormProperties>({
		});

	}


	/** An automated backup of a DB cluster. It consists of system backups, transaction logs, and the database cluster properties that existed at the time you deleted the source cluster. */
	export interface DBClusterAutomatedBackup {
		Engine?: string;
		VpcId?: string;
		DBClusterAutomatedBackupsArn?: string;
		DBClusterIdentifier?: string;

		/** Earliest and latest time an instance can be restored to: */
		RestoreWindow?: RestoreWindow;
		MasterUsername?: string;
		DbClusterResourceId?: string;
		Region?: string;
		LicenseModel?: string;
		Status?: string;
		IAMDatabaseAuthenticationEnabled?: boolean | null;
		ClusterCreateTime?: Date;
		StorageEncrypted?: boolean | null;
		AllocatedStorage?: number | null;
		EngineVersion?: string;
		DBClusterArn?: string;
		BackupRetentionPeriod?: number | null;
		EngineMode?: string;
		AvailabilityZones?: Array<string>;
		Port?: number | null;
		KmsKeyId?: string;
		StorageType?: string;
		Iops?: number | null;
	}

	/** An automated backup of a DB cluster. It consists of system backups, transaction logs, and the database cluster properties that existed at the time you deleted the source cluster. */
	export interface DBClusterAutomatedBackupFormProperties {
		Engine: FormControl<string | null | undefined>,
		VpcId: FormControl<string | null | undefined>,
		DBClusterAutomatedBackupsArn: FormControl<string | null | undefined>,
		DBClusterIdentifier: FormControl<string | null | undefined>,
		MasterUsername: FormControl<string | null | undefined>,
		DbClusterResourceId: FormControl<string | null | undefined>,
		Region: FormControl<string | null | undefined>,
		LicenseModel: FormControl<string | null | undefined>,
		Status: FormControl<string | null | undefined>,
		IAMDatabaseAuthenticationEnabled: FormControl<boolean | null | undefined>,
		ClusterCreateTime: FormControl<Date | null | undefined>,
		StorageEncrypted: FormControl<boolean | null | undefined>,
		AllocatedStorage: FormControl<number | null | undefined>,
		EngineVersion: FormControl<string | null | undefined>,
		DBClusterArn: FormControl<string | null | undefined>,
		BackupRetentionPeriod: FormControl<number | null | undefined>,
		EngineMode: FormControl<string | null | undefined>,
		Port: FormControl<number | null | undefined>,
		KmsKeyId: FormControl<string | null | undefined>,
		StorageType: FormControl<string | null | undefined>,
		Iops: FormControl<number | null | undefined>,
	}
	export function CreateDBClusterAutomatedBackupFormGroup() {
		return new FormGroup<DBClusterAutomatedBackupFormProperties>({
			Engine: new FormControl<string | null | undefined>(undefined),
			VpcId: new FormControl<string | null | undefined>(undefined),
			DBClusterAutomatedBackupsArn: new FormControl<string | null | undefined>(undefined),
			DBClusterIdentifier: new FormControl<string | null | undefined>(undefined),
			MasterUsername: new FormControl<string | null | undefined>(undefined),
			DbClusterResourceId: new FormControl<string | null | undefined>(undefined),
			Region: new FormControl<string | null | undefined>(undefined),
			LicenseModel: new FormControl<string | null | undefined>(undefined),
			Status: new FormControl<string | null | undefined>(undefined),
			IAMDatabaseAuthenticationEnabled: new FormControl<boolean | null | undefined>(undefined),
			ClusterCreateTime: new FormControl<Date | null | undefined>(undefined),
			StorageEncrypted: new FormControl<boolean | null | undefined>(undefined),
			AllocatedStorage: new FormControl<number | null | undefined>(undefined),
			EngineVersion: new FormControl<string | null | undefined>(undefined),
			DBClusterArn: new FormControl<string | null | undefined>(undefined),
			BackupRetentionPeriod: new FormControl<number | null | undefined>(undefined),
			EngineMode: new FormControl<string | null | undefined>(undefined),
			Port: new FormControl<number | null | undefined>(undefined),
			KmsKeyId: new FormControl<string | null | undefined>(undefined),
			StorageType: new FormControl<string | null | undefined>(undefined),
			Iops: new FormControl<number | null | undefined>(undefined),
		});

	}


	/** Earliest and latest time an instance can be restored to: */
	export interface RestoreWindow {
		EarliestTime?: Date;
		LatestTime?: Date;
	}

	/** Earliest and latest time an instance can be restored to: */
	export interface RestoreWindowFormProperties {
		EarliestTime: FormControl<Date | null | undefined>,
		LatestTime: FormControl<Date | null | undefined>,
	}
	export function CreateRestoreWindowFormGroup() {
		return new FormGroup<RestoreWindowFormProperties>({
			EarliestTime: new FormControl<Date | null | undefined>(undefined),
			LatestTime: new FormControl<Date | null | undefined>(undefined),
		});

	}

	export interface InvalidDBClusterAutomatedBackupStateFault {
	}
	export interface InvalidDBClusterAutomatedBackupStateFaultFormProperties {
	}
	export function CreateInvalidDBClusterAutomatedBackupStateFaultFormGroup() {
		return new FormGroup<InvalidDBClusterAutomatedBackupStateFaultFormProperties>({
		});

	}

	export interface DBClusterAutomatedBackupNotFoundFault {
	}
	export interface DBClusterAutomatedBackupNotFoundFaultFormProperties {
	}
	export function CreateDBClusterAutomatedBackupNotFoundFaultFormGroup() {
		return new FormGroup<DBClusterAutomatedBackupNotFoundFaultFormProperties>({
		});

	}

	export interface InvalidDBClusterEndpointStateFault {
	}
	export interface InvalidDBClusterEndpointStateFaultFormProperties {
	}
	export function CreateInvalidDBClusterEndpointStateFaultFormGroup() {
		return new FormGroup<InvalidDBClusterEndpointStateFaultFormProperties>({
		});

	}

	export interface DBClusterEndpointNotFoundFault {
	}
	export interface DBClusterEndpointNotFoundFaultFormProperties {
	}
	export function CreateDBClusterEndpointNotFoundFaultFormGroup() {
		return new FormGroup<DBClusterEndpointNotFoundFaultFormProperties>({
		});

	}

	export interface InvalidDBParameterGroupStateFault {
	}
	export interface InvalidDBParameterGroupStateFaultFormProperties {
	}
	export function CreateInvalidDBParameterGroupStateFaultFormGroup() {
		return new FormGroup<InvalidDBParameterGroupStateFaultFormProperties>({
		});

	}

	export interface DeleteDBClusterSnapshotResult {

		/** <p>Contains the details for an Amazon RDS DB cluster snapshot</p> <p>This data type is used as a response element in the <code>DescribeDBClusterSnapshots</code> action.</p> */
		DBClusterSnapshot?: DBClusterSnapshot;
	}
	export interface DeleteDBClusterSnapshotResultFormProperties {
	}
	export function CreateDeleteDBClusterSnapshotResultFormGroup() {
		return new FormGroup<DeleteDBClusterSnapshotResultFormProperties>({
		});

	}

	export interface DeleteDBInstanceResult {

		/** <p>Contains the details of an Amazon RDS DB instance.</p> <p>This data type is used as a response element in the operations <code>CreateDBInstance</code>, <code>CreateDBInstanceReadReplica</code>, <code>DeleteDBInstance</code>, <code>DescribeDBInstances</code>, <code>ModifyDBInstance</code>, <code>PromoteReadReplica</code>, <code>RebootDBInstance</code>, <code>RestoreDBInstanceFromDBSnapshot</code>, <code>RestoreDBInstanceFromS3</code>, <code>RestoreDBInstanceToPointInTime</code>, <code>StartDBInstance</code>, and <code>StopDBInstance</code>.</p> */
		DBInstance?: DBInstance;
	}
	export interface DeleteDBInstanceResultFormProperties {
	}
	export function CreateDeleteDBInstanceResultFormGroup() {
		return new FormGroup<DeleteDBInstanceResultFormProperties>({
		});

	}

	export interface DBInstanceAutomatedBackupQuotaExceededFault {
	}
	export interface DBInstanceAutomatedBackupQuotaExceededFaultFormProperties {
	}
	export function CreateDBInstanceAutomatedBackupQuotaExceededFaultFormGroup() {
		return new FormGroup<DBInstanceAutomatedBackupQuotaExceededFaultFormProperties>({
		});

	}

	export interface DeleteDBInstanceAutomatedBackupResult {

		/** An automated backup of a DB instance. It consists of system backups, transaction logs, and the database instance properties that existed at the time you deleted the source instance. */
		DBInstanceAutomatedBackup?: DBInstanceAutomatedBackup;
	}
	export interface DeleteDBInstanceAutomatedBackupResultFormProperties {
	}
	export function CreateDeleteDBInstanceAutomatedBackupResultFormGroup() {
		return new FormGroup<DeleteDBInstanceAutomatedBackupResultFormProperties>({
		});

	}


	/** An automated backup of a DB instance. It consists of system backups, transaction logs, and the database instance properties that existed at the time you deleted the source instance. */
	export interface DBInstanceAutomatedBackup {
		DBInstanceArn?: string;
		DbiResourceId?: string;
		Region?: string;
		DBInstanceIdentifier?: string;
		RestoreWindow?: RestoreWindow;
		AllocatedStorage?: number | null;
		Status?: string;
		Port?: number | null;
		AvailabilityZone?: string;
		VpcId?: string;
		InstanceCreateTime?: Date;
		MasterUsername?: string;
		Engine?: string;
		EngineVersion?: string;
		LicenseModel?: string;
		Iops?: number | null;
		OptionGroupName?: string;
		TdeCredentialArn?: string;
		Encrypted?: boolean | null;
		StorageType?: string;
		KmsKeyId?: string;
		Timezone?: string;
		IAMDatabaseAuthenticationEnabled?: boolean | null;
		BackupRetentionPeriod?: number | null;
		DBInstanceAutomatedBackupsArn?: string;
		DBInstanceAutomatedBackupsReplications?: Array<string>;
		BackupTarget?: string;
		StorageThroughput?: number | null;
	}

	/** An automated backup of a DB instance. It consists of system backups, transaction logs, and the database instance properties that existed at the time you deleted the source instance. */
	export interface DBInstanceAutomatedBackupFormProperties {
		DBInstanceArn: FormControl<string | null | undefined>,
		DbiResourceId: FormControl<string | null | undefined>,
		Region: FormControl<string | null | undefined>,
		DBInstanceIdentifier: FormControl<string | null | undefined>,
		AllocatedStorage: FormControl<number | null | undefined>,
		Status: FormControl<string | null | undefined>,
		Port: FormControl<number | null | undefined>,
		AvailabilityZone: FormControl<string | null | undefined>,
		VpcId: FormControl<string | null | undefined>,
		InstanceCreateTime: FormControl<Date | null | undefined>,
		MasterUsername: FormControl<string | null | undefined>,
		Engine: FormControl<string | null | undefined>,
		EngineVersion: FormControl<string | null | undefined>,
		LicenseModel: FormControl<string | null | undefined>,
		Iops: FormControl<number | null | undefined>,
		OptionGroupName: FormControl<string | null | undefined>,
		TdeCredentialArn: FormControl<string | null | undefined>,
		Encrypted: FormControl<boolean | null | undefined>,
		StorageType: FormControl<string | null | undefined>,
		KmsKeyId: FormControl<string | null | undefined>,
		Timezone: FormControl<string | null | undefined>,
		IAMDatabaseAuthenticationEnabled: FormControl<boolean | null | undefined>,
		BackupRetentionPeriod: FormControl<number | null | undefined>,
		DBInstanceAutomatedBackupsArn: FormControl<string | null | undefined>,
		BackupTarget: FormControl<string | null | undefined>,
		StorageThroughput: FormControl<number | null | undefined>,
	}
	export function CreateDBInstanceAutomatedBackupFormGroup() {
		return new FormGroup<DBInstanceAutomatedBackupFormProperties>({
			DBInstanceArn: new FormControl<string | null | undefined>(undefined),
			DbiResourceId: new FormControl<string | null | undefined>(undefined),
			Region: new FormControl<string | null | undefined>(undefined),
			DBInstanceIdentifier: new FormControl<string | null | undefined>(undefined),
			AllocatedStorage: new FormControl<number | null | undefined>(undefined),
			Status: new FormControl<string | null | undefined>(undefined),
			Port: new FormControl<number | null | undefined>(undefined),
			AvailabilityZone: new FormControl<string | null | undefined>(undefined),
			VpcId: new FormControl<string | null | undefined>(undefined),
			InstanceCreateTime: new FormControl<Date | null | undefined>(undefined),
			MasterUsername: new FormControl<string | null | undefined>(undefined),
			Engine: new FormControl<string | null | undefined>(undefined),
			EngineVersion: new FormControl<string | null | undefined>(undefined),
			LicenseModel: new FormControl<string | null | undefined>(undefined),
			Iops: new FormControl<number | null | undefined>(undefined),
			OptionGroupName: new FormControl<string | null | undefined>(undefined),
			TdeCredentialArn: new FormControl<string | null | undefined>(undefined),
			Encrypted: new FormControl<boolean | null | undefined>(undefined),
			StorageType: new FormControl<string | null | undefined>(undefined),
			KmsKeyId: new FormControl<string | null | undefined>(undefined),
			Timezone: new FormControl<string | null | undefined>(undefined),
			IAMDatabaseAuthenticationEnabled: new FormControl<boolean | null | undefined>(undefined),
			BackupRetentionPeriod: new FormControl<number | null | undefined>(undefined),
			DBInstanceAutomatedBackupsArn: new FormControl<string | null | undefined>(undefined),
			BackupTarget: new FormControl<string | null | undefined>(undefined),
			StorageThroughput: new FormControl<number | null | undefined>(undefined),
		});

	}

	export interface InvalidDBInstanceAutomatedBackupStateFault {
	}
	export interface InvalidDBInstanceAutomatedBackupStateFaultFormProperties {
	}
	export function CreateInvalidDBInstanceAutomatedBackupStateFaultFormGroup() {
		return new FormGroup<InvalidDBInstanceAutomatedBackupStateFaultFormProperties>({
		});

	}

	export interface DBInstanceAutomatedBackupNotFoundFault {
	}
	export interface DBInstanceAutomatedBackupNotFoundFaultFormProperties {
	}
	export function CreateDBInstanceAutomatedBackupNotFoundFaultFormGroup() {
		return new FormGroup<DBInstanceAutomatedBackupNotFoundFaultFormProperties>({
		});

	}

	export interface DeleteDBProxyResponse {
		DBProxy?: DBProxy;
	}
	export interface DeleteDBProxyResponseFormProperties {
	}
	export function CreateDeleteDBProxyResponseFormGroup() {
		return new FormGroup<DeleteDBProxyResponseFormProperties>({
		});

	}

	export interface DeleteDBProxyEndpointResponse {
		DBProxyEndpoint?: DBProxyEndpoint;
	}
	export interface DeleteDBProxyEndpointResponseFormProperties {
	}
	export function CreateDeleteDBProxyEndpointResponseFormGroup() {
		return new FormGroup<DeleteDBProxyEndpointResponseFormProperties>({
		});

	}

	export interface DBProxyEndpointNotFoundFault {
	}
	export interface DBProxyEndpointNotFoundFaultFormProperties {
	}
	export function CreateDBProxyEndpointNotFoundFaultFormGroup() {
		return new FormGroup<DBProxyEndpointNotFoundFaultFormProperties>({
		});

	}

	export interface InvalidDBProxyEndpointStateFault {
	}
	export interface InvalidDBProxyEndpointStateFaultFormProperties {
	}
	export function CreateInvalidDBProxyEndpointStateFaultFormGroup() {
		return new FormGroup<InvalidDBProxyEndpointStateFaultFormProperties>({
		});

	}

	export interface DeleteDBSnapshotResult {

		/** <p>Contains the details of an Amazon RDS DB snapshot.</p> <p>This data type is used as a response element in the <code>DescribeDBSnapshots</code> action.</p> */
		DBSnapshot?: DBSnapshot;
	}
	export interface DeleteDBSnapshotResultFormProperties {
	}
	export function CreateDeleteDBSnapshotResultFormGroup() {
		return new FormGroup<DeleteDBSnapshotResultFormProperties>({
		});

	}

	export interface InvalidDBSubnetStateFault {
	}
	export interface InvalidDBSubnetStateFaultFormProperties {
	}
	export function CreateInvalidDBSubnetStateFaultFormGroup() {
		return new FormGroup<InvalidDBSubnetStateFaultFormProperties>({
		});

	}

	export interface DeleteEventSubscriptionResult {

		/** Contains the results of a successful invocation of the <code>DescribeEventSubscriptions</code> action. */
		EventSubscription?: EventSubscription;
	}
	export interface DeleteEventSubscriptionResultFormProperties {
	}
	export function CreateDeleteEventSubscriptionResultFormGroup() {
		return new FormGroup<DeleteEventSubscriptionResultFormProperties>({
		});

	}

	export interface InvalidEventSubscriptionStateFault {
	}
	export interface InvalidEventSubscriptionStateFaultFormProperties {
	}
	export function CreateInvalidEventSubscriptionStateFaultFormGroup() {
		return new FormGroup<InvalidEventSubscriptionStateFaultFormProperties>({
		});

	}

	export interface DeleteGlobalClusterResult {

		/** A data type representing an Aurora global database. */
		GlobalCluster?: GlobalCluster;
	}
	export interface DeleteGlobalClusterResultFormProperties {
	}
	export function CreateDeleteGlobalClusterResultFormGroup() {
		return new FormGroup<DeleteGlobalClusterResultFormProperties>({
		});

	}

	export interface InvalidOptionGroupStateFault {
	}
	export interface InvalidOptionGroupStateFaultFormProperties {
	}
	export function CreateInvalidOptionGroupStateFaultFormGroup() {
		return new FormGroup<InvalidOptionGroupStateFaultFormProperties>({
		});

	}

	export interface DeregisterDBProxyTargetsResponse {
	}
	export interface DeregisterDBProxyTargetsResponseFormProperties {
	}
	export function CreateDeregisterDBProxyTargetsResponseFormGroup() {
		return new FormGroup<DeregisterDBProxyTargetsResponseFormProperties>({
		});

	}

	export interface DBProxyTargetNotFoundFault {
	}
	export interface DBProxyTargetNotFoundFaultFormProperties {
	}
	export function CreateDBProxyTargetNotFoundFaultFormGroup() {
		return new FormGroup<DBProxyTargetNotFoundFaultFormProperties>({
		});

	}


	/** Data returned by the <b>DescribeAccountAttributes</b> action. */
	export interface AccountAttributesMessage {
		AccountQuotas?: Array<string>;
	}

	/** Data returned by the <b>DescribeAccountAttributes</b> action. */
	export interface AccountAttributesMessageFormProperties {
	}
	export function CreateAccountAttributesMessageFormGroup() {
		return new FormGroup<AccountAttributesMessageFormProperties>({
		});

	}

	export interface DescribeBlueGreenDeploymentsResponse {
		BlueGreenDeployments?: Array<BlueGreenDeployment>;
		Marker?: string;
	}
	export interface DescribeBlueGreenDeploymentsResponseFormProperties {
		Marker: FormControl<string | null | undefined>,
	}
	export function CreateDescribeBlueGreenDeploymentsResponseFormGroup() {
		return new FormGroup<DescribeBlueGreenDeploymentsResponseFormProperties>({
			Marker: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** <p>A filter name and value pair that is used to return a more specific list of results from a describe operation. Filters can be used to match a set of resources by specific criteria, such as IDs. The filters supported by a describe operation are documented with the describe operation.</p> <note> <p>Currently, wildcards are not supported in filters.</p> </note> <p>The following actions can be filtered:</p> <ul> <li> <p> <code>DescribeDBClusterBacktracks</code> </p> </li> <li> <p> <code>DescribeDBClusterEndpoints</code> </p> </li> <li> <p> <code>DescribeDBClusters</code> </p> </li> <li> <p> <code>DescribeDBInstances</code> </p> </li> <li> <p> <code>DescribePendingMaintenanceActions</code> </p> </li> </ul> */
	export interface Filter {

		/** Required */
		Name: string;

		/** Required */
		Values: Array<string>;
	}

	/** <p>A filter name and value pair that is used to return a more specific list of results from a describe operation. Filters can be used to match a set of resources by specific criteria, such as IDs. The filters supported by a describe operation are documented with the describe operation.</p> <note> <p>Currently, wildcards are not supported in filters.</p> </note> <p>The following actions can be filtered:</p> <ul> <li> <p> <code>DescribeDBClusterBacktracks</code> </p> </li> <li> <p> <code>DescribeDBClusterEndpoints</code> </p> </li> <li> <p> <code>DescribeDBClusters</code> </p> </li> <li> <p> <code>DescribeDBInstances</code> </p> </li> <li> <p> <code>DescribePendingMaintenanceActions</code> </p> </li> </ul> */
	export interface FilterFormProperties {

		/** Required */
		Name: FormControl<string | null | undefined>,
	}
	export function CreateFilterFormGroup() {
		return new FormGroup<FilterFormProperties>({
			Name: new FormControl<string | null | undefined>(undefined, [Validators.required]),
		});

	}


	/** Data returned by the <b>DescribeCertificates</b> action. */
	export interface CertificateMessage {
		Certificates?: Array<string>;
		Marker?: string;
	}

	/** Data returned by the <b>DescribeCertificates</b> action. */
	export interface CertificateMessageFormProperties {
		Marker: FormControl<string | null | undefined>,
	}
	export function CreateCertificateMessageFormGroup() {
		return new FormGroup<CertificateMessageFormProperties>({
			Marker: new FormControl<string | null | undefined>(undefined),
		});

	}

	export interface DBClusterAutomatedBackupMessage {
		Marker?: string;
		DBClusterAutomatedBackups?: Array<string>;
	}
	export interface DBClusterAutomatedBackupMessageFormProperties {
		Marker: FormControl<string | null | undefined>,
	}
	export function CreateDBClusterAutomatedBackupMessageFormGroup() {
		return new FormGroup<DBClusterAutomatedBackupMessageFormProperties>({
			Marker: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Contains the result of a successful invocation of the <code>DescribeDBClusterBacktracks</code> action. */
	export interface DBClusterBacktrackMessage {
		Marker?: string;
		DBClusterBacktracks?: Array<string>;
	}

	/** Contains the result of a successful invocation of the <code>DescribeDBClusterBacktracks</code> action. */
	export interface DBClusterBacktrackMessageFormProperties {
		Marker: FormControl<string | null | undefined>,
	}
	export function CreateDBClusterBacktrackMessageFormGroup() {
		return new FormGroup<DBClusterBacktrackMessageFormProperties>({
			Marker: new FormControl<string | null | undefined>(undefined),
		});

	}

	export interface DBClusterBacktrackNotFoundFault {
	}
	export interface DBClusterBacktrackNotFoundFaultFormProperties {
	}
	export function CreateDBClusterBacktrackNotFoundFaultFormGroup() {
		return new FormGroup<DBClusterBacktrackNotFoundFaultFormProperties>({
		});

	}

	export interface DBClusterEndpointMessage {
		Marker?: string;
		DBClusterEndpoints?: Array<string>;
	}
	export interface DBClusterEndpointMessageFormProperties {
		Marker: FormControl<string | null | undefined>,
	}
	export function CreateDBClusterEndpointMessageFormGroup() {
		return new FormGroup<DBClusterEndpointMessageFormProperties>({
			Marker: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** <p/> */
	export interface DBClusterParameterGroupsMessage {
		Marker?: string;
		DBClusterParameterGroups?: Array<string>;
	}

	/** <p/> */
	export interface DBClusterParameterGroupsMessageFormProperties {
		Marker: FormControl<string | null | undefined>,
	}
	export function CreateDBClusterParameterGroupsMessageFormGroup() {
		return new FormGroup<DBClusterParameterGroupsMessageFormProperties>({
			Marker: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Provides details about a DB cluster parameter group including the parameters in the DB cluster parameter group. */
	export interface DBClusterParameterGroupDetails {
		Parameters?: Array<string>;
		Marker?: string;
	}

	/** Provides details about a DB cluster parameter group including the parameters in the DB cluster parameter group. */
	export interface DBClusterParameterGroupDetailsFormProperties {
		Marker: FormControl<string | null | undefined>,
	}
	export function CreateDBClusterParameterGroupDetailsFormGroup() {
		return new FormGroup<DBClusterParameterGroupDetailsFormProperties>({
			Marker: new FormControl<string | null | undefined>(undefined),
		});

	}

	export interface DescribeDBClusterSnapshotAttributesResult {

		/** <p>Contains the results of a successful call to the <code>DescribeDBClusterSnapshotAttributes</code> API action.</p> <p>Manual DB cluster snapshot attributes are used to authorize other Amazon Web Services accounts to copy or restore a manual DB cluster snapshot. For more information, see the <code>ModifyDBClusterSnapshotAttribute</code> API action.</p> */
		DBClusterSnapshotAttributesResult?: DBClusterSnapshotAttributesResult;
	}
	export interface DescribeDBClusterSnapshotAttributesResultFormProperties {
	}
	export function CreateDescribeDBClusterSnapshotAttributesResultFormGroup() {
		return new FormGroup<DescribeDBClusterSnapshotAttributesResultFormProperties>({
		});

	}


	/** <p>Contains the results of a successful call to the <code>DescribeDBClusterSnapshotAttributes</code> API action.</p> <p>Manual DB cluster snapshot attributes are used to authorize other Amazon Web Services accounts to copy or restore a manual DB cluster snapshot. For more information, see the <code>ModifyDBClusterSnapshotAttribute</code> API action.</p> */
	export interface DBClusterSnapshotAttributesResult {
		DBClusterSnapshotIdentifier?: string;
		DBClusterSnapshotAttributes?: Array<string>;
	}

	/** <p>Contains the results of a successful call to the <code>DescribeDBClusterSnapshotAttributes</code> API action.</p> <p>Manual DB cluster snapshot attributes are used to authorize other Amazon Web Services accounts to copy or restore a manual DB cluster snapshot. For more information, see the <code>ModifyDBClusterSnapshotAttribute</code> API action.</p> */
	export interface DBClusterSnapshotAttributesResultFormProperties {
		DBClusterSnapshotIdentifier: FormControl<string | null | undefined>,
	}
	export function CreateDBClusterSnapshotAttributesResultFormGroup() {
		return new FormGroup<DBClusterSnapshotAttributesResultFormProperties>({
			DBClusterSnapshotIdentifier: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Provides a list of DB cluster snapshots for the user as the result of a call to the <code>DescribeDBClusterSnapshots</code> action. */
	export interface DBClusterSnapshotMessage {
		Marker?: string;
		DBClusterSnapshots?: Array<string>;
	}

	/** Provides a list of DB cluster snapshots for the user as the result of a call to the <code>DescribeDBClusterSnapshots</code> action. */
	export interface DBClusterSnapshotMessageFormProperties {
		Marker: FormControl<string | null | undefined>,
	}
	export function CreateDBClusterSnapshotMessageFormGroup() {
		return new FormGroup<DBClusterSnapshotMessageFormProperties>({
			Marker: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Contains the result of a successful invocation of the <code>DescribeDBClusters</code> action. */
	export interface DBClusterMessage {
		Marker?: string;
		DBClusters?: Array<string>;
	}

	/** Contains the result of a successful invocation of the <code>DescribeDBClusters</code> action. */
	export interface DBClusterMessageFormProperties {
		Marker: FormControl<string | null | undefined>,
	}
	export function CreateDBClusterMessageFormGroup() {
		return new FormGroup<DBClusterMessageFormProperties>({
			Marker: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Contains the result of a successful invocation of the <code>DescribeDBEngineVersions</code> action. */
	export interface DBEngineVersionMessage {
		Marker?: string;
		DBEngineVersions?: Array<string>;
	}

	/** Contains the result of a successful invocation of the <code>DescribeDBEngineVersions</code> action. */
	export interface DBEngineVersionMessageFormProperties {
		Marker: FormControl<string | null | undefined>,
	}
	export function CreateDBEngineVersionMessageFormGroup() {
		return new FormGroup<DBEngineVersionMessageFormProperties>({
			Marker: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Contains the result of a successful invocation of the <code>DescribeDBInstanceAutomatedBackups</code> action. */
	export interface DBInstanceAutomatedBackupMessage {
		Marker?: string;
		DBInstanceAutomatedBackups?: Array<string>;
	}

	/** Contains the result of a successful invocation of the <code>DescribeDBInstanceAutomatedBackups</code> action. */
	export interface DBInstanceAutomatedBackupMessageFormProperties {
		Marker: FormControl<string | null | undefined>,
	}
	export function CreateDBInstanceAutomatedBackupMessageFormGroup() {
		return new FormGroup<DBInstanceAutomatedBackupMessageFormProperties>({
			Marker: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Contains the result of a successful invocation of the <code>DescribeDBInstances</code> action. */
	export interface DBInstanceMessage {
		Marker?: string;
		DBInstances?: Array<string>;
	}

	/** Contains the result of a successful invocation of the <code>DescribeDBInstances</code> action. */
	export interface DBInstanceMessageFormProperties {
		Marker: FormControl<string | null | undefined>,
	}
	export function CreateDBInstanceMessageFormGroup() {
		return new FormGroup<DBInstanceMessageFormProperties>({
			Marker: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** The response from a call to <code>DescribeDBLogFiles</code>. */
	export interface DescribeDBLogFilesResponse {
		DescribeDBLogFiles?: Array<string>;
		Marker?: string;
	}

	/** The response from a call to <code>DescribeDBLogFiles</code>. */
	export interface DescribeDBLogFilesResponseFormProperties {
		Marker: FormControl<string | null | undefined>,
	}
	export function CreateDescribeDBLogFilesResponseFormGroup() {
		return new FormGroup<DescribeDBLogFilesResponseFormProperties>({
			Marker: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Contains the result of a successful invocation of the <code>DescribeDBParameterGroups</code> action. */
	export interface DBParameterGroupsMessage {
		Marker?: string;
		DBParameterGroups?: Array<string>;
	}

	/** Contains the result of a successful invocation of the <code>DescribeDBParameterGroups</code> action. */
	export interface DBParameterGroupsMessageFormProperties {
		Marker: FormControl<string | null | undefined>,
	}
	export function CreateDBParameterGroupsMessageFormGroup() {
		return new FormGroup<DBParameterGroupsMessageFormProperties>({
			Marker: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Contains the result of a successful invocation of the <code>DescribeDBParameters</code> action. */
	export interface DBParameterGroupDetails {
		Parameters?: Array<string>;
		Marker?: string;
	}

	/** Contains the result of a successful invocation of the <code>DescribeDBParameters</code> action. */
	export interface DBParameterGroupDetailsFormProperties {
		Marker: FormControl<string | null | undefined>,
	}
	export function CreateDBParameterGroupDetailsFormGroup() {
		return new FormGroup<DBParameterGroupDetailsFormProperties>({
			Marker: new FormControl<string | null | undefined>(undefined),
		});

	}

	export interface DescribeDBProxiesResponse {
		DBProxies?: Array<DBProxy>;
		Marker?: string;
	}
	export interface DescribeDBProxiesResponseFormProperties {
		Marker: FormControl<string | null | undefined>,
	}
	export function CreateDescribeDBProxiesResponseFormGroup() {
		return new FormGroup<DescribeDBProxiesResponseFormProperties>({
			Marker: new FormControl<string | null | undefined>(undefined),
		});

	}

	export interface DescribeDBProxyEndpointsResponse {
		DBProxyEndpoints?: Array<DBProxyEndpoint>;
		Marker?: string;
	}
	export interface DescribeDBProxyEndpointsResponseFormProperties {
		Marker: FormControl<string | null | undefined>,
	}
	export function CreateDescribeDBProxyEndpointsResponseFormGroup() {
		return new FormGroup<DescribeDBProxyEndpointsResponseFormProperties>({
			Marker: new FormControl<string | null | undefined>(undefined),
		});

	}

	export interface DescribeDBProxyTargetGroupsResponse {
		TargetGroups?: Array<DBProxyTargetGroup>;
		Marker?: string;
	}
	export interface DescribeDBProxyTargetGroupsResponseFormProperties {
		Marker: FormControl<string | null | undefined>,
	}
	export function CreateDescribeDBProxyTargetGroupsResponseFormGroup() {
		return new FormGroup<DescribeDBProxyTargetGroupsResponseFormProperties>({
			Marker: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** <p>Represents a set of RDS DB instances, Aurora DB clusters, or both that a proxy can connect to. Currently, each target group is associated with exactly one RDS DB instance or Aurora DB cluster.</p> <p>This data type is used as a response element in the <code>DescribeDBProxyTargetGroups</code> action.</p> */
	export interface DBProxyTargetGroup {
		DBProxyName?: string;
		TargetGroupName?: string;
		TargetGroupArn?: string;
		IsDefault?: boolean | null;
		Status?: string;
		ConnectionPoolConfig?: ConnectionPoolConfigurationInfo;
		CreatedDate?: Date;
		UpdatedDate?: Date;
	}

	/** <p>Represents a set of RDS DB instances, Aurora DB clusters, or both that a proxy can connect to. Currently, each target group is associated with exactly one RDS DB instance or Aurora DB cluster.</p> <p>This data type is used as a response element in the <code>DescribeDBProxyTargetGroups</code> action.</p> */
	export interface DBProxyTargetGroupFormProperties {
		DBProxyName: FormControl<string | null | undefined>,
		TargetGroupName: FormControl<string | null | undefined>,
		TargetGroupArn: FormControl<string | null | undefined>,
		IsDefault: FormControl<boolean | null | undefined>,
		Status: FormControl<string | null | undefined>,
		CreatedDate: FormControl<Date | null | undefined>,
		UpdatedDate: FormControl<Date | null | undefined>,
	}
	export function CreateDBProxyTargetGroupFormGroup() {
		return new FormGroup<DBProxyTargetGroupFormProperties>({
			DBProxyName: new FormControl<string | null | undefined>(undefined),
			TargetGroupName: new FormControl<string | null | undefined>(undefined),
			TargetGroupArn: new FormControl<string | null | undefined>(undefined),
			IsDefault: new FormControl<boolean | null | undefined>(undefined),
			Status: new FormControl<string | null | undefined>(undefined),
			CreatedDate: new FormControl<Date | null | undefined>(undefined),
			UpdatedDate: new FormControl<Date | null | undefined>(undefined),
		});

	}


	/** Displays the settings that control the size and behavior of the connection pool associated with a <code>DBProxyTarget</code>. */
	export interface ConnectionPoolConfigurationInfo {
		MaxConnectionsPercent?: number | null;
		MaxIdleConnectionsPercent?: number | null;
		ConnectionBorrowTimeout?: number | null;
		SessionPinningFilters?: Array<string>;
		InitQuery?: string;
	}

	/** Displays the settings that control the size and behavior of the connection pool associated with a <code>DBProxyTarget</code>. */
	export interface ConnectionPoolConfigurationInfoFormProperties {
		MaxConnectionsPercent: FormControl<number | null | undefined>,
		MaxIdleConnectionsPercent: FormControl<number | null | undefined>,
		ConnectionBorrowTimeout: FormControl<number | null | undefined>,
		InitQuery: FormControl<string | null | undefined>,
	}
	export function CreateConnectionPoolConfigurationInfoFormGroup() {
		return new FormGroup<ConnectionPoolConfigurationInfoFormProperties>({
			MaxConnectionsPercent: new FormControl<number | null | undefined>(undefined),
			MaxIdleConnectionsPercent: new FormControl<number | null | undefined>(undefined),
			ConnectionBorrowTimeout: new FormControl<number | null | undefined>(undefined),
			InitQuery: new FormControl<string | null | undefined>(undefined),
		});

	}

	export interface DescribeDBProxyTargetsResponse {
		Targets?: Array<DBProxyTarget>;
		Marker?: string;
	}
	export interface DescribeDBProxyTargetsResponseFormProperties {
		Marker: FormControl<string | null | undefined>,
	}
	export function CreateDescribeDBProxyTargetsResponseFormGroup() {
		return new FormGroup<DescribeDBProxyTargetsResponseFormProperties>({
			Marker: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** <p>Contains the details for an RDS Proxy target. It represents an RDS DB instance or Aurora DB cluster that the proxy can connect to. One or more targets are associated with an RDS Proxy target group.</p> <p>This data type is used as a response element in the <code>DescribeDBProxyTargets</code> action.</p> */
	export interface DBProxyTarget {
		TargetArn?: string;
		Endpoint?: string;
		TrackedClusterId?: string;
		RdsResourceId?: string;
		Port?: number | null;
		Type?: TargetType;
		Role?: TargetRole;
		TargetHealth?: TargetHealth;
	}

	/** <p>Contains the details for an RDS Proxy target. It represents an RDS DB instance or Aurora DB cluster that the proxy can connect to. One or more targets are associated with an RDS Proxy target group.</p> <p>This data type is used as a response element in the <code>DescribeDBProxyTargets</code> action.</p> */
	export interface DBProxyTargetFormProperties {
		TargetArn: FormControl<string | null | undefined>,
		Endpoint: FormControl<string | null | undefined>,
		TrackedClusterId: FormControl<string | null | undefined>,
		RdsResourceId: FormControl<string | null | undefined>,
		Port: FormControl<number | null | undefined>,
		Type: FormControl<TargetType | null | undefined>,
		Role: FormControl<TargetRole | null | undefined>,
	}
	export function CreateDBProxyTargetFormGroup() {
		return new FormGroup<DBProxyTargetFormProperties>({
			TargetArn: new FormControl<string | null | undefined>(undefined),
			Endpoint: new FormControl<string | null | undefined>(undefined),
			TrackedClusterId: new FormControl<string | null | undefined>(undefined),
			RdsResourceId: new FormControl<string | null | undefined>(undefined),
			Port: new FormControl<number | null | undefined>(undefined),
			Type: new FormControl<TargetType | null | undefined>(undefined),
			Role: new FormControl<TargetRole | null | undefined>(undefined),
		});

	}

	export enum TargetType { RDS_INSTANCE = 0, RDS_SERVERLESS_ENDPOINT = 1, TRACKED_CLUSTER = 2 }

	export enum TargetRole { READ_WRITE = 0, READ_ONLY = 1, UNKNOWN = 2 }


	/** Information about the connection health of an RDS Proxy target. */
	export interface TargetHealth {
		State?: TargetState;
		Reason?: TargetHealthReason;
		Description?: string;
	}

	/** Information about the connection health of an RDS Proxy target. */
	export interface TargetHealthFormProperties {
		State: FormControl<TargetState | null | undefined>,
		Reason: FormControl<TargetHealthReason | null | undefined>,
		Description: FormControl<string | null | undefined>,
	}
	export function CreateTargetHealthFormGroup() {
		return new FormGroup<TargetHealthFormProperties>({
			State: new FormControl<TargetState | null | undefined>(undefined),
			Reason: new FormControl<TargetHealthReason | null | undefined>(undefined),
			Description: new FormControl<string | null | undefined>(undefined),
		});

	}

	export enum TargetState { REGISTERING = 0, AVAILABLE = 1, UNAVAILABLE = 2 }

	export enum TargetHealthReason { UNREACHABLE = 0, CONNECTION_FAILED = 1, AUTH_FAILURE = 2, PENDING_PROXY_CAPACITY = 3, INVALID_REPLICATION_STATE = 4 }


	/** Contains the result of a successful invocation of the <code>DescribeDBSecurityGroups</code> action. */
	export interface DBSecurityGroupMessage {
		Marker?: string;
		DBSecurityGroups?: Array<string>;
	}

	/** Contains the result of a successful invocation of the <code>DescribeDBSecurityGroups</code> action. */
	export interface DBSecurityGroupMessageFormProperties {
		Marker: FormControl<string | null | undefined>,
	}
	export function CreateDBSecurityGroupMessageFormGroup() {
		return new FormGroup<DBSecurityGroupMessageFormProperties>({
			Marker: new FormControl<string | null | undefined>(undefined),
		});

	}

	export interface DescribeDBSnapshotAttributesResult {

		/** <p>Contains the results of a successful call to the <code>DescribeDBSnapshotAttributes</code> API action.</p> <p>Manual DB snapshot attributes are used to authorize other Amazon Web Services accounts to copy or restore a manual DB snapshot. For more information, see the <code>ModifyDBSnapshotAttribute</code> API action.</p> */
		DBSnapshotAttributesResult?: DBSnapshotAttributesResult;
	}
	export interface DescribeDBSnapshotAttributesResultFormProperties {
	}
	export function CreateDescribeDBSnapshotAttributesResultFormGroup() {
		return new FormGroup<DescribeDBSnapshotAttributesResultFormProperties>({
		});

	}


	/** <p>Contains the results of a successful call to the <code>DescribeDBSnapshotAttributes</code> API action.</p> <p>Manual DB snapshot attributes are used to authorize other Amazon Web Services accounts to copy or restore a manual DB snapshot. For more information, see the <code>ModifyDBSnapshotAttribute</code> API action.</p> */
	export interface DBSnapshotAttributesResult {
		DBSnapshotIdentifier?: string;
		DBSnapshotAttributes?: Array<string>;
	}

	/** <p>Contains the results of a successful call to the <code>DescribeDBSnapshotAttributes</code> API action.</p> <p>Manual DB snapshot attributes are used to authorize other Amazon Web Services accounts to copy or restore a manual DB snapshot. For more information, see the <code>ModifyDBSnapshotAttribute</code> API action.</p> */
	export interface DBSnapshotAttributesResultFormProperties {
		DBSnapshotIdentifier: FormControl<string | null | undefined>,
	}
	export function CreateDBSnapshotAttributesResultFormGroup() {
		return new FormGroup<DBSnapshotAttributesResultFormProperties>({
			DBSnapshotIdentifier: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Contains the result of a successful invocation of the <code>DescribeDBSnapshots</code> action. */
	export interface DBSnapshotMessage {
		Marker?: string;
		DBSnapshots?: Array<string>;
	}

	/** Contains the result of a successful invocation of the <code>DescribeDBSnapshots</code> action. */
	export interface DBSnapshotMessageFormProperties {
		Marker: FormControl<string | null | undefined>,
	}
	export function CreateDBSnapshotMessageFormGroup() {
		return new FormGroup<DBSnapshotMessageFormProperties>({
			Marker: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Contains the result of a successful invocation of the <code>DescribeDBSubnetGroups</code> action. */
	export interface DBSubnetGroupMessage {
		Marker?: string;
		DBSubnetGroups?: Array<string>;
	}

	/** Contains the result of a successful invocation of the <code>DescribeDBSubnetGroups</code> action. */
	export interface DBSubnetGroupMessageFormProperties {
		Marker: FormControl<string | null | undefined>,
	}
	export function CreateDBSubnetGroupMessageFormGroup() {
		return new FormGroup<DBSubnetGroupMessageFormProperties>({
			Marker: new FormControl<string | null | undefined>(undefined),
		});

	}

	export interface DescribeEngineDefaultClusterParametersResult {

		/** Contains the result of a successful invocation of the <code>DescribeEngineDefaultParameters</code> action. */
		EngineDefaults?: EngineDefaults;
	}
	export interface DescribeEngineDefaultClusterParametersResultFormProperties {
	}
	export function CreateDescribeEngineDefaultClusterParametersResultFormGroup() {
		return new FormGroup<DescribeEngineDefaultClusterParametersResultFormProperties>({
		});

	}


	/** Contains the result of a successful invocation of the <code>DescribeEngineDefaultParameters</code> action. */
	export interface EngineDefaults {
		DBParameterGroupFamily?: string;
		Marker?: string;
		Parameters?: Array<string>;
	}

	/** Contains the result of a successful invocation of the <code>DescribeEngineDefaultParameters</code> action. */
	export interface EngineDefaultsFormProperties {
		DBParameterGroupFamily: FormControl<string | null | undefined>,
		Marker: FormControl<string | null | undefined>,
	}
	export function CreateEngineDefaultsFormGroup() {
		return new FormGroup<EngineDefaultsFormProperties>({
			DBParameterGroupFamily: new FormControl<string | null | undefined>(undefined),
			Marker: new FormControl<string | null | undefined>(undefined),
		});

	}

	export interface DescribeEngineDefaultParametersResult {

		/** Contains the result of a successful invocation of the <code>DescribeEngineDefaultParameters</code> action. */
		EngineDefaults?: EngineDefaults;
	}
	export interface DescribeEngineDefaultParametersResultFormProperties {
	}
	export function CreateDescribeEngineDefaultParametersResultFormGroup() {
		return new FormGroup<DescribeEngineDefaultParametersResultFormProperties>({
		});

	}


	/** Data returned from the <code>DescribeEventCategories</code> operation. */
	export interface EventCategoriesMessage {
		EventCategoriesMapList?: Array<string>;
	}

	/** Data returned from the <code>DescribeEventCategories</code> operation. */
	export interface EventCategoriesMessageFormProperties {
	}
	export function CreateEventCategoriesMessageFormGroup() {
		return new FormGroup<EventCategoriesMessageFormProperties>({
		});

	}


	/** Data returned by the <b>DescribeEventSubscriptions</b> action. */
	export interface EventSubscriptionsMessage {
		Marker?: string;
		EventSubscriptionsList?: Array<string>;
	}

	/** Data returned by the <b>DescribeEventSubscriptions</b> action. */
	export interface EventSubscriptionsMessageFormProperties {
		Marker: FormControl<string | null | undefined>,
	}
	export function CreateEventSubscriptionsMessageFormGroup() {
		return new FormGroup<EventSubscriptionsMessageFormProperties>({
			Marker: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Contains the result of a successful invocation of the <code>DescribeEvents</code> action. */
	export interface EventsMessage {
		Marker?: string;
		Events?: Array<string>;
	}

	/** Contains the result of a successful invocation of the <code>DescribeEvents</code> action. */
	export interface EventsMessageFormProperties {
		Marker: FormControl<string | null | undefined>,
	}
	export function CreateEventsMessageFormGroup() {
		return new FormGroup<EventsMessageFormProperties>({
			Marker: new FormControl<string | null | undefined>(undefined),
		});

	}

	export interface ExportTasksMessage {
		Marker?: string;
		ExportTasks?: Array<string>;
	}
	export interface ExportTasksMessageFormProperties {
		Marker: FormControl<string | null | undefined>,
	}
	export function CreateExportTasksMessageFormGroup() {
		return new FormGroup<ExportTasksMessageFormProperties>({
			Marker: new FormControl<string | null | undefined>(undefined),
		});

	}

	export interface GlobalClustersMessage {
		Marker?: string;
		GlobalClusters?: Array<string>;
	}
	export interface GlobalClustersMessageFormProperties {
		Marker: FormControl<string | null | undefined>,
	}
	export function CreateGlobalClustersMessageFormGroup() {
		return new FormGroup<GlobalClustersMessageFormProperties>({
			Marker: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** <p/> */
	export interface OptionGroupOptionsMessage {

		/** List of available option group options. */
		OptionGroupOptions?: Array<string>;
		Marker?: string;
	}

	/** <p/> */
	export interface OptionGroupOptionsMessageFormProperties {
		Marker: FormControl<string | null | undefined>,
	}
	export function CreateOptionGroupOptionsMessageFormGroup() {
		return new FormGroup<OptionGroupOptionsMessageFormProperties>({
			Marker: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** List of option groups. */
	export interface OptionGroups {
		OptionGroupsList?: Array<string>;
		Marker?: string;
	}

	/** List of option groups. */
	export interface OptionGroupsFormProperties {
		Marker: FormControl<string | null | undefined>,
	}
	export function CreateOptionGroupsFormGroup() {
		return new FormGroup<OptionGroupsFormProperties>({
			Marker: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Contains the result of a successful invocation of the <code>DescribeOrderableDBInstanceOptions</code> action. */
	export interface OrderableDBInstanceOptionsMessage {
		OrderableDBInstanceOptions?: Array<string>;
		Marker?: string;
	}

	/** Contains the result of a successful invocation of the <code>DescribeOrderableDBInstanceOptions</code> action. */
	export interface OrderableDBInstanceOptionsMessageFormProperties {
		Marker: FormControl<string | null | undefined>,
	}
	export function CreateOrderableDBInstanceOptionsMessageFormGroup() {
		return new FormGroup<OrderableDBInstanceOptionsMessageFormProperties>({
			Marker: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Data returned from the <b>DescribePendingMaintenanceActions</b> action. */
	export interface PendingMaintenanceActionsMessage {
		PendingMaintenanceActions?: Array<string>;
		Marker?: string;
	}

	/** Data returned from the <b>DescribePendingMaintenanceActions</b> action. */
	export interface PendingMaintenanceActionsMessageFormProperties {
		Marker: FormControl<string | null | undefined>,
	}
	export function CreatePendingMaintenanceActionsMessageFormGroup() {
		return new FormGroup<PendingMaintenanceActionsMessageFormProperties>({
			Marker: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Contains the result of a successful invocation of the <code>DescribeReservedDBInstances</code> action. */
	export interface ReservedDBInstanceMessage {
		Marker?: string;
		ReservedDBInstances?: Array<string>;
	}

	/** Contains the result of a successful invocation of the <code>DescribeReservedDBInstances</code> action. */
	export interface ReservedDBInstanceMessageFormProperties {
		Marker: FormControl<string | null | undefined>,
	}
	export function CreateReservedDBInstanceMessageFormGroup() {
		return new FormGroup<ReservedDBInstanceMessageFormProperties>({
			Marker: new FormControl<string | null | undefined>(undefined),
		});

	}

	export interface ReservedDBInstanceNotFoundFault {
	}
	export interface ReservedDBInstanceNotFoundFaultFormProperties {
	}
	export function CreateReservedDBInstanceNotFoundFaultFormGroup() {
		return new FormGroup<ReservedDBInstanceNotFoundFaultFormProperties>({
		});

	}


	/** Contains the result of a successful invocation of the <code>DescribeReservedDBInstancesOfferings</code> action. */
	export interface ReservedDBInstancesOfferingMessage {
		Marker?: string;
		ReservedDBInstancesOfferings?: Array<string>;
	}

	/** Contains the result of a successful invocation of the <code>DescribeReservedDBInstancesOfferings</code> action. */
	export interface ReservedDBInstancesOfferingMessageFormProperties {
		Marker: FormControl<string | null | undefined>,
	}
	export function CreateReservedDBInstancesOfferingMessageFormGroup() {
		return new FormGroup<ReservedDBInstancesOfferingMessageFormProperties>({
			Marker: new FormControl<string | null | undefined>(undefined),
		});

	}

	export interface ReservedDBInstancesOfferingNotFoundFault {
	}
	export interface ReservedDBInstancesOfferingNotFoundFaultFormProperties {
	}
	export function CreateReservedDBInstancesOfferingNotFoundFaultFormGroup() {
		return new FormGroup<ReservedDBInstancesOfferingNotFoundFaultFormProperties>({
		});

	}


	/** Contains the result of a successful invocation of the <code>DescribeSourceRegions</code> action. */
	export interface SourceRegionMessage {
		Marker?: string;
		SourceRegions?: Array<string>;
	}

	/** Contains the result of a successful invocation of the <code>DescribeSourceRegions</code> action. */
	export interface SourceRegionMessageFormProperties {
		Marker: FormControl<string | null | undefined>,
	}
	export function CreateSourceRegionMessageFormGroup() {
		return new FormGroup<SourceRegionMessageFormProperties>({
			Marker: new FormControl<string | null | undefined>(undefined),
		});

	}

	export interface DescribeValidDBInstanceModificationsResult {

		/** Information about valid modifications that you can make to your DB instance. Contains the result of a successful call to the <code>DescribeValidDBInstanceModifications</code> action. You can use this information when you call <code>ModifyDBInstance</code>. */
		ValidDBInstanceModificationsMessage?: ValidDBInstanceModificationsMessage;
	}
	export interface DescribeValidDBInstanceModificationsResultFormProperties {
	}
	export function CreateDescribeValidDBInstanceModificationsResultFormGroup() {
		return new FormGroup<DescribeValidDBInstanceModificationsResultFormProperties>({
		});

	}


	/** Information about valid modifications that you can make to your DB instance. Contains the result of a successful call to the <code>DescribeValidDBInstanceModifications</code> action. You can use this information when you call <code>ModifyDBInstance</code>. */
	export interface ValidDBInstanceModificationsMessage {
		Storage?: Array<string>;
		ValidProcessorFeatures?: Array<string>;
	}

	/** Information about valid modifications that you can make to your DB instance. Contains the result of a successful call to the <code>DescribeValidDBInstanceModifications</code> action. You can use this information when you call <code>ModifyDBInstance</code>. */
	export interface ValidDBInstanceModificationsMessageFormProperties {
	}
	export function CreateValidDBInstanceModificationsMessageFormGroup() {
		return new FormGroup<ValidDBInstanceModificationsMessageFormProperties>({
		});

	}


	/** This data type is used as a response element to <code>DownloadDBLogFilePortion</code>. */
	export interface DownloadDBLogFilePortionDetails {
		LogFileData?: string;
		Marker?: string;
		AdditionalDataPending?: boolean | null;
	}

	/** This data type is used as a response element to <code>DownloadDBLogFilePortion</code>. */
	export interface DownloadDBLogFilePortionDetailsFormProperties {
		LogFileData: FormControl<string | null | undefined>,
		Marker: FormControl<string | null | undefined>,
		AdditionalDataPending: FormControl<boolean | null | undefined>,
	}
	export function CreateDownloadDBLogFilePortionDetailsFormGroup() {
		return new FormGroup<DownloadDBLogFilePortionDetailsFormProperties>({
			LogFileData: new FormControl<string | null | undefined>(undefined),
			Marker: new FormControl<string | null | undefined>(undefined),
			AdditionalDataPending: new FormControl<boolean | null | undefined>(undefined),
		});

	}

	export interface DBLogFileNotFoundFault {
	}
	export interface DBLogFileNotFoundFaultFormProperties {
	}
	export function CreateDBLogFileNotFoundFaultFormGroup() {
		return new FormGroup<DBLogFileNotFoundFaultFormProperties>({
		});

	}

	export interface FailoverDBClusterResult {

		/** <p>Contains the details of an Amazon Aurora DB cluster or Multi-AZ DB cluster.</p> <p>For an Amazon Aurora DB cluster, this data type is used as a response element in the operations <code>CreateDBCluster</code>, <code>DeleteDBCluster</code>, <code>DescribeDBClusters</code>, <code>FailoverDBCluster</code>, <code>ModifyDBCluster</code>, <code>PromoteReadReplicaDBCluster</code>, <code>RestoreDBClusterFromS3</code>, <code>RestoreDBClusterFromSnapshot</code>, <code>RestoreDBClusterToPointInTime</code>, <code>StartDBCluster</code>, and <code>StopDBCluster</code>.</p> <p>For a Multi-AZ DB cluster, this data type is used as a response element in the operations <code>CreateDBCluster</code>, <code>DeleteDBCluster</code>, <code>DescribeDBClusters</code>, <code>FailoverDBCluster</code>, <code>ModifyDBCluster</code>, <code>RebootDBCluster</code>, <code>RestoreDBClusterFromSnapshot</code>, and <code>RestoreDBClusterToPointInTime</code>.</p> <p>For more information on Amazon Aurora DB clusters, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/CHAP_AuroraOverview.html"> What is Amazon Aurora?</a> in the <i>Amazon Aurora User Guide.</i> </p> <p>For more information on Multi-AZ DB clusters, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/multi-az-db-clusters-concepts.html"> Multi-AZ deployments with two readable standby DB instances</a> in the <i>Amazon RDS User Guide.</i> </p> */
		DBCluster?: DBCluster;
	}
	export interface FailoverDBClusterResultFormProperties {
	}
	export function CreateFailoverDBClusterResultFormGroup() {
		return new FormGroup<FailoverDBClusterResultFormProperties>({
		});

	}

	export interface FailoverGlobalClusterResult {

		/** A data type representing an Aurora global database. */
		GlobalCluster?: GlobalCluster;
	}
	export interface FailoverGlobalClusterResultFormProperties {
	}
	export function CreateFailoverGlobalClusterResultFormGroup() {
		return new FormGroup<FailoverGlobalClusterResultFormProperties>({
		});

	}


	/** <p/> */
	export interface TagListMessage {
		TagList?: Array<string>;
	}

	/** <p/> */
	export interface TagListMessageFormProperties {
	}
	export function CreateTagListMessageFormGroup() {
		return new FormGroup<TagListMessageFormProperties>({
		});

	}

	export interface ModifyActivityStreamResponse {
		KmsKeyId?: string;
		KinesisStreamName?: string;
		Status?: ActivityStreamStatus;
		Mode?: ActivityStreamMode;
		EngineNativeAuditFieldsIncluded?: boolean | null;
		PolicyStatus?: ActivityStreamPolicyStatus;
	}
	export interface ModifyActivityStreamResponseFormProperties {
		KmsKeyId: FormControl<string | null | undefined>,
		KinesisStreamName: FormControl<string | null | undefined>,
		Status: FormControl<ActivityStreamStatus | null | undefined>,
		Mode: FormControl<ActivityStreamMode | null | undefined>,
		EngineNativeAuditFieldsIncluded: FormControl<boolean | null | undefined>,
		PolicyStatus: FormControl<ActivityStreamPolicyStatus | null | undefined>,
	}
	export function CreateModifyActivityStreamResponseFormGroup() {
		return new FormGroup<ModifyActivityStreamResponseFormProperties>({
			KmsKeyId: new FormControl<string | null | undefined>(undefined),
			KinesisStreamName: new FormControl<string | null | undefined>(undefined),
			Status: new FormControl<ActivityStreamStatus | null | undefined>(undefined),
			Mode: new FormControl<ActivityStreamMode | null | undefined>(undefined),
			EngineNativeAuditFieldsIncluded: new FormControl<boolean | null | undefined>(undefined),
			PolicyStatus: new FormControl<ActivityStreamPolicyStatus | null | undefined>(undefined),
		});

	}

	export interface ModifyCertificatesResult {

		/** <p>A CA certificate for an Amazon Web Services account.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/UsingWithRDS.SSL.html">Using SSL/TLS to encrypt a connection to a DB instance</a> in the <i>Amazon RDS User Guide</i> and <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/UsingWithRDS.SSL.html"> Using SSL/TLS to encrypt a connection to a DB cluster</a> in the <i>Amazon Aurora User Guide</i>.</p> */
		Certificate?: Certificate;
	}
	export interface ModifyCertificatesResultFormProperties {
	}
	export function CreateModifyCertificatesResultFormGroup() {
		return new FormGroup<ModifyCertificatesResultFormProperties>({
		});

	}


	/** <p>A CA certificate for an Amazon Web Services account.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/UsingWithRDS.SSL.html">Using SSL/TLS to encrypt a connection to a DB instance</a> in the <i>Amazon RDS User Guide</i> and <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/UsingWithRDS.SSL.html"> Using SSL/TLS to encrypt a connection to a DB cluster</a> in the <i>Amazon Aurora User Guide</i>.</p> */
	export interface Certificate {
		CertificateIdentifier?: string;
		CertificateType?: string;
		Thumbprint?: string;
		ValidFrom?: Date;
		ValidTill?: Date;
		CertificateArn?: string;
		CustomerOverride?: boolean | null;
		CustomerOverrideValidTill?: Date;
	}

	/** <p>A CA certificate for an Amazon Web Services account.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/UsingWithRDS.SSL.html">Using SSL/TLS to encrypt a connection to a DB instance</a> in the <i>Amazon RDS User Guide</i> and <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/UsingWithRDS.SSL.html"> Using SSL/TLS to encrypt a connection to a DB cluster</a> in the <i>Amazon Aurora User Guide</i>.</p> */
	export interface CertificateFormProperties {
		CertificateIdentifier: FormControl<string | null | undefined>,
		CertificateType: FormControl<string | null | undefined>,
		Thumbprint: FormControl<string | null | undefined>,
		ValidFrom: FormControl<Date | null | undefined>,
		ValidTill: FormControl<Date | null | undefined>,
		CertificateArn: FormControl<string | null | undefined>,
		CustomerOverride: FormControl<boolean | null | undefined>,
		CustomerOverrideValidTill: FormControl<Date | null | undefined>,
	}
	export function CreateCertificateFormGroup() {
		return new FormGroup<CertificateFormProperties>({
			CertificateIdentifier: new FormControl<string | null | undefined>(undefined),
			CertificateType: new FormControl<string | null | undefined>(undefined),
			Thumbprint: new FormControl<string | null | undefined>(undefined),
			ValidFrom: new FormControl<Date | null | undefined>(undefined),
			ValidTill: new FormControl<Date | null | undefined>(undefined),
			CertificateArn: new FormControl<string | null | undefined>(undefined),
			CustomerOverride: new FormControl<boolean | null | undefined>(undefined),
			CustomerOverrideValidTill: new FormControl<Date | null | undefined>(undefined),
		});

	}

	export interface DBClusterCapacityInfo {
		DBClusterIdentifier?: string;
		PendingCapacity?: number | null;
		CurrentCapacity?: number | null;
		SecondsBeforeTimeout?: number | null;
		TimeoutAction?: string;
	}
	export interface DBClusterCapacityInfoFormProperties {
		DBClusterIdentifier: FormControl<string | null | undefined>,
		PendingCapacity: FormControl<number | null | undefined>,
		CurrentCapacity: FormControl<number | null | undefined>,
		SecondsBeforeTimeout: FormControl<number | null | undefined>,
		TimeoutAction: FormControl<string | null | undefined>,
	}
	export function CreateDBClusterCapacityInfoFormGroup() {
		return new FormGroup<DBClusterCapacityInfoFormProperties>({
			DBClusterIdentifier: new FormControl<string | null | undefined>(undefined),
			PendingCapacity: new FormControl<number | null | undefined>(undefined),
			CurrentCapacity: new FormControl<number | null | undefined>(undefined),
			SecondsBeforeTimeout: new FormControl<number | null | undefined>(undefined),
			TimeoutAction: new FormControl<string | null | undefined>(undefined),
		});

	}

	export interface InvalidDBClusterCapacityFault {
	}
	export interface InvalidDBClusterCapacityFaultFormProperties {
	}
	export function CreateInvalidDBClusterCapacityFaultFormGroup() {
		return new FormGroup<InvalidDBClusterCapacityFaultFormProperties>({
		});

	}

	export interface ModifyDBClusterResult {

		/** <p>Contains the details of an Amazon Aurora DB cluster or Multi-AZ DB cluster.</p> <p>For an Amazon Aurora DB cluster, this data type is used as a response element in the operations <code>CreateDBCluster</code>, <code>DeleteDBCluster</code>, <code>DescribeDBClusters</code>, <code>FailoverDBCluster</code>, <code>ModifyDBCluster</code>, <code>PromoteReadReplicaDBCluster</code>, <code>RestoreDBClusterFromS3</code>, <code>RestoreDBClusterFromSnapshot</code>, <code>RestoreDBClusterToPointInTime</code>, <code>StartDBCluster</code>, and <code>StopDBCluster</code>.</p> <p>For a Multi-AZ DB cluster, this data type is used as a response element in the operations <code>CreateDBCluster</code>, <code>DeleteDBCluster</code>, <code>DescribeDBClusters</code>, <code>FailoverDBCluster</code>, <code>ModifyDBCluster</code>, <code>RebootDBCluster</code>, <code>RestoreDBClusterFromSnapshot</code>, and <code>RestoreDBClusterToPointInTime</code>.</p> <p>For more information on Amazon Aurora DB clusters, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/CHAP_AuroraOverview.html"> What is Amazon Aurora?</a> in the <i>Amazon Aurora User Guide.</i> </p> <p>For more information on Multi-AZ DB clusters, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/multi-az-db-clusters-concepts.html"> Multi-AZ deployments with two readable standby DB instances</a> in the <i>Amazon RDS User Guide.</i> </p> */
		DBCluster?: DBCluster;
	}
	export interface ModifyDBClusterResultFormProperties {
	}
	export function CreateModifyDBClusterResultFormGroup() {
		return new FormGroup<ModifyDBClusterResultFormProperties>({
		});

	}

	export interface StorageTypeNotAvailableFault {
	}
	export interface StorageTypeNotAvailableFaultFormProperties {
	}
	export function CreateStorageTypeNotAvailableFaultFormGroup() {
		return new FormGroup<StorageTypeNotAvailableFaultFormProperties>({
		});

	}


	/** <p/> */
	export interface DBClusterParameterGroupNameMessage {
		DBClusterParameterGroupName?: string;
	}

	/** <p/> */
	export interface DBClusterParameterGroupNameMessageFormProperties {
		DBClusterParameterGroupName: FormControl<string | null | undefined>,
	}
	export function CreateDBClusterParameterGroupNameMessageFormGroup() {
		return new FormGroup<DBClusterParameterGroupNameMessageFormProperties>({
			DBClusterParameterGroupName: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** <p>This data type is used as a request parameter in the <code>ModifyDBParameterGroup</code> and <code>ResetDBParameterGroup</code> actions.</p> <p>This data type is used as a response element in the <code>DescribeEngineDefaultParameters</code> and <code>DescribeDBParameters</code> actions.</p> */
	export interface Parameter {
		ParameterName?: string;
		ParameterValue?: string;
		Description?: string;
		Source?: string;
		ApplyType?: string;
		DataType?: string;
		AllowedValues?: string;
		IsModifiable?: boolean | null;
		MinimumEngineVersion?: string;
		ApplyMethod?: ApplyMethod;
		SupportedEngineModes?: Array<string>;
	}

	/** <p>This data type is used as a request parameter in the <code>ModifyDBParameterGroup</code> and <code>ResetDBParameterGroup</code> actions.</p> <p>This data type is used as a response element in the <code>DescribeEngineDefaultParameters</code> and <code>DescribeDBParameters</code> actions.</p> */
	export interface ParameterFormProperties {
		ParameterName: FormControl<string | null | undefined>,
		ParameterValue: FormControl<string | null | undefined>,
		Description: FormControl<string | null | undefined>,
		Source: FormControl<string | null | undefined>,
		ApplyType: FormControl<string | null | undefined>,
		DataType: FormControl<string | null | undefined>,
		AllowedValues: FormControl<string | null | undefined>,
		IsModifiable: FormControl<boolean | null | undefined>,
		MinimumEngineVersion: FormControl<string | null | undefined>,
		ApplyMethod: FormControl<ApplyMethod | null | undefined>,
	}
	export function CreateParameterFormGroup() {
		return new FormGroup<ParameterFormProperties>({
			ParameterName: new FormControl<string | null | undefined>(undefined),
			ParameterValue: new FormControl<string | null | undefined>(undefined),
			Description: new FormControl<string | null | undefined>(undefined),
			Source: new FormControl<string | null | undefined>(undefined),
			ApplyType: new FormControl<string | null | undefined>(undefined),
			DataType: new FormControl<string | null | undefined>(undefined),
			AllowedValues: new FormControl<string | null | undefined>(undefined),
			IsModifiable: new FormControl<boolean | null | undefined>(undefined),
			MinimumEngineVersion: new FormControl<string | null | undefined>(undefined),
			ApplyMethod: new FormControl<ApplyMethod | null | undefined>(undefined),
		});

	}

	export enum ApplyMethod { immediate = 0, 'pending-reboot' = 1 }

	export interface ModifyDBClusterSnapshotAttributeResult {

		/** <p>Contains the results of a successful call to the <code>DescribeDBClusterSnapshotAttributes</code> API action.</p> <p>Manual DB cluster snapshot attributes are used to authorize other Amazon Web Services accounts to copy or restore a manual DB cluster snapshot. For more information, see the <code>ModifyDBClusterSnapshotAttribute</code> API action.</p> */
		DBClusterSnapshotAttributesResult?: DBClusterSnapshotAttributesResult;
	}
	export interface ModifyDBClusterSnapshotAttributeResultFormProperties {
	}
	export function CreateModifyDBClusterSnapshotAttributeResultFormGroup() {
		return new FormGroup<ModifyDBClusterSnapshotAttributeResultFormProperties>({
		});

	}

	export interface SharedSnapshotQuotaExceededFault {
	}
	export interface SharedSnapshotQuotaExceededFaultFormProperties {
	}
	export function CreateSharedSnapshotQuotaExceededFaultFormGroup() {
		return new FormGroup<SharedSnapshotQuotaExceededFaultFormProperties>({
		});

	}

	export interface ModifyDBInstanceResult {

		/** <p>Contains the details of an Amazon RDS DB instance.</p> <p>This data type is used as a response element in the operations <code>CreateDBInstance</code>, <code>CreateDBInstanceReadReplica</code>, <code>DeleteDBInstance</code>, <code>DescribeDBInstances</code>, <code>ModifyDBInstance</code>, <code>PromoteReadReplica</code>, <code>RebootDBInstance</code>, <code>RestoreDBInstanceFromDBSnapshot</code>, <code>RestoreDBInstanceFromS3</code>, <code>RestoreDBInstanceToPointInTime</code>, <code>StartDBInstance</code>, and <code>StopDBInstance</code>.</p> */
		DBInstance?: DBInstance;
	}
	export interface ModifyDBInstanceResultFormProperties {
	}
	export function CreateModifyDBInstanceResultFormGroup() {
		return new FormGroup<ModifyDBInstanceResultFormProperties>({
		});

	}

	export interface DBUpgradeDependencyFailureFault {
	}
	export interface DBUpgradeDependencyFailureFaultFormProperties {
	}
	export function CreateDBUpgradeDependencyFailureFaultFormGroup() {
		return new FormGroup<DBUpgradeDependencyFailureFaultFormProperties>({
		});

	}


	/** Contains the result of a successful invocation of the <code>ModifyDBParameterGroup</code> or <code>ResetDBParameterGroup</code> action. */
	export interface DBParameterGroupNameMessage {
		DBParameterGroupName?: string;
	}

	/** Contains the result of a successful invocation of the <code>ModifyDBParameterGroup</code> or <code>ResetDBParameterGroup</code> action. */
	export interface DBParameterGroupNameMessageFormProperties {
		DBParameterGroupName: FormControl<string | null | undefined>,
	}
	export function CreateDBParameterGroupNameMessageFormGroup() {
		return new FormGroup<DBParameterGroupNameMessageFormProperties>({
			DBParameterGroupName: new FormControl<string | null | undefined>(undefined),
		});

	}

	export interface ModifyDBProxyResponse {
		DBProxy?: DBProxy;
	}
	export interface ModifyDBProxyResponseFormProperties {
	}
	export function CreateModifyDBProxyResponseFormGroup() {
		return new FormGroup<ModifyDBProxyResponseFormProperties>({
		});

	}

	export interface ModifyDBProxyEndpointResponse {
		DBProxyEndpoint?: DBProxyEndpoint;
	}
	export interface ModifyDBProxyEndpointResponseFormProperties {
	}
	export function CreateModifyDBProxyEndpointResponseFormGroup() {
		return new FormGroup<ModifyDBProxyEndpointResponseFormProperties>({
		});

	}

	export interface ModifyDBProxyTargetGroupResponse {
		DBProxyTargetGroup?: DBProxyTargetGroup;
	}
	export interface ModifyDBProxyTargetGroupResponseFormProperties {
	}
	export function CreateModifyDBProxyTargetGroupResponseFormGroup() {
		return new FormGroup<ModifyDBProxyTargetGroupResponseFormProperties>({
		});

	}

	export interface ModifyDBSnapshotResult {

		/** <p>Contains the details of an Amazon RDS DB snapshot.</p> <p>This data type is used as a response element in the <code>DescribeDBSnapshots</code> action.</p> */
		DBSnapshot?: DBSnapshot;
	}
	export interface ModifyDBSnapshotResultFormProperties {
	}
	export function CreateModifyDBSnapshotResultFormGroup() {
		return new FormGroup<ModifyDBSnapshotResultFormProperties>({
		});

	}

	export interface ModifyDBSnapshotAttributeResult {

		/** <p>Contains the results of a successful call to the <code>DescribeDBSnapshotAttributes</code> API action.</p> <p>Manual DB snapshot attributes are used to authorize other Amazon Web Services accounts to copy or restore a manual DB snapshot. For more information, see the <code>ModifyDBSnapshotAttribute</code> API action.</p> */
		DBSnapshotAttributesResult?: DBSnapshotAttributesResult;
	}
	export interface ModifyDBSnapshotAttributeResultFormProperties {
	}
	export function CreateModifyDBSnapshotAttributeResultFormGroup() {
		return new FormGroup<ModifyDBSnapshotAttributeResultFormProperties>({
		});

	}

	export interface ModifyDBSubnetGroupResult {

		/** <p>Contains the details of an Amazon RDS DB subnet group.</p> <p>This data type is used as a response element in the <code>DescribeDBSubnetGroups</code> action.</p> */
		DBSubnetGroup?: DBSubnetGroup;
	}
	export interface ModifyDBSubnetGroupResultFormProperties {
	}
	export function CreateModifyDBSubnetGroupResultFormGroup() {
		return new FormGroup<ModifyDBSubnetGroupResultFormProperties>({
		});

	}

	export interface SubnetAlreadyInUse {
	}
	export interface SubnetAlreadyInUseFormProperties {
	}
	export function CreateSubnetAlreadyInUseFormGroup() {
		return new FormGroup<SubnetAlreadyInUseFormProperties>({
		});

	}

	export interface ModifyEventSubscriptionResult {

		/** Contains the results of a successful invocation of the <code>DescribeEventSubscriptions</code> action. */
		EventSubscription?: EventSubscription;
	}
	export interface ModifyEventSubscriptionResultFormProperties {
	}
	export function CreateModifyEventSubscriptionResultFormGroup() {
		return new FormGroup<ModifyEventSubscriptionResultFormProperties>({
		});

	}

	export interface ModifyGlobalClusterResult {

		/** A data type representing an Aurora global database. */
		GlobalCluster?: GlobalCluster;
	}
	export interface ModifyGlobalClusterResultFormProperties {
	}
	export function CreateModifyGlobalClusterResultFormGroup() {
		return new FormGroup<ModifyGlobalClusterResultFormProperties>({
		});

	}

	export interface ModifyOptionGroupResult {

		/** <p/> */
		OptionGroup?: OptionGroup;
	}
	export interface ModifyOptionGroupResultFormProperties {
	}
	export function CreateModifyOptionGroupResultFormGroup() {
		return new FormGroup<ModifyOptionGroupResultFormProperties>({
		});

	}


	/** A list of all available options */
	export interface OptionConfiguration {

		/** Required */
		OptionName: string;
		Port?: number | null;
		OptionVersion?: string;
		DBSecurityGroupMemberships?: Array<string>;
		VpcSecurityGroupMemberships?: Array<string>;
		OptionSettings?: Array<string>;
	}

	/** A list of all available options */
	export interface OptionConfigurationFormProperties {

		/** Required */
		OptionName: FormControl<string | null | undefined>,
		Port: FormControl<number | null | undefined>,
		OptionVersion: FormControl<string | null | undefined>,
	}
	export function CreateOptionConfigurationFormGroup() {
		return new FormGroup<OptionConfigurationFormProperties>({
			OptionName: new FormControl<string | null | undefined>(undefined, [Validators.required]),
			Port: new FormControl<number | null | undefined>(undefined),
			OptionVersion: new FormControl<string | null | undefined>(undefined),
		});

	}

	export interface PromoteReadReplicaResult {

		/** <p>Contains the details of an Amazon RDS DB instance.</p> <p>This data type is used as a response element in the operations <code>CreateDBInstance</code>, <code>CreateDBInstanceReadReplica</code>, <code>DeleteDBInstance</code>, <code>DescribeDBInstances</code>, <code>ModifyDBInstance</code>, <code>PromoteReadReplica</code>, <code>RebootDBInstance</code>, <code>RestoreDBInstanceFromDBSnapshot</code>, <code>RestoreDBInstanceFromS3</code>, <code>RestoreDBInstanceToPointInTime</code>, <code>StartDBInstance</code>, and <code>StopDBInstance</code>.</p> */
		DBInstance?: DBInstance;
	}
	export interface PromoteReadReplicaResultFormProperties {
	}
	export function CreatePromoteReadReplicaResultFormGroup() {
		return new FormGroup<PromoteReadReplicaResultFormProperties>({
		});

	}

	export interface PromoteReadReplicaDBClusterResult {

		/** <p>Contains the details of an Amazon Aurora DB cluster or Multi-AZ DB cluster.</p> <p>For an Amazon Aurora DB cluster, this data type is used as a response element in the operations <code>CreateDBCluster</code>, <code>DeleteDBCluster</code>, <code>DescribeDBClusters</code>, <code>FailoverDBCluster</code>, <code>ModifyDBCluster</code>, <code>PromoteReadReplicaDBCluster</code>, <code>RestoreDBClusterFromS3</code>, <code>RestoreDBClusterFromSnapshot</code>, <code>RestoreDBClusterToPointInTime</code>, <code>StartDBCluster</code>, and <code>StopDBCluster</code>.</p> <p>For a Multi-AZ DB cluster, this data type is used as a response element in the operations <code>CreateDBCluster</code>, <code>DeleteDBCluster</code>, <code>DescribeDBClusters</code>, <code>FailoverDBCluster</code>, <code>ModifyDBCluster</code>, <code>RebootDBCluster</code>, <code>RestoreDBClusterFromSnapshot</code>, and <code>RestoreDBClusterToPointInTime</code>.</p> <p>For more information on Amazon Aurora DB clusters, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/CHAP_AuroraOverview.html"> What is Amazon Aurora?</a> in the <i>Amazon Aurora User Guide.</i> </p> <p>For more information on Multi-AZ DB clusters, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/multi-az-db-clusters-concepts.html"> Multi-AZ deployments with two readable standby DB instances</a> in the <i>Amazon RDS User Guide.</i> </p> */
		DBCluster?: DBCluster;
	}
	export interface PromoteReadReplicaDBClusterResultFormProperties {
	}
	export function CreatePromoteReadReplicaDBClusterResultFormGroup() {
		return new FormGroup<PromoteReadReplicaDBClusterResultFormProperties>({
		});

	}

	export interface PurchaseReservedDBInstancesOfferingResult {

		/** This data type is used as a response element in the <code>DescribeReservedDBInstances</code> and <code>PurchaseReservedDBInstancesOffering</code> actions. */
		ReservedDBInstance?: ReservedDBInstance;
	}
	export interface PurchaseReservedDBInstancesOfferingResultFormProperties {
	}
	export function CreatePurchaseReservedDBInstancesOfferingResultFormGroup() {
		return new FormGroup<PurchaseReservedDBInstancesOfferingResultFormProperties>({
		});

	}


	/** This data type is used as a response element in the <code>DescribeReservedDBInstances</code> and <code>PurchaseReservedDBInstancesOffering</code> actions. */
	export interface ReservedDBInstance {
		ReservedDBInstanceId?: string;
		ReservedDBInstancesOfferingId?: string;
		DBInstanceClass?: string;
		StartTime?: Date;
		Duration?: number | null;
		FixedPrice?: number | null;
		UsagePrice?: number | null;
		CurrencyCode?: string;
		DBInstanceCount?: number | null;
		ProductDescription?: string;
		OfferingType?: string;
		MultiAZ?: boolean | null;
		State?: string;
		RecurringCharges?: Array<string>;
		ReservedDBInstanceArn?: string;
		LeaseId?: string;
	}

	/** This data type is used as a response element in the <code>DescribeReservedDBInstances</code> and <code>PurchaseReservedDBInstancesOffering</code> actions. */
	export interface ReservedDBInstanceFormProperties {
		ReservedDBInstanceId: FormControl<string | null | undefined>,
		ReservedDBInstancesOfferingId: FormControl<string | null | undefined>,
		DBInstanceClass: FormControl<string | null | undefined>,
		StartTime: FormControl<Date | null | undefined>,
		Duration: FormControl<number | null | undefined>,
		FixedPrice: FormControl<number | null | undefined>,
		UsagePrice: FormControl<number | null | undefined>,
		CurrencyCode: FormControl<string | null | undefined>,
		DBInstanceCount: FormControl<number | null | undefined>,
		ProductDescription: FormControl<string | null | undefined>,
		OfferingType: FormControl<string | null | undefined>,
		MultiAZ: FormControl<boolean | null | undefined>,
		State: FormControl<string | null | undefined>,
		ReservedDBInstanceArn: FormControl<string | null | undefined>,
		LeaseId: FormControl<string | null | undefined>,
	}
	export function CreateReservedDBInstanceFormGroup() {
		return new FormGroup<ReservedDBInstanceFormProperties>({
			ReservedDBInstanceId: new FormControl<string | null | undefined>(undefined),
			ReservedDBInstancesOfferingId: new FormControl<string | null | undefined>(undefined),
			DBInstanceClass: new FormControl<string | null | undefined>(undefined),
			StartTime: new FormControl<Date | null | undefined>(undefined),
			Duration: new FormControl<number | null | undefined>(undefined),
			FixedPrice: new FormControl<number | null | undefined>(undefined),
			UsagePrice: new FormControl<number | null | undefined>(undefined),
			CurrencyCode: new FormControl<string | null | undefined>(undefined),
			DBInstanceCount: new FormControl<number | null | undefined>(undefined),
			ProductDescription: new FormControl<string | null | undefined>(undefined),
			OfferingType: new FormControl<string | null | undefined>(undefined),
			MultiAZ: new FormControl<boolean | null | undefined>(undefined),
			State: new FormControl<string | null | undefined>(undefined),
			ReservedDBInstanceArn: new FormControl<string | null | undefined>(undefined),
			LeaseId: new FormControl<string | null | undefined>(undefined),
		});

	}

	export interface ReservedDBInstanceAlreadyExistsFault {
	}
	export interface ReservedDBInstanceAlreadyExistsFaultFormProperties {
	}
	export function CreateReservedDBInstanceAlreadyExistsFaultFormGroup() {
		return new FormGroup<ReservedDBInstanceAlreadyExistsFaultFormProperties>({
		});

	}

	export interface ReservedDBInstanceQuotaExceededFault {
	}
	export interface ReservedDBInstanceQuotaExceededFaultFormProperties {
	}
	export function CreateReservedDBInstanceQuotaExceededFaultFormGroup() {
		return new FormGroup<ReservedDBInstanceQuotaExceededFaultFormProperties>({
		});

	}

	export interface RebootDBClusterResult {

		/** <p>Contains the details of an Amazon Aurora DB cluster or Multi-AZ DB cluster.</p> <p>For an Amazon Aurora DB cluster, this data type is used as a response element in the operations <code>CreateDBCluster</code>, <code>DeleteDBCluster</code>, <code>DescribeDBClusters</code>, <code>FailoverDBCluster</code>, <code>ModifyDBCluster</code>, <code>PromoteReadReplicaDBCluster</code>, <code>RestoreDBClusterFromS3</code>, <code>RestoreDBClusterFromSnapshot</code>, <code>RestoreDBClusterToPointInTime</code>, <code>StartDBCluster</code>, and <code>StopDBCluster</code>.</p> <p>For a Multi-AZ DB cluster, this data type is used as a response element in the operations <code>CreateDBCluster</code>, <code>DeleteDBCluster</code>, <code>DescribeDBClusters</code>, <code>FailoverDBCluster</code>, <code>ModifyDBCluster</code>, <code>RebootDBCluster</code>, <code>RestoreDBClusterFromSnapshot</code>, and <code>RestoreDBClusterToPointInTime</code>.</p> <p>For more information on Amazon Aurora DB clusters, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/CHAP_AuroraOverview.html"> What is Amazon Aurora?</a> in the <i>Amazon Aurora User Guide.</i> </p> <p>For more information on Multi-AZ DB clusters, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/multi-az-db-clusters-concepts.html"> Multi-AZ deployments with two readable standby DB instances</a> in the <i>Amazon RDS User Guide.</i> </p> */
		DBCluster?: DBCluster;
	}
	export interface RebootDBClusterResultFormProperties {
	}
	export function CreateRebootDBClusterResultFormGroup() {
		return new FormGroup<RebootDBClusterResultFormProperties>({
		});

	}

	export interface RebootDBInstanceResult {

		/** <p>Contains the details of an Amazon RDS DB instance.</p> <p>This data type is used as a response element in the operations <code>CreateDBInstance</code>, <code>CreateDBInstanceReadReplica</code>, <code>DeleteDBInstance</code>, <code>DescribeDBInstances</code>, <code>ModifyDBInstance</code>, <code>PromoteReadReplica</code>, <code>RebootDBInstance</code>, <code>RestoreDBInstanceFromDBSnapshot</code>, <code>RestoreDBInstanceFromS3</code>, <code>RestoreDBInstanceToPointInTime</code>, <code>StartDBInstance</code>, and <code>StopDBInstance</code>.</p> */
		DBInstance?: DBInstance;
	}
	export interface RebootDBInstanceResultFormProperties {
	}
	export function CreateRebootDBInstanceResultFormGroup() {
		return new FormGroup<RebootDBInstanceResultFormProperties>({
		});

	}

	export interface RegisterDBProxyTargetsResponse {
		DBProxyTargets?: Array<DBProxyTarget>;
	}
	export interface RegisterDBProxyTargetsResponseFormProperties {
	}
	export function CreateRegisterDBProxyTargetsResponseFormGroup() {
		return new FormGroup<RegisterDBProxyTargetsResponseFormProperties>({
		});

	}

	export interface DBProxyTargetAlreadyRegisteredFault {
	}
	export interface DBProxyTargetAlreadyRegisteredFaultFormProperties {
	}
	export function CreateDBProxyTargetAlreadyRegisteredFaultFormGroup() {
		return new FormGroup<DBProxyTargetAlreadyRegisteredFaultFormProperties>({
		});

	}

	export interface InsufficientAvailableIPsInSubnetFault {
	}
	export interface InsufficientAvailableIPsInSubnetFaultFormProperties {
	}
	export function CreateInsufficientAvailableIPsInSubnetFaultFormGroup() {
		return new FormGroup<InsufficientAvailableIPsInSubnetFaultFormProperties>({
		});

	}

	export interface RemoveFromGlobalClusterResult {

		/** A data type representing an Aurora global database. */
		GlobalCluster?: GlobalCluster;
	}
	export interface RemoveFromGlobalClusterResultFormProperties {
	}
	export function CreateRemoveFromGlobalClusterResultFormGroup() {
		return new FormGroup<RemoveFromGlobalClusterResultFormProperties>({
		});

	}

	export interface DBClusterRoleNotFoundFault {
	}
	export interface DBClusterRoleNotFoundFaultFormProperties {
	}
	export function CreateDBClusterRoleNotFoundFaultFormGroup() {
		return new FormGroup<DBClusterRoleNotFoundFaultFormProperties>({
		});

	}

	export interface DBInstanceRoleNotFoundFault {
	}
	export interface DBInstanceRoleNotFoundFaultFormProperties {
	}
	export function CreateDBInstanceRoleNotFoundFaultFormGroup() {
		return new FormGroup<DBInstanceRoleNotFoundFaultFormProperties>({
		});

	}

	export interface RemoveSourceIdentifierFromSubscriptionResult {

		/** Contains the results of a successful invocation of the <code>DescribeEventSubscriptions</code> action. */
		EventSubscription?: EventSubscription;
	}
	export interface RemoveSourceIdentifierFromSubscriptionResultFormProperties {
	}
	export function CreateRemoveSourceIdentifierFromSubscriptionResultFormGroup() {
		return new FormGroup<RemoveSourceIdentifierFromSubscriptionResultFormProperties>({
		});

	}

	export interface RestoreDBClusterFromS3Result {

		/** <p>Contains the details of an Amazon Aurora DB cluster or Multi-AZ DB cluster.</p> <p>For an Amazon Aurora DB cluster, this data type is used as a response element in the operations <code>CreateDBCluster</code>, <code>DeleteDBCluster</code>, <code>DescribeDBClusters</code>, <code>FailoverDBCluster</code>, <code>ModifyDBCluster</code>, <code>PromoteReadReplicaDBCluster</code>, <code>RestoreDBClusterFromS3</code>, <code>RestoreDBClusterFromSnapshot</code>, <code>RestoreDBClusterToPointInTime</code>, <code>StartDBCluster</code>, and <code>StopDBCluster</code>.</p> <p>For a Multi-AZ DB cluster, this data type is used as a response element in the operations <code>CreateDBCluster</code>, <code>DeleteDBCluster</code>, <code>DescribeDBClusters</code>, <code>FailoverDBCluster</code>, <code>ModifyDBCluster</code>, <code>RebootDBCluster</code>, <code>RestoreDBClusterFromSnapshot</code>, and <code>RestoreDBClusterToPointInTime</code>.</p> <p>For more information on Amazon Aurora DB clusters, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/CHAP_AuroraOverview.html"> What is Amazon Aurora?</a> in the <i>Amazon Aurora User Guide.</i> </p> <p>For more information on Multi-AZ DB clusters, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/multi-az-db-clusters-concepts.html"> Multi-AZ deployments with two readable standby DB instances</a> in the <i>Amazon RDS User Guide.</i> </p> */
		DBCluster?: DBCluster;
	}
	export interface RestoreDBClusterFromS3ResultFormProperties {
	}
	export function CreateRestoreDBClusterFromS3ResultFormGroup() {
		return new FormGroup<RestoreDBClusterFromS3ResultFormProperties>({
		});

	}

	export interface InvalidS3BucketFault {
	}
	export interface InvalidS3BucketFaultFormProperties {
	}
	export function CreateInvalidS3BucketFaultFormGroup() {
		return new FormGroup<InvalidS3BucketFaultFormProperties>({
		});

	}

	export interface RestoreDBClusterFromSnapshotResult {

		/** <p>Contains the details of an Amazon Aurora DB cluster or Multi-AZ DB cluster.</p> <p>For an Amazon Aurora DB cluster, this data type is used as a response element in the operations <code>CreateDBCluster</code>, <code>DeleteDBCluster</code>, <code>DescribeDBClusters</code>, <code>FailoverDBCluster</code>, <code>ModifyDBCluster</code>, <code>PromoteReadReplicaDBCluster</code>, <code>RestoreDBClusterFromS3</code>, <code>RestoreDBClusterFromSnapshot</code>, <code>RestoreDBClusterToPointInTime</code>, <code>StartDBCluster</code>, and <code>StopDBCluster</code>.</p> <p>For a Multi-AZ DB cluster, this data type is used as a response element in the operations <code>CreateDBCluster</code>, <code>DeleteDBCluster</code>, <code>DescribeDBClusters</code>, <code>FailoverDBCluster</code>, <code>ModifyDBCluster</code>, <code>RebootDBCluster</code>, <code>RestoreDBClusterFromSnapshot</code>, and <code>RestoreDBClusterToPointInTime</code>.</p> <p>For more information on Amazon Aurora DB clusters, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/CHAP_AuroraOverview.html"> What is Amazon Aurora?</a> in the <i>Amazon Aurora User Guide.</i> </p> <p>For more information on Multi-AZ DB clusters, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/multi-az-db-clusters-concepts.html"> Multi-AZ deployments with two readable standby DB instances</a> in the <i>Amazon RDS User Guide.</i> </p> */
		DBCluster?: DBCluster;
	}
	export interface RestoreDBClusterFromSnapshotResultFormProperties {
	}
	export function CreateRestoreDBClusterFromSnapshotResultFormGroup() {
		return new FormGroup<RestoreDBClusterFromSnapshotResultFormProperties>({
		});

	}

	export interface InsufficientDBClusterCapacityFault {
	}
	export interface InsufficientDBClusterCapacityFaultFormProperties {
	}
	export function CreateInsufficientDBClusterCapacityFaultFormGroup() {
		return new FormGroup<InsufficientDBClusterCapacityFaultFormProperties>({
		});

	}

	export interface InvalidRestoreFault {
	}
	export interface InvalidRestoreFaultFormProperties {
	}
	export function CreateInvalidRestoreFaultFormGroup() {
		return new FormGroup<InvalidRestoreFaultFormProperties>({
		});

	}

	export interface RestoreDBClusterToPointInTimeResult {

		/** <p>Contains the details of an Amazon Aurora DB cluster or Multi-AZ DB cluster.</p> <p>For an Amazon Aurora DB cluster, this data type is used as a response element in the operations <code>CreateDBCluster</code>, <code>DeleteDBCluster</code>, <code>DescribeDBClusters</code>, <code>FailoverDBCluster</code>, <code>ModifyDBCluster</code>, <code>PromoteReadReplicaDBCluster</code>, <code>RestoreDBClusterFromS3</code>, <code>RestoreDBClusterFromSnapshot</code>, <code>RestoreDBClusterToPointInTime</code>, <code>StartDBCluster</code>, and <code>StopDBCluster</code>.</p> <p>For a Multi-AZ DB cluster, this data type is used as a response element in the operations <code>CreateDBCluster</code>, <code>DeleteDBCluster</code>, <code>DescribeDBClusters</code>, <code>FailoverDBCluster</code>, <code>ModifyDBCluster</code>, <code>RebootDBCluster</code>, <code>RestoreDBClusterFromSnapshot</code>, and <code>RestoreDBClusterToPointInTime</code>.</p> <p>For more information on Amazon Aurora DB clusters, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/CHAP_AuroraOverview.html"> What is Amazon Aurora?</a> in the <i>Amazon Aurora User Guide.</i> </p> <p>For more information on Multi-AZ DB clusters, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/multi-az-db-clusters-concepts.html"> Multi-AZ deployments with two readable standby DB instances</a> in the <i>Amazon RDS User Guide.</i> </p> */
		DBCluster?: DBCluster;
	}
	export interface RestoreDBClusterToPointInTimeResultFormProperties {
	}
	export function CreateRestoreDBClusterToPointInTimeResultFormGroup() {
		return new FormGroup<RestoreDBClusterToPointInTimeResultFormProperties>({
		});

	}

	export interface RestoreDBInstanceFromDBSnapshotResult {

		/** <p>Contains the details of an Amazon RDS DB instance.</p> <p>This data type is used as a response element in the operations <code>CreateDBInstance</code>, <code>CreateDBInstanceReadReplica</code>, <code>DeleteDBInstance</code>, <code>DescribeDBInstances</code>, <code>ModifyDBInstance</code>, <code>PromoteReadReplica</code>, <code>RebootDBInstance</code>, <code>RestoreDBInstanceFromDBSnapshot</code>, <code>RestoreDBInstanceFromS3</code>, <code>RestoreDBInstanceToPointInTime</code>, <code>StartDBInstance</code>, and <code>StopDBInstance</code>.</p> */
		DBInstance?: DBInstance;
	}
	export interface RestoreDBInstanceFromDBSnapshotResultFormProperties {
	}
	export function CreateRestoreDBInstanceFromDBSnapshotResultFormGroup() {
		return new FormGroup<RestoreDBInstanceFromDBSnapshotResultFormProperties>({
		});

	}

	export interface RestoreDBInstanceFromS3Result {

		/** <p>Contains the details of an Amazon RDS DB instance.</p> <p>This data type is used as a response element in the operations <code>CreateDBInstance</code>, <code>CreateDBInstanceReadReplica</code>, <code>DeleteDBInstance</code>, <code>DescribeDBInstances</code>, <code>ModifyDBInstance</code>, <code>PromoteReadReplica</code>, <code>RebootDBInstance</code>, <code>RestoreDBInstanceFromDBSnapshot</code>, <code>RestoreDBInstanceFromS3</code>, <code>RestoreDBInstanceToPointInTime</code>, <code>StartDBInstance</code>, and <code>StopDBInstance</code>.</p> */
		DBInstance?: DBInstance;
	}
	export interface RestoreDBInstanceFromS3ResultFormProperties {
	}
	export function CreateRestoreDBInstanceFromS3ResultFormGroup() {
		return new FormGroup<RestoreDBInstanceFromS3ResultFormProperties>({
		});

	}

	export interface RestoreDBInstanceToPointInTimeResult {

		/** <p>Contains the details of an Amazon RDS DB instance.</p> <p>This data type is used as a response element in the operations <code>CreateDBInstance</code>, <code>CreateDBInstanceReadReplica</code>, <code>DeleteDBInstance</code>, <code>DescribeDBInstances</code>, <code>ModifyDBInstance</code>, <code>PromoteReadReplica</code>, <code>RebootDBInstance</code>, <code>RestoreDBInstanceFromDBSnapshot</code>, <code>RestoreDBInstanceFromS3</code>, <code>RestoreDBInstanceToPointInTime</code>, <code>StartDBInstance</code>, and <code>StopDBInstance</code>.</p> */
		DBInstance?: DBInstance;
	}
	export interface RestoreDBInstanceToPointInTimeResultFormProperties {
	}
	export function CreateRestoreDBInstanceToPointInTimeResultFormGroup() {
		return new FormGroup<RestoreDBInstanceToPointInTimeResultFormProperties>({
		});

	}

	export interface PointInTimeRestoreNotEnabledFault {
	}
	export interface PointInTimeRestoreNotEnabledFaultFormProperties {
	}
	export function CreatePointInTimeRestoreNotEnabledFaultFormGroup() {
		return new FormGroup<PointInTimeRestoreNotEnabledFaultFormProperties>({
		});

	}

	export interface RevokeDBSecurityGroupIngressResult {

		/** <p>Contains the details for an Amazon RDS DB security group.</p> <p>This data type is used as a response element in the <code>DescribeDBSecurityGroups</code> action.</p> */
		DBSecurityGroup?: DBSecurityGroup;
	}
	export interface RevokeDBSecurityGroupIngressResultFormProperties {
	}
	export function CreateRevokeDBSecurityGroupIngressResultFormGroup() {
		return new FormGroup<RevokeDBSecurityGroupIngressResultFormProperties>({
		});

	}

	export interface StartActivityStreamResponse {
		KmsKeyId?: string;
		KinesisStreamName?: string;
		Status?: ActivityStreamStatus;
		Mode?: ActivityStreamMode;
		ApplyImmediately?: boolean | null;
		EngineNativeAuditFieldsIncluded?: boolean | null;
	}
	export interface StartActivityStreamResponseFormProperties {
		KmsKeyId: FormControl<string | null | undefined>,
		KinesisStreamName: FormControl<string | null | undefined>,
		Status: FormControl<ActivityStreamStatus | null | undefined>,
		Mode: FormControl<ActivityStreamMode | null | undefined>,
		ApplyImmediately: FormControl<boolean | null | undefined>,
		EngineNativeAuditFieldsIncluded: FormControl<boolean | null | undefined>,
	}
	export function CreateStartActivityStreamResponseFormGroup() {
		return new FormGroup<StartActivityStreamResponseFormProperties>({
			KmsKeyId: new FormControl<string | null | undefined>(undefined),
			KinesisStreamName: new FormControl<string | null | undefined>(undefined),
			Status: new FormControl<ActivityStreamStatus | null | undefined>(undefined),
			Mode: new FormControl<ActivityStreamMode | null | undefined>(undefined),
			ApplyImmediately: new FormControl<boolean | null | undefined>(undefined),
			EngineNativeAuditFieldsIncluded: new FormControl<boolean | null | undefined>(undefined),
		});

	}

	export interface StartDBClusterResult {

		/** <p>Contains the details of an Amazon Aurora DB cluster or Multi-AZ DB cluster.</p> <p>For an Amazon Aurora DB cluster, this data type is used as a response element in the operations <code>CreateDBCluster</code>, <code>DeleteDBCluster</code>, <code>DescribeDBClusters</code>, <code>FailoverDBCluster</code>, <code>ModifyDBCluster</code>, <code>PromoteReadReplicaDBCluster</code>, <code>RestoreDBClusterFromS3</code>, <code>RestoreDBClusterFromSnapshot</code>, <code>RestoreDBClusterToPointInTime</code>, <code>StartDBCluster</code>, and <code>StopDBCluster</code>.</p> <p>For a Multi-AZ DB cluster, this data type is used as a response element in the operations <code>CreateDBCluster</code>, <code>DeleteDBCluster</code>, <code>DescribeDBClusters</code>, <code>FailoverDBCluster</code>, <code>ModifyDBCluster</code>, <code>RebootDBCluster</code>, <code>RestoreDBClusterFromSnapshot</code>, and <code>RestoreDBClusterToPointInTime</code>.</p> <p>For more information on Amazon Aurora DB clusters, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/CHAP_AuroraOverview.html"> What is Amazon Aurora?</a> in the <i>Amazon Aurora User Guide.</i> </p> <p>For more information on Multi-AZ DB clusters, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/multi-az-db-clusters-concepts.html"> Multi-AZ deployments with two readable standby DB instances</a> in the <i>Amazon RDS User Guide.</i> </p> */
		DBCluster?: DBCluster;
	}
	export interface StartDBClusterResultFormProperties {
	}
	export function CreateStartDBClusterResultFormGroup() {
		return new FormGroup<StartDBClusterResultFormProperties>({
		});

	}

	export interface StartDBInstanceResult {

		/** <p>Contains the details of an Amazon RDS DB instance.</p> <p>This data type is used as a response element in the operations <code>CreateDBInstance</code>, <code>CreateDBInstanceReadReplica</code>, <code>DeleteDBInstance</code>, <code>DescribeDBInstances</code>, <code>ModifyDBInstance</code>, <code>PromoteReadReplica</code>, <code>RebootDBInstance</code>, <code>RestoreDBInstanceFromDBSnapshot</code>, <code>RestoreDBInstanceFromS3</code>, <code>RestoreDBInstanceToPointInTime</code>, <code>StartDBInstance</code>, and <code>StopDBInstance</code>.</p> */
		DBInstance?: DBInstance;
	}
	export interface StartDBInstanceResultFormProperties {
	}
	export function CreateStartDBInstanceResultFormGroup() {
		return new FormGroup<StartDBInstanceResultFormProperties>({
		});

	}

	export interface StartDBInstanceAutomatedBackupsReplicationResult {

		/** An automated backup of a DB instance. It consists of system backups, transaction logs, and the database instance properties that existed at the time you deleted the source instance. */
		DBInstanceAutomatedBackup?: DBInstanceAutomatedBackup;
	}
	export interface StartDBInstanceAutomatedBackupsReplicationResultFormProperties {
	}
	export function CreateStartDBInstanceAutomatedBackupsReplicationResultFormGroup() {
		return new FormGroup<StartDBInstanceAutomatedBackupsReplicationResultFormProperties>({
		});

	}

	export interface ExportTaskAlreadyExistsFault {
	}
	export interface ExportTaskAlreadyExistsFaultFormProperties {
	}
	export function CreateExportTaskAlreadyExistsFaultFormGroup() {
		return new FormGroup<ExportTaskAlreadyExistsFaultFormProperties>({
		});

	}

	export interface IamRoleNotFoundFault {
	}
	export interface IamRoleNotFoundFaultFormProperties {
	}
	export function CreateIamRoleNotFoundFaultFormGroup() {
		return new FormGroup<IamRoleNotFoundFaultFormProperties>({
		});

	}

	export interface IamRoleMissingPermissionsFault {
	}
	export interface IamRoleMissingPermissionsFaultFormProperties {
	}
	export function CreateIamRoleMissingPermissionsFaultFormGroup() {
		return new FormGroup<IamRoleMissingPermissionsFaultFormProperties>({
		});

	}

	export interface InvalidExportOnlyFault {
	}
	export interface InvalidExportOnlyFaultFormProperties {
	}
	export function CreateInvalidExportOnlyFaultFormGroup() {
		return new FormGroup<InvalidExportOnlyFaultFormProperties>({
		});

	}

	export interface InvalidExportSourceStateFault {
	}
	export interface InvalidExportSourceStateFaultFormProperties {
	}
	export function CreateInvalidExportSourceStateFaultFormGroup() {
		return new FormGroup<InvalidExportSourceStateFaultFormProperties>({
		});

	}

	export interface StopActivityStreamResponse {
		KmsKeyId?: string;
		KinesisStreamName?: string;
		Status?: ActivityStreamStatus;
	}
	export interface StopActivityStreamResponseFormProperties {
		KmsKeyId: FormControl<string | null | undefined>,
		KinesisStreamName: FormControl<string | null | undefined>,
		Status: FormControl<ActivityStreamStatus | null | undefined>,
	}
	export function CreateStopActivityStreamResponseFormGroup() {
		return new FormGroup<StopActivityStreamResponseFormProperties>({
			KmsKeyId: new FormControl<string | null | undefined>(undefined),
			KinesisStreamName: new FormControl<string | null | undefined>(undefined),
			Status: new FormControl<ActivityStreamStatus | null | undefined>(undefined),
		});

	}

	export interface StopDBClusterResult {

		/** <p>Contains the details of an Amazon Aurora DB cluster or Multi-AZ DB cluster.</p> <p>For an Amazon Aurora DB cluster, this data type is used as a response element in the operations <code>CreateDBCluster</code>, <code>DeleteDBCluster</code>, <code>DescribeDBClusters</code>, <code>FailoverDBCluster</code>, <code>ModifyDBCluster</code>, <code>PromoteReadReplicaDBCluster</code>, <code>RestoreDBClusterFromS3</code>, <code>RestoreDBClusterFromSnapshot</code>, <code>RestoreDBClusterToPointInTime</code>, <code>StartDBCluster</code>, and <code>StopDBCluster</code>.</p> <p>For a Multi-AZ DB cluster, this data type is used as a response element in the operations <code>CreateDBCluster</code>, <code>DeleteDBCluster</code>, <code>DescribeDBClusters</code>, <code>FailoverDBCluster</code>, <code>ModifyDBCluster</code>, <code>RebootDBCluster</code>, <code>RestoreDBClusterFromSnapshot</code>, and <code>RestoreDBClusterToPointInTime</code>.</p> <p>For more information on Amazon Aurora DB clusters, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/CHAP_AuroraOverview.html"> What is Amazon Aurora?</a> in the <i>Amazon Aurora User Guide.</i> </p> <p>For more information on Multi-AZ DB clusters, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/multi-az-db-clusters-concepts.html"> Multi-AZ deployments with two readable standby DB instances</a> in the <i>Amazon RDS User Guide.</i> </p> */
		DBCluster?: DBCluster;
	}
	export interface StopDBClusterResultFormProperties {
	}
	export function CreateStopDBClusterResultFormGroup() {
		return new FormGroup<StopDBClusterResultFormProperties>({
		});

	}

	export interface StopDBInstanceResult {

		/** <p>Contains the details of an Amazon RDS DB instance.</p> <p>This data type is used as a response element in the operations <code>CreateDBInstance</code>, <code>CreateDBInstanceReadReplica</code>, <code>DeleteDBInstance</code>, <code>DescribeDBInstances</code>, <code>ModifyDBInstance</code>, <code>PromoteReadReplica</code>, <code>RebootDBInstance</code>, <code>RestoreDBInstanceFromDBSnapshot</code>, <code>RestoreDBInstanceFromS3</code>, <code>RestoreDBInstanceToPointInTime</code>, <code>StartDBInstance</code>, and <code>StopDBInstance</code>.</p> */
		DBInstance?: DBInstance;
	}
	export interface StopDBInstanceResultFormProperties {
	}
	export function CreateStopDBInstanceResultFormGroup() {
		return new FormGroup<StopDBInstanceResultFormProperties>({
		});

	}

	export interface StopDBInstanceAutomatedBackupsReplicationResult {

		/** An automated backup of a DB instance. It consists of system backups, transaction logs, and the database instance properties that existed at the time you deleted the source instance. */
		DBInstanceAutomatedBackup?: DBInstanceAutomatedBackup;
	}
	export interface StopDBInstanceAutomatedBackupsReplicationResultFormProperties {
	}
	export function CreateStopDBInstanceAutomatedBackupsReplicationResultFormGroup() {
		return new FormGroup<StopDBInstanceAutomatedBackupsReplicationResultFormProperties>({
		});

	}

	export interface SwitchoverBlueGreenDeploymentResponse {

		/** <p>Details about a blue/green deployment.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/blue-green-deployments.html">Using Amazon RDS Blue/Green Deployments for database updates</a> in the <i>Amazon RDS User Guide</i> and <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/blue-green-deployments.html">Using Amazon RDS Blue/Green Deployments for database updates</a> in the <i>Amazon Aurora User Guide</i>.</p> */
		BlueGreenDeployment?: BlueGreenDeployment;
	}
	export interface SwitchoverBlueGreenDeploymentResponseFormProperties {
	}
	export function CreateSwitchoverBlueGreenDeploymentResponseFormGroup() {
		return new FormGroup<SwitchoverBlueGreenDeploymentResponseFormProperties>({
		});

	}

	export interface SwitchoverReadReplicaResult {

		/** <p>Contains the details of an Amazon RDS DB instance.</p> <p>This data type is used as a response element in the operations <code>CreateDBInstance</code>, <code>CreateDBInstanceReadReplica</code>, <code>DeleteDBInstance</code>, <code>DescribeDBInstances</code>, <code>ModifyDBInstance</code>, <code>PromoteReadReplica</code>, <code>RebootDBInstance</code>, <code>RestoreDBInstanceFromDBSnapshot</code>, <code>RestoreDBInstanceFromS3</code>, <code>RestoreDBInstanceToPointInTime</code>, <code>StartDBInstance</code>, and <code>StopDBInstance</code>.</p> */
		DBInstance?: DBInstance;
	}
	export interface SwitchoverReadReplicaResultFormProperties {
	}
	export function CreateSwitchoverReadReplicaResultFormGroup() {
		return new FormGroup<SwitchoverReadReplicaResultFormProperties>({
		});

	}


	/** <p>Describes a quota for an Amazon Web Services account.</p> <p>The following are account quotas:</p> <ul> <li> <p> <code>AllocatedStorage</code> - The total allocated storage per account, in GiB. The used value is the total allocated storage in the account, in GiB.</p> </li> <li> <p> <code>AuthorizationsPerDBSecurityGroup</code> - The number of ingress rules per DB security group. The used value is the highest number of ingress rules in a DB security group in the account. Other DB security groups in the account might have a lower number of ingress rules.</p> </li> <li> <p> <code>CustomEndpointsPerDBCluster</code> - The number of custom endpoints per DB cluster. The used value is the highest number of custom endpoints in a DB clusters in the account. Other DB clusters in the account might have a lower number of custom endpoints.</p> </li> <li> <p> <code>DBClusterParameterGroups</code> - The number of DB cluster parameter groups per account, excluding default parameter groups. The used value is the count of nondefault DB cluster parameter groups in the account.</p> </li> <li> <p> <code>DBClusterRoles</code> - The number of associated Amazon Web Services Identity and Access Management (IAM) roles per DB cluster. The used value is the highest number of associated IAM roles for a DB cluster in the account. Other DB clusters in the account might have a lower number of associated IAM roles.</p> </li> <li> <p> <code>DBClusters</code> - The number of DB clusters per account. The used value is the count of DB clusters in the account.</p> </li> <li> <p> <code>DBInstanceRoles</code> - The number of associated IAM roles per DB instance. The used value is the highest number of associated IAM roles for a DB instance in the account. Other DB instances in the account might have a lower number of associated IAM roles.</p> </li> <li> <p> <code>DBInstances</code> - The number of DB instances per account. The used value is the count of the DB instances in the account.</p> <p>Amazon RDS DB instances, Amazon Aurora DB instances, Amazon Neptune instances, and Amazon DocumentDB instances apply to this quota.</p> </li> <li> <p> <code>DBParameterGroups</code> - The number of DB parameter groups per account, excluding default parameter groups. The used value is the count of nondefault DB parameter groups in the account.</p> </li> <li> <p> <code>DBSecurityGroups</code> - The number of DB security groups (not VPC security groups) per account, excluding the default security group. The used value is the count of nondefault DB security groups in the account.</p> </li> <li> <p> <code>DBSubnetGroups</code> - The number of DB subnet groups per account. The used value is the count of the DB subnet groups in the account.</p> </li> <li> <p> <code>EventSubscriptions</code> - The number of event subscriptions per account. The used value is the count of the event subscriptions in the account.</p> </li> <li> <p> <code>ManualClusterSnapshots</code> - The number of manual DB cluster snapshots per account. The used value is the count of the manual DB cluster snapshots in the account.</p> </li> <li> <p> <code>ManualSnapshots</code> - The number of manual DB instance snapshots per account. The used value is the count of the manual DB instance snapshots in the account.</p> </li> <li> <p> <code>OptionGroups</code> - The number of DB option groups per account, excluding default option groups. The used value is the count of nondefault DB option groups in the account.</p> </li> <li> <p> <code>ReadReplicasPerMaster</code> - The number of read replicas per DB instance. The used value is the highest number of read replicas for a DB instance in the account. Other DB instances in the account might have a lower number of read replicas.</p> </li> <li> <p> <code>ReservedDBInstances</code> - The number of reserved DB instances per account. The used value is the count of the active reserved DB instances in the account.</p> </li> <li> <p> <code>SubnetsPerDBSubnetGroup</code> - The number of subnets per DB subnet group. The used value is highest number of subnets for a DB subnet group in the account. Other DB subnet groups in the account might have a lower number of subnets.</p> </li> </ul> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_Limits.html">Quotas for Amazon RDS</a> in the <i>Amazon RDS User Guide</i> and <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/CHAP_Limits.html">Quotas for Amazon Aurora</a> in the <i>Amazon Aurora User Guide</i>.</p> */
	export interface AccountQuota {
		AccountQuotaName?: string;
		Used?: number | null;
		Max?: number | null;
	}

	/** <p>Describes a quota for an Amazon Web Services account.</p> <p>The following are account quotas:</p> <ul> <li> <p> <code>AllocatedStorage</code> - The total allocated storage per account, in GiB. The used value is the total allocated storage in the account, in GiB.</p> </li> <li> <p> <code>AuthorizationsPerDBSecurityGroup</code> - The number of ingress rules per DB security group. The used value is the highest number of ingress rules in a DB security group in the account. Other DB security groups in the account might have a lower number of ingress rules.</p> </li> <li> <p> <code>CustomEndpointsPerDBCluster</code> - The number of custom endpoints per DB cluster. The used value is the highest number of custom endpoints in a DB clusters in the account. Other DB clusters in the account might have a lower number of custom endpoints.</p> </li> <li> <p> <code>DBClusterParameterGroups</code> - The number of DB cluster parameter groups per account, excluding default parameter groups. The used value is the count of nondefault DB cluster parameter groups in the account.</p> </li> <li> <p> <code>DBClusterRoles</code> - The number of associated Amazon Web Services Identity and Access Management (IAM) roles per DB cluster. The used value is the highest number of associated IAM roles for a DB cluster in the account. Other DB clusters in the account might have a lower number of associated IAM roles.</p> </li> <li> <p> <code>DBClusters</code> - The number of DB clusters per account. The used value is the count of DB clusters in the account.</p> </li> <li> <p> <code>DBInstanceRoles</code> - The number of associated IAM roles per DB instance. The used value is the highest number of associated IAM roles for a DB instance in the account. Other DB instances in the account might have a lower number of associated IAM roles.</p> </li> <li> <p> <code>DBInstances</code> - The number of DB instances per account. The used value is the count of the DB instances in the account.</p> <p>Amazon RDS DB instances, Amazon Aurora DB instances, Amazon Neptune instances, and Amazon DocumentDB instances apply to this quota.</p> </li> <li> <p> <code>DBParameterGroups</code> - The number of DB parameter groups per account, excluding default parameter groups. The used value is the count of nondefault DB parameter groups in the account.</p> </li> <li> <p> <code>DBSecurityGroups</code> - The number of DB security groups (not VPC security groups) per account, excluding the default security group. The used value is the count of nondefault DB security groups in the account.</p> </li> <li> <p> <code>DBSubnetGroups</code> - The number of DB subnet groups per account. The used value is the count of the DB subnet groups in the account.</p> </li> <li> <p> <code>EventSubscriptions</code> - The number of event subscriptions per account. The used value is the count of the event subscriptions in the account.</p> </li> <li> <p> <code>ManualClusterSnapshots</code> - The number of manual DB cluster snapshots per account. The used value is the count of the manual DB cluster snapshots in the account.</p> </li> <li> <p> <code>ManualSnapshots</code> - The number of manual DB instance snapshots per account. The used value is the count of the manual DB instance snapshots in the account.</p> </li> <li> <p> <code>OptionGroups</code> - The number of DB option groups per account, excluding default option groups. The used value is the count of nondefault DB option groups in the account.</p> </li> <li> <p> <code>ReadReplicasPerMaster</code> - The number of read replicas per DB instance. The used value is the highest number of read replicas for a DB instance in the account. Other DB instances in the account might have a lower number of read replicas.</p> </li> <li> <p> <code>ReservedDBInstances</code> - The number of reserved DB instances per account. The used value is the count of the active reserved DB instances in the account.</p> </li> <li> <p> <code>SubnetsPerDBSubnetGroup</code> - The number of subnets per DB subnet group. The used value is highest number of subnets for a DB subnet group in the account. Other DB subnet groups in the account might have a lower number of subnets.</p> </li> </ul> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_Limits.html">Quotas for Amazon RDS</a> in the <i>Amazon RDS User Guide</i> and <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/CHAP_Limits.html">Quotas for Amazon Aurora</a> in the <i>Amazon Aurora User Guide</i>.</p> */
	export interface AccountQuotaFormProperties {
		AccountQuotaName: FormControl<string | null | undefined>,
		Used: FormControl<number | null | undefined>,
		Max: FormControl<number | null | undefined>,
	}
	export function CreateAccountQuotaFormGroup() {
		return new FormGroup<AccountQuotaFormProperties>({
			AccountQuotaName: new FormControl<string | null | undefined>(undefined),
			Used: new FormControl<number | null | undefined>(undefined),
			Max: new FormControl<number | null | undefined>(undefined),
		});

	}

	export interface AddRoleToDBClusterMessage {

		/** Required */
		DBClusterIdentifier: string;

		/** Required */
		RoleArn: string;
		FeatureName?: string;
	}
	export interface AddRoleToDBClusterMessageFormProperties {

		/** Required */
		DBClusterIdentifier: FormControl<string | null | undefined>,

		/** Required */
		RoleArn: FormControl<string | null | undefined>,
		FeatureName: FormControl<string | null | undefined>,
	}
	export function CreateAddRoleToDBClusterMessageFormGroup() {
		return new FormGroup<AddRoleToDBClusterMessageFormProperties>({
			DBClusterIdentifier: new FormControl<string | null | undefined>(undefined, [Validators.required]),
			RoleArn: new FormControl<string | null | undefined>(undefined, [Validators.required]),
			FeatureName: new FormControl<string | null | undefined>(undefined),
		});

	}

	export interface AddRoleToDBInstanceMessage {

		/** Required */
		DBInstanceIdentifier: string;

		/** Required */
		RoleArn: string;

		/** Required */
		FeatureName: string;
	}
	export interface AddRoleToDBInstanceMessageFormProperties {

		/** Required */
		DBInstanceIdentifier: FormControl<string | null | undefined>,

		/** Required */
		RoleArn: FormControl<string | null | undefined>,

		/** Required */
		FeatureName: FormControl<string | null | undefined>,
	}
	export function CreateAddRoleToDBInstanceMessageFormGroup() {
		return new FormGroup<AddRoleToDBInstanceMessageFormProperties>({
			DBInstanceIdentifier: new FormControl<string | null | undefined>(undefined, [Validators.required]),
			RoleArn: new FormControl<string | null | undefined>(undefined, [Validators.required]),
			FeatureName: new FormControl<string | null | undefined>(undefined, [Validators.required]),
		});

	}


	/** <p/> */
	export interface AddSourceIdentifierToSubscriptionMessage {

		/** Required */
		SubscriptionName: string;

		/** Required */
		SourceIdentifier: string;
	}

	/** <p/> */
	export interface AddSourceIdentifierToSubscriptionMessageFormProperties {

		/** Required */
		SubscriptionName: FormControl<string | null | undefined>,

		/** Required */
		SourceIdentifier: FormControl<string | null | undefined>,
	}
	export function CreateAddSourceIdentifierToSubscriptionMessageFormGroup() {
		return new FormGroup<AddSourceIdentifierToSubscriptionMessageFormProperties>({
			SubscriptionName: new FormControl<string | null | undefined>(undefined, [Validators.required]),
			SourceIdentifier: new FormControl<string | null | undefined>(undefined, [Validators.required]),
		});

	}


	/** <p/> */
	export interface AddTagsToResourceMessage {

		/** Required */
		ResourceName: string;

		/** Required */
		Tags: Array<string>;
	}

	/** <p/> */
	export interface AddTagsToResourceMessageFormProperties {

		/** Required */
		ResourceName: FormControl<string | null | undefined>,
	}
	export function CreateAddTagsToResourceMessageFormGroup() {
		return new FormGroup<AddTagsToResourceMessageFormProperties>({
			ResourceName: new FormControl<string | null | undefined>(undefined, [Validators.required]),
		});

	}


	/** <p/> */
	export interface ApplyPendingMaintenanceActionMessage {

		/** Required */
		ResourceIdentifier: string;

		/** Required */
		ApplyAction: string;

		/** Required */
		OptInType: string;
	}

	/** <p/> */
	export interface ApplyPendingMaintenanceActionMessageFormProperties {

		/** Required */
		ResourceIdentifier: FormControl<string | null | undefined>,

		/** Required */
		ApplyAction: FormControl<string | null | undefined>,

		/** Required */
		OptInType: FormControl<string | null | undefined>,
	}
	export function CreateApplyPendingMaintenanceActionMessageFormGroup() {
		return new FormGroup<ApplyPendingMaintenanceActionMessageFormProperties>({
			ResourceIdentifier: new FormControl<string | null | undefined>(undefined, [Validators.required]),
			ApplyAction: new FormControl<string | null | undefined>(undefined, [Validators.required]),
			OptInType: new FormControl<string | null | undefined>(undefined, [Validators.required]),
		});

	}

	export enum AuditPolicyState { locked = 0, unlocked = 1 }


	/** <p/> */
	export interface AuthorizeDBSecurityGroupIngressMessage {

		/** Required */
		DBSecurityGroupName: string;
		CIDRIP?: string;
		EC2SecurityGroupName?: string;
		EC2SecurityGroupId?: string;
		EC2SecurityGroupOwnerId?: string;
	}

	/** <p/> */
	export interface AuthorizeDBSecurityGroupIngressMessageFormProperties {

		/** Required */
		DBSecurityGroupName: FormControl<string | null | undefined>,
		CIDRIP: FormControl<string | null | undefined>,
		EC2SecurityGroupName: FormControl<string | null | undefined>,
		EC2SecurityGroupId: FormControl<string | null | undefined>,
		EC2SecurityGroupOwnerId: FormControl<string | null | undefined>,
	}
	export function CreateAuthorizeDBSecurityGroupIngressMessageFormGroup() {
		return new FormGroup<AuthorizeDBSecurityGroupIngressMessageFormProperties>({
			DBSecurityGroupName: new FormControl<string | null | undefined>(undefined, [Validators.required]),
			CIDRIP: new FormControl<string | null | undefined>(undefined),
			EC2SecurityGroupName: new FormControl<string | null | undefined>(undefined),
			EC2SecurityGroupId: new FormControl<string | null | undefined>(undefined),
			EC2SecurityGroupOwnerId: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** <p>Contains Availability Zone information.</p> <p>This data type is used as an element in the <code>OrderableDBInstanceOption</code> data type.</p> */
	export interface AvailabilityZone {
		Name?: string;
	}

	/** <p>Contains Availability Zone information.</p> <p>This data type is used as an element in the <code>OrderableDBInstanceOption</code> data type.</p> */
	export interface AvailabilityZoneFormProperties {
		Name: FormControl<string | null | undefined>,
	}
	export function CreateAvailabilityZoneFormGroup() {
		return new FormGroup<AvailabilityZoneFormProperties>({
			Name: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** <p>Contains the available processor feature information for the DB instance class of a DB instance.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.DBInstanceClass.html#USER_ConfigureProcessor">Configuring the Processor of the DB Instance Class</a> in the <i>Amazon RDS User Guide. </i> </p> */
	export interface AvailableProcessorFeature {
		Name?: string;
		DefaultValue?: string;
		AllowedValues?: string;
	}

	/** <p>Contains the available processor feature information for the DB instance class of a DB instance.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.DBInstanceClass.html#USER_ConfigureProcessor">Configuring the Processor of the DB Instance Class</a> in the <i>Amazon RDS User Guide. </i> </p> */
	export interface AvailableProcessorFeatureFormProperties {
		Name: FormControl<string | null | undefined>,
		DefaultValue: FormControl<string | null | undefined>,
		AllowedValues: FormControl<string | null | undefined>,
	}
	export function CreateAvailableProcessorFeatureFormGroup() {
		return new FormGroup<AvailableProcessorFeatureFormProperties>({
			Name: new FormControl<string | null | undefined>(undefined),
			DefaultValue: new FormControl<string | null | undefined>(undefined),
			AllowedValues: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** <p/> */
	export interface BacktrackDBClusterMessage {

		/** Required */
		DBClusterIdentifier: string;

		/** Required */
		BacktrackTo: Date;
		Force?: boolean | null;
		UseEarliestTimeOnPointInTimeUnavailable?: boolean | null;
	}

	/** <p/> */
	export interface BacktrackDBClusterMessageFormProperties {

		/** Required */
		DBClusterIdentifier: FormControl<string | null | undefined>,

		/** Required */
		BacktrackTo: FormControl<Date | null | undefined>,
		Force: FormControl<boolean | null | undefined>,
		UseEarliestTimeOnPointInTimeUnavailable: FormControl<boolean | null | undefined>,
	}
	export function CreateBacktrackDBClusterMessageFormGroup() {
		return new FormGroup<BacktrackDBClusterMessageFormProperties>({
			DBClusterIdentifier: new FormControl<string | null | undefined>(undefined, [Validators.required]),
			BacktrackTo: new FormControl<Date | null | undefined>(undefined, [Validators.required]),
			Force: new FormControl<boolean | null | undefined>(undefined),
			UseEarliestTimeOnPointInTimeUnavailable: new FormControl<boolean | null | undefined>(undefined),
		});

	}

	export interface CancelExportTaskMessage {

		/** Required */
		ExportTaskIdentifier: string;
	}
	export interface CancelExportTaskMessageFormProperties {

		/** Required */
		ExportTaskIdentifier: FormControl<string | null | undefined>,
	}
	export function CreateCancelExportTaskMessageFormGroup() {
		return new FormGroup<CancelExportTaskMessageFormProperties>({
			ExportTaskIdentifier: new FormControl<string | null | undefined>(undefined, [Validators.required]),
		});

	}


	/** <p>The configuration setting for the log types to be enabled for export to CloudWatch Logs for a specific DB instance or DB cluster.</p> <p>The <code>EnableLogTypes</code> and <code>DisableLogTypes</code> arrays determine which logs will be exported (or not exported) to CloudWatch Logs. The values within these arrays depend on the DB engine being used.</p> <p>For more information about exporting CloudWatch Logs for Amazon RDS DB instances, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_LogAccess.html#USER_LogAccess.Procedural.UploadtoCloudWatch">Publishing Database Logs to Amazon CloudWatch Logs </a> in the <i>Amazon RDS User Guide</i>.</p> <p>For more information about exporting CloudWatch Logs for Amazon Aurora DB clusters, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/USER_LogAccess.html#USER_LogAccess.Procedural.UploadtoCloudWatch">Publishing Database Logs to Amazon CloudWatch Logs</a> in the <i>Amazon Aurora User Guide</i>.</p> */
	export interface CloudwatchLogsExportConfiguration {
		EnableLogTypes?: Array<string>;
		DisableLogTypes?: Array<string>;
	}

	/** <p>The configuration setting for the log types to be enabled for export to CloudWatch Logs for a specific DB instance or DB cluster.</p> <p>The <code>EnableLogTypes</code> and <code>DisableLogTypes</code> arrays determine which logs will be exported (or not exported) to CloudWatch Logs. The values within these arrays depend on the DB engine being used.</p> <p>For more information about exporting CloudWatch Logs for Amazon RDS DB instances, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_LogAccess.html#USER_LogAccess.Procedural.UploadtoCloudWatch">Publishing Database Logs to Amazon CloudWatch Logs </a> in the <i>Amazon RDS User Guide</i>.</p> <p>For more information about exporting CloudWatch Logs for Amazon Aurora DB clusters, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/USER_LogAccess.html#USER_LogAccess.Procedural.UploadtoCloudWatch">Publishing Database Logs to Amazon CloudWatch Logs</a> in the <i>Amazon Aurora User Guide</i>.</p> */
	export interface CloudwatchLogsExportConfigurationFormProperties {
	}
	export function CreateCloudwatchLogsExportConfigurationFormGroup() {
		return new FormGroup<CloudwatchLogsExportConfigurationFormProperties>({
		});

	}


	/** Specifies the settings that control the size and behavior of the connection pool associated with a <code>DBProxyTargetGroup</code>. */
	export interface ConnectionPoolConfiguration {
		MaxConnectionsPercent?: number | null;
		MaxIdleConnectionsPercent?: number | null;
		ConnectionBorrowTimeout?: number | null;
		SessionPinningFilters?: Array<string>;
		InitQuery?: string;
	}

	/** Specifies the settings that control the size and behavior of the connection pool associated with a <code>DBProxyTargetGroup</code>. */
	export interface ConnectionPoolConfigurationFormProperties {
		MaxConnectionsPercent: FormControl<number | null | undefined>,
		MaxIdleConnectionsPercent: FormControl<number | null | undefined>,
		ConnectionBorrowTimeout: FormControl<number | null | undefined>,
		InitQuery: FormControl<string | null | undefined>,
	}
	export function CreateConnectionPoolConfigurationFormGroup() {
		return new FormGroup<ConnectionPoolConfigurationFormProperties>({
			MaxConnectionsPercent: new FormControl<number | null | undefined>(undefined),
			MaxIdleConnectionsPercent: new FormControl<number | null | undefined>(undefined),
			ConnectionBorrowTimeout: new FormControl<number | null | undefined>(undefined),
			InitQuery: new FormControl<string | null | undefined>(undefined),
		});

	}

	export interface CopyDBClusterParameterGroupMessage {

		/** Required */
		SourceDBClusterParameterGroupIdentifier: string;

		/** Required */
		TargetDBClusterParameterGroupIdentifier: string;

		/** Required */
		TargetDBClusterParameterGroupDescription: string;

		/** A list of tags. For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Tagging.html">Tagging Amazon RDS Resources</a> in the <i>Amazon RDS User Guide.</i> */
		Tags?: Array<string>;
	}
	export interface CopyDBClusterParameterGroupMessageFormProperties {

		/** Required */
		SourceDBClusterParameterGroupIdentifier: FormControl<string | null | undefined>,

		/** Required */
		TargetDBClusterParameterGroupIdentifier: FormControl<string | null | undefined>,

		/** Required */
		TargetDBClusterParameterGroupDescription: FormControl<string | null | undefined>,
	}
	export function CreateCopyDBClusterParameterGroupMessageFormGroup() {
		return new FormGroup<CopyDBClusterParameterGroupMessageFormProperties>({
			SourceDBClusterParameterGroupIdentifier: new FormControl<string | null | undefined>(undefined, [Validators.required]),
			TargetDBClusterParameterGroupIdentifier: new FormControl<string | null | undefined>(undefined, [Validators.required]),
			TargetDBClusterParameterGroupDescription: new FormControl<string | null | undefined>(undefined, [Validators.required]),
		});

	}


	/** <p/> */
	export interface CopyDBClusterSnapshotMessage {

		/** Required */
		SourceDBClusterSnapshotIdentifier: string;

		/** Required */
		TargetDBClusterSnapshotIdentifier: string;
		KmsKeyId?: string;
		PreSignedUrl?: string;
		CopyTags?: boolean | null;

		/** A list of tags. For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Tagging.html">Tagging Amazon RDS Resources</a> in the <i>Amazon RDS User Guide.</i> */
		Tags?: Array<string>;
		SourceRegion?: string;
	}

	/** <p/> */
	export interface CopyDBClusterSnapshotMessageFormProperties {

		/** Required */
		SourceDBClusterSnapshotIdentifier: FormControl<string | null | undefined>,

		/** Required */
		TargetDBClusterSnapshotIdentifier: FormControl<string | null | undefined>,
		KmsKeyId: FormControl<string | null | undefined>,
		PreSignedUrl: FormControl<string | null | undefined>,
		CopyTags: FormControl<boolean | null | undefined>,
		SourceRegion: FormControl<string | null | undefined>,
	}
	export function CreateCopyDBClusterSnapshotMessageFormGroup() {
		return new FormGroup<CopyDBClusterSnapshotMessageFormProperties>({
			SourceDBClusterSnapshotIdentifier: new FormControl<string | null | undefined>(undefined, [Validators.required]),
			TargetDBClusterSnapshotIdentifier: new FormControl<string | null | undefined>(undefined, [Validators.required]),
			KmsKeyId: new FormControl<string | null | undefined>(undefined),
			PreSignedUrl: new FormControl<string | null | undefined>(undefined),
			CopyTags: new FormControl<boolean | null | undefined>(undefined),
			SourceRegion: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** <p/> */
	export interface CopyDBParameterGroupMessage {

		/** Required */
		SourceDBParameterGroupIdentifier: string;

		/** Required */
		TargetDBParameterGroupIdentifier: string;

		/** Required */
		TargetDBParameterGroupDescription: string;

		/** A list of tags. For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Tagging.html">Tagging Amazon RDS Resources</a> in the <i>Amazon RDS User Guide.</i> */
		Tags?: Array<string>;
	}

	/** <p/> */
	export interface CopyDBParameterGroupMessageFormProperties {

		/** Required */
		SourceDBParameterGroupIdentifier: FormControl<string | null | undefined>,

		/** Required */
		TargetDBParameterGroupIdentifier: FormControl<string | null | undefined>,

		/** Required */
		TargetDBParameterGroupDescription: FormControl<string | null | undefined>,
	}
	export function CreateCopyDBParameterGroupMessageFormGroup() {
		return new FormGroup<CopyDBParameterGroupMessageFormProperties>({
			SourceDBParameterGroupIdentifier: new FormControl<string | null | undefined>(undefined, [Validators.required]),
			TargetDBParameterGroupIdentifier: new FormControl<string | null | undefined>(undefined, [Validators.required]),
			TargetDBParameterGroupDescription: new FormControl<string | null | undefined>(undefined, [Validators.required]),
		});

	}


	/** <p/> */
	export interface CopyDBSnapshotMessage {

		/** Required */
		SourceDBSnapshotIdentifier: string;

		/** Required */
		TargetDBSnapshotIdentifier: string;
		KmsKeyId?: string;

		/** A list of tags. For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Tagging.html">Tagging Amazon RDS Resources</a> in the <i>Amazon RDS User Guide.</i> */
		Tags?: Array<string>;
		CopyTags?: boolean | null;
		PreSignedUrl?: string;
		OptionGroupName?: string;
		TargetCustomAvailabilityZone?: string;
		CopyOptionGroup?: boolean | null;
		SourceRegion?: string;
	}

	/** <p/> */
	export interface CopyDBSnapshotMessageFormProperties {

		/** Required */
		SourceDBSnapshotIdentifier: FormControl<string | null | undefined>,

		/** Required */
		TargetDBSnapshotIdentifier: FormControl<string | null | undefined>,
		KmsKeyId: FormControl<string | null | undefined>,
		CopyTags: FormControl<boolean | null | undefined>,
		PreSignedUrl: FormControl<string | null | undefined>,
		OptionGroupName: FormControl<string | null | undefined>,
		TargetCustomAvailabilityZone: FormControl<string | null | undefined>,
		CopyOptionGroup: FormControl<boolean | null | undefined>,
		SourceRegion: FormControl<string | null | undefined>,
	}
	export function CreateCopyDBSnapshotMessageFormGroup() {
		return new FormGroup<CopyDBSnapshotMessageFormProperties>({
			SourceDBSnapshotIdentifier: new FormControl<string | null | undefined>(undefined, [Validators.required]),
			TargetDBSnapshotIdentifier: new FormControl<string | null | undefined>(undefined, [Validators.required]),
			KmsKeyId: new FormControl<string | null | undefined>(undefined),
			CopyTags: new FormControl<boolean | null | undefined>(undefined),
			PreSignedUrl: new FormControl<string | null | undefined>(undefined),
			OptionGroupName: new FormControl<string | null | undefined>(undefined),
			TargetCustomAvailabilityZone: new FormControl<string | null | undefined>(undefined),
			CopyOptionGroup: new FormControl<boolean | null | undefined>(undefined),
			SourceRegion: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** <p/> */
	export interface CopyOptionGroupMessage {

		/** Required */
		SourceOptionGroupIdentifier: string;

		/** Required */
		TargetOptionGroupIdentifier: string;

		/** Required */
		TargetOptionGroupDescription: string;

		/** A list of tags. For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Tagging.html">Tagging Amazon RDS Resources</a> in the <i>Amazon RDS User Guide.</i> */
		Tags?: Array<string>;
	}

	/** <p/> */
	export interface CopyOptionGroupMessageFormProperties {

		/** Required */
		SourceOptionGroupIdentifier: FormControl<string | null | undefined>,

		/** Required */
		TargetOptionGroupIdentifier: FormControl<string | null | undefined>,

		/** Required */
		TargetOptionGroupDescription: FormControl<string | null | undefined>,
	}
	export function CreateCopyOptionGroupMessageFormGroup() {
		return new FormGroup<CopyOptionGroupMessageFormProperties>({
			SourceOptionGroupIdentifier: new FormControl<string | null | undefined>(undefined, [Validators.required]),
			TargetOptionGroupIdentifier: new FormControl<string | null | undefined>(undefined, [Validators.required]),
			TargetOptionGroupDescription: new FormControl<string | null | undefined>(undefined, [Validators.required]),
		});

	}

	export interface CreateBlueGreenDeploymentRequest {

		/** Required */
		BlueGreenDeploymentName: string;

		/** Required */
		Source: string;
		TargetEngineVersion?: string;
		TargetDBParameterGroupName?: string;
		TargetDBClusterParameterGroupName?: string;
		Tags?: Array<string>;
	}
	export interface CreateBlueGreenDeploymentRequestFormProperties {

		/** Required */
		BlueGreenDeploymentName: FormControl<string | null | undefined>,

		/** Required */
		Source: FormControl<string | null | undefined>,
		TargetEngineVersion: FormControl<string | null | undefined>,
		TargetDBParameterGroupName: FormControl<string | null | undefined>,
		TargetDBClusterParameterGroupName: FormControl<string | null | undefined>,
	}
	export function CreateCreateBlueGreenDeploymentRequestFormGroup() {
		return new FormGroup<CreateBlueGreenDeploymentRequestFormProperties>({
			BlueGreenDeploymentName: new FormControl<string | null | undefined>(undefined, [Validators.required]),
			Source: new FormControl<string | null | undefined>(undefined, [Validators.required]),
			TargetEngineVersion: new FormControl<string | null | undefined>(undefined),
			TargetDBParameterGroupName: new FormControl<string | null | undefined>(undefined),
			TargetDBClusterParameterGroupName: new FormControl<string | null | undefined>(undefined),
		});

	}

	export interface CreateCustomDBEngineVersionMessage {

		/** Required */
		Engine: string;

		/** Required */
		EngineVersion: string;
		DatabaseInstallationFilesS3BucketName?: string;
		DatabaseInstallationFilesS3Prefix?: string;
		ImageId?: string;
		KMSKeyId?: string;
		Description?: string;
		Manifest?: string;

		/** A list of tags. For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Tagging.html">Tagging Amazon RDS Resources</a> in the <i>Amazon RDS User Guide.</i> */
		Tags?: Array<string>;
	}
	export interface CreateCustomDBEngineVersionMessageFormProperties {

		/** Required */
		Engine: FormControl<string | null | undefined>,

		/** Required */
		EngineVersion: FormControl<string | null | undefined>,
		DatabaseInstallationFilesS3BucketName: FormControl<string | null | undefined>,
		DatabaseInstallationFilesS3Prefix: FormControl<string | null | undefined>,
		ImageId: FormControl<string | null | undefined>,
		KMSKeyId: FormControl<string | null | undefined>,
		Description: FormControl<string | null | undefined>,
		Manifest: FormControl<string | null | undefined>,
	}
	export function CreateCreateCustomDBEngineVersionMessageFormGroup() {
		return new FormGroup<CreateCustomDBEngineVersionMessageFormProperties>({
			Engine: new FormControl<string | null | undefined>(undefined, [Validators.required]),
			EngineVersion: new FormControl<string | null | undefined>(undefined, [Validators.required]),
			DatabaseInstallationFilesS3BucketName: new FormControl<string | null | undefined>(undefined),
			DatabaseInstallationFilesS3Prefix: new FormControl<string | null | undefined>(undefined),
			ImageId: new FormControl<string | null | undefined>(undefined),
			KMSKeyId: new FormControl<string | null | undefined>(undefined),
			Description: new FormControl<string | null | undefined>(undefined),
			Manifest: new FormControl<string | null | undefined>(undefined),
		});

	}

	export interface CreateDBClusterEndpointMessage {

		/** Required */
		DBClusterIdentifier: string;

		/** Required */
		DBClusterEndpointIdentifier: string;

		/** Required */
		EndpointType: string;
		StaticMembers?: Array<string>;
		ExcludedMembers?: Array<string>;
		Tags?: Array<string>;
	}
	export interface CreateDBClusterEndpointMessageFormProperties {

		/** Required */
		DBClusterIdentifier: FormControl<string | null | undefined>,

		/** Required */
		DBClusterEndpointIdentifier: FormControl<string | null | undefined>,

		/** Required */
		EndpointType: FormControl<string | null | undefined>,
	}
	export function CreateCreateDBClusterEndpointMessageFormGroup() {
		return new FormGroup<CreateDBClusterEndpointMessageFormProperties>({
			DBClusterIdentifier: new FormControl<string | null | undefined>(undefined, [Validators.required]),
			DBClusterEndpointIdentifier: new FormControl<string | null | undefined>(undefined, [Validators.required]),
			EndpointType: new FormControl<string | null | undefined>(undefined, [Validators.required]),
		});

	}


	/** <p>Contains the scaling configuration of an Aurora Serverless v1 DB cluster.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-serverless.html">Using Amazon Aurora Serverless v1</a> in the <i>Amazon Aurora User Guide</i>.</p> */
	export interface ScalingConfiguration {
		MinCapacity?: number | null;
		MaxCapacity?: number | null;
		AutoPause?: boolean | null;
		SecondsUntilAutoPause?: number | null;
		TimeoutAction?: string;
		SecondsBeforeTimeout?: number | null;
	}

	/** <p>Contains the scaling configuration of an Aurora Serverless v1 DB cluster.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-serverless.html">Using Amazon Aurora Serverless v1</a> in the <i>Amazon Aurora User Guide</i>.</p> */
	export interface ScalingConfigurationFormProperties {
		MinCapacity: FormControl<number | null | undefined>,
		MaxCapacity: FormControl<number | null | undefined>,
		AutoPause: FormControl<boolean | null | undefined>,
		SecondsUntilAutoPause: FormControl<number | null | undefined>,
		TimeoutAction: FormControl<string | null | undefined>,
		SecondsBeforeTimeout: FormControl<number | null | undefined>,
	}
	export function CreateScalingConfigurationFormGroup() {
		return new FormGroup<ScalingConfigurationFormProperties>({
			MinCapacity: new FormControl<number | null | undefined>(undefined),
			MaxCapacity: new FormControl<number | null | undefined>(undefined),
			AutoPause: new FormControl<boolean | null | undefined>(undefined),
			SecondsUntilAutoPause: new FormControl<number | null | undefined>(undefined),
			TimeoutAction: new FormControl<string | null | undefined>(undefined),
			SecondsBeforeTimeout: new FormControl<number | null | undefined>(undefined),
		});

	}


	/** <p>Contains the scaling configuration of an Aurora Serverless v2 DB cluster.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-serverless-v2.html">Using Amazon Aurora Serverless v2</a> in the <i>Amazon Aurora User Guide</i>.</p> */
	export interface ServerlessV2ScalingConfiguration {
		MinCapacity?: number | null;
		MaxCapacity?: number | null;
	}

	/** <p>Contains the scaling configuration of an Aurora Serverless v2 DB cluster.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-serverless-v2.html">Using Amazon Aurora Serverless v2</a> in the <i>Amazon Aurora User Guide</i>.</p> */
	export interface ServerlessV2ScalingConfigurationFormProperties {
		MinCapacity: FormControl<number | null | undefined>,
		MaxCapacity: FormControl<number | null | undefined>,
	}
	export function CreateServerlessV2ScalingConfigurationFormGroup() {
		return new FormGroup<ServerlessV2ScalingConfigurationFormProperties>({
			MinCapacity: new FormControl<number | null | undefined>(undefined),
			MaxCapacity: new FormControl<number | null | undefined>(undefined),
		});

	}


	/** <p/> */
	export interface CreateDBClusterMessage {
		AvailabilityZones?: Array<string>;
		BackupRetentionPeriod?: number | null;
		CharacterSetName?: string;
		DatabaseName?: string;

		/** Required */
		DBClusterIdentifier: string;
		DBClusterParameterGroupName?: string;
		VpcSecurityGroupIds?: Array<string>;
		DBSubnetGroupName?: string;

		/** Required */
		Engine: string;
		EngineVersion?: string;
		Port?: number | null;
		MasterUsername?: string;
		MasterUserPassword?: string;
		OptionGroupName?: string;
		PreferredBackupWindow?: string;
		PreferredMaintenanceWindow?: string;
		ReplicationSourceIdentifier?: string;
		Tags?: Array<string>;
		StorageEncrypted?: boolean | null;
		KmsKeyId?: string;
		PreSignedUrl?: string;
		EnableIAMDatabaseAuthentication?: boolean | null;
		BacktrackWindow?: number | null;
		EnableCloudwatchLogsExports?: Array<string>;
		EngineMode?: string;
		ScalingConfiguration?: ScalingConfiguration;
		DeletionProtection?: boolean | null;
		GlobalClusterIdentifier?: string;
		EnableHttpEndpoint?: boolean | null;
		CopyTagsToSnapshot?: boolean | null;
		Domain?: string;
		DomainIAMRoleName?: string;
		EnableGlobalWriteForwarding?: boolean | null;
		DBClusterInstanceClass?: string;
		AllocatedStorage?: number | null;
		StorageType?: string;
		Iops?: number | null;
		PubliclyAccessible?: boolean | null;
		AutoMinorVersionUpgrade?: boolean | null;
		MonitoringInterval?: number | null;
		MonitoringRoleArn?: string;
		EnablePerformanceInsights?: boolean | null;
		PerformanceInsightsKMSKeyId?: string;
		PerformanceInsightsRetentionPeriod?: number | null;

		/** <p>Contains the scaling configuration of an Aurora Serverless v2 DB cluster.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-serverless-v2.html">Using Amazon Aurora Serverless v2</a> in the <i>Amazon Aurora User Guide</i>.</p> */
		ServerlessV2ScalingConfiguration?: ServerlessV2ScalingConfiguration;
		NetworkType?: string;
		DBSystemId?: string;
		ManageMasterUserPassword?: boolean | null;
		MasterUserSecretKmsKeyId?: string;
		EnableLocalWriteForwarding?: boolean | null;
		SourceRegion?: string;
	}

	/** <p/> */
	export interface CreateDBClusterMessageFormProperties {
		BackupRetentionPeriod: FormControl<number | null | undefined>,
		CharacterSetName: FormControl<string | null | undefined>,
		DatabaseName: FormControl<string | null | undefined>,

		/** Required */
		DBClusterIdentifier: FormControl<string | null | undefined>,
		DBClusterParameterGroupName: FormControl<string | null | undefined>,
		DBSubnetGroupName: FormControl<string | null | undefined>,

		/** Required */
		Engine: FormControl<string | null | undefined>,
		EngineVersion: FormControl<string | null | undefined>,
		Port: FormControl<number | null | undefined>,
		MasterUsername: FormControl<string | null | undefined>,
		MasterUserPassword: FormControl<string | null | undefined>,
		OptionGroupName: FormControl<string | null | undefined>,
		PreferredBackupWindow: FormControl<string | null | undefined>,
		PreferredMaintenanceWindow: FormControl<string | null | undefined>,
		ReplicationSourceIdentifier: FormControl<string | null | undefined>,
		StorageEncrypted: FormControl<boolean | null | undefined>,
		KmsKeyId: FormControl<string | null | undefined>,
		PreSignedUrl: FormControl<string | null | undefined>,
		EnableIAMDatabaseAuthentication: FormControl<boolean | null | undefined>,
		BacktrackWindow: FormControl<number | null | undefined>,
		EngineMode: FormControl<string | null | undefined>,
		DeletionProtection: FormControl<boolean | null | undefined>,
		GlobalClusterIdentifier: FormControl<string | null | undefined>,
		EnableHttpEndpoint: FormControl<boolean | null | undefined>,
		CopyTagsToSnapshot: FormControl<boolean | null | undefined>,
		Domain: FormControl<string | null | undefined>,
		DomainIAMRoleName: FormControl<string | null | undefined>,
		EnableGlobalWriteForwarding: FormControl<boolean | null | undefined>,
		DBClusterInstanceClass: FormControl<string | null | undefined>,
		AllocatedStorage: FormControl<number | null | undefined>,
		StorageType: FormControl<string | null | undefined>,
		Iops: FormControl<number | null | undefined>,
		PubliclyAccessible: FormControl<boolean | null | undefined>,
		AutoMinorVersionUpgrade: FormControl<boolean | null | undefined>,
		MonitoringInterval: FormControl<number | null | undefined>,
		MonitoringRoleArn: FormControl<string | null | undefined>,
		EnablePerformanceInsights: FormControl<boolean | null | undefined>,
		PerformanceInsightsKMSKeyId: FormControl<string | null | undefined>,
		PerformanceInsightsRetentionPeriod: FormControl<number | null | undefined>,
		NetworkType: FormControl<string | null | undefined>,
		DBSystemId: FormControl<string | null | undefined>,
		ManageMasterUserPassword: FormControl<boolean | null | undefined>,
		MasterUserSecretKmsKeyId: FormControl<string | null | undefined>,
		EnableLocalWriteForwarding: FormControl<boolean | null | undefined>,
		SourceRegion: FormControl<string | null | undefined>,
	}
	export function CreateCreateDBClusterMessageFormGroup() {
		return new FormGroup<CreateDBClusterMessageFormProperties>({
			BackupRetentionPeriod: new FormControl<number | null | undefined>(undefined),
			CharacterSetName: new FormControl<string | null | undefined>(undefined),
			DatabaseName: new FormControl<string | null | undefined>(undefined),
			DBClusterIdentifier: new FormControl<string | null | undefined>(undefined, [Validators.required]),
			DBClusterParameterGroupName: new FormControl<string | null | undefined>(undefined),
			DBSubnetGroupName: new FormControl<string | null | undefined>(undefined),
			Engine: new FormControl<string | null | undefined>(undefined, [Validators.required]),
			EngineVersion: new FormControl<string | null | undefined>(undefined),
			Port: new FormControl<number | null | undefined>(undefined),
			MasterUsername: new FormControl<string | null | undefined>(undefined),
			MasterUserPassword: new FormControl<string | null | undefined>(undefined),
			OptionGroupName: new FormControl<string | null | undefined>(undefined),
			PreferredBackupWindow: new FormControl<string | null | undefined>(undefined),
			PreferredMaintenanceWindow: new FormControl<string | null | undefined>(undefined),
			ReplicationSourceIdentifier: new FormControl<string | null | undefined>(undefined),
			StorageEncrypted: new FormControl<boolean | null | undefined>(undefined),
			KmsKeyId: new FormControl<string | null | undefined>(undefined),
			PreSignedUrl: new FormControl<string | null | undefined>(undefined),
			EnableIAMDatabaseAuthentication: new FormControl<boolean | null | undefined>(undefined),
			BacktrackWindow: new FormControl<number | null | undefined>(undefined),
			EngineMode: new FormControl<string | null | undefined>(undefined),
			DeletionProtection: new FormControl<boolean | null | undefined>(undefined),
			GlobalClusterIdentifier: new FormControl<string | null | undefined>(undefined),
			EnableHttpEndpoint: new FormControl<boolean | null | undefined>(undefined),
			CopyTagsToSnapshot: new FormControl<boolean | null | undefined>(undefined),
			Domain: new FormControl<string | null | undefined>(undefined),
			DomainIAMRoleName: new FormControl<string | null | undefined>(undefined),
			EnableGlobalWriteForwarding: new FormControl<boolean | null | undefined>(undefined),
			DBClusterInstanceClass: new FormControl<string | null | undefined>(undefined),
			AllocatedStorage: new FormControl<number | null | undefined>(undefined),
			StorageType: new FormControl<string | null | undefined>(undefined),
			Iops: new FormControl<number | null | undefined>(undefined),
			PubliclyAccessible: new FormControl<boolean | null | undefined>(undefined),
			AutoMinorVersionUpgrade: new FormControl<boolean | null | undefined>(undefined),
			MonitoringInterval: new FormControl<number | null | undefined>(undefined),
			MonitoringRoleArn: new FormControl<string | null | undefined>(undefined),
			EnablePerformanceInsights: new FormControl<boolean | null | undefined>(undefined),
			PerformanceInsightsKMSKeyId: new FormControl<string | null | undefined>(undefined),
			PerformanceInsightsRetentionPeriod: new FormControl<number | null | undefined>(undefined),
			NetworkType: new FormControl<string | null | undefined>(undefined),
			DBSystemId: new FormControl<string | null | undefined>(undefined),
			ManageMasterUserPassword: new FormControl<boolean | null | undefined>(undefined),
			MasterUserSecretKmsKeyId: new FormControl<string | null | undefined>(undefined),
			EnableLocalWriteForwarding: new FormControl<boolean | null | undefined>(undefined),
			SourceRegion: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** <p/> */
	export interface CreateDBClusterParameterGroupMessage {

		/** Required */
		DBClusterParameterGroupName: string;

		/** Required */
		DBParameterGroupFamily: string;

		/** Required */
		Description: string;
		Tags?: Array<string>;
	}

	/** <p/> */
	export interface CreateDBClusterParameterGroupMessageFormProperties {

		/** Required */
		DBClusterParameterGroupName: FormControl<string | null | undefined>,

		/** Required */
		DBParameterGroupFamily: FormControl<string | null | undefined>,

		/** Required */
		Description: FormControl<string | null | undefined>,
	}
	export function CreateCreateDBClusterParameterGroupMessageFormGroup() {
		return new FormGroup<CreateDBClusterParameterGroupMessageFormProperties>({
			DBClusterParameterGroupName: new FormControl<string | null | undefined>(undefined, [Validators.required]),
			DBParameterGroupFamily: new FormControl<string | null | undefined>(undefined, [Validators.required]),
			Description: new FormControl<string | null | undefined>(undefined, [Validators.required]),
		});

	}


	/** <p/> */
	export interface CreateDBClusterSnapshotMessage {

		/** Required */
		DBClusterSnapshotIdentifier: string;

		/** Required */
		DBClusterIdentifier: string;
		Tags?: Array<string>;
	}

	/** <p/> */
	export interface CreateDBClusterSnapshotMessageFormProperties {

		/** Required */
		DBClusterSnapshotIdentifier: FormControl<string | null | undefined>,

		/** Required */
		DBClusterIdentifier: FormControl<string | null | undefined>,
	}
	export function CreateCreateDBClusterSnapshotMessageFormGroup() {
		return new FormGroup<CreateDBClusterSnapshotMessageFormProperties>({
			DBClusterSnapshotIdentifier: new FormControl<string | null | undefined>(undefined, [Validators.required]),
			DBClusterIdentifier: new FormControl<string | null | undefined>(undefined, [Validators.required]),
		});

	}


	/** <p/> */
	export interface CreateDBInstanceMessage {
		DBName?: string;

		/** Required */
		DBInstanceIdentifier: string;
		AllocatedStorage?: number | null;

		/** Required */
		DBInstanceClass: string;

		/** Required */
		Engine: string;
		MasterUsername?: string;
		MasterUserPassword?: string;
		DBSecurityGroups?: Array<string>;
		VpcSecurityGroupIds?: Array<string>;
		AvailabilityZone?: string;
		DBSubnetGroupName?: string;
		PreferredMaintenanceWindow?: string;
		DBParameterGroupName?: string;
		BackupRetentionPeriod?: number | null;
		PreferredBackupWindow?: string;
		Port?: number | null;
		MultiAZ?: boolean | null;
		EngineVersion?: string;
		AutoMinorVersionUpgrade?: boolean | null;
		LicenseModel?: string;
		Iops?: number | null;
		OptionGroupName?: string;
		CharacterSetName?: string;
		NcharCharacterSetName?: string;
		PubliclyAccessible?: boolean | null;
		Tags?: Array<string>;
		DBClusterIdentifier?: string;
		StorageType?: string;
		TdeCredentialArn?: string;
		TdeCredentialPassword?: string;
		StorageEncrypted?: boolean | null;
		KmsKeyId?: string;
		Domain?: string;
		DomainFqdn?: string;
		DomainOu?: string;
		DomainAuthSecretArn?: string;
		DomainDnsIps?: Array<string>;
		CopyTagsToSnapshot?: boolean | null;
		MonitoringInterval?: number | null;
		MonitoringRoleArn?: string;
		DomainIAMRoleName?: string;
		PromotionTier?: number | null;
		Timezone?: string;
		EnableIAMDatabaseAuthentication?: boolean | null;
		EnablePerformanceInsights?: boolean | null;
		PerformanceInsightsKMSKeyId?: string;
		PerformanceInsightsRetentionPeriod?: number | null;
		EnableCloudwatchLogsExports?: Array<string>;
		ProcessorFeatures?: Array<string>;
		DeletionProtection?: boolean | null;
		MaxAllocatedStorage?: number | null;
		EnableCustomerOwnedIp?: boolean | null;
		CustomIamInstanceProfile?: string;
		BackupTarget?: string;
		NetworkType?: string;
		StorageThroughput?: number | null;
		ManageMasterUserPassword?: boolean | null;
		MasterUserSecretKmsKeyId?: string;
		CACertificateIdentifier?: string;
		DBSystemId?: string;
	}

	/** <p/> */
	export interface CreateDBInstanceMessageFormProperties {
		DBName: FormControl<string | null | undefined>,

		/** Required */
		DBInstanceIdentifier: FormControl<string | null | undefined>,
		AllocatedStorage: FormControl<number | null | undefined>,

		/** Required */
		DBInstanceClass: FormControl<string | null | undefined>,

		/** Required */
		Engine: FormControl<string | null | undefined>,
		MasterUsername: FormControl<string | null | undefined>,
		MasterUserPassword: FormControl<string | null | undefined>,
		AvailabilityZone: FormControl<string | null | undefined>,
		DBSubnetGroupName: FormControl<string | null | undefined>,
		PreferredMaintenanceWindow: FormControl<string | null | undefined>,
		DBParameterGroupName: FormControl<string | null | undefined>,
		BackupRetentionPeriod: FormControl<number | null | undefined>,
		PreferredBackupWindow: FormControl<string | null | undefined>,
		Port: FormControl<number | null | undefined>,
		MultiAZ: FormControl<boolean | null | undefined>,
		EngineVersion: FormControl<string | null | undefined>,
		AutoMinorVersionUpgrade: FormControl<boolean | null | undefined>,
		LicenseModel: FormControl<string | null | undefined>,
		Iops: FormControl<number | null | undefined>,
		OptionGroupName: FormControl<string | null | undefined>,
		CharacterSetName: FormControl<string | null | undefined>,
		NcharCharacterSetName: FormControl<string | null | undefined>,
		PubliclyAccessible: FormControl<boolean | null | undefined>,
		DBClusterIdentifier: FormControl<string | null | undefined>,
		StorageType: FormControl<string | null | undefined>,
		TdeCredentialArn: FormControl<string | null | undefined>,
		TdeCredentialPassword: FormControl<string | null | undefined>,
		StorageEncrypted: FormControl<boolean | null | undefined>,
		KmsKeyId: FormControl<string | null | undefined>,
		Domain: FormControl<string | null | undefined>,
		DomainFqdn: FormControl<string | null | undefined>,
		DomainOu: FormControl<string | null | undefined>,
		DomainAuthSecretArn: FormControl<string | null | undefined>,
		CopyTagsToSnapshot: FormControl<boolean | null | undefined>,
		MonitoringInterval: FormControl<number | null | undefined>,
		MonitoringRoleArn: FormControl<string | null | undefined>,
		DomainIAMRoleName: FormControl<string | null | undefined>,
		PromotionTier: FormControl<number | null | undefined>,
		Timezone: FormControl<string | null | undefined>,
		EnableIAMDatabaseAuthentication: FormControl<boolean | null | undefined>,
		EnablePerformanceInsights: FormControl<boolean | null | undefined>,
		PerformanceInsightsKMSKeyId: FormControl<string | null | undefined>,
		PerformanceInsightsRetentionPeriod: FormControl<number | null | undefined>,
		DeletionProtection: FormControl<boolean | null | undefined>,
		MaxAllocatedStorage: FormControl<number | null | undefined>,
		EnableCustomerOwnedIp: FormControl<boolean | null | undefined>,
		CustomIamInstanceProfile: FormControl<string | null | undefined>,
		BackupTarget: FormControl<string | null | undefined>,
		NetworkType: FormControl<string | null | undefined>,
		StorageThroughput: FormControl<number | null | undefined>,
		ManageMasterUserPassword: FormControl<boolean | null | undefined>,
		MasterUserSecretKmsKeyId: FormControl<string | null | undefined>,
		CACertificateIdentifier: FormControl<string | null | undefined>,
		DBSystemId: FormControl<string | null | undefined>,
	}
	export function CreateCreateDBInstanceMessageFormGroup() {
		return new FormGroup<CreateDBInstanceMessageFormProperties>({
			DBName: new FormControl<string | null | undefined>(undefined),
			DBInstanceIdentifier: new FormControl<string | null | undefined>(undefined, [Validators.required]),
			AllocatedStorage: new FormControl<number | null | undefined>(undefined),
			DBInstanceClass: new FormControl<string | null | undefined>(undefined, [Validators.required]),
			Engine: new FormControl<string | null | undefined>(undefined, [Validators.required]),
			MasterUsername: new FormControl<string | null | undefined>(undefined),
			MasterUserPassword: new FormControl<string | null | undefined>(undefined),
			AvailabilityZone: new FormControl<string | null | undefined>(undefined),
			DBSubnetGroupName: new FormControl<string | null | undefined>(undefined),
			PreferredMaintenanceWindow: new FormControl<string | null | undefined>(undefined),
			DBParameterGroupName: new FormControl<string | null | undefined>(undefined),
			BackupRetentionPeriod: new FormControl<number | null | undefined>(undefined),
			PreferredBackupWindow: new FormControl<string | null | undefined>(undefined),
			Port: new FormControl<number | null | undefined>(undefined),
			MultiAZ: new FormControl<boolean | null | undefined>(undefined),
			EngineVersion: new FormControl<string | null | undefined>(undefined),
			AutoMinorVersionUpgrade: new FormControl<boolean | null | undefined>(undefined),
			LicenseModel: new FormControl<string | null | undefined>(undefined),
			Iops: new FormControl<number | null | undefined>(undefined),
			OptionGroupName: new FormControl<string | null | undefined>(undefined),
			CharacterSetName: new FormControl<string | null | undefined>(undefined),
			NcharCharacterSetName: new FormControl<string | null | undefined>(undefined),
			PubliclyAccessible: new FormControl<boolean | null | undefined>(undefined),
			DBClusterIdentifier: new FormControl<string | null | undefined>(undefined),
			StorageType: new FormControl<string | null | undefined>(undefined),
			TdeCredentialArn: new FormControl<string | null | undefined>(undefined),
			TdeCredentialPassword: new FormControl<string | null | undefined>(undefined),
			StorageEncrypted: new FormControl<boolean | null | undefined>(undefined),
			KmsKeyId: new FormControl<string | null | undefined>(undefined),
			Domain: new FormControl<string | null | undefined>(undefined),
			DomainFqdn: new FormControl<string | null | undefined>(undefined),
			DomainOu: new FormControl<string | null | undefined>(undefined),
			DomainAuthSecretArn: new FormControl<string | null | undefined>(undefined),
			CopyTagsToSnapshot: new FormControl<boolean | null | undefined>(undefined),
			MonitoringInterval: new FormControl<number | null | undefined>(undefined),
			MonitoringRoleArn: new FormControl<string | null | undefined>(undefined),
			DomainIAMRoleName: new FormControl<string | null | undefined>(undefined),
			PromotionTier: new FormControl<number | null | undefined>(undefined),
			Timezone: new FormControl<string | null | undefined>(undefined),
			EnableIAMDatabaseAuthentication: new FormControl<boolean | null | undefined>(undefined),
			EnablePerformanceInsights: new FormControl<boolean | null | undefined>(undefined),
			PerformanceInsightsKMSKeyId: new FormControl<string | null | undefined>(undefined),
			PerformanceInsightsRetentionPeriod: new FormControl<number | null | undefined>(undefined),
			DeletionProtection: new FormControl<boolean | null | undefined>(undefined),
			MaxAllocatedStorage: new FormControl<number | null | undefined>(undefined),
			EnableCustomerOwnedIp: new FormControl<boolean | null | undefined>(undefined),
			CustomIamInstanceProfile: new FormControl<string | null | undefined>(undefined),
			BackupTarget: new FormControl<string | null | undefined>(undefined),
			NetworkType: new FormControl<string | null | undefined>(undefined),
			StorageThroughput: new FormControl<number | null | undefined>(undefined),
			ManageMasterUserPassword: new FormControl<boolean | null | undefined>(undefined),
			MasterUserSecretKmsKeyId: new FormControl<string | null | undefined>(undefined),
			CACertificateIdentifier: new FormControl<string | null | undefined>(undefined),
			DBSystemId: new FormControl<string | null | undefined>(undefined),
		});

	}

	export interface CreateDBInstanceReadReplicaMessage {

		/** Required */
		DBInstanceIdentifier: string;
		SourceDBInstanceIdentifier?: string;
		DBInstanceClass?: string;
		AvailabilityZone?: string;
		Port?: number | null;
		MultiAZ?: boolean | null;
		AutoMinorVersionUpgrade?: boolean | null;
		Iops?: number | null;
		OptionGroupName?: string;
		DBParameterGroupName?: string;
		PubliclyAccessible?: boolean | null;

		/** A list of tags. For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Tagging.html">Tagging Amazon RDS Resources</a> in the <i>Amazon RDS User Guide.</i> */
		Tags?: Array<string>;
		DBSubnetGroupName?: string;
		VpcSecurityGroupIds?: Array<string>;
		StorageType?: string;
		CopyTagsToSnapshot?: boolean | null;
		MonitoringInterval?: number | null;
		MonitoringRoleArn?: string;
		KmsKeyId?: string;
		PreSignedUrl?: string;
		EnableIAMDatabaseAuthentication?: boolean | null;
		EnablePerformanceInsights?: boolean | null;
		PerformanceInsightsKMSKeyId?: string;
		PerformanceInsightsRetentionPeriod?: number | null;
		EnableCloudwatchLogsExports?: Array<string>;
		ProcessorFeatures?: Array<string>;
		UseDefaultProcessorFeatures?: boolean | null;
		DeletionProtection?: boolean | null;
		Domain?: string;
		DomainIAMRoleName?: string;
		DomainFqdn?: string;
		DomainOu?: string;
		DomainAuthSecretArn?: string;
		DomainDnsIps?: Array<string>;
		ReplicaMode?: ReplicaMode;
		MaxAllocatedStorage?: number | null;
		CustomIamInstanceProfile?: string;
		NetworkType?: string;
		StorageThroughput?: number | null;
		EnableCustomerOwnedIp?: boolean | null;
		AllocatedStorage?: number | null;
		SourceDBClusterIdentifier?: string;
		SourceRegion?: string;
	}
	export interface CreateDBInstanceReadReplicaMessageFormProperties {

		/** Required */
		DBInstanceIdentifier: FormControl<string | null | undefined>,
		SourceDBInstanceIdentifier: FormControl<string | null | undefined>,
		DBInstanceClass: FormControl<string | null | undefined>,
		AvailabilityZone: FormControl<string | null | undefined>,
		Port: FormControl<number | null | undefined>,
		MultiAZ: FormControl<boolean | null | undefined>,
		AutoMinorVersionUpgrade: FormControl<boolean | null | undefined>,
		Iops: FormControl<number | null | undefined>,
		OptionGroupName: FormControl<string | null | undefined>,
		DBParameterGroupName: FormControl<string | null | undefined>,
		PubliclyAccessible: FormControl<boolean | null | undefined>,
		DBSubnetGroupName: FormControl<string | null | undefined>,
		StorageType: FormControl<string | null | undefined>,
		CopyTagsToSnapshot: FormControl<boolean | null | undefined>,
		MonitoringInterval: FormControl<number | null | undefined>,
		MonitoringRoleArn: FormControl<string | null | undefined>,
		KmsKeyId: FormControl<string | null | undefined>,
		PreSignedUrl: FormControl<string | null | undefined>,
		EnableIAMDatabaseAuthentication: FormControl<boolean | null | undefined>,
		EnablePerformanceInsights: FormControl<boolean | null | undefined>,
		PerformanceInsightsKMSKeyId: FormControl<string | null | undefined>,
		PerformanceInsightsRetentionPeriod: FormControl<number | null | undefined>,
		UseDefaultProcessorFeatures: FormControl<boolean | null | undefined>,
		DeletionProtection: FormControl<boolean | null | undefined>,
		Domain: FormControl<string | null | undefined>,
		DomainIAMRoleName: FormControl<string | null | undefined>,
		DomainFqdn: FormControl<string | null | undefined>,
		DomainOu: FormControl<string | null | undefined>,
		DomainAuthSecretArn: FormControl<string | null | undefined>,
		ReplicaMode: FormControl<ReplicaMode | null | undefined>,
		MaxAllocatedStorage: FormControl<number | null | undefined>,
		CustomIamInstanceProfile: FormControl<string | null | undefined>,
		NetworkType: FormControl<string | null | undefined>,
		StorageThroughput: FormControl<number | null | undefined>,
		EnableCustomerOwnedIp: FormControl<boolean | null | undefined>,
		AllocatedStorage: FormControl<number | null | undefined>,
		SourceDBClusterIdentifier: FormControl<string | null | undefined>,
		SourceRegion: FormControl<string | null | undefined>,
	}
	export function CreateCreateDBInstanceReadReplicaMessageFormGroup() {
		return new FormGroup<CreateDBInstanceReadReplicaMessageFormProperties>({
			DBInstanceIdentifier: new FormControl<string | null | undefined>(undefined, [Validators.required]),
			SourceDBInstanceIdentifier: new FormControl<string | null | undefined>(undefined),
			DBInstanceClass: new FormControl<string | null | undefined>(undefined),
			AvailabilityZone: new FormControl<string | null | undefined>(undefined),
			Port: new FormControl<number | null | undefined>(undefined),
			MultiAZ: new FormControl<boolean | null | undefined>(undefined),
			AutoMinorVersionUpgrade: new FormControl<boolean | null | undefined>(undefined),
			Iops: new FormControl<number | null | undefined>(undefined),
			OptionGroupName: new FormControl<string | null | undefined>(undefined),
			DBParameterGroupName: new FormControl<string | null | undefined>(undefined),
			PubliclyAccessible: new FormControl<boolean | null | undefined>(undefined),
			DBSubnetGroupName: new FormControl<string | null | undefined>(undefined),
			StorageType: new FormControl<string | null | undefined>(undefined),
			CopyTagsToSnapshot: new FormControl<boolean | null | undefined>(undefined),
			MonitoringInterval: new FormControl<number | null | undefined>(undefined),
			MonitoringRoleArn: new FormControl<string | null | undefined>(undefined),
			KmsKeyId: new FormControl<string | null | undefined>(undefined),
			PreSignedUrl: new FormControl<string | null | undefined>(undefined),
			EnableIAMDatabaseAuthentication: new FormControl<boolean | null | undefined>(undefined),
			EnablePerformanceInsights: new FormControl<boolean | null | undefined>(undefined),
			PerformanceInsightsKMSKeyId: new FormControl<string | null | undefined>(undefined),
			PerformanceInsightsRetentionPeriod: new FormControl<number | null | undefined>(undefined),
			UseDefaultProcessorFeatures: new FormControl<boolean | null | undefined>(undefined),
			DeletionProtection: new FormControl<boolean | null | undefined>(undefined),
			Domain: new FormControl<string | null | undefined>(undefined),
			DomainIAMRoleName: new FormControl<string | null | undefined>(undefined),
			DomainFqdn: new FormControl<string | null | undefined>(undefined),
			DomainOu: new FormControl<string | null | undefined>(undefined),
			DomainAuthSecretArn: new FormControl<string | null | undefined>(undefined),
			ReplicaMode: new FormControl<ReplicaMode | null | undefined>(undefined),
			MaxAllocatedStorage: new FormControl<number | null | undefined>(undefined),
			CustomIamInstanceProfile: new FormControl<string | null | undefined>(undefined),
			NetworkType: new FormControl<string | null | undefined>(undefined),
			StorageThroughput: new FormControl<number | null | undefined>(undefined),
			EnableCustomerOwnedIp: new FormControl<boolean | null | undefined>(undefined),
			AllocatedStorage: new FormControl<number | null | undefined>(undefined),
			SourceDBClusterIdentifier: new FormControl<string | null | undefined>(undefined),
			SourceRegion: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** <p/> */
	export interface CreateDBParameterGroupMessage {

		/** Required */
		DBParameterGroupName: string;

		/** Required */
		DBParameterGroupFamily: string;

		/** Required */
		Description: string;
		Tags?: Array<string>;
	}

	/** <p/> */
	export interface CreateDBParameterGroupMessageFormProperties {

		/** Required */
		DBParameterGroupName: FormControl<string | null | undefined>,

		/** Required */
		DBParameterGroupFamily: FormControl<string | null | undefined>,

		/** Required */
		Description: FormControl<string | null | undefined>,
	}
	export function CreateCreateDBParameterGroupMessageFormGroup() {
		return new FormGroup<CreateDBParameterGroupMessageFormProperties>({
			DBParameterGroupName: new FormControl<string | null | undefined>(undefined, [Validators.required]),
			DBParameterGroupFamily: new FormControl<string | null | undefined>(undefined, [Validators.required]),
			Description: new FormControl<string | null | undefined>(undefined, [Validators.required]),
		});

	}

	export interface CreateDBProxyEndpointRequest {

		/** Required */
		DBProxyName: string;

		/** Required */
		DBProxyEndpointName: string;

		/** Required */
		VpcSubnetIds: Array<string>;
		VpcSecurityGroupIds?: Array<string>;
		TargetRole?: DBProxyEndpointTargetRole;

		/** A list of tags. For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Tagging.html">Tagging Amazon RDS Resources</a> in the <i>Amazon RDS User Guide.</i> */
		Tags?: Array<string>;
	}
	export interface CreateDBProxyEndpointRequestFormProperties {

		/** Required */
		DBProxyName: FormControl<string | null | undefined>,

		/** Required */
		DBProxyEndpointName: FormControl<string | null | undefined>,
		TargetRole: FormControl<DBProxyEndpointTargetRole | null | undefined>,
	}
	export function CreateCreateDBProxyEndpointRequestFormGroup() {
		return new FormGroup<CreateDBProxyEndpointRequestFormProperties>({
			DBProxyName: new FormControl<string | null | undefined>(undefined, [Validators.required]),
			DBProxyEndpointName: new FormControl<string | null | undefined>(undefined, [Validators.required]),
			TargetRole: new FormControl<DBProxyEndpointTargetRole | null | undefined>(undefined),
		});

	}

	export enum EngineFamily { MYSQL = 0, POSTGRESQL = 1, SQLSERVER = 2 }

	export interface CreateDBProxyRequest {

		/** Required */
		DBProxyName: string;

		/** Required */
		EngineFamily: EngineFamily;

		/** Required */
		Auth: Array<UserAuthConfig>;

		/** Required */
		RoleArn: string;

		/** Required */
		VpcSubnetIds: Array<string>;
		VpcSecurityGroupIds?: Array<string>;
		RequireTLS?: boolean | null;
		IdleClientTimeout?: number | null;
		DebugLogging?: boolean | null;
		Tags?: Array<string>;
	}
	export interface CreateDBProxyRequestFormProperties {

		/** Required */
		DBProxyName: FormControl<string | null | undefined>,

		/** Required */
		EngineFamily: FormControl<EngineFamily | null | undefined>,

		/** Required */
		RoleArn: FormControl<string | null | undefined>,
		RequireTLS: FormControl<boolean | null | undefined>,
		IdleClientTimeout: FormControl<number | null | undefined>,
		DebugLogging: FormControl<boolean | null | undefined>,
	}
	export function CreateCreateDBProxyRequestFormGroup() {
		return new FormGroup<CreateDBProxyRequestFormProperties>({
			DBProxyName: new FormControl<string | null | undefined>(undefined, [Validators.required]),
			EngineFamily: new FormControl<EngineFamily | null | undefined>(undefined, [Validators.required]),
			RoleArn: new FormControl<string | null | undefined>(undefined, [Validators.required]),
			RequireTLS: new FormControl<boolean | null | undefined>(undefined),
			IdleClientTimeout: new FormControl<number | null | undefined>(undefined),
			DebugLogging: new FormControl<boolean | null | undefined>(undefined),
		});

	}


	/** <p/> */
	export interface CreateDBSecurityGroupMessage {

		/** Required */
		DBSecurityGroupName: string;

		/** Required */
		DBSecurityGroupDescription: string;
		Tags?: Array<string>;
	}

	/** <p/> */
	export interface CreateDBSecurityGroupMessageFormProperties {

		/** Required */
		DBSecurityGroupName: FormControl<string | null | undefined>,

		/** Required */
		DBSecurityGroupDescription: FormControl<string | null | undefined>,
	}
	export function CreateCreateDBSecurityGroupMessageFormGroup() {
		return new FormGroup<CreateDBSecurityGroupMessageFormProperties>({
			DBSecurityGroupName: new FormControl<string | null | undefined>(undefined, [Validators.required]),
			DBSecurityGroupDescription: new FormControl<string | null | undefined>(undefined, [Validators.required]),
		});

	}


	/** <p/> */
	export interface CreateDBSnapshotMessage {

		/** Required */
		DBSnapshotIdentifier: string;

		/** Required */
		DBInstanceIdentifier: string;

		/** A list of tags. For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Tagging.html">Tagging Amazon RDS Resources</a> in the <i>Amazon RDS User Guide.</i> */
		Tags?: Array<string>;
	}

	/** <p/> */
	export interface CreateDBSnapshotMessageFormProperties {

		/** Required */
		DBSnapshotIdentifier: FormControl<string | null | undefined>,

		/** Required */
		DBInstanceIdentifier: FormControl<string | null | undefined>,
	}
	export function CreateCreateDBSnapshotMessageFormGroup() {
		return new FormGroup<CreateDBSnapshotMessageFormProperties>({
			DBSnapshotIdentifier: new FormControl<string | null | undefined>(undefined, [Validators.required]),
			DBInstanceIdentifier: new FormControl<string | null | undefined>(undefined, [Validators.required]),
		});

	}


	/** <p/> */
	export interface CreateDBSubnetGroupMessage {

		/** Required */
		DBSubnetGroupName: string;

		/** Required */
		DBSubnetGroupDescription: string;

		/** Required */
		SubnetIds: Array<string>;
		Tags?: Array<string>;
	}

	/** <p/> */
	export interface CreateDBSubnetGroupMessageFormProperties {

		/** Required */
		DBSubnetGroupName: FormControl<string | null | undefined>,

		/** Required */
		DBSubnetGroupDescription: FormControl<string | null | undefined>,
	}
	export function CreateCreateDBSubnetGroupMessageFormGroup() {
		return new FormGroup<CreateDBSubnetGroupMessageFormProperties>({
			DBSubnetGroupName: new FormControl<string | null | undefined>(undefined, [Validators.required]),
			DBSubnetGroupDescription: new FormControl<string | null | undefined>(undefined, [Validators.required]),
		});

	}


	/** <p/> */
	export interface CreateEventSubscriptionMessage {

		/** Required */
		SubscriptionName: string;

		/** Required */
		SnsTopicArn: string;
		SourceType?: string;
		EventCategories?: Array<string>;
		SourceIds?: Array<string>;
		Enabled?: boolean | null;

		/** A list of tags. For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Tagging.html">Tagging Amazon RDS Resources</a> in the <i>Amazon RDS User Guide.</i> */
		Tags?: Array<string>;
	}

	/** <p/> */
	export interface CreateEventSubscriptionMessageFormProperties {

		/** Required */
		SubscriptionName: FormControl<string | null | undefined>,

		/** Required */
		SnsTopicArn: FormControl<string | null | undefined>,
		SourceType: FormControl<string | null | undefined>,
		Enabled: FormControl<boolean | null | undefined>,
	}
	export function CreateCreateEventSubscriptionMessageFormGroup() {
		return new FormGroup<CreateEventSubscriptionMessageFormProperties>({
			SubscriptionName: new FormControl<string | null | undefined>(undefined, [Validators.required]),
			SnsTopicArn: new FormControl<string | null | undefined>(undefined, [Validators.required]),
			SourceType: new FormControl<string | null | undefined>(undefined),
			Enabled: new FormControl<boolean | null | undefined>(undefined),
		});

	}

	export interface CreateGlobalClusterMessage {
		GlobalClusterIdentifier?: string;
		SourceDBClusterIdentifier?: string;
		Engine?: string;
		EngineVersion?: string;
		DeletionProtection?: boolean | null;
		DatabaseName?: string;
		StorageEncrypted?: boolean | null;
	}
	export interface CreateGlobalClusterMessageFormProperties {
		GlobalClusterIdentifier: FormControl<string | null | undefined>,
		SourceDBClusterIdentifier: FormControl<string | null | undefined>,
		Engine: FormControl<string | null | undefined>,
		EngineVersion: FormControl<string | null | undefined>,
		DeletionProtection: FormControl<boolean | null | undefined>,
		DatabaseName: FormControl<string | null | undefined>,
		StorageEncrypted: FormControl<boolean | null | undefined>,
	}
	export function CreateCreateGlobalClusterMessageFormGroup() {
		return new FormGroup<CreateGlobalClusterMessageFormProperties>({
			GlobalClusterIdentifier: new FormControl<string | null | undefined>(undefined),
			SourceDBClusterIdentifier: new FormControl<string | null | undefined>(undefined),
			Engine: new FormControl<string | null | undefined>(undefined),
			EngineVersion: new FormControl<string | null | undefined>(undefined),
			DeletionProtection: new FormControl<boolean | null | undefined>(undefined),
			DatabaseName: new FormControl<string | null | undefined>(undefined),
			StorageEncrypted: new FormControl<boolean | null | undefined>(undefined),
		});

	}


	/** <p/> */
	export interface CreateOptionGroupMessage {

		/** Required */
		OptionGroupName: string;

		/** Required */
		EngineName: string;

		/** Required */
		MajorEngineVersion: string;

		/** Required */
		OptionGroupDescription: string;
		Tags?: Array<string>;
	}

	/** <p/> */
	export interface CreateOptionGroupMessageFormProperties {

		/** Required */
		OptionGroupName: FormControl<string | null | undefined>,

		/** Required */
		EngineName: FormControl<string | null | undefined>,

		/** Required */
		MajorEngineVersion: FormControl<string | null | undefined>,

		/** Required */
		OptionGroupDescription: FormControl<string | null | undefined>,
	}
	export function CreateCreateOptionGroupMessageFormGroup() {
		return new FormGroup<CreateOptionGroupMessageFormProperties>({
			OptionGroupName: new FormControl<string | null | undefined>(undefined, [Validators.required]),
			EngineName: new FormControl<string | null | undefined>(undefined, [Validators.required]),
			MajorEngineVersion: new FormControl<string | null | undefined>(undefined, [Validators.required]),
			OptionGroupDescription: new FormControl<string | null | undefined>(undefined, [Validators.required]),
		});

	}

	export enum CustomEngineVersionStatus { available = 0, inactive = 1, 'inactive-except-restore' = 2 }


	/** Contains information about an instance that is part of a DB cluster. */
	export interface DBClusterMember {
		DBInstanceIdentifier?: string;
		IsClusterWriter?: boolean | null;
		DBClusterParameterGroupStatus?: string;
		PromotionTier?: number | null;
	}

	/** Contains information about an instance that is part of a DB cluster. */
	export interface DBClusterMemberFormProperties {
		DBInstanceIdentifier: FormControl<string | null | undefined>,
		IsClusterWriter: FormControl<boolean | null | undefined>,
		DBClusterParameterGroupStatus: FormControl<string | null | undefined>,
		PromotionTier: FormControl<number | null | undefined>,
	}
	export function CreateDBClusterMemberFormGroup() {
		return new FormGroup<DBClusterMemberFormProperties>({
			DBInstanceIdentifier: new FormControl<string | null | undefined>(undefined),
			IsClusterWriter: new FormControl<boolean | null | undefined>(undefined),
			DBClusterParameterGroupStatus: new FormControl<string | null | undefined>(undefined),
			PromotionTier: new FormControl<number | null | undefined>(undefined),
		});

	}


	/** Contains status information for a DB cluster option group. */
	export interface DBClusterOptionGroupStatus {
		DBClusterOptionGroupName?: string;
		Status?: string;
	}

	/** Contains status information for a DB cluster option group. */
	export interface DBClusterOptionGroupStatusFormProperties {
		DBClusterOptionGroupName: FormControl<string | null | undefined>,
		Status: FormControl<string | null | undefined>,
	}
	export function CreateDBClusterOptionGroupStatusFormGroup() {
		return new FormGroup<DBClusterOptionGroupStatusFormProperties>({
			DBClusterOptionGroupName: new FormControl<string | null | undefined>(undefined),
			Status: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Describes an Amazon Web Services Identity and Access Management (IAM) role that is associated with a DB cluster. */
	export interface DBClusterRole {
		RoleArn?: string;
		Status?: string;
		FeatureName?: string;
	}

	/** Describes an Amazon Web Services Identity and Access Management (IAM) role that is associated with a DB cluster. */
	export interface DBClusterRoleFormProperties {
		RoleArn: FormControl<string | null | undefined>,
		Status: FormControl<string | null | undefined>,
		FeatureName: FormControl<string | null | undefined>,
	}
	export function CreateDBClusterRoleFormGroup() {
		return new FormGroup<DBClusterRoleFormProperties>({
			RoleArn: new FormControl<string | null | undefined>(undefined),
			Status: new FormControl<string | null | undefined>(undefined),
			FeatureName: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** <p>Contains the name and values of a manual DB cluster snapshot attribute.</p> <p>Manual DB cluster snapshot attributes are used to authorize other Amazon Web Services accounts to restore a manual DB cluster snapshot. For more information, see the <code>ModifyDBClusterSnapshotAttribute</code> API action.</p> */
	export interface DBClusterSnapshotAttribute {
		AttributeName?: string;
		AttributeValues?: Array<string>;
	}

	/** <p>Contains the name and values of a manual DB cluster snapshot attribute.</p> <p>Manual DB cluster snapshot attributes are used to authorize other Amazon Web Services accounts to restore a manual DB cluster snapshot. For more information, see the <code>ModifyDBClusterSnapshotAttribute</code> API action.</p> */
	export interface DBClusterSnapshotAttributeFormProperties {
		AttributeName: FormControl<string | null | undefined>,
	}
	export function CreateDBClusterSnapshotAttributeFormGroup() {
		return new FormGroup<DBClusterSnapshotAttributeFormProperties>({
			AttributeName: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Automated backups of a DB instance replicated to another Amazon Web Services Region. They consist of system backups, transaction logs, and database instance properties. */
	export interface DBInstanceAutomatedBackupsReplication {
		DBInstanceAutomatedBackupsArn?: string;
	}

	/** Automated backups of a DB instance replicated to another Amazon Web Services Region. They consist of system backups, transaction logs, and database instance properties. */
	export interface DBInstanceAutomatedBackupsReplicationFormProperties {
		DBInstanceAutomatedBackupsArn: FormControl<string | null | undefined>,
	}
	export function CreateDBInstanceAutomatedBackupsReplicationFormGroup() {
		return new FormGroup<DBInstanceAutomatedBackupsReplicationFormProperties>({
			DBInstanceAutomatedBackupsArn: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Describes an Amazon Web Services Identity and Access Management (IAM) role that is associated with a DB instance. */
	export interface DBInstanceRole {
		RoleArn?: string;
		FeatureName?: string;
		Status?: string;
	}

	/** Describes an Amazon Web Services Identity and Access Management (IAM) role that is associated with a DB instance. */
	export interface DBInstanceRoleFormProperties {
		RoleArn: FormControl<string | null | undefined>,
		FeatureName: FormControl<string | null | undefined>,
		Status: FormControl<string | null | undefined>,
	}
	export function CreateDBInstanceRoleFormGroup() {
		return new FormGroup<DBInstanceRoleFormProperties>({
			RoleArn: new FormControl<string | null | undefined>(undefined),
			FeatureName: new FormControl<string | null | undefined>(undefined),
			Status: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Provides a list of status information for a DB instance. */
	export interface DBInstanceStatusInfo {
		StatusType?: string;
		Normal?: boolean | null;
		Status?: string;
		Message?: string;
	}

	/** Provides a list of status information for a DB instance. */
	export interface DBInstanceStatusInfoFormProperties {
		StatusType: FormControl<string | null | undefined>,
		Normal: FormControl<boolean | null | undefined>,
		Status: FormControl<string | null | undefined>,
		Message: FormControl<string | null | undefined>,
	}
	export function CreateDBInstanceStatusInfoFormGroup() {
		return new FormGroup<DBInstanceStatusInfoFormProperties>({
			StatusType: new FormControl<string | null | undefined>(undefined),
			Normal: new FormControl<boolean | null | undefined>(undefined),
			Status: new FormControl<string | null | undefined>(undefined),
			Message: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** <p>The status of the DB parameter group.</p> <p>This data type is used as a response element in the following actions:</p> <ul> <li> <p> <code>CreateDBInstance</code> </p> </li> <li> <p> <code>CreateDBInstanceReadReplica</code> </p> </li> <li> <p> <code>DeleteDBInstance</code> </p> </li> <li> <p> <code>ModifyDBInstance</code> </p> </li> <li> <p> <code>RebootDBInstance</code> </p> </li> <li> <p> <code>RestoreDBInstanceFromDBSnapshot</code> </p> </li> </ul> */
	export interface DBParameterGroupStatus {
		DBParameterGroupName?: string;
		ParameterApplyStatus?: string;
	}

	/** <p>The status of the DB parameter group.</p> <p>This data type is used as a response element in the following actions:</p> <ul> <li> <p> <code>CreateDBInstance</code> </p> </li> <li> <p> <code>CreateDBInstanceReadReplica</code> </p> </li> <li> <p> <code>DeleteDBInstance</code> </p> </li> <li> <p> <code>ModifyDBInstance</code> </p> </li> <li> <p> <code>RebootDBInstance</code> </p> </li> <li> <p> <code>RestoreDBInstanceFromDBSnapshot</code> </p> </li> </ul> */
	export interface DBParameterGroupStatusFormProperties {
		DBParameterGroupName: FormControl<string | null | undefined>,
		ParameterApplyStatus: FormControl<string | null | undefined>,
	}
	export function CreateDBParameterGroupStatusFormGroup() {
		return new FormGroup<DBParameterGroupStatusFormProperties>({
			DBParameterGroupName: new FormControl<string | null | undefined>(undefined),
			ParameterApplyStatus: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** <p>This data type is used as a response element in the following actions:</p> <ul> <li> <p> <code>ModifyDBInstance</code> </p> </li> <li> <p> <code>RebootDBInstance</code> </p> </li> <li> <p> <code>RestoreDBInstanceFromDBSnapshot</code> </p> </li> <li> <p> <code>RestoreDBInstanceToPointInTime</code> </p> </li> </ul> */
	export interface DBSecurityGroupMembership {
		DBSecurityGroupName?: string;
		Status?: string;
	}

	/** <p>This data type is used as a response element in the following actions:</p> <ul> <li> <p> <code>ModifyDBInstance</code> </p> </li> <li> <p> <code>RebootDBInstance</code> </p> </li> <li> <p> <code>RestoreDBInstanceFromDBSnapshot</code> </p> </li> <li> <p> <code>RestoreDBInstanceToPointInTime</code> </p> </li> </ul> */
	export interface DBSecurityGroupMembershipFormProperties {
		DBSecurityGroupName: FormControl<string | null | undefined>,
		Status: FormControl<string | null | undefined>,
	}
	export function CreateDBSecurityGroupMembershipFormGroup() {
		return new FormGroup<DBSecurityGroupMembershipFormProperties>({
			DBSecurityGroupName: new FormControl<string | null | undefined>(undefined),
			Status: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** <p>Contains the name and values of a manual DB snapshot attribute</p> <p>Manual DB snapshot attributes are used to authorize other Amazon Web Services accounts to restore a manual DB snapshot. For more information, see the <code>ModifyDBSnapshotAttribute</code> API.</p> */
	export interface DBSnapshotAttribute {
		AttributeName?: string;
		AttributeValues?: Array<string>;
	}

	/** <p>Contains the name and values of a manual DB snapshot attribute</p> <p>Manual DB snapshot attributes are used to authorize other Amazon Web Services accounts to restore a manual DB snapshot. For more information, see the <code>ModifyDBSnapshotAttribute</code> API.</p> */
	export interface DBSnapshotAttributeFormProperties {
		AttributeName: FormControl<string | null | undefined>,
	}
	export function CreateDBSnapshotAttributeFormGroup() {
		return new FormGroup<DBSnapshotAttributeFormProperties>({
			AttributeName: new FormControl<string | null | undefined>(undefined),
		});

	}

	export interface DeleteBlueGreenDeploymentRequest {

		/** Required */
		BlueGreenDeploymentIdentifier: string;
		DeleteTarget?: boolean | null;
	}
	export interface DeleteBlueGreenDeploymentRequestFormProperties {

		/** Required */
		BlueGreenDeploymentIdentifier: FormControl<string | null | undefined>,
		DeleteTarget: FormControl<boolean | null | undefined>,
	}
	export function CreateDeleteBlueGreenDeploymentRequestFormGroup() {
		return new FormGroup<DeleteBlueGreenDeploymentRequestFormProperties>({
			BlueGreenDeploymentIdentifier: new FormControl<string | null | undefined>(undefined, [Validators.required]),
			DeleteTarget: new FormControl<boolean | null | undefined>(undefined),
		});

	}

	export interface DeleteCustomDBEngineVersionMessage {

		/** Required */
		Engine: string;

		/** Required */
		EngineVersion: string;
	}
	export interface DeleteCustomDBEngineVersionMessageFormProperties {

		/** Required */
		Engine: FormControl<string | null | undefined>,

		/** Required */
		EngineVersion: FormControl<string | null | undefined>,
	}
	export function CreateDeleteCustomDBEngineVersionMessageFormGroup() {
		return new FormGroup<DeleteCustomDBEngineVersionMessageFormProperties>({
			Engine: new FormControl<string | null | undefined>(undefined, [Validators.required]),
			EngineVersion: new FormControl<string | null | undefined>(undefined, [Validators.required]),
		});

	}

	export interface DeleteDBClusterAutomatedBackupMessage {

		/** Required */
		DbClusterResourceId: string;
	}
	export interface DeleteDBClusterAutomatedBackupMessageFormProperties {

		/** Required */
		DbClusterResourceId: FormControl<string | null | undefined>,
	}
	export function CreateDeleteDBClusterAutomatedBackupMessageFormGroup() {
		return new FormGroup<DeleteDBClusterAutomatedBackupMessageFormProperties>({
			DbClusterResourceId: new FormControl<string | null | undefined>(undefined, [Validators.required]),
		});

	}

	export interface DeleteDBClusterEndpointMessage {

		/** Required */
		DBClusterEndpointIdentifier: string;
	}
	export interface DeleteDBClusterEndpointMessageFormProperties {

		/** Required */
		DBClusterEndpointIdentifier: FormControl<string | null | undefined>,
	}
	export function CreateDeleteDBClusterEndpointMessageFormGroup() {
		return new FormGroup<DeleteDBClusterEndpointMessageFormProperties>({
			DBClusterEndpointIdentifier: new FormControl<string | null | undefined>(undefined, [Validators.required]),
		});

	}


	/** <p/> */
	export interface DeleteDBClusterMessage {

		/** Required */
		DBClusterIdentifier: string;
		SkipFinalSnapshot?: boolean | null;
		FinalDBSnapshotIdentifier?: string;
		DeleteAutomatedBackups?: boolean | null;
	}

	/** <p/> */
	export interface DeleteDBClusterMessageFormProperties {

		/** Required */
		DBClusterIdentifier: FormControl<string | null | undefined>,
		SkipFinalSnapshot: FormControl<boolean | null | undefined>,
		FinalDBSnapshotIdentifier: FormControl<string | null | undefined>,
		DeleteAutomatedBackups: FormControl<boolean | null | undefined>,
	}
	export function CreateDeleteDBClusterMessageFormGroup() {
		return new FormGroup<DeleteDBClusterMessageFormProperties>({
			DBClusterIdentifier: new FormControl<string | null | undefined>(undefined, [Validators.required]),
			SkipFinalSnapshot: new FormControl<boolean | null | undefined>(undefined),
			FinalDBSnapshotIdentifier: new FormControl<string | null | undefined>(undefined),
			DeleteAutomatedBackups: new FormControl<boolean | null | undefined>(undefined),
		});

	}


	/** <p/> */
	export interface DeleteDBClusterParameterGroupMessage {

		/** Required */
		DBClusterParameterGroupName: string;
	}

	/** <p/> */
	export interface DeleteDBClusterParameterGroupMessageFormProperties {

		/** Required */
		DBClusterParameterGroupName: FormControl<string | null | undefined>,
	}
	export function CreateDeleteDBClusterParameterGroupMessageFormGroup() {
		return new FormGroup<DeleteDBClusterParameterGroupMessageFormProperties>({
			DBClusterParameterGroupName: new FormControl<string | null | undefined>(undefined, [Validators.required]),
		});

	}


	/** <p/> */
	export interface DeleteDBClusterSnapshotMessage {

		/** Required */
		DBClusterSnapshotIdentifier: string;
	}

	/** <p/> */
	export interface DeleteDBClusterSnapshotMessageFormProperties {

		/** Required */
		DBClusterSnapshotIdentifier: FormControl<string | null | undefined>,
	}
	export function CreateDeleteDBClusterSnapshotMessageFormGroup() {
		return new FormGroup<DeleteDBClusterSnapshotMessageFormProperties>({
			DBClusterSnapshotIdentifier: new FormControl<string | null | undefined>(undefined, [Validators.required]),
		});

	}


	/** Parameter input for the <code>DeleteDBInstanceAutomatedBackup</code> operation. */
	export interface DeleteDBInstanceAutomatedBackupMessage {
		DbiResourceId?: string;
		DBInstanceAutomatedBackupsArn?: string;
	}

	/** Parameter input for the <code>DeleteDBInstanceAutomatedBackup</code> operation. */
	export interface DeleteDBInstanceAutomatedBackupMessageFormProperties {
		DbiResourceId: FormControl<string | null | undefined>,
		DBInstanceAutomatedBackupsArn: FormControl<string | null | undefined>,
	}
	export function CreateDeleteDBInstanceAutomatedBackupMessageFormGroup() {
		return new FormGroup<DeleteDBInstanceAutomatedBackupMessageFormProperties>({
			DbiResourceId: new FormControl<string | null | undefined>(undefined),
			DBInstanceAutomatedBackupsArn: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** <p/> */
	export interface DeleteDBInstanceMessage {

		/** Required */
		DBInstanceIdentifier: string;
		SkipFinalSnapshot?: boolean | null;
		FinalDBSnapshotIdentifier?: string;
		DeleteAutomatedBackups?: boolean | null;
	}

	/** <p/> */
	export interface DeleteDBInstanceMessageFormProperties {

		/** Required */
		DBInstanceIdentifier: FormControl<string | null | undefined>,
		SkipFinalSnapshot: FormControl<boolean | null | undefined>,
		FinalDBSnapshotIdentifier: FormControl<string | null | undefined>,
		DeleteAutomatedBackups: FormControl<boolean | null | undefined>,
	}
	export function CreateDeleteDBInstanceMessageFormGroup() {
		return new FormGroup<DeleteDBInstanceMessageFormProperties>({
			DBInstanceIdentifier: new FormControl<string | null | undefined>(undefined, [Validators.required]),
			SkipFinalSnapshot: new FormControl<boolean | null | undefined>(undefined),
			FinalDBSnapshotIdentifier: new FormControl<string | null | undefined>(undefined),
			DeleteAutomatedBackups: new FormControl<boolean | null | undefined>(undefined),
		});

	}


	/** <p/> */
	export interface DeleteDBParameterGroupMessage {

		/** Required */
		DBParameterGroupName: string;
	}

	/** <p/> */
	export interface DeleteDBParameterGroupMessageFormProperties {

		/** Required */
		DBParameterGroupName: FormControl<string | null | undefined>,
	}
	export function CreateDeleteDBParameterGroupMessageFormGroup() {
		return new FormGroup<DeleteDBParameterGroupMessageFormProperties>({
			DBParameterGroupName: new FormControl<string | null | undefined>(undefined, [Validators.required]),
		});

	}

	export interface DeleteDBProxyEndpointRequest {

		/** Required */
		DBProxyEndpointName: string;
	}
	export interface DeleteDBProxyEndpointRequestFormProperties {

		/** Required */
		DBProxyEndpointName: FormControl<string | null | undefined>,
	}
	export function CreateDeleteDBProxyEndpointRequestFormGroup() {
		return new FormGroup<DeleteDBProxyEndpointRequestFormProperties>({
			DBProxyEndpointName: new FormControl<string | null | undefined>(undefined, [Validators.required]),
		});

	}

	export interface DeleteDBProxyRequest {

		/** Required */
		DBProxyName: string;
	}
	export interface DeleteDBProxyRequestFormProperties {

		/** Required */
		DBProxyName: FormControl<string | null | undefined>,
	}
	export function CreateDeleteDBProxyRequestFormGroup() {
		return new FormGroup<DeleteDBProxyRequestFormProperties>({
			DBProxyName: new FormControl<string | null | undefined>(undefined, [Validators.required]),
		});

	}


	/** <p/> */
	export interface DeleteDBSecurityGroupMessage {

		/** Required */
		DBSecurityGroupName: string;
	}

	/** <p/> */
	export interface DeleteDBSecurityGroupMessageFormProperties {

		/** Required */
		DBSecurityGroupName: FormControl<string | null | undefined>,
	}
	export function CreateDeleteDBSecurityGroupMessageFormGroup() {
		return new FormGroup<DeleteDBSecurityGroupMessageFormProperties>({
			DBSecurityGroupName: new FormControl<string | null | undefined>(undefined, [Validators.required]),
		});

	}


	/** <p/> */
	export interface DeleteDBSnapshotMessage {

		/** Required */
		DBSnapshotIdentifier: string;
	}

	/** <p/> */
	export interface DeleteDBSnapshotMessageFormProperties {

		/** Required */
		DBSnapshotIdentifier: FormControl<string | null | undefined>,
	}
	export function CreateDeleteDBSnapshotMessageFormGroup() {
		return new FormGroup<DeleteDBSnapshotMessageFormProperties>({
			DBSnapshotIdentifier: new FormControl<string | null | undefined>(undefined, [Validators.required]),
		});

	}


	/** <p/> */
	export interface DeleteDBSubnetGroupMessage {

		/** Required */
		DBSubnetGroupName: string;
	}

	/** <p/> */
	export interface DeleteDBSubnetGroupMessageFormProperties {

		/** Required */
		DBSubnetGroupName: FormControl<string | null | undefined>,
	}
	export function CreateDeleteDBSubnetGroupMessageFormGroup() {
		return new FormGroup<DeleteDBSubnetGroupMessageFormProperties>({
			DBSubnetGroupName: new FormControl<string | null | undefined>(undefined, [Validators.required]),
		});

	}


	/** <p/> */
	export interface DeleteEventSubscriptionMessage {

		/** Required */
		SubscriptionName: string;
	}

	/** <p/> */
	export interface DeleteEventSubscriptionMessageFormProperties {

		/** Required */
		SubscriptionName: FormControl<string | null | undefined>,
	}
	export function CreateDeleteEventSubscriptionMessageFormGroup() {
		return new FormGroup<DeleteEventSubscriptionMessageFormProperties>({
			SubscriptionName: new FormControl<string | null | undefined>(undefined, [Validators.required]),
		});

	}

	export interface DeleteGlobalClusterMessage {

		/** Required */
		GlobalClusterIdentifier: string;
	}
	export interface DeleteGlobalClusterMessageFormProperties {

		/** Required */
		GlobalClusterIdentifier: FormControl<string | null | undefined>,
	}
	export function CreateDeleteGlobalClusterMessageFormGroup() {
		return new FormGroup<DeleteGlobalClusterMessageFormProperties>({
			GlobalClusterIdentifier: new FormControl<string | null | undefined>(undefined, [Validators.required]),
		});

	}


	/** <p/> */
	export interface DeleteOptionGroupMessage {

		/** Required */
		OptionGroupName: string;
	}

	/** <p/> */
	export interface DeleteOptionGroupMessageFormProperties {

		/** Required */
		OptionGroupName: FormControl<string | null | undefined>,
	}
	export function CreateDeleteOptionGroupMessageFormGroup() {
		return new FormGroup<DeleteOptionGroupMessageFormProperties>({
			OptionGroupName: new FormControl<string | null | undefined>(undefined, [Validators.required]),
		});

	}

	export interface DeregisterDBProxyTargetsRequest {

		/** Required */
		DBProxyName: string;
		TargetGroupName?: string;
		DBInstanceIdentifiers?: Array<string>;
		DBClusterIdentifiers?: Array<string>;
	}
	export interface DeregisterDBProxyTargetsRequestFormProperties {

		/** Required */
		DBProxyName: FormControl<string | null | undefined>,
		TargetGroupName: FormControl<string | null | undefined>,
	}
	export function CreateDeregisterDBProxyTargetsRequestFormGroup() {
		return new FormGroup<DeregisterDBProxyTargetsRequestFormProperties>({
			DBProxyName: new FormControl<string | null | undefined>(undefined, [Validators.required]),
			TargetGroupName: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** <p/> */
	export interface DescribeAccountAttributesMessage {
	}

	/** <p/> */
	export interface DescribeAccountAttributesMessageFormProperties {
	}
	export function CreateDescribeAccountAttributesMessageFormGroup() {
		return new FormGroup<DescribeAccountAttributesMessageFormProperties>({
		});

	}

	export interface DescribeBlueGreenDeploymentsRequest {
		BlueGreenDeploymentIdentifier?: string;
		Filters?: Array<string>;
		Marker?: string;
		MaxRecords?: number | null;
	}
	export interface DescribeBlueGreenDeploymentsRequestFormProperties {
		BlueGreenDeploymentIdentifier: FormControl<string | null | undefined>,
		Marker: FormControl<string | null | undefined>,
		MaxRecords: FormControl<number | null | undefined>,
	}
	export function CreateDescribeBlueGreenDeploymentsRequestFormGroup() {
		return new FormGroup<DescribeBlueGreenDeploymentsRequestFormProperties>({
			BlueGreenDeploymentIdentifier: new FormControl<string | null | undefined>(undefined),
			Marker: new FormControl<string | null | undefined>(undefined),
			MaxRecords: new FormControl<number | null | undefined>(undefined),
		});

	}


	/** <p/> */
	export interface DescribeCertificatesMessage {
		CertificateIdentifier?: string;
		Filters?: Array<string>;
		MaxRecords?: number | null;
		Marker?: string;
	}

	/** <p/> */
	export interface DescribeCertificatesMessageFormProperties {
		CertificateIdentifier: FormControl<string | null | undefined>,
		MaxRecords: FormControl<number | null | undefined>,
		Marker: FormControl<string | null | undefined>,
	}
	export function CreateDescribeCertificatesMessageFormGroup() {
		return new FormGroup<DescribeCertificatesMessageFormProperties>({
			CertificateIdentifier: new FormControl<string | null | undefined>(undefined),
			MaxRecords: new FormControl<number | null | undefined>(undefined),
			Marker: new FormControl<string | null | undefined>(undefined),
		});

	}

	export interface DescribeDBClusterAutomatedBackupsMessage {
		DbClusterResourceId?: string;
		DBClusterIdentifier?: string;
		Filters?: Array<string>;
		MaxRecords?: number | null;
		Marker?: string;
	}
	export interface DescribeDBClusterAutomatedBackupsMessageFormProperties {
		DbClusterResourceId: FormControl<string | null | undefined>,
		DBClusterIdentifier: FormControl<string | null | undefined>,
		MaxRecords: FormControl<number | null | undefined>,
		Marker: FormControl<string | null | undefined>,
	}
	export function CreateDescribeDBClusterAutomatedBackupsMessageFormGroup() {
		return new FormGroup<DescribeDBClusterAutomatedBackupsMessageFormProperties>({
			DbClusterResourceId: new FormControl<string | null | undefined>(undefined),
			DBClusterIdentifier: new FormControl<string | null | undefined>(undefined),
			MaxRecords: new FormControl<number | null | undefined>(undefined),
			Marker: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** <p/> */
	export interface DescribeDBClusterBacktracksMessage {

		/** Required */
		DBClusterIdentifier: string;
		BacktrackIdentifier?: string;
		Filters?: Array<string>;
		MaxRecords?: number | null;
		Marker?: string;
	}

	/** <p/> */
	export interface DescribeDBClusterBacktracksMessageFormProperties {

		/** Required */
		DBClusterIdentifier: FormControl<string | null | undefined>,
		BacktrackIdentifier: FormControl<string | null | undefined>,
		MaxRecords: FormControl<number | null | undefined>,
		Marker: FormControl<string | null | undefined>,
	}
	export function CreateDescribeDBClusterBacktracksMessageFormGroup() {
		return new FormGroup<DescribeDBClusterBacktracksMessageFormProperties>({
			DBClusterIdentifier: new FormControl<string | null | undefined>(undefined, [Validators.required]),
			BacktrackIdentifier: new FormControl<string | null | undefined>(undefined),
			MaxRecords: new FormControl<number | null | undefined>(undefined),
			Marker: new FormControl<string | null | undefined>(undefined),
		});

	}

	export interface DescribeDBClusterEndpointsMessage {
		DBClusterIdentifier?: string;
		DBClusterEndpointIdentifier?: string;
		Filters?: Array<string>;
		MaxRecords?: number | null;
		Marker?: string;
	}
	export interface DescribeDBClusterEndpointsMessageFormProperties {
		DBClusterIdentifier: FormControl<string | null | undefined>,
		DBClusterEndpointIdentifier: FormControl<string | null | undefined>,
		MaxRecords: FormControl<number | null | undefined>,
		Marker: FormControl<string | null | undefined>,
	}
	export function CreateDescribeDBClusterEndpointsMessageFormGroup() {
		return new FormGroup<DescribeDBClusterEndpointsMessageFormProperties>({
			DBClusterIdentifier: new FormControl<string | null | undefined>(undefined),
			DBClusterEndpointIdentifier: new FormControl<string | null | undefined>(undefined),
			MaxRecords: new FormControl<number | null | undefined>(undefined),
			Marker: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** <p/> */
	export interface DescribeDBClusterParameterGroupsMessage {
		DBClusterParameterGroupName?: string;
		Filters?: Array<string>;
		MaxRecords?: number | null;
		Marker?: string;
	}

	/** <p/> */
	export interface DescribeDBClusterParameterGroupsMessageFormProperties {
		DBClusterParameterGroupName: FormControl<string | null | undefined>,
		MaxRecords: FormControl<number | null | undefined>,
		Marker: FormControl<string | null | undefined>,
	}
	export function CreateDescribeDBClusterParameterGroupsMessageFormGroup() {
		return new FormGroup<DescribeDBClusterParameterGroupsMessageFormProperties>({
			DBClusterParameterGroupName: new FormControl<string | null | undefined>(undefined),
			MaxRecords: new FormControl<number | null | undefined>(undefined),
			Marker: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** <p/> */
	export interface DescribeDBClusterParametersMessage {

		/** Required */
		DBClusterParameterGroupName: string;
		Source?: string;
		Filters?: Array<string>;
		MaxRecords?: number | null;
		Marker?: string;
	}

	/** <p/> */
	export interface DescribeDBClusterParametersMessageFormProperties {

		/** Required */
		DBClusterParameterGroupName: FormControl<string | null | undefined>,
		Source: FormControl<string | null | undefined>,
		MaxRecords: FormControl<number | null | undefined>,
		Marker: FormControl<string | null | undefined>,
	}
	export function CreateDescribeDBClusterParametersMessageFormGroup() {
		return new FormGroup<DescribeDBClusterParametersMessageFormProperties>({
			DBClusterParameterGroupName: new FormControl<string | null | undefined>(undefined, [Validators.required]),
			Source: new FormControl<string | null | undefined>(undefined),
			MaxRecords: new FormControl<number | null | undefined>(undefined),
			Marker: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** <p/> */
	export interface DescribeDBClusterSnapshotAttributesMessage {

		/** Required */
		DBClusterSnapshotIdentifier: string;
	}

	/** <p/> */
	export interface DescribeDBClusterSnapshotAttributesMessageFormProperties {

		/** Required */
		DBClusterSnapshotIdentifier: FormControl<string | null | undefined>,
	}
	export function CreateDescribeDBClusterSnapshotAttributesMessageFormGroup() {
		return new FormGroup<DescribeDBClusterSnapshotAttributesMessageFormProperties>({
			DBClusterSnapshotIdentifier: new FormControl<string | null | undefined>(undefined, [Validators.required]),
		});

	}


	/** <p/> */
	export interface DescribeDBClusterSnapshotsMessage {
		DBClusterIdentifier?: string;
		DBClusterSnapshotIdentifier?: string;
		SnapshotType?: string;
		Filters?: Array<string>;
		MaxRecords?: number | null;
		Marker?: string;
		IncludeShared?: boolean | null;
		IncludePublic?: boolean | null;
		DbClusterResourceId?: string;
	}

	/** <p/> */
	export interface DescribeDBClusterSnapshotsMessageFormProperties {
		DBClusterIdentifier: FormControl<string | null | undefined>,
		DBClusterSnapshotIdentifier: FormControl<string | null | undefined>,
		SnapshotType: FormControl<string | null | undefined>,
		MaxRecords: FormControl<number | null | undefined>,
		Marker: FormControl<string | null | undefined>,
		IncludeShared: FormControl<boolean | null | undefined>,
		IncludePublic: FormControl<boolean | null | undefined>,
		DbClusterResourceId: FormControl<string | null | undefined>,
	}
	export function CreateDescribeDBClusterSnapshotsMessageFormGroup() {
		return new FormGroup<DescribeDBClusterSnapshotsMessageFormProperties>({
			DBClusterIdentifier: new FormControl<string | null | undefined>(undefined),
			DBClusterSnapshotIdentifier: new FormControl<string | null | undefined>(undefined),
			SnapshotType: new FormControl<string | null | undefined>(undefined),
			MaxRecords: new FormControl<number | null | undefined>(undefined),
			Marker: new FormControl<string | null | undefined>(undefined),
			IncludeShared: new FormControl<boolean | null | undefined>(undefined),
			IncludePublic: new FormControl<boolean | null | undefined>(undefined),
			DbClusterResourceId: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** <p/> */
	export interface DescribeDBClustersMessage {
		DBClusterIdentifier?: string;
		Filters?: Array<string>;
		MaxRecords?: number | null;
		Marker?: string;
		IncludeShared?: boolean | null;
	}

	/** <p/> */
	export interface DescribeDBClustersMessageFormProperties {
		DBClusterIdentifier: FormControl<string | null | undefined>,
		MaxRecords: FormControl<number | null | undefined>,
		Marker: FormControl<string | null | undefined>,
		IncludeShared: FormControl<boolean | null | undefined>,
	}
	export function CreateDescribeDBClustersMessageFormGroup() {
		return new FormGroup<DescribeDBClustersMessageFormProperties>({
			DBClusterIdentifier: new FormControl<string | null | undefined>(undefined),
			MaxRecords: new FormControl<number | null | undefined>(undefined),
			Marker: new FormControl<string | null | undefined>(undefined),
			IncludeShared: new FormControl<boolean | null | undefined>(undefined),
		});

	}

	export interface DescribeDBEngineVersionsMessage {
		Engine?: string;
		EngineVersion?: string;
		DBParameterGroupFamily?: string;
		Filters?: Array<string>;
		MaxRecords?: number | null;
		Marker?: string;
		DefaultOnly?: boolean | null;
		ListSupportedCharacterSets?: boolean | null;
		ListSupportedTimezones?: boolean | null;
		IncludeAll?: boolean | null;
	}
	export interface DescribeDBEngineVersionsMessageFormProperties {
		Engine: FormControl<string | null | undefined>,
		EngineVersion: FormControl<string | null | undefined>,
		DBParameterGroupFamily: FormControl<string | null | undefined>,
		MaxRecords: FormControl<number | null | undefined>,
		Marker: FormControl<string | null | undefined>,
		DefaultOnly: FormControl<boolean | null | undefined>,
		ListSupportedCharacterSets: FormControl<boolean | null | undefined>,
		ListSupportedTimezones: FormControl<boolean | null | undefined>,
		IncludeAll: FormControl<boolean | null | undefined>,
	}
	export function CreateDescribeDBEngineVersionsMessageFormGroup() {
		return new FormGroup<DescribeDBEngineVersionsMessageFormProperties>({
			Engine: new FormControl<string | null | undefined>(undefined),
			EngineVersion: new FormControl<string | null | undefined>(undefined),
			DBParameterGroupFamily: new FormControl<string | null | undefined>(undefined),
			MaxRecords: new FormControl<number | null | undefined>(undefined),
			Marker: new FormControl<string | null | undefined>(undefined),
			DefaultOnly: new FormControl<boolean | null | undefined>(undefined),
			ListSupportedCharacterSets: new FormControl<boolean | null | undefined>(undefined),
			ListSupportedTimezones: new FormControl<boolean | null | undefined>(undefined),
			IncludeAll: new FormControl<boolean | null | undefined>(undefined),
		});

	}


	/** Parameter input for DescribeDBInstanceAutomatedBackups. */
	export interface DescribeDBInstanceAutomatedBackupsMessage {
		DbiResourceId?: string;
		DBInstanceIdentifier?: string;
		Filters?: Array<string>;
		MaxRecords?: number | null;
		Marker?: string;
		DBInstanceAutomatedBackupsArn?: string;
	}

	/** Parameter input for DescribeDBInstanceAutomatedBackups. */
	export interface DescribeDBInstanceAutomatedBackupsMessageFormProperties {
		DbiResourceId: FormControl<string | null | undefined>,
		DBInstanceIdentifier: FormControl<string | null | undefined>,
		MaxRecords: FormControl<number | null | undefined>,
		Marker: FormControl<string | null | undefined>,
		DBInstanceAutomatedBackupsArn: FormControl<string | null | undefined>,
	}
	export function CreateDescribeDBInstanceAutomatedBackupsMessageFormGroup() {
		return new FormGroup<DescribeDBInstanceAutomatedBackupsMessageFormProperties>({
			DbiResourceId: new FormControl<string | null | undefined>(undefined),
			DBInstanceIdentifier: new FormControl<string | null | undefined>(undefined),
			MaxRecords: new FormControl<number | null | undefined>(undefined),
			Marker: new FormControl<string | null | undefined>(undefined),
			DBInstanceAutomatedBackupsArn: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** <p/> */
	export interface DescribeDBInstancesMessage {
		DBInstanceIdentifier?: string;
		Filters?: Array<string>;
		MaxRecords?: number | null;
		Marker?: string;
	}

	/** <p/> */
	export interface DescribeDBInstancesMessageFormProperties {
		DBInstanceIdentifier: FormControl<string | null | undefined>,
		MaxRecords: FormControl<number | null | undefined>,
		Marker: FormControl<string | null | undefined>,
	}
	export function CreateDescribeDBInstancesMessageFormGroup() {
		return new FormGroup<DescribeDBInstancesMessageFormProperties>({
			DBInstanceIdentifier: new FormControl<string | null | undefined>(undefined),
			MaxRecords: new FormControl<number | null | undefined>(undefined),
			Marker: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** This data type is used as a response element to <code>DescribeDBLogFiles</code>. */
	export interface DescribeDBLogFilesDetails {
		LogFileName?: string;
		LastWritten?: number | null;
		Size?: number | null;
	}

	/** This data type is used as a response element to <code>DescribeDBLogFiles</code>. */
	export interface DescribeDBLogFilesDetailsFormProperties {
		LogFileName: FormControl<string | null | undefined>,
		LastWritten: FormControl<number | null | undefined>,
		Size: FormControl<number | null | undefined>,
	}
	export function CreateDescribeDBLogFilesDetailsFormGroup() {
		return new FormGroup<DescribeDBLogFilesDetailsFormProperties>({
			LogFileName: new FormControl<string | null | undefined>(undefined),
			LastWritten: new FormControl<number | null | undefined>(undefined),
			Size: new FormControl<number | null | undefined>(undefined),
		});

	}


	/** <p/> */
	export interface DescribeDBLogFilesMessage {

		/** Required */
		DBInstanceIdentifier: string;
		FilenameContains?: string;
		FileLastWritten?: number | null;
		FileSize?: number | null;
		Filters?: Array<string>;
		MaxRecords?: number | null;
		Marker?: string;
	}

	/** <p/> */
	export interface DescribeDBLogFilesMessageFormProperties {

		/** Required */
		DBInstanceIdentifier: FormControl<string | null | undefined>,
		FilenameContains: FormControl<string | null | undefined>,
		FileLastWritten: FormControl<number | null | undefined>,
		FileSize: FormControl<number | null | undefined>,
		MaxRecords: FormControl<number | null | undefined>,
		Marker: FormControl<string | null | undefined>,
	}
	export function CreateDescribeDBLogFilesMessageFormGroup() {
		return new FormGroup<DescribeDBLogFilesMessageFormProperties>({
			DBInstanceIdentifier: new FormControl<string | null | undefined>(undefined, [Validators.required]),
			FilenameContains: new FormControl<string | null | undefined>(undefined),
			FileLastWritten: new FormControl<number | null | undefined>(undefined),
			FileSize: new FormControl<number | null | undefined>(undefined),
			MaxRecords: new FormControl<number | null | undefined>(undefined),
			Marker: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** <p/> */
	export interface DescribeDBParameterGroupsMessage {
		DBParameterGroupName?: string;
		Filters?: Array<string>;
		MaxRecords?: number | null;
		Marker?: string;
	}

	/** <p/> */
	export interface DescribeDBParameterGroupsMessageFormProperties {
		DBParameterGroupName: FormControl<string | null | undefined>,
		MaxRecords: FormControl<number | null | undefined>,
		Marker: FormControl<string | null | undefined>,
	}
	export function CreateDescribeDBParameterGroupsMessageFormGroup() {
		return new FormGroup<DescribeDBParameterGroupsMessageFormProperties>({
			DBParameterGroupName: new FormControl<string | null | undefined>(undefined),
			MaxRecords: new FormControl<number | null | undefined>(undefined),
			Marker: new FormControl<string | null | undefined>(undefined),
		});

	}

	export interface DescribeDBParametersMessage {

		/** Required */
		DBParameterGroupName: string;
		Source?: string;
		Filters?: Array<string>;
		MaxRecords?: number | null;
		Marker?: string;
	}
	export interface DescribeDBParametersMessageFormProperties {

		/** Required */
		DBParameterGroupName: FormControl<string | null | undefined>,
		Source: FormControl<string | null | undefined>,
		MaxRecords: FormControl<number | null | undefined>,
		Marker: FormControl<string | null | undefined>,
	}
	export function CreateDescribeDBParametersMessageFormGroup() {
		return new FormGroup<DescribeDBParametersMessageFormProperties>({
			DBParameterGroupName: new FormControl<string | null | undefined>(undefined, [Validators.required]),
			Source: new FormControl<string | null | undefined>(undefined),
			MaxRecords: new FormControl<number | null | undefined>(undefined),
			Marker: new FormControl<string | null | undefined>(undefined),
		});

	}

	export interface DescribeDBProxiesRequest {
		DBProxyName?: string;
		Filters?: Array<string>;
		Marker?: string;
		MaxRecords?: number | null;
	}
	export interface DescribeDBProxiesRequestFormProperties {
		DBProxyName: FormControl<string | null | undefined>,
		Marker: FormControl<string | null | undefined>,
		MaxRecords: FormControl<number | null | undefined>,
	}
	export function CreateDescribeDBProxiesRequestFormGroup() {
		return new FormGroup<DescribeDBProxiesRequestFormProperties>({
			DBProxyName: new FormControl<string | null | undefined>(undefined),
			Marker: new FormControl<string | null | undefined>(undefined),
			MaxRecords: new FormControl<number | null | undefined>(undefined),
		});

	}

	export interface DescribeDBProxyEndpointsRequest {
		DBProxyName?: string;
		DBProxyEndpointName?: string;
		Filters?: Array<string>;
		Marker?: string;
		MaxRecords?: number | null;
	}
	export interface DescribeDBProxyEndpointsRequestFormProperties {
		DBProxyName: FormControl<string | null | undefined>,
		DBProxyEndpointName: FormControl<string | null | undefined>,
		Marker: FormControl<string | null | undefined>,
		MaxRecords: FormControl<number | null | undefined>,
	}
	export function CreateDescribeDBProxyEndpointsRequestFormGroup() {
		return new FormGroup<DescribeDBProxyEndpointsRequestFormProperties>({
			DBProxyName: new FormControl<string | null | undefined>(undefined),
			DBProxyEndpointName: new FormControl<string | null | undefined>(undefined),
			Marker: new FormControl<string | null | undefined>(undefined),
			MaxRecords: new FormControl<number | null | undefined>(undefined),
		});

	}

	export interface DescribeDBProxyTargetGroupsRequest {

		/** Required */
		DBProxyName: string;
		TargetGroupName?: string;
		Filters?: Array<string>;
		Marker?: string;
		MaxRecords?: number | null;
	}
	export interface DescribeDBProxyTargetGroupsRequestFormProperties {

		/** Required */
		DBProxyName: FormControl<string | null | undefined>,
		TargetGroupName: FormControl<string | null | undefined>,
		Marker: FormControl<string | null | undefined>,
		MaxRecords: FormControl<number | null | undefined>,
	}
	export function CreateDescribeDBProxyTargetGroupsRequestFormGroup() {
		return new FormGroup<DescribeDBProxyTargetGroupsRequestFormProperties>({
			DBProxyName: new FormControl<string | null | undefined>(undefined, [Validators.required]),
			TargetGroupName: new FormControl<string | null | undefined>(undefined),
			Marker: new FormControl<string | null | undefined>(undefined),
			MaxRecords: new FormControl<number | null | undefined>(undefined),
		});

	}

	export interface DescribeDBProxyTargetsRequest {

		/** Required */
		DBProxyName: string;
		TargetGroupName?: string;
		Filters?: Array<string>;
		Marker?: string;
		MaxRecords?: number | null;
	}
	export interface DescribeDBProxyTargetsRequestFormProperties {

		/** Required */
		DBProxyName: FormControl<string | null | undefined>,
		TargetGroupName: FormControl<string | null | undefined>,
		Marker: FormControl<string | null | undefined>,
		MaxRecords: FormControl<number | null | undefined>,
	}
	export function CreateDescribeDBProxyTargetsRequestFormGroup() {
		return new FormGroup<DescribeDBProxyTargetsRequestFormProperties>({
			DBProxyName: new FormControl<string | null | undefined>(undefined, [Validators.required]),
			TargetGroupName: new FormControl<string | null | undefined>(undefined),
			Marker: new FormControl<string | null | undefined>(undefined),
			MaxRecords: new FormControl<number | null | undefined>(undefined),
		});

	}


	/** <p/> */
	export interface DescribeDBSecurityGroupsMessage {
		DBSecurityGroupName?: string;
		Filters?: Array<string>;
		MaxRecords?: number | null;
		Marker?: string;
	}

	/** <p/> */
	export interface DescribeDBSecurityGroupsMessageFormProperties {
		DBSecurityGroupName: FormControl<string | null | undefined>,
		MaxRecords: FormControl<number | null | undefined>,
		Marker: FormControl<string | null | undefined>,
	}
	export function CreateDescribeDBSecurityGroupsMessageFormGroup() {
		return new FormGroup<DescribeDBSecurityGroupsMessageFormProperties>({
			DBSecurityGroupName: new FormControl<string | null | undefined>(undefined),
			MaxRecords: new FormControl<number | null | undefined>(undefined),
			Marker: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** <p/> */
	export interface DescribeDBSnapshotAttributesMessage {

		/** Required */
		DBSnapshotIdentifier: string;
	}

	/** <p/> */
	export interface DescribeDBSnapshotAttributesMessageFormProperties {

		/** Required */
		DBSnapshotIdentifier: FormControl<string | null | undefined>,
	}
	export function CreateDescribeDBSnapshotAttributesMessageFormGroup() {
		return new FormGroup<DescribeDBSnapshotAttributesMessageFormProperties>({
			DBSnapshotIdentifier: new FormControl<string | null | undefined>(undefined, [Validators.required]),
		});

	}


	/** <p/> */
	export interface DescribeDBSnapshotsMessage {
		DBInstanceIdentifier?: string;
		DBSnapshotIdentifier?: string;
		SnapshotType?: string;
		Filters?: Array<string>;
		MaxRecords?: number | null;
		Marker?: string;
		IncludeShared?: boolean | null;
		IncludePublic?: boolean | null;
		DbiResourceId?: string;
	}

	/** <p/> */
	export interface DescribeDBSnapshotsMessageFormProperties {
		DBInstanceIdentifier: FormControl<string | null | undefined>,
		DBSnapshotIdentifier: FormControl<string | null | undefined>,
		SnapshotType: FormControl<string | null | undefined>,
		MaxRecords: FormControl<number | null | undefined>,
		Marker: FormControl<string | null | undefined>,
		IncludeShared: FormControl<boolean | null | undefined>,
		IncludePublic: FormControl<boolean | null | undefined>,
		DbiResourceId: FormControl<string | null | undefined>,
	}
	export function CreateDescribeDBSnapshotsMessageFormGroup() {
		return new FormGroup<DescribeDBSnapshotsMessageFormProperties>({
			DBInstanceIdentifier: new FormControl<string | null | undefined>(undefined),
			DBSnapshotIdentifier: new FormControl<string | null | undefined>(undefined),
			SnapshotType: new FormControl<string | null | undefined>(undefined),
			MaxRecords: new FormControl<number | null | undefined>(undefined),
			Marker: new FormControl<string | null | undefined>(undefined),
			IncludeShared: new FormControl<boolean | null | undefined>(undefined),
			IncludePublic: new FormControl<boolean | null | undefined>(undefined),
			DbiResourceId: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** <p/> */
	export interface DescribeDBSubnetGroupsMessage {
		DBSubnetGroupName?: string;
		Filters?: Array<string>;
		MaxRecords?: number | null;
		Marker?: string;
	}

	/** <p/> */
	export interface DescribeDBSubnetGroupsMessageFormProperties {
		DBSubnetGroupName: FormControl<string | null | undefined>,
		MaxRecords: FormControl<number | null | undefined>,
		Marker: FormControl<string | null | undefined>,
	}
	export function CreateDescribeDBSubnetGroupsMessageFormGroup() {
		return new FormGroup<DescribeDBSubnetGroupsMessageFormProperties>({
			DBSubnetGroupName: new FormControl<string | null | undefined>(undefined),
			MaxRecords: new FormControl<number | null | undefined>(undefined),
			Marker: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** <p/> */
	export interface DescribeEngineDefaultClusterParametersMessage {

		/** Required */
		DBParameterGroupFamily: string;
		Filters?: Array<string>;
		MaxRecords?: number | null;
		Marker?: string;
	}

	/** <p/> */
	export interface DescribeEngineDefaultClusterParametersMessageFormProperties {

		/** Required */
		DBParameterGroupFamily: FormControl<string | null | undefined>,
		MaxRecords: FormControl<number | null | undefined>,
		Marker: FormControl<string | null | undefined>,
	}
	export function CreateDescribeEngineDefaultClusterParametersMessageFormGroup() {
		return new FormGroup<DescribeEngineDefaultClusterParametersMessageFormProperties>({
			DBParameterGroupFamily: new FormControl<string | null | undefined>(undefined, [Validators.required]),
			MaxRecords: new FormControl<number | null | undefined>(undefined),
			Marker: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** <p/> */
	export interface DescribeEngineDefaultParametersMessage {

		/** Required */
		DBParameterGroupFamily: string;
		Filters?: Array<string>;
		MaxRecords?: number | null;
		Marker?: string;
	}

	/** <p/> */
	export interface DescribeEngineDefaultParametersMessageFormProperties {

		/** Required */
		DBParameterGroupFamily: FormControl<string | null | undefined>,
		MaxRecords: FormControl<number | null | undefined>,
		Marker: FormControl<string | null | undefined>,
	}
	export function CreateDescribeEngineDefaultParametersMessageFormGroup() {
		return new FormGroup<DescribeEngineDefaultParametersMessageFormProperties>({
			DBParameterGroupFamily: new FormControl<string | null | undefined>(undefined, [Validators.required]),
			MaxRecords: new FormControl<number | null | undefined>(undefined),
			Marker: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** <p/> */
	export interface DescribeEventCategoriesMessage {
		SourceType?: string;
		Filters?: Array<string>;
	}

	/** <p/> */
	export interface DescribeEventCategoriesMessageFormProperties {
		SourceType: FormControl<string | null | undefined>,
	}
	export function CreateDescribeEventCategoriesMessageFormGroup() {
		return new FormGroup<DescribeEventCategoriesMessageFormProperties>({
			SourceType: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** <p/> */
	export interface DescribeEventSubscriptionsMessage {
		SubscriptionName?: string;
		Filters?: Array<string>;
		MaxRecords?: number | null;
		Marker?: string;
	}

	/** <p/> */
	export interface DescribeEventSubscriptionsMessageFormProperties {
		SubscriptionName: FormControl<string | null | undefined>,
		MaxRecords: FormControl<number | null | undefined>,
		Marker: FormControl<string | null | undefined>,
	}
	export function CreateDescribeEventSubscriptionsMessageFormGroup() {
		return new FormGroup<DescribeEventSubscriptionsMessageFormProperties>({
			SubscriptionName: new FormControl<string | null | undefined>(undefined),
			MaxRecords: new FormControl<number | null | undefined>(undefined),
			Marker: new FormControl<string | null | undefined>(undefined),
		});

	}

	export enum SourceType { 'db-instance' = 0, 'db-parameter-group' = 1, 'db-security-group' = 2, 'db-snapshot' = 3, 'db-cluster' = 4, 'db-cluster-snapshot' = 5, 'custom-engine-version' = 6, 'db-proxy' = 7, 'blue-green-deployment' = 8 }


	/** <p/> */
	export interface DescribeEventsMessage {
		SourceIdentifier?: string;
		SourceType?: SourceType;
		StartTime?: Date;
		EndTime?: Date;
		Duration?: number | null;
		EventCategories?: Array<string>;
		Filters?: Array<string>;
		MaxRecords?: number | null;
		Marker?: string;
	}

	/** <p/> */
	export interface DescribeEventsMessageFormProperties {
		SourceIdentifier: FormControl<string | null | undefined>,
		SourceType: FormControl<SourceType | null | undefined>,
		StartTime: FormControl<Date | null | undefined>,
		EndTime: FormControl<Date | null | undefined>,
		Duration: FormControl<number | null | undefined>,
		MaxRecords: FormControl<number | null | undefined>,
		Marker: FormControl<string | null | undefined>,
	}
	export function CreateDescribeEventsMessageFormGroup() {
		return new FormGroup<DescribeEventsMessageFormProperties>({
			SourceIdentifier: new FormControl<string | null | undefined>(undefined),
			SourceType: new FormControl<SourceType | null | undefined>(undefined),
			StartTime: new FormControl<Date | null | undefined>(undefined),
			EndTime: new FormControl<Date | null | undefined>(undefined),
			Duration: new FormControl<number | null | undefined>(undefined),
			MaxRecords: new FormControl<number | null | undefined>(undefined),
			Marker: new FormControl<string | null | undefined>(undefined),
		});

	}

	export interface DescribeExportTasksMessage {
		ExportTaskIdentifier?: string;
		SourceArn?: string;
		Filters?: Array<string>;
		Marker?: string;
		MaxRecords?: number | null;
		SourceType?: ExportSourceType;
	}
	export interface DescribeExportTasksMessageFormProperties {
		ExportTaskIdentifier: FormControl<string | null | undefined>,
		SourceArn: FormControl<string | null | undefined>,
		Marker: FormControl<string | null | undefined>,
		MaxRecords: FormControl<number | null | undefined>,
		SourceType: FormControl<ExportSourceType | null | undefined>,
	}
	export function CreateDescribeExportTasksMessageFormGroup() {
		return new FormGroup<DescribeExportTasksMessageFormProperties>({
			ExportTaskIdentifier: new FormControl<string | null | undefined>(undefined),
			SourceArn: new FormControl<string | null | undefined>(undefined),
			Marker: new FormControl<string | null | undefined>(undefined),
			MaxRecords: new FormControl<number | null | undefined>(undefined),
			SourceType: new FormControl<ExportSourceType | null | undefined>(undefined),
		});

	}

	export interface DescribeGlobalClustersMessage {
		GlobalClusterIdentifier?: string;
		Filters?: Array<string>;
		MaxRecords?: number | null;
		Marker?: string;
	}
	export interface DescribeGlobalClustersMessageFormProperties {
		GlobalClusterIdentifier: FormControl<string | null | undefined>,
		MaxRecords: FormControl<number | null | undefined>,
		Marker: FormControl<string | null | undefined>,
	}
	export function CreateDescribeGlobalClustersMessageFormGroup() {
		return new FormGroup<DescribeGlobalClustersMessageFormProperties>({
			GlobalClusterIdentifier: new FormControl<string | null | undefined>(undefined),
			MaxRecords: new FormControl<number | null | undefined>(undefined),
			Marker: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** <p/> */
	export interface DescribeOptionGroupOptionsMessage {

		/** Required */
		EngineName: string;
		MajorEngineVersion?: string;
		Filters?: Array<string>;
		MaxRecords?: number | null;
		Marker?: string;
	}

	/** <p/> */
	export interface DescribeOptionGroupOptionsMessageFormProperties {

		/** Required */
		EngineName: FormControl<string | null | undefined>,
		MajorEngineVersion: FormControl<string | null | undefined>,
		MaxRecords: FormControl<number | null | undefined>,
		Marker: FormControl<string | null | undefined>,
	}
	export function CreateDescribeOptionGroupOptionsMessageFormGroup() {
		return new FormGroup<DescribeOptionGroupOptionsMessageFormProperties>({
			EngineName: new FormControl<string | null | undefined>(undefined, [Validators.required]),
			MajorEngineVersion: new FormControl<string | null | undefined>(undefined),
			MaxRecords: new FormControl<number | null | undefined>(undefined),
			Marker: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** <p/> */
	export interface DescribeOptionGroupsMessage {
		OptionGroupName?: string;
		Filters?: Array<string>;
		Marker?: string;
		MaxRecords?: number | null;
		EngineName?: string;
		MajorEngineVersion?: string;
	}

	/** <p/> */
	export interface DescribeOptionGroupsMessageFormProperties {
		OptionGroupName: FormControl<string | null | undefined>,
		Marker: FormControl<string | null | undefined>,
		MaxRecords: FormControl<number | null | undefined>,
		EngineName: FormControl<string | null | undefined>,
		MajorEngineVersion: FormControl<string | null | undefined>,
	}
	export function CreateDescribeOptionGroupsMessageFormGroup() {
		return new FormGroup<DescribeOptionGroupsMessageFormProperties>({
			OptionGroupName: new FormControl<string | null | undefined>(undefined),
			Marker: new FormControl<string | null | undefined>(undefined),
			MaxRecords: new FormControl<number | null | undefined>(undefined),
			EngineName: new FormControl<string | null | undefined>(undefined),
			MajorEngineVersion: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** <p/> */
	export interface DescribeOrderableDBInstanceOptionsMessage {

		/** Required */
		Engine: string;
		EngineVersion?: string;
		DBInstanceClass?: string;
		LicenseModel?: string;
		AvailabilityZoneGroup?: string;
		Vpc?: boolean | null;
		Filters?: Array<string>;
		MaxRecords?: number | null;
		Marker?: string;
	}

	/** <p/> */
	export interface DescribeOrderableDBInstanceOptionsMessageFormProperties {

		/** Required */
		Engine: FormControl<string | null | undefined>,
		EngineVersion: FormControl<string | null | undefined>,
		DBInstanceClass: FormControl<string | null | undefined>,
		LicenseModel: FormControl<string | null | undefined>,
		AvailabilityZoneGroup: FormControl<string | null | undefined>,
		Vpc: FormControl<boolean | null | undefined>,
		MaxRecords: FormControl<number | null | undefined>,
		Marker: FormControl<string | null | undefined>,
	}
	export function CreateDescribeOrderableDBInstanceOptionsMessageFormGroup() {
		return new FormGroup<DescribeOrderableDBInstanceOptionsMessageFormProperties>({
			Engine: new FormControl<string | null | undefined>(undefined, [Validators.required]),
			EngineVersion: new FormControl<string | null | undefined>(undefined),
			DBInstanceClass: new FormControl<string | null | undefined>(undefined),
			LicenseModel: new FormControl<string | null | undefined>(undefined),
			AvailabilityZoneGroup: new FormControl<string | null | undefined>(undefined),
			Vpc: new FormControl<boolean | null | undefined>(undefined),
			MaxRecords: new FormControl<number | null | undefined>(undefined),
			Marker: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** <p/> */
	export interface DescribePendingMaintenanceActionsMessage {
		ResourceIdentifier?: string;
		Filters?: Array<string>;
		Marker?: string;
		MaxRecords?: number | null;
	}

	/** <p/> */
	export interface DescribePendingMaintenanceActionsMessageFormProperties {
		ResourceIdentifier: FormControl<string | null | undefined>,
		Marker: FormControl<string | null | undefined>,
		MaxRecords: FormControl<number | null | undefined>,
	}
	export function CreateDescribePendingMaintenanceActionsMessageFormGroup() {
		return new FormGroup<DescribePendingMaintenanceActionsMessageFormProperties>({
			ResourceIdentifier: new FormControl<string | null | undefined>(undefined),
			Marker: new FormControl<string | null | undefined>(undefined),
			MaxRecords: new FormControl<number | null | undefined>(undefined),
		});

	}


	/** <p/> */
	export interface DescribeReservedDBInstancesMessage {
		ReservedDBInstanceId?: string;
		ReservedDBInstancesOfferingId?: string;
		DBInstanceClass?: string;
		Duration?: string;
		ProductDescription?: string;
		OfferingType?: string;
		MultiAZ?: boolean | null;
		LeaseId?: string;
		Filters?: Array<string>;
		MaxRecords?: number | null;
		Marker?: string;
	}

	/** <p/> */
	export interface DescribeReservedDBInstancesMessageFormProperties {
		ReservedDBInstanceId: FormControl<string | null | undefined>,
		ReservedDBInstancesOfferingId: FormControl<string | null | undefined>,
		DBInstanceClass: FormControl<string | null | undefined>,
		Duration: FormControl<string | null | undefined>,
		ProductDescription: FormControl<string | null | undefined>,
		OfferingType: FormControl<string | null | undefined>,
		MultiAZ: FormControl<boolean | null | undefined>,
		LeaseId: FormControl<string | null | undefined>,
		MaxRecords: FormControl<number | null | undefined>,
		Marker: FormControl<string | null | undefined>,
	}
	export function CreateDescribeReservedDBInstancesMessageFormGroup() {
		return new FormGroup<DescribeReservedDBInstancesMessageFormProperties>({
			ReservedDBInstanceId: new FormControl<string | null | undefined>(undefined),
			ReservedDBInstancesOfferingId: new FormControl<string | null | undefined>(undefined),
			DBInstanceClass: new FormControl<string | null | undefined>(undefined),
			Duration: new FormControl<string | null | undefined>(undefined),
			ProductDescription: new FormControl<string | null | undefined>(undefined),
			OfferingType: new FormControl<string | null | undefined>(undefined),
			MultiAZ: new FormControl<boolean | null | undefined>(undefined),
			LeaseId: new FormControl<string | null | undefined>(undefined),
			MaxRecords: new FormControl<number | null | undefined>(undefined),
			Marker: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** <p/> */
	export interface DescribeReservedDBInstancesOfferingsMessage {
		ReservedDBInstancesOfferingId?: string;
		DBInstanceClass?: string;
		Duration?: string;
		ProductDescription?: string;
		OfferingType?: string;
		MultiAZ?: boolean | null;
		Filters?: Array<string>;
		MaxRecords?: number | null;
		Marker?: string;
	}

	/** <p/> */
	export interface DescribeReservedDBInstancesOfferingsMessageFormProperties {
		ReservedDBInstancesOfferingId: FormControl<string | null | undefined>,
		DBInstanceClass: FormControl<string | null | undefined>,
		Duration: FormControl<string | null | undefined>,
		ProductDescription: FormControl<string | null | undefined>,
		OfferingType: FormControl<string | null | undefined>,
		MultiAZ: FormControl<boolean | null | undefined>,
		MaxRecords: FormControl<number | null | undefined>,
		Marker: FormControl<string | null | undefined>,
	}
	export function CreateDescribeReservedDBInstancesOfferingsMessageFormGroup() {
		return new FormGroup<DescribeReservedDBInstancesOfferingsMessageFormProperties>({
			ReservedDBInstancesOfferingId: new FormControl<string | null | undefined>(undefined),
			DBInstanceClass: new FormControl<string | null | undefined>(undefined),
			Duration: new FormControl<string | null | undefined>(undefined),
			ProductDescription: new FormControl<string | null | undefined>(undefined),
			OfferingType: new FormControl<string | null | undefined>(undefined),
			MultiAZ: new FormControl<boolean | null | undefined>(undefined),
			MaxRecords: new FormControl<number | null | undefined>(undefined),
			Marker: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** <p/> */
	export interface DescribeSourceRegionsMessage {
		RegionName?: string;
		MaxRecords?: number | null;
		Marker?: string;
		Filters?: Array<string>;
	}

	/** <p/> */
	export interface DescribeSourceRegionsMessageFormProperties {
		RegionName: FormControl<string | null | undefined>,
		MaxRecords: FormControl<number | null | undefined>,
		Marker: FormControl<string | null | undefined>,
	}
	export function CreateDescribeSourceRegionsMessageFormGroup() {
		return new FormGroup<DescribeSourceRegionsMessageFormProperties>({
			RegionName: new FormControl<string | null | undefined>(undefined),
			MaxRecords: new FormControl<number | null | undefined>(undefined),
			Marker: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** <p/> */
	export interface DescribeValidDBInstanceModificationsMessage {

		/** Required */
		DBInstanceIdentifier: string;
	}

	/** <p/> */
	export interface DescribeValidDBInstanceModificationsMessageFormProperties {

		/** Required */
		DBInstanceIdentifier: FormControl<string | null | undefined>,
	}
	export function CreateDescribeValidDBInstanceModificationsMessageFormGroup() {
		return new FormGroup<DescribeValidDBInstanceModificationsMessageFormProperties>({
			DBInstanceIdentifier: new FormControl<string | null | undefined>(undefined, [Validators.required]),
		});

	}


	/** An Active Directory Domain membership record associated with the DB instance or cluster. */
	export interface DomainMembership {
		Domain?: string;
		Status?: string;
		FQDN?: string;
		IAMRoleName?: string;
		OU?: string;
		AuthSecretArn?: string;
		DnsIps?: Array<string>;
	}

	/** An Active Directory Domain membership record associated with the DB instance or cluster. */
	export interface DomainMembershipFormProperties {
		Domain: FormControl<string | null | undefined>,
		Status: FormControl<string | null | undefined>,
		FQDN: FormControl<string | null | undefined>,
		IAMRoleName: FormControl<string | null | undefined>,
		OU: FormControl<string | null | undefined>,
		AuthSecretArn: FormControl<string | null | undefined>,
	}
	export function CreateDomainMembershipFormGroup() {
		return new FormGroup<DomainMembershipFormProperties>({
			Domain: new FormControl<string | null | undefined>(undefined),
			Status: new FormControl<string | null | undefined>(undefined),
			FQDN: new FormControl<string | null | undefined>(undefined),
			IAMRoleName: new FormControl<string | null | undefined>(undefined),
			OU: new FormControl<string | null | undefined>(undefined),
			AuthSecretArn: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** A range of double values. */
	export interface DoubleRange {
		From?: number | null;
		To?: number | null;
	}

	/** A range of double values. */
	export interface DoubleRangeFormProperties {
		From: FormControl<number | null | undefined>,
		To: FormControl<number | null | undefined>,
	}
	export function CreateDoubleRangeFormGroup() {
		return new FormGroup<DoubleRangeFormProperties>({
			From: new FormControl<number | null | undefined>(undefined),
			To: new FormControl<number | null | undefined>(undefined),
		});

	}


	/** <p/> */
	export interface DownloadDBLogFilePortionMessage {

		/** Required */
		DBInstanceIdentifier: string;

		/** Required */
		LogFileName: string;
		Marker?: string;
		NumberOfLines?: number | null;
	}

	/** <p/> */
	export interface DownloadDBLogFilePortionMessageFormProperties {

		/** Required */
		DBInstanceIdentifier: FormControl<string | null | undefined>,

		/** Required */
		LogFileName: FormControl<string | null | undefined>,
		Marker: FormControl<string | null | undefined>,
		NumberOfLines: FormControl<number | null | undefined>,
	}
	export function CreateDownloadDBLogFilePortionMessageFormGroup() {
		return new FormGroup<DownloadDBLogFilePortionMessageFormProperties>({
			DBInstanceIdentifier: new FormControl<string | null | undefined>(undefined, [Validators.required]),
			LogFileName: new FormControl<string | null | undefined>(undefined, [Validators.required]),
			Marker: new FormControl<string | null | undefined>(undefined),
			NumberOfLines: new FormControl<number | null | undefined>(undefined),
		});

	}


	/** <p>This data type is used as a response element in the following actions:</p> <ul> <li> <p> <code>AuthorizeDBSecurityGroupIngress</code> </p> </li> <li> <p> <code>DescribeDBSecurityGroups</code> </p> </li> <li> <p> <code>RevokeDBSecurityGroupIngress</code> </p> </li> </ul> */
	export interface EC2SecurityGroup {
		Status?: string;
		EC2SecurityGroupName?: string;
		EC2SecurityGroupId?: string;
		EC2SecurityGroupOwnerId?: string;
	}

	/** <p>This data type is used as a response element in the following actions:</p> <ul> <li> <p> <code>AuthorizeDBSecurityGroupIngress</code> </p> </li> <li> <p> <code>DescribeDBSecurityGroups</code> </p> </li> <li> <p> <code>RevokeDBSecurityGroupIngress</code> </p> </li> </ul> */
	export interface EC2SecurityGroupFormProperties {
		Status: FormControl<string | null | undefined>,
		EC2SecurityGroupName: FormControl<string | null | undefined>,
		EC2SecurityGroupId: FormControl<string | null | undefined>,
		EC2SecurityGroupOwnerId: FormControl<string | null | undefined>,
	}
	export function CreateEC2SecurityGroupFormGroup() {
		return new FormGroup<EC2SecurityGroupFormProperties>({
			Status: new FormControl<string | null | undefined>(undefined),
			EC2SecurityGroupName: new FormControl<string | null | undefined>(undefined),
			EC2SecurityGroupId: new FormControl<string | null | undefined>(undefined),
			EC2SecurityGroupOwnerId: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** This data type is used as a response element in the <a href="https://docs.aws.amazon.com/AmazonRDS/latest/APIReference/API_DescribeEvents.html">DescribeEvents</a> action. */
	export interface Event {
		SourceIdentifier?: string;
		SourceType?: SourceType;
		Message?: string;
		EventCategories?: Array<string>;
		Date?: Date;
		SourceArn?: string;
	}

	/** This data type is used as a response element in the <a href="https://docs.aws.amazon.com/AmazonRDS/latest/APIReference/API_DescribeEvents.html">DescribeEvents</a> action. */
	export interface EventFormProperties {
		SourceIdentifier: FormControl<string | null | undefined>,
		SourceType: FormControl<SourceType | null | undefined>,
		Message: FormControl<string | null | undefined>,
		Date: FormControl<Date | null | undefined>,
		SourceArn: FormControl<string | null | undefined>,
	}
	export function CreateEventFormGroup() {
		return new FormGroup<EventFormProperties>({
			SourceIdentifier: new FormControl<string | null | undefined>(undefined),
			SourceType: new FormControl<SourceType | null | undefined>(undefined),
			Message: new FormControl<string | null | undefined>(undefined),
			Date: new FormControl<Date | null | undefined>(undefined),
			SourceArn: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Contains the results of a successful invocation of the <a href="https://docs.aws.amazon.com/AmazonRDS/latest/APIReference/API_DescribeEventCategories.html">DescribeEventCategories</a> operation. */
	export interface EventCategoriesMap {
		SourceType?: string;
		EventCategories?: Array<string>;
	}

	/** Contains the results of a successful invocation of the <a href="https://docs.aws.amazon.com/AmazonRDS/latest/APIReference/API_DescribeEventCategories.html">DescribeEventCategories</a> operation. */
	export interface EventCategoriesMapFormProperties {
		SourceType: FormControl<string | null | undefined>,
	}
	export function CreateEventCategoriesMapFormGroup() {
		return new FormGroup<EventCategoriesMapFormProperties>({
			SourceType: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** <p/> */
	export interface FailoverDBClusterMessage {

		/** Required */
		DBClusterIdentifier: string;
		TargetDBInstanceIdentifier?: string;
	}

	/** <p/> */
	export interface FailoverDBClusterMessageFormProperties {

		/** Required */
		DBClusterIdentifier: FormControl<string | null | undefined>,
		TargetDBInstanceIdentifier: FormControl<string | null | undefined>,
	}
	export function CreateFailoverDBClusterMessageFormGroup() {
		return new FormGroup<FailoverDBClusterMessageFormProperties>({
			DBClusterIdentifier: new FormControl<string | null | undefined>(undefined, [Validators.required]),
			TargetDBInstanceIdentifier: new FormControl<string | null | undefined>(undefined),
		});

	}

	export interface FailoverGlobalClusterMessage {

		/** Required */
		GlobalClusterIdentifier: string;

		/** Required */
		TargetDbClusterIdentifier: string;
	}
	export interface FailoverGlobalClusterMessageFormProperties {

		/** Required */
		GlobalClusterIdentifier: FormControl<string | null | undefined>,

		/** Required */
		TargetDbClusterIdentifier: FormControl<string | null | undefined>,
	}
	export function CreateFailoverGlobalClusterMessageFormGroup() {
		return new FormGroup<FailoverGlobalClusterMessageFormProperties>({
			GlobalClusterIdentifier: new FormControl<string | null | undefined>(undefined, [Validators.required]),
			TargetDbClusterIdentifier: new FormControl<string | null | undefined>(undefined, [Validators.required]),
		});

	}


	/** A data structure with information about any primary and secondary clusters associated with an Aurora global database. */
	export interface GlobalClusterMember {
		DBClusterArn?: string;
		Readers?: Array<string>;
		IsWriter?: boolean | null;
		GlobalWriteForwardingStatus?: WriteForwardingStatus;
	}

	/** A data structure with information about any primary and secondary clusters associated with an Aurora global database. */
	export interface GlobalClusterMemberFormProperties {
		DBClusterArn: FormControl<string | null | undefined>,
		IsWriter: FormControl<boolean | null | undefined>,
		GlobalWriteForwardingStatus: FormControl<WriteForwardingStatus | null | undefined>,
	}
	export function CreateGlobalClusterMemberFormGroup() {
		return new FormGroup<GlobalClusterMemberFormProperties>({
			DBClusterArn: new FormControl<string | null | undefined>(undefined),
			IsWriter: new FormControl<boolean | null | undefined>(undefined),
			GlobalWriteForwardingStatus: new FormControl<WriteForwardingStatus | null | undefined>(undefined),
		});

	}


	/** This data type is used as a response element in the <code>DescribeDBSecurityGroups</code> action. */
	export interface IPRange {
		Status?: string;
		CIDRIP?: string;
	}

	/** This data type is used as a response element in the <code>DescribeDBSecurityGroups</code> action. */
	export interface IPRangeFormProperties {
		Status: FormControl<string | null | undefined>,
		CIDRIP: FormControl<string | null | undefined>,
	}
	export function CreateIPRangeFormGroup() {
		return new FormGroup<IPRangeFormProperties>({
			Status: new FormControl<string | null | undefined>(undefined),
			CIDRIP: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** <p/> */
	export interface ListTagsForResourceMessage {

		/** Required */
		ResourceName: string;
		Filters?: Array<string>;
	}

	/** <p/> */
	export interface ListTagsForResourceMessageFormProperties {

		/** Required */
		ResourceName: FormControl<string | null | undefined>,
	}
	export function CreateListTagsForResourceMessageFormGroup() {
		return new FormGroup<ListTagsForResourceMessageFormProperties>({
			ResourceName: new FormControl<string | null | undefined>(undefined, [Validators.required]),
		});

	}


	/** The minimum DB engine version required for each corresponding allowed value for an option setting. */
	export interface MinimumEngineVersionPerAllowedValue {
		AllowedValue?: string;
		MinimumEngineVersion?: string;
	}

	/** The minimum DB engine version required for each corresponding allowed value for an option setting. */
	export interface MinimumEngineVersionPerAllowedValueFormProperties {
		AllowedValue: FormControl<string | null | undefined>,
		MinimumEngineVersion: FormControl<string | null | undefined>,
	}
	export function CreateMinimumEngineVersionPerAllowedValueFormGroup() {
		return new FormGroup<MinimumEngineVersionPerAllowedValueFormProperties>({
			AllowedValue: new FormControl<string | null | undefined>(undefined),
			MinimumEngineVersion: new FormControl<string | null | undefined>(undefined),
		});

	}

	export interface ModifyActivityStreamRequest {
		ResourceArn?: string;
		AuditPolicyState?: AuditPolicyState;
	}
	export interface ModifyActivityStreamRequestFormProperties {
		ResourceArn: FormControl<string | null | undefined>,
		AuditPolicyState: FormControl<AuditPolicyState | null | undefined>,
	}
	export function CreateModifyActivityStreamRequestFormGroup() {
		return new FormGroup<ModifyActivityStreamRequestFormProperties>({
			ResourceArn: new FormControl<string | null | undefined>(undefined),
			AuditPolicyState: new FormControl<AuditPolicyState | null | undefined>(undefined),
		});

	}

	export interface ModifyCertificatesMessage {
		CertificateIdentifier?: string;
		RemoveCustomerOverride?: boolean | null;
	}
	export interface ModifyCertificatesMessageFormProperties {
		CertificateIdentifier: FormControl<string | null | undefined>,
		RemoveCustomerOverride: FormControl<boolean | null | undefined>,
	}
	export function CreateModifyCertificatesMessageFormGroup() {
		return new FormGroup<ModifyCertificatesMessageFormProperties>({
			CertificateIdentifier: new FormControl<string | null | undefined>(undefined),
			RemoveCustomerOverride: new FormControl<boolean | null | undefined>(undefined),
		});

	}

	export interface ModifyCurrentDBClusterCapacityMessage {

		/** Required */
		DBClusterIdentifier: string;
		Capacity?: number | null;
		SecondsBeforeTimeout?: number | null;
		TimeoutAction?: string;
	}
	export interface ModifyCurrentDBClusterCapacityMessageFormProperties {

		/** Required */
		DBClusterIdentifier: FormControl<string | null | undefined>,
		Capacity: FormControl<number | null | undefined>,
		SecondsBeforeTimeout: FormControl<number | null | undefined>,
		TimeoutAction: FormControl<string | null | undefined>,
	}
	export function CreateModifyCurrentDBClusterCapacityMessageFormGroup() {
		return new FormGroup<ModifyCurrentDBClusterCapacityMessageFormProperties>({
			DBClusterIdentifier: new FormControl<string | null | undefined>(undefined, [Validators.required]),
			Capacity: new FormControl<number | null | undefined>(undefined),
			SecondsBeforeTimeout: new FormControl<number | null | undefined>(undefined),
			TimeoutAction: new FormControl<string | null | undefined>(undefined),
		});

	}

	export interface ModifyCustomDBEngineVersionMessage {

		/** Required */
		Engine: string;

		/** Required */
		EngineVersion: string;
		Description?: string;
		Status?: CustomEngineVersionStatus;
	}
	export interface ModifyCustomDBEngineVersionMessageFormProperties {

		/** Required */
		Engine: FormControl<string | null | undefined>,

		/** Required */
		EngineVersion: FormControl<string | null | undefined>,
		Description: FormControl<string | null | undefined>,
		Status: FormControl<CustomEngineVersionStatus | null | undefined>,
	}
	export function CreateModifyCustomDBEngineVersionMessageFormGroup() {
		return new FormGroup<ModifyCustomDBEngineVersionMessageFormProperties>({
			Engine: new FormControl<string | null | undefined>(undefined, [Validators.required]),
			EngineVersion: new FormControl<string | null | undefined>(undefined, [Validators.required]),
			Description: new FormControl<string | null | undefined>(undefined),
			Status: new FormControl<CustomEngineVersionStatus | null | undefined>(undefined),
		});

	}

	export interface ModifyDBClusterEndpointMessage {

		/** Required */
		DBClusterEndpointIdentifier: string;
		EndpointType?: string;
		StaticMembers?: Array<string>;
		ExcludedMembers?: Array<string>;
	}
	export interface ModifyDBClusterEndpointMessageFormProperties {

		/** Required */
		DBClusterEndpointIdentifier: FormControl<string | null | undefined>,
		EndpointType: FormControl<string | null | undefined>,
	}
	export function CreateModifyDBClusterEndpointMessageFormGroup() {
		return new FormGroup<ModifyDBClusterEndpointMessageFormProperties>({
			DBClusterEndpointIdentifier: new FormControl<string | null | undefined>(undefined, [Validators.required]),
			EndpointType: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** <p/> */
	export interface ModifyDBClusterMessage {

		/** Required */
		DBClusterIdentifier: string;
		NewDBClusterIdentifier?: string;
		ApplyImmediately?: boolean | null;
		BackupRetentionPeriod?: number | null;
		DBClusterParameterGroupName?: string;
		VpcSecurityGroupIds?: Array<string>;
		Port?: number | null;
		MasterUserPassword?: string;
		OptionGroupName?: string;
		PreferredBackupWindow?: string;
		PreferredMaintenanceWindow?: string;
		EnableIAMDatabaseAuthentication?: boolean | null;
		BacktrackWindow?: number | null;
		CloudwatchLogsExportConfiguration?: CloudwatchLogsExportConfiguration;
		EngineVersion?: string;
		AllowMajorVersionUpgrade?: boolean | null;
		DBInstanceParameterGroupName?: string;
		Domain?: string;
		DomainIAMRoleName?: string;
		ScalingConfiguration?: ScalingConfiguration;
		DeletionProtection?: boolean | null;
		EnableHttpEndpoint?: boolean | null;
		CopyTagsToSnapshot?: boolean | null;
		EnableGlobalWriteForwarding?: boolean | null;
		DBClusterInstanceClass?: string;
		AllocatedStorage?: number | null;
		StorageType?: string;
		Iops?: number | null;
		AutoMinorVersionUpgrade?: boolean | null;
		MonitoringInterval?: number | null;
		MonitoringRoleArn?: string;
		EnablePerformanceInsights?: boolean | null;
		PerformanceInsightsKMSKeyId?: string;
		PerformanceInsightsRetentionPeriod?: number | null;

		/** <p>Contains the scaling configuration of an Aurora Serverless v2 DB cluster.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-serverless-v2.html">Using Amazon Aurora Serverless v2</a> in the <i>Amazon Aurora User Guide</i>.</p> */
		ServerlessV2ScalingConfiguration?: ServerlessV2ScalingConfiguration;
		NetworkType?: string;
		ManageMasterUserPassword?: boolean | null;
		RotateMasterUserPassword?: boolean | null;
		MasterUserSecretKmsKeyId?: string;
		EngineMode?: string;
		AllowEngineModeChange?: boolean | null;
		EnableLocalWriteForwarding?: boolean | null;
	}

	/** <p/> */
	export interface ModifyDBClusterMessageFormProperties {

		/** Required */
		DBClusterIdentifier: FormControl<string | null | undefined>,
		NewDBClusterIdentifier: FormControl<string | null | undefined>,
		ApplyImmediately: FormControl<boolean | null | undefined>,
		BackupRetentionPeriod: FormControl<number | null | undefined>,
		DBClusterParameterGroupName: FormControl<string | null | undefined>,
		Port: FormControl<number | null | undefined>,
		MasterUserPassword: FormControl<string | null | undefined>,
		OptionGroupName: FormControl<string | null | undefined>,
		PreferredBackupWindow: FormControl<string | null | undefined>,
		PreferredMaintenanceWindow: FormControl<string | null | undefined>,
		EnableIAMDatabaseAuthentication: FormControl<boolean | null | undefined>,
		BacktrackWindow: FormControl<number | null | undefined>,
		EngineVersion: FormControl<string | null | undefined>,
		AllowMajorVersionUpgrade: FormControl<boolean | null | undefined>,
		DBInstanceParameterGroupName: FormControl<string | null | undefined>,
		Domain: FormControl<string | null | undefined>,
		DomainIAMRoleName: FormControl<string | null | undefined>,
		DeletionProtection: FormControl<boolean | null | undefined>,
		EnableHttpEndpoint: FormControl<boolean | null | undefined>,
		CopyTagsToSnapshot: FormControl<boolean | null | undefined>,
		EnableGlobalWriteForwarding: FormControl<boolean | null | undefined>,
		DBClusterInstanceClass: FormControl<string | null | undefined>,
		AllocatedStorage: FormControl<number | null | undefined>,
		StorageType: FormControl<string | null | undefined>,
		Iops: FormControl<number | null | undefined>,
		AutoMinorVersionUpgrade: FormControl<boolean | null | undefined>,
		MonitoringInterval: FormControl<number | null | undefined>,
		MonitoringRoleArn: FormControl<string | null | undefined>,
		EnablePerformanceInsights: FormControl<boolean | null | undefined>,
		PerformanceInsightsKMSKeyId: FormControl<string | null | undefined>,
		PerformanceInsightsRetentionPeriod: FormControl<number | null | undefined>,
		NetworkType: FormControl<string | null | undefined>,
		ManageMasterUserPassword: FormControl<boolean | null | undefined>,
		RotateMasterUserPassword: FormControl<boolean | null | undefined>,
		MasterUserSecretKmsKeyId: FormControl<string | null | undefined>,
		EngineMode: FormControl<string | null | undefined>,
		AllowEngineModeChange: FormControl<boolean | null | undefined>,
		EnableLocalWriteForwarding: FormControl<boolean | null | undefined>,
	}
	export function CreateModifyDBClusterMessageFormGroup() {
		return new FormGroup<ModifyDBClusterMessageFormProperties>({
			DBClusterIdentifier: new FormControl<string | null | undefined>(undefined, [Validators.required]),
			NewDBClusterIdentifier: new FormControl<string | null | undefined>(undefined),
			ApplyImmediately: new FormControl<boolean | null | undefined>(undefined),
			BackupRetentionPeriod: new FormControl<number | null | undefined>(undefined),
			DBClusterParameterGroupName: new FormControl<string | null | undefined>(undefined),
			Port: new FormControl<number | null | undefined>(undefined),
			MasterUserPassword: new FormControl<string | null | undefined>(undefined),
			OptionGroupName: new FormControl<string | null | undefined>(undefined),
			PreferredBackupWindow: new FormControl<string | null | undefined>(undefined),
			PreferredMaintenanceWindow: new FormControl<string | null | undefined>(undefined),
			EnableIAMDatabaseAuthentication: new FormControl<boolean | null | undefined>(undefined),
			BacktrackWindow: new FormControl<number | null | undefined>(undefined),
			EngineVersion: new FormControl<string | null | undefined>(undefined),
			AllowMajorVersionUpgrade: new FormControl<boolean | null | undefined>(undefined),
			DBInstanceParameterGroupName: new FormControl<string | null | undefined>(undefined),
			Domain: new FormControl<string | null | undefined>(undefined),
			DomainIAMRoleName: new FormControl<string | null | undefined>(undefined),
			DeletionProtection: new FormControl<boolean | null | undefined>(undefined),
			EnableHttpEndpoint: new FormControl<boolean | null | undefined>(undefined),
			CopyTagsToSnapshot: new FormControl<boolean | null | undefined>(undefined),
			EnableGlobalWriteForwarding: new FormControl<boolean | null | undefined>(undefined),
			DBClusterInstanceClass: new FormControl<string | null | undefined>(undefined),
			AllocatedStorage: new FormControl<number | null | undefined>(undefined),
			StorageType: new FormControl<string | null | undefined>(undefined),
			Iops: new FormControl<number | null | undefined>(undefined),
			AutoMinorVersionUpgrade: new FormControl<boolean | null | undefined>(undefined),
			MonitoringInterval: new FormControl<number | null | undefined>(undefined),
			MonitoringRoleArn: new FormControl<string | null | undefined>(undefined),
			EnablePerformanceInsights: new FormControl<boolean | null | undefined>(undefined),
			PerformanceInsightsKMSKeyId: new FormControl<string | null | undefined>(undefined),
			PerformanceInsightsRetentionPeriod: new FormControl<number | null | undefined>(undefined),
			NetworkType: new FormControl<string | null | undefined>(undefined),
			ManageMasterUserPassword: new FormControl<boolean | null | undefined>(undefined),
			RotateMasterUserPassword: new FormControl<boolean | null | undefined>(undefined),
			MasterUserSecretKmsKeyId: new FormControl<string | null | undefined>(undefined),
			EngineMode: new FormControl<string | null | undefined>(undefined),
			AllowEngineModeChange: new FormControl<boolean | null | undefined>(undefined),
			EnableLocalWriteForwarding: new FormControl<boolean | null | undefined>(undefined),
		});

	}


	/** <p/> */
	export interface ModifyDBClusterParameterGroupMessage {

		/** Required */
		DBClusterParameterGroupName: string;

		/** Required */
		Parameters: Array<string>;
	}

	/** <p/> */
	export interface ModifyDBClusterParameterGroupMessageFormProperties {

		/** Required */
		DBClusterParameterGroupName: FormControl<string | null | undefined>,
	}
	export function CreateModifyDBClusterParameterGroupMessageFormGroup() {
		return new FormGroup<ModifyDBClusterParameterGroupMessageFormProperties>({
			DBClusterParameterGroupName: new FormControl<string | null | undefined>(undefined, [Validators.required]),
		});

	}


	/** <p/> */
	export interface ModifyDBClusterSnapshotAttributeMessage {

		/** Required */
		DBClusterSnapshotIdentifier: string;

		/** Required */
		AttributeName: string;
		ValuesToAdd?: Array<string>;
		ValuesToRemove?: Array<string>;
	}

	/** <p/> */
	export interface ModifyDBClusterSnapshotAttributeMessageFormProperties {

		/** Required */
		DBClusterSnapshotIdentifier: FormControl<string | null | undefined>,

		/** Required */
		AttributeName: FormControl<string | null | undefined>,
	}
	export function CreateModifyDBClusterSnapshotAttributeMessageFormGroup() {
		return new FormGroup<ModifyDBClusterSnapshotAttributeMessageFormProperties>({
			DBClusterSnapshotIdentifier: new FormControl<string | null | undefined>(undefined, [Validators.required]),
			AttributeName: new FormControl<string | null | undefined>(undefined, [Validators.required]),
		});

	}


	/** <p/> */
	export interface ModifyDBInstanceMessage {

		/** Required */
		DBInstanceIdentifier: string;
		AllocatedStorage?: number | null;
		DBInstanceClass?: string;
		DBSubnetGroupName?: string;
		DBSecurityGroups?: Array<string>;
		VpcSecurityGroupIds?: Array<string>;
		ApplyImmediately?: boolean | null;
		MasterUserPassword?: string;
		DBParameterGroupName?: string;
		BackupRetentionPeriod?: number | null;
		PreferredBackupWindow?: string;
		PreferredMaintenanceWindow?: string;
		MultiAZ?: boolean | null;
		EngineVersion?: string;
		AllowMajorVersionUpgrade?: boolean | null;
		AutoMinorVersionUpgrade?: boolean | null;
		LicenseModel?: string;
		Iops?: number | null;
		OptionGroupName?: string;
		NewDBInstanceIdentifier?: string;
		StorageType?: string;
		TdeCredentialArn?: string;
		TdeCredentialPassword?: string;
		CACertificateIdentifier?: string;
		Domain?: string;
		DomainFqdn?: string;
		DomainOu?: string;
		DomainAuthSecretArn?: string;
		DomainDnsIps?: Array<string>;
		CopyTagsToSnapshot?: boolean | null;
		MonitoringInterval?: number | null;
		DBPortNumber?: number | null;
		PubliclyAccessible?: boolean | null;
		MonitoringRoleArn?: string;
		DomainIAMRoleName?: string;
		DisableDomain?: boolean | null;
		PromotionTier?: number | null;
		EnableIAMDatabaseAuthentication?: boolean | null;
		EnablePerformanceInsights?: boolean | null;
		PerformanceInsightsKMSKeyId?: string;
		PerformanceInsightsRetentionPeriod?: number | null;
		CloudwatchLogsExportConfiguration?: CloudwatchLogsExportConfiguration;
		ProcessorFeatures?: Array<string>;
		UseDefaultProcessorFeatures?: boolean | null;
		DeletionProtection?: boolean | null;
		MaxAllocatedStorage?: number | null;
		CertificateRotationRestart?: boolean | null;
		ReplicaMode?: ReplicaMode;
		EnableCustomerOwnedIp?: boolean | null;
		AwsBackupRecoveryPointArn?: string;
		AutomationMode?: AutomationMode;
		ResumeFullAutomationModeMinutes?: number | null;
		NetworkType?: string;
		StorageThroughput?: number | null;
		ManageMasterUserPassword?: boolean | null;
		RotateMasterUserPassword?: boolean | null;
		MasterUserSecretKmsKeyId?: string;
		Engine?: string;
	}

	/** <p/> */
	export interface ModifyDBInstanceMessageFormProperties {

		/** Required */
		DBInstanceIdentifier: FormControl<string | null | undefined>,
		AllocatedStorage: FormControl<number | null | undefined>,
		DBInstanceClass: FormControl<string | null | undefined>,
		DBSubnetGroupName: FormControl<string | null | undefined>,
		ApplyImmediately: FormControl<boolean | null | undefined>,
		MasterUserPassword: FormControl<string | null | undefined>,
		DBParameterGroupName: FormControl<string | null | undefined>,
		BackupRetentionPeriod: FormControl<number | null | undefined>,
		PreferredBackupWindow: FormControl<string | null | undefined>,
		PreferredMaintenanceWindow: FormControl<string | null | undefined>,
		MultiAZ: FormControl<boolean | null | undefined>,
		EngineVersion: FormControl<string | null | undefined>,
		AllowMajorVersionUpgrade: FormControl<boolean | null | undefined>,
		AutoMinorVersionUpgrade: FormControl<boolean | null | undefined>,
		LicenseModel: FormControl<string | null | undefined>,
		Iops: FormControl<number | null | undefined>,
		OptionGroupName: FormControl<string | null | undefined>,
		NewDBInstanceIdentifier: FormControl<string | null | undefined>,
		StorageType: FormControl<string | null | undefined>,
		TdeCredentialArn: FormControl<string | null | undefined>,
		TdeCredentialPassword: FormControl<string | null | undefined>,
		CACertificateIdentifier: FormControl<string | null | undefined>,
		Domain: FormControl<string | null | undefined>,
		DomainFqdn: FormControl<string | null | undefined>,
		DomainOu: FormControl<string | null | undefined>,
		DomainAuthSecretArn: FormControl<string | null | undefined>,
		CopyTagsToSnapshot: FormControl<boolean | null | undefined>,
		MonitoringInterval: FormControl<number | null | undefined>,
		DBPortNumber: FormControl<number | null | undefined>,
		PubliclyAccessible: FormControl<boolean | null | undefined>,
		MonitoringRoleArn: FormControl<string | null | undefined>,
		DomainIAMRoleName: FormControl<string | null | undefined>,
		DisableDomain: FormControl<boolean | null | undefined>,
		PromotionTier: FormControl<number | null | undefined>,
		EnableIAMDatabaseAuthentication: FormControl<boolean | null | undefined>,
		EnablePerformanceInsights: FormControl<boolean | null | undefined>,
		PerformanceInsightsKMSKeyId: FormControl<string | null | undefined>,
		PerformanceInsightsRetentionPeriod: FormControl<number | null | undefined>,
		UseDefaultProcessorFeatures: FormControl<boolean | null | undefined>,
		DeletionProtection: FormControl<boolean | null | undefined>,
		MaxAllocatedStorage: FormControl<number | null | undefined>,
		CertificateRotationRestart: FormControl<boolean | null | undefined>,
		ReplicaMode: FormControl<ReplicaMode | null | undefined>,
		EnableCustomerOwnedIp: FormControl<boolean | null | undefined>,
		AwsBackupRecoveryPointArn: FormControl<string | null | undefined>,
		AutomationMode: FormControl<AutomationMode | null | undefined>,
		ResumeFullAutomationModeMinutes: FormControl<number | null | undefined>,
		NetworkType: FormControl<string | null | undefined>,
		StorageThroughput: FormControl<number | null | undefined>,
		ManageMasterUserPassword: FormControl<boolean | null | undefined>,
		RotateMasterUserPassword: FormControl<boolean | null | undefined>,
		MasterUserSecretKmsKeyId: FormControl<string | null | undefined>,
		Engine: FormControl<string | null | undefined>,
	}
	export function CreateModifyDBInstanceMessageFormGroup() {
		return new FormGroup<ModifyDBInstanceMessageFormProperties>({
			DBInstanceIdentifier: new FormControl<string | null | undefined>(undefined, [Validators.required]),
			AllocatedStorage: new FormControl<number | null | undefined>(undefined),
			DBInstanceClass: new FormControl<string | null | undefined>(undefined),
			DBSubnetGroupName: new FormControl<string | null | undefined>(undefined),
			ApplyImmediately: new FormControl<boolean | null | undefined>(undefined),
			MasterUserPassword: new FormControl<string | null | undefined>(undefined),
			DBParameterGroupName: new FormControl<string | null | undefined>(undefined),
			BackupRetentionPeriod: new FormControl<number | null | undefined>(undefined),
			PreferredBackupWindow: new FormControl<string | null | undefined>(undefined),
			PreferredMaintenanceWindow: new FormControl<string | null | undefined>(undefined),
			MultiAZ: new FormControl<boolean | null | undefined>(undefined),
			EngineVersion: new FormControl<string | null | undefined>(undefined),
			AllowMajorVersionUpgrade: new FormControl<boolean | null | undefined>(undefined),
			AutoMinorVersionUpgrade: new FormControl<boolean | null | undefined>(undefined),
			LicenseModel: new FormControl<string | null | undefined>(undefined),
			Iops: new FormControl<number | null | undefined>(undefined),
			OptionGroupName: new FormControl<string | null | undefined>(undefined),
			NewDBInstanceIdentifier: new FormControl<string | null | undefined>(undefined),
			StorageType: new FormControl<string | null | undefined>(undefined),
			TdeCredentialArn: new FormControl<string | null | undefined>(undefined),
			TdeCredentialPassword: new FormControl<string | null | undefined>(undefined),
			CACertificateIdentifier: new FormControl<string | null | undefined>(undefined),
			Domain: new FormControl<string | null | undefined>(undefined),
			DomainFqdn: new FormControl<string | null | undefined>(undefined),
			DomainOu: new FormControl<string | null | undefined>(undefined),
			DomainAuthSecretArn: new FormControl<string | null | undefined>(undefined),
			CopyTagsToSnapshot: new FormControl<boolean | null | undefined>(undefined),
			MonitoringInterval: new FormControl<number | null | undefined>(undefined),
			DBPortNumber: new FormControl<number | null | undefined>(undefined),
			PubliclyAccessible: new FormControl<boolean | null | undefined>(undefined),
			MonitoringRoleArn: new FormControl<string | null | undefined>(undefined),
			DomainIAMRoleName: new FormControl<string | null | undefined>(undefined),
			DisableDomain: new FormControl<boolean | null | undefined>(undefined),
			PromotionTier: new FormControl<number | null | undefined>(undefined),
			EnableIAMDatabaseAuthentication: new FormControl<boolean | null | undefined>(undefined),
			EnablePerformanceInsights: new FormControl<boolean | null | undefined>(undefined),
			PerformanceInsightsKMSKeyId: new FormControl<string | null | undefined>(undefined),
			PerformanceInsightsRetentionPeriod: new FormControl<number | null | undefined>(undefined),
			UseDefaultProcessorFeatures: new FormControl<boolean | null | undefined>(undefined),
			DeletionProtection: new FormControl<boolean | null | undefined>(undefined),
			MaxAllocatedStorage: new FormControl<number | null | undefined>(undefined),
			CertificateRotationRestart: new FormControl<boolean | null | undefined>(undefined),
			ReplicaMode: new FormControl<ReplicaMode | null | undefined>(undefined),
			EnableCustomerOwnedIp: new FormControl<boolean | null | undefined>(undefined),
			AwsBackupRecoveryPointArn: new FormControl<string | null | undefined>(undefined),
			AutomationMode: new FormControl<AutomationMode | null | undefined>(undefined),
			ResumeFullAutomationModeMinutes: new FormControl<number | null | undefined>(undefined),
			NetworkType: new FormControl<string | null | undefined>(undefined),
			StorageThroughput: new FormControl<number | null | undefined>(undefined),
			ManageMasterUserPassword: new FormControl<boolean | null | undefined>(undefined),
			RotateMasterUserPassword: new FormControl<boolean | null | undefined>(undefined),
			MasterUserSecretKmsKeyId: new FormControl<string | null | undefined>(undefined),
			Engine: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** <p/> */
	export interface ModifyDBParameterGroupMessage {

		/** Required */
		DBParameterGroupName: string;

		/** Required */
		Parameters: Array<string>;
	}

	/** <p/> */
	export interface ModifyDBParameterGroupMessageFormProperties {

		/** Required */
		DBParameterGroupName: FormControl<string | null | undefined>,
	}
	export function CreateModifyDBParameterGroupMessageFormGroup() {
		return new FormGroup<ModifyDBParameterGroupMessageFormProperties>({
			DBParameterGroupName: new FormControl<string | null | undefined>(undefined, [Validators.required]),
		});

	}

	export interface ModifyDBProxyEndpointRequest {

		/** Required */
		DBProxyEndpointName: string;
		NewDBProxyEndpointName?: string;
		VpcSecurityGroupIds?: Array<string>;
	}
	export interface ModifyDBProxyEndpointRequestFormProperties {

		/** Required */
		DBProxyEndpointName: FormControl<string | null | undefined>,
		NewDBProxyEndpointName: FormControl<string | null | undefined>,
	}
	export function CreateModifyDBProxyEndpointRequestFormGroup() {
		return new FormGroup<ModifyDBProxyEndpointRequestFormProperties>({
			DBProxyEndpointName: new FormControl<string | null | undefined>(undefined, [Validators.required]),
			NewDBProxyEndpointName: new FormControl<string | null | undefined>(undefined),
		});

	}

	export interface ModifyDBProxyRequest {

		/** Required */
		DBProxyName: string;
		NewDBProxyName?: string;
		Auth?: Array<UserAuthConfig>;
		RequireTLS?: boolean | null;
		IdleClientTimeout?: number | null;
		DebugLogging?: boolean | null;
		RoleArn?: string;
		SecurityGroups?: Array<string>;
	}
	export interface ModifyDBProxyRequestFormProperties {

		/** Required */
		DBProxyName: FormControl<string | null | undefined>,
		NewDBProxyName: FormControl<string | null | undefined>,
		RequireTLS: FormControl<boolean | null | undefined>,
		IdleClientTimeout: FormControl<number | null | undefined>,
		DebugLogging: FormControl<boolean | null | undefined>,
		RoleArn: FormControl<string | null | undefined>,
	}
	export function CreateModifyDBProxyRequestFormGroup() {
		return new FormGroup<ModifyDBProxyRequestFormProperties>({
			DBProxyName: new FormControl<string | null | undefined>(undefined, [Validators.required]),
			NewDBProxyName: new FormControl<string | null | undefined>(undefined),
			RequireTLS: new FormControl<boolean | null | undefined>(undefined),
			IdleClientTimeout: new FormControl<number | null | undefined>(undefined),
			DebugLogging: new FormControl<boolean | null | undefined>(undefined),
			RoleArn: new FormControl<string | null | undefined>(undefined),
		});

	}

	export interface ModifyDBProxyTargetGroupRequest {

		/** Required */
		TargetGroupName: string;

		/** Required */
		DBProxyName: string;
		ConnectionPoolConfig?: ConnectionPoolConfiguration;
		NewName?: string;
	}
	export interface ModifyDBProxyTargetGroupRequestFormProperties {

		/** Required */
		TargetGroupName: FormControl<string | null | undefined>,

		/** Required */
		DBProxyName: FormControl<string | null | undefined>,
		NewName: FormControl<string | null | undefined>,
	}
	export function CreateModifyDBProxyTargetGroupRequestFormGroup() {
		return new FormGroup<ModifyDBProxyTargetGroupRequestFormProperties>({
			TargetGroupName: new FormControl<string | null | undefined>(undefined, [Validators.required]),
			DBProxyName: new FormControl<string | null | undefined>(undefined, [Validators.required]),
			NewName: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** <p/> */
	export interface ModifyDBSnapshotAttributeMessage {

		/** Required */
		DBSnapshotIdentifier: string;

		/** Required */
		AttributeName: string;
		ValuesToAdd?: Array<string>;
		ValuesToRemove?: Array<string>;
	}

	/** <p/> */
	export interface ModifyDBSnapshotAttributeMessageFormProperties {

		/** Required */
		DBSnapshotIdentifier: FormControl<string | null | undefined>,

		/** Required */
		AttributeName: FormControl<string | null | undefined>,
	}
	export function CreateModifyDBSnapshotAttributeMessageFormGroup() {
		return new FormGroup<ModifyDBSnapshotAttributeMessageFormProperties>({
			DBSnapshotIdentifier: new FormControl<string | null | undefined>(undefined, [Validators.required]),
			AttributeName: new FormControl<string | null | undefined>(undefined, [Validators.required]),
		});

	}

	export interface ModifyDBSnapshotMessage {

		/** Required */
		DBSnapshotIdentifier: string;
		EngineVersion?: string;
		OptionGroupName?: string;
	}
	export interface ModifyDBSnapshotMessageFormProperties {

		/** Required */
		DBSnapshotIdentifier: FormControl<string | null | undefined>,
		EngineVersion: FormControl<string | null | undefined>,
		OptionGroupName: FormControl<string | null | undefined>,
	}
	export function CreateModifyDBSnapshotMessageFormGroup() {
		return new FormGroup<ModifyDBSnapshotMessageFormProperties>({
			DBSnapshotIdentifier: new FormControl<string | null | undefined>(undefined, [Validators.required]),
			EngineVersion: new FormControl<string | null | undefined>(undefined),
			OptionGroupName: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** <p/> */
	export interface ModifyDBSubnetGroupMessage {

		/** Required */
		DBSubnetGroupName: string;
		DBSubnetGroupDescription?: string;

		/** Required */
		SubnetIds: Array<string>;
	}

	/** <p/> */
	export interface ModifyDBSubnetGroupMessageFormProperties {

		/** Required */
		DBSubnetGroupName: FormControl<string | null | undefined>,
		DBSubnetGroupDescription: FormControl<string | null | undefined>,
	}
	export function CreateModifyDBSubnetGroupMessageFormGroup() {
		return new FormGroup<ModifyDBSubnetGroupMessageFormProperties>({
			DBSubnetGroupName: new FormControl<string | null | undefined>(undefined, [Validators.required]),
			DBSubnetGroupDescription: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** <p/> */
	export interface ModifyEventSubscriptionMessage {

		/** Required */
		SubscriptionName: string;
		SnsTopicArn?: string;
		SourceType?: string;
		EventCategories?: Array<string>;
		Enabled?: boolean | null;
	}

	/** <p/> */
	export interface ModifyEventSubscriptionMessageFormProperties {

		/** Required */
		SubscriptionName: FormControl<string | null | undefined>,
		SnsTopicArn: FormControl<string | null | undefined>,
		SourceType: FormControl<string | null | undefined>,
		Enabled: FormControl<boolean | null | undefined>,
	}
	export function CreateModifyEventSubscriptionMessageFormGroup() {
		return new FormGroup<ModifyEventSubscriptionMessageFormProperties>({
			SubscriptionName: new FormControl<string | null | undefined>(undefined, [Validators.required]),
			SnsTopicArn: new FormControl<string | null | undefined>(undefined),
			SourceType: new FormControl<string | null | undefined>(undefined),
			Enabled: new FormControl<boolean | null | undefined>(undefined),
		});

	}

	export interface ModifyGlobalClusterMessage {
		GlobalClusterIdentifier?: string;
		NewGlobalClusterIdentifier?: string;
		DeletionProtection?: boolean | null;
		EngineVersion?: string;
		AllowMajorVersionUpgrade?: boolean | null;
	}
	export interface ModifyGlobalClusterMessageFormProperties {
		GlobalClusterIdentifier: FormControl<string | null | undefined>,
		NewGlobalClusterIdentifier: FormControl<string | null | undefined>,
		DeletionProtection: FormControl<boolean | null | undefined>,
		EngineVersion: FormControl<string | null | undefined>,
		AllowMajorVersionUpgrade: FormControl<boolean | null | undefined>,
	}
	export function CreateModifyGlobalClusterMessageFormGroup() {
		return new FormGroup<ModifyGlobalClusterMessageFormProperties>({
			GlobalClusterIdentifier: new FormControl<string | null | undefined>(undefined),
			NewGlobalClusterIdentifier: new FormControl<string | null | undefined>(undefined),
			DeletionProtection: new FormControl<boolean | null | undefined>(undefined),
			EngineVersion: new FormControl<string | null | undefined>(undefined),
			AllowMajorVersionUpgrade: new FormControl<boolean | null | undefined>(undefined),
		});

	}


	/** <p/> */
	export interface ModifyOptionGroupMessage {

		/** Required */
		OptionGroupName: string;
		OptionsToInclude?: Array<string>;
		OptionsToRemove?: Array<string>;
		ApplyImmediately?: boolean | null;
	}

	/** <p/> */
	export interface ModifyOptionGroupMessageFormProperties {

		/** Required */
		OptionGroupName: FormControl<string | null | undefined>,
		ApplyImmediately: FormControl<boolean | null | undefined>,
	}
	export function CreateModifyOptionGroupMessageFormGroup() {
		return new FormGroup<ModifyOptionGroupMessageFormProperties>({
			OptionGroupName: new FormControl<string | null | undefined>(undefined, [Validators.required]),
			ApplyImmediately: new FormControl<boolean | null | undefined>(undefined),
		});

	}


	/** Option details. */
	export interface Option {
		OptionName?: string;
		OptionDescription?: string;
		Persistent?: boolean | null;
		Permanent?: boolean | null;
		Port?: number | null;
		OptionVersion?: string;
		OptionSettings?: Array<string>;
		DBSecurityGroupMemberships?: Array<string>;
		VpcSecurityGroupMemberships?: Array<string>;
	}

	/** Option details. */
	export interface OptionFormProperties {
		OptionName: FormControl<string | null | undefined>,
		OptionDescription: FormControl<string | null | undefined>,
		Persistent: FormControl<boolean | null | undefined>,
		Permanent: FormControl<boolean | null | undefined>,
		Port: FormControl<number | null | undefined>,
		OptionVersion: FormControl<string | null | undefined>,
	}
	export function CreateOptionFormGroup() {
		return new FormGroup<OptionFormProperties>({
			OptionName: new FormControl<string | null | undefined>(undefined),
			OptionDescription: new FormControl<string | null | undefined>(undefined),
			Persistent: new FormControl<boolean | null | undefined>(undefined),
			Permanent: new FormControl<boolean | null | undefined>(undefined),
			Port: new FormControl<number | null | undefined>(undefined),
			OptionVersion: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Provides information on the option groups the DB instance is a member of. */
	export interface OptionGroupMembership {
		OptionGroupName?: string;
		Status?: string;
	}

	/** Provides information on the option groups the DB instance is a member of. */
	export interface OptionGroupMembershipFormProperties {
		OptionGroupName: FormControl<string | null | undefined>,
		Status: FormControl<string | null | undefined>,
	}
	export function CreateOptionGroupMembershipFormGroup() {
		return new FormGroup<OptionGroupMembershipFormProperties>({
			OptionGroupName: new FormControl<string | null | undefined>(undefined),
			Status: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Available option. */
	export interface OptionGroupOption {
		Name?: string;
		Description?: string;
		EngineName?: string;
		MajorEngineVersion?: string;
		MinimumRequiredMinorEngineVersion?: string;
		PortRequired?: boolean | null;
		DefaultPort?: number | null;
		OptionsDependedOn?: Array<string>;
		OptionsConflictsWith?: Array<string>;
		Persistent?: boolean | null;
		Permanent?: boolean | null;
		RequiresAutoMinorEngineVersionUpgrade?: boolean | null;
		VpcOnly?: boolean | null;
		SupportsOptionVersionDowngrade?: boolean | null;
		OptionGroupOptionSettings?: Array<string>;
		OptionGroupOptionVersions?: Array<string>;
		CopyableCrossAccount?: boolean | null;
	}

	/** Available option. */
	export interface OptionGroupOptionFormProperties {
		Name: FormControl<string | null | undefined>,
		Description: FormControl<string | null | undefined>,
		EngineName: FormControl<string | null | undefined>,
		MajorEngineVersion: FormControl<string | null | undefined>,
		MinimumRequiredMinorEngineVersion: FormControl<string | null | undefined>,
		PortRequired: FormControl<boolean | null | undefined>,
		DefaultPort: FormControl<number | null | undefined>,
		Persistent: FormControl<boolean | null | undefined>,
		Permanent: FormControl<boolean | null | undefined>,
		RequiresAutoMinorEngineVersionUpgrade: FormControl<boolean | null | undefined>,
		VpcOnly: FormControl<boolean | null | undefined>,
		SupportsOptionVersionDowngrade: FormControl<boolean | null | undefined>,
		CopyableCrossAccount: FormControl<boolean | null | undefined>,
	}
	export function CreateOptionGroupOptionFormGroup() {
		return new FormGroup<OptionGroupOptionFormProperties>({
			Name: new FormControl<string | null | undefined>(undefined),
			Description: new FormControl<string | null | undefined>(undefined),
			EngineName: new FormControl<string | null | undefined>(undefined),
			MajorEngineVersion: new FormControl<string | null | undefined>(undefined),
			MinimumRequiredMinorEngineVersion: new FormControl<string | null | undefined>(undefined),
			PortRequired: new FormControl<boolean | null | undefined>(undefined),
			DefaultPort: new FormControl<number | null | undefined>(undefined),
			Persistent: new FormControl<boolean | null | undefined>(undefined),
			Permanent: new FormControl<boolean | null | undefined>(undefined),
			RequiresAutoMinorEngineVersionUpgrade: new FormControl<boolean | null | undefined>(undefined),
			VpcOnly: new FormControl<boolean | null | undefined>(undefined),
			SupportsOptionVersionDowngrade: new FormControl<boolean | null | undefined>(undefined),
			CopyableCrossAccount: new FormControl<boolean | null | undefined>(undefined),
		});

	}


	/** Option group option settings are used to display settings available for each option with their default values and other information. These values are used with the DescribeOptionGroupOptions action. */
	export interface OptionGroupOptionSetting {
		SettingName?: string;
		SettingDescription?: string;
		DefaultValue?: string;
		ApplyType?: string;
		AllowedValues?: string;
		IsModifiable?: boolean | null;
		IsRequired?: boolean | null;
		MinimumEngineVersionPerAllowedValue?: Array<string>;
	}

	/** Option group option settings are used to display settings available for each option with their default values and other information. These values are used with the DescribeOptionGroupOptions action. */
	export interface OptionGroupOptionSettingFormProperties {
		SettingName: FormControl<string | null | undefined>,
		SettingDescription: FormControl<string | null | undefined>,
		DefaultValue: FormControl<string | null | undefined>,
		ApplyType: FormControl<string | null | undefined>,
		AllowedValues: FormControl<string | null | undefined>,
		IsModifiable: FormControl<boolean | null | undefined>,
		IsRequired: FormControl<boolean | null | undefined>,
	}
	export function CreateOptionGroupOptionSettingFormGroup() {
		return new FormGroup<OptionGroupOptionSettingFormProperties>({
			SettingName: new FormControl<string | null | undefined>(undefined),
			SettingDescription: new FormControl<string | null | undefined>(undefined),
			DefaultValue: new FormControl<string | null | undefined>(undefined),
			ApplyType: new FormControl<string | null | undefined>(undefined),
			AllowedValues: new FormControl<string | null | undefined>(undefined),
			IsModifiable: new FormControl<boolean | null | undefined>(undefined),
			IsRequired: new FormControl<boolean | null | undefined>(undefined),
		});

	}


	/** The version for an option. Option group option versions are returned by the <code>DescribeOptionGroupOptions</code> action. */
	export interface OptionVersion {
		Version?: string;
		IsDefault?: boolean | null;
	}

	/** The version for an option. Option group option versions are returned by the <code>DescribeOptionGroupOptions</code> action. */
	export interface OptionVersionFormProperties {
		Version: FormControl<string | null | undefined>,
		IsDefault: FormControl<boolean | null | undefined>,
	}
	export function CreateOptionVersionFormGroup() {
		return new FormGroup<OptionVersionFormProperties>({
			Version: new FormControl<string | null | undefined>(undefined),
			IsDefault: new FormControl<boolean | null | undefined>(undefined),
		});

	}


	/** Option settings are the actual settings being applied or configured for that option. It is used when you modify an option group or describe option groups. For example, the NATIVE_NETWORK_ENCRYPTION option has a setting called SQLNET.ENCRYPTION_SERVER that can have several different values. */
	export interface OptionSetting {
		Name?: string;
		Value?: string;
		DefaultValue?: string;
		Description?: string;
		ApplyType?: string;
		DataType?: string;
		AllowedValues?: string;
		IsModifiable?: boolean | null;
		IsCollection?: boolean | null;
	}

	/** Option settings are the actual settings being applied or configured for that option. It is used when you modify an option group or describe option groups. For example, the NATIVE_NETWORK_ENCRYPTION option has a setting called SQLNET.ENCRYPTION_SERVER that can have several different values. */
	export interface OptionSettingFormProperties {
		Name: FormControl<string | null | undefined>,
		Value: FormControl<string | null | undefined>,
		DefaultValue: FormControl<string | null | undefined>,
		Description: FormControl<string | null | undefined>,
		ApplyType: FormControl<string | null | undefined>,
		DataType: FormControl<string | null | undefined>,
		AllowedValues: FormControl<string | null | undefined>,
		IsModifiable: FormControl<boolean | null | undefined>,
		IsCollection: FormControl<boolean | null | undefined>,
	}
	export function CreateOptionSettingFormGroup() {
		return new FormGroup<OptionSettingFormProperties>({
			Name: new FormControl<string | null | undefined>(undefined),
			Value: new FormControl<string | null | undefined>(undefined),
			DefaultValue: new FormControl<string | null | undefined>(undefined),
			Description: new FormControl<string | null | undefined>(undefined),
			ApplyType: new FormControl<string | null | undefined>(undefined),
			DataType: new FormControl<string | null | undefined>(undefined),
			AllowedValues: new FormControl<string | null | undefined>(undefined),
			IsModifiable: new FormControl<boolean | null | undefined>(undefined),
			IsCollection: new FormControl<boolean | null | undefined>(undefined),
		});

	}


	/** <p>Contains a list of available options for a DB instance.</p> <p>This data type is used as a response element in the <code>DescribeOrderableDBInstanceOptions</code> action.</p> */
	export interface OrderableDBInstanceOption {
		Engine?: string;
		EngineVersion?: string;
		DBInstanceClass?: string;
		LicenseModel?: string;
		AvailabilityZoneGroup?: string;
		AvailabilityZones?: Array<string>;
		MultiAZCapable?: boolean | null;
		ReadReplicaCapable?: boolean | null;
		Vpc?: boolean | null;
		SupportsStorageEncryption?: boolean | null;
		StorageType?: string;
		SupportsIops?: boolean | null;
		SupportsEnhancedMonitoring?: boolean | null;
		SupportsIAMDatabaseAuthentication?: boolean | null;
		SupportsPerformanceInsights?: boolean | null;
		MinStorageSize?: number | null;
		MaxStorageSize?: number | null;
		MinIopsPerDbInstance?: number | null;
		MaxIopsPerDbInstance?: number | null;
		MinIopsPerGib?: number | null;
		MaxIopsPerGib?: number | null;
		AvailableProcessorFeatures?: Array<string>;
		SupportedEngineModes?: Array<string>;
		SupportsStorageAutoscaling?: boolean | null;
		SupportsKerberosAuthentication?: boolean | null;
		OutpostCapable?: boolean | null;
		SupportedActivityStreamModes?: Array<string>;
		SupportsGlobalDatabases?: boolean | null;
		SupportsClusters?: boolean | null;
		SupportedNetworkTypes?: Array<string>;
		SupportsStorageThroughput?: boolean | null;
		MinStorageThroughputPerDbInstance?: number | null;
		MaxStorageThroughputPerDbInstance?: number | null;
		MinStorageThroughputPerIops?: number | null;
		MaxStorageThroughputPerIops?: number | null;
	}

	/** <p>Contains a list of available options for a DB instance.</p> <p>This data type is used as a response element in the <code>DescribeOrderableDBInstanceOptions</code> action.</p> */
	export interface OrderableDBInstanceOptionFormProperties {
		Engine: FormControl<string | null | undefined>,
		EngineVersion: FormControl<string | null | undefined>,
		DBInstanceClass: FormControl<string | null | undefined>,
		LicenseModel: FormControl<string | null | undefined>,
		AvailabilityZoneGroup: FormControl<string | null | undefined>,
		MultiAZCapable: FormControl<boolean | null | undefined>,
		ReadReplicaCapable: FormControl<boolean | null | undefined>,
		Vpc: FormControl<boolean | null | undefined>,
		SupportsStorageEncryption: FormControl<boolean | null | undefined>,
		StorageType: FormControl<string | null | undefined>,
		SupportsIops: FormControl<boolean | null | undefined>,
		SupportsEnhancedMonitoring: FormControl<boolean | null | undefined>,
		SupportsIAMDatabaseAuthentication: FormControl<boolean | null | undefined>,
		SupportsPerformanceInsights: FormControl<boolean | null | undefined>,
		MinStorageSize: FormControl<number | null | undefined>,
		MaxStorageSize: FormControl<number | null | undefined>,
		MinIopsPerDbInstance: FormControl<number | null | undefined>,
		MaxIopsPerDbInstance: FormControl<number | null | undefined>,
		MinIopsPerGib: FormControl<number | null | undefined>,
		MaxIopsPerGib: FormControl<number | null | undefined>,
		SupportsStorageAutoscaling: FormControl<boolean | null | undefined>,
		SupportsKerberosAuthentication: FormControl<boolean | null | undefined>,
		OutpostCapable: FormControl<boolean | null | undefined>,
		SupportsGlobalDatabases: FormControl<boolean | null | undefined>,
		SupportsClusters: FormControl<boolean | null | undefined>,
		SupportsStorageThroughput: FormControl<boolean | null | undefined>,
		MinStorageThroughputPerDbInstance: FormControl<number | null | undefined>,
		MaxStorageThroughputPerDbInstance: FormControl<number | null | undefined>,
		MinStorageThroughputPerIops: FormControl<number | null | undefined>,
		MaxStorageThroughputPerIops: FormControl<number | null | undefined>,
	}
	export function CreateOrderableDBInstanceOptionFormGroup() {
		return new FormGroup<OrderableDBInstanceOptionFormProperties>({
			Engine: new FormControl<string | null | undefined>(undefined),
			EngineVersion: new FormControl<string | null | undefined>(undefined),
			DBInstanceClass: new FormControl<string | null | undefined>(undefined),
			LicenseModel: new FormControl<string | null | undefined>(undefined),
			AvailabilityZoneGroup: new FormControl<string | null | undefined>(undefined),
			MultiAZCapable: new FormControl<boolean | null | undefined>(undefined),
			ReadReplicaCapable: new FormControl<boolean | null | undefined>(undefined),
			Vpc: new FormControl<boolean | null | undefined>(undefined),
			SupportsStorageEncryption: new FormControl<boolean | null | undefined>(undefined),
			StorageType: new FormControl<string | null | undefined>(undefined),
			SupportsIops: new FormControl<boolean | null | undefined>(undefined),
			SupportsEnhancedMonitoring: new FormControl<boolean | null | undefined>(undefined),
			SupportsIAMDatabaseAuthentication: new FormControl<boolean | null | undefined>(undefined),
			SupportsPerformanceInsights: new FormControl<boolean | null | undefined>(undefined),
			MinStorageSize: new FormControl<number | null | undefined>(undefined),
			MaxStorageSize: new FormControl<number | null | undefined>(undefined),
			MinIopsPerDbInstance: new FormControl<number | null | undefined>(undefined),
			MaxIopsPerDbInstance: new FormControl<number | null | undefined>(undefined),
			MinIopsPerGib: new FormControl<number | null | undefined>(undefined),
			MaxIopsPerGib: new FormControl<number | null | undefined>(undefined),
			SupportsStorageAutoscaling: new FormControl<boolean | null | undefined>(undefined),
			SupportsKerberosAuthentication: new FormControl<boolean | null | undefined>(undefined),
			OutpostCapable: new FormControl<boolean | null | undefined>(undefined),
			SupportsGlobalDatabases: new FormControl<boolean | null | undefined>(undefined),
			SupportsClusters: new FormControl<boolean | null | undefined>(undefined),
			SupportsStorageThroughput: new FormControl<boolean | null | undefined>(undefined),
			MinStorageThroughputPerDbInstance: new FormControl<number | null | undefined>(undefined),
			MaxStorageThroughputPerDbInstance: new FormControl<number | null | undefined>(undefined),
			MinStorageThroughputPerIops: new FormControl<number | null | undefined>(undefined),
			MaxStorageThroughputPerIops: new FormControl<number | null | undefined>(undefined),
		});

	}


	/** <p>A data type that represents an Outpost.</p> <p>For more information about RDS on Outposts, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/rds-on-outposts.html">Amazon RDS on Amazon Web Services Outposts</a> in the <i>Amazon RDS User Guide.</i> </p> */
	export interface Outpost {
		Arn?: string;
	}

	/** <p>A data type that represents an Outpost.</p> <p>For more information about RDS on Outposts, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/rds-on-outposts.html">Amazon RDS on Amazon Web Services Outposts</a> in the <i>Amazon RDS User Guide.</i> </p> */
	export interface OutpostFormProperties {
		Arn: FormControl<string | null | undefined>,
	}
	export function CreateOutpostFormGroup() {
		return new FormGroup<OutpostFormProperties>({
			Arn: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Provides information about a pending maintenance action for a resource. */
	export interface PendingMaintenanceAction {
		Action?: string;
		AutoAppliedAfterDate?: Date;
		ForcedApplyDate?: Date;
		OptInStatus?: string;
		CurrentApplyDate?: Date;
		Description?: string;
	}

	/** Provides information about a pending maintenance action for a resource. */
	export interface PendingMaintenanceActionFormProperties {
		Action: FormControl<string | null | undefined>,
		AutoAppliedAfterDate: FormControl<Date | null | undefined>,
		ForcedApplyDate: FormControl<Date | null | undefined>,
		OptInStatus: FormControl<string | null | undefined>,
		CurrentApplyDate: FormControl<Date | null | undefined>,
		Description: FormControl<string | null | undefined>,
	}
	export function CreatePendingMaintenanceActionFormGroup() {
		return new FormGroup<PendingMaintenanceActionFormProperties>({
			Action: new FormControl<string | null | undefined>(undefined),
			AutoAppliedAfterDate: new FormControl<Date | null | undefined>(undefined),
			ForcedApplyDate: new FormControl<Date | null | undefined>(undefined),
			OptInStatus: new FormControl<string | null | undefined>(undefined),
			CurrentApplyDate: new FormControl<Date | null | undefined>(undefined),
			Description: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** <p/> */
	export interface PromoteReadReplicaDBClusterMessage {

		/** Required */
		DBClusterIdentifier: string;
	}

	/** <p/> */
	export interface PromoteReadReplicaDBClusterMessageFormProperties {

		/** Required */
		DBClusterIdentifier: FormControl<string | null | undefined>,
	}
	export function CreatePromoteReadReplicaDBClusterMessageFormGroup() {
		return new FormGroup<PromoteReadReplicaDBClusterMessageFormProperties>({
			DBClusterIdentifier: new FormControl<string | null | undefined>(undefined, [Validators.required]),
		});

	}


	/** <p/> */
	export interface PromoteReadReplicaMessage {

		/** Required */
		DBInstanceIdentifier: string;
		BackupRetentionPeriod?: number | null;
		PreferredBackupWindow?: string;
	}

	/** <p/> */
	export interface PromoteReadReplicaMessageFormProperties {

		/** Required */
		DBInstanceIdentifier: FormControl<string | null | undefined>,
		BackupRetentionPeriod: FormControl<number | null | undefined>,
		PreferredBackupWindow: FormControl<string | null | undefined>,
	}
	export function CreatePromoteReadReplicaMessageFormGroup() {
		return new FormGroup<PromoteReadReplicaMessageFormProperties>({
			DBInstanceIdentifier: new FormControl<string | null | undefined>(undefined, [Validators.required]),
			BackupRetentionPeriod: new FormControl<number | null | undefined>(undefined),
			PreferredBackupWindow: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** <p/> */
	export interface PurchaseReservedDBInstancesOfferingMessage {

		/** Required */
		ReservedDBInstancesOfferingId: string;
		ReservedDBInstanceId?: string;
		DBInstanceCount?: number | null;

		/** A list of tags. For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Tagging.html">Tagging Amazon RDS Resources</a> in the <i>Amazon RDS User Guide.</i> */
		Tags?: Array<string>;
	}

	/** <p/> */
	export interface PurchaseReservedDBInstancesOfferingMessageFormProperties {

		/** Required */
		ReservedDBInstancesOfferingId: FormControl<string | null | undefined>,
		ReservedDBInstanceId: FormControl<string | null | undefined>,
		DBInstanceCount: FormControl<number | null | undefined>,
	}
	export function CreatePurchaseReservedDBInstancesOfferingMessageFormGroup() {
		return new FormGroup<PurchaseReservedDBInstancesOfferingMessageFormProperties>({
			ReservedDBInstancesOfferingId: new FormControl<string | null | undefined>(undefined, [Validators.required]),
			ReservedDBInstanceId: new FormControl<string | null | undefined>(undefined),
			DBInstanceCount: new FormControl<number | null | undefined>(undefined),
		});

	}


	/** A range of integer values. */
	export interface Range {
		From?: number | null;
		To?: number | null;
		Step?: number | null;
	}

	/** A range of integer values. */
	export interface RangeFormProperties {
		From: FormControl<number | null | undefined>,
		To: FormControl<number | null | undefined>,
		Step: FormControl<number | null | undefined>,
	}
	export function CreateRangeFormGroup() {
		return new FormGroup<RangeFormProperties>({
			From: new FormControl<number | null | undefined>(undefined),
			To: new FormControl<number | null | undefined>(undefined),
			Step: new FormControl<number | null | undefined>(undefined),
		});

	}

	export interface RebootDBClusterMessage {

		/** Required */
		DBClusterIdentifier: string;
	}
	export interface RebootDBClusterMessageFormProperties {

		/** Required */
		DBClusterIdentifier: FormControl<string | null | undefined>,
	}
	export function CreateRebootDBClusterMessageFormGroup() {
		return new FormGroup<RebootDBClusterMessageFormProperties>({
			DBClusterIdentifier: new FormControl<string | null | undefined>(undefined, [Validators.required]),
		});

	}


	/** <p/> */
	export interface RebootDBInstanceMessage {

		/** Required */
		DBInstanceIdentifier: string;
		ForceFailover?: boolean | null;
	}

	/** <p/> */
	export interface RebootDBInstanceMessageFormProperties {

		/** Required */
		DBInstanceIdentifier: FormControl<string | null | undefined>,
		ForceFailover: FormControl<boolean | null | undefined>,
	}
	export function CreateRebootDBInstanceMessageFormGroup() {
		return new FormGroup<RebootDBInstanceMessageFormProperties>({
			DBInstanceIdentifier: new FormControl<string | null | undefined>(undefined, [Validators.required]),
			ForceFailover: new FormControl<boolean | null | undefined>(undefined),
		});

	}


	/** This data type is used as a response element in the <code>DescribeReservedDBInstances</code> and <code>DescribeReservedDBInstancesOfferings</code> actions. */
	export interface RecurringCharge {
		RecurringChargeAmount?: number | null;
		RecurringChargeFrequency?: string;
	}

	/** This data type is used as a response element in the <code>DescribeReservedDBInstances</code> and <code>DescribeReservedDBInstancesOfferings</code> actions. */
	export interface RecurringChargeFormProperties {
		RecurringChargeAmount: FormControl<number | null | undefined>,
		RecurringChargeFrequency: FormControl<string | null | undefined>,
	}
	export function CreateRecurringChargeFormGroup() {
		return new FormGroup<RecurringChargeFormProperties>({
			RecurringChargeAmount: new FormControl<number | null | undefined>(undefined),
			RecurringChargeFrequency: new FormControl<string | null | undefined>(undefined),
		});

	}

	export interface RegisterDBProxyTargetsRequest {

		/** Required */
		DBProxyName: string;
		TargetGroupName?: string;
		DBInstanceIdentifiers?: Array<string>;
		DBClusterIdentifiers?: Array<string>;
	}
	export interface RegisterDBProxyTargetsRequestFormProperties {

		/** Required */
		DBProxyName: FormControl<string | null | undefined>,
		TargetGroupName: FormControl<string | null | undefined>,
	}
	export function CreateRegisterDBProxyTargetsRequestFormGroup() {
		return new FormGroup<RegisterDBProxyTargetsRequestFormProperties>({
			DBProxyName: new FormControl<string | null | undefined>(undefined, [Validators.required]),
			TargetGroupName: new FormControl<string | null | undefined>(undefined),
		});

	}

	export interface RemoveFromGlobalClusterMessage {
		GlobalClusterIdentifier?: string;
		DbClusterIdentifier?: string;
	}
	export interface RemoveFromGlobalClusterMessageFormProperties {
		GlobalClusterIdentifier: FormControl<string | null | undefined>,
		DbClusterIdentifier: FormControl<string | null | undefined>,
	}
	export function CreateRemoveFromGlobalClusterMessageFormGroup() {
		return new FormGroup<RemoveFromGlobalClusterMessageFormProperties>({
			GlobalClusterIdentifier: new FormControl<string | null | undefined>(undefined),
			DbClusterIdentifier: new FormControl<string | null | undefined>(undefined),
		});

	}

	export interface RemoveRoleFromDBClusterMessage {

		/** Required */
		DBClusterIdentifier: string;

		/** Required */
		RoleArn: string;
		FeatureName?: string;
	}
	export interface RemoveRoleFromDBClusterMessageFormProperties {

		/** Required */
		DBClusterIdentifier: FormControl<string | null | undefined>,

		/** Required */
		RoleArn: FormControl<string | null | undefined>,
		FeatureName: FormControl<string | null | undefined>,
	}
	export function CreateRemoveRoleFromDBClusterMessageFormGroup() {
		return new FormGroup<RemoveRoleFromDBClusterMessageFormProperties>({
			DBClusterIdentifier: new FormControl<string | null | undefined>(undefined, [Validators.required]),
			RoleArn: new FormControl<string | null | undefined>(undefined, [Validators.required]),
			FeatureName: new FormControl<string | null | undefined>(undefined),
		});

	}

	export interface RemoveRoleFromDBInstanceMessage {

		/** Required */
		DBInstanceIdentifier: string;

		/** Required */
		RoleArn: string;

		/** Required */
		FeatureName: string;
	}
	export interface RemoveRoleFromDBInstanceMessageFormProperties {

		/** Required */
		DBInstanceIdentifier: FormControl<string | null | undefined>,

		/** Required */
		RoleArn: FormControl<string | null | undefined>,

		/** Required */
		FeatureName: FormControl<string | null | undefined>,
	}
	export function CreateRemoveRoleFromDBInstanceMessageFormGroup() {
		return new FormGroup<RemoveRoleFromDBInstanceMessageFormProperties>({
			DBInstanceIdentifier: new FormControl<string | null | undefined>(undefined, [Validators.required]),
			RoleArn: new FormControl<string | null | undefined>(undefined, [Validators.required]),
			FeatureName: new FormControl<string | null | undefined>(undefined, [Validators.required]),
		});

	}


	/** <p/> */
	export interface RemoveSourceIdentifierFromSubscriptionMessage {

		/** Required */
		SubscriptionName: string;

		/** Required */
		SourceIdentifier: string;
	}

	/** <p/> */
	export interface RemoveSourceIdentifierFromSubscriptionMessageFormProperties {

		/** Required */
		SubscriptionName: FormControl<string | null | undefined>,

		/** Required */
		SourceIdentifier: FormControl<string | null | undefined>,
	}
	export function CreateRemoveSourceIdentifierFromSubscriptionMessageFormGroup() {
		return new FormGroup<RemoveSourceIdentifierFromSubscriptionMessageFormProperties>({
			SubscriptionName: new FormControl<string | null | undefined>(undefined, [Validators.required]),
			SourceIdentifier: new FormControl<string | null | undefined>(undefined, [Validators.required]),
		});

	}


	/** <p/> */
	export interface RemoveTagsFromResourceMessage {

		/** Required */
		ResourceName: string;

		/** Required */
		TagKeys: Array<string>;
	}

	/** <p/> */
	export interface RemoveTagsFromResourceMessageFormProperties {

		/** Required */
		ResourceName: FormControl<string | null | undefined>,
	}
	export function CreateRemoveTagsFromResourceMessageFormGroup() {
		return new FormGroup<RemoveTagsFromResourceMessageFormProperties>({
			ResourceName: new FormControl<string | null | undefined>(undefined, [Validators.required]),
		});

	}


	/** This data type is used as a response element in the <code>DescribeReservedDBInstancesOfferings</code> action. */
	export interface ReservedDBInstancesOffering {
		ReservedDBInstancesOfferingId?: string;
		DBInstanceClass?: string;
		Duration?: number | null;
		FixedPrice?: number | null;
		UsagePrice?: number | null;
		CurrencyCode?: string;
		ProductDescription?: string;
		OfferingType?: string;
		MultiAZ?: boolean | null;
		RecurringCharges?: Array<string>;
	}

	/** This data type is used as a response element in the <code>DescribeReservedDBInstancesOfferings</code> action. */
	export interface ReservedDBInstancesOfferingFormProperties {
		ReservedDBInstancesOfferingId: FormControl<string | null | undefined>,
		DBInstanceClass: FormControl<string | null | undefined>,
		Duration: FormControl<number | null | undefined>,
		FixedPrice: FormControl<number | null | undefined>,
		UsagePrice: FormControl<number | null | undefined>,
		CurrencyCode: FormControl<string | null | undefined>,
		ProductDescription: FormControl<string | null | undefined>,
		OfferingType: FormControl<string | null | undefined>,
		MultiAZ: FormControl<boolean | null | undefined>,
	}
	export function CreateReservedDBInstancesOfferingFormGroup() {
		return new FormGroup<ReservedDBInstancesOfferingFormProperties>({
			ReservedDBInstancesOfferingId: new FormControl<string | null | undefined>(undefined),
			DBInstanceClass: new FormControl<string | null | undefined>(undefined),
			Duration: new FormControl<number | null | undefined>(undefined),
			FixedPrice: new FormControl<number | null | undefined>(undefined),
			UsagePrice: new FormControl<number | null | undefined>(undefined),
			CurrencyCode: new FormControl<string | null | undefined>(undefined),
			ProductDescription: new FormControl<string | null | undefined>(undefined),
			OfferingType: new FormControl<string | null | undefined>(undefined),
			MultiAZ: new FormControl<boolean | null | undefined>(undefined),
		});

	}


	/** <p/> */
	export interface ResetDBClusterParameterGroupMessage {

		/** Required */
		DBClusterParameterGroupName: string;
		ResetAllParameters?: boolean | null;
		Parameters?: Array<string>;
	}

	/** <p/> */
	export interface ResetDBClusterParameterGroupMessageFormProperties {

		/** Required */
		DBClusterParameterGroupName: FormControl<string | null | undefined>,
		ResetAllParameters: FormControl<boolean | null | undefined>,
	}
	export function CreateResetDBClusterParameterGroupMessageFormGroup() {
		return new FormGroup<ResetDBClusterParameterGroupMessageFormProperties>({
			DBClusterParameterGroupName: new FormControl<string | null | undefined>(undefined, [Validators.required]),
			ResetAllParameters: new FormControl<boolean | null | undefined>(undefined),
		});

	}


	/** <p/> */
	export interface ResetDBParameterGroupMessage {

		/** Required */
		DBParameterGroupName: string;
		ResetAllParameters?: boolean | null;
		Parameters?: Array<string>;
	}

	/** <p/> */
	export interface ResetDBParameterGroupMessageFormProperties {

		/** Required */
		DBParameterGroupName: FormControl<string | null | undefined>,
		ResetAllParameters: FormControl<boolean | null | undefined>,
	}
	export function CreateResetDBParameterGroupMessageFormGroup() {
		return new FormGroup<ResetDBParameterGroupMessageFormProperties>({
			DBParameterGroupName: new FormControl<string | null | undefined>(undefined, [Validators.required]),
			ResetAllParameters: new FormControl<boolean | null | undefined>(undefined),
		});

	}

	export interface RestoreDBClusterFromS3Message {
		AvailabilityZones?: Array<string>;
		BackupRetentionPeriod?: number | null;
		CharacterSetName?: string;
		DatabaseName?: string;

		/** Required */
		DBClusterIdentifier: string;
		DBClusterParameterGroupName?: string;
		VpcSecurityGroupIds?: Array<string>;
		DBSubnetGroupName?: string;

		/** Required */
		Engine: string;
		EngineVersion?: string;
		Port?: number | null;

		/** Required */
		MasterUsername: string;
		MasterUserPassword?: string;
		OptionGroupName?: string;
		PreferredBackupWindow?: string;
		PreferredMaintenanceWindow?: string;

		/** A list of tags. For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Tagging.html">Tagging Amazon RDS Resources</a> in the <i>Amazon RDS User Guide.</i> */
		Tags?: Array<string>;
		StorageEncrypted?: boolean | null;
		KmsKeyId?: string;
		EnableIAMDatabaseAuthentication?: boolean | null;

		/** Required */
		SourceEngine: string;

		/** Required */
		SourceEngineVersion: string;

		/** Required */
		S3BucketName: string;
		S3Prefix?: string;

		/** Required */
		S3IngestionRoleArn: string;
		BacktrackWindow?: number | null;
		EnableCloudwatchLogsExports?: Array<string>;
		DeletionProtection?: boolean | null;
		CopyTagsToSnapshot?: boolean | null;
		Domain?: string;
		DomainIAMRoleName?: string;

		/** <p>Contains the scaling configuration of an Aurora Serverless v2 DB cluster.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-serverless-v2.html">Using Amazon Aurora Serverless v2</a> in the <i>Amazon Aurora User Guide</i>.</p> */
		ServerlessV2ScalingConfiguration?: ServerlessV2ScalingConfiguration;
		NetworkType?: string;
		ManageMasterUserPassword?: boolean | null;
		MasterUserSecretKmsKeyId?: string;
		StorageType?: string;
	}
	export interface RestoreDBClusterFromS3MessageFormProperties {
		BackupRetentionPeriod: FormControl<number | null | undefined>,
		CharacterSetName: FormControl<string | null | undefined>,
		DatabaseName: FormControl<string | null | undefined>,

		/** Required */
		DBClusterIdentifier: FormControl<string | null | undefined>,
		DBClusterParameterGroupName: FormControl<string | null | undefined>,
		DBSubnetGroupName: FormControl<string | null | undefined>,

		/** Required */
		Engine: FormControl<string | null | undefined>,
		EngineVersion: FormControl<string | null | undefined>,
		Port: FormControl<number | null | undefined>,

		/** Required */
		MasterUsername: FormControl<string | null | undefined>,
		MasterUserPassword: FormControl<string | null | undefined>,
		OptionGroupName: FormControl<string | null | undefined>,
		PreferredBackupWindow: FormControl<string | null | undefined>,
		PreferredMaintenanceWindow: FormControl<string | null | undefined>,
		StorageEncrypted: FormControl<boolean | null | undefined>,
		KmsKeyId: FormControl<string | null | undefined>,
		EnableIAMDatabaseAuthentication: FormControl<boolean | null | undefined>,

		/** Required */
		SourceEngine: FormControl<string | null | undefined>,

		/** Required */
		SourceEngineVersion: FormControl<string | null | undefined>,

		/** Required */
		S3BucketName: FormControl<string | null | undefined>,
		S3Prefix: FormControl<string | null | undefined>,

		/** Required */
		S3IngestionRoleArn: FormControl<string | null | undefined>,
		BacktrackWindow: FormControl<number | null | undefined>,
		DeletionProtection: FormControl<boolean | null | undefined>,
		CopyTagsToSnapshot: FormControl<boolean | null | undefined>,
		Domain: FormControl<string | null | undefined>,
		DomainIAMRoleName: FormControl<string | null | undefined>,
		NetworkType: FormControl<string | null | undefined>,
		ManageMasterUserPassword: FormControl<boolean | null | undefined>,
		MasterUserSecretKmsKeyId: FormControl<string | null | undefined>,
		StorageType: FormControl<string | null | undefined>,
	}
	export function CreateRestoreDBClusterFromS3MessageFormGroup() {
		return new FormGroup<RestoreDBClusterFromS3MessageFormProperties>({
			BackupRetentionPeriod: new FormControl<number | null | undefined>(undefined),
			CharacterSetName: new FormControl<string | null | undefined>(undefined),
			DatabaseName: new FormControl<string | null | undefined>(undefined),
			DBClusterIdentifier: new FormControl<string | null | undefined>(undefined, [Validators.required]),
			DBClusterParameterGroupName: new FormControl<string | null | undefined>(undefined),
			DBSubnetGroupName: new FormControl<string | null | undefined>(undefined),
			Engine: new FormControl<string | null | undefined>(undefined, [Validators.required]),
			EngineVersion: new FormControl<string | null | undefined>(undefined),
			Port: new FormControl<number | null | undefined>(undefined),
			MasterUsername: new FormControl<string | null | undefined>(undefined, [Validators.required]),
			MasterUserPassword: new FormControl<string | null | undefined>(undefined),
			OptionGroupName: new FormControl<string | null | undefined>(undefined),
			PreferredBackupWindow: new FormControl<string | null | undefined>(undefined),
			PreferredMaintenanceWindow: new FormControl<string | null | undefined>(undefined),
			StorageEncrypted: new FormControl<boolean | null | undefined>(undefined),
			KmsKeyId: new FormControl<string | null | undefined>(undefined),
			EnableIAMDatabaseAuthentication: new FormControl<boolean | null | undefined>(undefined),
			SourceEngine: new FormControl<string | null | undefined>(undefined, [Validators.required]),
			SourceEngineVersion: new FormControl<string | null | undefined>(undefined, [Validators.required]),
			S3BucketName: new FormControl<string | null | undefined>(undefined, [Validators.required]),
			S3Prefix: new FormControl<string | null | undefined>(undefined),
			S3IngestionRoleArn: new FormControl<string | null | undefined>(undefined, [Validators.required]),
			BacktrackWindow: new FormControl<number | null | undefined>(undefined),
			DeletionProtection: new FormControl<boolean | null | undefined>(undefined),
			CopyTagsToSnapshot: new FormControl<boolean | null | undefined>(undefined),
			Domain: new FormControl<string | null | undefined>(undefined),
			DomainIAMRoleName: new FormControl<string | null | undefined>(undefined),
			NetworkType: new FormControl<string | null | undefined>(undefined),
			ManageMasterUserPassword: new FormControl<boolean | null | undefined>(undefined),
			MasterUserSecretKmsKeyId: new FormControl<string | null | undefined>(undefined),
			StorageType: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** <p/> */
	export interface RestoreDBClusterFromSnapshotMessage {
		AvailabilityZones?: Array<string>;

		/** Required */
		DBClusterIdentifier: string;

		/** Required */
		SnapshotIdentifier: string;

		/** Required */
		Engine: string;
		EngineVersion?: string;
		Port?: number | null;
		DBSubnetGroupName?: string;
		DatabaseName?: string;
		OptionGroupName?: string;
		VpcSecurityGroupIds?: Array<string>;
		Tags?: Array<string>;
		KmsKeyId?: string;
		EnableIAMDatabaseAuthentication?: boolean | null;
		BacktrackWindow?: number | null;
		EnableCloudwatchLogsExports?: Array<string>;
		EngineMode?: string;
		ScalingConfiguration?: ScalingConfiguration;
		DBClusterParameterGroupName?: string;
		DeletionProtection?: boolean | null;
		CopyTagsToSnapshot?: boolean | null;
		Domain?: string;
		DomainIAMRoleName?: string;
		DBClusterInstanceClass?: string;
		StorageType?: string;
		Iops?: number | null;
		PubliclyAccessible?: boolean | null;

		/** <p>Contains the scaling configuration of an Aurora Serverless v2 DB cluster.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-serverless-v2.html">Using Amazon Aurora Serverless v2</a> in the <i>Amazon Aurora User Guide</i>.</p> */
		ServerlessV2ScalingConfiguration?: ServerlessV2ScalingConfiguration;
		NetworkType?: string;
	}

	/** <p/> */
	export interface RestoreDBClusterFromSnapshotMessageFormProperties {

		/** Required */
		DBClusterIdentifier: FormControl<string | null | undefined>,

		/** Required */
		SnapshotIdentifier: FormControl<string | null | undefined>,

		/** Required */
		Engine: FormControl<string | null | undefined>,
		EngineVersion: FormControl<string | null | undefined>,
		Port: FormControl<number | null | undefined>,
		DBSubnetGroupName: FormControl<string | null | undefined>,
		DatabaseName: FormControl<string | null | undefined>,
		OptionGroupName: FormControl<string | null | undefined>,
		KmsKeyId: FormControl<string | null | undefined>,
		EnableIAMDatabaseAuthentication: FormControl<boolean | null | undefined>,
		BacktrackWindow: FormControl<number | null | undefined>,
		EngineMode: FormControl<string | null | undefined>,
		DBClusterParameterGroupName: FormControl<string | null | undefined>,
		DeletionProtection: FormControl<boolean | null | undefined>,
		CopyTagsToSnapshot: FormControl<boolean | null | undefined>,
		Domain: FormControl<string | null | undefined>,
		DomainIAMRoleName: FormControl<string | null | undefined>,
		DBClusterInstanceClass: FormControl<string | null | undefined>,
		StorageType: FormControl<string | null | undefined>,
		Iops: FormControl<number | null | undefined>,
		PubliclyAccessible: FormControl<boolean | null | undefined>,
		NetworkType: FormControl<string | null | undefined>,
	}
	export function CreateRestoreDBClusterFromSnapshotMessageFormGroup() {
		return new FormGroup<RestoreDBClusterFromSnapshotMessageFormProperties>({
			DBClusterIdentifier: new FormControl<string | null | undefined>(undefined, [Validators.required]),
			SnapshotIdentifier: new FormControl<string | null | undefined>(undefined, [Validators.required]),
			Engine: new FormControl<string | null | undefined>(undefined, [Validators.required]),
			EngineVersion: new FormControl<string | null | undefined>(undefined),
			Port: new FormControl<number | null | undefined>(undefined),
			DBSubnetGroupName: new FormControl<string | null | undefined>(undefined),
			DatabaseName: new FormControl<string | null | undefined>(undefined),
			OptionGroupName: new FormControl<string | null | undefined>(undefined),
			KmsKeyId: new FormControl<string | null | undefined>(undefined),
			EnableIAMDatabaseAuthentication: new FormControl<boolean | null | undefined>(undefined),
			BacktrackWindow: new FormControl<number | null | undefined>(undefined),
			EngineMode: new FormControl<string | null | undefined>(undefined),
			DBClusterParameterGroupName: new FormControl<string | null | undefined>(undefined),
			DeletionProtection: new FormControl<boolean | null | undefined>(undefined),
			CopyTagsToSnapshot: new FormControl<boolean | null | undefined>(undefined),
			Domain: new FormControl<string | null | undefined>(undefined),
			DomainIAMRoleName: new FormControl<string | null | undefined>(undefined),
			DBClusterInstanceClass: new FormControl<string | null | undefined>(undefined),
			StorageType: new FormControl<string | null | undefined>(undefined),
			Iops: new FormControl<number | null | undefined>(undefined),
			PubliclyAccessible: new FormControl<boolean | null | undefined>(undefined),
			NetworkType: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** <p/> */
	export interface RestoreDBClusterToPointInTimeMessage {

		/** Required */
		DBClusterIdentifier: string;
		RestoreType?: string;
		SourceDBClusterIdentifier?: string;
		RestoreToTime?: Date;
		UseLatestRestorableTime?: boolean | null;
		Port?: number | null;
		DBSubnetGroupName?: string;
		OptionGroupName?: string;
		VpcSecurityGroupIds?: Array<string>;

		/** A list of tags. For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Tagging.html">Tagging Amazon RDS Resources</a> in the <i>Amazon RDS User Guide.</i> */
		Tags?: Array<string>;
		KmsKeyId?: string;
		EnableIAMDatabaseAuthentication?: boolean | null;
		BacktrackWindow?: number | null;
		EnableCloudwatchLogsExports?: Array<string>;
		DBClusterParameterGroupName?: string;
		DeletionProtection?: boolean | null;
		CopyTagsToSnapshot?: boolean | null;
		Domain?: string;
		DomainIAMRoleName?: string;
		ScalingConfiguration?: ScalingConfiguration;
		EngineMode?: string;
		DBClusterInstanceClass?: string;
		StorageType?: string;
		PubliclyAccessible?: boolean | null;
		Iops?: number | null;

		/** <p>Contains the scaling configuration of an Aurora Serverless v2 DB cluster.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-serverless-v2.html">Using Amazon Aurora Serverless v2</a> in the <i>Amazon Aurora User Guide</i>.</p> */
		ServerlessV2ScalingConfiguration?: ServerlessV2ScalingConfiguration;
		NetworkType?: string;
		SourceDbClusterResourceId?: string;
	}

	/** <p/> */
	export interface RestoreDBClusterToPointInTimeMessageFormProperties {

		/** Required */
		DBClusterIdentifier: FormControl<string | null | undefined>,
		RestoreType: FormControl<string | null | undefined>,
		SourceDBClusterIdentifier: FormControl<string | null | undefined>,
		RestoreToTime: FormControl<Date | null | undefined>,
		UseLatestRestorableTime: FormControl<boolean | null | undefined>,
		Port: FormControl<number | null | undefined>,
		DBSubnetGroupName: FormControl<string | null | undefined>,
		OptionGroupName: FormControl<string | null | undefined>,
		KmsKeyId: FormControl<string | null | undefined>,
		EnableIAMDatabaseAuthentication: FormControl<boolean | null | undefined>,
		BacktrackWindow: FormControl<number | null | undefined>,
		DBClusterParameterGroupName: FormControl<string | null | undefined>,
		DeletionProtection: FormControl<boolean | null | undefined>,
		CopyTagsToSnapshot: FormControl<boolean | null | undefined>,
		Domain: FormControl<string | null | undefined>,
		DomainIAMRoleName: FormControl<string | null | undefined>,
		EngineMode: FormControl<string | null | undefined>,
		DBClusterInstanceClass: FormControl<string | null | undefined>,
		StorageType: FormControl<string | null | undefined>,
		PubliclyAccessible: FormControl<boolean | null | undefined>,
		Iops: FormControl<number | null | undefined>,
		NetworkType: FormControl<string | null | undefined>,
		SourceDbClusterResourceId: FormControl<string | null | undefined>,
	}
	export function CreateRestoreDBClusterToPointInTimeMessageFormGroup() {
		return new FormGroup<RestoreDBClusterToPointInTimeMessageFormProperties>({
			DBClusterIdentifier: new FormControl<string | null | undefined>(undefined, [Validators.required]),
			RestoreType: new FormControl<string | null | undefined>(undefined),
			SourceDBClusterIdentifier: new FormControl<string | null | undefined>(undefined),
			RestoreToTime: new FormControl<Date | null | undefined>(undefined),
			UseLatestRestorableTime: new FormControl<boolean | null | undefined>(undefined),
			Port: new FormControl<number | null | undefined>(undefined),
			DBSubnetGroupName: new FormControl<string | null | undefined>(undefined),
			OptionGroupName: new FormControl<string | null | undefined>(undefined),
			KmsKeyId: new FormControl<string | null | undefined>(undefined),
			EnableIAMDatabaseAuthentication: new FormControl<boolean | null | undefined>(undefined),
			BacktrackWindow: new FormControl<number | null | undefined>(undefined),
			DBClusterParameterGroupName: new FormControl<string | null | undefined>(undefined),
			DeletionProtection: new FormControl<boolean | null | undefined>(undefined),
			CopyTagsToSnapshot: new FormControl<boolean | null | undefined>(undefined),
			Domain: new FormControl<string | null | undefined>(undefined),
			DomainIAMRoleName: new FormControl<string | null | undefined>(undefined),
			EngineMode: new FormControl<string | null | undefined>(undefined),
			DBClusterInstanceClass: new FormControl<string | null | undefined>(undefined),
			StorageType: new FormControl<string | null | undefined>(undefined),
			PubliclyAccessible: new FormControl<boolean | null | undefined>(undefined),
			Iops: new FormControl<number | null | undefined>(undefined),
			NetworkType: new FormControl<string | null | undefined>(undefined),
			SourceDbClusterResourceId: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** <p/> */
	export interface RestoreDBInstanceFromDBSnapshotMessage {

		/** Required */
		DBInstanceIdentifier: string;
		DBSnapshotIdentifier?: string;
		DBInstanceClass?: string;
		Port?: number | null;
		AvailabilityZone?: string;
		DBSubnetGroupName?: string;
		MultiAZ?: boolean | null;
		PubliclyAccessible?: boolean | null;
		AutoMinorVersionUpgrade?: boolean | null;
		LicenseModel?: string;
		DBName?: string;
		Engine?: string;
		Iops?: number | null;
		OptionGroupName?: string;

		/** A list of tags. For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Tagging.html">Tagging Amazon RDS Resources</a> in the <i>Amazon RDS User Guide.</i> */
		Tags?: Array<string>;
		StorageType?: string;
		TdeCredentialArn?: string;
		TdeCredentialPassword?: string;
		VpcSecurityGroupIds?: Array<string>;
		Domain?: string;
		DomainFqdn?: string;
		DomainOu?: string;
		DomainAuthSecretArn?: string;
		DomainDnsIps?: Array<string>;
		CopyTagsToSnapshot?: boolean | null;
		DomainIAMRoleName?: string;
		EnableIAMDatabaseAuthentication?: boolean | null;
		EnableCloudwatchLogsExports?: Array<string>;
		ProcessorFeatures?: Array<string>;
		UseDefaultProcessorFeatures?: boolean | null;
		DBParameterGroupName?: string;
		DeletionProtection?: boolean | null;
		EnableCustomerOwnedIp?: boolean | null;
		CustomIamInstanceProfile?: string;
		BackupTarget?: string;
		NetworkType?: string;
		StorageThroughput?: number | null;
		DBClusterSnapshotIdentifier?: string;
		AllocatedStorage?: number | null;
	}

	/** <p/> */
	export interface RestoreDBInstanceFromDBSnapshotMessageFormProperties {

		/** Required */
		DBInstanceIdentifier: FormControl<string | null | undefined>,
		DBSnapshotIdentifier: FormControl<string | null | undefined>,
		DBInstanceClass: FormControl<string | null | undefined>,
		Port: FormControl<number | null | undefined>,
		AvailabilityZone: FormControl<string | null | undefined>,
		DBSubnetGroupName: FormControl<string | null | undefined>,
		MultiAZ: FormControl<boolean | null | undefined>,
		PubliclyAccessible: FormControl<boolean | null | undefined>,
		AutoMinorVersionUpgrade: FormControl<boolean | null | undefined>,
		LicenseModel: FormControl<string | null | undefined>,
		DBName: FormControl<string | null | undefined>,
		Engine: FormControl<string | null | undefined>,
		Iops: FormControl<number | null | undefined>,
		OptionGroupName: FormControl<string | null | undefined>,
		StorageType: FormControl<string | null | undefined>,
		TdeCredentialArn: FormControl<string | null | undefined>,
		TdeCredentialPassword: FormControl<string | null | undefined>,
		Domain: FormControl<string | null | undefined>,
		DomainFqdn: FormControl<string | null | undefined>,
		DomainOu: FormControl<string | null | undefined>,
		DomainAuthSecretArn: FormControl<string | null | undefined>,
		CopyTagsToSnapshot: FormControl<boolean | null | undefined>,
		DomainIAMRoleName: FormControl<string | null | undefined>,
		EnableIAMDatabaseAuthentication: FormControl<boolean | null | undefined>,
		UseDefaultProcessorFeatures: FormControl<boolean | null | undefined>,
		DBParameterGroupName: FormControl<string | null | undefined>,
		DeletionProtection: FormControl<boolean | null | undefined>,
		EnableCustomerOwnedIp: FormControl<boolean | null | undefined>,
		CustomIamInstanceProfile: FormControl<string | null | undefined>,
		BackupTarget: FormControl<string | null | undefined>,
		NetworkType: FormControl<string | null | undefined>,
		StorageThroughput: FormControl<number | null | undefined>,
		DBClusterSnapshotIdentifier: FormControl<string | null | undefined>,
		AllocatedStorage: FormControl<number | null | undefined>,
	}
	export function CreateRestoreDBInstanceFromDBSnapshotMessageFormGroup() {
		return new FormGroup<RestoreDBInstanceFromDBSnapshotMessageFormProperties>({
			DBInstanceIdentifier: new FormControl<string | null | undefined>(undefined, [Validators.required]),
			DBSnapshotIdentifier: new FormControl<string | null | undefined>(undefined),
			DBInstanceClass: new FormControl<string | null | undefined>(undefined),
			Port: new FormControl<number | null | undefined>(undefined),
			AvailabilityZone: new FormControl<string | null | undefined>(undefined),
			DBSubnetGroupName: new FormControl<string | null | undefined>(undefined),
			MultiAZ: new FormControl<boolean | null | undefined>(undefined),
			PubliclyAccessible: new FormControl<boolean | null | undefined>(undefined),
			AutoMinorVersionUpgrade: new FormControl<boolean | null | undefined>(undefined),
			LicenseModel: new FormControl<string | null | undefined>(undefined),
			DBName: new FormControl<string | null | undefined>(undefined),
			Engine: new FormControl<string | null | undefined>(undefined),
			Iops: new FormControl<number | null | undefined>(undefined),
			OptionGroupName: new FormControl<string | null | undefined>(undefined),
			StorageType: new FormControl<string | null | undefined>(undefined),
			TdeCredentialArn: new FormControl<string | null | undefined>(undefined),
			TdeCredentialPassword: new FormControl<string | null | undefined>(undefined),
			Domain: new FormControl<string | null | undefined>(undefined),
			DomainFqdn: new FormControl<string | null | undefined>(undefined),
			DomainOu: new FormControl<string | null | undefined>(undefined),
			DomainAuthSecretArn: new FormControl<string | null | undefined>(undefined),
			CopyTagsToSnapshot: new FormControl<boolean | null | undefined>(undefined),
			DomainIAMRoleName: new FormControl<string | null | undefined>(undefined),
			EnableIAMDatabaseAuthentication: new FormControl<boolean | null | undefined>(undefined),
			UseDefaultProcessorFeatures: new FormControl<boolean | null | undefined>(undefined),
			DBParameterGroupName: new FormControl<string | null | undefined>(undefined),
			DeletionProtection: new FormControl<boolean | null | undefined>(undefined),
			EnableCustomerOwnedIp: new FormControl<boolean | null | undefined>(undefined),
			CustomIamInstanceProfile: new FormControl<string | null | undefined>(undefined),
			BackupTarget: new FormControl<string | null | undefined>(undefined),
			NetworkType: new FormControl<string | null | undefined>(undefined),
			StorageThroughput: new FormControl<number | null | undefined>(undefined),
			DBClusterSnapshotIdentifier: new FormControl<string | null | undefined>(undefined),
			AllocatedStorage: new FormControl<number | null | undefined>(undefined),
		});

	}

	export interface RestoreDBInstanceFromS3Message {
		DBName?: string;

		/** Required */
		DBInstanceIdentifier: string;
		AllocatedStorage?: number | null;

		/** Required */
		DBInstanceClass: string;

		/** Required */
		Engine: string;
		MasterUsername?: string;
		MasterUserPassword?: string;
		DBSecurityGroups?: Array<string>;
		VpcSecurityGroupIds?: Array<string>;
		AvailabilityZone?: string;
		DBSubnetGroupName?: string;
		PreferredMaintenanceWindow?: string;
		DBParameterGroupName?: string;
		BackupRetentionPeriod?: number | null;
		PreferredBackupWindow?: string;
		Port?: number | null;
		MultiAZ?: boolean | null;
		EngineVersion?: string;
		AutoMinorVersionUpgrade?: boolean | null;
		LicenseModel?: string;
		Iops?: number | null;
		OptionGroupName?: string;
		PubliclyAccessible?: boolean | null;
		Tags?: Array<string>;
		StorageType?: string;
		StorageEncrypted?: boolean | null;
		KmsKeyId?: string;
		CopyTagsToSnapshot?: boolean | null;
		MonitoringInterval?: number | null;
		MonitoringRoleArn?: string;
		EnableIAMDatabaseAuthentication?: boolean | null;

		/** Required */
		SourceEngine: string;

		/** Required */
		SourceEngineVersion: string;

		/** Required */
		S3BucketName: string;
		S3Prefix?: string;

		/** Required */
		S3IngestionRoleArn: string;
		EnablePerformanceInsights?: boolean | null;
		PerformanceInsightsKMSKeyId?: string;
		PerformanceInsightsRetentionPeriod?: number | null;
		EnableCloudwatchLogsExports?: Array<string>;
		ProcessorFeatures?: Array<string>;
		UseDefaultProcessorFeatures?: boolean | null;
		DeletionProtection?: boolean | null;
		MaxAllocatedStorage?: number | null;
		NetworkType?: string;
		StorageThroughput?: number | null;
		ManageMasterUserPassword?: boolean | null;
		MasterUserSecretKmsKeyId?: string;
	}
	export interface RestoreDBInstanceFromS3MessageFormProperties {
		DBName: FormControl<string | null | undefined>,

		/** Required */
		DBInstanceIdentifier: FormControl<string | null | undefined>,
		AllocatedStorage: FormControl<number | null | undefined>,

		/** Required */
		DBInstanceClass: FormControl<string | null | undefined>,

		/** Required */
		Engine: FormControl<string | null | undefined>,
		MasterUsername: FormControl<string | null | undefined>,
		MasterUserPassword: FormControl<string | null | undefined>,
		AvailabilityZone: FormControl<string | null | undefined>,
		DBSubnetGroupName: FormControl<string | null | undefined>,
		PreferredMaintenanceWindow: FormControl<string | null | undefined>,
		DBParameterGroupName: FormControl<string | null | undefined>,
		BackupRetentionPeriod: FormControl<number | null | undefined>,
		PreferredBackupWindow: FormControl<string | null | undefined>,
		Port: FormControl<number | null | undefined>,
		MultiAZ: FormControl<boolean | null | undefined>,
		EngineVersion: FormControl<string | null | undefined>,
		AutoMinorVersionUpgrade: FormControl<boolean | null | undefined>,
		LicenseModel: FormControl<string | null | undefined>,
		Iops: FormControl<number | null | undefined>,
		OptionGroupName: FormControl<string | null | undefined>,
		PubliclyAccessible: FormControl<boolean | null | undefined>,
		StorageType: FormControl<string | null | undefined>,
		StorageEncrypted: FormControl<boolean | null | undefined>,
		KmsKeyId: FormControl<string | null | undefined>,
		CopyTagsToSnapshot: FormControl<boolean | null | undefined>,
		MonitoringInterval: FormControl<number | null | undefined>,
		MonitoringRoleArn: FormControl<string | null | undefined>,
		EnableIAMDatabaseAuthentication: FormControl<boolean | null | undefined>,

		/** Required */
		SourceEngine: FormControl<string | null | undefined>,

		/** Required */
		SourceEngineVersion: FormControl<string | null | undefined>,

		/** Required */
		S3BucketName: FormControl<string | null | undefined>,
		S3Prefix: FormControl<string | null | undefined>,

		/** Required */
		S3IngestionRoleArn: FormControl<string | null | undefined>,
		EnablePerformanceInsights: FormControl<boolean | null | undefined>,
		PerformanceInsightsKMSKeyId: FormControl<string | null | undefined>,
		PerformanceInsightsRetentionPeriod: FormControl<number | null | undefined>,
		UseDefaultProcessorFeatures: FormControl<boolean | null | undefined>,
		DeletionProtection: FormControl<boolean | null | undefined>,
		MaxAllocatedStorage: FormControl<number | null | undefined>,
		NetworkType: FormControl<string | null | undefined>,
		StorageThroughput: FormControl<number | null | undefined>,
		ManageMasterUserPassword: FormControl<boolean | null | undefined>,
		MasterUserSecretKmsKeyId: FormControl<string | null | undefined>,
	}
	export function CreateRestoreDBInstanceFromS3MessageFormGroup() {
		return new FormGroup<RestoreDBInstanceFromS3MessageFormProperties>({
			DBName: new FormControl<string | null | undefined>(undefined),
			DBInstanceIdentifier: new FormControl<string | null | undefined>(undefined, [Validators.required]),
			AllocatedStorage: new FormControl<number | null | undefined>(undefined),
			DBInstanceClass: new FormControl<string | null | undefined>(undefined, [Validators.required]),
			Engine: new FormControl<string | null | undefined>(undefined, [Validators.required]),
			MasterUsername: new FormControl<string | null | undefined>(undefined),
			MasterUserPassword: new FormControl<string | null | undefined>(undefined),
			AvailabilityZone: new FormControl<string | null | undefined>(undefined),
			DBSubnetGroupName: new FormControl<string | null | undefined>(undefined),
			PreferredMaintenanceWindow: new FormControl<string | null | undefined>(undefined),
			DBParameterGroupName: new FormControl<string | null | undefined>(undefined),
			BackupRetentionPeriod: new FormControl<number | null | undefined>(undefined),
			PreferredBackupWindow: new FormControl<string | null | undefined>(undefined),
			Port: new FormControl<number | null | undefined>(undefined),
			MultiAZ: new FormControl<boolean | null | undefined>(undefined),
			EngineVersion: new FormControl<string | null | undefined>(undefined),
			AutoMinorVersionUpgrade: new FormControl<boolean | null | undefined>(undefined),
			LicenseModel: new FormControl<string | null | undefined>(undefined),
			Iops: new FormControl<number | null | undefined>(undefined),
			OptionGroupName: new FormControl<string | null | undefined>(undefined),
			PubliclyAccessible: new FormControl<boolean | null | undefined>(undefined),
			StorageType: new FormControl<string | null | undefined>(undefined),
			StorageEncrypted: new FormControl<boolean | null | undefined>(undefined),
			KmsKeyId: new FormControl<string | null | undefined>(undefined),
			CopyTagsToSnapshot: new FormControl<boolean | null | undefined>(undefined),
			MonitoringInterval: new FormControl<number | null | undefined>(undefined),
			MonitoringRoleArn: new FormControl<string | null | undefined>(undefined),
			EnableIAMDatabaseAuthentication: new FormControl<boolean | null | undefined>(undefined),
			SourceEngine: new FormControl<string | null | undefined>(undefined, [Validators.required]),
			SourceEngineVersion: new FormControl<string | null | undefined>(undefined, [Validators.required]),
			S3BucketName: new FormControl<string | null | undefined>(undefined, [Validators.required]),
			S3Prefix: new FormControl<string | null | undefined>(undefined),
			S3IngestionRoleArn: new FormControl<string | null | undefined>(undefined, [Validators.required]),
			EnablePerformanceInsights: new FormControl<boolean | null | undefined>(undefined),
			PerformanceInsightsKMSKeyId: new FormControl<string | null | undefined>(undefined),
			PerformanceInsightsRetentionPeriod: new FormControl<number | null | undefined>(undefined),
			UseDefaultProcessorFeatures: new FormControl<boolean | null | undefined>(undefined),
			DeletionProtection: new FormControl<boolean | null | undefined>(undefined),
			MaxAllocatedStorage: new FormControl<number | null | undefined>(undefined),
			NetworkType: new FormControl<string | null | undefined>(undefined),
			StorageThroughput: new FormControl<number | null | undefined>(undefined),
			ManageMasterUserPassword: new FormControl<boolean | null | undefined>(undefined),
			MasterUserSecretKmsKeyId: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** <p/> */
	export interface RestoreDBInstanceToPointInTimeMessage {
		SourceDBInstanceIdentifier?: string;

		/** Required */
		TargetDBInstanceIdentifier: string;
		RestoreTime?: Date;
		UseLatestRestorableTime?: boolean | null;
		DBInstanceClass?: string;
		Port?: number | null;
		AvailabilityZone?: string;
		DBSubnetGroupName?: string;
		MultiAZ?: boolean | null;
		PubliclyAccessible?: boolean | null;
		AutoMinorVersionUpgrade?: boolean | null;
		LicenseModel?: string;
		DBName?: string;
		Engine?: string;
		Iops?: number | null;
		OptionGroupName?: string;
		CopyTagsToSnapshot?: boolean | null;

		/** A list of tags. For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Tagging.html">Tagging Amazon RDS Resources</a> in the <i>Amazon RDS User Guide.</i> */
		Tags?: Array<string>;
		StorageType?: string;
		TdeCredentialArn?: string;
		TdeCredentialPassword?: string;
		VpcSecurityGroupIds?: Array<string>;
		Domain?: string;
		DomainIAMRoleName?: string;
		DomainFqdn?: string;
		DomainOu?: string;
		DomainAuthSecretArn?: string;
		DomainDnsIps?: Array<string>;
		EnableIAMDatabaseAuthentication?: boolean | null;
		EnableCloudwatchLogsExports?: Array<string>;
		ProcessorFeatures?: Array<string>;
		UseDefaultProcessorFeatures?: boolean | null;
		DBParameterGroupName?: string;
		DeletionProtection?: boolean | null;
		SourceDbiResourceId?: string;
		MaxAllocatedStorage?: number | null;
		SourceDBInstanceAutomatedBackupsArn?: string;
		EnableCustomerOwnedIp?: boolean | null;
		CustomIamInstanceProfile?: string;
		BackupTarget?: string;
		NetworkType?: string;
		StorageThroughput?: number | null;
		AllocatedStorage?: number | null;
	}

	/** <p/> */
	export interface RestoreDBInstanceToPointInTimeMessageFormProperties {
		SourceDBInstanceIdentifier: FormControl<string | null | undefined>,

		/** Required */
		TargetDBInstanceIdentifier: FormControl<string | null | undefined>,
		RestoreTime: FormControl<Date | null | undefined>,
		UseLatestRestorableTime: FormControl<boolean | null | undefined>,
		DBInstanceClass: FormControl<string | null | undefined>,
		Port: FormControl<number | null | undefined>,
		AvailabilityZone: FormControl<string | null | undefined>,
		DBSubnetGroupName: FormControl<string | null | undefined>,
		MultiAZ: FormControl<boolean | null | undefined>,
		PubliclyAccessible: FormControl<boolean | null | undefined>,
		AutoMinorVersionUpgrade: FormControl<boolean | null | undefined>,
		LicenseModel: FormControl<string | null | undefined>,
		DBName: FormControl<string | null | undefined>,
		Engine: FormControl<string | null | undefined>,
		Iops: FormControl<number | null | undefined>,
		OptionGroupName: FormControl<string | null | undefined>,
		CopyTagsToSnapshot: FormControl<boolean | null | undefined>,
		StorageType: FormControl<string | null | undefined>,
		TdeCredentialArn: FormControl<string | null | undefined>,
		TdeCredentialPassword: FormControl<string | null | undefined>,
		Domain: FormControl<string | null | undefined>,
		DomainIAMRoleName: FormControl<string | null | undefined>,
		DomainFqdn: FormControl<string | null | undefined>,
		DomainOu: FormControl<string | null | undefined>,
		DomainAuthSecretArn: FormControl<string | null | undefined>,
		EnableIAMDatabaseAuthentication: FormControl<boolean | null | undefined>,
		UseDefaultProcessorFeatures: FormControl<boolean | null | undefined>,
		DBParameterGroupName: FormControl<string | null | undefined>,
		DeletionProtection: FormControl<boolean | null | undefined>,
		SourceDbiResourceId: FormControl<string | null | undefined>,
		MaxAllocatedStorage: FormControl<number | null | undefined>,
		SourceDBInstanceAutomatedBackupsArn: FormControl<string | null | undefined>,
		EnableCustomerOwnedIp: FormControl<boolean | null | undefined>,
		CustomIamInstanceProfile: FormControl<string | null | undefined>,
		BackupTarget: FormControl<string | null | undefined>,
		NetworkType: FormControl<string | null | undefined>,
		StorageThroughput: FormControl<number | null | undefined>,
		AllocatedStorage: FormControl<number | null | undefined>,
	}
	export function CreateRestoreDBInstanceToPointInTimeMessageFormGroup() {
		return new FormGroup<RestoreDBInstanceToPointInTimeMessageFormProperties>({
			SourceDBInstanceIdentifier: new FormControl<string | null | undefined>(undefined),
			TargetDBInstanceIdentifier: new FormControl<string | null | undefined>(undefined, [Validators.required]),
			RestoreTime: new FormControl<Date | null | undefined>(undefined),
			UseLatestRestorableTime: new FormControl<boolean | null | undefined>(undefined),
			DBInstanceClass: new FormControl<string | null | undefined>(undefined),
			Port: new FormControl<number | null | undefined>(undefined),
			AvailabilityZone: new FormControl<string | null | undefined>(undefined),
			DBSubnetGroupName: new FormControl<string | null | undefined>(undefined),
			MultiAZ: new FormControl<boolean | null | undefined>(undefined),
			PubliclyAccessible: new FormControl<boolean | null | undefined>(undefined),
			AutoMinorVersionUpgrade: new FormControl<boolean | null | undefined>(undefined),
			LicenseModel: new FormControl<string | null | undefined>(undefined),
			DBName: new FormControl<string | null | undefined>(undefined),
			Engine: new FormControl<string | null | undefined>(undefined),
			Iops: new FormControl<number | null | undefined>(undefined),
			OptionGroupName: new FormControl<string | null | undefined>(undefined),
			CopyTagsToSnapshot: new FormControl<boolean | null | undefined>(undefined),
			StorageType: new FormControl<string | null | undefined>(undefined),
			TdeCredentialArn: new FormControl<string | null | undefined>(undefined),
			TdeCredentialPassword: new FormControl<string | null | undefined>(undefined),
			Domain: new FormControl<string | null | undefined>(undefined),
			DomainIAMRoleName: new FormControl<string | null | undefined>(undefined),
			DomainFqdn: new FormControl<string | null | undefined>(undefined),
			DomainOu: new FormControl<string | null | undefined>(undefined),
			DomainAuthSecretArn: new FormControl<string | null | undefined>(undefined),
			EnableIAMDatabaseAuthentication: new FormControl<boolean | null | undefined>(undefined),
			UseDefaultProcessorFeatures: new FormControl<boolean | null | undefined>(undefined),
			DBParameterGroupName: new FormControl<string | null | undefined>(undefined),
			DeletionProtection: new FormControl<boolean | null | undefined>(undefined),
			SourceDbiResourceId: new FormControl<string | null | undefined>(undefined),
			MaxAllocatedStorage: new FormControl<number | null | undefined>(undefined),
			SourceDBInstanceAutomatedBackupsArn: new FormControl<string | null | undefined>(undefined),
			EnableCustomerOwnedIp: new FormControl<boolean | null | undefined>(undefined),
			CustomIamInstanceProfile: new FormControl<string | null | undefined>(undefined),
			BackupTarget: new FormControl<string | null | undefined>(undefined),
			NetworkType: new FormControl<string | null | undefined>(undefined),
			StorageThroughput: new FormControl<number | null | undefined>(undefined),
			AllocatedStorage: new FormControl<number | null | undefined>(undefined),
		});

	}


	/** <p/> */
	export interface RevokeDBSecurityGroupIngressMessage {

		/** Required */
		DBSecurityGroupName: string;
		CIDRIP?: string;
		EC2SecurityGroupName?: string;
		EC2SecurityGroupId?: string;
		EC2SecurityGroupOwnerId?: string;
	}

	/** <p/> */
	export interface RevokeDBSecurityGroupIngressMessageFormProperties {

		/** Required */
		DBSecurityGroupName: FormControl<string | null | undefined>,
		CIDRIP: FormControl<string | null | undefined>,
		EC2SecurityGroupName: FormControl<string | null | undefined>,
		EC2SecurityGroupId: FormControl<string | null | undefined>,
		EC2SecurityGroupOwnerId: FormControl<string | null | undefined>,
	}
	export function CreateRevokeDBSecurityGroupIngressMessageFormGroup() {
		return new FormGroup<RevokeDBSecurityGroupIngressMessageFormProperties>({
			DBSecurityGroupName: new FormControl<string | null | undefined>(undefined, [Validators.required]),
			CIDRIP: new FormControl<string | null | undefined>(undefined),
			EC2SecurityGroupName: new FormControl<string | null | undefined>(undefined),
			EC2SecurityGroupId: new FormControl<string | null | undefined>(undefined),
			EC2SecurityGroupOwnerId: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Contains an Amazon Web Services Region name as the result of a successful call to the <code>DescribeSourceRegions</code> action. */
	export interface SourceRegion {
		RegionName?: string;
		Endpoint?: string;
		Status?: string;
		SupportsDBInstanceAutomatedBackupsReplication?: boolean | null;
	}

	/** Contains an Amazon Web Services Region name as the result of a successful call to the <code>DescribeSourceRegions</code> action. */
	export interface SourceRegionFormProperties {
		RegionName: FormControl<string | null | undefined>,
		Endpoint: FormControl<string | null | undefined>,
		Status: FormControl<string | null | undefined>,
		SupportsDBInstanceAutomatedBackupsReplication: FormControl<boolean | null | undefined>,
	}
	export function CreateSourceRegionFormGroup() {
		return new FormGroup<SourceRegionFormProperties>({
			RegionName: new FormControl<string | null | undefined>(undefined),
			Endpoint: new FormControl<string | null | undefined>(undefined),
			Status: new FormControl<string | null | undefined>(undefined),
			SupportsDBInstanceAutomatedBackupsReplication: new FormControl<boolean | null | undefined>(undefined),
		});

	}

	export interface StartActivityStreamRequest {

		/** Required */
		ResourceArn: string;

		/** Required */
		Mode: ActivityStreamMode;

		/** Required */
		KmsKeyId: string;
		ApplyImmediately?: boolean | null;
		EngineNativeAuditFieldsIncluded?: boolean | null;
	}
	export interface StartActivityStreamRequestFormProperties {

		/** Required */
		ResourceArn: FormControl<string | null | undefined>,

		/** Required */
		Mode: FormControl<ActivityStreamMode | null | undefined>,

		/** Required */
		KmsKeyId: FormControl<string | null | undefined>,
		ApplyImmediately: FormControl<boolean | null | undefined>,
		EngineNativeAuditFieldsIncluded: FormControl<boolean | null | undefined>,
	}
	export function CreateStartActivityStreamRequestFormGroup() {
		return new FormGroup<StartActivityStreamRequestFormProperties>({
			ResourceArn: new FormControl<string | null | undefined>(undefined, [Validators.required]),
			Mode: new FormControl<ActivityStreamMode | null | undefined>(undefined, [Validators.required]),
			KmsKeyId: new FormControl<string | null | undefined>(undefined, [Validators.required]),
			ApplyImmediately: new FormControl<boolean | null | undefined>(undefined),
			EngineNativeAuditFieldsIncluded: new FormControl<boolean | null | undefined>(undefined),
		});

	}

	export interface StartDBClusterMessage {

		/** Required */
		DBClusterIdentifier: string;
	}
	export interface StartDBClusterMessageFormProperties {

		/** Required */
		DBClusterIdentifier: FormControl<string | null | undefined>,
	}
	export function CreateStartDBClusterMessageFormGroup() {
		return new FormGroup<StartDBClusterMessageFormProperties>({
			DBClusterIdentifier: new FormControl<string | null | undefined>(undefined, [Validators.required]),
		});

	}

	export interface StartDBInstanceAutomatedBackupsReplicationMessage {

		/** Required */
		SourceDBInstanceArn: string;
		BackupRetentionPeriod?: number | null;
		KmsKeyId?: string;
		PreSignedUrl?: string;
	}
	export interface StartDBInstanceAutomatedBackupsReplicationMessageFormProperties {

		/** Required */
		SourceDBInstanceArn: FormControl<string | null | undefined>,
		BackupRetentionPeriod: FormControl<number | null | undefined>,
		KmsKeyId: FormControl<string | null | undefined>,
		PreSignedUrl: FormControl<string | null | undefined>,
	}
	export function CreateStartDBInstanceAutomatedBackupsReplicationMessageFormGroup() {
		return new FormGroup<StartDBInstanceAutomatedBackupsReplicationMessageFormProperties>({
			SourceDBInstanceArn: new FormControl<string | null | undefined>(undefined, [Validators.required]),
			BackupRetentionPeriod: new FormControl<number | null | undefined>(undefined),
			KmsKeyId: new FormControl<string | null | undefined>(undefined),
			PreSignedUrl: new FormControl<string | null | undefined>(undefined),
		});

	}

	export interface StartDBInstanceMessage {

		/** Required */
		DBInstanceIdentifier: string;
	}
	export interface StartDBInstanceMessageFormProperties {

		/** Required */
		DBInstanceIdentifier: FormControl<string | null | undefined>,
	}
	export function CreateStartDBInstanceMessageFormGroup() {
		return new FormGroup<StartDBInstanceMessageFormProperties>({
			DBInstanceIdentifier: new FormControl<string | null | undefined>(undefined, [Validators.required]),
		});

	}

	export interface StartExportTaskMessage {

		/** Required */
		ExportTaskIdentifier: string;

		/** Required */
		SourceArn: string;

		/** Required */
		S3BucketName: string;

		/** Required */
		IamRoleArn: string;

		/** Required */
		KmsKeyId: string;
		S3Prefix?: string;
		ExportOnly?: Array<string>;
	}
	export interface StartExportTaskMessageFormProperties {

		/** Required */
		ExportTaskIdentifier: FormControl<string | null | undefined>,

		/** Required */
		SourceArn: FormControl<string | null | undefined>,

		/** Required */
		S3BucketName: FormControl<string | null | undefined>,

		/** Required */
		IamRoleArn: FormControl<string | null | undefined>,

		/** Required */
		KmsKeyId: FormControl<string | null | undefined>,
		S3Prefix: FormControl<string | null | undefined>,
	}
	export function CreateStartExportTaskMessageFormGroup() {
		return new FormGroup<StartExportTaskMessageFormProperties>({
			ExportTaskIdentifier: new FormControl<string | null | undefined>(undefined, [Validators.required]),
			SourceArn: new FormControl<string | null | undefined>(undefined, [Validators.required]),
			S3BucketName: new FormControl<string | null | undefined>(undefined, [Validators.required]),
			IamRoleArn: new FormControl<string | null | undefined>(undefined, [Validators.required]),
			KmsKeyId: new FormControl<string | null | undefined>(undefined, [Validators.required]),
			S3Prefix: new FormControl<string | null | undefined>(undefined),
		});

	}

	export interface StopActivityStreamRequest {

		/** Required */
		ResourceArn: string;
		ApplyImmediately?: boolean | null;
	}
	export interface StopActivityStreamRequestFormProperties {

		/** Required */
		ResourceArn: FormControl<string | null | undefined>,
		ApplyImmediately: FormControl<boolean | null | undefined>,
	}
	export function CreateStopActivityStreamRequestFormGroup() {
		return new FormGroup<StopActivityStreamRequestFormProperties>({
			ResourceArn: new FormControl<string | null | undefined>(undefined, [Validators.required]),
			ApplyImmediately: new FormControl<boolean | null | undefined>(undefined),
		});

	}

	export interface StopDBClusterMessage {

		/** Required */
		DBClusterIdentifier: string;
	}
	export interface StopDBClusterMessageFormProperties {

		/** Required */
		DBClusterIdentifier: FormControl<string | null | undefined>,
	}
	export function CreateStopDBClusterMessageFormGroup() {
		return new FormGroup<StopDBClusterMessageFormProperties>({
			DBClusterIdentifier: new FormControl<string | null | undefined>(undefined, [Validators.required]),
		});

	}

	export interface StopDBInstanceAutomatedBackupsReplicationMessage {

		/** Required */
		SourceDBInstanceArn: string;
	}
	export interface StopDBInstanceAutomatedBackupsReplicationMessageFormProperties {

		/** Required */
		SourceDBInstanceArn: FormControl<string | null | undefined>,
	}
	export function CreateStopDBInstanceAutomatedBackupsReplicationMessageFormGroup() {
		return new FormGroup<StopDBInstanceAutomatedBackupsReplicationMessageFormProperties>({
			SourceDBInstanceArn: new FormControl<string | null | undefined>(undefined, [Validators.required]),
		});

	}

	export interface StopDBInstanceMessage {

		/** Required */
		DBInstanceIdentifier: string;
		DBSnapshotIdentifier?: string;
	}
	export interface StopDBInstanceMessageFormProperties {

		/** Required */
		DBInstanceIdentifier: FormControl<string | null | undefined>,
		DBSnapshotIdentifier: FormControl<string | null | undefined>,
	}
	export function CreateStopDBInstanceMessageFormGroup() {
		return new FormGroup<StopDBInstanceMessageFormProperties>({
			DBInstanceIdentifier: new FormControl<string | null | undefined>(undefined, [Validators.required]),
			DBSnapshotIdentifier: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** This data type is used as a response element for the <code>DescribeDBSubnetGroups</code> operation. */
	export interface Subnet {
		SubnetIdentifier?: string;

		/** <p>Contains Availability Zone information.</p> <p>This data type is used as an element in the <code>OrderableDBInstanceOption</code> data type.</p> */
		SubnetAvailabilityZone?: AvailabilityZone;
		SubnetOutpost?: Outpost;
		SubnetStatus?: string;
	}

	/** This data type is used as a response element for the <code>DescribeDBSubnetGroups</code> operation. */
	export interface SubnetFormProperties {
		SubnetIdentifier: FormControl<string | null | undefined>,
		SubnetStatus: FormControl<string | null | undefined>,
	}
	export function CreateSubnetFormGroup() {
		return new FormGroup<SubnetFormProperties>({
			SubnetIdentifier: new FormControl<string | null | undefined>(undefined),
			SubnetStatus: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** A time zone associated with a <code>DBInstance</code> or a <code>DBSnapshot</code>. This data type is an element in the response to the <code>DescribeDBInstances</code>, the <code>DescribeDBSnapshots</code>, and the <code>DescribeDBEngineVersions</code> actions. */
	export interface Timezone {
		TimezoneName?: string;
	}

	/** A time zone associated with a <code>DBInstance</code> or a <code>DBSnapshot</code>. This data type is an element in the response to the <code>DescribeDBInstances</code>, the <code>DescribeDBSnapshots</code>, and the <code>DescribeDBEngineVersions</code> actions. */
	export interface TimezoneFormProperties {
		TimezoneName: FormControl<string | null | undefined>,
	}
	export function CreateTimezoneFormGroup() {
		return new FormGroup<TimezoneFormProperties>({
			TimezoneName: new FormControl<string | null | undefined>(undefined),
		});

	}

	export interface SwitchoverBlueGreenDeploymentRequest {

		/** Required */
		BlueGreenDeploymentIdentifier: string;
		SwitchoverTimeout?: number | null;
	}
	export interface SwitchoverBlueGreenDeploymentRequestFormProperties {

		/** Required */
		BlueGreenDeploymentIdentifier: FormControl<string | null | undefined>,
		SwitchoverTimeout: FormControl<number | null | undefined>,
	}
	export function CreateSwitchoverBlueGreenDeploymentRequestFormGroup() {
		return new FormGroup<SwitchoverBlueGreenDeploymentRequestFormProperties>({
			BlueGreenDeploymentIdentifier: new FormControl<string | null | undefined>(undefined, [Validators.required]),
			SwitchoverTimeout: new FormControl<number | null | undefined>(undefined),
		});

	}

	export interface SwitchoverReadReplicaMessage {

		/** Required */
		DBInstanceIdentifier: string;
	}
	export interface SwitchoverReadReplicaMessageFormProperties {

		/** Required */
		DBInstanceIdentifier: FormControl<string | null | undefined>,
	}
	export function CreateSwitchoverReadReplicaMessageFormGroup() {
		return new FormGroup<SwitchoverReadReplicaMessageFormProperties>({
			DBInstanceIdentifier: new FormControl<string | null | undefined>(undefined, [Validators.required]),
		});

	}


	/** The version of the database engine that a DB instance can be upgraded to. */
	export interface UpgradeTarget {
		Engine?: string;
		EngineVersion?: string;
		Description?: string;
		AutoUpgrade?: boolean | null;
		IsMajorVersionUpgrade?: boolean | null;
		SupportedEngineModes?: Array<string>;
		SupportsParallelQuery?: boolean | null;
		SupportsGlobalDatabases?: boolean | null;
		SupportsBabelfish?: boolean | null;
		SupportsLocalWriteForwarding?: boolean | null;
	}

	/** The version of the database engine that a DB instance can be upgraded to. */
	export interface UpgradeTargetFormProperties {
		Engine: FormControl<string | null | undefined>,
		EngineVersion: FormControl<string | null | undefined>,
		Description: FormControl<string | null | undefined>,
		AutoUpgrade: FormControl<boolean | null | undefined>,
		IsMajorVersionUpgrade: FormControl<boolean | null | undefined>,
		SupportsParallelQuery: FormControl<boolean | null | undefined>,
		SupportsGlobalDatabases: FormControl<boolean | null | undefined>,
		SupportsBabelfish: FormControl<boolean | null | undefined>,
		SupportsLocalWriteForwarding: FormControl<boolean | null | undefined>,
	}
	export function CreateUpgradeTargetFormGroup() {
		return new FormGroup<UpgradeTargetFormProperties>({
			Engine: new FormControl<string | null | undefined>(undefined),
			EngineVersion: new FormControl<string | null | undefined>(undefined),
			Description: new FormControl<string | null | undefined>(undefined),
			AutoUpgrade: new FormControl<boolean | null | undefined>(undefined),
			IsMajorVersionUpgrade: new FormControl<boolean | null | undefined>(undefined),
			SupportsParallelQuery: new FormControl<boolean | null | undefined>(undefined),
			SupportsGlobalDatabases: new FormControl<boolean | null | undefined>(undefined),
			SupportsBabelfish: new FormControl<boolean | null | undefined>(undefined),
			SupportsLocalWriteForwarding: new FormControl<boolean | null | undefined>(undefined),
		});

	}


	/** Information about valid modifications that you can make to your DB instance. Contains the result of a successful call to the <code>DescribeValidDBInstanceModifications</code> action. */
	export interface ValidStorageOptions {
		StorageType?: string;
		StorageSize?: Array<string>;
		ProvisionedIops?: Array<string>;
		IopsToStorageRatio?: Array<string>;
		SupportsStorageAutoscaling?: boolean | null;
		ProvisionedStorageThroughput?: Array<string>;
		StorageThroughputToIopsRatio?: Array<string>;
	}

	/** Information about valid modifications that you can make to your DB instance. Contains the result of a successful call to the <code>DescribeValidDBInstanceModifications</code> action. */
	export interface ValidStorageOptionsFormProperties {
		StorageType: FormControl<string | null | undefined>,
		SupportsStorageAutoscaling: FormControl<boolean | null | undefined>,
	}
	export function CreateValidStorageOptionsFormGroup() {
		return new FormGroup<ValidStorageOptionsFormProperties>({
			StorageType: new FormControl<string | null | undefined>(undefined),
			SupportsStorageAutoscaling: new FormControl<boolean | null | undefined>(undefined),
		});

	}


	/** This data type is used as a response element for queries on VPC security group membership. */
	export interface VpcSecurityGroupMembership {
		VpcSecurityGroupId?: string;
		Status?: string;
	}

	/** This data type is used as a response element for queries on VPC security group membership. */
	export interface VpcSecurityGroupMembershipFormProperties {
		VpcSecurityGroupId: FormControl<string | null | undefined>,
		Status: FormControl<string | null | undefined>,
	}
	export function CreateVpcSecurityGroupMembershipFormGroup() {
		return new FormGroup<VpcSecurityGroupMembershipFormProperties>({
			VpcSecurityGroupId: new FormControl<string | null | undefined>(undefined),
			Status: new FormControl<string | null | undefined>(undefined),
		});

	}

	@Injectable()
	export class MyClient {
		constructor(@Inject('baseUri') private baseUri: string = location.protocol + '//' + location.hostname + (location.port ? ':' + location.port : '') + '/', private http: HttpClient) {
		}

		/**
		 * Associates an Identity and Access Management (IAM) role with a DB cluster.
		 * Get #Action=AddRoleToDBCluster
		 * @param {string} DBClusterIdentifier The name of the DB cluster to associate the IAM role with.
		 * @param {string} RoleArn The Amazon Resource Name (ARN) of the IAM role to associate with the Aurora DB cluster, for example <code>arn:aws:iam::123456789012:role/AuroraAccessRole</code>.
		 * @param {string} FeatureName The name of the feature for the DB cluster that the IAM role is to be associated with. For information about supported feature names, see <a>DBEngineVersion</a>.
		 * @return {void} Success
		 */
		GET_AddRoleToDBCluster(DBClusterIdentifier: string, RoleArn: string, FeatureName: string | null | undefined, Action: GET_AddRoleToDBClusterAction, Version: GET_AddRoleToDBClusterVersion): Observable<HttpResponse<string>> {
			return this.http.get(this.baseUri + '#Action=AddRoleToDBCluster?DBClusterIdentifier=' + (DBClusterIdentifier == null ? '' : encodeURIComponent(DBClusterIdentifier)) + '&RoleArn=' + (RoleArn == null ? '' : encodeURIComponent(RoleArn)) + '&FeatureName=' + (FeatureName == null ? '' : encodeURIComponent(FeatureName)) + '&Action=' + Action + '&Version=' + Version, { observe: 'response', responseType: 'text' });
		}

		/**
		 * <p>Associates an Amazon Web Services Identity and Access Management (IAM) role with a DB instance.</p> <note> <p>To add a role to a DB instance, the status of the DB instance must be <code>available</code>.</p> </note> <p>This command doesn't apply to RDS Custom.</p>
		 * Get #Action=AddRoleToDBInstance
		 * @param {string} DBInstanceIdentifier The name of the DB instance to associate the IAM role with.
		 * @param {string} RoleArn The Amazon Resource Name (ARN) of the IAM role to associate with the DB instance, for example <code>arn:aws:iam::123456789012:role/AccessRole</code>.
		 * @param {string} FeatureName The name of the feature for the DB instance that the IAM role is to be associated with. For information about supported feature names, see <a>DBEngineVersion</a>.
		 * @return {void} Success
		 */
		GET_AddRoleToDBInstance(DBInstanceIdentifier: string, RoleArn: string, FeatureName: string, Action: GET_AddRoleToDBInstanceAction, Version: GET_AddRoleToDBClusterVersion): Observable<HttpResponse<string>> {
			return this.http.get(this.baseUri + '#Action=AddRoleToDBInstance?DBInstanceIdentifier=' + (DBInstanceIdentifier == null ? '' : encodeURIComponent(DBInstanceIdentifier)) + '&RoleArn=' + (RoleArn == null ? '' : encodeURIComponent(RoleArn)) + '&FeatureName=' + (FeatureName == null ? '' : encodeURIComponent(FeatureName)) + '&Action=' + Action + '&Version=' + Version, { observe: 'response', responseType: 'text' });
		}

		/**
		 * Adds a source identifier to an existing RDS event notification subscription.
		 * Get #Action=AddSourceIdentifierToSubscription
		 * @param {string} SubscriptionName The name of the RDS event notification subscription you want to add a source identifier to.
		 * @param {string} SourceIdentifier <p>The identifier of the event source to be added.</p> <p>Constraints:</p> <ul> <li> <p>If the source type is a DB instance, a <code>DBInstanceIdentifier</code> value must be supplied.</p> </li> <li> <p>If the source type is a DB cluster, a <code>DBClusterIdentifier</code> value must be supplied.</p> </li> <li> <p>If the source type is a DB parameter group, a <code>DBParameterGroupName</code> value must be supplied.</p> </li> <li> <p>If the source type is a DB security group, a <code>DBSecurityGroupName</code> value must be supplied.</p> </li> <li> <p>If the source type is a DB snapshot, a <code>DBSnapshotIdentifier</code> value must be supplied.</p> </li> <li> <p>If the source type is a DB cluster snapshot, a <code>DBClusterSnapshotIdentifier</code> value must be supplied.</p> </li> <li> <p>If the source type is an RDS Proxy, a <code>DBProxyName</code> value must be supplied.</p> </li> </ul>
		 * @return {void} Success
		 */
		GET_AddSourceIdentifierToSubscription(SubscriptionName: string, SourceIdentifier: string, Action: GET_AddSourceIdentifierToSubscriptionAction, Version: GET_AddRoleToDBClusterVersion): Observable<HttpResponse<string>> {
			return this.http.get(this.baseUri + '#Action=AddSourceIdentifierToSubscription?SubscriptionName=' + (SubscriptionName == null ? '' : encodeURIComponent(SubscriptionName)) + '&SourceIdentifier=' + (SourceIdentifier == null ? '' : encodeURIComponent(SourceIdentifier)) + '&Action=' + Action + '&Version=' + Version, { observe: 'response', responseType: 'text' });
		}

		/**
		 * <p>Adds metadata tags to an Amazon RDS resource. These tags can also be used with cost allocation reporting to track cost associated with Amazon RDS resources, or used in a Condition statement in an IAM policy for Amazon RDS.</p> <p>For an overview on tagging Amazon RDS resources, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Overview.Tagging.html">Tagging Amazon RDS Resources</a>.</p>
		 * Get #Action=AddTagsToResource
		 * @param {string} ResourceName The Amazon RDS resource that the tags are added to. This value is an Amazon Resource Name (ARN). For information about creating an ARN, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Tagging.ARN.html#USER_Tagging.ARN.Constructing"> Constructing an RDS Amazon Resource Name (ARN)</a>.
		 * @param {Array<string>} Tags The tags to be assigned to the Amazon RDS resource.
		 * @return {void} Success
		 */
		GET_AddTagsToResource(ResourceName: string, Tags: Array<string>, Action: GET_AddTagsToResourceAction, Version: GET_AddRoleToDBClusterVersion): Observable<HttpResponse<string>> {
			return this.http.get(this.baseUri + '#Action=AddTagsToResource?ResourceName=' + (ResourceName == null ? '' : encodeURIComponent(ResourceName)) + '&' + Tags.map(z => `Tags=${encodeURIComponent(z)}`).join('&') + '&Action=' + Action + '&Version=' + Version, { observe: 'response', responseType: 'text' });
		}

		/**
		 * Applies a pending maintenance action to a resource (for example, to a DB instance).
		 * Get #Action=ApplyPendingMaintenanceAction
		 * @param {string} ResourceIdentifier The RDS Amazon Resource Name (ARN) of the resource that the pending maintenance action applies to. For information about creating an ARN, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Tagging.ARN.html#USER_Tagging.ARN.Constructing"> Constructing an RDS Amazon Resource Name (ARN)</a>.
		 * @param {string} ApplyAction <p>The pending maintenance action to apply to this resource.</p> <p>Valid values: <code>system-update</code>, <code>db-upgrade</code>, <code>hardware-maintenance</code>, <code>ca-certificate-rotation</code> </p>
		 * @param {string} OptInType <p>A value that specifies the type of opt-in request, or undoes an opt-in request. An opt-in request of type <code>immediate</code> can't be undone.</p> <p>Valid values:</p> <ul> <li> <p> <code>immediate</code> - Apply the maintenance action immediately.</p> </li> <li> <p> <code>next-maintenance</code> - Apply the maintenance action during the next maintenance window for the resource.</p> </li> <li> <p> <code>undo-opt-in</code> - Cancel any existing <code>next-maintenance</code> opt-in requests.</p> </li> </ul>
		 * @return {void} Success
		 */
		GET_ApplyPendingMaintenanceAction(ResourceIdentifier: string, ApplyAction: string, OptInType: string, Action: GET_ApplyPendingMaintenanceActionAction, Version: GET_AddRoleToDBClusterVersion): Observable<HttpResponse<string>> {
			return this.http.get(this.baseUri + '#Action=ApplyPendingMaintenanceAction?ResourceIdentifier=' + (ResourceIdentifier == null ? '' : encodeURIComponent(ResourceIdentifier)) + '&ApplyAction=' + (ApplyAction == null ? '' : encodeURIComponent(ApplyAction)) + '&OptInType=' + (OptInType == null ? '' : encodeURIComponent(OptInType)) + '&Action=' + Action + '&Version=' + Version, { observe: 'response', responseType: 'text' });
		}

		/**
		 * <p>Enables ingress to a DBSecurityGroup using one of two forms of authorization. First, EC2 or VPC security groups can be added to the DBSecurityGroup if the application using the database is running on EC2 or VPC instances. Second, IP ranges are available if the application accessing your database is running on the internet. Required parameters for this API are one of CIDR range, EC2SecurityGroupId for VPC, or (EC2SecurityGroupOwnerId and either EC2SecurityGroupName or EC2SecurityGroupId for non-VPC).</p> <p>You can't authorize ingress from an EC2 security group in one Amazon Web Services Region to an Amazon RDS DB instance in another. You can't authorize ingress from a VPC security group in one VPC to an Amazon RDS DB instance in another.</p> <p>For an overview of CIDR ranges, go to the <a href="http://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing">Wikipedia Tutorial</a>.</p> <note> <p>EC2-Classic was retired on August 15, 2022. If you haven't migrated from EC2-Classic to a VPC, we recommend that you migrate as soon as possible. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/vpc-migrate.html">Migrate from EC2-Classic to a VPC</a> in the <i>Amazon EC2 User Guide</i>, the blog <a href="http://aws.amazon.com/blogs/aws/ec2-classic-is-retiring-heres-how-to-prepare/">EC2-Classic Networking is Retiring – Here’s How to Prepare</a>, and <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_VPC.Non-VPC2VPC.html">Moving a DB instance not in a VPC into a VPC</a> in the <i>Amazon RDS User Guide</i>.</p> </note>
		 * Get #Action=AuthorizeDBSecurityGroupIngress
		 * @param {string} DBSecurityGroupName The name of the DB security group to add authorization to.
		 * @param {string} CIDRIP The IP range to authorize.
		 * @param {string} EC2SecurityGroupName Name of the EC2 security group to authorize. For VPC DB security groups, <code>EC2SecurityGroupId</code> must be provided. Otherwise, <code>EC2SecurityGroupOwnerId</code> and either <code>EC2SecurityGroupName</code> or <code>EC2SecurityGroupId</code> must be provided.
		 * @param {string} EC2SecurityGroupId Id of the EC2 security group to authorize. For VPC DB security groups, <code>EC2SecurityGroupId</code> must be provided. Otherwise, <code>EC2SecurityGroupOwnerId</code> and either <code>EC2SecurityGroupName</code> or <code>EC2SecurityGroupId</code> must be provided.
		 * @param {string} EC2SecurityGroupOwnerId Amazon Web Services account number of the owner of the EC2 security group specified in the <code>EC2SecurityGroupName</code> parameter. The Amazon Web Services access key ID isn't an acceptable value. For VPC DB security groups, <code>EC2SecurityGroupId</code> must be provided. Otherwise, <code>EC2SecurityGroupOwnerId</code> and either <code>EC2SecurityGroupName</code> or <code>EC2SecurityGroupId</code> must be provided.
		 * @return {void} Success
		 */
		GET_AuthorizeDBSecurityGroupIngress(DBSecurityGroupName: string, CIDRIP: string | null | undefined, EC2SecurityGroupName: string | null | undefined, EC2SecurityGroupId: string | null | undefined, EC2SecurityGroupOwnerId: string | null | undefined, Action: GET_AuthorizeDBSecurityGroupIngressAction, Version: GET_AddRoleToDBClusterVersion): Observable<HttpResponse<string>> {
			return this.http.get(this.baseUri + '#Action=AuthorizeDBSecurityGroupIngress?DBSecurityGroupName=' + (DBSecurityGroupName == null ? '' : encodeURIComponent(DBSecurityGroupName)) + '&CIDRIP=' + (CIDRIP == null ? '' : encodeURIComponent(CIDRIP)) + '&EC2SecurityGroupName=' + (EC2SecurityGroupName == null ? '' : encodeURIComponent(EC2SecurityGroupName)) + '&EC2SecurityGroupId=' + (EC2SecurityGroupId == null ? '' : encodeURIComponent(EC2SecurityGroupId)) + '&EC2SecurityGroupOwnerId=' + (EC2SecurityGroupOwnerId == null ? '' : encodeURIComponent(EC2SecurityGroupOwnerId)) + '&Action=' + Action + '&Version=' + Version, { observe: 'response', responseType: 'text' });
		}

		/**
		 * <p>Backtracks a DB cluster to a specific time, without creating a new DB cluster.</p> <p>For more information on backtracking, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/AuroraMySQL.Managing.Backtrack.html"> Backtracking an Aurora DB Cluster</a> in the <i>Amazon Aurora User Guide</i>.</p> <note> <p>This action applies only to Aurora MySQL DB clusters.</p> </note>
		 * Get #Action=BacktrackDBCluster
		 * @param {string} DBClusterIdentifier <p>The DB cluster identifier of the DB cluster to be backtracked. This parameter is stored as a lowercase string.</p> <p>Constraints:</p> <ul> <li> <p>Must contain from 1 to 63 alphanumeric characters or hyphens.</p> </li> <li> <p>First character must be a letter.</p> </li> <li> <p>Can't end with a hyphen or contain two consecutive hyphens.</p> </li> </ul> <p>Example: <code>my-cluster1</code> </p>
		 * @param {Date} BacktrackTo <p>The timestamp of the time to backtrack the DB cluster to, specified in ISO 8601 format. For more information about ISO 8601, see the <a href="http://en.wikipedia.org/wiki/ISO_8601">ISO8601 Wikipedia page.</a> </p> <note> <p>If the specified time isn't a consistent time for the DB cluster, Aurora automatically chooses the nearest possible consistent time for the DB cluster.</p> </note> <p>Constraints:</p> <ul> <li> <p>Must contain a valid ISO 8601 timestamp.</p> </li> <li> <p>Can't contain a timestamp set in the future.</p> </li> </ul> <p>Example: <code>2017-07-08T18:00Z</code> </p>
		 * @param {boolean} Force A value that indicates whether to force the DB cluster to backtrack when binary logging is enabled. Otherwise, an error occurs when binary logging is enabled.
		 * @param {boolean} UseEarliestTimeOnPointInTimeUnavailable A value that indicates whether to backtrack the DB cluster to the earliest possible backtrack time when <i>BacktrackTo</i> is set to a timestamp earlier than the earliest backtrack time. When this parameter is disabled and <i>BacktrackTo</i> is set to a timestamp earlier than the earliest backtrack time, an error occurs.
		 * @return {void} Success
		 */
		GET_BacktrackDBCluster(DBClusterIdentifier: string, BacktrackTo: Date, Force: boolean | null | undefined, UseEarliestTimeOnPointInTimeUnavailable: boolean | null | undefined, Action: GET_BacktrackDBClusterAction, Version: GET_AddRoleToDBClusterVersion): Observable<HttpResponse<string>> {
			return this.http.get(this.baseUri + '#Action=BacktrackDBCluster?DBClusterIdentifier=' + (DBClusterIdentifier == null ? '' : encodeURIComponent(DBClusterIdentifier)) + '&BacktrackTo=' + BacktrackTo.toISOString() + '&Force=' + Force + '&UseEarliestTimeOnPointInTimeUnavailable=' + UseEarliestTimeOnPointInTimeUnavailable + '&Action=' + Action + '&Version=' + Version, { observe: 'response', responseType: 'text' });
		}

		/**
		 * Cancels an export task in progress that is exporting a snapshot or cluster to Amazon S3. Any data that has already been written to the S3 bucket isn't removed.
		 * Get #Action=CancelExportTask
		 * @param {string} ExportTaskIdentifier The identifier of the snapshot or cluster export task to cancel.
		 * @return {void} Success
		 */
		GET_CancelExportTask(ExportTaskIdentifier: string, Action: GET_CancelExportTaskAction, Version: GET_AddRoleToDBClusterVersion): Observable<HttpResponse<string>> {
			return this.http.get(this.baseUri + '#Action=CancelExportTask?ExportTaskIdentifier=' + (ExportTaskIdentifier == null ? '' : encodeURIComponent(ExportTaskIdentifier)) + '&Action=' + Action + '&Version=' + Version, { observe: 'response', responseType: 'text' });
		}

		/**
		 * Copies the specified DB cluster parameter group.
		 * Get #Action=CopyDBClusterParameterGroup
		 * @param {string} SourceDBClusterParameterGroupIdentifier <p>The identifier or Amazon Resource Name (ARN) for the source DB cluster parameter group. For information about creating an ARN, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/USER_Tagging.ARN.html#USER_Tagging.ARN.Constructing"> Constructing an ARN for Amazon RDS</a> in the <i>Amazon Aurora User Guide</i>.</p> <p>Constraints:</p> <ul> <li> <p>Must specify a valid DB cluster parameter group.</p> </li> </ul>
		 * @param {string} TargetDBClusterParameterGroupIdentifier <p>The identifier for the copied DB cluster parameter group.</p> <p>Constraints:</p> <ul> <li> <p>Can't be null, empty, or blank</p> </li> <li> <p>Must contain from 1 to 255 letters, numbers, or hyphens</p> </li> <li> <p>First character must be a letter</p> </li> <li> <p>Can't end with a hyphen or contain two consecutive hyphens</p> </li> </ul> <p>Example: <code>my-cluster-param-group1</code> </p>
		 * @param {string} TargetDBClusterParameterGroupDescription A description for the copied DB cluster parameter group.
		 * @return {void} Success
		 */
		GET_CopyDBClusterParameterGroup(SourceDBClusterParameterGroupIdentifier: string, TargetDBClusterParameterGroupIdentifier: string, TargetDBClusterParameterGroupDescription: string, Tags: Array<string> | null | undefined, Action: GET_CopyDBClusterParameterGroupAction, Version: GET_AddRoleToDBClusterVersion): Observable<HttpResponse<string>> {
			return this.http.get(this.baseUri + '#Action=CopyDBClusterParameterGroup?SourceDBClusterParameterGroupIdentifier=' + (SourceDBClusterParameterGroupIdentifier == null ? '' : encodeURIComponent(SourceDBClusterParameterGroupIdentifier)) + '&TargetDBClusterParameterGroupIdentifier=' + (TargetDBClusterParameterGroupIdentifier == null ? '' : encodeURIComponent(TargetDBClusterParameterGroupIdentifier)) + '&TargetDBClusterParameterGroupDescription=' + (TargetDBClusterParameterGroupDescription == null ? '' : encodeURIComponent(TargetDBClusterParameterGroupDescription)) + '&' + Tags?.map(z => `Tags=${encodeURIComponent(z)}`).join('&') + '&Action=' + Action + '&Version=' + Version, { observe: 'response', responseType: 'text' });
		}

		/**
		 * <p>Copies a snapshot of a DB cluster.</p> <p>To copy a DB cluster snapshot from a shared manual DB cluster snapshot, <code>SourceDBClusterSnapshotIdentifier</code> must be the Amazon Resource Name (ARN) of the shared DB cluster snapshot.</p> <p>You can copy an encrypted DB cluster snapshot from another Amazon Web Services Region. In that case, the Amazon Web Services Region where you call the <code>CopyDBClusterSnapshot</code> operation is the destination Amazon Web Services Region for the encrypted DB cluster snapshot to be copied to. To copy an encrypted DB cluster snapshot from another Amazon Web Services Region, you must provide the following values:</p> <ul> <li> <p> <code>KmsKeyId</code> - The Amazon Web Services Key Management System (Amazon Web Services KMS) key identifier for the key to use to encrypt the copy of the DB cluster snapshot in the destination Amazon Web Services Region.</p> </li> <li> <p> <code>TargetDBClusterSnapshotIdentifier</code> - The identifier for the new copy of the DB cluster snapshot in the destination Amazon Web Services Region.</p> </li> <li> <p> <code>SourceDBClusterSnapshotIdentifier</code> - The DB cluster snapshot identifier for the encrypted DB cluster snapshot to be copied. This identifier must be in the ARN format for the source Amazon Web Services Region and is the same value as the <code>SourceDBClusterSnapshotIdentifier</code> in the presigned URL.</p> </li> </ul> <p>To cancel the copy operation once it is in progress, delete the target DB cluster snapshot identified by <code>TargetDBClusterSnapshotIdentifier</code> while that DB cluster snapshot is in "copying" status.</p> <p>For more information on copying encrypted Amazon Aurora DB cluster snapshots from one Amazon Web Services Region to another, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/USER_CopySnapshot.html"> Copying a Snapshot</a> in the <i>Amazon Aurora User Guide</i>.</p> <p>For more information on Amazon Aurora DB clusters, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/CHAP_AuroraOverview.html"> What is Amazon Aurora?</a> in the <i>Amazon Aurora User Guide</i>.</p> <p>For more information on Multi-AZ DB clusters, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/multi-az-db-clusters-concepts.html"> Multi-AZ DB cluster deployments</a> in the <i>Amazon RDS User Guide</i>.</p>
		 * Get #Action=CopyDBClusterSnapshot
		 * @param {string} SourceDBClusterSnapshotIdentifier <p>The identifier of the DB cluster snapshot to copy. This parameter isn't case-sensitive.</p> <p>You can't copy an encrypted, shared DB cluster snapshot from one Amazon Web Services Region to another.</p> <p>Constraints:</p> <ul> <li> <p>Must specify a valid system snapshot in the "available" state.</p> </li> <li> <p>If the source snapshot is in the same Amazon Web Services Region as the copy, specify a valid DB snapshot identifier.</p> </li> <li> <p>If the source snapshot is in a different Amazon Web Services Region than the copy, specify a valid DB cluster snapshot ARN. For more information, go to <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/USER_CopySnapshot.html#USER_CopySnapshot.AcrossRegions"> Copying Snapshots Across Amazon Web Services Regions</a> in the <i>Amazon Aurora User Guide</i>.</p> </li> </ul> <p>Example: <code>my-cluster-snapshot1</code> </p>
		 * @param {string} TargetDBClusterSnapshotIdentifier <p>The identifier of the new DB cluster snapshot to create from the source DB cluster snapshot. This parameter isn't case-sensitive.</p> <p>Constraints:</p> <ul> <li> <p>Must contain from 1 to 63 letters, numbers, or hyphens.</p> </li> <li> <p>First character must be a letter.</p> </li> <li> <p>Can't end with a hyphen or contain two consecutive hyphens.</p> </li> </ul> <p>Example: <code>my-cluster-snapshot2</code> </p>
		 * @param {string} KmsKeyId <p>The Amazon Web Services KMS key identifier for an encrypted DB cluster snapshot. The Amazon Web Services KMS key identifier is the key ARN, key ID, alias ARN, or alias name for the Amazon Web Services KMS key.</p> <p>If you copy an encrypted DB cluster snapshot from your Amazon Web Services account, you can specify a value for <code>KmsKeyId</code> to encrypt the copy with a new KMS key. If you don't specify a value for <code>KmsKeyId</code>, then the copy of the DB cluster snapshot is encrypted with the same KMS key as the source DB cluster snapshot.</p> <p>If you copy an encrypted DB cluster snapshot that is shared from another Amazon Web Services account, then you must specify a value for <code>KmsKeyId</code>.</p> <p>To copy an encrypted DB cluster snapshot to another Amazon Web Services Region, you must set <code>KmsKeyId</code> to the Amazon Web Services KMS key identifier you want to use to encrypt the copy of the DB cluster snapshot in the destination Amazon Web Services Region. KMS keys are specific to the Amazon Web Services Region that they are created in, and you can't use KMS keys from one Amazon Web Services Region in another Amazon Web Services Region.</p> <p>If you copy an unencrypted DB cluster snapshot and specify a value for the <code>KmsKeyId</code> parameter, an error is returned.</p>
		 * @param {string} PreSignedUrl <p>When you are copying a DB cluster snapshot from one Amazon Web Services GovCloud (US) Region to another, the URL that contains a Signature Version 4 signed request for the <code>CopyDBClusterSnapshot</code> API operation in the Amazon Web Services Region that contains the source DB cluster snapshot to copy. Use the <code>PreSignedUrl</code> parameter when copying an encrypted DB cluster snapshot from another Amazon Web Services Region. Don't specify <code>PreSignedUrl</code> when copying an encrypted DB cluster snapshot in the same Amazon Web Services Region.</p> <p>This setting applies only to Amazon Web Services GovCloud (US) Regions. It's ignored in other Amazon Web Services Regions.</p> <p>The presigned URL must be a valid request for the <code>CopyDBClusterSnapshot</code> API operation that can run in the source Amazon Web Services Region that contains the encrypted DB cluster snapshot to copy. The presigned URL request must contain the following parameter values:</p> <ul> <li> <p> <code>KmsKeyId</code> - The KMS key identifier for the KMS key to use to encrypt the copy of the DB cluster snapshot in the destination Amazon Web Services Region. This is the same identifier for both the <code>CopyDBClusterSnapshot</code> operation that is called in the destination Amazon Web Services Region, and the operation contained in the presigned URL.</p> </li> <li> <p> <code>DestinationRegion</code> - The name of the Amazon Web Services Region that the DB cluster snapshot is to be created in.</p> </li> <li> <p> <code>SourceDBClusterSnapshotIdentifier</code> - The DB cluster snapshot identifier for the encrypted DB cluster snapshot to be copied. This identifier must be in the Amazon Resource Name (ARN) format for the source Amazon Web Services Region. For example, if you are copying an encrypted DB cluster snapshot from the us-west-2 Amazon Web Services Region, then your <code>SourceDBClusterSnapshotIdentifier</code> looks like the following example: <code>arn:aws:rds:us-west-2:123456789012:cluster-snapshot:aurora-cluster1-snapshot-20161115</code>.</p> </li> </ul> <p>To learn how to generate a Signature Version 4 signed request, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/sigv4-query-string-auth.html"> Authenticating Requests: Using Query Parameters (Amazon Web Services Signature Version 4)</a> and <a href="https://docs.aws.amazon.com/general/latest/gr/signature-version-4.html"> Signature Version 4 Signing Process</a>.</p> <note> <p>If you are using an Amazon Web Services SDK tool or the CLI, you can specify <code>SourceRegion</code> (or <code>--source-region</code> for the CLI) instead of specifying <code>PreSignedUrl</code> manually. Specifying <code>SourceRegion</code> autogenerates a presigned URL that is a valid request for the operation that can run in the source Amazon Web Services Region.</p> </note><note><p>If you supply a value for this operation's <code>SourceRegion</code> parameter, a pre-signed URL will be calculated on your behalf.</p></note>
		 * @param {boolean} CopyTags A value that indicates whether to copy all tags from the source DB cluster snapshot to the target DB cluster snapshot. By default, tags are not copied.
		 * @param {string} SourceRegion The ID of the region that contains the snapshot to be copied.
		 * @return {void} Success
		 */
		GET_CopyDBClusterSnapshot(SourceDBClusterSnapshotIdentifier: string, TargetDBClusterSnapshotIdentifier: string, KmsKeyId: string | null | undefined, PreSignedUrl: string | null | undefined, CopyTags: boolean | null | undefined, Tags: Array<string> | null | undefined, SourceRegion: string | null | undefined, Action: GET_CopyDBClusterSnapshotAction, Version: GET_AddRoleToDBClusterVersion): Observable<HttpResponse<string>> {
			return this.http.get(this.baseUri + '#Action=CopyDBClusterSnapshot?SourceDBClusterSnapshotIdentifier=' + (SourceDBClusterSnapshotIdentifier == null ? '' : encodeURIComponent(SourceDBClusterSnapshotIdentifier)) + '&TargetDBClusterSnapshotIdentifier=' + (TargetDBClusterSnapshotIdentifier == null ? '' : encodeURIComponent(TargetDBClusterSnapshotIdentifier)) + '&KmsKeyId=' + (KmsKeyId == null ? '' : encodeURIComponent(KmsKeyId)) + '&PreSignedUrl=' + (PreSignedUrl == null ? '' : encodeURIComponent(PreSignedUrl)) + '&CopyTags=' + CopyTags + '&' + Tags?.map(z => `Tags=${encodeURIComponent(z)}`).join('&') + '&SourceRegion=' + (SourceRegion == null ? '' : encodeURIComponent(SourceRegion)) + '&Action=' + Action + '&Version=' + Version, { observe: 'response', responseType: 'text' });
		}

		/**
		 * Copies the specified DB parameter group.
		 * Get #Action=CopyDBParameterGroup
		 * @param {string} SourceDBParameterGroupIdentifier <p>The identifier or ARN for the source DB parameter group. For information about creating an ARN, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Tagging.ARN.html#USER_Tagging.ARN.Constructing"> Constructing an ARN for Amazon RDS</a> in the <i>Amazon RDS User Guide</i>.</p> <p>Constraints:</p> <ul> <li> <p>Must specify a valid DB parameter group.</p> </li> </ul>
		 * @param {string} TargetDBParameterGroupIdentifier <p>The identifier for the copied DB parameter group.</p> <p>Constraints:</p> <ul> <li> <p>Can't be null, empty, or blank</p> </li> <li> <p>Must contain from 1 to 255 letters, numbers, or hyphens</p> </li> <li> <p>First character must be a letter</p> </li> <li> <p>Can't end with a hyphen or contain two consecutive hyphens</p> </li> </ul> <p>Example: <code>my-db-parameter-group</code> </p>
		 * @param {string} TargetDBParameterGroupDescription A description for the copied DB parameter group.
		 * @return {void} Success
		 */
		GET_CopyDBParameterGroup(SourceDBParameterGroupIdentifier: string, TargetDBParameterGroupIdentifier: string, TargetDBParameterGroupDescription: string, Tags: Array<string> | null | undefined, Action: GET_CopyDBParameterGroupAction, Version: GET_AddRoleToDBClusterVersion): Observable<HttpResponse<string>> {
			return this.http.get(this.baseUri + '#Action=CopyDBParameterGroup?SourceDBParameterGroupIdentifier=' + (SourceDBParameterGroupIdentifier == null ? '' : encodeURIComponent(SourceDBParameterGroupIdentifier)) + '&TargetDBParameterGroupIdentifier=' + (TargetDBParameterGroupIdentifier == null ? '' : encodeURIComponent(TargetDBParameterGroupIdentifier)) + '&TargetDBParameterGroupDescription=' + (TargetDBParameterGroupDescription == null ? '' : encodeURIComponent(TargetDBParameterGroupDescription)) + '&' + Tags?.map(z => `Tags=${encodeURIComponent(z)}`).join('&') + '&Action=' + Action + '&Version=' + Version, { observe: 'response', responseType: 'text' });
		}

		/**
		 * <p>Copies the specified DB snapshot. The source DB snapshot must be in the <code>available</code> state.</p> <p>You can copy a snapshot from one Amazon Web Services Region to another. In that case, the Amazon Web Services Region where you call the <code>CopyDBSnapshot</code> operation is the destination Amazon Web Services Region for the DB snapshot copy.</p> <p>This command doesn't apply to RDS Custom.</p> <p>For more information about copying snapshots, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_CopySnapshot.html#USER_CopyDBSnapshot">Copying a DB Snapshot</a> in the <i>Amazon RDS User Guide</i>.</p>
		 * Get #Action=CopyDBSnapshot
		 * @param {string} SourceDBSnapshotIdentifier <p>The identifier for the source DB snapshot.</p> <p>If the source snapshot is in the same Amazon Web Services Region as the copy, specify a valid DB snapshot identifier. For example, you might specify <code>rds:mysql-instance1-snapshot-20130805</code>.</p> <p>If the source snapshot is in a different Amazon Web Services Region than the copy, specify a valid DB snapshot ARN. For example, you might specify <code>arn:aws:rds:us-west-2:123456789012:snapshot:mysql-instance1-snapshot-20130805</code>.</p> <p>If you are copying from a shared manual DB snapshot, this parameter must be the Amazon Resource Name (ARN) of the shared DB snapshot.</p> <p>If you are copying an encrypted snapshot this parameter must be in the ARN format for the source Amazon Web Services Region.</p> <p>Constraints:</p> <ul> <li> <p>Must specify a valid system snapshot in the "available" state.</p> </li> </ul> <p>Example: <code>rds:mydb-2012-04-02-00-01</code> </p> <p>Example: <code>arn:aws:rds:us-west-2:123456789012:snapshot:mysql-instance1-snapshot-20130805</code> </p>
		 * @param {string} TargetDBSnapshotIdentifier <p>The identifier for the copy of the snapshot.</p> <p>Constraints:</p> <ul> <li> <p>Can't be null, empty, or blank</p> </li> <li> <p>Must contain from 1 to 255 letters, numbers, or hyphens</p> </li> <li> <p>First character must be a letter</p> </li> <li> <p>Can't end with a hyphen or contain two consecutive hyphens</p> </li> </ul> <p>Example: <code>my-db-snapshot</code> </p>
		 * @param {string} KmsKeyId <p>The Amazon Web Services KMS key identifier for an encrypted DB snapshot. The Amazon Web Services KMS key identifier is the key ARN, key ID, alias ARN, or alias name for the KMS key.</p> <p>If you copy an encrypted DB snapshot from your Amazon Web Services account, you can specify a value for this parameter to encrypt the copy with a new KMS key. If you don't specify a value for this parameter, then the copy of the DB snapshot is encrypted with the same Amazon Web Services KMS key as the source DB snapshot.</p> <p>If you copy an encrypted DB snapshot that is shared from another Amazon Web Services account, then you must specify a value for this parameter.</p> <p>If you specify this parameter when you copy an unencrypted snapshot, the copy is encrypted.</p> <p>If you copy an encrypted snapshot to a different Amazon Web Services Region, then you must specify an Amazon Web Services KMS key identifier for the destination Amazon Web Services Region. KMS keys are specific to the Amazon Web Services Region that they are created in, and you can't use KMS keys from one Amazon Web Services Region in another Amazon Web Services Region.</p>
		 * @param {boolean} CopyTags A value that indicates whether to copy all tags from the source DB snapshot to the target DB snapshot. By default, tags aren't copied.
		 * @param {string} PreSignedUrl <p>When you are copying a snapshot from one Amazon Web Services GovCloud (US) Region to another, the URL that contains a Signature Version 4 signed request for the <code>CopyDBSnapshot</code> API operation in the source Amazon Web Services Region that contains the source DB snapshot to copy.</p> <p>This setting applies only to Amazon Web Services GovCloud (US) Regions. It's ignored in other Amazon Web Services Regions.</p> <p>You must specify this parameter when you copy an encrypted DB snapshot from another Amazon Web Services Region by using the Amazon RDS API. Don't specify <code>PreSignedUrl</code> when you are copying an encrypted DB snapshot in the same Amazon Web Services Region.</p> <p>The presigned URL must be a valid request for the <code>CopyDBClusterSnapshot</code> API operation that can run in the source Amazon Web Services Region that contains the encrypted DB cluster snapshot to copy. The presigned URL request must contain the following parameter values:</p> <ul> <li> <p> <code>DestinationRegion</code> - The Amazon Web Services Region that the encrypted DB snapshot is copied to. This Amazon Web Services Region is the same one where the <code>CopyDBSnapshot</code> operation is called that contains this presigned URL.</p> <p>For example, if you copy an encrypted DB snapshot from the us-west-2 Amazon Web Services Region to the us-east-1 Amazon Web Services Region, then you call the <code>CopyDBSnapshot</code> operation in the us-east-1 Amazon Web Services Region and provide a presigned URL that contains a call to the <code>CopyDBSnapshot</code> operation in the us-west-2 Amazon Web Services Region. For this example, the <code>DestinationRegion</code> in the presigned URL must be set to the us-east-1 Amazon Web Services Region.</p> </li> <li> <p> <code>KmsKeyId</code> - The KMS key identifier for the KMS key to use to encrypt the copy of the DB snapshot in the destination Amazon Web Services Region. This is the same identifier for both the <code>CopyDBSnapshot</code> operation that is called in the destination Amazon Web Services Region, and the operation contained in the presigned URL.</p> </li> <li> <p> <code>SourceDBSnapshotIdentifier</code> - The DB snapshot identifier for the encrypted snapshot to be copied. This identifier must be in the Amazon Resource Name (ARN) format for the source Amazon Web Services Region. For example, if you are copying an encrypted DB snapshot from the us-west-2 Amazon Web Services Region, then your <code>SourceDBSnapshotIdentifier</code> looks like the following example: <code>arn:aws:rds:us-west-2:123456789012:snapshot:mysql-instance1-snapshot-20161115</code>.</p> </li> </ul> <p>To learn how to generate a Signature Version 4 signed request, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/sigv4-query-string-auth.html">Authenticating Requests: Using Query Parameters (Amazon Web Services Signature Version 4)</a> and <a href="https://docs.aws.amazon.com/general/latest/gr/signature-version-4.html">Signature Version 4 Signing Process</a>.</p> <note> <p>If you are using an Amazon Web Services SDK tool or the CLI, you can specify <code>SourceRegion</code> (or <code>--source-region</code> for the CLI) instead of specifying <code>PreSignedUrl</code> manually. Specifying <code>SourceRegion</code> autogenerates a presigned URL that is a valid request for the operation that can run in the source Amazon Web Services Region.</p> </note><note><p>If you supply a value for this operation's <code>SourceRegion</code> parameter, a pre-signed URL will be calculated on your behalf.</p></note>
		 * @param {string} OptionGroupName <p>The name of an option group to associate with the copy of the snapshot.</p> <p>Specify this option if you are copying a snapshot from one Amazon Web Services Region to another, and your DB instance uses a nondefault option group. If your source DB instance uses Transparent Data Encryption for Oracle or Microsoft SQL Server, you must specify this option when copying across Amazon Web Services Regions. For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_CopySnapshot.html#USER_CopySnapshot.Options">Option group considerations</a> in the <i>Amazon RDS User Guide</i>.</p>
		 * @param {string} TargetCustomAvailabilityZone <p>The external custom Availability Zone (CAZ) identifier for the target CAZ.</p> <p>Example: <code>rds-caz-aiqhTgQv</code>.</p>
		 * @param {boolean} CopyOptionGroup A value that indicates whether to copy the DB option group associated with the source DB snapshot to the target Amazon Web Services account and associate with the target DB snapshot. The associated option group can be copied only with cross-account snapshot copy calls.
		 * @param {string} SourceRegion The ID of the region that contains the snapshot to be copied.
		 * @return {void} Success
		 */
		GET_CopyDBSnapshot(SourceDBSnapshotIdentifier: string, TargetDBSnapshotIdentifier: string, KmsKeyId: string | null | undefined, Tags: Array<string> | null | undefined, CopyTags: boolean | null | undefined, PreSignedUrl: string | null | undefined, OptionGroupName: string | null | undefined, TargetCustomAvailabilityZone: string | null | undefined, CopyOptionGroup: boolean | null | undefined, SourceRegion: string | null | undefined, Action: GET_CopyDBSnapshotAction, Version: GET_AddRoleToDBClusterVersion): Observable<HttpResponse<string>> {
			return this.http.get(this.baseUri + '#Action=CopyDBSnapshot?SourceDBSnapshotIdentifier=' + (SourceDBSnapshotIdentifier == null ? '' : encodeURIComponent(SourceDBSnapshotIdentifier)) + '&TargetDBSnapshotIdentifier=' + (TargetDBSnapshotIdentifier == null ? '' : encodeURIComponent(TargetDBSnapshotIdentifier)) + '&KmsKeyId=' + (KmsKeyId == null ? '' : encodeURIComponent(KmsKeyId)) + '&' + Tags?.map(z => `Tags=${encodeURIComponent(z)}`).join('&') + '&CopyTags=' + CopyTags + '&PreSignedUrl=' + (PreSignedUrl == null ? '' : encodeURIComponent(PreSignedUrl)) + '&OptionGroupName=' + (OptionGroupName == null ? '' : encodeURIComponent(OptionGroupName)) + '&TargetCustomAvailabilityZone=' + (TargetCustomAvailabilityZone == null ? '' : encodeURIComponent(TargetCustomAvailabilityZone)) + '&CopyOptionGroup=' + CopyOptionGroup + '&SourceRegion=' + (SourceRegion == null ? '' : encodeURIComponent(SourceRegion)) + '&Action=' + Action + '&Version=' + Version, { observe: 'response', responseType: 'text' });
		}

		/**
		 * Copies the specified option group.
		 * Get #Action=CopyOptionGroup
		 * @param {string} SourceOptionGroupIdentifier <p>The identifier for the source option group.</p> <p>Constraints:</p> <ul> <li> <p>Must specify a valid option group.</p> </li> </ul>
		 * @param {string} TargetOptionGroupIdentifier <p>The identifier for the copied option group.</p> <p>Constraints:</p> <ul> <li> <p>Can't be null, empty, or blank</p> </li> <li> <p>Must contain from 1 to 255 letters, numbers, or hyphens</p> </li> <li> <p>First character must be a letter</p> </li> <li> <p>Can't end with a hyphen or contain two consecutive hyphens</p> </li> </ul> <p>Example: <code>my-option-group</code> </p>
		 * @param {string} TargetOptionGroupDescription The description for the copied option group.
		 * @return {void} Success
		 */
		GET_CopyOptionGroup(SourceOptionGroupIdentifier: string, TargetOptionGroupIdentifier: string, TargetOptionGroupDescription: string, Tags: Array<string> | null | undefined, Action: GET_CopyOptionGroupAction, Version: GET_AddRoleToDBClusterVersion): Observable<HttpResponse<string>> {
			return this.http.get(this.baseUri + '#Action=CopyOptionGroup?SourceOptionGroupIdentifier=' + (SourceOptionGroupIdentifier == null ? '' : encodeURIComponent(SourceOptionGroupIdentifier)) + '&TargetOptionGroupIdentifier=' + (TargetOptionGroupIdentifier == null ? '' : encodeURIComponent(TargetOptionGroupIdentifier)) + '&TargetOptionGroupDescription=' + (TargetOptionGroupDescription == null ? '' : encodeURIComponent(TargetOptionGroupDescription)) + '&' + Tags?.map(z => `Tags=${encodeURIComponent(z)}`).join('&') + '&Action=' + Action + '&Version=' + Version, { observe: 'response', responseType: 'text' });
		}

		/**
		 * <p>Creates a blue/green deployment.</p> <p>A blue/green deployment creates a staging environment that copies the production environment. In a blue/green deployment, the blue environment is the current production environment. The green environment is the staging environment. The staging environment stays in sync with the current production environment using logical replication.</p> <p>You can make changes to the databases in the green environment without affecting production workloads. For example, you can upgrade the major or minor DB engine version, change database parameters, or make schema changes in the staging environment. You can thoroughly test changes in the green environment. When ready, you can switch over the environments to promote the green environment to be the new production environment. The switchover typically takes under a minute.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/blue-green-deployments.html">Using Amazon RDS Blue/Green Deployments for database updates</a> in the <i>Amazon RDS User Guide</i> and <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/blue-green-deployments.html"> Using Amazon RDS Blue/Green Deployments for database updates</a> in the <i>Amazon Aurora User Guide</i>.</p>
		 * Get #Action=CreateBlueGreenDeployment
		 * @param {string} BlueGreenDeploymentName <p>The name of the blue/green deployment.</p> <p>Constraints:</p> <ul> <li> <p>Can't be the same as an existing blue/green deployment name in the same account and Amazon Web Services Region.</p> </li> </ul>
		 * @param {string} Source <p>The Amazon Resource Name (ARN) of the source production database.</p> <p>Specify the database that you want to clone. The blue/green deployment creates this database in the green environment. You can make updates to the database in the green environment, such as an engine version upgrade. When you are ready, you can switch the database in the green environment to be the production database.</p>
		 * @param {string} TargetEngineVersion <p>The engine version of the database in the green environment.</p> <p>Specify the engine version to upgrade to in the green environment.</p>
		 * @param {string} TargetDBParameterGroupName <p>The DB parameter group associated with the DB instance in the green environment.</p> <p>To test parameter changes, specify a DB parameter group that is different from the one associated with the source DB instance.</p>
		 * @param {string} TargetDBClusterParameterGroupName <p>The DB cluster parameter group associated with the Aurora DB cluster in the green environment.</p> <p>To test parameter changes, specify a DB cluster parameter group that is different from the one associated with the source DB cluster.</p>
		 * @param {Array<string>} Tags Tags to assign to the blue/green deployment.
		 * @return {void} Success
		 */
		GET_CreateBlueGreenDeployment(BlueGreenDeploymentName: string, Source: string, TargetEngineVersion: string | null | undefined, TargetDBParameterGroupName: string | null | undefined, TargetDBClusterParameterGroupName: string | null | undefined, Tags: Array<string> | null | undefined, Action: GET_CreateBlueGreenDeploymentAction, Version: GET_AddRoleToDBClusterVersion): Observable<HttpResponse<string>> {
			return this.http.get(this.baseUri + '#Action=CreateBlueGreenDeployment?BlueGreenDeploymentName=' + (BlueGreenDeploymentName == null ? '' : encodeURIComponent(BlueGreenDeploymentName)) + '&Source=' + (Source == null ? '' : encodeURIComponent(Source)) + '&TargetEngineVersion=' + (TargetEngineVersion == null ? '' : encodeURIComponent(TargetEngineVersion)) + '&TargetDBParameterGroupName=' + (TargetDBParameterGroupName == null ? '' : encodeURIComponent(TargetDBParameterGroupName)) + '&TargetDBClusterParameterGroupName=' + (TargetDBClusterParameterGroupName == null ? '' : encodeURIComponent(TargetDBClusterParameterGroupName)) + '&' + Tags?.map(z => `Tags=${encodeURIComponent(z)}`).join('&') + '&Action=' + Action + '&Version=' + Version, { observe: 'response', responseType: 'text' });
		}

		/**
		 * Creates a custom DB engine version (CEV).
		 * Get #Action=CreateCustomDBEngineVersion
		 * @param {string} Engine The database engine to use for your custom engine version (CEV). The only supported value is <code>custom-oracle-ee</code>.
		 * @param {string} EngineVersion The name of your CEV. The name format is 19.<i>customized_string</i>. For example, a valid CEV name is <code>19.my_cev1</code>. This setting is required for RDS Custom for Oracle, but optional for Amazon RDS. The combination of <code>Engine</code> and <code>EngineVersion</code> is unique per customer per Region.
		 * @param {string} DatabaseInstallationFilesS3BucketName The name of an Amazon S3 bucket that contains database installation files for your CEV. For example, a valid bucket name is <code>my-custom-installation-files</code>.
		 * @param {string} DatabaseInstallationFilesS3Prefix The Amazon S3 directory that contains the database installation files for your CEV. For example, a valid bucket name is <code>123456789012/cev1</code>. If this setting isn't specified, no prefix is assumed.
		 * @param {string} ImageId The ID of the Amazon Machine Image (AMI). For RDS Custom for SQL Server, an AMI ID is required to create a CEV. For RDS Custom for Oracle, the default is the most recent AMI available, but you can specify an AMI ID that was used in a different Oracle CEV. Find the AMIs used by your CEVs by calling the <a href="https://docs.aws.amazon.com/AmazonRDS/latest/APIReference/API_DescribeDBEngineVersions.html">DescribeDBEngineVersions</a> operation.
		 * @param {string} KMSKeyId <p>The Amazon Web Services KMS key identifier for an encrypted CEV. A symmetric encryption KMS key is required for RDS Custom, but optional for Amazon RDS.</p> <p>If you have an existing symmetric encryption KMS key in your account, you can use it with RDS Custom. No further action is necessary. If you don't already have a symmetric encryption KMS key in your account, follow the instructions in <a href="https://docs.aws.amazon.com/kms/latest/developerguide/create-keys.html#create-symmetric-cmk"> Creating a symmetric encryption KMS key</a> in the <i>Amazon Web Services Key Management Service Developer Guide</i>.</p> <p>You can choose the same symmetric encryption key when you create a CEV and a DB instance, or choose different keys.</p>
		 * @param {string} Description An optional description of your CEV.
		 * @param {string} Manifest <p>The CEV manifest, which is a JSON document that describes the installation .zip files stored in Amazon S3. Specify the name/value pairs in a file or a quoted string. RDS Custom applies the patches in the order in which they are listed.</p> <p>The following JSON fields are valid:</p> <dl> <dt>MediaImportTemplateVersion</dt> <dd> <p>Version of the CEV manifest. The date is in the format <code>YYYY-MM-DD</code>.</p> </dd> <dt>databaseInstallationFileNames</dt> <dd> <p>Ordered list of installation files for the CEV.</p> </dd> <dt>opatchFileNames</dt> <dd> <p>Ordered list of OPatch installers used for the Oracle DB engine.</p> </dd> <dt>psuRuPatchFileNames</dt> <dd> <p>The PSU and RU patches for this CEV.</p> </dd> <dt>OtherPatchFileNames</dt> <dd> <p>The patches that are not in the list of PSU and RU patches. Amazon RDS applies these patches after applying the PSU and RU patches.</p> </dd> </dl> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/custom-cev.html#custom-cev.preparing.manifest"> Creating the CEV manifest</a> in the <i>Amazon RDS User Guide</i>.</p>
		 * @return {void} Success
		 */
		GET_CreateCustomDBEngineVersion(Engine: string, EngineVersion: string, DatabaseInstallationFilesS3BucketName: string | null | undefined, DatabaseInstallationFilesS3Prefix: string | null | undefined, ImageId: string | null | undefined, KMSKeyId: string | null | undefined, Description: string | null | undefined, Manifest: string | null | undefined, Tags: Array<string> | null | undefined, Action: GET_CreateCustomDBEngineVersionAction, Version: GET_AddRoleToDBClusterVersion): Observable<HttpResponse<string>> {
			return this.http.get(this.baseUri + '#Action=CreateCustomDBEngineVersion?Engine=' + (Engine == null ? '' : encodeURIComponent(Engine)) + '&EngineVersion=' + (EngineVersion == null ? '' : encodeURIComponent(EngineVersion)) + '&DatabaseInstallationFilesS3BucketName=' + (DatabaseInstallationFilesS3BucketName == null ? '' : encodeURIComponent(DatabaseInstallationFilesS3BucketName)) + '&DatabaseInstallationFilesS3Prefix=' + (DatabaseInstallationFilesS3Prefix == null ? '' : encodeURIComponent(DatabaseInstallationFilesS3Prefix)) + '&ImageId=' + (ImageId == null ? '' : encodeURIComponent(ImageId)) + '&KMSKeyId=' + (KMSKeyId == null ? '' : encodeURIComponent(KMSKeyId)) + '&Description=' + (Description == null ? '' : encodeURIComponent(Description)) + '&Manifest=' + (Manifest == null ? '' : encodeURIComponent(Manifest)) + '&' + Tags?.map(z => `Tags=${encodeURIComponent(z)}`).join('&') + '&Action=' + Action + '&Version=' + Version, { observe: 'response', responseType: 'text' });
		}

		/**
		 * <p>Creates a new Amazon Aurora DB cluster or Multi-AZ DB cluster.</p> <p>If you create an Aurora DB cluster, the request creates an empty cluster. You must explicitly create the writer instance for your DB cluster using the <a href="https://docs.aws.amazon.com/AmazonRDS/latest/APIReference/API_CreateDBInstance.html">CreateDBInstance</a> operation. If you create a Multi-AZ DB cluster, the request creates a writer and two reader DB instances for you, each in a different Availability Zone.</p> <p>You can use the <code>ReplicationSourceIdentifier</code> parameter to create an Amazon Aurora DB cluster as a read replica of another DB cluster or Amazon RDS for MySQL or PostgreSQL DB instance. For more information about Amazon Aurora, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/CHAP_AuroraOverview.html">What is Amazon Aurora?</a> in the <i>Amazon Aurora User Guide</i>.</p> <p>You can also use the <code>ReplicationSourceIdentifier</code> parameter to create a Multi-AZ DB cluster read replica with an RDS for MySQL or PostgreSQL DB instance as the source. For more information about Multi-AZ DB clusters, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/multi-az-db-clusters-concepts.html">Multi-AZ DB cluster deployments</a> in the <i>Amazon RDS User Guide</i>.</p>
		 * Get #Action=CreateDBCluster
		 * @param {Array<string>} AvailabilityZones <p>A list of Availability Zones (AZs) where DB instances in the DB cluster can be created.</p> <p>For information on Amazon Web Services Regions and Availability Zones, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/Concepts.RegionsAndAvailabilityZones.html">Choosing the Regions and Availability Zones</a> in the <i>Amazon Aurora User Guide</i>.</p> <p>Valid for Cluster Type: Aurora DB clusters only</p>
		 * @param {number} BackupRetentionPeriod <p>The number of days for which automated backups are retained.</p> <p>Valid for Cluster Type: Aurora DB clusters and Multi-AZ DB clusters</p> <p>Default: <code>1</code> </p> <p>Constraints:</p> <ul> <li> <p>Must be a value from 1 to 35.</p> </li> </ul>
		 * @param {string} CharacterSetName <p>The name of the character set (<code>CharacterSet</code>) to associate the DB cluster with.</p> <p>Valid for Cluster Type: Aurora DB clusters only</p>
		 * @param {string} DatabaseName <p>The name for your database of up to 64 alphanumeric characters. If you don't provide a name, Amazon RDS doesn't create a database in the DB cluster you are creating.</p> <p>Valid for Cluster Type: Aurora DB clusters and Multi-AZ DB clusters</p>
		 * @param {string} DBClusterIdentifier <p>The identifier for this DB cluster. This parameter is stored as a lowercase string.</p> <p>Valid for Cluster Type: Aurora DB clusters and Multi-AZ DB clusters</p> <p>Constraints:</p> <ul> <li> <p>Must contain from 1 to 63 letters, numbers, or hyphens.</p> </li> <li> <p>First character must be a letter.</p> </li> <li> <p>Can't end with a hyphen or contain two consecutive hyphens.</p> </li> </ul> <p>Example: <code>my-cluster1</code> </p>
		 * @param {string} DBClusterParameterGroupName <p>The name of the DB cluster parameter group to associate with this DB cluster. If you don't specify a value, then the default DB cluster parameter group for the specified DB engine and version is used.</p> <p>Valid for Cluster Type: Aurora DB clusters and Multi-AZ DB clusters</p> <p>Constraints:</p> <ul> <li> <p>If supplied, must match the name of an existing DB cluster parameter group.</p> </li> </ul>
		 * @param {Array<string>} VpcSecurityGroupIds <p>A list of EC2 VPC security groups to associate with this DB cluster.</p> <p>Valid for Cluster Type: Aurora DB clusters and Multi-AZ DB clusters</p>
		 * @param {string} DBSubnetGroupName <p>A DB subnet group to associate with this DB cluster.</p> <p>This setting is required to create a Multi-AZ DB cluster.</p> <p>Valid for Cluster Type: Aurora DB clusters and Multi-AZ DB clusters</p> <p>Constraints:</p> <ul> <li> <p>Must match the name of an existing DB subnet group.</p> </li> <li> <p>Must not be <code>default</code>.</p> </li> </ul> <p>Example: <code>mydbsubnetgroup</code> </p>
		 * @param {string} Engine <p>The database engine to use for this DB cluster.</p> <p>Valid for Cluster Type: Aurora DB clusters and Multi-AZ DB clusters</p> <p>Valid Values: <code>aurora-mysql | aurora-postgresql | mysql | postgres</code> </p>
		 * @param {string} EngineVersion <p>The version number of the database engine to use.</p> <p>To list all of the available engine versions for Aurora MySQL version 2 (5.7-compatible) and version 3 (MySQL 8.0-compatible), use the following command:</p> <p> <code>aws rds describe-db-engine-versions --engine aurora-mysql --query "DBEngineVersions[].EngineVersion"</code> </p> <p>You can supply either <code>5.7</code> or <code>8.0</code> to use the default engine version for Aurora MySQL version 2 or version 3, respectively.</p> <p>To list all of the available engine versions for Aurora PostgreSQL, use the following command:</p> <p> <code>aws rds describe-db-engine-versions --engine aurora-postgresql --query "DBEngineVersions[].EngineVersion"</code> </p> <p>To list all of the available engine versions for RDS for MySQL, use the following command:</p> <p> <code>aws rds describe-db-engine-versions --engine mysql --query "DBEngineVersions[].EngineVersion"</code> </p> <p>To list all of the available engine versions for RDS for PostgreSQL, use the following command:</p> <p> <code>aws rds describe-db-engine-versions --engine postgres --query "DBEngineVersions[].EngineVersion"</code> </p> <p>For information about a specific engine, see the following topics:</p> <ul> <li> <p>Aurora MySQL - see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/AuroraMySQL.Updates.html">Database engine updates for Amazon Aurora MySQL</a> in the <i>Amazon Aurora User Guide</i>.</p> </li> <li> <p>Aurora PostgreSQL - see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/AuroraPostgreSQL.Updates.20180305.html">Amazon Aurora PostgreSQL releases and engine versions</a> in the <i>Amazon Aurora User Guide</i>.</p> </li> <li> <p>RDS for MySQL - see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_MySQL.html#MySQL.Concepts.VersionMgmt">Amazon RDS for MySQL</a> in the <i>Amazon RDS User Guide</i>.</p> </li> <li> <p>RDS for PostgreSQL - see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_PostgreSQL.html#PostgreSQL.Concepts">Amazon RDS for PostgreSQL</a> in the <i>Amazon RDS User Guide</i>.</p> </li> </ul> <p>Valid for Cluster Type: Aurora DB clusters and Multi-AZ DB clusters</p>
		 * @param {number} Port <p>The port number on which the instances in the DB cluster accept connections.</p> <p>Valid for Cluster Type: Aurora DB clusters and Multi-AZ DB clusters</p> <p>Valid Values: <code>1150-65535</code> </p> <p>Default:</p> <ul> <li> <p>RDS for MySQL and Aurora MySQL - <code>3306</code> </p> </li> <li> <p>RDS for PostgreSQL and Aurora PostgreSQL - <code>5432</code> </p> </li> </ul>
		 * @param {string} MasterUsername <p>The name of the master user for the DB cluster.</p> <p>Valid for Cluster Type: Aurora DB clusters and Multi-AZ DB clusters</p> <p>Constraints:</p> <ul> <li> <p>Must be 1 to 16 letters or numbers.</p> </li> <li> <p>First character must be a letter.</p> </li> <li> <p>Can't be a reserved word for the chosen database engine.</p> </li> </ul>
		 * @param {string} MasterUserPassword <p>The password for the master database user.</p> <p>Valid for Cluster Type: Aurora DB clusters and Multi-AZ DB clusters</p> <p>Constraints:</p> <ul> <li> <p>Must contain from 8 to 41 characters.</p> </li> <li> <p>Can contain any printable ASCII character except "/", """, or "@".</p> </li> <li> <p>Can't be specified if <code>ManageMasterUserPassword</code> is turned on.</p> </li> </ul>
		 * @param {string} OptionGroupName <p>The option group to associate the DB cluster with.</p> <p>DB clusters are associated with a default option group that can't be modified.</p>
		 * @param {string} PreferredBackupWindow <p>The daily time range during which automated backups are created if automated backups are enabled using the <code>BackupRetentionPeriod</code> parameter.</p> <p>Valid for Cluster Type: Aurora DB clusters and Multi-AZ DB clusters</p> <p>The default is a 30-minute window selected at random from an 8-hour block of time for each Amazon Web Services Region. To view the time blocks available, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/Aurora.Managing.Backups.html#Aurora.Managing.Backups.BackupWindow"> Backup window</a> in the <i>Amazon Aurora User Guide</i>.</p> <p>Constraints:</p> <ul> <li> <p>Must be in the format <code>hh24:mi-hh24:mi</code>.</p> </li> <li> <p>Must be in Universal Coordinated Time (UTC).</p> </li> <li> <p>Must not conflict with the preferred maintenance window.</p> </li> <li> <p>Must be at least 30 minutes.</p> </li> </ul>
		 * @param {string} PreferredMaintenanceWindow <p>The weekly time range during which system maintenance can occur.</p> <p>Valid for Cluster Type: Aurora DB clusters and Multi-AZ DB clusters</p> <p>The default is a 30-minute window selected at random from an 8-hour block of time for each Amazon Web Services Region, occurring on a random day of the week. To see the time blocks available, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/USER_UpgradeDBInstance.Maintenance.html#AdjustingTheMaintenanceWindow.Aurora"> Adjusting the Preferred DB Cluster Maintenance Window</a> in the <i>Amazon Aurora User Guide</i>.</p> <p>Constraints:</p> <ul> <li> <p>Must be in the format <code>ddd:hh24:mi-ddd:hh24:mi</code>.</p> </li> <li> <p>Days must be one of <code>Mon | Tue | Wed | Thu | Fri | Sat | Sun</code>.</p> </li> <li> <p>Must be in Universal Coordinated Time (UTC).</p> </li> <li> <p>Must be at least 30 minutes.</p> </li> </ul>
		 * @param {string} ReplicationSourceIdentifier <p>The Amazon Resource Name (ARN) of the source DB instance or DB cluster if this DB cluster is created as a read replica.</p> <p>Valid for Cluster Type: Aurora DB clusters and Multi-AZ DB clusters</p>
		 * @param {Array<string>} Tags <p>Tags to assign to the DB cluster.</p> <p>Valid for Cluster Type: Aurora DB clusters and Multi-AZ DB clusters</p>
		 * @param {boolean} StorageEncrypted <p>Specifies whether the DB cluster is encrypted.</p> <p>Valid for Cluster Type: Aurora DB clusters and Multi-AZ DB clusters</p>
		 * @param {string} KmsKeyId <p>The Amazon Web Services KMS key identifier for an encrypted DB cluster.</p> <p>The Amazon Web Services KMS key identifier is the key ARN, key ID, alias ARN, or alias name for the KMS key. To use a KMS key in a different Amazon Web Services account, specify the key ARN or alias ARN.</p> <p>When a KMS key isn't specified in <code>KmsKeyId</code>:</p> <ul> <li> <p>If <code>ReplicationSourceIdentifier</code> identifies an encrypted source, then Amazon RDS uses the KMS key used to encrypt the source. Otherwise, Amazon RDS uses your default KMS key.</p> </li> <li> <p>If the <code>StorageEncrypted</code> parameter is enabled and <code>ReplicationSourceIdentifier</code> isn't specified, then Amazon RDS uses your default KMS key.</p> </li> </ul> <p>There is a default KMS key for your Amazon Web Services account. Your Amazon Web Services account has a different default KMS key for each Amazon Web Services Region.</p> <p>If you create a read replica of an encrypted DB cluster in another Amazon Web Services Region, make sure to set <code>KmsKeyId</code> to a KMS key identifier that is valid in the destination Amazon Web Services Region. This KMS key is used to encrypt the read replica in that Amazon Web Services Region.</p> <p>Valid for Cluster Type: Aurora DB clusters and Multi-AZ DB clusters</p>
		 * @param {string} PreSignedUrl <p>When you are replicating a DB cluster from one Amazon Web Services GovCloud (US) Region to another, an URL that contains a Signature Version 4 signed request for the <code>CreateDBCluster</code> operation to be called in the source Amazon Web Services Region where the DB cluster is replicated from. Specify <code>PreSignedUrl</code> only when you are performing cross-Region replication from an encrypted DB cluster.</p> <p>The presigned URL must be a valid request for the <code>CreateDBCluster</code> API operation that can run in the source Amazon Web Services Region that contains the encrypted DB cluster to copy.</p> <p>The presigned URL request must contain the following parameter values:</p> <ul> <li> <p> <code>KmsKeyId</code> - The KMS key identifier for the KMS key to use to encrypt the copy of the DB cluster in the destination Amazon Web Services Region. This should refer to the same KMS key for both the <code>CreateDBCluster</code> operation that is called in the destination Amazon Web Services Region, and the operation contained in the presigned URL.</p> </li> <li> <p> <code>DestinationRegion</code> - The name of the Amazon Web Services Region that Aurora read replica will be created in.</p> </li> <li> <p> <code>ReplicationSourceIdentifier</code> - The DB cluster identifier for the encrypted DB cluster to be copied. This identifier must be in the Amazon Resource Name (ARN) format for the source Amazon Web Services Region. For example, if you are copying an encrypted DB cluster from the us-west-2 Amazon Web Services Region, then your <code>ReplicationSourceIdentifier</code> would look like Example: <code>arn:aws:rds:us-west-2:123456789012:cluster:aurora-cluster1</code>.</p> </li> </ul> <p>To learn how to generate a Signature Version 4 signed request, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/sigv4-query-string-auth.html"> Authenticating Requests: Using Query Parameters (Amazon Web Services Signature Version 4)</a> and <a href="https://docs.aws.amazon.com/general/latest/gr/signature-version-4.html"> Signature Version 4 Signing Process</a>.</p> <note> <p>If you are using an Amazon Web Services SDK tool or the CLI, you can specify <code>SourceRegion</code> (or <code>--source-region</code> for the CLI) instead of specifying <code>PreSignedUrl</code> manually. Specifying <code>SourceRegion</code> autogenerates a presigned URL that is a valid request for the operation that can run in the source Amazon Web Services Region.</p> </note> <p>Valid for Cluster Type: Aurora DB clusters only</p><note><p>If you supply a value for this operation's <code>SourceRegion</code> parameter, a pre-signed URL will be calculated on your behalf.</p></note>
		 * @param {boolean} EnableIAMDatabaseAuthentication <p>Specifies whether to enable mapping of Amazon Web Services Identity and Access Management (IAM) accounts to database accounts. By default, mapping isn't enabled.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/UsingWithRDS.IAMDBAuth.html"> IAM Database Authentication</a> in the <i>Amazon Aurora User Guide</i>.</p> <p>Valid for Cluster Type: Aurora DB clusters only</p>
		 * @param {number} BacktrackWindow <p>The target backtrack window, in seconds. To disable backtracking, set this value to <code>0</code>.</p> <p>Valid for Cluster Type: Aurora MySQL DB clusters only</p> <p>Default: <code>0</code> </p> <p>Constraints:</p> <ul> <li> <p>If specified, this value must be set to a number from 0 to 259,200 (72 hours).</p> </li> </ul>
		 * @param {Array<string>} EnableCloudwatchLogsExports <p>The list of log types that need to be enabled for exporting to CloudWatch Logs.</p> <p>Valid for Cluster Type: Aurora DB clusters and Multi-AZ DB clusters</p> <p>The following values are valid for each DB engine:</p> <ul> <li> <p>Aurora MySQL - <code>audit | error | general | slowquery</code> </p> </li> <li> <p>Aurora PostgreSQL - <code>postgresql</code> </p> </li> <li> <p>RDS for MySQL - <code>error | general | slowquery</code> </p> </li> <li> <p>RDS for PostgreSQL - <code>postgresql | upgrade</code> </p> </li> </ul> <p>For more information about exporting CloudWatch Logs for Amazon RDS, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_LogAccess.html#USER_LogAccess.Procedural.UploadtoCloudWatch">Publishing Database Logs to Amazon CloudWatch Logs</a> in the <i>Amazon RDS User Guide</i>.</p> <p>For more information about exporting CloudWatch Logs for Amazon Aurora, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/USER_LogAccess.html#USER_LogAccess.Procedural.UploadtoCloudWatch">Publishing Database Logs to Amazon CloudWatch Logs</a> in the <i>Amazon Aurora User Guide</i>.</p>
		 * @param {string} EngineMode <p>The DB engine mode of the DB cluster, either <code>provisioned</code> or <code>serverless</code>.</p> <p>The <code>serverless</code> engine mode only applies for Aurora Serverless v1 DB clusters.</p> <p>For information about limitations and requirements for Serverless DB clusters, see the following sections in the <i>Amazon Aurora User Guide</i>:</p> <ul> <li> <p> <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-serverless.html#aurora-serverless.limitations">Limitations of Aurora Serverless v1</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-serverless-v2.requirements.html">Requirements for Aurora Serverless v2</a> </p> </li> </ul> <p>Valid for Cluster Type: Aurora DB clusters only</p>
		 * @param {GET_CreateDBClusterScalingConfiguration} ScalingConfiguration <p>For DB clusters in <code>serverless</code> DB engine mode, the scaling properties of the DB cluster.</p> <p>Valid for Cluster Type: Aurora DB clusters only</p>
		 * @param {boolean} DeletionProtection <p>Specifies whether the DB cluster has deletion protection enabled. The database can't be deleted when deletion protection is enabled. By default, deletion protection isn't enabled.</p> <p>Valid for Cluster Type: Aurora DB clusters and Multi-AZ DB clusters</p>
		 * @param {string} GlobalClusterIdentifier <p>The global cluster ID of an Aurora cluster that becomes the primary cluster in the new global database cluster.</p> <p>Valid for Cluster Type: Aurora DB clusters only</p>
		 * @param {boolean} EnableHttpEndpoint <p>Specifies whether to enable the HTTP endpoint for an Aurora Serverless v1 DB cluster. By default, the HTTP endpoint is disabled.</p> <p>When enabled, the HTTP endpoint provides a connectionless web service API for running SQL queries on the Aurora Serverless v1 DB cluster. You can also query your database from inside the RDS console with the query editor.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/data-api.html">Using the Data API for Aurora Serverless v1</a> in the <i>Amazon Aurora User Guide</i>.</p> <p>Valid for Cluster Type: Aurora DB clusters only</p>
		 * @param {boolean} CopyTagsToSnapshot <p>Specifies whether to copy all tags from the DB cluster to snapshots of the DB cluster. The default is not to copy them.</p> <p>Valid for Cluster Type: Aurora DB clusters and Multi-AZ DB clusters</p>
		 * @param {string} Domain <p>The Active Directory directory ID to create the DB cluster in.</p> <p>For Amazon Aurora DB clusters, Amazon RDS can use Kerberos authentication to authenticate users that connect to the DB cluster.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/kerberos-authentication.html">Kerberos authentication</a> in the <i>Amazon Aurora User Guide</i>.</p> <p>Valid for Cluster Type: Aurora DB clusters only</p>
		 * @param {string} DomainIAMRoleName <p>The name of the IAM role to use when making API calls to the Directory Service.</p> <p>Valid for Cluster Type: Aurora DB clusters only</p>
		 * @param {boolean} EnableGlobalWriteForwarding <p>Specifies whether to enable this DB cluster to forward write operations to the primary cluster of a global cluster (Aurora global database). By default, write operations are not allowed on Aurora DB clusters that are secondary clusters in an Aurora global database.</p> <p>You can set this value only on Aurora DB clusters that are members of an Aurora global database. With this parameter enabled, a secondary cluster can forward writes to the current primary cluster, and the resulting changes are replicated back to this cluster. For the primary DB cluster of an Aurora global database, this value is used immediately if the primary is demoted by a global cluster API operation, but it does nothing until then.</p> <p>Valid for Cluster Type: Aurora DB clusters only</p>
		 * @param {string} DBClusterInstanceClass <p>The compute and memory capacity of each DB instance in the Multi-AZ DB cluster, for example <code>db.m6gd.xlarge</code>. Not all DB instance classes are available in all Amazon Web Services Regions, or for all database engines.</p> <p>For the full list of DB instance classes and availability for your engine, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.DBInstanceClass.html">DB instance class</a> in the <i>Amazon RDS User Guide</i>.</p> <p>This setting is required to create a Multi-AZ DB cluster.</p> <p>Valid for Cluster Type: Multi-AZ DB clusters only</p>
		 * @param {number} AllocatedStorage <p>The amount of storage in gibibytes (GiB) to allocate to each DB instance in the Multi-AZ DB cluster.</p> <p>Valid for Cluster Type: Multi-AZ DB clusters only</p> <p>This setting is required to create a Multi-AZ DB cluster.</p>
		 * @param {string} StorageType <p>The storage type to associate with the DB cluster.</p> <p>For information on storage types for Aurora DB clusters, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/Aurora.Overview.StorageReliability.html#aurora-storage-type">Storage configurations for Amazon Aurora DB clusters</a>. For information on storage types for Multi-AZ DB clusters, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/create-multi-az-db-cluster.html#create-multi-az-db-cluster-settings">Settings for creating Multi-AZ DB clusters</a>.</p> <p>This setting is required to create a Multi-AZ DB cluster.</p> <p>When specified for a Multi-AZ DB cluster, a value for the <code>Iops</code> parameter is required.</p> <p>Valid for Cluster Type: Aurora DB clusters and Multi-AZ DB clusters</p> <p>Valid Values:</p> <ul> <li> <p>Aurora DB clusters - <code>aurora | aurora-iopt1</code> </p> </li> <li> <p>Multi-AZ DB clusters - <code>io1</code> </p> </li> </ul> <p>Default:</p> <ul> <li> <p>Aurora DB clusters - <code>aurora</code> </p> </li> <li> <p>Multi-AZ DB clusters - <code>io1</code> </p> </li> </ul>
		 * @param {number} Iops <p>The amount of Provisioned IOPS (input/output operations per second) to be initially allocated for each DB instance in the Multi-AZ DB cluster.</p> <p>For information about valid IOPS values, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_Storage.html#USER_PIOPS">Provisioned IOPS storage</a> in the <i>Amazon RDS User Guide</i>.</p> <p>This setting is required to create a Multi-AZ DB cluster.</p> <p>Valid for Cluster Type: Multi-AZ DB clusters only</p> <p>Constraints:</p> <ul> <li> <p>Must be a multiple between .5 and 50 of the storage amount for the DB cluster.</p> </li> </ul>
		 * @param {boolean} PubliclyAccessible <p>Specifies whether the DB cluster is publicly accessible.</p> <p>When the DB cluster is publicly accessible, its Domain Name System (DNS) endpoint resolves to the private IP address from within the DB cluster's virtual private cloud (VPC). It resolves to the public IP address from outside of the DB cluster's VPC. Access to the DB cluster is ultimately controlled by the security group it uses. That public access isn't permitted if the security group assigned to the DB cluster doesn't permit it.</p> <p>When the DB cluster isn't publicly accessible, it is an internal DB cluster with a DNS name that resolves to a private IP address.</p> <p>Valid for Cluster Type: Multi-AZ DB clusters only</p> <p>Default: The default behavior varies depending on whether <code>DBSubnetGroupName</code> is specified.</p> <p>If <code>DBSubnetGroupName</code> isn't specified, and <code>PubliclyAccessible</code> isn't specified, the following applies:</p> <ul> <li> <p>If the default VPC in the target Region doesn’t have an internet gateway attached to it, the DB cluster is private.</p> </li> <li> <p>If the default VPC in the target Region has an internet gateway attached to it, the DB cluster is public.</p> </li> </ul> <p>If <code>DBSubnetGroupName</code> is specified, and <code>PubliclyAccessible</code> isn't specified, the following applies:</p> <ul> <li> <p>If the subnets are part of a VPC that doesn’t have an internet gateway attached to it, the DB cluster is private.</p> </li> <li> <p>If the subnets are part of a VPC that has an internet gateway attached to it, the DB cluster is public.</p> </li> </ul>
		 * @param {boolean} AutoMinorVersionUpgrade <p>Specifies whether minor engine upgrades are applied automatically to the DB cluster during the maintenance window. By default, minor engine upgrades are applied automatically.</p> <p>Valid for Cluster Type: Multi-AZ DB clusters only</p>
		 * @param {number} MonitoringInterval <p>The interval, in seconds, between points when Enhanced Monitoring metrics are collected for the DB cluster. To turn off collecting Enhanced Monitoring metrics, specify <code>0</code>.</p> <p>If <code>MonitoringRoleArn</code> is specified, also set <code>MonitoringInterval</code> to a value other than <code>0</code>.</p> <p>Valid for Cluster Type: Multi-AZ DB clusters only</p> <p>Valid Values: <code>0 | 1 | 5 | 10 | 15 | 30 | 60</code> </p> <p>Default: <code>0</code> </p>
		 * @param {string} MonitoringRoleArn <p>The Amazon Resource Name (ARN) for the IAM role that permits RDS to send Enhanced Monitoring metrics to Amazon CloudWatch Logs. An example is <code>arn:aws:iam:123456789012:role/emaccess</code>. For information on creating a monitoring role, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Monitoring.OS.html#USER_Monitoring.OS.Enabling">Setting up and enabling Enhanced Monitoring</a> in the <i>Amazon RDS User Guide</i>.</p> <p>If <code>MonitoringInterval</code> is set to a value other than <code>0</code>, supply a <code>MonitoringRoleArn</code> value.</p> <p>Valid for Cluster Type: Multi-AZ DB clusters only</p>
		 * @param {boolean} EnablePerformanceInsights <p>Specifies whether to turn on Performance Insights for the DB cluster.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_PerfInsights.html"> Using Amazon Performance Insights</a> in the <i>Amazon RDS User Guide</i>.</p> <p>Valid for Cluster Type: Multi-AZ DB clusters only</p>
		 * @param {string} PerformanceInsightsKMSKeyId <p>The Amazon Web Services KMS key identifier for encryption of Performance Insights data.</p> <p>The Amazon Web Services KMS key identifier is the key ARN, key ID, alias ARN, or alias name for the KMS key.</p> <p>If you don't specify a value for <code>PerformanceInsightsKMSKeyId</code>, then Amazon RDS uses your default KMS key. There is a default KMS key for your Amazon Web Services account. Your Amazon Web Services account has a different default KMS key for each Amazon Web Services Region.</p> <p>Valid for Cluster Type: Multi-AZ DB clusters only</p>
		 * @param {number} PerformanceInsightsRetentionPeriod <p>The number of days to retain Performance Insights data.</p> <p>Valid for Cluster Type: Multi-AZ DB clusters only</p> <p>Valid Values:</p> <ul> <li> <p> <code>7</code> </p> </li> <li> <p> <i>month</i> * 31, where <i>month</i> is a number of months from 1-23. Examples: <code>93</code> (3 months * 31), <code>341</code> (11 months * 31), <code>589</code> (19 months * 31)</p> </li> <li> <p> <code>731</code> </p> </li> </ul> <p>Default: <code>7</code> days</p> <p>If you specify a retention period that isn't valid, such as <code>94</code>, Amazon RDS issues an error.</p>
		 * @param {string} NetworkType <p>The network type of the DB cluster.</p> <p>The network type is determined by the <code>DBSubnetGroup</code> specified for the DB cluster. A <code>DBSubnetGroup</code> can support only the IPv4 protocol or the IPv4 and the IPv6 protocols (<code>DUAL</code>).</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/USER_VPC.WorkingWithRDSInstanceinaVPC.html"> Working with a DB instance in a VPC</a> in the <i>Amazon Aurora User Guide.</i> </p> <p>Valid for Cluster Type: Aurora DB clusters only</p> <p>Valid Values: <code>IPV4 | DUAL</code> </p>
		 * @param {string} DBSystemId Reserved for future use.
		 * @param {boolean} ManageMasterUserPassword <p>Specifies whether to manage the master user password with Amazon Web Services Secrets Manager.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/rds-secrets-manager.html">Password management with Amazon Web Services Secrets Manager</a> in the <i>Amazon RDS User Guide</i> and <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/rds-secrets-manager.html">Password management with Amazon Web Services Secrets Manager</a> in the <i>Amazon Aurora User Guide.</i> </p> <p>Valid for Cluster Type: Aurora DB clusters and Multi-AZ DB clusters</p> <p>Constraints:</p> <ul> <li> <p>Can't manage the master user password with Amazon Web Services Secrets Manager if <code>MasterUserPassword</code> is specified.</p> </li> </ul>
		 * @param {string} MasterUserSecretKmsKeyId <p>The Amazon Web Services KMS key identifier to encrypt a secret that is automatically generated and managed in Amazon Web Services Secrets Manager.</p> <p>This setting is valid only if the master user password is managed by RDS in Amazon Web Services Secrets Manager for the DB cluster.</p> <p>The Amazon Web Services KMS key identifier is the key ARN, key ID, alias ARN, or alias name for the KMS key. To use a KMS key in a different Amazon Web Services account, specify the key ARN or alias ARN.</p> <p>If you don't specify <code>MasterUserSecretKmsKeyId</code>, then the <code>aws/secretsmanager</code> KMS key is used to encrypt the secret. If the secret is in a different Amazon Web Services account, then you can't use the <code>aws/secretsmanager</code> KMS key to encrypt the secret, and you must use a customer managed KMS key.</p> <p>There is a default KMS key for your Amazon Web Services account. Your Amazon Web Services account has a different default KMS key for each Amazon Web Services Region.</p> <p>Valid for Cluster Type: Aurora DB clusters and Multi-AZ DB clusters</p>
		 * @param {boolean} EnableLocalWriteForwarding <p>Specifies whether read replicas can forward write operations to the writer DB instance in the DB cluster. By default, write operations aren't allowed on reader DB instances.</p> <p>Valid for: Aurora DB clusters only</p>
		 * @param {string} SourceRegion The ID of the region that contains the source for the read replica.
		 * @return {void} Success
		 */
		GET_CreateDBCluster(AvailabilityZones: Array<string> | null | undefined, BackupRetentionPeriod: number | null | undefined, CharacterSetName: string | null | undefined, DatabaseName: string | null | undefined, DBClusterIdentifier: string, DBClusterParameterGroupName: string | null | undefined, VpcSecurityGroupIds: Array<string> | null | undefined, DBSubnetGroupName: string | null | undefined, Engine: string, EngineVersion: string | null | undefined, Port: number | null | undefined, MasterUsername: string | null | undefined, MasterUserPassword: string | null | undefined, OptionGroupName: string | null | undefined, PreferredBackupWindow: string | null | undefined, PreferredMaintenanceWindow: string | null | undefined, ReplicationSourceIdentifier: string | null | undefined, Tags: Array<string> | null | undefined, StorageEncrypted: boolean | null | undefined, KmsKeyId: string | null | undefined, PreSignedUrl: string | null | undefined, EnableIAMDatabaseAuthentication: boolean | null | undefined, BacktrackWindow: number | null | undefined, EnableCloudwatchLogsExports: Array<string> | null | undefined, EngineMode: string | null | undefined, ScalingConfiguration: GET_CreateDBClusterScalingConfiguration | null | undefined, DeletionProtection: boolean | null | undefined, GlobalClusterIdentifier: string | null | undefined, EnableHttpEndpoint: boolean | null | undefined, CopyTagsToSnapshot: boolean | null | undefined, Domain: string | null | undefined, DomainIAMRoleName: string | null | undefined, EnableGlobalWriteForwarding: boolean | null | undefined, DBClusterInstanceClass: string | null | undefined, AllocatedStorage: number | null | undefined, StorageType: string | null | undefined, Iops: number | null | undefined, PubliclyAccessible: boolean | null | undefined, AutoMinorVersionUpgrade: boolean | null | undefined, MonitoringInterval: number | null | undefined, MonitoringRoleArn: string | null | undefined, EnablePerformanceInsights: boolean | null | undefined, PerformanceInsightsKMSKeyId: string | null | undefined, PerformanceInsightsRetentionPeriod: number | null | undefined, ServerlessV2ScalingConfiguration: GET_CreateDBClusterServerlessV2ScalingConfiguration | null | undefined, NetworkType: string | null | undefined, DBSystemId: string | null | undefined, ManageMasterUserPassword: boolean | null | undefined, MasterUserSecretKmsKeyId: string | null | undefined, EnableLocalWriteForwarding: boolean | null | undefined, SourceRegion: string | null | undefined, Action: GET_CreateDBClusterAction, Version: GET_AddRoleToDBClusterVersion): Observable<HttpResponse<string>> {
			return this.http.get(this.baseUri + '#Action=CreateDBCluster?' + AvailabilityZones?.map(z => `AvailabilityZones=${encodeURIComponent(z)}`).join('&') + '&BackupRetentionPeriod=' + BackupRetentionPeriod + '&CharacterSetName=' + (CharacterSetName == null ? '' : encodeURIComponent(CharacterSetName)) + '&DatabaseName=' + (DatabaseName == null ? '' : encodeURIComponent(DatabaseName)) + '&DBClusterIdentifier=' + (DBClusterIdentifier == null ? '' : encodeURIComponent(DBClusterIdentifier)) + '&DBClusterParameterGroupName=' + (DBClusterParameterGroupName == null ? '' : encodeURIComponent(DBClusterParameterGroupName)) + '&' + VpcSecurityGroupIds?.map(z => `VpcSecurityGroupIds=${encodeURIComponent(z)}`).join('&') + '&DBSubnetGroupName=' + (DBSubnetGroupName == null ? '' : encodeURIComponent(DBSubnetGroupName)) + '&Engine=' + (Engine == null ? '' : encodeURIComponent(Engine)) + '&EngineVersion=' + (EngineVersion == null ? '' : encodeURIComponent(EngineVersion)) + '&Port=' + Port + '&MasterUsername=' + (MasterUsername == null ? '' : encodeURIComponent(MasterUsername)) + '&MasterUserPassword=' + (MasterUserPassword == null ? '' : encodeURIComponent(MasterUserPassword)) + '&OptionGroupName=' + (OptionGroupName == null ? '' : encodeURIComponent(OptionGroupName)) + '&PreferredBackupWindow=' + (PreferredBackupWindow == null ? '' : encodeURIComponent(PreferredBackupWindow)) + '&PreferredMaintenanceWindow=' + (PreferredMaintenanceWindow == null ? '' : encodeURIComponent(PreferredMaintenanceWindow)) + '&ReplicationSourceIdentifier=' + (ReplicationSourceIdentifier == null ? '' : encodeURIComponent(ReplicationSourceIdentifier)) + '&' + Tags?.map(z => `Tags=${encodeURIComponent(z)}`).join('&') + '&StorageEncrypted=' + StorageEncrypted + '&KmsKeyId=' + (KmsKeyId == null ? '' : encodeURIComponent(KmsKeyId)) + '&PreSignedUrl=' + (PreSignedUrl == null ? '' : encodeURIComponent(PreSignedUrl)) + '&EnableIAMDatabaseAuthentication=' + EnableIAMDatabaseAuthentication + '&BacktrackWindow=' + BacktrackWindow + '&' + EnableCloudwatchLogsExports?.map(z => `EnableCloudwatchLogsExports=${encodeURIComponent(z)}`).join('&') + '&EngineMode=' + (EngineMode == null ? '' : encodeURIComponent(EngineMode)) + '&ScalingConfiguration=' + ScalingConfiguration + '&DeletionProtection=' + DeletionProtection + '&GlobalClusterIdentifier=' + (GlobalClusterIdentifier == null ? '' : encodeURIComponent(GlobalClusterIdentifier)) + '&EnableHttpEndpoint=' + EnableHttpEndpoint + '&CopyTagsToSnapshot=' + CopyTagsToSnapshot + '&Domain=' + (Domain == null ? '' : encodeURIComponent(Domain)) + '&DomainIAMRoleName=' + (DomainIAMRoleName == null ? '' : encodeURIComponent(DomainIAMRoleName)) + '&EnableGlobalWriteForwarding=' + EnableGlobalWriteForwarding + '&DBClusterInstanceClass=' + (DBClusterInstanceClass == null ? '' : encodeURIComponent(DBClusterInstanceClass)) + '&AllocatedStorage=' + AllocatedStorage + '&StorageType=' + (StorageType == null ? '' : encodeURIComponent(StorageType)) + '&Iops=' + Iops + '&PubliclyAccessible=' + PubliclyAccessible + '&AutoMinorVersionUpgrade=' + AutoMinorVersionUpgrade + '&MonitoringInterval=' + MonitoringInterval + '&MonitoringRoleArn=' + (MonitoringRoleArn == null ? '' : encodeURIComponent(MonitoringRoleArn)) + '&EnablePerformanceInsights=' + EnablePerformanceInsights + '&PerformanceInsightsKMSKeyId=' + (PerformanceInsightsKMSKeyId == null ? '' : encodeURIComponent(PerformanceInsightsKMSKeyId)) + '&PerformanceInsightsRetentionPeriod=' + PerformanceInsightsRetentionPeriod + '&ServerlessV2ScalingConfiguration=' + ServerlessV2ScalingConfiguration + '&NetworkType=' + (NetworkType == null ? '' : encodeURIComponent(NetworkType)) + '&DBSystemId=' + (DBSystemId == null ? '' : encodeURIComponent(DBSystemId)) + '&ManageMasterUserPassword=' + ManageMasterUserPassword + '&MasterUserSecretKmsKeyId=' + (MasterUserSecretKmsKeyId == null ? '' : encodeURIComponent(MasterUserSecretKmsKeyId)) + '&EnableLocalWriteForwarding=' + EnableLocalWriteForwarding + '&SourceRegion=' + (SourceRegion == null ? '' : encodeURIComponent(SourceRegion)) + '&Action=' + Action + '&Version=' + Version, { observe: 'response', responseType: 'text' });
		}

		/**
		 * <p>Creates a new custom endpoint and associates it with an Amazon Aurora DB cluster.</p> <note> <p>This action applies only to Aurora DB clusters.</p> </note>
		 * Get #Action=CreateDBClusterEndpoint
		 * @param {string} DBClusterIdentifier The DB cluster identifier of the DB cluster associated with the endpoint. This parameter is stored as a lowercase string.
		 * @param {string} DBClusterEndpointIdentifier The identifier to use for the new endpoint. This parameter is stored as a lowercase string.
		 * @param {string} EndpointType The type of the endpoint, one of: <code>READER</code>, <code>WRITER</code>, <code>ANY</code>.
		 * @param {Array<string>} StaticMembers List of DB instance identifiers that are part of the custom endpoint group.
		 * @param {Array<string>} ExcludedMembers List of DB instance identifiers that aren't part of the custom endpoint group. All other eligible instances are reachable through the custom endpoint. This parameter is relevant only if the list of static members is empty.
		 * @param {Array<string>} Tags The tags to be assigned to the Amazon RDS resource.
		 * @return {void} Success
		 */
		GET_CreateDBClusterEndpoint(DBClusterIdentifier: string, DBClusterEndpointIdentifier: string, EndpointType: string, StaticMembers: Array<string> | null | undefined, ExcludedMembers: Array<string> | null | undefined, Tags: Array<string> | null | undefined, Action: GET_CreateDBClusterEndpointAction, Version: GET_AddRoleToDBClusterVersion): Observable<HttpResponse<string>> {
			return this.http.get(this.baseUri + '#Action=CreateDBClusterEndpoint?DBClusterIdentifier=' + (DBClusterIdentifier == null ? '' : encodeURIComponent(DBClusterIdentifier)) + '&DBClusterEndpointIdentifier=' + (DBClusterEndpointIdentifier == null ? '' : encodeURIComponent(DBClusterEndpointIdentifier)) + '&EndpointType=' + (EndpointType == null ? '' : encodeURIComponent(EndpointType)) + '&' + StaticMembers?.map(z => `StaticMembers=${encodeURIComponent(z)}`).join('&') + '&' + ExcludedMembers?.map(z => `ExcludedMembers=${encodeURIComponent(z)}`).join('&') + '&' + Tags?.map(z => `Tags=${encodeURIComponent(z)}`).join('&') + '&Action=' + Action + '&Version=' + Version, { observe: 'response', responseType: 'text' });
		}

		/**
		 * <p>Creates a new DB cluster parameter group.</p> <p>Parameters in a DB cluster parameter group apply to all of the instances in a DB cluster.</p> <p>A DB cluster parameter group is initially created with the default parameters for the database engine used by instances in the DB cluster. To provide custom values for any of the parameters, you must modify the group after creating it using <code>ModifyDBClusterParameterGroup</code>. Once you've created a DB cluster parameter group, you need to associate it with your DB cluster using <code>ModifyDBCluster</code>.</p> <p>When you associate a new DB cluster parameter group with a running Aurora DB cluster, reboot the DB instances in the DB cluster without failover for the new DB cluster parameter group and associated settings to take effect.</p> <p>When you associate a new DB cluster parameter group with a running Multi-AZ DB cluster, reboot the DB cluster without failover for the new DB cluster parameter group and associated settings to take effect.</p> <important> <p>After you create a DB cluster parameter group, you should wait at least 5 minutes before creating your first DB cluster that uses that DB cluster parameter group as the default parameter group. This allows Amazon RDS to fully complete the create action before the DB cluster parameter group is used as the default for a new DB cluster. This is especially important for parameters that are critical when creating the default database for a DB cluster, such as the character set for the default database defined by the <code>character_set_database</code> parameter. You can use the <i>Parameter Groups</i> option of the <a href="https://console.aws.amazon.com/rds/">Amazon RDS console</a> or the <code>DescribeDBClusterParameters</code> operation to verify that your DB cluster parameter group has been created or modified.</p> </important> <p>For more information on Amazon Aurora, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/CHAP_AuroraOverview.html"> What is Amazon Aurora?</a> in the <i>Amazon Aurora User Guide</i>.</p> <p>For more information on Multi-AZ DB clusters, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/multi-az-db-clusters-concepts.html"> Multi-AZ DB cluster deployments</a> in the <i>Amazon RDS User Guide</i>.</p>
		 * Get #Action=CreateDBClusterParameterGroup
		 * @param {string} DBClusterParameterGroupName <p>The name of the DB cluster parameter group.</p> <p>Constraints:</p> <ul> <li> <p>Must not match the name of an existing DB cluster parameter group.</p> </li> </ul> <note> <p>This value is stored as a lowercase string.</p> </note>
		 * @param {string} DBParameterGroupFamily <p>The DB cluster parameter group family name. A DB cluster parameter group can be associated with one and only one DB cluster parameter group family, and can be applied only to a DB cluster running a database engine and engine version compatible with that DB cluster parameter group family.</p> <p> <b>Aurora MySQL</b> </p> <p>Example: <code>aurora-mysql5.7</code>, <code>aurora-mysql8.0</code> </p> <p> <b>Aurora PostgreSQL</b> </p> <p>Example: <code>aurora-postgresql14</code> </p> <p> <b>RDS for MySQL</b> </p> <p>Example: <code>mysql8.0</code> </p> <p> <b>RDS for PostgreSQL</b> </p> <p>Example: <code>postgres12</code> </p> <p>To list all of the available parameter group families for a DB engine, use the following command:</p> <p> <code>aws rds describe-db-engine-versions --query "DBEngineVersions[].DBParameterGroupFamily" --engine &lt;engine&gt;</code> </p> <p>For example, to list all of the available parameter group families for the Aurora PostgreSQL DB engine, use the following command:</p> <p> <code>aws rds describe-db-engine-versions --query "DBEngineVersions[].DBParameterGroupFamily" --engine aurora-postgresql</code> </p> <note> <p>The output contains duplicates.</p> </note> <p>The following are the valid DB engine values:</p> <ul> <li> <p> <code>aurora-mysql</code> </p> </li> <li> <p> <code>aurora-postgresql</code> </p> </li> <li> <p> <code>mysql</code> </p> </li> <li> <p> <code>postgres</code> </p> </li> </ul>
		 * @param {string} Description The description for the DB cluster parameter group.
		 * @param {Array<string>} Tags Tags to assign to the DB cluster parameter group.
		 * @return {void} Success
		 */
		GET_CreateDBClusterParameterGroup(DBClusterParameterGroupName: string, DBParameterGroupFamily: string, Description: string, Tags: Array<string> | null | undefined, Action: GET_CreateDBClusterParameterGroupAction, Version: GET_AddRoleToDBClusterVersion): Observable<HttpResponse<string>> {
			return this.http.get(this.baseUri + '#Action=CreateDBClusterParameterGroup?DBClusterParameterGroupName=' + (DBClusterParameterGroupName == null ? '' : encodeURIComponent(DBClusterParameterGroupName)) + '&DBParameterGroupFamily=' + (DBParameterGroupFamily == null ? '' : encodeURIComponent(DBParameterGroupFamily)) + '&Description=' + (Description == null ? '' : encodeURIComponent(Description)) + '&' + Tags?.map(z => `Tags=${encodeURIComponent(z)}`).join('&') + '&Action=' + Action + '&Version=' + Version, { observe: 'response', responseType: 'text' });
		}

		/**
		 * <p>Creates a snapshot of a DB cluster.</p> <p>For more information on Amazon Aurora, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/CHAP_AuroraOverview.html"> What is Amazon Aurora?</a> in the <i>Amazon Aurora User Guide</i>.</p> <p>For more information on Multi-AZ DB clusters, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/multi-az-db-clusters-concepts.html"> Multi-AZ DB cluster deployments</a> in the <i>Amazon RDS User Guide</i>.</p>
		 * Get #Action=CreateDBClusterSnapshot
		 * @param {string} DBClusterSnapshotIdentifier <p>The identifier of the DB cluster snapshot. This parameter is stored as a lowercase string.</p> <p>Constraints:</p> <ul> <li> <p>Must contain from 1 to 63 letters, numbers, or hyphens.</p> </li> <li> <p>First character must be a letter.</p> </li> <li> <p>Can't end with a hyphen or contain two consecutive hyphens.</p> </li> </ul> <p>Example: <code>my-cluster1-snapshot1</code> </p>
		 * @param {string} DBClusterIdentifier <p>The identifier of the DB cluster to create a snapshot for. This parameter isn't case-sensitive.</p> <p>Constraints:</p> <ul> <li> <p>Must match the identifier of an existing DBCluster.</p> </li> </ul> <p>Example: <code>my-cluster1</code> </p>
		 * @param {Array<string>} Tags The tags to be assigned to the DB cluster snapshot.
		 * @return {void} Success
		 */
		GET_CreateDBClusterSnapshot(DBClusterSnapshotIdentifier: string, DBClusterIdentifier: string, Tags: Array<string> | null | undefined, Action: GET_CreateDBClusterSnapshotAction, Version: GET_AddRoleToDBClusterVersion): Observable<HttpResponse<string>> {
			return this.http.get(this.baseUri + '#Action=CreateDBClusterSnapshot?DBClusterSnapshotIdentifier=' + (DBClusterSnapshotIdentifier == null ? '' : encodeURIComponent(DBClusterSnapshotIdentifier)) + '&DBClusterIdentifier=' + (DBClusterIdentifier == null ? '' : encodeURIComponent(DBClusterIdentifier)) + '&' + Tags?.map(z => `Tags=${encodeURIComponent(z)}`).join('&') + '&Action=' + Action + '&Version=' + Version, { observe: 'response', responseType: 'text' });
		}

		/**
		 * <p>Creates a new DB instance.</p> <p>The new DB instance can be an RDS DB instance, or it can be a DB instance in an Aurora DB cluster. For an Aurora DB cluster, you can call this operation multiple times to add more than one DB instance to the cluster.</p> <p>For more information about creating an RDS DB instance, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_CreateDBInstance.html"> Creating an Amazon RDS DB instance</a> in the <i>Amazon RDS User Guide</i>.</p> <p>For more information about creating a DB instance in an Aurora DB cluster, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/Aurora.CreateInstance.html"> Creating an Amazon Aurora DB cluster</a> in the <i>Amazon Aurora User Guide</i>.</p>
		 * Get #Action=CreateDBInstance
		 * @param {string} DBName <p>The meaning of this parameter differs according to the database engine you use.</p> <p> <b>MySQL</b> </p> <p>The name of the database to create when the DB instance is created. If this parameter isn't specified, no database is created in the DB instance.</p> <p>Constraints:</p> <ul> <li> <p>Must contain 1 to 64 letters or numbers.</p> </li> <li> <p>Must begin with a letter. Subsequent characters can be letters, underscores, or digits (0-9).</p> </li> <li> <p>Can't be a word reserved by the specified database engine</p> </li> </ul> <p> <b>MariaDB</b> </p> <p>The name of the database to create when the DB instance is created. If this parameter isn't specified, no database is created in the DB instance.</p> <p>Constraints:</p> <ul> <li> <p>Must contain 1 to 64 letters or numbers.</p> </li> <li> <p>Must begin with a letter. Subsequent characters can be letters, underscores, or digits (0-9).</p> </li> <li> <p>Can't be a word reserved by the specified database engine</p> </li> </ul> <p> <b>PostgreSQL</b> </p> <p>The name of the database to create when the DB instance is created. If this parameter isn't specified, a database named <code>postgres</code> is created in the DB instance.</p> <p>Constraints:</p> <ul> <li> <p>Must contain 1 to 63 letters, numbers, or underscores.</p> </li> <li> <p>Must begin with a letter. Subsequent characters can be letters, underscores, or digits (0-9).</p> </li> <li> <p>Can't be a word reserved by the specified database engine</p> </li> </ul> <p> <b>Oracle</b> </p> <p>The Oracle System ID (SID) of the created DB instance. If you don't specify a value, the default value is <code>ORCL</code>. You can't specify the string <code>null</code>, or any other reserved word, for <code>DBName</code>.</p> <p>Default: <code>ORCL</code> </p> <p>Constraints:</p> <ul> <li> <p>Can't be longer than 8 characters</p> </li> </ul> <p> <b>Amazon RDS Custom for Oracle</b> </p> <p>The Oracle System ID (SID) of the created RDS Custom DB instance. If you don't specify a value, the default value is <code>ORCL</code> for non-CDBs and <code>RDSCDB</code> for CDBs.</p> <p>Default: <code>ORCL</code> </p> <p>Constraints:</p> <ul> <li> <p>It must contain 1 to 8 alphanumeric characters.</p> </li> <li> <p>It must contain a letter.</p> </li> <li> <p>It can't be a word reserved by the database engine.</p> </li> </ul> <p> <b>Amazon RDS Custom for SQL Server</b> </p> <p>Not applicable. Must be null.</p> <p> <b>SQL Server</b> </p> <p>Not applicable. Must be null.</p> <p> <b>Amazon Aurora MySQL</b> </p> <p>The name of the database to create when the primary DB instance of the Aurora MySQL DB cluster is created. If this parameter isn't specified for an Aurora MySQL DB cluster, no database is created in the DB cluster.</p> <p>Constraints:</p> <ul> <li> <p>It must contain 1 to 64 alphanumeric characters.</p> </li> <li> <p>It can't be a word reserved by the database engine.</p> </li> </ul> <p> <b>Amazon Aurora PostgreSQL</b> </p> <p>The name of the database to create when the primary DB instance of the Aurora PostgreSQL DB cluster is created. If this parameter isn't specified for an Aurora PostgreSQL DB cluster, a database named <code>postgres</code> is created in the DB cluster.</p> <p>Constraints:</p> <ul> <li> <p>It must contain 1 to 63 alphanumeric characters.</p> </li> <li> <p>It must begin with a letter. Subsequent characters can be letters, underscores, or digits (0 to 9).</p> </li> <li> <p>It can't be a word reserved by the database engine.</p> </li> </ul>
		 * @param {string} DBInstanceIdentifier <p>The identifier for this DB instance. This parameter is stored as a lowercase string.</p> <p>Constraints:</p> <ul> <li> <p>Must contain from 1 to 63 letters, numbers, or hyphens.</p> </li> <li> <p>First character must be a letter.</p> </li> <li> <p>Can't end with a hyphen or contain two consecutive hyphens.</p> </li> </ul> <p>Example: <code>mydbinstance</code> </p>
		 * @param {number} AllocatedStorage <p>The amount of storage in gibibytes (GiB) to allocate for the DB instance.</p> <p>This setting doesn't apply to Amazon Aurora DB instances. Aurora cluster volumes automatically grow as the amount of data in your database increases, though you are only charged for the space that you use in an Aurora cluster volume.</p> <dl> <dt>Amazon RDS Custom</dt> <dd> <p>Constraints to the amount of storage for each storage type are the following:</p> <ul> <li> <p>General Purpose (SSD) storage (gp2, gp3): Must be an integer from 40 to 65536 for RDS Custom for Oracle, 16384 for RDS Custom for SQL Server.</p> </li> <li> <p>Provisioned IOPS storage (io1): Must be an integer from 40 to 65536 for RDS Custom for Oracle, 16384 for RDS Custom for SQL Server.</p> </li> </ul> </dd> <dt>RDS for MariaDB</dt> <dd> <p>Constraints to the amount of storage for each storage type are the following:</p> <ul> <li> <p>General Purpose (SSD) storage (gp2, gp3): Must be an integer from 20 to 65536.</p> </li> <li> <p>Provisioned IOPS storage (io1): Must be an integer from 100 to 65536.</p> </li> <li> <p>Magnetic storage (standard): Must be an integer from 5 to 3072.</p> </li> </ul> </dd> <dt>RDS for MySQL</dt> <dd> <p>Constraints to the amount of storage for each storage type are the following:</p> <ul> <li> <p>General Purpose (SSD) storage (gp2, gp3): Must be an integer from 20 to 65536.</p> </li> <li> <p>Provisioned IOPS storage (io1): Must be an integer from 100 to 65536.</p> </li> <li> <p>Magnetic storage (standard): Must be an integer from 5 to 3072.</p> </li> </ul> </dd> <dt>RDS for Oracle</dt> <dd> <p>Constraints to the amount of storage for each storage type are the following:</p> <ul> <li> <p>General Purpose (SSD) storage (gp2, gp3): Must be an integer from 20 to 65536.</p> </li> <li> <p>Provisioned IOPS storage (io1): Must be an integer from 100 to 65536.</p> </li> <li> <p>Magnetic storage (standard): Must be an integer from 10 to 3072.</p> </li> </ul> </dd> <dt>RDS for PostgreSQL</dt> <dd> <p>Constraints to the amount of storage for each storage type are the following:</p> <ul> <li> <p>General Purpose (SSD) storage (gp2, gp3): Must be an integer from 20 to 65536.</p> </li> <li> <p>Provisioned IOPS storage (io1): Must be an integer from 100 to 65536.</p> </li> <li> <p>Magnetic storage (standard): Must be an integer from 5 to 3072.</p> </li> </ul> </dd> <dt>RDS for SQL Server</dt> <dd> <p>Constraints to the amount of storage for each storage type are the following:</p> <ul> <li> <p>General Purpose (SSD) storage (gp2, gp3):</p> <ul> <li> <p>Enterprise and Standard editions: Must be an integer from 20 to 16384.</p> </li> <li> <p>Web and Express editions: Must be an integer from 20 to 16384.</p> </li> </ul> </li> <li> <p>Provisioned IOPS storage (io1):</p> <ul> <li> <p>Enterprise and Standard editions: Must be an integer from 100 to 16384.</p> </li> <li> <p>Web and Express editions: Must be an integer from 100 to 16384.</p> </li> </ul> </li> <li> <p>Magnetic storage (standard):</p> <ul> <li> <p>Enterprise and Standard editions: Must be an integer from 20 to 1024.</p> </li> <li> <p>Web and Express editions: Must be an integer from 20 to 1024.</p> </li> </ul> </li> </ul> </dd> </dl>
		 * @param {string} DBInstanceClass The compute and memory capacity of the DB instance, for example <code>db.m5.large</code>. Not all DB instance classes are available in all Amazon Web Services Regions, or for all database engines. For the full list of DB instance classes, and availability for your engine, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.DBInstanceClass.html">DB instance classes</a> in the <i>Amazon RDS User Guide</i> or <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/Concepts.DBInstanceClass.html">Aurora DB instance classes</a> in the <i>Amazon Aurora User Guide</i>.
		 * @param {string} Engine <p>The database engine to use for this DB instance.</p> <p>Not every database engine is available in every Amazon Web Services Region.</p> <p>Valid Values:</p> <ul> <li> <p> <code>aurora-mysql</code> (for Aurora MySQL DB instances)</p> </li> <li> <p> <code>aurora-postgresql</code> (for Aurora PostgreSQL DB instances)</p> </li> <li> <p> <code>custom-oracle-ee</code> (for RDS Custom for Oracle DB instances)</p> </li> <li> <p> <code>custom-oracle-ee-cdb</code> (for RDS Custom for Oracle DB instances)</p> </li> <li> <p> <code>custom-sqlserver-ee</code> (for RDS Custom for SQL Server DB instances)</p> </li> <li> <p> <code>custom-sqlserver-se</code> (for RDS Custom for SQL Server DB instances)</p> </li> <li> <p> <code>custom-sqlserver-web</code> (for RDS Custom for SQL Server DB instances)</p> </li> <li> <p> <code>mariadb</code> </p> </li> <li> <p> <code>mysql</code> </p> </li> <li> <p> <code>oracle-ee</code> </p> </li> <li> <p> <code>oracle-ee-cdb</code> </p> </li> <li> <p> <code>oracle-se2</code> </p> </li> <li> <p> <code>oracle-se2-cdb</code> </p> </li> <li> <p> <code>postgres</code> </p> </li> <li> <p> <code>sqlserver-ee</code> </p> </li> <li> <p> <code>sqlserver-se</code> </p> </li> <li> <p> <code>sqlserver-ex</code> </p> </li> <li> <p> <code>sqlserver-web</code> </p> </li> </ul>
		 * @param {string} MasterUsername <p>The name for the master user.</p> <p>This setting doesn't apply to Amazon Aurora DB instances. The name for the master user is managed by the DB cluster.</p> <p>This setting is required for RDS DB instances.</p> <p>Constraints:</p> <ul> <li> <p>Must be 1 to 16 letters, numbers, or underscores.</p> </li> <li> <p>First character must be a letter.</p> </li> <li> <p>Can't be a reserved word for the chosen database engine.</p> </li> </ul>
		 * @param {string} MasterUserPassword <p>The password for the master user.</p> <p>This setting doesn't apply to Amazon Aurora DB instances. The password for the master user is managed by the DB cluster.</p> <p>Constraints:</p> <ul> <li> <p>Can't be specified if <code>ManageMasterUserPassword</code> is turned on.</p> </li> <li> <p>Can include any printable ASCII character except "/", """, or "@".</p> </li> </ul> <p>Length Constraints:</p> <ul> <li> <p>RDS for MariaDB - Must contain from 8 to 41 characters.</p> </li> <li> <p>RDS for Microsoft SQL Server - Must contain from 8 to 128 characters.</p> </li> <li> <p>RDS for MySQL - Must contain from 8 to 41 characters.</p> </li> <li> <p>RDS for Oracle - Must contain from 8 to 30 characters.</p> </li> <li> <p>RDS for PostgreSQL - Must contain from 8 to 128 characters.</p> </li> </ul>
		 * @param {Array<string>} DBSecurityGroups <p>A list of DB security groups to associate with this DB instance.</p> <p>This setting applies to the legacy EC2-Classic platform, which is no longer used to create new DB instances. Use the <code>VpcSecurityGroupIds</code> setting instead.</p>
		 * @param {Array<string>} VpcSecurityGroupIds <p>A list of Amazon EC2 VPC security groups to associate with this DB instance.</p> <p>This setting doesn't apply to Amazon Aurora DB instances. The associated list of EC2 VPC security groups is managed by the DB cluster.</p> <p>Default: The default EC2 VPC security group for the DB subnet group's VPC.</p>
		 * @param {string} AvailabilityZone <p>The Availability Zone (AZ) where the database will be created. For information on Amazon Web Services Regions and Availability Zones, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html">Regions and Availability Zones</a>.</p> <p>For Amazon Aurora, each Aurora DB cluster hosts copies of its storage in three separate Availability Zones. Specify one of these Availability Zones. Aurora automatically chooses an appropriate Availability Zone if you don't specify one.</p> <p>Default: A random, system-chosen Availability Zone in the endpoint's Amazon Web Services Region.</p> <p>Constraints:</p> <ul> <li> <p>The <code>AvailabilityZone</code> parameter can't be specified if the DB instance is a Multi-AZ deployment.</p> </li> <li> <p>The specified Availability Zone must be in the same Amazon Web Services Region as the current endpoint.</p> </li> </ul> <p>Example: <code>us-east-1d</code> </p>
		 * @param {string} DBSubnetGroupName <p>A DB subnet group to associate with this DB instance.</p> <p>Constraints:</p> <ul> <li> <p>Must match the name of an existing DB subnet group.</p> </li> <li> <p>Must not be <code>default</code>.</p> </li> </ul> <p>Example: <code>mydbsubnetgroup</code> </p>
		 * @param {string} PreferredMaintenanceWindow <p>The time range each week during which system maintenance can occur. For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_UpgradeDBInstance.Maintenance.html#Concepts.DBMaintenance">Amazon RDS Maintenance Window</a> in the <i>Amazon RDS User Guide.</i> </p> <p>The default is a 30-minute window selected at random from an 8-hour block of time for each Amazon Web Services Region, occurring on a random day of the week.</p> <p>Constraints:</p> <ul> <li> <p>Must be in the format <code>ddd:hh24:mi-ddd:hh24:mi</code>.</p> </li> <li> <p>The day values must be <code>mon | tue | wed | thu | fri | sat | sun</code>. </p> </li> <li> <p>Must be in Universal Coordinated Time (UTC).</p> </li> <li> <p>Must not conflict with the preferred backup window.</p> </li> <li> <p>Must be at least 30 minutes.</p> </li> </ul>
		 * @param {string} DBParameterGroupName <p>The name of the DB parameter group to associate with this DB instance. If you don't specify a value, then Amazon RDS uses the default DB parameter group for the specified DB engine and version.</p> <p>This setting doesn't apply to RDS Custom DB instances.</p> <p>Constraints:</p> <ul> <li> <p>Must be 1 to 255 letters, numbers, or hyphens.</p> </li> <li> <p>The first character must be a letter.</p> </li> <li> <p>Can't end with a hyphen or contain two consecutive hyphens.</p> </li> </ul>
		 * @param {number} BackupRetentionPeriod <p>The number of days for which automated backups are retained. Setting this parameter to a positive number enables backups. Setting this parameter to <code>0</code> disables automated backups.</p> <p>This setting doesn't apply to Amazon Aurora DB instances. The retention period for automated backups is managed by the DB cluster.</p> <p>Default: <code>1</code> </p> <p>Constraints:</p> <ul> <li> <p>Must be a value from 0 to 35.</p> </li> <li> <p>Can't be set to 0 if the DB instance is a source to read replicas.</p> </li> <li> <p>Can't be set to 0 for an RDS Custom for Oracle DB instance.</p> </li> </ul>
		 * @param {string} PreferredBackupWindow <p>The daily time range during which automated backups are created if automated backups are enabled, using the <code>BackupRetentionPeriod</code> parameter. The default is a 30-minute window selected at random from an 8-hour block of time for each Amazon Web Services Region. For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_WorkingWithAutomatedBackups.html#USER_WorkingWithAutomatedBackups.BackupWindow">Backup window</a> in the <i>Amazon RDS User Guide</i>.</p> <p>This setting doesn't apply to Amazon Aurora DB instances. The daily time range for creating automated backups is managed by the DB cluster.</p> <p>Constraints:</p> <ul> <li> <p>Must be in the format <code>hh24:mi-hh24:mi</code>.</p> </li> <li> <p>Must be in Universal Coordinated Time (UTC).</p> </li> <li> <p>Must not conflict with the preferred maintenance window.</p> </li> <li> <p>Must be at least 30 minutes.</p> </li> </ul>
		 * @param {number} Port <p>The port number on which the database accepts connections.</p> <p>This setting doesn't apply to Aurora DB instances. The port number is managed by the cluster.</p> <p>Valid Values: <code>1150-65535</code> </p> <p>Default:</p> <ul> <li> <p>RDS for MariaDB - <code>3306</code> </p> </li> <li> <p>RDS for Microsoft SQL Server - <code>1433</code> </p> </li> <li> <p>RDS for MySQL - <code>3306</code> </p> </li> <li> <p>RDS for Oracle - <code>1521</code> </p> </li> <li> <p>RDS for PostgreSQL - <code>5432</code> </p> </li> </ul> <p>Constraints:</p> <ul> <li> <p>For RDS for Microsoft SQL Server, the value can't be <code>1234</code>, <code>1434</code>, <code>3260</code>, <code>3343</code>, <code>3389</code>, <code>47001</code>, or <code>49152-49156</code>.</p> </li> </ul>
		 * @param {boolean} MultiAZ <p>Specifies whether the DB instance is a Multi-AZ deployment. You can't set the <code>AvailabilityZone</code> parameter if the DB instance is a Multi-AZ deployment.</p> <p>This setting doesn't apply to the following DB instances:</p> <ul> <li> <p>Amazon Aurora (DB instance Availability Zones (AZs) are managed by the DB cluster.)</p> </li> <li> <p>RDS Custom</p> </li> </ul>
		 * @param {string} EngineVersion <p>The version number of the database engine to use.</p> <p>This setting doesn't apply to Amazon Aurora DB instances. The version number of the database engine the DB instance uses is managed by the DB cluster.</p> <p>For a list of valid engine versions, use the <code>DescribeDBEngineVersions</code> operation.</p> <p>The following are the database engines and links to information about the major and minor versions that are available with Amazon RDS. Not every database engine is available for every Amazon Web Services Region.</p> <dl> <dt>Amazon RDS Custom for Oracle</dt> <dd> <p>A custom engine version (CEV) that you have previously created. This setting is required for RDS Custom for Oracle. The CEV name has the following format: 19.<i>customized_string</i>. A valid CEV name is <code>19.my_cev1</code>. For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/custom-creating.html#custom-creating.create"> Creating an RDS Custom for Oracle DB instance</a> in the <i>Amazon RDS User Guide</i>.</p> </dd> <dt>Amazon RDS Custom for SQL Server</dt> <dd> <p>See <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/custom-reqs-limits-MS.html">RDS Custom for SQL Server general requirements</a> in the <i>Amazon RDS User Guide</i>.</p> </dd> <dt>RDS for MariaDB</dt> <dd> <p>For information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_MariaDB.html#MariaDB.Concepts.VersionMgmt">MariaDB on Amazon RDS versions</a> in the <i>Amazon RDS User Guide</i>.</p> </dd> <dt>RDS for Microsoft SQL Server</dt> <dd> <p>For information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_SQLServer.html#SQLServer.Concepts.General.VersionSupport">Microsoft SQL Server versions on Amazon RDS</a> in the <i>Amazon RDS User Guide</i>.</p> </dd> <dt>RDS for MySQL</dt> <dd> <p>For information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_MySQL.html#MySQL.Concepts.VersionMgmt">MySQL on Amazon RDS versions</a> in the <i>Amazon RDS User Guide</i>.</p> </dd> <dt>RDS for Oracle</dt> <dd> <p>For information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Appendix.Oracle.PatchComposition.html">Oracle Database Engine release notes</a> in the <i>Amazon RDS User Guide</i>.</p> </dd> <dt>RDS for PostgreSQL</dt> <dd> <p>For information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_PostgreSQL.html#PostgreSQL.Concepts">Amazon RDS for PostgreSQL versions and extensions</a> in the <i>Amazon RDS User Guide</i>.</p> </dd> </dl>
		 * @param {boolean} AutoMinorVersionUpgrade <p>Specifies whether minor engine upgrades are applied automatically to the DB instance during the maintenance window. By default, minor engine upgrades are applied automatically.</p> <p>If you create an RDS Custom DB instance, you must set <code>AutoMinorVersionUpgrade</code> to <code>false</code>.</p>
		 * @param {string} LicenseModel <p>The license model information for this DB instance.</p> <p>This setting doesn't apply to Amazon Aurora or RDS Custom DB instances.</p> <p>Valid Values:</p> <ul> <li> <p>RDS for MariaDB - <code>general-public-license</code> </p> </li> <li> <p>RDS for Microsoft SQL Server - <code>license-included</code> </p> </li> <li> <p>RDS for MySQL - <code>general-public-license</code> </p> </li> <li> <p>RDS for Oracle - <code>bring-your-own-license | license-included</code> </p> </li> <li> <p>RDS for PostgreSQL - <code>postgresql-license</code> </p> </li> </ul>
		 * @param {number} Iops <p>The amount of Provisioned IOPS (input/output operations per second) to initially allocate for the DB instance. For information about valid IOPS values, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_Storage.html">Amazon RDS DB instance storage</a> in the <i>Amazon RDS User Guide</i>.</p> <p>This setting doesn't apply to Amazon Aurora DB instances. Storage is managed by the DB cluster.</p> <p>Constraints:</p> <ul> <li> <p>For RDS for MariaDB, MySQL, Oracle, and PostgreSQL - Must be a multiple between .5 and 50 of the storage amount for the DB instance.</p> </li> <li> <p>For RDS for SQL Server - Must be a multiple between 1 and 50 of the storage amount for the DB instance.</p> </li> </ul>
		 * @param {string} OptionGroupName <p>The option group to associate the DB instance with.</p> <p>Permanent options, such as the TDE option for Oracle Advanced Security TDE, can't be removed from an option group. Also, that option group can't be removed from a DB instance after it is associated with a DB instance.</p> <p>This setting doesn't apply to Amazon Aurora or RDS Custom DB instances.</p>
		 * @param {string} CharacterSetName <p>For supported engines, the character set (<code>CharacterSet</code>) to associate the DB instance with.</p> <p>This setting doesn't apply to the following DB instances:</p> <ul> <li> <p>Amazon Aurora - The character set is managed by the DB cluster. For more information, see <code>CreateDBCluster</code>.</p> </li> <li> <p>RDS Custom - However, if you need to change the character set, you can change it on the database itself.</p> </li> </ul>
		 * @param {string} NcharCharacterSetName <p>The name of the NCHAR character set for the Oracle DB instance.</p> <p>This setting doesn't apply to RDS Custom DB instances.</p>
		 * @param {boolean} PubliclyAccessible <p>Specifies whether the DB instance is publicly accessible.</p> <p>When the DB instance is publicly accessible, its Domain Name System (DNS) endpoint resolves to the private IP address from within the DB instance's virtual private cloud (VPC). It resolves to the public IP address from outside of the DB instance's VPC. Access to the DB instance is ultimately controlled by the security group it uses. That public access is not permitted if the security group assigned to the DB instance doesn't permit it.</p> <p>When the DB instance isn't publicly accessible, it is an internal DB instance with a DNS name that resolves to a private IP address.</p> <p>Default: The default behavior varies depending on whether <code>DBSubnetGroupName</code> is specified.</p> <p>If <code>DBSubnetGroupName</code> isn't specified, and <code>PubliclyAccessible</code> isn't specified, the following applies:</p> <ul> <li> <p>If the default VPC in the target Region doesn’t have an internet gateway attached to it, the DB instance is private.</p> </li> <li> <p>If the default VPC in the target Region has an internet gateway attached to it, the DB instance is public.</p> </li> </ul> <p>If <code>DBSubnetGroupName</code> is specified, and <code>PubliclyAccessible</code> isn't specified, the following applies:</p> <ul> <li> <p>If the subnets are part of a VPC that doesn’t have an internet gateway attached to it, the DB instance is private.</p> </li> <li> <p>If the subnets are part of a VPC that has an internet gateway attached to it, the DB instance is public.</p> </li> </ul>
		 * @param {Array<string>} Tags Tags to assign to the DB instance.
		 * @param {string} DBClusterIdentifier <p>The identifier of the DB cluster that this DB instance will belong to.</p> <p>This setting doesn't apply to RDS Custom DB instances.</p>
		 * @param {string} StorageType <p>The storage type to associate with the DB instance.</p> <p>If you specify <code>io1</code> or <code>gp3</code>, you must also include a value for the <code>Iops</code> parameter.</p> <p>This setting doesn't apply to Amazon Aurora DB instances. Storage is managed by the DB cluster.</p> <p>Valid Values: <code>gp2 | gp3 | io1 | standard</code> </p> <p>Default: <code>io1</code>, if the <code>Iops</code> parameter is specified. Otherwise, <code>gp2</code>.</p>
		 * @param {string} TdeCredentialArn <p>The ARN from the key store with which to associate the instance for TDE encryption.</p> <p>This setting doesn't apply to Amazon Aurora or RDS Custom DB instances.</p>
		 * @param {string} TdeCredentialPassword <p>The password for the given ARN from the key store in order to access the device.</p> <p>This setting doesn't apply to RDS Custom DB instances.</p>
		 * @param {boolean} StorageEncrypted <p>Specifes whether the DB instance is encrypted. By default, it isn't encrypted.</p> <p>For RDS Custom DB instances, either enable this setting or leave it unset. Otherwise, Amazon RDS reports an error.</p> <p>This setting doesn't apply to Amazon Aurora DB instances. The encryption for DB instances is managed by the DB cluster.</p>
		 * @param {string} KmsKeyId <p>The Amazon Web Services KMS key identifier for an encrypted DB instance.</p> <p>The Amazon Web Services KMS key identifier is the key ARN, key ID, alias ARN, or alias name for the KMS key. To use a KMS key in a different Amazon Web Services account, specify the key ARN or alias ARN.</p> <p>This setting doesn't apply to Amazon Aurora DB instances. The Amazon Web Services KMS key identifier is managed by the DB cluster. For more information, see <code>CreateDBCluster</code>.</p> <p>If <code>StorageEncrypted</code> is enabled, and you do not specify a value for the <code>KmsKeyId</code> parameter, then Amazon RDS uses your default KMS key. There is a default KMS key for your Amazon Web Services account. Your Amazon Web Services account has a different default KMS key for each Amazon Web Services Region.</p> <p>For Amazon RDS Custom, a KMS key is required for DB instances. For most RDS engines, if you leave this parameter empty while enabling <code>StorageEncrypted</code>, the engine uses the default KMS key. However, RDS Custom doesn't use the default key when this parameter is empty. You must explicitly specify a key.</p>
		 * @param {string} Domain <p>The Active Directory directory ID to create the DB instance in. Currently, only Microsoft SQL Server, MySQL, Oracle, and PostgreSQL DB instances can be created in an Active Directory Domain.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/kerberos-authentication.html"> Kerberos Authentication</a> in the <i>Amazon RDS User Guide</i>.</p> <p>This setting doesn't apply to the following DB instances:</p> <ul> <li> <p>Amazon Aurora (The domain is managed by the DB cluster.)</p> </li> <li> <p>RDS Custom</p> </li> </ul>
		 * @param {string} DomainFqdn <p>The fully qualified domain name (FQDN) of an Active Directory domain.</p> <p>Constraints:</p> <ul> <li> <p>Can't be longer than 64 characters.</p> </li> </ul> <p>Example: <code>mymanagedADtest.mymanagedAD.mydomain</code> </p>
		 * @param {string} DomainOu <p>The Active Directory organizational unit for your DB instance to join.</p> <p>Constraints:</p> <ul> <li> <p>Must be in the distinguished name format.</p> </li> <li> <p>Can't be longer than 64 characters.</p> </li> </ul> <p>Example: <code>OU=mymanagedADtestOU,DC=mymanagedADtest,DC=mymanagedAD,DC=mydomain</code> </p>
		 * @param {string} DomainAuthSecretArn <p>The ARN for the Secrets Manager secret with the credentials for the user joining the domain.</p> <p>Example: <code>arn:aws:secretsmanager:region:account-number:secret:myselfmanagedADtestsecret-123456</code> </p>
		 * @param {Array<string>} DomainDnsIps <p>The IPv4 DNS IP addresses of your primary and secondary Active Directory domain controllers.</p> <p>Constraints:</p> <ul> <li> <p>Two IP addresses must be provided. If there isn't a secondary domain controller, use the IP address of the primary domain controller for both entries in the list.</p> </li> </ul> <p>Example: <code>123.124.125.126,234.235.236.237</code> </p>
		 * @param {boolean} CopyTagsToSnapshot <p>Specifies whether to copy tags from the DB instance to snapshots of the DB instance. By default, tags are not copied.</p> <p>This setting doesn't apply to Amazon Aurora DB instances. Copying tags to snapshots is managed by the DB cluster. Setting this value for an Aurora DB instance has no effect on the DB cluster setting.</p>
		 * @param {number} MonitoringInterval <p>The interval, in seconds, between points when Enhanced Monitoring metrics are collected for the DB instance. To disable collection of Enhanced Monitoring metrics, specify <code>0</code>.</p> <p>If <code>MonitoringRoleArn</code> is specified, then you must set <code>MonitoringInterval</code> to a value other than <code>0</code>.</p> <p>This setting doesn't apply to RDS Custom DB instances.</p> <p>Valid Values: <code>0 | 1 | 5 | 10 | 15 | 30 | 60</code> </p> <p>Default: <code>0</code> </p>
		 * @param {string} MonitoringRoleArn <p>The ARN for the IAM role that permits RDS to send enhanced monitoring metrics to Amazon CloudWatch Logs. For example, <code>arn:aws:iam:123456789012:role/emaccess</code>. For information on creating a monitoring role, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Monitoring.OS.html#USER_Monitoring.OS.Enabling">Setting Up and Enabling Enhanced Monitoring</a> in the <i>Amazon RDS User Guide</i>.</p> <p>If <code>MonitoringInterval</code> is set to a value other than <code>0</code>, then you must supply a <code>MonitoringRoleArn</code> value.</p> <p>This setting doesn't apply to RDS Custom DB instances.</p>
		 * @param {string} DomainIAMRoleName <p>The name of the IAM role to use when making API calls to the Directory Service.</p> <p>This setting doesn't apply to the following DB instances:</p> <ul> <li> <p>Amazon Aurora (The domain is managed by the DB cluster.)</p> </li> <li> <p>RDS Custom</p> </li> </ul>
		 * @param {number} PromotionTier <p>The order of priority in which an Aurora Replica is promoted to the primary instance after a failure of the existing primary instance. For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/Concepts.AuroraHighAvailability.html#Aurora.Managing.FaultTolerance"> Fault Tolerance for an Aurora DB Cluster</a> in the <i>Amazon Aurora User Guide</i>.</p> <p>This setting doesn't apply to RDS Custom DB instances.</p> <p>Default: <code>1</code> </p> <p>Valid Values: <code>0 - 15</code> </p>
		 * @param {string} Timezone The time zone of the DB instance. The time zone parameter is currently supported only by <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_SQLServer.html#SQLServer.Concepts.General.TimeZone">Microsoft SQL Server</a>.
		 * @param {boolean} EnableIAMDatabaseAuthentication <p>Specifies whether to enable mapping of Amazon Web Services Identity and Access Management (IAM) accounts to database accounts. By default, mapping isn't enabled.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/UsingWithRDS.IAMDBAuth.html"> IAM Database Authentication for MySQL and PostgreSQL</a> in the <i>Amazon RDS User Guide</i>.</p> <p>This setting doesn't apply to the following DB instances:</p> <ul> <li> <p>Amazon Aurora (Mapping Amazon Web Services IAM accounts to database accounts is managed by the DB cluster.)</p> </li> <li> <p>RDS Custom</p> </li> </ul>
		 * @param {boolean} EnablePerformanceInsights <p>Specifies whether to enable Performance Insights for the DB instance. For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_PerfInsights.html">Using Amazon Performance Insights</a> in the <i>Amazon RDS User Guide</i>.</p> <p>This setting doesn't apply to RDS Custom DB instances.</p>
		 * @param {string} PerformanceInsightsKMSKeyId <p>The Amazon Web Services KMS key identifier for encryption of Performance Insights data.</p> <p>The Amazon Web Services KMS key identifier is the key ARN, key ID, alias ARN, or alias name for the KMS key.</p> <p>If you don't specify a value for <code>PerformanceInsightsKMSKeyId</code>, then Amazon RDS uses your default KMS key. There is a default KMS key for your Amazon Web Services account. Your Amazon Web Services account has a different default KMS key for each Amazon Web Services Region.</p> <p>This setting doesn't apply to RDS Custom DB instances.</p>
		 * @param {number} PerformanceInsightsRetentionPeriod <p>The number of days to retain Performance Insights data.</p> <p>This setting doesn't apply to RDS Custom DB instances.</p> <p>Valid Values:</p> <ul> <li> <p> <code>7</code> </p> </li> <li> <p> <i>month</i> * 31, where <i>month</i> is a number of months from 1-23. Examples: <code>93</code> (3 months * 31), <code>341</code> (11 months * 31), <code>589</code> (19 months * 31)</p> </li> <li> <p> <code>731</code> </p> </li> </ul> <p>Default: <code>7</code> days</p> <p>If you specify a retention period that isn't valid, such as <code>94</code>, Amazon RDS returns an error.</p>
		 * @param {Array<string>} EnableCloudwatchLogsExports <p>The list of log types that need to be enabled for exporting to CloudWatch Logs. For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_LogAccess.html#USER_LogAccess.Procedural.UploadtoCloudWatch"> Publishing Database Logs to Amazon CloudWatch Logs</a> in the <i>Amazon RDS User Guide</i>.</p> <p>This setting doesn't apply to the following DB instances:</p> <ul> <li> <p>Amazon Aurora (CloudWatch Logs exports are managed by the DB cluster.)</p> </li> <li> <p>RDS Custom</p> </li> </ul> <p>The following values are valid for each DB engine:</p> <ul> <li> <p>RDS for MariaDB - <code>audit | error | general | slowquery</code> </p> </li> <li> <p>RDS for Microsoft SQL Server - <code>agent | error</code> </p> </li> <li> <p>RDS for MySQL - <code>audit | error | general | slowquery</code> </p> </li> <li> <p>RDS for Oracle - <code>alert | audit | listener | trace | oemagent</code> </p> </li> <li> <p>RDS for PostgreSQL - <code>postgresql | upgrade</code> </p> </li> </ul>
		 * @param {Array<string>} ProcessorFeatures <p>The number of CPU cores and the number of threads per core for the DB instance class of the DB instance.</p> <p>This setting doesn't apply to Amazon Aurora or RDS Custom DB instances.</p>
		 * @param {boolean} DeletionProtection <p>Specifies whether the DB instance has deletion protection enabled. The database can't be deleted when deletion protection is enabled. By default, deletion protection isn't enabled. For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_DeleteInstance.html"> Deleting a DB Instance</a>.</p> <p>This setting doesn't apply to Amazon Aurora DB instances. You can enable or disable deletion protection for the DB cluster. For more information, see <code>CreateDBCluster</code>. DB instances in a DB cluster can be deleted even when deletion protection is enabled for the DB cluster.</p>
		 * @param {number} MaxAllocatedStorage <p>The upper limit in gibibytes (GiB) to which Amazon RDS can automatically scale the storage of the DB instance.</p> <p>For more information about this setting, including limitations that apply to it, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_PIOPS.StorageTypes.html#USER_PIOPS.Autoscaling"> Managing capacity automatically with Amazon RDS storage autoscaling</a> in the <i>Amazon RDS User Guide</i>.</p> <p>This setting doesn't apply to the following DB instances:</p> <ul> <li> <p>Amazon Aurora (Storage is managed by the DB cluster.)</p> </li> <li> <p>RDS Custom</p> </li> </ul>
		 * @param {boolean} EnableCustomerOwnedIp <p>Specifies whether to enable a customer-owned IP address (CoIP) for an RDS on Outposts DB instance.</p> <p>A <i>CoIP</i> provides local or external connectivity to resources in your Outpost subnets through your on-premises network. For some use cases, a CoIP can provide lower latency for connections to the DB instance from outside of its virtual private cloud (VPC) on your local network.</p> <p>For more information about RDS on Outposts, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/rds-on-outposts.html">Working with Amazon RDS on Amazon Web Services Outposts</a> in the <i>Amazon RDS User Guide</i>.</p> <p>For more information about CoIPs, see <a href="https://docs.aws.amazon.com/outposts/latest/userguide/routing.html#ip-addressing">Customer-owned IP addresses</a> in the <i>Amazon Web Services Outposts User Guide</i>.</p>
		 * @param {string} CustomIamInstanceProfile <p>The instance profile associated with the underlying Amazon EC2 instance of an RDS Custom DB instance.</p> <p>This setting is required for RDS Custom.</p> <p>Constraints:</p> <ul> <li> <p>The profile must exist in your account.</p> </li> <li> <p>The profile must have an IAM role that Amazon EC2 has permissions to assume.</p> </li> <li> <p>The instance profile name and the associated IAM role name must start with the prefix <code>AWSRDSCustom</code>.</p> </li> </ul> <p>For the list of permissions required for the IAM role, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/custom-setup-orcl.html#custom-setup-orcl.iam-vpc"> Configure IAM and your VPC</a> in the <i>Amazon RDS User Guide</i>.</p>
		 * @param {string} BackupTarget <p>The location for storing automated backups and manual snapshots.</p> <p>Valie Values:</p> <ul> <li> <p> <code>outposts</code> (Amazon Web Services Outposts)</p> </li> <li> <p> <code>region</code> (Amazon Web Services Region)</p> </li> </ul> <p>Default: <code>region</code> </p> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/rds-on-outposts.html">Working with Amazon RDS on Amazon Web Services Outposts</a> in the <i>Amazon RDS User Guide</i>.</p>
		 * @param {string} NetworkType <p>The network type of the DB instance.</p> <p>The network type is determined by the <code>DBSubnetGroup</code> specified for the DB instance. A <code>DBSubnetGroup</code> can support only the IPv4 protocol or the IPv4 and the IPv6 protocols (<code>DUAL</code>).</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_VPC.WorkingWithRDSInstanceinaVPC.html"> Working with a DB instance in a VPC</a> in the <i>Amazon RDS User Guide.</i> </p> <p>Valid Values: <code>IPV4 | DUAL</code> </p>
		 * @param {number} StorageThroughput <p>The storage throughput value for the DB instance.</p> <p>This setting applies only to the <code>gp3</code> storage type.</p> <p>This setting doesn't apply to Amazon Aurora or RDS Custom DB instances.</p>
		 * @param {boolean} ManageMasterUserPassword <p>Specifies whether to manage the master user password with Amazon Web Services Secrets Manager.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/rds-secrets-manager.html">Password management with Amazon Web Services Secrets Manager</a> in the <i>Amazon RDS User Guide.</i> </p> <p>Constraints:</p> <ul> <li> <p>Can't manage the master user password with Amazon Web Services Secrets Manager if <code>MasterUserPassword</code> is specified.</p> </li> </ul>
		 * @param {string} MasterUserSecretKmsKeyId <p>The Amazon Web Services KMS key identifier to encrypt a secret that is automatically generated and managed in Amazon Web Services Secrets Manager.</p> <p>This setting is valid only if the master user password is managed by RDS in Amazon Web Services Secrets Manager for the DB instance.</p> <p>The Amazon Web Services KMS key identifier is the key ARN, key ID, alias ARN, or alias name for the KMS key. To use a KMS key in a different Amazon Web Services account, specify the key ARN or alias ARN.</p> <p>If you don't specify <code>MasterUserSecretKmsKeyId</code>, then the <code>aws/secretsmanager</code> KMS key is used to encrypt the secret. If the secret is in a different Amazon Web Services account, then you can't use the <code>aws/secretsmanager</code> KMS key to encrypt the secret, and you must use a customer managed KMS key.</p> <p>There is a default KMS key for your Amazon Web Services account. Your Amazon Web Services account has a different default KMS key for each Amazon Web Services Region.</p>
		 * @param {string} CACertificateIdentifier <p>The CA certificate identifier to use for the DB instance's server certificate.</p> <p>This setting doesn't apply to RDS Custom DB instances.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/UsingWithRDS.SSL.html">Using SSL/TLS to encrypt a connection to a DB instance</a> in the <i>Amazon RDS User Guide</i> and <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/UsingWithRDS.SSL.html"> Using SSL/TLS to encrypt a connection to a DB cluster</a> in the <i>Amazon Aurora User Guide</i>.</p>
		 * @param {string} DBSystemId The Oracle system identifier (SID), which is the name of the Oracle database instance that manages your database files. In this context, the term "Oracle database instance" refers exclusively to the system global area (SGA) and Oracle background processes. If you don't specify a SID, the value defaults to <code>RDSCDB</code>. The Oracle SID is also the name of your CDB.
		 * @return {void} Success
		 */
		GET_CreateDBInstance(DBName: string | null | undefined, DBInstanceIdentifier: string, AllocatedStorage: number | null | undefined, DBInstanceClass: string, Engine: string, MasterUsername: string | null | undefined, MasterUserPassword: string | null | undefined, DBSecurityGroups: Array<string> | null | undefined, VpcSecurityGroupIds: Array<string> | null | undefined, AvailabilityZone: string | null | undefined, DBSubnetGroupName: string | null | undefined, PreferredMaintenanceWindow: string | null | undefined, DBParameterGroupName: string | null | undefined, BackupRetentionPeriod: number | null | undefined, PreferredBackupWindow: string | null | undefined, Port: number | null | undefined, MultiAZ: boolean | null | undefined, EngineVersion: string | null | undefined, AutoMinorVersionUpgrade: boolean | null | undefined, LicenseModel: string | null | undefined, Iops: number | null | undefined, OptionGroupName: string | null | undefined, CharacterSetName: string | null | undefined, NcharCharacterSetName: string | null | undefined, PubliclyAccessible: boolean | null | undefined, Tags: Array<string> | null | undefined, DBClusterIdentifier: string | null | undefined, StorageType: string | null | undefined, TdeCredentialArn: string | null | undefined, TdeCredentialPassword: string | null | undefined, StorageEncrypted: boolean | null | undefined, KmsKeyId: string | null | undefined, Domain: string | null | undefined, DomainFqdn: string | null | undefined, DomainOu: string | null | undefined, DomainAuthSecretArn: string | null | undefined, DomainDnsIps: Array<string> | null | undefined, CopyTagsToSnapshot: boolean | null | undefined, MonitoringInterval: number | null | undefined, MonitoringRoleArn: string | null | undefined, DomainIAMRoleName: string | null | undefined, PromotionTier: number | null | undefined, Timezone: string | null | undefined, EnableIAMDatabaseAuthentication: boolean | null | undefined, EnablePerformanceInsights: boolean | null | undefined, PerformanceInsightsKMSKeyId: string | null | undefined, PerformanceInsightsRetentionPeriod: number | null | undefined, EnableCloudwatchLogsExports: Array<string> | null | undefined, ProcessorFeatures: Array<string> | null | undefined, DeletionProtection: boolean | null | undefined, MaxAllocatedStorage: number | null | undefined, EnableCustomerOwnedIp: boolean | null | undefined, CustomIamInstanceProfile: string | null | undefined, BackupTarget: string | null | undefined, NetworkType: string | null | undefined, StorageThroughput: number | null | undefined, ManageMasterUserPassword: boolean | null | undefined, MasterUserSecretKmsKeyId: string | null | undefined, CACertificateIdentifier: string | null | undefined, DBSystemId: string | null | undefined, Action: GET_CreateDBInstanceAction, Version: GET_AddRoleToDBClusterVersion): Observable<HttpResponse<string>> {
			return this.http.get(this.baseUri + '#Action=CreateDBInstance?DBName=' + (DBName == null ? '' : encodeURIComponent(DBName)) + '&DBInstanceIdentifier=' + (DBInstanceIdentifier == null ? '' : encodeURIComponent(DBInstanceIdentifier)) + '&AllocatedStorage=' + AllocatedStorage + '&DBInstanceClass=' + (DBInstanceClass == null ? '' : encodeURIComponent(DBInstanceClass)) + '&Engine=' + (Engine == null ? '' : encodeURIComponent(Engine)) + '&MasterUsername=' + (MasterUsername == null ? '' : encodeURIComponent(MasterUsername)) + '&MasterUserPassword=' + (MasterUserPassword == null ? '' : encodeURIComponent(MasterUserPassword)) + '&' + DBSecurityGroups?.map(z => `DBSecurityGroups=${encodeURIComponent(z)}`).join('&') + '&' + VpcSecurityGroupIds?.map(z => `VpcSecurityGroupIds=${encodeURIComponent(z)}`).join('&') + '&AvailabilityZone=' + (AvailabilityZone == null ? '' : encodeURIComponent(AvailabilityZone)) + '&DBSubnetGroupName=' + (DBSubnetGroupName == null ? '' : encodeURIComponent(DBSubnetGroupName)) + '&PreferredMaintenanceWindow=' + (PreferredMaintenanceWindow == null ? '' : encodeURIComponent(PreferredMaintenanceWindow)) + '&DBParameterGroupName=' + (DBParameterGroupName == null ? '' : encodeURIComponent(DBParameterGroupName)) + '&BackupRetentionPeriod=' + BackupRetentionPeriod + '&PreferredBackupWindow=' + (PreferredBackupWindow == null ? '' : encodeURIComponent(PreferredBackupWindow)) + '&Port=' + Port + '&MultiAZ=' + MultiAZ + '&EngineVersion=' + (EngineVersion == null ? '' : encodeURIComponent(EngineVersion)) + '&AutoMinorVersionUpgrade=' + AutoMinorVersionUpgrade + '&LicenseModel=' + (LicenseModel == null ? '' : encodeURIComponent(LicenseModel)) + '&Iops=' + Iops + '&OptionGroupName=' + (OptionGroupName == null ? '' : encodeURIComponent(OptionGroupName)) + '&CharacterSetName=' + (CharacterSetName == null ? '' : encodeURIComponent(CharacterSetName)) + '&NcharCharacterSetName=' + (NcharCharacterSetName == null ? '' : encodeURIComponent(NcharCharacterSetName)) + '&PubliclyAccessible=' + PubliclyAccessible + '&' + Tags?.map(z => `Tags=${encodeURIComponent(z)}`).join('&') + '&DBClusterIdentifier=' + (DBClusterIdentifier == null ? '' : encodeURIComponent(DBClusterIdentifier)) + '&StorageType=' + (StorageType == null ? '' : encodeURIComponent(StorageType)) + '&TdeCredentialArn=' + (TdeCredentialArn == null ? '' : encodeURIComponent(TdeCredentialArn)) + '&TdeCredentialPassword=' + (TdeCredentialPassword == null ? '' : encodeURIComponent(TdeCredentialPassword)) + '&StorageEncrypted=' + StorageEncrypted + '&KmsKeyId=' + (KmsKeyId == null ? '' : encodeURIComponent(KmsKeyId)) + '&Domain=' + (Domain == null ? '' : encodeURIComponent(Domain)) + '&DomainFqdn=' + (DomainFqdn == null ? '' : encodeURIComponent(DomainFqdn)) + '&DomainOu=' + (DomainOu == null ? '' : encodeURIComponent(DomainOu)) + '&DomainAuthSecretArn=' + (DomainAuthSecretArn == null ? '' : encodeURIComponent(DomainAuthSecretArn)) + '&' + DomainDnsIps?.map(z => `DomainDnsIps=${encodeURIComponent(z)}`).join('&') + '&CopyTagsToSnapshot=' + CopyTagsToSnapshot + '&MonitoringInterval=' + MonitoringInterval + '&MonitoringRoleArn=' + (MonitoringRoleArn == null ? '' : encodeURIComponent(MonitoringRoleArn)) + '&DomainIAMRoleName=' + (DomainIAMRoleName == null ? '' : encodeURIComponent(DomainIAMRoleName)) + '&PromotionTier=' + PromotionTier + '&Timezone=' + (Timezone == null ? '' : encodeURIComponent(Timezone)) + '&EnableIAMDatabaseAuthentication=' + EnableIAMDatabaseAuthentication + '&EnablePerformanceInsights=' + EnablePerformanceInsights + '&PerformanceInsightsKMSKeyId=' + (PerformanceInsightsKMSKeyId == null ? '' : encodeURIComponent(PerformanceInsightsKMSKeyId)) + '&PerformanceInsightsRetentionPeriod=' + PerformanceInsightsRetentionPeriod + '&' + EnableCloudwatchLogsExports?.map(z => `EnableCloudwatchLogsExports=${encodeURIComponent(z)}`).join('&') + '&' + ProcessorFeatures?.map(z => `ProcessorFeatures=${encodeURIComponent(z)}`).join('&') + '&DeletionProtection=' + DeletionProtection + '&MaxAllocatedStorage=' + MaxAllocatedStorage + '&EnableCustomerOwnedIp=' + EnableCustomerOwnedIp + '&CustomIamInstanceProfile=' + (CustomIamInstanceProfile == null ? '' : encodeURIComponent(CustomIamInstanceProfile)) + '&BackupTarget=' + (BackupTarget == null ? '' : encodeURIComponent(BackupTarget)) + '&NetworkType=' + (NetworkType == null ? '' : encodeURIComponent(NetworkType)) + '&StorageThroughput=' + StorageThroughput + '&ManageMasterUserPassword=' + ManageMasterUserPassword + '&MasterUserSecretKmsKeyId=' + (MasterUserSecretKmsKeyId == null ? '' : encodeURIComponent(MasterUserSecretKmsKeyId)) + '&CACertificateIdentifier=' + (CACertificateIdentifier == null ? '' : encodeURIComponent(CACertificateIdentifier)) + '&DBSystemId=' + (DBSystemId == null ? '' : encodeURIComponent(DBSystemId)) + '&Action=' + Action + '&Version=' + Version, { observe: 'response', responseType: 'text' });
		}

		/**
		 * <p>Creates a new DB instance that acts as a read replica for an existing source DB instance or Multi-AZ DB cluster. You can create a read replica for a DB instance running MySQL, MariaDB, Oracle, PostgreSQL, or SQL Server. You can create a read replica for a Multi-AZ DB cluster running MySQL or PostgreSQL. For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_ReadRepl.html">Working with read replicas</a> and <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/multi-az-db-clusters-concepts.html#multi-az-db-clusters-migrating-to-instance-with-read-replica">Migrating from a Multi-AZ DB cluster to a DB instance using a read replica</a> in the <i>Amazon RDS User Guide</i>.</p> <p>Amazon Aurora doesn't support this operation. Call the <code>CreateDBInstance</code> operation to create a DB instance for an Aurora DB cluster.</p> <p>All read replica DB instances are created with backups disabled. All other attributes (including DB security groups and DB parameter groups) are inherited from the source DB instance or cluster, except as specified.</p> <important> <p>Your source DB instance or cluster must have backup retention enabled.</p> </important>
		 * Get #Action=CreateDBInstanceReadReplica
		 * @param {string} DBInstanceIdentifier The DB instance identifier of the read replica. This identifier is the unique key that identifies a DB instance. This parameter is stored as a lowercase string.
		 * @param {string} SourceDBInstanceIdentifier <p>The identifier of the DB instance that will act as the source for the read replica. Each DB instance can have up to 15 read replicas, with the exception of Oracle and SQL Server, which can have up to five.</p> <p>Constraints:</p> <ul> <li> <p>Must be the identifier of an existing MySQL, MariaDB, Oracle, PostgreSQL, or SQL Server DB instance.</p> </li> <li> <p>Can't be specified if the <code>SourceDBClusterIdentifier</code> parameter is also specified.</p> </li> <li> <p>For the limitations of Oracle read replicas, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/oracle-read-replicas.limitations.html#oracle-read-replicas.limitations.versions-and-licenses">Version and licensing considerations for RDS for Oracle replicas</a> in the <i>Amazon RDS User Guide</i>.</p> </li> <li> <p>For the limitations of SQL Server read replicas, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/SQLServer.ReadReplicas.html#SQLServer.ReadReplicas.Limitations">Read replica limitations with SQL Server</a> in the <i>Amazon RDS User Guide</i>.</p> </li> <li> <p>The specified DB instance must have automatic backups enabled, that is, its backup retention period must be greater than 0.</p> </li> <li> <p>If the source DB instance is in the same Amazon Web Services Region as the read replica, specify a valid DB instance identifier.</p> </li> <li> <p>If the source DB instance is in a different Amazon Web Services Region from the read replica, specify a valid DB instance ARN. For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Tagging.ARN.html#USER_Tagging.ARN.Constructing">Constructing an ARN for Amazon RDS</a> in the <i>Amazon RDS User Guide</i>. This doesn't apply to SQL Server or RDS Custom, which don't support cross-Region replicas.</p> </li> </ul>
		 * @param {string} DBInstanceClass <p>The compute and memory capacity of the read replica, for example db.m4.large. Not all DB instance classes are available in all Amazon Web Services Regions, or for all database engines. For the full list of DB instance classes, and availability for your engine, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.DBInstanceClass.html">DB Instance Class</a> in the <i>Amazon RDS User Guide</i>.</p> <p>Default: Inherits from the source DB instance.</p>
		 * @param {string} AvailabilityZone <p>The Availability Zone (AZ) where the read replica will be created.</p> <p>Default: A random, system-chosen Availability Zone in the endpoint's Amazon Web Services Region.</p> <p>Example: <code>us-east-1d</code> </p>
		 * @param {number} Port <p>The port number that the DB instance uses for connections.</p> <p>Default: Inherits from the source DB instance</p> <p>Valid Values: <code>1150-65535</code> </p>
		 * @param {boolean} MultiAZ <p>A value that indicates whether the read replica is in a Multi-AZ deployment.</p> <p>You can create a read replica as a Multi-AZ DB instance. RDS creates a standby of your replica in another Availability Zone for failover support for the replica. Creating your read replica as a Multi-AZ DB instance is independent of whether the source is a Multi-AZ DB instance or a Multi-AZ DB cluster.</p> <p>This setting doesn't apply to RDS Custom.</p>
		 * @param {boolean} AutoMinorVersionUpgrade <p>A value that indicates whether minor engine upgrades are applied automatically to the read replica during the maintenance window.</p> <p>This setting doesn't apply to RDS Custom.</p> <p>Default: Inherits from the source DB instance</p>
		 * @param {number} Iops The amount of Provisioned IOPS (input/output operations per second) to be initially allocated for the DB instance.
		 * @param {string} OptionGroupName <p>The option group the DB instance is associated with. If omitted, the option group associated with the source instance or cluster is used.</p> <note> <p>For SQL Server, you must use the option group associated with the source.</p> </note> <p>This setting doesn't apply to RDS Custom.</p>
		 * @param {string} DBParameterGroupName <p>The name of the DB parameter group to associate with this DB instance.</p> <p>If you do not specify a value for <code>DBParameterGroupName</code>, then Amazon RDS uses the <code>DBParameterGroup</code> of source DB instance for a same Region read replica, or the default <code>DBParameterGroup</code> for the specified DB engine for a cross-Region read replica.</p> <p>Specifying a parameter group for this operation is only supported for MySQL and Oracle DB instances. It isn't supported for RDS Custom.</p> <p>Constraints:</p> <ul> <li> <p>Must be 1 to 255 letters, numbers, or hyphens.</p> </li> <li> <p>First character must be a letter</p> </li> <li> <p>Can't end with a hyphen or contain two consecutive hyphens</p> </li> </ul>
		 * @param {boolean} PubliclyAccessible <p>A value that indicates whether the DB instance is publicly accessible.</p> <p>When the DB cluster is publicly accessible, its Domain Name System (DNS) endpoint resolves to the private IP address from within the DB cluster's virtual private cloud (VPC). It resolves to the public IP address from outside of the DB cluster's VPC. Access to the DB cluster is ultimately controlled by the security group it uses. That public access isn't permitted if the security group assigned to the DB cluster doesn't permit it.</p> <p>When the DB instance isn't publicly accessible, it is an internal DB instance with a DNS name that resolves to a private IP address.</p> <p>For more information, see <a>CreateDBInstance</a>.</p>
		 * @param {string} DBSubnetGroupName <p>Specifies a DB subnet group for the DB instance. The new DB instance is created in the VPC associated with the DB subnet group. If no DB subnet group is specified, then the new DB instance isn't created in a VPC.</p> <p>Constraints:</p> <ul> <li> <p>If supplied, must match the name of an existing DBSubnetGroup.</p> </li> <li> <p>The specified DB subnet group must be in the same Amazon Web Services Region in which the operation is running.</p> </li> <li> <p>All read replicas in one Amazon Web Services Region that are created from the same source DB instance must either:&gt;</p> <ul> <li> <p>Specify DB subnet groups from the same VPC. All these read replicas are created in the same VPC.</p> </li> <li> <p>Not specify a DB subnet group. All these read replicas are created outside of any VPC.</p> </li> </ul> </li> </ul> <p>Example: <code>mydbsubnetgroup</code> </p>
		 * @param {Array<string>} VpcSecurityGroupIds <p>A list of Amazon EC2 VPC security groups to associate with the read replica.</p> <p>This setting doesn't apply to RDS Custom.</p> <p>Default: The default EC2 VPC security group for the DB subnet group's VPC.</p>
		 * @param {string} StorageType <p>Specifies the storage type to be associated with the read replica.</p> <p>Valid values: <code>gp2 | gp3 | io1 | standard</code> </p> <p>If you specify <code>io1</code> or <code>gp3</code>, you must also include a value for the <code>Iops</code> parameter.</p> <p>Default: <code>io1</code> if the <code>Iops</code> parameter is specified, otherwise <code>gp2</code> </p>
		 * @param {boolean} CopyTagsToSnapshot A value that indicates whether to copy all tags from the read replica to snapshots of the read replica. By default, tags are not copied.
		 * @param {number} MonitoringInterval <p>The interval, in seconds, between points when Enhanced Monitoring metrics are collected for the read replica. To disable collecting Enhanced Monitoring metrics, specify 0. The default is 0.</p> <p>If <code>MonitoringRoleArn</code> is specified, then you must also set <code>MonitoringInterval</code> to a value other than 0.</p> <p>This setting doesn't apply to RDS Custom.</p> <p>Valid Values: <code>0, 1, 5, 10, 15, 30, 60</code> </p>
		 * @param {string} MonitoringRoleArn <p>The ARN for the IAM role that permits RDS to send enhanced monitoring metrics to Amazon CloudWatch Logs. For example, <code>arn:aws:iam:123456789012:role/emaccess</code>. For information on creating a monitoring role, go to <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Monitoring.html#USER_Monitoring.OS.IAMRole">To create an IAM role for Amazon RDS Enhanced Monitoring</a> in the <i>Amazon RDS User Guide</i>.</p> <p>If <code>MonitoringInterval</code> is set to a value other than 0, then you must supply a <code>MonitoringRoleArn</code> value.</p> <p>This setting doesn't apply to RDS Custom.</p>
		 * @param {string} KmsKeyId <p>The Amazon Web Services KMS key identifier for an encrypted read replica.</p> <p>The Amazon Web Services KMS key identifier is the key ARN, key ID, alias ARN, or alias name for the KMS key.</p> <p>If you create an encrypted read replica in the same Amazon Web Services Region as the source DB instance or Multi-AZ DB cluster, don't specify a value for this parameter. A read replica in the same Amazon Web Services Region is always encrypted with the same KMS key as the source DB instance or cluster.</p> <p>If you create an encrypted read replica in a different Amazon Web Services Region, then you must specify a KMS key identifier for the destination Amazon Web Services Region. KMS keys are specific to the Amazon Web Services Region that they are created in, and you can't use KMS keys from one Amazon Web Services Region in another Amazon Web Services Region.</p> <p>You can't create an encrypted read replica from an unencrypted DB instance or Multi-AZ DB cluster.</p> <p>This setting doesn't apply to RDS Custom, which uses the same KMS key as the primary replica.</p>
		 * @param {string} PreSignedUrl <p>When you are creating a read replica from one Amazon Web Services GovCloud (US) Region to another or from one China Amazon Web Services Region to another, the URL that contains a Signature Version 4 signed request for the <code>CreateDBInstanceReadReplica</code> API operation in the source Amazon Web Services Region that contains the source DB instance.</p> <p>This setting applies only to Amazon Web Services GovCloud (US) Regions and China Amazon Web Services Regions. It's ignored in other Amazon Web Services Regions.</p> <p>This setting applies only when replicating from a source DB <i>instance</i>. Source DB clusters aren't supported in Amazon Web Services GovCloud (US) Regions and China Amazon Web Services Regions.</p> <p>You must specify this parameter when you create an encrypted read replica from another Amazon Web Services Region by using the Amazon RDS API. Don't specify <code>PreSignedUrl</code> when you are creating an encrypted read replica in the same Amazon Web Services Region.</p> <p>The presigned URL must be a valid request for the <code>CreateDBInstanceReadReplica</code> API operation that can run in the source Amazon Web Services Region that contains the encrypted source DB instance. The presigned URL request must contain the following parameter values:</p> <ul> <li> <p> <code>DestinationRegion</code> - The Amazon Web Services Region that the encrypted read replica is created in. This Amazon Web Services Region is the same one where the <code>CreateDBInstanceReadReplica</code> operation is called that contains this presigned URL.</p> <p>For example, if you create an encrypted DB instance in the us-west-1 Amazon Web Services Region, from a source DB instance in the us-east-2 Amazon Web Services Region, then you call the <code>CreateDBInstanceReadReplica</code> operation in the us-east-1 Amazon Web Services Region and provide a presigned URL that contains a call to the <code>CreateDBInstanceReadReplica</code> operation in the us-west-2 Amazon Web Services Region. For this example, the <code>DestinationRegion</code> in the presigned URL must be set to the us-east-1 Amazon Web Services Region.</p> </li> <li> <p> <code>KmsKeyId</code> - The KMS key identifier for the key to use to encrypt the read replica in the destination Amazon Web Services Region. This is the same identifier for both the <code>CreateDBInstanceReadReplica</code> operation that is called in the destination Amazon Web Services Region, and the operation contained in the presigned URL.</p> </li> <li> <p> <code>SourceDBInstanceIdentifier</code> - The DB instance identifier for the encrypted DB instance to be replicated. This identifier must be in the Amazon Resource Name (ARN) format for the source Amazon Web Services Region. For example, if you are creating an encrypted read replica from a DB instance in the us-west-2 Amazon Web Services Region, then your <code>SourceDBInstanceIdentifier</code> looks like the following example: <code>arn:aws:rds:us-west-2:123456789012:instance:mysql-instance1-20161115</code>.</p> </li> </ul> <p>To learn how to generate a Signature Version 4 signed request, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/sigv4-query-string-auth.html">Authenticating Requests: Using Query Parameters (Amazon Web Services Signature Version 4)</a> and <a href="https://docs.aws.amazon.com/general/latest/gr/signature-version-4.html">Signature Version 4 Signing Process</a>.</p> <note> <p>If you are using an Amazon Web Services SDK tool or the CLI, you can specify <code>SourceRegion</code> (or <code>--source-region</code> for the CLI) instead of specifying <code>PreSignedUrl</code> manually. Specifying <code>SourceRegion</code> autogenerates a presigned URL that is a valid request for the operation that can run in the source Amazon Web Services Region.</p> <p> <code>SourceRegion</code> isn't supported for SQL Server, because Amazon RDS for SQL Server doesn't support cross-Region read replicas.</p> </note> <p>This setting doesn't apply to RDS Custom.</p><note><p>If you supply a value for this operation's <code>SourceRegion</code> parameter, a pre-signed URL will be calculated on your behalf.</p></note>
		 * @param {boolean} EnableIAMDatabaseAuthentication <p>A value that indicates whether to enable mapping of Amazon Web Services Identity and Access Management (IAM) accounts to database accounts. By default, mapping isn't enabled.</p> <p>For more information about IAM database authentication, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/UsingWithRDS.IAMDBAuth.html"> IAM Database Authentication for MySQL and PostgreSQL</a> in the <i>Amazon RDS User Guide</i>.</p> <p>This setting doesn't apply to RDS Custom.</p>
		 * @param {boolean} EnablePerformanceInsights <p>A value that indicates whether to enable Performance Insights for the read replica.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_PerfInsights.html">Using Amazon Performance Insights</a> in the <i>Amazon RDS User Guide</i>.</p> <p>This setting doesn't apply to RDS Custom.</p>
		 * @param {string} PerformanceInsightsKMSKeyId <p>The Amazon Web Services KMS key identifier for encryption of Performance Insights data.</p> <p>The Amazon Web Services KMS key identifier is the key ARN, key ID, alias ARN, or alias name for the KMS key.</p> <p>If you do not specify a value for <code>PerformanceInsightsKMSKeyId</code>, then Amazon RDS uses your default KMS key. There is a default KMS key for your Amazon Web Services account. Your Amazon Web Services account has a different default KMS key for each Amazon Web Services Region.</p> <p>This setting doesn't apply to RDS Custom.</p>
		 * @param {number} PerformanceInsightsRetentionPeriod <p>The number of days to retain Performance Insights data. The default is 7 days. The following values are valid:</p> <ul> <li> <p>7</p> </li> <li> <p> <i>month</i> * 31, where <i>month</i> is a number of months from 1-23</p> </li> <li> <p>731</p> </li> </ul> <p>For example, the following values are valid:</p> <ul> <li> <p>93 (3 months * 31)</p> </li> <li> <p>341 (11 months * 31)</p> </li> <li> <p>589 (19 months * 31)</p> </li> <li> <p>731</p> </li> </ul> <p>If you specify a retention period such as 94, which isn't a valid value, RDS issues an error.</p> <p>This setting doesn't apply to RDS Custom.</p>
		 * @param {Array<string>} EnableCloudwatchLogsExports <p>The list of logs that the new DB instance is to export to CloudWatch Logs. The values in the list depend on the DB engine being used. For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_LogAccess.html#USER_LogAccess.Procedural.UploadtoCloudWatch">Publishing Database Logs to Amazon CloudWatch Logs </a> in the <i>Amazon RDS User Guide</i>.</p> <p>This setting doesn't apply to RDS Custom.</p>
		 * @param {Array<string>} ProcessorFeatures <p>The number of CPU cores and the number of threads per core for the DB instance class of the DB instance.</p> <p>This setting doesn't apply to RDS Custom.</p>
		 * @param {boolean} UseDefaultProcessorFeatures <p>A value that indicates whether the DB instance class of the DB instance uses its default processor features.</p> <p>This setting doesn't apply to RDS Custom.</p>
		 * @param {boolean} DeletionProtection A value that indicates whether the DB instance has deletion protection enabled. The database can't be deleted when deletion protection is enabled. By default, deletion protection isn't enabled. For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_DeleteInstance.html"> Deleting a DB Instance</a>.
		 * @param {string} Domain <p>The Active Directory directory ID to create the DB instance in. Currently, only MySQL, Microsoft SQL Server, Oracle, and PostgreSQL DB instances can be created in an Active Directory Domain.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/kerberos-authentication.html"> Kerberos Authentication</a> in the <i>Amazon RDS User Guide</i>.</p> <p>This setting doesn't apply to RDS Custom.</p>
		 * @param {string} DomainIAMRoleName <p>The name of the IAM role to be used when making API calls to the Directory Service.</p> <p>This setting doesn't apply to RDS Custom.</p>
		 * @param {string} DomainFqdn <p>The fully qualified domain name (FQDN) of an Active Directory domain.</p> <p>Constraints:</p> <ul> <li> <p>Can't be longer than 64 characters.</p> </li> </ul> <p>Example: <code>mymanagedADtest.mymanagedAD.mydomain</code> </p>
		 * @param {string} DomainOu <p>The Active Directory organizational unit for your DB instance to join.</p> <p>Constraints:</p> <ul> <li> <p>Must be in the distinguished name format.</p> </li> <li> <p>Can't be longer than 64 characters.</p> </li> </ul> <p>Example: <code>OU=mymanagedADtestOU,DC=mymanagedADtest,DC=mymanagedAD,DC=mydomain</code> </p>
		 * @param {string} DomainAuthSecretArn <p>The ARN for the Secrets Manager secret with the credentials for the user joining the domain.</p> <p>Example: <code>arn:aws:secretsmanager:region:account-number:secret:myselfmanagedADtestsecret-123456</code> </p>
		 * @param {Array<string>} DomainDnsIps <p>The IPv4 DNS IP addresses of your primary and secondary Active Directory domain controllers.</p> <p>Constraints:</p> <ul> <li> <p>Two IP addresses must be provided. If there isn't a secondary domain controller, use the IP address of the primary domain controller for both entries in the list.</p> </li> </ul> <p>Example: <code>123.124.125.126,234.235.236.237</code> </p>
		 * @param {ReplicaMode} ReplicaMode <p>The open mode of the replica database: mounted or read-only.</p> <note> <p>This parameter is only supported for Oracle DB instances.</p> </note> <p>Mounted DB replicas are included in Oracle Database Enterprise Edition. The main use case for mounted replicas is cross-Region disaster recovery. The primary database doesn't use Active Data Guard to transmit information to the mounted replica. Because it doesn't accept user connections, a mounted replica can't serve a read-only workload.</p> <p>You can create a combination of mounted and read-only DB replicas for the same primary DB instance. For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/oracle-read-replicas.html">Working with Oracle Read Replicas for Amazon RDS</a> in the <i>Amazon RDS User Guide</i>.</p> <p>For RDS Custom, you must specify this parameter and set it to <code>mounted</code>. The value won't be set by default. After replica creation, you can manage the open mode manually.</p>
		 * @param {number} MaxAllocatedStorage <p>The upper limit in gibibytes (GiB) to which Amazon RDS can automatically scale the storage of the DB instance.</p> <p>For more information about this setting, including limitations that apply to it, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_PIOPS.StorageTypes.html#USER_PIOPS.Autoscaling"> Managing capacity automatically with Amazon RDS storage autoscaling</a> in the <i>Amazon RDS User Guide</i>.</p>
		 * @param {string} CustomIamInstanceProfile <p>The instance profile associated with the underlying Amazon EC2 instance of an RDS Custom DB instance. The instance profile must meet the following requirements:</p> <ul> <li> <p>The profile must exist in your account.</p> </li> <li> <p>The profile must have an IAM role that Amazon EC2 has permissions to assume.</p> </li> <li> <p>The instance profile name and the associated IAM role name must start with the prefix <code>AWSRDSCustom</code>.</p> </li> </ul> <p>For the list of permissions required for the IAM role, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/custom-setup-orcl.html#custom-setup-orcl.iam-vpc"> Configure IAM and your VPC</a> in the <i>Amazon RDS User Guide</i>.</p> <p>This setting is required for RDS Custom.</p>
		 * @param {string} NetworkType <p>The network type of the DB instance.</p> <p>Valid values:</p> <ul> <li> <p> <code>IPV4</code> </p> </li> <li> <p> <code>DUAL</code> </p> </li> </ul> <p>The network type is determined by the <code>DBSubnetGroup</code> specified for read replica. A <code>DBSubnetGroup</code> can support only the IPv4 protocol or the IPv4 and the IPv6 protocols (<code>DUAL</code>).</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_VPC.WorkingWithRDSInstanceinaVPC.html"> Working with a DB instance in a VPC</a> in the <i>Amazon RDS User Guide.</i> </p>
		 * @param {number} StorageThroughput <p>Specifies the storage throughput value for the read replica.</p> <p>This setting doesn't apply to RDS Custom or Amazon Aurora.</p>
		 * @param {boolean} EnableCustomerOwnedIp <p>A value that indicates whether to enable a customer-owned IP address (CoIP) for an RDS on Outposts read replica.</p> <p>A <i>CoIP</i> provides local or external connectivity to resources in your Outpost subnets through your on-premises network. For some use cases, a CoIP can provide lower latency for connections to the read replica from outside of its virtual private cloud (VPC) on your local network.</p> <p>For more information about RDS on Outposts, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/rds-on-outposts.html">Working with Amazon RDS on Amazon Web Services Outposts</a> in the <i>Amazon RDS User Guide</i>.</p> <p>For more information about CoIPs, see <a href="https://docs.aws.amazon.com/outposts/latest/userguide/routing.html#ip-addressing">Customer-owned IP addresses</a> in the <i>Amazon Web Services Outposts User Guide</i>.</p>
		 * @param {number} AllocatedStorage <p>The amount of storage (in gibibytes) to allocate initially for the read replica. Follow the allocation rules specified in <code>CreateDBInstance</code>.</p> <note> <p>Be sure to allocate enough storage for your read replica so that the create operation can succeed. You can also allocate additional storage for future growth.</p> </note>
		 * @param {string} SourceDBClusterIdentifier <p>The identifier of the Multi-AZ DB cluster that will act as the source for the read replica. Each DB cluster can have up to 15 read replicas.</p> <p>Constraints:</p> <ul> <li> <p>Must be the identifier of an existing Multi-AZ DB cluster.</p> </li> <li> <p>Can't be specified if the <code>SourceDBInstanceIdentifier</code> parameter is also specified.</p> </li> <li> <p>The specified DB cluster must have automatic backups enabled, that is, its backup retention period must be greater than 0.</p> </li> <li> <p>The source DB cluster must be in the same Amazon Web Services Region as the read replica. Cross-Region replication isn't supported.</p> </li> </ul>
		 * @param {string} SourceRegion The ID of the region that contains the source for the read replica.
		 * @return {void} Success
		 */
		GET_CreateDBInstanceReadReplica(DBInstanceIdentifier: string, SourceDBInstanceIdentifier: string | null | undefined, DBInstanceClass: string | null | undefined, AvailabilityZone: string | null | undefined, Port: number | null | undefined, MultiAZ: boolean | null | undefined, AutoMinorVersionUpgrade: boolean | null | undefined, Iops: number | null | undefined, OptionGroupName: string | null | undefined, DBParameterGroupName: string | null | undefined, PubliclyAccessible: boolean | null | undefined, Tags: Array<string> | null | undefined, DBSubnetGroupName: string | null | undefined, VpcSecurityGroupIds: Array<string> | null | undefined, StorageType: string | null | undefined, CopyTagsToSnapshot: boolean | null | undefined, MonitoringInterval: number | null | undefined, MonitoringRoleArn: string | null | undefined, KmsKeyId: string | null | undefined, PreSignedUrl: string | null | undefined, EnableIAMDatabaseAuthentication: boolean | null | undefined, EnablePerformanceInsights: boolean | null | undefined, PerformanceInsightsKMSKeyId: string | null | undefined, PerformanceInsightsRetentionPeriod: number | null | undefined, EnableCloudwatchLogsExports: Array<string> | null | undefined, ProcessorFeatures: Array<string> | null | undefined, UseDefaultProcessorFeatures: boolean | null | undefined, DeletionProtection: boolean | null | undefined, Domain: string | null | undefined, DomainIAMRoleName: string | null | undefined, DomainFqdn: string | null | undefined, DomainOu: string | null | undefined, DomainAuthSecretArn: string | null | undefined, DomainDnsIps: Array<string> | null | undefined, ReplicaMode: ReplicaMode | null | undefined, MaxAllocatedStorage: number | null | undefined, CustomIamInstanceProfile: string | null | undefined, NetworkType: string | null | undefined, StorageThroughput: number | null | undefined, EnableCustomerOwnedIp: boolean | null | undefined, AllocatedStorage: number | null | undefined, SourceDBClusterIdentifier: string | null | undefined, SourceRegion: string | null | undefined, Action: GET_CreateDBInstanceReadReplicaAction, Version: GET_AddRoleToDBClusterVersion): Observable<HttpResponse<string>> {
			return this.http.get(this.baseUri + '#Action=CreateDBInstanceReadReplica?DBInstanceIdentifier=' + (DBInstanceIdentifier == null ? '' : encodeURIComponent(DBInstanceIdentifier)) + '&SourceDBInstanceIdentifier=' + (SourceDBInstanceIdentifier == null ? '' : encodeURIComponent(SourceDBInstanceIdentifier)) + '&DBInstanceClass=' + (DBInstanceClass == null ? '' : encodeURIComponent(DBInstanceClass)) + '&AvailabilityZone=' + (AvailabilityZone == null ? '' : encodeURIComponent(AvailabilityZone)) + '&Port=' + Port + '&MultiAZ=' + MultiAZ + '&AutoMinorVersionUpgrade=' + AutoMinorVersionUpgrade + '&Iops=' + Iops + '&OptionGroupName=' + (OptionGroupName == null ? '' : encodeURIComponent(OptionGroupName)) + '&DBParameterGroupName=' + (DBParameterGroupName == null ? '' : encodeURIComponent(DBParameterGroupName)) + '&PubliclyAccessible=' + PubliclyAccessible + '&' + Tags?.map(z => `Tags=${encodeURIComponent(z)}`).join('&') + '&DBSubnetGroupName=' + (DBSubnetGroupName == null ? '' : encodeURIComponent(DBSubnetGroupName)) + '&' + VpcSecurityGroupIds?.map(z => `VpcSecurityGroupIds=${encodeURIComponent(z)}`).join('&') + '&StorageType=' + (StorageType == null ? '' : encodeURIComponent(StorageType)) + '&CopyTagsToSnapshot=' + CopyTagsToSnapshot + '&MonitoringInterval=' + MonitoringInterval + '&MonitoringRoleArn=' + (MonitoringRoleArn == null ? '' : encodeURIComponent(MonitoringRoleArn)) + '&KmsKeyId=' + (KmsKeyId == null ? '' : encodeURIComponent(KmsKeyId)) + '&PreSignedUrl=' + (PreSignedUrl == null ? '' : encodeURIComponent(PreSignedUrl)) + '&EnableIAMDatabaseAuthentication=' + EnableIAMDatabaseAuthentication + '&EnablePerformanceInsights=' + EnablePerformanceInsights + '&PerformanceInsightsKMSKeyId=' + (PerformanceInsightsKMSKeyId == null ? '' : encodeURIComponent(PerformanceInsightsKMSKeyId)) + '&PerformanceInsightsRetentionPeriod=' + PerformanceInsightsRetentionPeriod + '&' + EnableCloudwatchLogsExports?.map(z => `EnableCloudwatchLogsExports=${encodeURIComponent(z)}`).join('&') + '&' + ProcessorFeatures?.map(z => `ProcessorFeatures=${encodeURIComponent(z)}`).join('&') + '&UseDefaultProcessorFeatures=' + UseDefaultProcessorFeatures + '&DeletionProtection=' + DeletionProtection + '&Domain=' + (Domain == null ? '' : encodeURIComponent(Domain)) + '&DomainIAMRoleName=' + (DomainIAMRoleName == null ? '' : encodeURIComponent(DomainIAMRoleName)) + '&DomainFqdn=' + (DomainFqdn == null ? '' : encodeURIComponent(DomainFqdn)) + '&DomainOu=' + (DomainOu == null ? '' : encodeURIComponent(DomainOu)) + '&DomainAuthSecretArn=' + (DomainAuthSecretArn == null ? '' : encodeURIComponent(DomainAuthSecretArn)) + '&' + DomainDnsIps?.map(z => `DomainDnsIps=${encodeURIComponent(z)}`).join('&') + '&ReplicaMode=' + ReplicaMode + '&MaxAllocatedStorage=' + MaxAllocatedStorage + '&CustomIamInstanceProfile=' + (CustomIamInstanceProfile == null ? '' : encodeURIComponent(CustomIamInstanceProfile)) + '&NetworkType=' + (NetworkType == null ? '' : encodeURIComponent(NetworkType)) + '&StorageThroughput=' + StorageThroughput + '&EnableCustomerOwnedIp=' + EnableCustomerOwnedIp + '&AllocatedStorage=' + AllocatedStorage + '&SourceDBClusterIdentifier=' + (SourceDBClusterIdentifier == null ? '' : encodeURIComponent(SourceDBClusterIdentifier)) + '&SourceRegion=' + (SourceRegion == null ? '' : encodeURIComponent(SourceRegion)) + '&Action=' + Action + '&Version=' + Version, { observe: 'response', responseType: 'text' });
		}

		/**
		 * <p>Creates a new DB parameter group.</p> <p>A DB parameter group is initially created with the default parameters for the database engine used by the DB instance. To provide custom values for any of the parameters, you must modify the group after creating it using <code>ModifyDBParameterGroup</code>. Once you've created a DB parameter group, you need to associate it with your DB instance using <code>ModifyDBInstance</code>. When you associate a new DB parameter group with a running DB instance, you need to reboot the DB instance without failover for the new DB parameter group and associated settings to take effect.</p> <p>This command doesn't apply to RDS Custom.</p> <important> <p>After you create a DB parameter group, you should wait at least 5 minutes before creating your first DB instance that uses that DB parameter group as the default parameter group. This allows Amazon RDS to fully complete the create action before the parameter group is used as the default for a new DB instance. This is especially important for parameters that are critical when creating the default database for a DB instance, such as the character set for the default database defined by the <code>character_set_database</code> parameter. You can use the <i>Parameter Groups</i> option of the <a href="https://console.aws.amazon.com/rds/">Amazon RDS console</a> or the <i>DescribeDBParameters</i> command to verify that your DB parameter group has been created or modified.</p> </important>
		 * Get #Action=CreateDBParameterGroup
		 * @param {string} DBParameterGroupName <p>The name of the DB parameter group.</p> <p>Constraints:</p> <ul> <li> <p>Must be 1 to 255 letters, numbers, or hyphens.</p> </li> <li> <p>First character must be a letter</p> </li> <li> <p>Can't end with a hyphen or contain two consecutive hyphens</p> </li> </ul> <note> <p>This value is stored as a lowercase string.</p> </note>
		 * @param {string} DBParameterGroupFamily <p>The DB parameter group family name. A DB parameter group can be associated with one and only one DB parameter group family, and can be applied only to a DB instance running a database engine and engine version compatible with that DB parameter group family.</p> <p>To list all of the available parameter group families for a DB engine, use the following command:</p> <p> <code>aws rds describe-db-engine-versions --query "DBEngineVersions[].DBParameterGroupFamily" --engine &lt;engine&gt;</code> </p> <p>For example, to list all of the available parameter group families for the MySQL DB engine, use the following command:</p> <p> <code>aws rds describe-db-engine-versions --query "DBEngineVersions[].DBParameterGroupFamily" --engine mysql</code> </p> <note> <p>The output contains duplicates.</p> </note> <p>The following are the valid DB engine values:</p> <ul> <li> <p> <code>aurora-mysql</code> </p> </li> <li> <p> <code>aurora-postgresql</code> </p> </li> <li> <p> <code>mariadb</code> </p> </li> <li> <p> <code>mysql</code> </p> </li> <li> <p> <code>oracle-ee</code> </p> </li> <li> <p> <code>oracle-ee-cdb</code> </p> </li> <li> <p> <code>oracle-se2</code> </p> </li> <li> <p> <code>oracle-se2-cdb</code> </p> </li> <li> <p> <code>postgres</code> </p> </li> <li> <p> <code>sqlserver-ee</code> </p> </li> <li> <p> <code>sqlserver-se</code> </p> </li> <li> <p> <code>sqlserver-ex</code> </p> </li> <li> <p> <code>sqlserver-web</code> </p> </li> </ul>
		 * @param {string} Description The description for the DB parameter group.
		 * @param {Array<string>} Tags Tags to assign to the DB parameter group.
		 * @return {void} Success
		 */
		GET_CreateDBParameterGroup(DBParameterGroupName: string, DBParameterGroupFamily: string, Description: string, Tags: Array<string> | null | undefined, Action: GET_CreateDBParameterGroupAction, Version: GET_AddRoleToDBClusterVersion): Observable<HttpResponse<string>> {
			return this.http.get(this.baseUri + '#Action=CreateDBParameterGroup?DBParameterGroupName=' + (DBParameterGroupName == null ? '' : encodeURIComponent(DBParameterGroupName)) + '&DBParameterGroupFamily=' + (DBParameterGroupFamily == null ? '' : encodeURIComponent(DBParameterGroupFamily)) + '&Description=' + (Description == null ? '' : encodeURIComponent(Description)) + '&' + Tags?.map(z => `Tags=${encodeURIComponent(z)}`).join('&') + '&Action=' + Action + '&Version=' + Version, { observe: 'response', responseType: 'text' });
		}

		/**
		 * Creates a new DB proxy.
		 * Get #Action=CreateDBProxy
		 * @param {string} DBProxyName The identifier for the proxy. This name must be unique for all proxies owned by your Amazon Web Services account in the specified Amazon Web Services Region. An identifier must begin with a letter and must contain only ASCII letters, digits, and hyphens; it can't end with a hyphen or contain two consecutive hyphens.
		 * @param {EngineFamily} EngineFamily The kinds of databases that the proxy can connect to. This value determines which database network protocol the proxy recognizes when it interprets network traffic to and from the database. For Aurora MySQL, RDS for MariaDB, and RDS for MySQL databases, specify <code>MYSQL</code>. For Aurora PostgreSQL and RDS for PostgreSQL databases, specify <code>POSTGRESQL</code>. For RDS for Microsoft SQL Server, specify <code>SQLSERVER</code>.
		 * @param {Array<UserAuthConfig>} Auth The authorization mechanism that the proxy uses.
		 * @param {string} RoleArn The Amazon Resource Name (ARN) of the IAM role that the proxy uses to access secrets in Amazon Web Services Secrets Manager.
		 * @param {Array<string>} VpcSubnetIds One or more VPC subnet IDs to associate with the new proxy.
		 * @param {Array<string>} VpcSecurityGroupIds One or more VPC security group IDs to associate with the new proxy.
		 * @param {boolean} RequireTLS A Boolean parameter that specifies whether Transport Layer Security (TLS) encryption is required for connections to the proxy. By enabling this setting, you can enforce encrypted TLS connections to the proxy.
		 * @param {number} IdleClientTimeout The number of seconds that a connection to the proxy can be inactive before the proxy disconnects it. You can set this value higher or lower than the connection timeout limit for the associated database.
		 * @param {boolean} DebugLogging Whether the proxy includes detailed information about SQL statements in its logs. This information helps you to debug issues involving SQL behavior or the performance and scalability of the proxy connections. The debug information includes the text of SQL statements that you submit through the proxy. Thus, only enable this setting when needed for debugging, and only when you have security measures in place to safeguard any sensitive information that appears in the logs.
		 * @param {Array<string>} Tags An optional set of key-value pairs to associate arbitrary data of your choosing with the proxy.
		 * @return {void} Success
		 */
		GET_CreateDBProxy(DBProxyName: string, EngineFamily: EngineFamily, Auth: Array<UserAuthConfig>, RoleArn: string, VpcSubnetIds: Array<string>, VpcSecurityGroupIds: Array<string> | null | undefined, RequireTLS: boolean | null | undefined, IdleClientTimeout: number | null | undefined, DebugLogging: boolean | null | undefined, Tags: Array<string> | null | undefined, Action: GET_CreateDBProxyAction, Version: GET_AddRoleToDBClusterVersion): Observable<HttpResponse<string>> {
			return this.http.get(this.baseUri + '#Action=CreateDBProxy?DBProxyName=' + (DBProxyName == null ? '' : encodeURIComponent(DBProxyName)) + '&EngineFamily=' + EngineFamily + '&' + Auth.map(z => `Auth=${z}`).join('&') + '&RoleArn=' + (RoleArn == null ? '' : encodeURIComponent(RoleArn)) + '&' + VpcSubnetIds.map(z => `VpcSubnetIds=${encodeURIComponent(z)}`).join('&') + '&' + VpcSecurityGroupIds?.map(z => `VpcSecurityGroupIds=${encodeURIComponent(z)}`).join('&') + '&RequireTLS=' + RequireTLS + '&IdleClientTimeout=' + IdleClientTimeout + '&DebugLogging=' + DebugLogging + '&' + Tags?.map(z => `Tags=${encodeURIComponent(z)}`).join('&') + '&Action=' + Action + '&Version=' + Version, { observe: 'response', responseType: 'text' });
		}

		/**
		 * Creates a <code>DBProxyEndpoint</code>. Only applies to proxies that are associated with Aurora DB clusters. You can use DB proxy endpoints to specify read/write or read-only access to the DB cluster. You can also use DB proxy endpoints to access a DB proxy through a different VPC than the proxy's default VPC.
		 * Get #Action=CreateDBProxyEndpoint
		 * @param {string} DBProxyName The name of the DB proxy associated with the DB proxy endpoint that you create.
		 * @param {string} DBProxyEndpointName The name of the DB proxy endpoint to create.
		 * @param {Array<string>} VpcSubnetIds The VPC subnet IDs for the DB proxy endpoint that you create. You can specify a different set of subnet IDs than for the original DB proxy.
		 * @param {Array<string>} VpcSecurityGroupIds The VPC security group IDs for the DB proxy endpoint that you create. You can specify a different set of security group IDs than for the original DB proxy. The default is the default security group for the VPC.
		 * @param {DBProxyEndpointTargetRole} TargetRole A value that indicates whether the DB proxy endpoint can be used for read/write or read-only operations. The default is <code>READ_WRITE</code>. The only role that proxies for RDS for Microsoft SQL Server support is <code>READ_WRITE</code>.
		 * @return {void} Success
		 */
		GET_CreateDBProxyEndpoint(DBProxyName: string, DBProxyEndpointName: string, VpcSubnetIds: Array<string>, VpcSecurityGroupIds: Array<string> | null | undefined, TargetRole: DBProxyEndpointTargetRole | null | undefined, Tags: Array<string> | null | undefined, Action: GET_CreateDBProxyEndpointAction, Version: GET_AddRoleToDBClusterVersion): Observable<HttpResponse<string>> {
			return this.http.get(this.baseUri + '#Action=CreateDBProxyEndpoint?DBProxyName=' + (DBProxyName == null ? '' : encodeURIComponent(DBProxyName)) + '&DBProxyEndpointName=' + (DBProxyEndpointName == null ? '' : encodeURIComponent(DBProxyEndpointName)) + '&' + VpcSubnetIds.map(z => `VpcSubnetIds=${encodeURIComponent(z)}`).join('&') + '&' + VpcSecurityGroupIds?.map(z => `VpcSecurityGroupIds=${encodeURIComponent(z)}`).join('&') + '&TargetRole=' + TargetRole + '&' + Tags?.map(z => `Tags=${encodeURIComponent(z)}`).join('&') + '&Action=' + Action + '&Version=' + Version, { observe: 'response', responseType: 'text' });
		}

		/**
		 * <p>Creates a new DB security group. DB security groups control access to a DB instance.</p> <p>A DB security group controls access to EC2-Classic DB instances that are not in a VPC.</p> <note> <p>EC2-Classic was retired on August 15, 2022. If you haven't migrated from EC2-Classic to a VPC, we recommend that you migrate as soon as possible. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/vpc-migrate.html">Migrate from EC2-Classic to a VPC</a> in the <i>Amazon EC2 User Guide</i>, the blog <a href="http://aws.amazon.com/blogs/aws/ec2-classic-is-retiring-heres-how-to-prepare/">EC2-Classic Networking is Retiring – Here’s How to Prepare</a>, and <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_VPC.Non-VPC2VPC.html">Moving a DB instance not in a VPC into a VPC</a> in the <i>Amazon RDS User Guide</i>.</p> </note>
		 * Get #Action=CreateDBSecurityGroup
		 * @param {string} DBSecurityGroupName <p>The name for the DB security group. This value is stored as a lowercase string.</p> <p>Constraints:</p> <ul> <li> <p>Must be 1 to 255 letters, numbers, or hyphens.</p> </li> <li> <p>First character must be a letter</p> </li> <li> <p>Can't end with a hyphen or contain two consecutive hyphens</p> </li> <li> <p>Must not be "Default"</p> </li> </ul> <p>Example: <code>mysecuritygroup</code> </p>
		 * @param {string} DBSecurityGroupDescription The description for the DB security group.
		 * @param {Array<string>} Tags Tags to assign to the DB security group.
		 * @return {void} Success
		 */
		GET_CreateDBSecurityGroup(DBSecurityGroupName: string, DBSecurityGroupDescription: string, Tags: Array<string> | null | undefined, Action: GET_CreateDBSecurityGroupAction, Version: GET_AddRoleToDBClusterVersion): Observable<HttpResponse<string>> {
			return this.http.get(this.baseUri + '#Action=CreateDBSecurityGroup?DBSecurityGroupName=' + (DBSecurityGroupName == null ? '' : encodeURIComponent(DBSecurityGroupName)) + '&DBSecurityGroupDescription=' + (DBSecurityGroupDescription == null ? '' : encodeURIComponent(DBSecurityGroupDescription)) + '&' + Tags?.map(z => `Tags=${encodeURIComponent(z)}`).join('&') + '&Action=' + Action + '&Version=' + Version, { observe: 'response', responseType: 'text' });
		}

		/**
		 * Creates a snapshot of a DB instance. The source DB instance must be in the <code>available</code> or <code>storage-optimization</code> state.
		 * Get #Action=CreateDBSnapshot
		 * @param {string} DBSnapshotIdentifier <p>The identifier for the DB snapshot.</p> <p>Constraints:</p> <ul> <li> <p>Can't be null, empty, or blank</p> </li> <li> <p>Must contain from 1 to 255 letters, numbers, or hyphens</p> </li> <li> <p>First character must be a letter</p> </li> <li> <p>Can't end with a hyphen or contain two consecutive hyphens</p> </li> </ul> <p>Example: <code>my-snapshot-id</code> </p>
		 * @param {string} DBInstanceIdentifier <p>The identifier of the DB instance that you want to create the snapshot of.</p> <p>Constraints:</p> <ul> <li> <p>Must match the identifier of an existing DBInstance.</p> </li> </ul>
		 * @return {void} Success
		 */
		GET_CreateDBSnapshot(DBSnapshotIdentifier: string, DBInstanceIdentifier: string, Tags: Array<string> | null | undefined, Action: GET_CreateDBSnapshotAction, Version: GET_AddRoleToDBClusterVersion): Observable<HttpResponse<string>> {
			return this.http.get(this.baseUri + '#Action=CreateDBSnapshot?DBSnapshotIdentifier=' + (DBSnapshotIdentifier == null ? '' : encodeURIComponent(DBSnapshotIdentifier)) + '&DBInstanceIdentifier=' + (DBInstanceIdentifier == null ? '' : encodeURIComponent(DBInstanceIdentifier)) + '&' + Tags?.map(z => `Tags=${encodeURIComponent(z)}`).join('&') + '&Action=' + Action + '&Version=' + Version, { observe: 'response', responseType: 'text' });
		}

		/**
		 * Creates a new DB subnet group. DB subnet groups must contain at least one subnet in at least two AZs in the Amazon Web Services Region.
		 * Get #Action=CreateDBSubnetGroup
		 * @param {string} DBSubnetGroupName <p>The name for the DB subnet group. This value is stored as a lowercase string.</p> <p>Constraints:</p> <ul> <li> <p>Must contain no more than 255 letters, numbers, periods, underscores, spaces, or hyphens.</p> </li> <li> <p>Must not be default.</p> </li> <li> <p>First character must be a letter.</p> </li> </ul> <p>Example: <code>mydbsubnetgroup</code> </p>
		 * @param {string} DBSubnetGroupDescription The description for the DB subnet group.
		 * @param {Array<string>} SubnetIds The EC2 Subnet IDs for the DB subnet group.
		 * @param {Array<string>} Tags Tags to assign to the DB subnet group.
		 * @return {void} Success
		 */
		GET_CreateDBSubnetGroup(DBSubnetGroupName: string, DBSubnetGroupDescription: string, SubnetIds: Array<string>, Tags: Array<string> | null | undefined, Action: GET_CreateDBSubnetGroupAction, Version: GET_AddRoleToDBClusterVersion): Observable<HttpResponse<string>> {
			return this.http.get(this.baseUri + '#Action=CreateDBSubnetGroup?DBSubnetGroupName=' + (DBSubnetGroupName == null ? '' : encodeURIComponent(DBSubnetGroupName)) + '&DBSubnetGroupDescription=' + (DBSubnetGroupDescription == null ? '' : encodeURIComponent(DBSubnetGroupDescription)) + '&' + SubnetIds.map(z => `SubnetIds=${encodeURIComponent(z)}`).join('&') + '&' + Tags?.map(z => `Tags=${encodeURIComponent(z)}`).join('&') + '&Action=' + Action + '&Version=' + Version, { observe: 'response', responseType: 'text' });
		}

		/**
		 * <p>Creates an RDS event notification subscription. This operation requires a topic Amazon Resource Name (ARN) created by either the RDS console, the SNS console, or the SNS API. To obtain an ARN with SNS, you must create a topic in Amazon SNS and subscribe to the topic. The ARN is displayed in the SNS console.</p> <p>You can specify the type of source (<code>SourceType</code>) that you want to be notified of and provide a list of RDS sources (<code>SourceIds</code>) that triggers the events. You can also provide a list of event categories (<code>EventCategories</code>) for events that you want to be notified of. For example, you can specify <code>SourceType</code> = <code>db-instance</code>, <code>SourceIds</code> = <code>mydbinstance1</code>, <code>mydbinstance2</code> and <code>EventCategories</code> = <code>Availability</code>, <code>Backup</code>.</p> <p>If you specify both the <code>SourceType</code> and <code>SourceIds</code>, such as <code>SourceType</code> = <code>db-instance</code> and <code>SourceIds</code> = <code>myDBInstance1</code>, you are notified of all the <code>db-instance</code> events for the specified source. If you specify a <code>SourceType</code> but do not specify <code>SourceIds</code>, you receive notice of the events for that source type for all your RDS sources. If you don't specify either the SourceType or the <code>SourceIds</code>, you are notified of events generated from all RDS sources belonging to your customer account.</p> <p>For more information about subscribing to an event for RDS DB engines, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Events.Subscribing.html"> Subscribing to Amazon RDS event notification</a> in the <i>Amazon RDS User Guide</i>.</p> <p>For more information about subscribing to an event for Aurora DB engines, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/USER_Events.Subscribing.html"> Subscribing to Amazon RDS event notification</a> in the <i>Amazon Aurora User Guide</i>.</p>
		 * Get #Action=CreateEventSubscription
		 * @param {string} SubscriptionName <p>The name of the subscription.</p> <p>Constraints: The name must be less than 255 characters.</p>
		 * @param {string} SnsTopicArn The Amazon Resource Name (ARN) of the SNS topic created for event notification. The ARN is created by Amazon SNS when you create a topic and subscribe to it.
		 * @param {string} SourceType <p>The type of source that is generating the events. For example, if you want to be notified of events generated by a DB instance, you set this parameter to <code>db-instance</code>. For RDS Proxy events, specify <code>db-proxy</code>. If this value isn't specified, all events are returned.</p> <p>Valid values: <code>db-instance</code> | <code>db-cluster</code> | <code>db-parameter-group</code> | <code>db-security-group</code> | <code>db-snapshot</code> | <code>db-cluster-snapshot</code> | <code>db-proxy</code> </p>
		 * @param {Array<string>} EventCategories A list of event categories for a particular source type (<code>SourceType</code>) that you want to subscribe to. You can see a list of the categories for a given source type in the "Amazon RDS event categories and event messages" section of the <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Events.Messages.html"> <i>Amazon RDS User Guide</i> </a> or the <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/USER_Events.Messages.html"> <i>Amazon Aurora User Guide</i> </a>. You can also see this list by using the <code>DescribeEventCategories</code> operation.
		 * @param {Array<string>} SourceIds <p>The list of identifiers of the event sources for which events are returned. If not specified, then all sources are included in the response. An identifier must begin with a letter and must contain only ASCII letters, digits, and hyphens. It can't end with a hyphen or contain two consecutive hyphens.</p> <p>Constraints:</p> <ul> <li> <p>If <code>SourceIds</code> are supplied, <code>SourceType</code> must also be provided.</p> </li> <li> <p>If the source type is a DB instance, a <code>DBInstanceIdentifier</code> value must be supplied.</p> </li> <li> <p>If the source type is a DB cluster, a <code>DBClusterIdentifier</code> value must be supplied.</p> </li> <li> <p>If the source type is a DB parameter group, a <code>DBParameterGroupName</code> value must be supplied.</p> </li> <li> <p>If the source type is a DB security group, a <code>DBSecurityGroupName</code> value must be supplied.</p> </li> <li> <p>If the source type is a DB snapshot, a <code>DBSnapshotIdentifier</code> value must be supplied.</p> </li> <li> <p>If the source type is a DB cluster snapshot, a <code>DBClusterSnapshotIdentifier</code> value must be supplied.</p> </li> <li> <p>If the source type is an RDS Proxy, a <code>DBProxyName</code> value must be supplied.</p> </li> </ul>
		 * @param {boolean} Enabled A value that indicates whether to activate the subscription. If the event notification subscription isn't activated, the subscription is created but not active.
		 * @return {void} Success
		 */
		GET_CreateEventSubscription(SubscriptionName: string, SnsTopicArn: string, SourceType: string | null | undefined, EventCategories: Array<string> | null | undefined, SourceIds: Array<string> | null | undefined, Enabled: boolean | null | undefined, Tags: Array<string> | null | undefined, Action: GET_CreateEventSubscriptionAction, Version: GET_AddRoleToDBClusterVersion): Observable<HttpResponse<string>> {
			return this.http.get(this.baseUri + '#Action=CreateEventSubscription?SubscriptionName=' + (SubscriptionName == null ? '' : encodeURIComponent(SubscriptionName)) + '&SnsTopicArn=' + (SnsTopicArn == null ? '' : encodeURIComponent(SnsTopicArn)) + '&SourceType=' + (SourceType == null ? '' : encodeURIComponent(SourceType)) + '&' + EventCategories?.map(z => `EventCategories=${encodeURIComponent(z)}`).join('&') + '&' + SourceIds?.map(z => `SourceIds=${encodeURIComponent(z)}`).join('&') + '&Enabled=' + Enabled + '&' + Tags?.map(z => `Tags=${encodeURIComponent(z)}`).join('&') + '&Action=' + Action + '&Version=' + Version, { observe: 'response', responseType: 'text' });
		}

		/**
		 * <p>Creates an Aurora global database spread across multiple Amazon Web Services Regions. The global database contains a single primary cluster with read-write capability, and a read-only secondary cluster that receives data from the primary cluster through high-speed replication performed by the Aurora storage subsystem.</p> <p>You can create a global database that is initially empty, and then create the primary and secondary DB clusters in the global database. Or you can specify an existing Aurora cluster during the create operation, and this cluster becomes the primary cluster of the global database.</p> <note> <p>This operation applies only to Aurora DB clusters.</p> </note>
		 * Get #Action=CreateGlobalCluster
		 * @param {string} GlobalClusterIdentifier The cluster identifier for this global database cluster. This parameter is stored as a lowercase string.
		 * @param {string} SourceDBClusterIdentifier <p>The Amazon Resource Name (ARN) to use as the primary cluster of the global database.</p> <p>If you provide a value for this parameter, don't specify values for the following settings because Amazon Aurora uses the values from the specified source DB cluster:</p> <ul> <li> <p> <code>DatabaseName</code> </p> </li> <li> <p> <code>Engine</code> </p> </li> <li> <p> <code>EngineVersion</code> </p> </li> <li> <p> <code>StorageEncrypted</code> </p> </li> </ul>
		 * @param {string} Engine <p>The database engine to use for this global database cluster.</p> <p>Valid Values: <code>aurora-mysql | aurora-postgresql</code> </p> <p>Constraints:</p> <ul> <li> <p>Can't be specified if <code>SourceDBClusterIdentifier</code> is specified. In this case, Amazon Aurora uses the engine of the source DB cluster.</p> </li> </ul>
		 * @param {string} EngineVersion <p>The engine version to use for this global database cluster.</p> <p>Constraints:</p> <ul> <li> <p>Can't be specified if <code>SourceDBClusterIdentifier</code> is specified. In this case, Amazon Aurora uses the engine version of the source DB cluster.</p> </li> </ul>
		 * @param {boolean} DeletionProtection Specifies whether to enable deletion protection for the new global database cluster. The global database can't be deleted when deletion protection is enabled.
		 * @param {string} DatabaseName <p>The name for your database of up to 64 alphanumeric characters. If you don't specify a name, Amazon Aurora doesn't create a database in the global database cluster.</p> <p>Constraints:</p> <ul> <li> <p>Can't be specified if <code>SourceDBClusterIdentifier</code> is specified. In this case, Amazon Aurora uses the database name from the source DB cluster.</p> </li> </ul>
		 * @param {boolean} StorageEncrypted <p>Specifies whether to enable storage encryption for the new global database cluster.</p> <p>Constraints:</p> <ul> <li> <p>Can't be specified if <code>SourceDBClusterIdentifier</code> is specified. In this case, Amazon Aurora uses the setting from the source DB cluster.</p> </li> </ul>
		 * @return {void} Success
		 */
		GET_CreateGlobalCluster(GlobalClusterIdentifier: string | null | undefined, SourceDBClusterIdentifier: string | null | undefined, Engine: string | null | undefined, EngineVersion: string | null | undefined, DeletionProtection: boolean | null | undefined, DatabaseName: string | null | undefined, StorageEncrypted: boolean | null | undefined, Action: GET_CreateGlobalClusterAction, Version: GET_AddRoleToDBClusterVersion): Observable<HttpResponse<string>> {
			return this.http.get(this.baseUri + '#Action=CreateGlobalCluster?GlobalClusterIdentifier=' + (GlobalClusterIdentifier == null ? '' : encodeURIComponent(GlobalClusterIdentifier)) + '&SourceDBClusterIdentifier=' + (SourceDBClusterIdentifier == null ? '' : encodeURIComponent(SourceDBClusterIdentifier)) + '&Engine=' + (Engine == null ? '' : encodeURIComponent(Engine)) + '&EngineVersion=' + (EngineVersion == null ? '' : encodeURIComponent(EngineVersion)) + '&DeletionProtection=' + DeletionProtection + '&DatabaseName=' + (DatabaseName == null ? '' : encodeURIComponent(DatabaseName)) + '&StorageEncrypted=' + StorageEncrypted + '&Action=' + Action + '&Version=' + Version, { observe: 'response', responseType: 'text' });
		}

		/**
		 * <p>Creates a new option group. You can create up to 20 option groups.</p> <p>This command doesn't apply to RDS Custom.</p>
		 * Get #Action=CreateOptionGroup
		 * @param {string} OptionGroupName <p>Specifies the name of the option group to be created.</p> <p>Constraints:</p> <ul> <li> <p>Must be 1 to 255 letters, numbers, or hyphens</p> </li> <li> <p>First character must be a letter</p> </li> <li> <p>Can't end with a hyphen or contain two consecutive hyphens</p> </li> </ul> <p>Example: <code>myoptiongroup</code> </p>
		 * @param {string} EngineName <p>Specifies the name of the engine that this option group should be associated with.</p> <p>Valid Values:</p> <ul> <li> <p> <code>mariadb</code> </p> </li> <li> <p> <code>mysql</code> </p> </li> <li> <p> <code>oracle-ee</code> </p> </li> <li> <p> <code>oracle-ee-cdb</code> </p> </li> <li> <p> <code>oracle-se2</code> </p> </li> <li> <p> <code>oracle-se2-cdb</code> </p> </li> <li> <p> <code>postgres</code> </p> </li> <li> <p> <code>sqlserver-ee</code> </p> </li> <li> <p> <code>sqlserver-se</code> </p> </li> <li> <p> <code>sqlserver-ex</code> </p> </li> <li> <p> <code>sqlserver-web</code> </p> </li> </ul>
		 * @param {string} MajorEngineVersion Specifies the major version of the engine that this option group should be associated with.
		 * @param {string} OptionGroupDescription The description of the option group.
		 * @param {Array<string>} Tags Tags to assign to the option group.
		 * @return {void} Success
		 */
		GET_CreateOptionGroup(OptionGroupName: string, EngineName: string, MajorEngineVersion: string, OptionGroupDescription: string, Tags: Array<string> | null | undefined, Action: GET_CreateOptionGroupAction, Version: GET_AddRoleToDBClusterVersion): Observable<HttpResponse<string>> {
			return this.http.get(this.baseUri + '#Action=CreateOptionGroup?OptionGroupName=' + (OptionGroupName == null ? '' : encodeURIComponent(OptionGroupName)) + '&EngineName=' + (EngineName == null ? '' : encodeURIComponent(EngineName)) + '&MajorEngineVersion=' + (MajorEngineVersion == null ? '' : encodeURIComponent(MajorEngineVersion)) + '&OptionGroupDescription=' + (OptionGroupDescription == null ? '' : encodeURIComponent(OptionGroupDescription)) + '&' + Tags?.map(z => `Tags=${encodeURIComponent(z)}`).join('&') + '&Action=' + Action + '&Version=' + Version, { observe: 'response', responseType: 'text' });
		}

		/**
		 * <p>Deletes a blue/green deployment.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/blue-green-deployments.html">Using Amazon RDS Blue/Green Deployments for database updates</a> in the <i>Amazon RDS User Guide</i> and <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/blue-green-deployments.html">Using Amazon RDS Blue/Green Deployments for database updates</a> in the <i>Amazon Aurora User Guide</i>.</p>
		 * Get #Action=DeleteBlueGreenDeployment
		 * @param {string} BlueGreenDeploymentIdentifier <p>The unique identifier of the blue/green deployment to delete. This parameter isn't case-sensitive.</p> <p>Constraints: </p> <ul> <li> <p>Must match an existing blue/green deployment identifier.</p> </li> </ul>
		 * @param {boolean} DeleteTarget Specifies whether to delete the resources in the green environment. You can't specify this option if the blue/green deployment <a href="https://docs.aws.amazon.com/AmazonRDS/latest/APIReference/API_BlueGreenDeployment.html">status</a> is <code>SWITCHOVER_COMPLETED</code>.
		 * @return {void} Success
		 */
		GET_DeleteBlueGreenDeployment(BlueGreenDeploymentIdentifier: string, DeleteTarget: boolean | null | undefined, Action: GET_DeleteBlueGreenDeploymentAction, Version: GET_AddRoleToDBClusterVersion): Observable<HttpResponse<string>> {
			return this.http.get(this.baseUri + '#Action=DeleteBlueGreenDeployment?BlueGreenDeploymentIdentifier=' + (BlueGreenDeploymentIdentifier == null ? '' : encodeURIComponent(BlueGreenDeploymentIdentifier)) + '&DeleteTarget=' + DeleteTarget + '&Action=' + Action + '&Version=' + Version, { observe: 'response', responseType: 'text' });
		}

		/**
		 * <p>Deletes a custom engine version. To run this command, make sure you meet the following prerequisites:</p> <ul> <li> <p>The CEV must not be the default for RDS Custom. If it is, change the default before running this command.</p> </li> <li> <p>The CEV must not be associated with an RDS Custom DB instance, RDS Custom instance snapshot, or automated backup of your RDS Custom instance.</p> </li> </ul> <p>Typically, deletion takes a few minutes.</p> <note> <p>The MediaImport service that imports files from Amazon S3 to create CEVs isn't integrated with Amazon Web Services CloudTrail. If you turn on data logging for Amazon RDS in CloudTrail, calls to the <code>DeleteCustomDbEngineVersion</code> event aren't logged. However, you might see calls from the API gateway that accesses your Amazon S3 bucket. These calls originate from the MediaImport service for the <code>DeleteCustomDbEngineVersion</code> event.</p> </note> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/custom-cev.html#custom-cev.delete">Deleting a CEV</a> in the <i>Amazon RDS User Guide</i>.</p>
		 * Get #Action=DeleteCustomDBEngineVersion
		 * @param {string} Engine The database engine. The only supported engines are <code>custom-oracle-ee</code> and <code>custom-oracle-ee-cdb</code>.
		 * @param {string} EngineVersion The custom engine version (CEV) for your DB instance. This option is required for RDS Custom, but optional for Amazon RDS. The combination of <code>Engine</code> and <code>EngineVersion</code> is unique per customer per Amazon Web Services Region.
		 * @return {void} Success
		 */
		GET_DeleteCustomDBEngineVersion(Engine: string, EngineVersion: string, Action: GET_DeleteCustomDBEngineVersionAction, Version: GET_AddRoleToDBClusterVersion): Observable<HttpResponse<string>> {
			return this.http.get(this.baseUri + '#Action=DeleteCustomDBEngineVersion?Engine=' + (Engine == null ? '' : encodeURIComponent(Engine)) + '&EngineVersion=' + (EngineVersion == null ? '' : encodeURIComponent(EngineVersion)) + '&Action=' + Action + '&Version=' + Version, { observe: 'response', responseType: 'text' });
		}

		/**
		 * <p>The DeleteDBCluster action deletes a previously provisioned DB cluster. When you delete a DB cluster, all automated backups for that DB cluster are deleted and can't be recovered. Manual DB cluster snapshots of the specified DB cluster are not deleted.</p> <p>If you're deleting a Multi-AZ DB cluster with read replicas, all cluster members are terminated and read replicas are promoted to standalone instances.</p> <p>For more information on Amazon Aurora, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/CHAP_AuroraOverview.html"> What is Amazon Aurora?</a> in the <i>Amazon Aurora User Guide</i>.</p> <p>For more information on Multi-AZ DB clusters, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/multi-az-db-clusters-concepts.html"> Multi-AZ DB cluster deployments</a> in the <i>Amazon RDS User Guide</i>.</p>
		 * Get #Action=DeleteDBCluster
		 * @param {string} DBClusterIdentifier <p>The DB cluster identifier for the DB cluster to be deleted. This parameter isn't case-sensitive.</p> <p>Constraints:</p> <ul> <li> <p>Must match an existing DBClusterIdentifier.</p> </li> </ul>
		 * @param {boolean} SkipFinalSnapshot <p>A value that indicates whether to skip the creation of a final DB cluster snapshot before the DB cluster is deleted. If skip is specified, no DB cluster snapshot is created. If skip isn't specified, a DB cluster snapshot is created before the DB cluster is deleted. By default, skip isn't specified, and the DB cluster snapshot is created. By default, this parameter is disabled.</p> <note> <p>You must specify a <code>FinalDBSnapshotIdentifier</code> parameter if <code>SkipFinalSnapshot</code> is disabled.</p> </note>
		 * @param {string} FinalDBSnapshotIdentifier <p>The DB cluster snapshot identifier of the new DB cluster snapshot created when <code>SkipFinalSnapshot</code> is disabled.</p> <note> <p>Specifying this parameter and also skipping the creation of a final DB cluster snapshot with the <code>SkipFinalShapshot</code> parameter results in an error.</p> </note> <p>Constraints:</p> <ul> <li> <p>Must be 1 to 255 letters, numbers, or hyphens.</p> </li> <li> <p>First character must be a letter</p> </li> <li> <p>Can't end with a hyphen or contain two consecutive hyphens</p> </li> </ul>
		 * @param {boolean} DeleteAutomatedBackups A value that indicates whether to remove automated backups immediately after the DB cluster is deleted. This parameter isn't case-sensitive. The default is to remove automated backups immediately after the DB cluster is deleted.
		 * @return {void} Success
		 */
		GET_DeleteDBCluster(DBClusterIdentifier: string, SkipFinalSnapshot: boolean | null | undefined, FinalDBSnapshotIdentifier: string | null | undefined, DeleteAutomatedBackups: boolean | null | undefined, Action: GET_DeleteDBClusterAction, Version: GET_AddRoleToDBClusterVersion): Observable<HttpResponse<string>> {
			return this.http.get(this.baseUri + '#Action=DeleteDBCluster?DBClusterIdentifier=' + (DBClusterIdentifier == null ? '' : encodeURIComponent(DBClusterIdentifier)) + '&SkipFinalSnapshot=' + SkipFinalSnapshot + '&FinalDBSnapshotIdentifier=' + (FinalDBSnapshotIdentifier == null ? '' : encodeURIComponent(FinalDBSnapshotIdentifier)) + '&DeleteAutomatedBackups=' + DeleteAutomatedBackups + '&Action=' + Action + '&Version=' + Version, { observe: 'response', responseType: 'text' });
		}

		/**
		 * Deletes automated backups using the <code>DbClusterResourceId</code> value of the source DB cluster or the Amazon Resource Name (ARN) of the automated backups.
		 * Get #Action=DeleteDBClusterAutomatedBackup
		 * @param {string} DbClusterResourceId The identifier for the source DB cluster, which can't be changed and which is unique to an Amazon Web Services Region.
		 * @return {void} Success
		 */
		GET_DeleteDBClusterAutomatedBackup(DbClusterResourceId: string, Action: GET_DeleteDBClusterAutomatedBackupAction, Version: GET_AddRoleToDBClusterVersion): Observable<HttpResponse<string>> {
			return this.http.get(this.baseUri + '#Action=DeleteDBClusterAutomatedBackup?DbClusterResourceId=' + (DbClusterResourceId == null ? '' : encodeURIComponent(DbClusterResourceId)) + '&Action=' + Action + '&Version=' + Version, { observe: 'response', responseType: 'text' });
		}

		/**
		 * <p>Deletes a custom endpoint and removes it from an Amazon Aurora DB cluster.</p> <note> <p>This action only applies to Aurora DB clusters.</p> </note>
		 * Get #Action=DeleteDBClusterEndpoint
		 * @param {string} DBClusterEndpointIdentifier The identifier associated with the custom endpoint. This parameter is stored as a lowercase string.
		 * @return {void} Success
		 */
		GET_DeleteDBClusterEndpoint(DBClusterEndpointIdentifier: string, Action: GET_DeleteDBClusterEndpointAction, Version: GET_AddRoleToDBClusterVersion): Observable<HttpResponse<string>> {
			return this.http.get(this.baseUri + '#Action=DeleteDBClusterEndpoint?DBClusterEndpointIdentifier=' + (DBClusterEndpointIdentifier == null ? '' : encodeURIComponent(DBClusterEndpointIdentifier)) + '&Action=' + Action + '&Version=' + Version, { observe: 'response', responseType: 'text' });
		}

		/**
		 * <p>Deletes a specified DB cluster parameter group. The DB cluster parameter group to be deleted can't be associated with any DB clusters.</p> <p>For more information on Amazon Aurora, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/CHAP_AuroraOverview.html"> What is Amazon Aurora?</a> in the <i>Amazon Aurora User Guide</i>.</p> <p>For more information on Multi-AZ DB clusters, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/multi-az-db-clusters-concepts.html"> Multi-AZ DB cluster deployments</a> in the <i>Amazon RDS User Guide</i>.</p>
		 * Get #Action=DeleteDBClusterParameterGroup
		 * @param {string} DBClusterParameterGroupName <p>The name of the DB cluster parameter group.</p> <p>Constraints:</p> <ul> <li> <p>Must be the name of an existing DB cluster parameter group.</p> </li> <li> <p>You can't delete a default DB cluster parameter group.</p> </li> <li> <p>Can't be associated with any DB clusters.</p> </li> </ul>
		 * @return {void} Success
		 */
		GET_DeleteDBClusterParameterGroup(DBClusterParameterGroupName: string, Action: GET_DeleteDBClusterParameterGroupAction, Version: GET_AddRoleToDBClusterVersion): Observable<HttpResponse<string>> {
			return this.http.get(this.baseUri + '#Action=DeleteDBClusterParameterGroup?DBClusterParameterGroupName=' + (DBClusterParameterGroupName == null ? '' : encodeURIComponent(DBClusterParameterGroupName)) + '&Action=' + Action + '&Version=' + Version, { observe: 'response', responseType: 'text' });
		}

		/**
		 * <p>Deletes a DB cluster snapshot. If the snapshot is being copied, the copy operation is terminated.</p> <note> <p>The DB cluster snapshot must be in the <code>available</code> state to be deleted.</p> </note> <p>For more information on Amazon Aurora, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/CHAP_AuroraOverview.html"> What is Amazon Aurora?</a> in the <i>Amazon Aurora User Guide</i>.</p> <p>For more information on Multi-AZ DB clusters, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/multi-az-db-clusters-concepts.html"> Multi-AZ DB cluster deployments</a> in the <i>Amazon RDS User Guide</i>.</p>
		 * Get #Action=DeleteDBClusterSnapshot
		 * @param {string} DBClusterSnapshotIdentifier <p>The identifier of the DB cluster snapshot to delete.</p> <p>Constraints: Must be the name of an existing DB cluster snapshot in the <code>available</code> state.</p>
		 * @return {void} Success
		 */
		GET_DeleteDBClusterSnapshot(DBClusterSnapshotIdentifier: string, Action: GET_DeleteDBClusterSnapshotAction, Version: GET_AddRoleToDBClusterVersion): Observable<HttpResponse<string>> {
			return this.http.get(this.baseUri + '#Action=DeleteDBClusterSnapshot?DBClusterSnapshotIdentifier=' + (DBClusterSnapshotIdentifier == null ? '' : encodeURIComponent(DBClusterSnapshotIdentifier)) + '&Action=' + Action + '&Version=' + Version, { observe: 'response', responseType: 'text' });
		}

		/**
		 * <p>The DeleteDBInstance action deletes a previously provisioned DB instance. When you delete a DB instance, all automated backups for that instance are deleted and can't be recovered. Manual DB snapshots of the DB instance to be deleted by <code>DeleteDBInstance</code> are not deleted.</p> <p>If you request a final DB snapshot the status of the Amazon RDS DB instance is <code>deleting</code> until the DB snapshot is created. The API action <code>DescribeDBInstance</code> is used to monitor the status of this operation. The action can't be canceled or reverted once submitted.</p> <p>When a DB instance is in a failure state and has a status of <code>failed</code>, <code>incompatible-restore</code>, or <code>incompatible-network</code>, you can only delete it when you skip creation of the final snapshot with the <code>SkipFinalSnapshot</code> parameter.</p> <p>If the specified DB instance is part of an Amazon Aurora DB cluster, you can't delete the DB instance if both of the following conditions are true:</p> <ul> <li> <p>The DB cluster is a read replica of another Amazon Aurora DB cluster.</p> </li> <li> <p>The DB instance is the only instance in the DB cluster.</p> </li> </ul> <p>To delete a DB instance in this case, first call the <code>PromoteReadReplicaDBCluster</code> API action to promote the DB cluster so it's no longer a read replica. After the promotion completes, then call the <code>DeleteDBInstance</code> API action to delete the final instance in the DB cluster.</p>
		 * Get #Action=DeleteDBInstance
		 * @param {string} DBInstanceIdentifier <p>The DB instance identifier for the DB instance to be deleted. This parameter isn't case-sensitive.</p> <p>Constraints:</p> <ul> <li> <p>Must match the name of an existing DB instance.</p> </li> </ul>
		 * @param {boolean} SkipFinalSnapshot <p>A value that indicates whether to skip the creation of a final DB snapshot before deleting the instance. If you enable this parameter, RDS doesn't create a DB snapshot. If you don't enable this parameter, RDS creates a DB snapshot before the DB instance is deleted. By default, skip isn't enabled, and the DB snapshot is created.</p> <note> <p>If you don't enable this parameter, you must specify the <code>FinalDBSnapshotIdentifier</code> parameter.</p> </note> <p>When a DB instance is in a failure state and has a status of <code>failed</code>, <code>incompatible-restore</code>, or <code>incompatible-network</code>, RDS can delete the instance only if you enable this parameter.</p> <p>If you delete a read replica or an RDS Custom instance, you must enable this setting.</p> <p>This setting is required for RDS Custom.</p>
		 * @param {string} FinalDBSnapshotIdentifier <p>The <code>DBSnapshotIdentifier</code> of the new <code>DBSnapshot</code> created when the <code>SkipFinalSnapshot</code> parameter is disabled.</p> <note> <p>If you enable this parameter and also enable SkipFinalShapshot, the command results in an error.</p> </note> <p>This setting doesn't apply to RDS Custom.</p> <p>Constraints:</p> <ul> <li> <p>Must be 1 to 255 letters or numbers.</p> </li> <li> <p>First character must be a letter.</p> </li> <li> <p>Can't end with a hyphen or contain two consecutive hyphens.</p> </li> <li> <p>Can't be specified when deleting a read replica.</p> </li> </ul>
		 * @param {boolean} DeleteAutomatedBackups A value that indicates whether to remove automated backups immediately after the DB instance is deleted. This parameter isn't case-sensitive. The default is to remove automated backups immediately after the DB instance is deleted.
		 * @return {void} Success
		 */
		GET_DeleteDBInstance(DBInstanceIdentifier: string, SkipFinalSnapshot: boolean | null | undefined, FinalDBSnapshotIdentifier: string | null | undefined, DeleteAutomatedBackups: boolean | null | undefined, Action: GET_DeleteDBInstanceAction, Version: GET_AddRoleToDBClusterVersion): Observable<HttpResponse<string>> {
			return this.http.get(this.baseUri + '#Action=DeleteDBInstance?DBInstanceIdentifier=' + (DBInstanceIdentifier == null ? '' : encodeURIComponent(DBInstanceIdentifier)) + '&SkipFinalSnapshot=' + SkipFinalSnapshot + '&FinalDBSnapshotIdentifier=' + (FinalDBSnapshotIdentifier == null ? '' : encodeURIComponent(FinalDBSnapshotIdentifier)) + '&DeleteAutomatedBackups=' + DeleteAutomatedBackups + '&Action=' + Action + '&Version=' + Version, { observe: 'response', responseType: 'text' });
		}

		/**
		 * Deletes automated backups using the <code>DbiResourceId</code> value of the source DB instance or the Amazon Resource Name (ARN) of the automated backups.
		 * Get #Action=DeleteDBInstanceAutomatedBackup
		 * @param {string} DbiResourceId The identifier for the source DB instance, which can't be changed and which is unique to an Amazon Web Services Region.
		 * @param {string} DBInstanceAutomatedBackupsArn <p>The Amazon Resource Name (ARN) of the automated backups to delete, for example, <code>arn:aws:rds:us-east-1:123456789012:auto-backup:ab-L2IJCEXJP7XQ7HOJ4SIEXAMPLE</code>.</p> <p>This setting doesn't apply to RDS Custom.</p>
		 * @return {void} Success
		 */
		GET_DeleteDBInstanceAutomatedBackup(DbiResourceId: string | null | undefined, DBInstanceAutomatedBackupsArn: string | null | undefined, Action: GET_DeleteDBInstanceAutomatedBackupAction, Version: GET_AddRoleToDBClusterVersion): Observable<HttpResponse<string>> {
			return this.http.get(this.baseUri + '#Action=DeleteDBInstanceAutomatedBackup?DbiResourceId=' + (DbiResourceId == null ? '' : encodeURIComponent(DbiResourceId)) + '&DBInstanceAutomatedBackupsArn=' + (DBInstanceAutomatedBackupsArn == null ? '' : encodeURIComponent(DBInstanceAutomatedBackupsArn)) + '&Action=' + Action + '&Version=' + Version, { observe: 'response', responseType: 'text' });
		}

		/**
		 * Deletes a specified DB parameter group. The DB parameter group to be deleted can't be associated with any DB instances.
		 * Get #Action=DeleteDBParameterGroup
		 * @param {string} DBParameterGroupName <p>The name of the DB parameter group.</p> <p>Constraints:</p> <ul> <li> <p>Must be the name of an existing DB parameter group</p> </li> <li> <p>You can't delete a default DB parameter group</p> </li> <li> <p>Can't be associated with any DB instances</p> </li> </ul>
		 * @return {void} Success
		 */
		GET_DeleteDBParameterGroup(DBParameterGroupName: string, Action: GET_DeleteDBParameterGroupAction, Version: GET_AddRoleToDBClusterVersion): Observable<HttpResponse<string>> {
			return this.http.get(this.baseUri + '#Action=DeleteDBParameterGroup?DBParameterGroupName=' + (DBParameterGroupName == null ? '' : encodeURIComponent(DBParameterGroupName)) + '&Action=' + Action + '&Version=' + Version, { observe: 'response', responseType: 'text' });
		}

		/**
		 * Deletes an existing DB proxy.
		 * Get #Action=DeleteDBProxy
		 * @param {string} DBProxyName The name of the DB proxy to delete.
		 * @return {void} Success
		 */
		GET_DeleteDBProxy(DBProxyName: string, Action: GET_DeleteDBProxyAction, Version: GET_AddRoleToDBClusterVersion): Observable<HttpResponse<string>> {
			return this.http.get(this.baseUri + '#Action=DeleteDBProxy?DBProxyName=' + (DBProxyName == null ? '' : encodeURIComponent(DBProxyName)) + '&Action=' + Action + '&Version=' + Version, { observe: 'response', responseType: 'text' });
		}

		/**
		 * Deletes a <code>DBProxyEndpoint</code>. Doing so removes the ability to access the DB proxy using the endpoint that you defined. The endpoint that you delete might have provided capabilities such as read/write or read-only operations, or using a different VPC than the DB proxy's default VPC.
		 * Get #Action=DeleteDBProxyEndpoint
		 * @param {string} DBProxyEndpointName The name of the DB proxy endpoint to delete.
		 * @return {void} Success
		 */
		GET_DeleteDBProxyEndpoint(DBProxyEndpointName: string, Action: GET_DeleteDBProxyEndpointAction, Version: GET_AddRoleToDBClusterVersion): Observable<HttpResponse<string>> {
			return this.http.get(this.baseUri + '#Action=DeleteDBProxyEndpoint?DBProxyEndpointName=' + (DBProxyEndpointName == null ? '' : encodeURIComponent(DBProxyEndpointName)) + '&Action=' + Action + '&Version=' + Version, { observe: 'response', responseType: 'text' });
		}

		/**
		 * <p>Deletes a DB security group.</p> <p>The specified DB security group must not be associated with any DB instances.</p> <note> <p>EC2-Classic was retired on August 15, 2022. If you haven't migrated from EC2-Classic to a VPC, we recommend that you migrate as soon as possible. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/vpc-migrate.html">Migrate from EC2-Classic to a VPC</a> in the <i>Amazon EC2 User Guide</i>, the blog <a href="http://aws.amazon.com/blogs/aws/ec2-classic-is-retiring-heres-how-to-prepare/">EC2-Classic Networking is Retiring – Here’s How to Prepare</a>, and <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_VPC.Non-VPC2VPC.html">Moving a DB instance not in a VPC into a VPC</a> in the <i>Amazon RDS User Guide</i>.</p> </note>
		 * Get #Action=DeleteDBSecurityGroup
		 * @param {string} DBSecurityGroupName <p>The name of the DB security group to delete.</p> <note> <p>You can't delete the default DB security group.</p> </note> <p>Constraints:</p> <ul> <li> <p>Must be 1 to 255 letters, numbers, or hyphens.</p> </li> <li> <p>First character must be a letter</p> </li> <li> <p>Can't end with a hyphen or contain two consecutive hyphens</p> </li> <li> <p>Must not be "Default"</p> </li> </ul>
		 * @return {void} Success
		 */
		GET_DeleteDBSecurityGroup(DBSecurityGroupName: string, Action: GET_DeleteDBSecurityGroupAction, Version: GET_AddRoleToDBClusterVersion): Observable<HttpResponse<string>> {
			return this.http.get(this.baseUri + '#Action=DeleteDBSecurityGroup?DBSecurityGroupName=' + (DBSecurityGroupName == null ? '' : encodeURIComponent(DBSecurityGroupName)) + '&Action=' + Action + '&Version=' + Version, { observe: 'response', responseType: 'text' });
		}

		/**
		 * <p>Deletes a DB snapshot. If the snapshot is being copied, the copy operation is terminated.</p> <note> <p>The DB snapshot must be in the <code>available</code> state to be deleted.</p> </note>
		 * Get #Action=DeleteDBSnapshot
		 * @param {string} DBSnapshotIdentifier <p>The DB snapshot identifier.</p> <p>Constraints: Must be the name of an existing DB snapshot in the <code>available</code> state.</p>
		 * @return {void} Success
		 */
		GET_DeleteDBSnapshot(DBSnapshotIdentifier: string, Action: GET_DeleteDBSnapshotAction, Version: GET_AddRoleToDBClusterVersion): Observable<HttpResponse<string>> {
			return this.http.get(this.baseUri + '#Action=DeleteDBSnapshot?DBSnapshotIdentifier=' + (DBSnapshotIdentifier == null ? '' : encodeURIComponent(DBSnapshotIdentifier)) + '&Action=' + Action + '&Version=' + Version, { observe: 'response', responseType: 'text' });
		}

		/**
		 * <p>Deletes a DB subnet group.</p> <note> <p>The specified database subnet group must not be associated with any DB instances.</p> </note>
		 * Get #Action=DeleteDBSubnetGroup
		 * @param {string} DBSubnetGroupName <p>The name of the database subnet group to delete.</p> <note> <p>You can't delete the default subnet group.</p> </note> <p>Constraints: Must match the name of an existing DBSubnetGroup. Must not be default.</p> <p>Example: <code>mydbsubnetgroup</code> </p>
		 * @return {void} Success
		 */
		GET_DeleteDBSubnetGroup(DBSubnetGroupName: string, Action: GET_DeleteDBSubnetGroupAction, Version: GET_AddRoleToDBClusterVersion): Observable<HttpResponse<string>> {
			return this.http.get(this.baseUri + '#Action=DeleteDBSubnetGroup?DBSubnetGroupName=' + (DBSubnetGroupName == null ? '' : encodeURIComponent(DBSubnetGroupName)) + '&Action=' + Action + '&Version=' + Version, { observe: 'response', responseType: 'text' });
		}

		/**
		 * Deletes an RDS event notification subscription.
		 * Get #Action=DeleteEventSubscription
		 * @param {string} SubscriptionName The name of the RDS event notification subscription you want to delete.
		 * @return {void} Success
		 */
		GET_DeleteEventSubscription(SubscriptionName: string, Action: GET_DeleteEventSubscriptionAction, Version: GET_AddRoleToDBClusterVersion): Observable<HttpResponse<string>> {
			return this.http.get(this.baseUri + '#Action=DeleteEventSubscription?SubscriptionName=' + (SubscriptionName == null ? '' : encodeURIComponent(SubscriptionName)) + '&Action=' + Action + '&Version=' + Version, { observe: 'response', responseType: 'text' });
		}

		/**
		 * <p>Deletes a global database cluster. The primary and secondary clusters must already be detached or destroyed first.</p> <note> <p>This action only applies to Aurora DB clusters.</p> </note>
		 * Get #Action=DeleteGlobalCluster
		 * @param {string} GlobalClusterIdentifier The cluster identifier of the global database cluster being deleted.
		 * @return {void} Success
		 */
		GET_DeleteGlobalCluster(GlobalClusterIdentifier: string, Action: GET_DeleteGlobalClusterAction, Version: GET_AddRoleToDBClusterVersion): Observable<HttpResponse<string>> {
			return this.http.get(this.baseUri + '#Action=DeleteGlobalCluster?GlobalClusterIdentifier=' + (GlobalClusterIdentifier == null ? '' : encodeURIComponent(GlobalClusterIdentifier)) + '&Action=' + Action + '&Version=' + Version, { observe: 'response', responseType: 'text' });
		}

		/**
		 * Deletes an existing option group.
		 * Get #Action=DeleteOptionGroup
		 * @param {string} OptionGroupName <p>The name of the option group to be deleted.</p> <note> <p>You can't delete default option groups.</p> </note>
		 * @return {void} Success
		 */
		GET_DeleteOptionGroup(OptionGroupName: string, Action: GET_DeleteOptionGroupAction, Version: GET_AddRoleToDBClusterVersion): Observable<HttpResponse<string>> {
			return this.http.get(this.baseUri + '#Action=DeleteOptionGroup?OptionGroupName=' + (OptionGroupName == null ? '' : encodeURIComponent(OptionGroupName)) + '&Action=' + Action + '&Version=' + Version, { observe: 'response', responseType: 'text' });
		}

		/**
		 * Remove the association between one or more <code>DBProxyTarget</code> data structures and a <code>DBProxyTargetGroup</code>.
		 * Get #Action=DeregisterDBProxyTargets
		 * @param {string} DBProxyName The identifier of the <code>DBProxy</code> that is associated with the <code>DBProxyTargetGroup</code>.
		 * @param {string} TargetGroupName The identifier of the <code>DBProxyTargetGroup</code>.
		 * @param {Array<string>} DBInstanceIdentifiers One or more DB instance identifiers.
		 * @param {Array<string>} DBClusterIdentifiers One or more DB cluster identifiers.
		 * @return {void} Success
		 */
		GET_DeregisterDBProxyTargets(DBProxyName: string, TargetGroupName: string | null | undefined, DBInstanceIdentifiers: Array<string> | null | undefined, DBClusterIdentifiers: Array<string> | null | undefined, Action: GET_DeregisterDBProxyTargetsAction, Version: GET_AddRoleToDBClusterVersion): Observable<HttpResponse<string>> {
			return this.http.get(this.baseUri + '#Action=DeregisterDBProxyTargets?DBProxyName=' + (DBProxyName == null ? '' : encodeURIComponent(DBProxyName)) + '&TargetGroupName=' + (TargetGroupName == null ? '' : encodeURIComponent(TargetGroupName)) + '&' + DBInstanceIdentifiers?.map(z => `DBInstanceIdentifiers=${encodeURIComponent(z)}`).join('&') + '&' + DBClusterIdentifiers?.map(z => `DBClusterIdentifiers=${encodeURIComponent(z)}`).join('&') + '&Action=' + Action + '&Version=' + Version, { observe: 'response', responseType: 'text' });
		}

		/**
		 * <p>Lists all of the attributes for a customer account. The attributes include Amazon RDS quotas for the account, such as the number of DB instances allowed. The description for a quota includes the quota name, current usage toward that quota, and the quota's maximum value.</p> <p>This command doesn't take any parameters.</p>
		 * Get #Action=DescribeAccountAttributes
		 * @return {void} Success
		 */
		GET_DescribeAccountAttributes(Action: GET_DescribeAccountAttributesAction, Version: GET_AddRoleToDBClusterVersion): Observable<HttpResponse<string>> {
			return this.http.get(this.baseUri + '#Action=DescribeAccountAttributes?Action=' + Action + '&Version=' + Version, { observe: 'response', responseType: 'text' });
		}

		/**
		 * <p>Describes one or more blue/green deployments.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/blue-green-deployments.html">Using Amazon RDS Blue/Green Deployments for database updates</a> in the <i>Amazon RDS User Guide</i> and <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/blue-green-deployments.html"> Using Amazon RDS Blue/Green Deployments for database updates</a> in the <i>Amazon Aurora User Guide</i>.</p>
		 * Get #Action=DescribeBlueGreenDeployments
		 * @param {string} BlueGreenDeploymentIdentifier <p>The blue/green deployment identifier. If you specify this parameter, the response only includes information about the specific blue/green deployment. This parameter isn't case-sensitive.</p> <p>Constraints:</p> <ul> <li> <p>Must match an existing blue/green deployment identifier.</p> </li> </ul>
		 * @param {Array<string>} Filters <p>A filter that specifies one or more blue/green deployments to describe.</p> <p>Valid Values:</p> <ul> <li> <p> <code>blue-green-deployment-identifier</code> - Accepts system-generated identifiers for blue/green deployments. The results list only includes information about the blue/green deployments with the specified identifiers.</p> </li> <li> <p> <code>blue-green-deployment-name</code> - Accepts user-supplied names for blue/green deployments. The results list only includes information about the blue/green deployments with the specified names.</p> </li> <li> <p> <code>source</code> - Accepts source databases for a blue/green deployment. The results list only includes information about the blue/green deployments with the specified source databases.</p> </li> <li> <p> <code>target</code> - Accepts target databases for a blue/green deployment. The results list only includes information about the blue/green deployments with the specified target databases.</p> </li> </ul>
		 * @param {string} Marker An optional pagination token provided by a previous <code>DescribeBlueGreenDeployments</code> request. If you specify this parameter, the response only includes records beyond the marker, up to the value specified by <code>MaxRecords</code>.
		 * @param {number} MaxRecords <p>The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a pagination token called a marker is included in the response so you can retrieve the remaining results.</p> <p>Default: 100</p> <p>Constraints:</p> <ul> <li> <p>Must be a minimum of 20.</p> </li> <li> <p>Can't exceed 100.</p> </li> </ul>
		 * @return {void} Success
		 */
		GET_DescribeBlueGreenDeployments(BlueGreenDeploymentIdentifier: string | null | undefined, Filters: Array<string> | null | undefined, Marker: string | null | undefined, MaxRecords: number | null | undefined, Action: GET_DescribeBlueGreenDeploymentsAction, Version: GET_AddRoleToDBClusterVersion): Observable<HttpResponse<string>> {
			return this.http.get(this.baseUri + '#Action=DescribeBlueGreenDeployments?BlueGreenDeploymentIdentifier=' + (BlueGreenDeploymentIdentifier == null ? '' : encodeURIComponent(BlueGreenDeploymentIdentifier)) + '&' + Filters?.map(z => `Filters=${encodeURIComponent(z)}`).join('&') + '&Marker=' + (Marker == null ? '' : encodeURIComponent(Marker)) + '&MaxRecords=' + MaxRecords + '&Action=' + Action + '&Version=' + Version, { observe: 'response', responseType: 'text' });
		}

		/**
		 * <p>Lists the set of CA certificates provided by Amazon RDS for this Amazon Web Services account.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/UsingWithRDS.SSL.html">Using SSL/TLS to encrypt a connection to a DB instance</a> in the <i>Amazon RDS User Guide</i> and <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/UsingWithRDS.SSL.html"> Using SSL/TLS to encrypt a connection to a DB cluster</a> in the <i>Amazon Aurora User Guide</i>.</p>
		 * Get #Action=DescribeCertificates
		 * @param {string} CertificateIdentifier <p>The user-supplied certificate identifier. If this parameter is specified, information for only the identified certificate is returned. This parameter isn't case-sensitive.</p> <p>Constraints:</p> <ul> <li> <p>Must match an existing CertificateIdentifier.</p> </li> </ul>
		 * @param {Array<string>} Filters This parameter isn't currently supported.
		 * @param {number} MaxRecords <p>The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a pagination token called a marker is included in the response so you can retrieve the remaining results.</p> <p>Default: 100</p> <p>Constraints: Minimum 20, maximum 100.</p>
		 * @param {string} Marker An optional pagination token provided by a previous <code>DescribeCertificates</code> request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>.
		 * @return {void} Success
		 */
		GET_DescribeCertificates(CertificateIdentifier: string | null | undefined, Filters: Array<string> | null | undefined, MaxRecords: number | null | undefined, Marker: string | null | undefined, Action: GET_DescribeCertificatesAction, Version: GET_AddRoleToDBClusterVersion): Observable<HttpResponse<string>> {
			return this.http.get(this.baseUri + '#Action=DescribeCertificates?CertificateIdentifier=' + (CertificateIdentifier == null ? '' : encodeURIComponent(CertificateIdentifier)) + '&' + Filters?.map(z => `Filters=${encodeURIComponent(z)}`).join('&') + '&MaxRecords=' + MaxRecords + '&Marker=' + (Marker == null ? '' : encodeURIComponent(Marker)) + '&Action=' + Action + '&Version=' + Version, { observe: 'response', responseType: 'text' });
		}

		/**
		 * <p>Displays backups for both current and deleted DB clusters. For example, use this operation to find details about automated backups for previously deleted clusters. Current clusters are returned for both the <code>DescribeDBClusterAutomatedBackups</code> and <code>DescribeDBClusters</code> operations.</p> <p>All parameters are optional.</p>
		 * Get #Action=DescribeDBClusterAutomatedBackups
		 * @param {string} DbClusterResourceId The resource ID of the DB cluster that is the source of the automated backup. This parameter isn't case-sensitive.
		 * @param {string} DBClusterIdentifier (Optional) The user-supplied DB cluster identifier. If this parameter is specified, it must match the identifier of an existing DB cluster. It returns information from the specific DB cluster's automated backup. This parameter isn't case-sensitive.
		 * @param {Array<string>} Filters <p>A filter that specifies which resources to return based on status.</p> <p>Supported filters are the following:</p> <ul> <li> <p> <code>status</code> </p> <ul> <li> <p> <code>retained</code> - Automated backups for deleted clusters and after backup replication is stopped.</p> </li> </ul> </li> <li> <p> <code>db-cluster-id</code> - Accepts DB cluster identifiers and Amazon Resource Names (ARNs). The results list includes only information about the DB cluster automated backups identified by these ARNs.</p> </li> <li> <p> <code>db-cluster-resource-id</code> - Accepts DB resource identifiers and Amazon Resource Names (ARNs). The results list includes only information about the DB cluster resources identified by these ARNs.</p> </li> </ul> <p>Returns all resources by default. The status for each resource is specified in the response.</p>
		 * @param {number} MaxRecords The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a pagination token called a marker is included in the response so that you can retrieve the remaining results.
		 * @param {string} Marker The pagination token provided in the previous request. If this parameter is specified the response includes only records beyond the marker, up to <code>MaxRecords</code>.
		 * @return {void} Success
		 */
		GET_DescribeDBClusterAutomatedBackups(DbClusterResourceId: string | null | undefined, DBClusterIdentifier: string | null | undefined, Filters: Array<string> | null | undefined, MaxRecords: number | null | undefined, Marker: string | null | undefined, Action: GET_DescribeDBClusterAutomatedBackupsAction, Version: GET_AddRoleToDBClusterVersion): Observable<HttpResponse<string>> {
			return this.http.get(this.baseUri + '#Action=DescribeDBClusterAutomatedBackups?DbClusterResourceId=' + (DbClusterResourceId == null ? '' : encodeURIComponent(DbClusterResourceId)) + '&DBClusterIdentifier=' + (DBClusterIdentifier == null ? '' : encodeURIComponent(DBClusterIdentifier)) + '&' + Filters?.map(z => `Filters=${encodeURIComponent(z)}`).join('&') + '&MaxRecords=' + MaxRecords + '&Marker=' + (Marker == null ? '' : encodeURIComponent(Marker)) + '&Action=' + Action + '&Version=' + Version, { observe: 'response', responseType: 'text' });
		}

		/**
		 * <p>Returns information about backtracks for a DB cluster.</p> <p>For more information on Amazon Aurora, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/CHAP_AuroraOverview.html"> What is Amazon Aurora?</a> in the <i>Amazon Aurora User Guide</i>.</p> <note> <p>This action only applies to Aurora MySQL DB clusters.</p> </note>
		 * Get #Action=DescribeDBClusterBacktracks
		 * @param {string} DBClusterIdentifier <p>The DB cluster identifier of the DB cluster to be described. This parameter is stored as a lowercase string.</p> <p>Constraints:</p> <ul> <li> <p>Must contain from 1 to 63 alphanumeric characters or hyphens.</p> </li> <li> <p>First character must be a letter.</p> </li> <li> <p>Can't end with a hyphen or contain two consecutive hyphens.</p> </li> </ul> <p>Example: <code>my-cluster1</code> </p>
		 * @param {string} BacktrackIdentifier <p>If specified, this value is the backtrack identifier of the backtrack to be described.</p> <p>Constraints:</p> <ul> <li> <p>Must contain a valid universally unique identifier (UUID). For more information about UUIDs, see <a href="https://en.wikipedia.org/wiki/Universally_unique_identifier">Universally unique identifier</a>.</p> </li> </ul> <p>Example: <code>123e4567-e89b-12d3-a456-426655440000</code> </p>
		 * @param {Array<string>} Filters <p>A filter that specifies one or more DB clusters to describe. Supported filters include the following:</p> <ul> <li> <p> <code>db-cluster-backtrack-id</code> - Accepts backtrack identifiers. The results list includes information about only the backtracks identified by these identifiers.</p> </li> <li> <p> <code>db-cluster-backtrack-status</code> - Accepts any of the following backtrack status values:</p> <ul> <li> <p> <code>applying</code> </p> </li> <li> <p> <code>completed</code> </p> </li> <li> <p> <code>failed</code> </p> </li> <li> <p> <code>pending</code> </p> </li> </ul> <p>The results list includes information about only the backtracks identified by these values.</p> </li> </ul>
		 * @param {number} MaxRecords <p>The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a pagination token called a marker is included in the response so you can retrieve the remaining results.</p> <p>Default: 100</p> <p>Constraints: Minimum 20, maximum 100.</p>
		 * @param {string} Marker An optional pagination token provided by a previous <code>DescribeDBClusterBacktracks</code> request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>.
		 * @return {void} Success
		 */
		GET_DescribeDBClusterBacktracks(DBClusterIdentifier: string, BacktrackIdentifier: string | null | undefined, Filters: Array<string> | null | undefined, MaxRecords: number | null | undefined, Marker: string | null | undefined, Action: GET_DescribeDBClusterBacktracksAction, Version: GET_AddRoleToDBClusterVersion): Observable<HttpResponse<string>> {
			return this.http.get(this.baseUri + '#Action=DescribeDBClusterBacktracks?DBClusterIdentifier=' + (DBClusterIdentifier == null ? '' : encodeURIComponent(DBClusterIdentifier)) + '&BacktrackIdentifier=' + (BacktrackIdentifier == null ? '' : encodeURIComponent(BacktrackIdentifier)) + '&' + Filters?.map(z => `Filters=${encodeURIComponent(z)}`).join('&') + '&MaxRecords=' + MaxRecords + '&Marker=' + (Marker == null ? '' : encodeURIComponent(Marker)) + '&Action=' + Action + '&Version=' + Version, { observe: 'response', responseType: 'text' });
		}

		/**
		 * <p>Returns information about endpoints for an Amazon Aurora DB cluster.</p> <note> <p>This action only applies to Aurora DB clusters.</p> </note>
		 * Get #Action=DescribeDBClusterEndpoints
		 * @param {string} DBClusterIdentifier The DB cluster identifier of the DB cluster associated with the endpoint. This parameter is stored as a lowercase string.
		 * @param {string} DBClusterEndpointIdentifier The identifier of the endpoint to describe. This parameter is stored as a lowercase string.
		 * @param {Array<string>} Filters A set of name-value pairs that define which endpoints to include in the output. The filters are specified as name-value pairs, in the format <code>Name=<i>endpoint_type</i>,Values=<i>endpoint_type1</i>,<i>endpoint_type2</i>,...</code>. <code>Name</code> can be one of: <code>db-cluster-endpoint-type</code>, <code>db-cluster-endpoint-custom-type</code>, <code>db-cluster-endpoint-id</code>, <code>db-cluster-endpoint-status</code>. <code>Values</code> for the <code> db-cluster-endpoint-type</code> filter can be one or more of: <code>reader</code>, <code>writer</code>, <code>custom</code>. <code>Values</code> for the <code>db-cluster-endpoint-custom-type</code> filter can be one or more of: <code>reader</code>, <code>any</code>. <code>Values</code> for the <code>db-cluster-endpoint-status</code> filter can be one or more of: <code>available</code>, <code>creating</code>, <code>deleting</code>, <code>inactive</code>, <code>modifying</code>.
		 * @param {number} MaxRecords <p>The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a pagination token called a marker is included in the response so you can retrieve the remaining results.</p> <p>Default: 100</p> <p>Constraints: Minimum 20, maximum 100.</p>
		 * @param {string} Marker An optional pagination token provided by a previous <code>DescribeDBClusterEndpoints</code> request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>.
		 * @return {void} Success
		 */
		GET_DescribeDBClusterEndpoints(DBClusterIdentifier: string | null | undefined, DBClusterEndpointIdentifier: string | null | undefined, Filters: Array<string> | null | undefined, MaxRecords: number | null | undefined, Marker: string | null | undefined, Action: GET_DescribeDBClusterEndpointsAction, Version: GET_AddRoleToDBClusterVersion): Observable<HttpResponse<string>> {
			return this.http.get(this.baseUri + '#Action=DescribeDBClusterEndpoints?DBClusterIdentifier=' + (DBClusterIdentifier == null ? '' : encodeURIComponent(DBClusterIdentifier)) + '&DBClusterEndpointIdentifier=' + (DBClusterEndpointIdentifier == null ? '' : encodeURIComponent(DBClusterEndpointIdentifier)) + '&' + Filters?.map(z => `Filters=${encodeURIComponent(z)}`).join('&') + '&MaxRecords=' + MaxRecords + '&Marker=' + (Marker == null ? '' : encodeURIComponent(Marker)) + '&Action=' + Action + '&Version=' + Version, { observe: 'response', responseType: 'text' });
		}

		/**
		 * <p>Returns a list of <code>DBClusterParameterGroup</code> descriptions. If a <code>DBClusterParameterGroupName</code> parameter is specified, the list will contain only the description of the specified DB cluster parameter group.</p> <p>For more information on Amazon Aurora, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/CHAP_AuroraOverview.html"> What is Amazon Aurora?</a> in the <i>Amazon Aurora User Guide</i>.</p> <p>For more information on Multi-AZ DB clusters, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/multi-az-db-clusters-concepts.html"> Multi-AZ DB cluster deployments</a> in the <i>Amazon RDS User Guide</i>.</p>
		 * Get #Action=DescribeDBClusterParameterGroups
		 * @param {string} DBClusterParameterGroupName <p>The name of a specific DB cluster parameter group to return details for.</p> <p>Constraints:</p> <ul> <li> <p>If supplied, must match the name of an existing DBClusterParameterGroup.</p> </li> </ul>
		 * @param {Array<string>} Filters This parameter isn't currently supported.
		 * @param {number} MaxRecords <p>The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a pagination token called a marker is included in the response so you can retrieve the remaining results.</p> <p>Default: 100</p> <p>Constraints: Minimum 20, maximum 100.</p>
		 * @param {string} Marker An optional pagination token provided by a previous <code>DescribeDBClusterParameterGroups</code> request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>.
		 * @return {void} Success
		 */
		GET_DescribeDBClusterParameterGroups(DBClusterParameterGroupName: string | null | undefined, Filters: Array<string> | null | undefined, MaxRecords: number | null | undefined, Marker: string | null | undefined, Action: GET_DescribeDBClusterParameterGroupsAction, Version: GET_AddRoleToDBClusterVersion): Observable<HttpResponse<string>> {
			return this.http.get(this.baseUri + '#Action=DescribeDBClusterParameterGroups?DBClusterParameterGroupName=' + (DBClusterParameterGroupName == null ? '' : encodeURIComponent(DBClusterParameterGroupName)) + '&' + Filters?.map(z => `Filters=${encodeURIComponent(z)}`).join('&') + '&MaxRecords=' + MaxRecords + '&Marker=' + (Marker == null ? '' : encodeURIComponent(Marker)) + '&Action=' + Action + '&Version=' + Version, { observe: 'response', responseType: 'text' });
		}

		/**
		 * <p>Returns the detailed parameter list for a particular DB cluster parameter group.</p> <p>For more information on Amazon Aurora, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/CHAP_AuroraOverview.html"> What is Amazon Aurora?</a> in the <i>Amazon Aurora User Guide</i>.</p> <p>For more information on Multi-AZ DB clusters, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/multi-az-db-clusters-concepts.html"> Multi-AZ DB cluster deployments</a> in the <i>Amazon RDS User Guide</i>.</p>
		 * Get #Action=DescribeDBClusterParameters
		 * @param {string} DBClusterParameterGroupName <p>The name of a specific DB cluster parameter group to return parameter details for.</p> <p>Constraints:</p> <ul> <li> <p>If supplied, must match the name of an existing DBClusterParameterGroup.</p> </li> </ul>
		 * @param {string} Source A value that indicates to return only parameters for a specific source. Parameter sources can be <code>engine</code>, <code>service</code>, or <code>customer</code>.
		 * @param {Array<string>} Filters This parameter isn't currently supported.
		 * @param {number} MaxRecords <p>The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a pagination token called a marker is included in the response so you can retrieve the remaining results.</p> <p>Default: 100</p> <p>Constraints: Minimum 20, maximum 100.</p>
		 * @param {string} Marker An optional pagination token provided by a previous <code>DescribeDBClusterParameters</code> request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>.
		 * @return {void} Success
		 */
		GET_DescribeDBClusterParameters(DBClusterParameterGroupName: string, Source: string | null | undefined, Filters: Array<string> | null | undefined, MaxRecords: number | null | undefined, Marker: string | null | undefined, Action: GET_DescribeDBClusterParametersAction, Version: GET_AddRoleToDBClusterVersion): Observable<HttpResponse<string>> {
			return this.http.get(this.baseUri + '#Action=DescribeDBClusterParameters?DBClusterParameterGroupName=' + (DBClusterParameterGroupName == null ? '' : encodeURIComponent(DBClusterParameterGroupName)) + '&Source=' + (Source == null ? '' : encodeURIComponent(Source)) + '&' + Filters?.map(z => `Filters=${encodeURIComponent(z)}`).join('&') + '&MaxRecords=' + MaxRecords + '&Marker=' + (Marker == null ? '' : encodeURIComponent(Marker)) + '&Action=' + Action + '&Version=' + Version, { observe: 'response', responseType: 'text' });
		}

		/**
		 * <p>Returns a list of DB cluster snapshot attribute names and values for a manual DB cluster snapshot.</p> <p>When sharing snapshots with other Amazon Web Services accounts, <code>DescribeDBClusterSnapshotAttributes</code> returns the <code>restore</code> attribute and a list of IDs for the Amazon Web Services accounts that are authorized to copy or restore the manual DB cluster snapshot. If <code>all</code> is included in the list of values for the <code>restore</code> attribute, then the manual DB cluster snapshot is public and can be copied or restored by all Amazon Web Services accounts.</p> <p>To add or remove access for an Amazon Web Services account to copy or restore a manual DB cluster snapshot, or to make the manual DB cluster snapshot public or private, use the <code>ModifyDBClusterSnapshotAttribute</code> API action.</p>
		 * Get #Action=DescribeDBClusterSnapshotAttributes
		 * @param {string} DBClusterSnapshotIdentifier The identifier for the DB cluster snapshot to describe the attributes for.
		 * @return {void} Success
		 */
		GET_DescribeDBClusterSnapshotAttributes(DBClusterSnapshotIdentifier: string, Action: GET_DescribeDBClusterSnapshotAttributesAction, Version: GET_AddRoleToDBClusterVersion): Observable<HttpResponse<string>> {
			return this.http.get(this.baseUri + '#Action=DescribeDBClusterSnapshotAttributes?DBClusterSnapshotIdentifier=' + (DBClusterSnapshotIdentifier == null ? '' : encodeURIComponent(DBClusterSnapshotIdentifier)) + '&Action=' + Action + '&Version=' + Version, { observe: 'response', responseType: 'text' });
		}

		/**
		 * <p>Returns information about DB cluster snapshots. This API action supports pagination.</p> <p>For more information on Amazon Aurora DB clusters, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/CHAP_AuroraOverview.html"> What is Amazon Aurora?</a> in the <i>Amazon Aurora User Guide</i>.</p> <p>For more information on Multi-AZ DB clusters, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/multi-az-db-clusters-concepts.html"> Multi-AZ DB cluster deployments</a> in the <i>Amazon RDS User Guide</i>.</p>
		 * Get #Action=DescribeDBClusterSnapshots
		 * @param {string} DBClusterIdentifier <p>The ID of the DB cluster to retrieve the list of DB cluster snapshots for. This parameter can't be used in conjunction with the <code>DBClusterSnapshotIdentifier</code> parameter. This parameter isn't case-sensitive.</p> <p>Constraints:</p> <ul> <li> <p>If supplied, must match the identifier of an existing DBCluster.</p> </li> </ul>
		 * @param {string} DBClusterSnapshotIdentifier <p>A specific DB cluster snapshot identifier to describe. This parameter can't be used in conjunction with the <code>DBClusterIdentifier</code> parameter. This value is stored as a lowercase string.</p> <p>Constraints:</p> <ul> <li> <p>If supplied, must match the identifier of an existing DBClusterSnapshot.</p> </li> <li> <p>If this identifier is for an automated snapshot, the <code>SnapshotType</code> parameter must also be specified.</p> </li> </ul>
		 * @param {string} SnapshotType <p>The type of DB cluster snapshots to be returned. You can specify one of the following values:</p> <ul> <li> <p> <code>automated</code> - Return all DB cluster snapshots that have been automatically taken by Amazon RDS for my Amazon Web Services account.</p> </li> <li> <p> <code>manual</code> - Return all DB cluster snapshots that have been taken by my Amazon Web Services account.</p> </li> <li> <p> <code>shared</code> - Return all manual DB cluster snapshots that have been shared to my Amazon Web Services account.</p> </li> <li> <p> <code>public</code> - Return all DB cluster snapshots that have been marked as public.</p> </li> </ul> <p>If you don't specify a <code>SnapshotType</code> value, then both automated and manual DB cluster snapshots are returned. You can include shared DB cluster snapshots with these results by enabling the <code>IncludeShared</code> parameter. You can include public DB cluster snapshots with these results by enabling the <code>IncludePublic</code> parameter.</p> <p>The <code>IncludeShared</code> and <code>IncludePublic</code> parameters don't apply for <code>SnapshotType</code> values of <code>manual</code> or <code>automated</code>. The <code>IncludePublic</code> parameter doesn't apply when <code>SnapshotType</code> is set to <code>shared</code>. The <code>IncludeShared</code> parameter doesn't apply when <code>SnapshotType</code> is set to <code>public</code>.</p>
		 * @param {Array<string>} Filters <p>A filter that specifies one or more DB cluster snapshots to describe.</p> <p>Supported filters:</p> <ul> <li> <p> <code>db-cluster-id</code> - Accepts DB cluster identifiers and DB cluster Amazon Resource Names (ARNs).</p> </li> <li> <p> <code>db-cluster-snapshot-id</code> - Accepts DB cluster snapshot identifiers.</p> </li> <li> <p> <code>snapshot-type</code> - Accepts types of DB cluster snapshots.</p> </li> <li> <p> <code>engine</code> - Accepts names of database engines.</p> </li> </ul>
		 * @param {number} MaxRecords <p>The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a pagination token called a marker is included in the response so you can retrieve the remaining results.</p> <p>Default: 100</p> <p>Constraints: Minimum 20, maximum 100.</p>
		 * @param {string} Marker An optional pagination token provided by a previous <code>DescribeDBClusterSnapshots</code> request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>.
		 * @param {boolean} IncludeShared <p>A value that indicates whether to include shared manual DB cluster snapshots from other Amazon Web Services accounts that this Amazon Web Services account has been given permission to copy or restore. By default, these snapshots are not included.</p> <p>You can give an Amazon Web Services account permission to restore a manual DB cluster snapshot from another Amazon Web Services account by the <code>ModifyDBClusterSnapshotAttribute</code> API action.</p>
		 * @param {boolean} IncludePublic <p>A value that indicates whether to include manual DB cluster snapshots that are public and can be copied or restored by any Amazon Web Services account. By default, the public snapshots are not included.</p> <p>You can share a manual DB cluster snapshot as public by using the <a>ModifyDBClusterSnapshotAttribute</a> API action.</p>
		 * @param {string} DbClusterResourceId A specific DB cluster resource ID to describe.
		 * @return {void} Success
		 */
		GET_DescribeDBClusterSnapshots(DBClusterIdentifier: string | null | undefined, DBClusterSnapshotIdentifier: string | null | undefined, SnapshotType: string | null | undefined, Filters: Array<string> | null | undefined, MaxRecords: number | null | undefined, Marker: string | null | undefined, IncludeShared: boolean | null | undefined, IncludePublic: boolean | null | undefined, DbClusterResourceId: string | null | undefined, Action: GET_DescribeDBClusterSnapshotsAction, Version: GET_AddRoleToDBClusterVersion): Observable<HttpResponse<string>> {
			return this.http.get(this.baseUri + '#Action=DescribeDBClusterSnapshots?DBClusterIdentifier=' + (DBClusterIdentifier == null ? '' : encodeURIComponent(DBClusterIdentifier)) + '&DBClusterSnapshotIdentifier=' + (DBClusterSnapshotIdentifier == null ? '' : encodeURIComponent(DBClusterSnapshotIdentifier)) + '&SnapshotType=' + (SnapshotType == null ? '' : encodeURIComponent(SnapshotType)) + '&' + Filters?.map(z => `Filters=${encodeURIComponent(z)}`).join('&') + '&MaxRecords=' + MaxRecords + '&Marker=' + (Marker == null ? '' : encodeURIComponent(Marker)) + '&IncludeShared=' + IncludeShared + '&IncludePublic=' + IncludePublic + '&DbClusterResourceId=' + (DbClusterResourceId == null ? '' : encodeURIComponent(DbClusterResourceId)) + '&Action=' + Action + '&Version=' + Version, { observe: 'response', responseType: 'text' });
		}

		/**
		 * <p>Describes existing Amazon Aurora DB clusters and Multi-AZ DB clusters. This API supports pagination.</p> <p>For more information on Amazon Aurora DB clusters, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/CHAP_AuroraOverview.html"> What is Amazon Aurora?</a> in the <i>Amazon Aurora User Guide</i>.</p> <p>For more information on Multi-AZ DB clusters, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/multi-az-db-clusters-concepts.html"> Multi-AZ DB cluster deployments</a> in the <i>Amazon RDS User Guide</i>.</p> <p>This operation can also return information for Amazon Neptune DB instances and Amazon DocumentDB instances.</p>
		 * Get #Action=DescribeDBClusters
		 * @param {string} DBClusterIdentifier <p>The user-supplied DB cluster identifier or the Amazon Resource Name (ARN) of the DB cluster. If this parameter is specified, information for only the specific DB cluster is returned. This parameter isn't case-sensitive.</p> <p>Constraints:</p> <ul> <li> <p>If supplied, must match an existing DB cluster identifier.</p> </li> </ul>
		 * @param {Array<string>} Filters <p>A filter that specifies one or more DB clusters to describe.</p> <p>Supported Filters:</p> <ul> <li> <p> <code>clone-group-id</code> - Accepts clone group identifiers. The results list only includes information about the DB clusters associated with these clone groups.</p> </li> <li> <p> <code>db-cluster-id</code> - Accepts DB cluster identifiers and DB cluster Amazon Resource Names (ARNs). The results list only includes information about the DB clusters identified by these ARNs.</p> </li> <li> <p> <code>db-cluster-resource-id</code> - Accepts DB cluster resource identifiers. The results list will only include information about the DB clusters identified by these DB cluster resource identifiers.</p> </li> <li> <p> <code>domain</code> - Accepts Active Directory directory IDs. The results list only includes information about the DB clusters associated with these domains.</p> </li> <li> <p> <code>engine</code> - Accepts engine names. The results list only includes information about the DB clusters for these engines.</p> </li> </ul>
		 * @param {number} MaxRecords <p>The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a pagination token called a marker is included in the response so you can retrieve the remaining results.</p> <p>Default: 100</p> <p>Constraints: Minimum 20, maximum 100.</p>
		 * @param {string} Marker An optional pagination token provided by a previous <code>DescribeDBClusters</code> request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>.
		 * @param {boolean} IncludeShared Specifies whether the output includes information about clusters shared from other Amazon Web Services accounts.
		 * @return {void} Success
		 */
		GET_DescribeDBClusters(DBClusterIdentifier: string | null | undefined, Filters: Array<string> | null | undefined, MaxRecords: number | null | undefined, Marker: string | null | undefined, IncludeShared: boolean | null | undefined, Action: GET_DescribeDBClustersAction, Version: GET_AddRoleToDBClusterVersion): Observable<HttpResponse<string>> {
			return this.http.get(this.baseUri + '#Action=DescribeDBClusters?DBClusterIdentifier=' + (DBClusterIdentifier == null ? '' : encodeURIComponent(DBClusterIdentifier)) + '&' + Filters?.map(z => `Filters=${encodeURIComponent(z)}`).join('&') + '&MaxRecords=' + MaxRecords + '&Marker=' + (Marker == null ? '' : encodeURIComponent(Marker)) + '&IncludeShared=' + IncludeShared + '&Action=' + Action + '&Version=' + Version, { observe: 'response', responseType: 'text' });
		}

		/**
		 * Returns a list of the available DB engines.
		 * Get #Action=DescribeDBEngineVersions
		 * @param {string} Engine <p>The database engine to return.</p> <p>Valid Values:</p> <ul> <li> <p> <code>aurora-mysql</code> </p> </li> <li> <p> <code>aurora-postgresql</code> </p> </li> <li> <p> <code>custom-oracle-ee</code> </p> </li> <li> <p> <code>mariadb</code> </p> </li> <li> <p> <code>mysql</code> </p> </li> <li> <p> <code>oracle-ee</code> </p> </li> <li> <p> <code>oracle-ee-cdb</code> </p> </li> <li> <p> <code>oracle-se2</code> </p> </li> <li> <p> <code>oracle-se2-cdb</code> </p> </li> <li> <p> <code>postgres</code> </p> </li> <li> <p> <code>sqlserver-ee</code> </p> </li> <li> <p> <code>sqlserver-se</code> </p> </li> <li> <p> <code>sqlserver-ex</code> </p> </li> <li> <p> <code>sqlserver-web</code> </p> </li> </ul>
		 * @param {string} EngineVersion <p>The database engine version to return.</p> <p>Example: <code>5.1.49</code> </p>
		 * @param {string} DBParameterGroupFamily <p>The name of a specific DB parameter group family to return details for.</p> <p>Constraints:</p> <ul> <li> <p>If supplied, must match an existing DBParameterGroupFamily.</p> </li> </ul>
		 * @param {Array<string>} Filters <p>A filter that specifies one or more DB engine versions to describe.</p> <p>Supported filters:</p> <ul> <li> <p> <code>db-parameter-group-family</code> - Accepts parameter groups family names. The results list only includes information about the DB engine versions for these parameter group families.</p> </li> <li> <p> <code>engine</code> - Accepts engine names. The results list only includes information about the DB engine versions for these engines.</p> </li> <li> <p> <code>engine-mode</code> - Accepts DB engine modes. The results list only includes information about the DB engine versions for these engine modes. Valid DB engine modes are the following:</p> <ul> <li> <p> <code>global</code> </p> </li> <li> <p> <code>multimaster</code> </p> </li> <li> <p> <code>parallelquery</code> </p> </li> <li> <p> <code>provisioned</code> </p> </li> <li> <p> <code>serverless</code> </p> </li> </ul> </li> <li> <p> <code>engine-version</code> - Accepts engine versions. The results list only includes information about the DB engine versions for these engine versions.</p> </li> <li> <p> <code>status</code> - Accepts engine version statuses. The results list only includes information about the DB engine versions for these statuses. Valid statuses are the following:</p> <ul> <li> <p> <code>available</code> </p> </li> <li> <p> <code>deprecated</code> </p> </li> </ul> </li> </ul>
		 * @param {number} MaxRecords <p>The maximum number of records to include in the response. If more than the <code>MaxRecords</code> value is available, a pagination token called a marker is included in the response so you can retrieve the remaining results.</p> <p>Default: 100</p> <p>Constraints: Minimum 20, maximum 100.</p>
		 * @param {string} Marker An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>.
		 * @param {boolean} DefaultOnly A value that indicates whether only the default version of the specified engine or engine and major version combination is returned.
		 * @param {boolean} ListSupportedCharacterSets <p>A value that indicates whether to list the supported character sets for each engine version.</p> <p>If this parameter is enabled and the requested engine supports the <code>CharacterSetName</code> parameter for <code>CreateDBInstance</code>, the response includes a list of supported character sets for each engine version.</p> <p>For RDS Custom, the default is not to list supported character sets. If you set <code>ListSupportedCharacterSets</code> to <code>true</code>, RDS Custom returns no results.</p>
		 * @param {boolean} ListSupportedTimezones <p>A value that indicates whether to list the supported time zones for each engine version.</p> <p>If this parameter is enabled and the requested engine supports the <code>TimeZone</code> parameter for <code>CreateDBInstance</code>, the response includes a list of supported time zones for each engine version.</p> <p>For RDS Custom, the default is not to list supported time zones. If you set <code>ListSupportedTimezones</code> to <code>true</code>, RDS Custom returns no results.</p>
		 * @param {boolean} IncludeAll A value that indicates whether to include engine versions that aren't available in the list. The default is to list only available engine versions.
		 * @return {void} Success
		 */
		GET_DescribeDBEngineVersions(Engine: string | null | undefined, EngineVersion: string | null | undefined, DBParameterGroupFamily: string | null | undefined, Filters: Array<string> | null | undefined, MaxRecords: number | null | undefined, Marker: string | null | undefined, DefaultOnly: boolean | null | undefined, ListSupportedCharacterSets: boolean | null | undefined, ListSupportedTimezones: boolean | null | undefined, IncludeAll: boolean | null | undefined, Action: GET_DescribeDBEngineVersionsAction, Version: GET_AddRoleToDBClusterVersion): Observable<HttpResponse<string>> {
			return this.http.get(this.baseUri + '#Action=DescribeDBEngineVersions?Engine=' + (Engine == null ? '' : encodeURIComponent(Engine)) + '&EngineVersion=' + (EngineVersion == null ? '' : encodeURIComponent(EngineVersion)) + '&DBParameterGroupFamily=' + (DBParameterGroupFamily == null ? '' : encodeURIComponent(DBParameterGroupFamily)) + '&' + Filters?.map(z => `Filters=${encodeURIComponent(z)}`).join('&') + '&MaxRecords=' + MaxRecords + '&Marker=' + (Marker == null ? '' : encodeURIComponent(Marker)) + '&DefaultOnly=' + DefaultOnly + '&ListSupportedCharacterSets=' + ListSupportedCharacterSets + '&ListSupportedTimezones=' + ListSupportedTimezones + '&IncludeAll=' + IncludeAll + '&Action=' + Action + '&Version=' + Version, { observe: 'response', responseType: 'text' });
		}

		/**
		 * <p>Displays backups for both current and deleted instances. For example, use this operation to find details about automated backups for previously deleted instances. Current instances with retention periods greater than zero (0) are returned for both the <code>DescribeDBInstanceAutomatedBackups</code> and <code>DescribeDBInstances</code> operations.</p> <p>All parameters are optional.</p>
		 * Get #Action=DescribeDBInstanceAutomatedBackups
		 * @param {string} DbiResourceId The resource ID of the DB instance that is the source of the automated backup. This parameter isn't case-sensitive.
		 * @param {string} DBInstanceIdentifier (Optional) The user-supplied instance identifier. If this parameter is specified, it must match the identifier of an existing DB instance. It returns information from the specific DB instance's automated backup. This parameter isn't case-sensitive.
		 * @param {Array<string>} Filters <p>A filter that specifies which resources to return based on status.</p> <p>Supported filters are the following:</p> <ul> <li> <p> <code>status</code> </p> <ul> <li> <p> <code>active</code> - Automated backups for current instances.</p> </li> <li> <p> <code>creating</code> - Automated backups that are waiting for the first automated snapshot to be available.</p> </li> <li> <p> <code>retained</code> - Automated backups for deleted instances and after backup replication is stopped.</p> </li> </ul> </li> <li> <p> <code>db-instance-id</code> - Accepts DB instance identifiers and Amazon Resource Names (ARNs). The results list includes only information about the DB instance automated backups identified by these ARNs.</p> </li> <li> <p> <code>dbi-resource-id</code> - Accepts DB resource identifiers and Amazon Resource Names (ARNs). The results list includes only information about the DB instance resources identified by these ARNs.</p> </li> </ul> <p>Returns all resources by default. The status for each resource is specified in the response.</p>
		 * @param {number} MaxRecords The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a pagination token called a marker is included in the response so that you can retrieve the remaining results.
		 * @param {string} Marker The pagination token provided in the previous request. If this parameter is specified the response includes only records beyond the marker, up to <code>MaxRecords</code>.
		 * @param {string} DBInstanceAutomatedBackupsArn <p>The Amazon Resource Name (ARN) of the replicated automated backups, for example, <code>arn:aws:rds:us-east-1:123456789012:auto-backup:ab-L2IJCEXJP7XQ7HOJ4SIEXAMPLE</code>.</p> <p>This setting doesn't apply to RDS Custom.</p>
		 * @return {void} Success
		 */
		GET_DescribeDBInstanceAutomatedBackups(DbiResourceId: string | null | undefined, DBInstanceIdentifier: string | null | undefined, Filters: Array<string> | null | undefined, MaxRecords: number | null | undefined, Marker: string | null | undefined, DBInstanceAutomatedBackupsArn: string | null | undefined, Action: GET_DescribeDBInstanceAutomatedBackupsAction, Version: GET_AddRoleToDBClusterVersion): Observable<HttpResponse<string>> {
			return this.http.get(this.baseUri + '#Action=DescribeDBInstanceAutomatedBackups?DbiResourceId=' + (DbiResourceId == null ? '' : encodeURIComponent(DbiResourceId)) + '&DBInstanceIdentifier=' + (DBInstanceIdentifier == null ? '' : encodeURIComponent(DBInstanceIdentifier)) + '&' + Filters?.map(z => `Filters=${encodeURIComponent(z)}`).join('&') + '&MaxRecords=' + MaxRecords + '&Marker=' + (Marker == null ? '' : encodeURIComponent(Marker)) + '&DBInstanceAutomatedBackupsArn=' + (DBInstanceAutomatedBackupsArn == null ? '' : encodeURIComponent(DBInstanceAutomatedBackupsArn)) + '&Action=' + Action + '&Version=' + Version, { observe: 'response', responseType: 'text' });
		}

		/**
		 * <p>Describes provisioned RDS instances. This API supports pagination.</p> <note> <p>This operation can also return information for Amazon Neptune DB instances and Amazon DocumentDB instances.</p> </note>
		 * Get #Action=DescribeDBInstances
		 * @param {string} DBInstanceIdentifier <p>The user-supplied instance identifier or the Amazon Resource Name (ARN) of the DB instance. If this parameter is specified, information from only the specific DB instance is returned. This parameter isn't case-sensitive.</p> <p>Constraints:</p> <ul> <li> <p>If supplied, must match the identifier of an existing DB instance.</p> </li> </ul>
		 * @param {Array<string>} Filters <p>A filter that specifies one or more DB instances to describe.</p> <p>Supported Filters:</p> <ul> <li> <p> <code>db-cluster-id</code> - Accepts DB cluster identifiers and DB cluster Amazon Resource Names (ARNs). The results list only includes information about the DB instances associated with the DB clusters identified by these ARNs.</p> </li> <li> <p> <code>db-instance-id</code> - Accepts DB instance identifiers and DB instance Amazon Resource Names (ARNs). The results list only includes information about the DB instances identified by these ARNs.</p> </li> <li> <p> <code>dbi-resource-id</code> - Accepts DB instance resource identifiers. The results list only includes information about the DB instances identified by these DB instance resource identifiers.</p> </li> <li> <p> <code>domain</code> - Accepts Active Directory directory IDs. The results list only includes information about the DB instances associated with these domains.</p> </li> <li> <p> <code>engine</code> - Accepts engine names. The results list only includes information about the DB instances for these engines.</p> </li> </ul>
		 * @param {number} MaxRecords <p>The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a pagination token called a marker is included in the response so that you can retrieve the remaining results.</p> <p>Default: 100</p> <p>Constraints: Minimum 20, maximum 100.</p>
		 * @param {string} Marker An optional pagination token provided by a previous <code>DescribeDBInstances</code> request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>.
		 * @return {void} Success
		 */
		GET_DescribeDBInstances(DBInstanceIdentifier: string | null | undefined, Filters: Array<string> | null | undefined, MaxRecords: number | null | undefined, Marker: string | null | undefined, Action: GET_DescribeDBInstancesAction, Version: GET_AddRoleToDBClusterVersion): Observable<HttpResponse<string>> {
			return this.http.get(this.baseUri + '#Action=DescribeDBInstances?DBInstanceIdentifier=' + (DBInstanceIdentifier == null ? '' : encodeURIComponent(DBInstanceIdentifier)) + '&' + Filters?.map(z => `Filters=${encodeURIComponent(z)}`).join('&') + '&MaxRecords=' + MaxRecords + '&Marker=' + (Marker == null ? '' : encodeURIComponent(Marker)) + '&Action=' + Action + '&Version=' + Version, { observe: 'response', responseType: 'text' });
		}

		/**
		 * <p>Returns a list of DB log files for the DB instance.</p> <p>This command doesn't apply to RDS Custom.</p>
		 * Get #Action=DescribeDBLogFiles
		 * @param {string} DBInstanceIdentifier <p>The customer-assigned name of the DB instance that contains the log files you want to list.</p> <p>Constraints:</p> <ul> <li> <p>Must match the identifier of an existing DBInstance.</p> </li> </ul>
		 * @param {string} FilenameContains Filters the available log files for log file names that contain the specified string.
		 * @param {number} FileLastWritten Filters the available log files for files written since the specified date, in POSIX timestamp format with milliseconds.
		 * @param {number} FileSize Filters the available log files for files larger than the specified size.
		 * @param {Array<string>} Filters This parameter isn't currently supported.
		 * @param {number} MaxRecords The maximum number of records to include in the response. If more records exist than the specified MaxRecords value, a pagination token called a marker is included in the response so you can retrieve the remaining results.
		 * @param {string} Marker The pagination token provided in the previous request. If this parameter is specified the response includes only records beyond the marker, up to MaxRecords.
		 * @return {void} Success
		 */
		GET_DescribeDBLogFiles(DBInstanceIdentifier: string, FilenameContains: string | null | undefined, FileLastWritten: number | null | undefined, FileSize: number | null | undefined, Filters: Array<string> | null | undefined, MaxRecords: number | null | undefined, Marker: string | null | undefined, Action: GET_DescribeDBLogFilesAction, Version: GET_AddRoleToDBClusterVersion): Observable<HttpResponse<string>> {
			return this.http.get(this.baseUri + '#Action=DescribeDBLogFiles?DBInstanceIdentifier=' + (DBInstanceIdentifier == null ? '' : encodeURIComponent(DBInstanceIdentifier)) + '&FilenameContains=' + (FilenameContains == null ? '' : encodeURIComponent(FilenameContains)) + '&FileLastWritten=' + FileLastWritten + '&FileSize=' + FileSize + '&' + Filters?.map(z => `Filters=${encodeURIComponent(z)}`).join('&') + '&MaxRecords=' + MaxRecords + '&Marker=' + (Marker == null ? '' : encodeURIComponent(Marker)) + '&Action=' + Action + '&Version=' + Version, { observe: 'response', responseType: 'text' });
		}

		/**
		 * Returns a list of <code>DBParameterGroup</code> descriptions. If a <code>DBParameterGroupName</code> is specified, the list will contain only the description of the specified DB parameter group.
		 * Get #Action=DescribeDBParameterGroups
		 * @param {string} DBParameterGroupName <p>The name of a specific DB parameter group to return details for.</p> <p>Constraints:</p> <ul> <li> <p>If supplied, must match the name of an existing DBClusterParameterGroup.</p> </li> </ul>
		 * @param {Array<string>} Filters This parameter isn't currently supported.
		 * @param {number} MaxRecords <p>The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a pagination token called a marker is included in the response so that you can retrieve the remaining results.</p> <p>Default: 100</p> <p>Constraints: Minimum 20, maximum 100.</p>
		 * @param {string} Marker An optional pagination token provided by a previous <code>DescribeDBParameterGroups</code> request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>.
		 * @return {void} Success
		 */
		GET_DescribeDBParameterGroups(DBParameterGroupName: string | null | undefined, Filters: Array<string> | null | undefined, MaxRecords: number | null | undefined, Marker: string | null | undefined, Action: GET_DescribeDBParameterGroupsAction, Version: GET_AddRoleToDBClusterVersion): Observable<HttpResponse<string>> {
			return this.http.get(this.baseUri + '#Action=DescribeDBParameterGroups?DBParameterGroupName=' + (DBParameterGroupName == null ? '' : encodeURIComponent(DBParameterGroupName)) + '&' + Filters?.map(z => `Filters=${encodeURIComponent(z)}`).join('&') + '&MaxRecords=' + MaxRecords + '&Marker=' + (Marker == null ? '' : encodeURIComponent(Marker)) + '&Action=' + Action + '&Version=' + Version, { observe: 'response', responseType: 'text' });
		}

		/**
		 * Returns the detailed parameter list for a particular DB parameter group.
		 * Get #Action=DescribeDBParameters
		 * @param {string} DBParameterGroupName <p>The name of a specific DB parameter group to return details for.</p> <p>Constraints:</p> <ul> <li> <p>If supplied, must match the name of an existing DBParameterGroup.</p> </li> </ul>
		 * @param {string} Source <p>The parameter types to return.</p> <p>Default: All parameter types returned</p> <p>Valid Values: <code>user | system | engine-default</code> </p>
		 * @param {Array<string>} Filters This parameter isn't currently supported.
		 * @param {number} MaxRecords <p>The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a pagination token called a marker is included in the response so that you can retrieve the remaining results.</p> <p>Default: 100</p> <p>Constraints: Minimum 20, maximum 100.</p>
		 * @param {string} Marker An optional pagination token provided by a previous <code>DescribeDBParameters</code> request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>.
		 * @return {void} Success
		 */
		GET_DescribeDBParameters(DBParameterGroupName: string, Source: string | null | undefined, Filters: Array<string> | null | undefined, MaxRecords: number | null | undefined, Marker: string | null | undefined, Action: GET_DescribeDBParametersAction, Version: GET_AddRoleToDBClusterVersion): Observable<HttpResponse<string>> {
			return this.http.get(this.baseUri + '#Action=DescribeDBParameters?DBParameterGroupName=' + (DBParameterGroupName == null ? '' : encodeURIComponent(DBParameterGroupName)) + '&Source=' + (Source == null ? '' : encodeURIComponent(Source)) + '&' + Filters?.map(z => `Filters=${encodeURIComponent(z)}`).join('&') + '&MaxRecords=' + MaxRecords + '&Marker=' + (Marker == null ? '' : encodeURIComponent(Marker)) + '&Action=' + Action + '&Version=' + Version, { observe: 'response', responseType: 'text' });
		}

		/**
		 * Returns information about DB proxies.
		 * Get #Action=DescribeDBProxies
		 * @param {string} DBProxyName The name of the DB proxy. If you omit this parameter, the output includes information about all DB proxies owned by your Amazon Web Services account ID.
		 * @param {Array<string>} Filters This parameter is not currently supported.
		 * @param {string} Marker An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>.
		 * @param {number} MaxRecords <p>The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a pagination token called a marker is included in the response so that the remaining results can be retrieved.</p> <p>Default: 100</p> <p>Constraints: Minimum 20, maximum 100.</p>
		 * @return {void} Success
		 */
		GET_DescribeDBProxies(DBProxyName: string | null | undefined, Filters: Array<string> | null | undefined, Marker: string | null | undefined, MaxRecords: number | null | undefined, Action: GET_DescribeDBProxiesAction, Version: GET_AddRoleToDBClusterVersion): Observable<HttpResponse<string>> {
			return this.http.get(this.baseUri + '#Action=DescribeDBProxies?DBProxyName=' + (DBProxyName == null ? '' : encodeURIComponent(DBProxyName)) + '&' + Filters?.map(z => `Filters=${encodeURIComponent(z)}`).join('&') + '&Marker=' + (Marker == null ? '' : encodeURIComponent(Marker)) + '&MaxRecords=' + MaxRecords + '&Action=' + Action + '&Version=' + Version, { observe: 'response', responseType: 'text' });
		}

		/**
		 * Returns information about DB proxy endpoints.
		 * Get #Action=DescribeDBProxyEndpoints
		 * @param {string} DBProxyName The name of the DB proxy whose endpoints you want to describe. If you omit this parameter, the output includes information about all DB proxy endpoints associated with all your DB proxies.
		 * @param {string} DBProxyEndpointName The name of a DB proxy endpoint to describe. If you omit this parameter, the output includes information about all DB proxy endpoints associated with the specified proxy.
		 * @param {Array<string>} Filters This parameter is not currently supported.
		 * @param {string} Marker An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>.
		 * @param {number} MaxRecords <p>The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a pagination token called a marker is included in the response so that the remaining results can be retrieved.</p> <p>Default: 100</p> <p>Constraints: Minimum 20, maximum 100.</p>
		 * @return {void} Success
		 */
		GET_DescribeDBProxyEndpoints(DBProxyName: string | null | undefined, DBProxyEndpointName: string | null | undefined, Filters: Array<string> | null | undefined, Marker: string | null | undefined, MaxRecords: number | null | undefined, Action: GET_DescribeDBProxyEndpointsAction, Version: GET_AddRoleToDBClusterVersion): Observable<HttpResponse<string>> {
			return this.http.get(this.baseUri + '#Action=DescribeDBProxyEndpoints?DBProxyName=' + (DBProxyName == null ? '' : encodeURIComponent(DBProxyName)) + '&DBProxyEndpointName=' + (DBProxyEndpointName == null ? '' : encodeURIComponent(DBProxyEndpointName)) + '&' + Filters?.map(z => `Filters=${encodeURIComponent(z)}`).join('&') + '&Marker=' + (Marker == null ? '' : encodeURIComponent(Marker)) + '&MaxRecords=' + MaxRecords + '&Action=' + Action + '&Version=' + Version, { observe: 'response', responseType: 'text' });
		}

		/**
		 * Returns information about DB proxy target groups, represented by <code>DBProxyTargetGroup</code> data structures.
		 * Get #Action=DescribeDBProxyTargetGroups
		 * @param {string} DBProxyName The identifier of the <code>DBProxy</code> associated with the target group.
		 * @param {string} TargetGroupName The identifier of the <code>DBProxyTargetGroup</code> to describe.
		 * @param {Array<string>} Filters This parameter is not currently supported.
		 * @param {string} Marker An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>.
		 * @param {number} MaxRecords <p>The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a pagination token called a marker is included in the response so that the remaining results can be retrieved.</p> <p>Default: 100</p> <p>Constraints: Minimum 20, maximum 100.</p>
		 * @return {void} Success
		 */
		GET_DescribeDBProxyTargetGroups(DBProxyName: string, TargetGroupName: string | null | undefined, Filters: Array<string> | null | undefined, Marker: string | null | undefined, MaxRecords: number | null | undefined, Action: GET_DescribeDBProxyTargetGroupsAction, Version: GET_AddRoleToDBClusterVersion): Observable<HttpResponse<string>> {
			return this.http.get(this.baseUri + '#Action=DescribeDBProxyTargetGroups?DBProxyName=' + (DBProxyName == null ? '' : encodeURIComponent(DBProxyName)) + '&TargetGroupName=' + (TargetGroupName == null ? '' : encodeURIComponent(TargetGroupName)) + '&' + Filters?.map(z => `Filters=${encodeURIComponent(z)}`).join('&') + '&Marker=' + (Marker == null ? '' : encodeURIComponent(Marker)) + '&MaxRecords=' + MaxRecords + '&Action=' + Action + '&Version=' + Version, { observe: 'response', responseType: 'text' });
		}

		/**
		 * Returns information about <code>DBProxyTarget</code> objects. This API supports pagination.
		 * Get #Action=DescribeDBProxyTargets
		 * @param {string} DBProxyName The identifier of the <code>DBProxyTarget</code> to describe.
		 * @param {string} TargetGroupName The identifier of the <code>DBProxyTargetGroup</code> to describe.
		 * @param {Array<string>} Filters This parameter is not currently supported.
		 * @param {string} Marker An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>.
		 * @param {number} MaxRecords <p>The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a pagination token called a marker is included in the response so that the remaining results can be retrieved.</p> <p>Default: 100</p> <p>Constraints: Minimum 20, maximum 100.</p>
		 * @return {void} Success
		 */
		GET_DescribeDBProxyTargets(DBProxyName: string, TargetGroupName: string | null | undefined, Filters: Array<string> | null | undefined, Marker: string | null | undefined, MaxRecords: number | null | undefined, Action: GET_DescribeDBProxyTargetsAction, Version: GET_AddRoleToDBClusterVersion): Observable<HttpResponse<string>> {
			return this.http.get(this.baseUri + '#Action=DescribeDBProxyTargets?DBProxyName=' + (DBProxyName == null ? '' : encodeURIComponent(DBProxyName)) + '&TargetGroupName=' + (TargetGroupName == null ? '' : encodeURIComponent(TargetGroupName)) + '&' + Filters?.map(z => `Filters=${encodeURIComponent(z)}`).join('&') + '&Marker=' + (Marker == null ? '' : encodeURIComponent(Marker)) + '&MaxRecords=' + MaxRecords + '&Action=' + Action + '&Version=' + Version, { observe: 'response', responseType: 'text' });
		}

		/**
		 * <p>Returns a list of <code>DBSecurityGroup</code> descriptions. If a <code>DBSecurityGroupName</code> is specified, the list will contain only the descriptions of the specified DB security group.</p> <note> <p>EC2-Classic was retired on August 15, 2022. If you haven't migrated from EC2-Classic to a VPC, we recommend that you migrate as soon as possible. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/vpc-migrate.html">Migrate from EC2-Classic to a VPC</a> in the <i>Amazon EC2 User Guide</i>, the blog <a href="http://aws.amazon.com/blogs/aws/ec2-classic-is-retiring-heres-how-to-prepare/">EC2-Classic Networking is Retiring – Here’s How to Prepare</a>, and <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_VPC.Non-VPC2VPC.html">Moving a DB instance not in a VPC into a VPC</a> in the <i>Amazon RDS User Guide</i>.</p> </note>
		 * Get #Action=DescribeDBSecurityGroups
		 * @param {string} DBSecurityGroupName The name of the DB security group to return details for.
		 * @param {Array<string>} Filters This parameter isn't currently supported.
		 * @param {number} MaxRecords <p>The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a pagination token called a marker is included in the response so that you can retrieve the remaining results.</p> <p>Default: 100</p> <p>Constraints: Minimum 20, maximum 100.</p>
		 * @param {string} Marker An optional pagination token provided by a previous <code>DescribeDBSecurityGroups</code> request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>.
		 * @return {void} Success
		 */
		GET_DescribeDBSecurityGroups(DBSecurityGroupName: string | null | undefined, Filters: Array<string> | null | undefined, MaxRecords: number | null | undefined, Marker: string | null | undefined, Action: GET_DescribeDBSecurityGroupsAction, Version: GET_AddRoleToDBClusterVersion): Observable<HttpResponse<string>> {
			return this.http.get(this.baseUri + '#Action=DescribeDBSecurityGroups?DBSecurityGroupName=' + (DBSecurityGroupName == null ? '' : encodeURIComponent(DBSecurityGroupName)) + '&' + Filters?.map(z => `Filters=${encodeURIComponent(z)}`).join('&') + '&MaxRecords=' + MaxRecords + '&Marker=' + (Marker == null ? '' : encodeURIComponent(Marker)) + '&Action=' + Action + '&Version=' + Version, { observe: 'response', responseType: 'text' });
		}

		/**
		 * <p>Returns a list of DB snapshot attribute names and values for a manual DB snapshot.</p> <p>When sharing snapshots with other Amazon Web Services accounts, <code>DescribeDBSnapshotAttributes</code> returns the <code>restore</code> attribute and a list of IDs for the Amazon Web Services accounts that are authorized to copy or restore the manual DB snapshot. If <code>all</code> is included in the list of values for the <code>restore</code> attribute, then the manual DB snapshot is public and can be copied or restored by all Amazon Web Services accounts.</p> <p>To add or remove access for an Amazon Web Services account to copy or restore a manual DB snapshot, or to make the manual DB snapshot public or private, use the <code>ModifyDBSnapshotAttribute</code> API action.</p>
		 * Get #Action=DescribeDBSnapshotAttributes
		 * @param {string} DBSnapshotIdentifier The identifier for the DB snapshot to describe the attributes for.
		 * @return {void} Success
		 */
		GET_DescribeDBSnapshotAttributes(DBSnapshotIdentifier: string, Action: GET_DescribeDBSnapshotAttributesAction, Version: GET_AddRoleToDBClusterVersion): Observable<HttpResponse<string>> {
			return this.http.get(this.baseUri + '#Action=DescribeDBSnapshotAttributes?DBSnapshotIdentifier=' + (DBSnapshotIdentifier == null ? '' : encodeURIComponent(DBSnapshotIdentifier)) + '&Action=' + Action + '&Version=' + Version, { observe: 'response', responseType: 'text' });
		}

		/**
		 * Returns information about DB snapshots. This API action supports pagination.
		 * Get #Action=DescribeDBSnapshots
		 * @param {string} DBInstanceIdentifier <p>The ID of the DB instance to retrieve the list of DB snapshots for. This parameter isn't case-sensitive.</p> <p>Constraints:</p> <ul> <li> <p>If supplied, must match the identifier of an existing DBInstance.</p> </li> </ul>
		 * @param {string} DBSnapshotIdentifier <p>A specific DB snapshot identifier to describe. This value is stored as a lowercase string.</p> <p>Constraints:</p> <ul> <li> <p>If supplied, must match the identifier of an existing DBSnapshot.</p> </li> <li> <p>If this identifier is for an automated snapshot, the <code>SnapshotType</code> parameter must also be specified.</p> </li> </ul>
		 * @param {string} SnapshotType <p>The type of snapshots to be returned. You can specify one of the following values:</p> <ul> <li> <p> <code>automated</code> - Return all DB snapshots that have been automatically taken by Amazon RDS for my Amazon Web Services account.</p> </li> <li> <p> <code>manual</code> - Return all DB snapshots that have been taken by my Amazon Web Services account.</p> </li> <li> <p> <code>shared</code> - Return all manual DB snapshots that have been shared to my Amazon Web Services account.</p> </li> <li> <p> <code>public</code> - Return all DB snapshots that have been marked as public.</p> </li> <li> <p> <code>awsbackup</code> - Return the DB snapshots managed by the Amazon Web Services Backup service.</p> <p>For information about Amazon Web Services Backup, see the <a href="https://docs.aws.amazon.com/aws-backup/latest/devguide/whatisbackup.html"> <i>Amazon Web Services Backup Developer Guide.</i> </a> </p> <p>The <code>awsbackup</code> type does not apply to Aurora.</p> </li> </ul> <p>If you don't specify a <code>SnapshotType</code> value, then both automated and manual snapshots are returned. Shared and public DB snapshots are not included in the returned results by default. You can include shared snapshots with these results by enabling the <code>IncludeShared</code> parameter. You can include public snapshots with these results by enabling the <code>IncludePublic</code> parameter.</p> <p>The <code>IncludeShared</code> and <code>IncludePublic</code> parameters don't apply for <code>SnapshotType</code> values of <code>manual</code> or <code>automated</code>. The <code>IncludePublic</code> parameter doesn't apply when <code>SnapshotType</code> is set to <code>shared</code>. The <code>IncludeShared</code> parameter doesn't apply when <code>SnapshotType</code> is set to <code>public</code>.</p>
		 * @param {Array<string>} Filters <p>A filter that specifies one or more DB snapshots to describe.</p> <p>Supported filters:</p> <ul> <li> <p> <code>db-instance-id</code> - Accepts DB instance identifiers and DB instance Amazon Resource Names (ARNs).</p> </li> <li> <p> <code>db-snapshot-id</code> - Accepts DB snapshot identifiers.</p> </li> <li> <p> <code>dbi-resource-id</code> - Accepts identifiers of source DB instances.</p> </li> <li> <p> <code>snapshot-type</code> - Accepts types of DB snapshots.</p> </li> <li> <p> <code>engine</code> - Accepts names of database engines.</p> </li> </ul>
		 * @param {number} MaxRecords <p>The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a pagination token called a marker is included in the response so that you can retrieve the remaining results.</p> <p>Default: 100</p> <p>Constraints: Minimum 20, maximum 100.</p>
		 * @param {string} Marker An optional pagination token provided by a previous <code>DescribeDBSnapshots</code> request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>.
		 * @param {boolean} IncludeShared <p>A value that indicates whether to include shared manual DB cluster snapshots from other Amazon Web Services accounts that this Amazon Web Services account has been given permission to copy or restore. By default, these snapshots are not included.</p> <p>You can give an Amazon Web Services account permission to restore a manual DB snapshot from another Amazon Web Services account by using the <code>ModifyDBSnapshotAttribute</code> API action.</p> <p>This setting doesn't apply to RDS Custom.</p>
		 * @param {boolean} IncludePublic <p>A value that indicates whether to include manual DB cluster snapshots that are public and can be copied or restored by any Amazon Web Services account. By default, the public snapshots are not included.</p> <p>You can share a manual DB snapshot as public by using the <a>ModifyDBSnapshotAttribute</a> API.</p> <p>This setting doesn't apply to RDS Custom.</p>
		 * @param {string} DbiResourceId A specific DB resource ID to describe.
		 * @return {void} Success
		 */
		GET_DescribeDBSnapshots(DBInstanceIdentifier: string | null | undefined, DBSnapshotIdentifier: string | null | undefined, SnapshotType: string | null | undefined, Filters: Array<string> | null | undefined, MaxRecords: number | null | undefined, Marker: string | null | undefined, IncludeShared: boolean | null | undefined, IncludePublic: boolean | null | undefined, DbiResourceId: string | null | undefined, Action: GET_DescribeDBSnapshotsAction, Version: GET_AddRoleToDBClusterVersion): Observable<HttpResponse<string>> {
			return this.http.get(this.baseUri + '#Action=DescribeDBSnapshots?DBInstanceIdentifier=' + (DBInstanceIdentifier == null ? '' : encodeURIComponent(DBInstanceIdentifier)) + '&DBSnapshotIdentifier=' + (DBSnapshotIdentifier == null ? '' : encodeURIComponent(DBSnapshotIdentifier)) + '&SnapshotType=' + (SnapshotType == null ? '' : encodeURIComponent(SnapshotType)) + '&' + Filters?.map(z => `Filters=${encodeURIComponent(z)}`).join('&') + '&MaxRecords=' + MaxRecords + '&Marker=' + (Marker == null ? '' : encodeURIComponent(Marker)) + '&IncludeShared=' + IncludeShared + '&IncludePublic=' + IncludePublic + '&DbiResourceId=' + (DbiResourceId == null ? '' : encodeURIComponent(DbiResourceId)) + '&Action=' + Action + '&Version=' + Version, { observe: 'response', responseType: 'text' });
		}

		/**
		 * <p>Returns a list of DBSubnetGroup descriptions. If a DBSubnetGroupName is specified, the list will contain only the descriptions of the specified DBSubnetGroup.</p> <p>For an overview of CIDR ranges, go to the <a href="http://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing">Wikipedia Tutorial</a>.</p>
		 * Get #Action=DescribeDBSubnetGroups
		 * @param {string} DBSubnetGroupName The name of the DB subnet group to return details for.
		 * @param {Array<string>} Filters This parameter isn't currently supported.
		 * @param {number} MaxRecords <p>The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a pagination token called a marker is included in the response so that you can retrieve the remaining results.</p> <p>Default: 100</p> <p>Constraints: Minimum 20, maximum 100.</p>
		 * @param {string} Marker An optional pagination token provided by a previous DescribeDBSubnetGroups request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>.
		 * @return {void} Success
		 */
		GET_DescribeDBSubnetGroups(DBSubnetGroupName: string | null | undefined, Filters: Array<string> | null | undefined, MaxRecords: number | null | undefined, Marker: string | null | undefined, Action: GET_DescribeDBSubnetGroupsAction, Version: GET_AddRoleToDBClusterVersion): Observable<HttpResponse<string>> {
			return this.http.get(this.baseUri + '#Action=DescribeDBSubnetGroups?DBSubnetGroupName=' + (DBSubnetGroupName == null ? '' : encodeURIComponent(DBSubnetGroupName)) + '&' + Filters?.map(z => `Filters=${encodeURIComponent(z)}`).join('&') + '&MaxRecords=' + MaxRecords + '&Marker=' + (Marker == null ? '' : encodeURIComponent(Marker)) + '&Action=' + Action + '&Version=' + Version, { observe: 'response', responseType: 'text' });
		}

		/**
		 * <p>Returns the default engine and system parameter information for the cluster database engine.</p> <p>For more information on Amazon Aurora, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/CHAP_AuroraOverview.html"> What is Amazon Aurora?</a> in the <i>Amazon Aurora User Guide</i>.</p>
		 * Get #Action=DescribeEngineDefaultClusterParameters
		 * @param {string} DBParameterGroupFamily The name of the DB cluster parameter group family to return engine parameter information for.
		 * @param {Array<string>} Filters This parameter isn't currently supported.
		 * @param {number} MaxRecords <p>The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a pagination token called a marker is included in the response so you can retrieve the remaining results.</p> <p>Default: 100</p> <p>Constraints: Minimum 20, maximum 100.</p>
		 * @param {string} Marker An optional pagination token provided by a previous <code>DescribeEngineDefaultClusterParameters</code> request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>.
		 * @return {void} Success
		 */
		GET_DescribeEngineDefaultClusterParameters(DBParameterGroupFamily: string, Filters: Array<string> | null | undefined, MaxRecords: number | null | undefined, Marker: string | null | undefined, Action: GET_DescribeEngineDefaultClusterParametersAction, Version: GET_AddRoleToDBClusterVersion): Observable<HttpResponse<string>> {
			return this.http.get(this.baseUri + '#Action=DescribeEngineDefaultClusterParameters?DBParameterGroupFamily=' + (DBParameterGroupFamily == null ? '' : encodeURIComponent(DBParameterGroupFamily)) + '&' + Filters?.map(z => `Filters=${encodeURIComponent(z)}`).join('&') + '&MaxRecords=' + MaxRecords + '&Marker=' + (Marker == null ? '' : encodeURIComponent(Marker)) + '&Action=' + Action + '&Version=' + Version, { observe: 'response', responseType: 'text' });
		}

		/**
		 * Returns the default engine and system parameter information for the specified database engine.
		 * Get #Action=DescribeEngineDefaultParameters
		 * @param {string} DBParameterGroupFamily <p>The name of the DB parameter group family.</p> <p>Valid Values:</p> <ul> <li> <p> <code>aurora-mysql5.7</code> </p> </li> <li> <p> <code>aurora-mysql8.0</code> </p> </li> <li> <p> <code>aurora-postgresql10</code> </p> </li> <li> <p> <code>aurora-postgresql11</code> </p> </li> <li> <p> <code>aurora-postgresql12</code> </p> </li> <li> <p> <code>aurora-postgresql13</code> </p> </li> <li> <p> <code>aurora-postgresql14</code> </p> </li> <li> <p> <code>custom-oracle-ee-19</code> </p> </li> <li> <p> <code>mariadb10.2</code> </p> </li> <li> <p> <code>mariadb10.3</code> </p> </li> <li> <p> <code>mariadb10.4</code> </p> </li> <li> <p> <code>mariadb10.5</code> </p> </li> <li> <p> <code>mariadb10.6</code> </p> </li> <li> <p> <code>mysql5.7</code> </p> </li> <li> <p> <code>mysql8.0</code> </p> </li> <li> <p> <code>oracle-ee-19</code> </p> </li> <li> <p> <code>oracle-ee-cdb-19</code> </p> </li> <li> <p> <code>oracle-ee-cdb-21</code> </p> </li> <li> <p> <code>oracle-se2-19</code> </p> </li> <li> <p> <code>oracle-se2-cdb-19</code> </p> </li> <li> <p> <code>oracle-se2-cdb-21</code> </p> </li> <li> <p> <code>postgres10</code> </p> </li> <li> <p> <code>postgres11</code> </p> </li> <li> <p> <code>postgres12</code> </p> </li> <li> <p> <code>postgres13</code> </p> </li> <li> <p> <code>postgres14</code> </p> </li> <li> <p> <code>sqlserver-ee-11.0</code> </p> </li> <li> <p> <code>sqlserver-ee-12.0</code> </p> </li> <li> <p> <code>sqlserver-ee-13.0</code> </p> </li> <li> <p> <code>sqlserver-ee-14.0</code> </p> </li> <li> <p> <code>sqlserver-ee-15.0</code> </p> </li> <li> <p> <code>sqlserver-ex-11.0</code> </p> </li> <li> <p> <code>sqlserver-ex-12.0</code> </p> </li> <li> <p> <code>sqlserver-ex-13.0</code> </p> </li> <li> <p> <code>sqlserver-ex-14.0</code> </p> </li> <li> <p> <code>sqlserver-ex-15.0</code> </p> </li> <li> <p> <code>sqlserver-se-11.0</code> </p> </li> <li> <p> <code>sqlserver-se-12.0</code> </p> </li> <li> <p> <code>sqlserver-se-13.0</code> </p> </li> <li> <p> <code>sqlserver-se-14.0</code> </p> </li> <li> <p> <code>sqlserver-se-15.0</code> </p> </li> <li> <p> <code>sqlserver-web-11.0</code> </p> </li> <li> <p> <code>sqlserver-web-12.0</code> </p> </li> <li> <p> <code>sqlserver-web-13.0</code> </p> </li> <li> <p> <code>sqlserver-web-14.0</code> </p> </li> <li> <p> <code>sqlserver-web-15.0</code> </p> </li> </ul>
		 * @param {Array<string>} Filters This parameter isn't currently supported.
		 * @param {number} MaxRecords <p>The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a pagination token called a marker is included in the response so you can retrieve the remaining results.</p> <p>Default: 100</p> <p>Constraints: Minimum 20, maximum 100.</p>
		 * @param {string} Marker An optional pagination token provided by a previous <code>DescribeEngineDefaultParameters</code> request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>.
		 * @return {void} Success
		 */
		GET_DescribeEngineDefaultParameters(DBParameterGroupFamily: string, Filters: Array<string> | null | undefined, MaxRecords: number | null | undefined, Marker: string | null | undefined, Action: GET_DescribeEngineDefaultParametersAction, Version: GET_AddRoleToDBClusterVersion): Observable<HttpResponse<string>> {
			return this.http.get(this.baseUri + '#Action=DescribeEngineDefaultParameters?DBParameterGroupFamily=' + (DBParameterGroupFamily == null ? '' : encodeURIComponent(DBParameterGroupFamily)) + '&' + Filters?.map(z => `Filters=${encodeURIComponent(z)}`).join('&') + '&MaxRecords=' + MaxRecords + '&Marker=' + (Marker == null ? '' : encodeURIComponent(Marker)) + '&Action=' + Action + '&Version=' + Version, { observe: 'response', responseType: 'text' });
		}

		/**
		 * Displays a list of categories for all event source types, or, if specified, for a specified source type. You can also see this list in the "Amazon RDS event categories and event messages" section of the <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Events.Messages.html"> <i>Amazon RDS User Guide</i> </a> or the <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/USER_Events.Messages.html"> <i>Amazon Aurora User Guide</i> </a>.
		 * Get #Action=DescribeEventCategories
		 * @param {string} SourceType <p>The type of source that is generating the events. For RDS Proxy events, specify <code>db-proxy</code>.</p> <p>Valid values: <code>db-instance</code> | <code>db-cluster</code> | <code>db-parameter-group</code> | <code>db-security-group</code> | <code>db-snapshot</code> | <code>db-cluster-snapshot</code> | <code>db-proxy</code> </p>
		 * @param {Array<string>} Filters This parameter isn't currently supported.
		 * @return {void} Success
		 */
		GET_DescribeEventCategories(SourceType: string | null | undefined, Filters: Array<string> | null | undefined, Action: GET_DescribeEventCategoriesAction, Version: GET_AddRoleToDBClusterVersion): Observable<HttpResponse<string>> {
			return this.http.get(this.baseUri + '#Action=DescribeEventCategories?SourceType=' + (SourceType == null ? '' : encodeURIComponent(SourceType)) + '&' + Filters?.map(z => `Filters=${encodeURIComponent(z)}`).join('&') + '&Action=' + Action + '&Version=' + Version, { observe: 'response', responseType: 'text' });
		}

		/**
		 * <p>Lists all the subscription descriptions for a customer account. The description for a subscription includes <code>SubscriptionName</code>, <code>SNSTopicARN</code>, <code>CustomerID</code>, <code>SourceType</code>, <code>SourceID</code>, <code>CreationTime</code>, and <code>Status</code>.</p> <p>If you specify a <code>SubscriptionName</code>, lists the description for that subscription.</p>
		 * Get #Action=DescribeEventSubscriptions
		 * @param {string} SubscriptionName The name of the RDS event notification subscription you want to describe.
		 * @param {Array<string>} Filters This parameter isn't currently supported.
		 * @param {number} MaxRecords <p>The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a pagination token called a marker is included in the response so that you can retrieve the remaining results.</p> <p>Default: 100</p> <p>Constraints: Minimum 20, maximum 100.</p>
		 * @param {string} Marker An optional pagination token provided by a previous DescribeOrderableDBInstanceOptions request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code> .
		 * @return {void} Success
		 */
		GET_DescribeEventSubscriptions(SubscriptionName: string | null | undefined, Filters: Array<string> | null | undefined, MaxRecords: number | null | undefined, Marker: string | null | undefined, Action: GET_DescribeEventSubscriptionsAction, Version: GET_AddRoleToDBClusterVersion): Observable<HttpResponse<string>> {
			return this.http.get(this.baseUri + '#Action=DescribeEventSubscriptions?SubscriptionName=' + (SubscriptionName == null ? '' : encodeURIComponent(SubscriptionName)) + '&' + Filters?.map(z => `Filters=${encodeURIComponent(z)}`).join('&') + '&MaxRecords=' + MaxRecords + '&Marker=' + (Marker == null ? '' : encodeURIComponent(Marker)) + '&Action=' + Action + '&Version=' + Version, { observe: 'response', responseType: 'text' });
		}

		/**
		 * <p>Returns events related to DB instances, DB clusters, DB parameter groups, DB security groups, DB snapshots, DB cluster snapshots, and RDS Proxies for the past 14 days. Events specific to a particular DB instance, DB cluster, DB parameter group, DB security group, DB snapshot, DB cluster snapshot group, or RDS Proxy can be obtained by providing the name as a parameter.</p> <p>For more information on working with events, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/working-with-events.html">Monitoring Amazon RDS events</a> in the <i>Amazon RDS User Guide</i> and <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/working-with-events.html">Monitoring Amazon Aurora events</a> in the <i>Amazon Aurora User Guide</i>.</p> <note> <p>By default, RDS returns events that were generated in the past hour.</p> </note>
		 * Get #Action=DescribeEvents
		 * @param {string} SourceIdentifier <p>The identifier of the event source for which events are returned. If not specified, then all sources are included in the response.</p> <p>Constraints:</p> <ul> <li> <p>If <code>SourceIdentifier</code> is supplied, <code>SourceType</code> must also be provided.</p> </li> <li> <p>If the source type is a DB instance, a <code>DBInstanceIdentifier</code> value must be supplied.</p> </li> <li> <p>If the source type is a DB cluster, a <code>DBClusterIdentifier</code> value must be supplied.</p> </li> <li> <p>If the source type is a DB parameter group, a <code>DBParameterGroupName</code> value must be supplied.</p> </li> <li> <p>If the source type is a DB security group, a <code>DBSecurityGroupName</code> value must be supplied.</p> </li> <li> <p>If the source type is a DB snapshot, a <code>DBSnapshotIdentifier</code> value must be supplied.</p> </li> <li> <p>If the source type is a DB cluster snapshot, a <code>DBClusterSnapshotIdentifier</code> value must be supplied.</p> </li> <li> <p>If the source type is an RDS Proxy, a <code>DBProxyName</code> value must be supplied.</p> </li> <li> <p>Can't end with a hyphen or contain two consecutive hyphens.</p> </li> </ul>
		 * @param {SourceType} SourceType The event source to retrieve events for. If no value is specified, all events are returned.
		 * @param {Date} StartTime <p>The beginning of the time interval to retrieve events for, specified in ISO 8601 format. For more information about ISO 8601, go to the <a href="http://en.wikipedia.org/wiki/ISO_8601">ISO8601 Wikipedia page.</a> </p> <p>Example: 2009-07-08T18:00Z</p>
		 * @param {Date} EndTime <p>The end of the time interval for which to retrieve events, specified in ISO 8601 format. For more information about ISO 8601, go to the <a href="http://en.wikipedia.org/wiki/ISO_8601">ISO8601 Wikipedia page.</a> </p> <p>Example: 2009-07-08T18:00Z</p>
		 * @param {number} Duration <p>The number of minutes to retrieve events for.</p> <p>Default: 60</p>
		 * @param {Array<string>} EventCategories A list of event categories that trigger notifications for a event notification subscription.
		 * @param {Array<string>} Filters This parameter isn't currently supported.
		 * @param {number} MaxRecords <p>The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a pagination token called a marker is included in the response so that you can retrieve the remaining results.</p> <p>Default: 100</p> <p>Constraints: Minimum 20, maximum 100.</p>
		 * @param {string} Marker An optional pagination token provided by a previous DescribeEvents request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>.
		 * @return {void} Success
		 */
		GET_DescribeEvents(SourceIdentifier: string | null | undefined, SourceType: SourceType | null | undefined, StartTime: Date | null | undefined, EndTime: Date | null | undefined, Duration: number | null | undefined, EventCategories: Array<string> | null | undefined, Filters: Array<string> | null | undefined, MaxRecords: number | null | undefined, Marker: string | null | undefined, Action: GET_DescribeEventsAction, Version: GET_AddRoleToDBClusterVersion): Observable<HttpResponse<string>> {
			return this.http.get(this.baseUri + '#Action=DescribeEvents?SourceIdentifier=' + (SourceIdentifier == null ? '' : encodeURIComponent(SourceIdentifier)) + '&SourceType=' + SourceType + '&StartTime=' + StartTime?.toISOString() + '&EndTime=' + EndTime?.toISOString() + '&Duration=' + Duration + '&' + EventCategories?.map(z => `EventCategories=${encodeURIComponent(z)}`).join('&') + '&' + Filters?.map(z => `Filters=${encodeURIComponent(z)}`).join('&') + '&MaxRecords=' + MaxRecords + '&Marker=' + (Marker == null ? '' : encodeURIComponent(Marker)) + '&Action=' + Action + '&Version=' + Version, { observe: 'response', responseType: 'text' });
		}

		/**
		 * Returns information about a snapshot or cluster export to Amazon S3. This API operation supports pagination.
		 * Get #Action=DescribeExportTasks
		 * @param {string} ExportTaskIdentifier The identifier of the snapshot or cluster export task to be described.
		 * @param {string} SourceArn The Amazon Resource Name (ARN) of the snapshot or cluster exported to Amazon S3.
		 * @param {Array<string>} Filters <p>Filters specify one or more snapshot or cluster exports to describe. The filters are specified as name-value pairs that define what to include in the output. Filter names and values are case-sensitive.</p> <p>Supported filters include the following:</p> <ul> <li> <p> <code>export-task-identifier</code> - An identifier for the snapshot or cluster export task.</p> </li> <li> <p> <code>s3-bucket</code> - The Amazon S3 bucket the data is exported to.</p> </li> <li> <p> <code>source-arn</code> - The Amazon Resource Name (ARN) of the snapshot or cluster exported to Amazon S3.</p> </li> <li> <p> <code>status</code> - The status of the export task. Must be lowercase. Valid statuses are the following:</p> <ul> <li> <p> <code>canceled</code> </p> </li> <li> <p> <code>canceling</code> </p> </li> <li> <p> <code>complete</code> </p> </li> <li> <p> <code>failed</code> </p> </li> <li> <p> <code>in_progress</code> </p> </li> <li> <p> <code>starting</code> </p> </li> </ul> </li> </ul>
		 * @param {string} Marker An optional pagination token provided by a previous <code>DescribeExportTasks</code> request. If you specify this parameter, the response includes only records beyond the marker, up to the value specified by the <code>MaxRecords</code> parameter.
		 * @param {number} MaxRecords <p>The maximum number of records to include in the response. If more records exist than the specified value, a pagination token called a marker is included in the response. You can use the marker in a later <code>DescribeExportTasks</code> request to retrieve the remaining results.</p> <p>Default: 100</p> <p>Constraints: Minimum 20, maximum 100.</p>
		 * @param {ExportSourceType} SourceType The type of source for the export.
		 * @return {void} Success
		 */
		GET_DescribeExportTasks(ExportTaskIdentifier: string | null | undefined, SourceArn: string | null | undefined, Filters: Array<string> | null | undefined, Marker: string | null | undefined, MaxRecords: number | null | undefined, SourceType: ExportSourceType | null | undefined, Action: GET_DescribeExportTasksAction, Version: GET_AddRoleToDBClusterVersion): Observable<HttpResponse<string>> {
			return this.http.get(this.baseUri + '#Action=DescribeExportTasks?ExportTaskIdentifier=' + (ExportTaskIdentifier == null ? '' : encodeURIComponent(ExportTaskIdentifier)) + '&SourceArn=' + (SourceArn == null ? '' : encodeURIComponent(SourceArn)) + '&' + Filters?.map(z => `Filters=${encodeURIComponent(z)}`).join('&') + '&Marker=' + (Marker == null ? '' : encodeURIComponent(Marker)) + '&MaxRecords=' + MaxRecords + '&SourceType=' + SourceType + '&Action=' + Action + '&Version=' + Version, { observe: 'response', responseType: 'text' });
		}

		/**
		 * <p>Returns information about Aurora global database clusters. This API supports pagination.</p> <p>For more information on Amazon Aurora, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/CHAP_AuroraOverview.html"> What is Amazon Aurora?</a> in the <i>Amazon Aurora User Guide</i>.</p> <note> <p>This action only applies to Aurora DB clusters.</p> </note>
		 * Get #Action=DescribeGlobalClusters
		 * @param {string} GlobalClusterIdentifier <p>The user-supplied DB cluster identifier. If this parameter is specified, information from only the specific DB cluster is returned. This parameter isn't case-sensitive.</p> <p>Constraints:</p> <ul> <li> <p>If supplied, must match an existing DBClusterIdentifier.</p> </li> </ul>
		 * @param {Array<string>} Filters This parameter isn't currently supported.
		 * @param {number} MaxRecords <p>The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a pagination token called a marker is included in the response so that you can retrieve the remaining results.</p> <p>Default: 100</p> <p>Constraints: Minimum 20, maximum 100.</p>
		 * @param {string} Marker An optional pagination token provided by a previous <code>DescribeGlobalClusters</code> request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>.
		 * @return {void} Success
		 */
		GET_DescribeGlobalClusters(GlobalClusterIdentifier: string | null | undefined, Filters: Array<string> | null | undefined, MaxRecords: number | null | undefined, Marker: string | null | undefined, Action: GET_DescribeGlobalClustersAction, Version: GET_AddRoleToDBClusterVersion): Observable<HttpResponse<string>> {
			return this.http.get(this.baseUri + '#Action=DescribeGlobalClusters?GlobalClusterIdentifier=' + (GlobalClusterIdentifier == null ? '' : encodeURIComponent(GlobalClusterIdentifier)) + '&' + Filters?.map(z => `Filters=${encodeURIComponent(z)}`).join('&') + '&MaxRecords=' + MaxRecords + '&Marker=' + (Marker == null ? '' : encodeURIComponent(Marker)) + '&Action=' + Action + '&Version=' + Version, { observe: 'response', responseType: 'text' });
		}

		/**
		 * Describes all available options.
		 * Get #Action=DescribeOptionGroupOptions
		 * @param {string} EngineName <p>A required parameter. Options available for the given engine name are described.</p> <p>Valid Values:</p> <ul> <li> <p> <code>mariadb</code> </p> </li> <li> <p> <code>mysql</code> </p> </li> <li> <p> <code>oracle-ee</code> </p> </li> <li> <p> <code>oracle-ee-cdb</code> </p> </li> <li> <p> <code>oracle-se2</code> </p> </li> <li> <p> <code>oracle-se2-cdb</code> </p> </li> <li> <p> <code>postgres</code> </p> </li> <li> <p> <code>sqlserver-ee</code> </p> </li> <li> <p> <code>sqlserver-se</code> </p> </li> <li> <p> <code>sqlserver-ex</code> </p> </li> <li> <p> <code>sqlserver-web</code> </p> </li> </ul>
		 * @param {string} MajorEngineVersion If specified, filters the results to include only options for the specified major engine version.
		 * @param {Array<string>} Filters This parameter isn't currently supported.
		 * @param {number} MaxRecords <p>The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a pagination token called a marker is included in the response so that you can retrieve the remaining results.</p> <p>Default: 100</p> <p>Constraints: Minimum 20, maximum 100.</p>
		 * @param {string} Marker An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>.
		 * @return {void} Success
		 */
		GET_DescribeOptionGroupOptions(EngineName: string, MajorEngineVersion: string | null | undefined, Filters: Array<string> | null | undefined, MaxRecords: number | null | undefined, Marker: string | null | undefined, Action: GET_DescribeOptionGroupOptionsAction, Version: GET_AddRoleToDBClusterVersion): Observable<HttpResponse<string>> {
			return this.http.get(this.baseUri + '#Action=DescribeOptionGroupOptions?EngineName=' + (EngineName == null ? '' : encodeURIComponent(EngineName)) + '&MajorEngineVersion=' + (MajorEngineVersion == null ? '' : encodeURIComponent(MajorEngineVersion)) + '&' + Filters?.map(z => `Filters=${encodeURIComponent(z)}`).join('&') + '&MaxRecords=' + MaxRecords + '&Marker=' + (Marker == null ? '' : encodeURIComponent(Marker)) + '&Action=' + Action + '&Version=' + Version, { observe: 'response', responseType: 'text' });
		}

		/**
		 * Describes the available option groups.
		 * Get #Action=DescribeOptionGroups
		 * @param {string} OptionGroupName The name of the option group to describe. Can't be supplied together with EngineName or MajorEngineVersion.
		 * @param {Array<string>} Filters This parameter isn't currently supported.
		 * @param {string} Marker An optional pagination token provided by a previous DescribeOptionGroups request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>.
		 * @param {number} MaxRecords <p>The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a pagination token called a marker is included in the response so that you can retrieve the remaining results.</p> <p>Default: 100</p> <p>Constraints: Minimum 20, maximum 100.</p>
		 * @param {string} EngineName <p>Filters the list of option groups to only include groups associated with a specific database engine.</p> <p>Valid Values:</p> <ul> <li> <p> <code>mariadb</code> </p> </li> <li> <p> <code>mysql</code> </p> </li> <li> <p> <code>oracle-ee</code> </p> </li> <li> <p> <code>oracle-ee-cdb</code> </p> </li> <li> <p> <code>oracle-se2</code> </p> </li> <li> <p> <code>oracle-se2-cdb</code> </p> </li> <li> <p> <code>postgres</code> </p> </li> <li> <p> <code>sqlserver-ee</code> </p> </li> <li> <p> <code>sqlserver-se</code> </p> </li> <li> <p> <code>sqlserver-ex</code> </p> </li> <li> <p> <code>sqlserver-web</code> </p> </li> </ul>
		 * @param {string} MajorEngineVersion Filters the list of option groups to only include groups associated with a specific database engine version. If specified, then EngineName must also be specified.
		 * @return {void} Success
		 */
		GET_DescribeOptionGroups(OptionGroupName: string | null | undefined, Filters: Array<string> | null | undefined, Marker: string | null | undefined, MaxRecords: number | null | undefined, EngineName: string | null | undefined, MajorEngineVersion: string | null | undefined, Action: GET_DescribeOptionGroupsAction, Version: GET_AddRoleToDBClusterVersion): Observable<HttpResponse<string>> {
			return this.http.get(this.baseUri + '#Action=DescribeOptionGroups?OptionGroupName=' + (OptionGroupName == null ? '' : encodeURIComponent(OptionGroupName)) + '&' + Filters?.map(z => `Filters=${encodeURIComponent(z)}`).join('&') + '&Marker=' + (Marker == null ? '' : encodeURIComponent(Marker)) + '&MaxRecords=' + MaxRecords + '&EngineName=' + (EngineName == null ? '' : encodeURIComponent(EngineName)) + '&MajorEngineVersion=' + (MajorEngineVersion == null ? '' : encodeURIComponent(MajorEngineVersion)) + '&Action=' + Action + '&Version=' + Version, { observe: 'response', responseType: 'text' });
		}

		/**
		 * Returns a list of orderable DB instance options for the specified DB engine, DB engine version, and DB instance class.
		 * Get #Action=DescribeOrderableDBInstanceOptions
		 * @param {string} Engine <p>The name of the engine to retrieve DB instance options for.</p> <p>Valid Values:</p> <ul> <li> <p> <code>aurora-mysql</code> </p> </li> <li> <p> <code>aurora-postgresql</code> </p> </li> <li> <p> <code>custom-oracle-ee</code> </p> </li> <li> <p> <code>mariadb</code> </p> </li> <li> <p> <code>mysql</code> </p> </li> <li> <p> <code>oracle-ee</code> </p> </li> <li> <p> <code>oracle-ee-cdb</code> </p> </li> <li> <p> <code>oracle-se2</code> </p> </li> <li> <p> <code>oracle-se2-cdb</code> </p> </li> <li> <p> <code>postgres</code> </p> </li> <li> <p> <code>sqlserver-ee</code> </p> </li> <li> <p> <code>sqlserver-se</code> </p> </li> <li> <p> <code>sqlserver-ex</code> </p> </li> <li> <p> <code>sqlserver-web</code> </p> </li> </ul>
		 * @param {string} EngineVersion The engine version filter value. Specify this parameter to show only the available offerings matching the specified engine version.
		 * @param {string} DBInstanceClass The DB instance class filter value. Specify this parameter to show only the available offerings matching the specified DB instance class.
		 * @param {string} LicenseModel <p>The license model filter value. Specify this parameter to show only the available offerings matching the specified license model.</p> <p>RDS Custom supports only the BYOL licensing model.</p>
		 * @param {string} AvailabilityZoneGroup <p>The Availability Zone group associated with a Local Zone. Specify this parameter to retrieve available offerings for the Local Zones in the group.</p> <p>Omit this parameter to show the available offerings in the specified Amazon Web Services Region.</p> <p>This setting doesn't apply to RDS Custom.</p>
		 * @param {boolean} Vpc <p>A value that indicates whether to show only VPC or non-VPC offerings. RDS Custom supports only VPC offerings.</p> <p>RDS Custom supports only VPC offerings. If you describe non-VPC offerings for RDS Custom, the output shows VPC offerings.</p>
		 * @param {Array<string>} Filters This parameter isn't currently supported.
		 * @param {number} MaxRecords <p>The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a pagination token called a marker is included in the response so that you can retrieve the remaining results.</p> <p>Default: 100</p> <p>Constraints: Minimum 20, maximum 10000.</p>
		 * @param {string} Marker An optional pagination token provided by a previous DescribeOrderableDBInstanceOptions request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>.
		 * @return {void} Success
		 */
		GET_DescribeOrderableDBInstanceOptions(Engine: string, EngineVersion: string | null | undefined, DBInstanceClass: string | null | undefined, LicenseModel: string | null | undefined, AvailabilityZoneGroup: string | null | undefined, Vpc: boolean | null | undefined, Filters: Array<string> | null | undefined, MaxRecords: number | null | undefined, Marker: string | null | undefined, Action: GET_DescribeOrderableDBInstanceOptionsAction, Version: GET_AddRoleToDBClusterVersion): Observable<HttpResponse<string>> {
			return this.http.get(this.baseUri + '#Action=DescribeOrderableDBInstanceOptions?Engine=' + (Engine == null ? '' : encodeURIComponent(Engine)) + '&EngineVersion=' + (EngineVersion == null ? '' : encodeURIComponent(EngineVersion)) + '&DBInstanceClass=' + (DBInstanceClass == null ? '' : encodeURIComponent(DBInstanceClass)) + '&LicenseModel=' + (LicenseModel == null ? '' : encodeURIComponent(LicenseModel)) + '&AvailabilityZoneGroup=' + (AvailabilityZoneGroup == null ? '' : encodeURIComponent(AvailabilityZoneGroup)) + '&Vpc=' + Vpc + '&' + Filters?.map(z => `Filters=${encodeURIComponent(z)}`).join('&') + '&MaxRecords=' + MaxRecords + '&Marker=' + (Marker == null ? '' : encodeURIComponent(Marker)) + '&Action=' + Action + '&Version=' + Version, { observe: 'response', responseType: 'text' });
		}

		/**
		 * Returns a list of resources (for example, DB instances) that have at least one pending maintenance action.
		 * Get #Action=DescribePendingMaintenanceActions
		 * @param {string} ResourceIdentifier The ARN of a resource to return pending maintenance actions for.
		 * @param {Array<string>} Filters <p>A filter that specifies one or more resources to return pending maintenance actions for.</p> <p>Supported filters:</p> <ul> <li> <p> <code>db-cluster-id</code> - Accepts DB cluster identifiers and DB cluster Amazon Resource Names (ARNs). The results list only includes pending maintenance actions for the DB clusters identified by these ARNs.</p> </li> <li> <p> <code>db-instance-id</code> - Accepts DB instance identifiers and DB instance ARNs. The results list only includes pending maintenance actions for the DB instances identified by these ARNs.</p> </li> </ul>
		 * @param {string} Marker An optional pagination token provided by a previous <code>DescribePendingMaintenanceActions</code> request. If this parameter is specified, the response includes only records beyond the marker, up to a number of records specified by <code>MaxRecords</code>.
		 * @param {number} MaxRecords <p>The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a pagination token called a marker is included in the response so that you can retrieve the remaining results.</p> <p>Default: 100</p> <p>Constraints: Minimum 20, maximum 100.</p>
		 * @return {void} Success
		 */
		GET_DescribePendingMaintenanceActions(ResourceIdentifier: string | null | undefined, Filters: Array<string> | null | undefined, Marker: string | null | undefined, MaxRecords: number | null | undefined, Action: GET_DescribePendingMaintenanceActionsAction, Version: GET_AddRoleToDBClusterVersion): Observable<HttpResponse<string>> {
			return this.http.get(this.baseUri + '#Action=DescribePendingMaintenanceActions?ResourceIdentifier=' + (ResourceIdentifier == null ? '' : encodeURIComponent(ResourceIdentifier)) + '&' + Filters?.map(z => `Filters=${encodeURIComponent(z)}`).join('&') + '&Marker=' + (Marker == null ? '' : encodeURIComponent(Marker)) + '&MaxRecords=' + MaxRecords + '&Action=' + Action + '&Version=' + Version, { observe: 'response', responseType: 'text' });
		}

		/**
		 * Returns information about reserved DB instances for this account, or about a specified reserved DB instance.
		 * Get #Action=DescribeReservedDBInstances
		 * @param {string} ReservedDBInstanceId The reserved DB instance identifier filter value. Specify this parameter to show only the reservation that matches the specified reservation ID.
		 * @param {string} ReservedDBInstancesOfferingId The offering identifier filter value. Specify this parameter to show only purchased reservations matching the specified offering identifier.
		 * @param {string} DBInstanceClass The DB instance class filter value. Specify this parameter to show only those reservations matching the specified DB instances class.
		 * @param {string} Duration <p>The duration filter value, specified in years or seconds. Specify this parameter to show only reservations for this duration.</p> <p>Valid Values: <code>1 | 3 | 31536000 | 94608000</code> </p>
		 * @param {string} ProductDescription The product description filter value. Specify this parameter to show only those reservations matching the specified product description.
		 * @param {string} OfferingType <p>The offering type filter value. Specify this parameter to show only the available offerings matching the specified offering type.</p> <p>Valid Values: <code>"Partial Upfront" | "All Upfront" | "No Upfront" </code> </p>
		 * @param {boolean} MultiAZ A value that indicates whether to show only those reservations that support Multi-AZ.
		 * @param {string} LeaseId <p>The lease identifier filter value. Specify this parameter to show only the reservation that matches the specified lease ID.</p> <note> <p>Amazon Web Services Support might request the lease ID for an issue related to a reserved DB instance.</p> </note>
		 * @param {Array<string>} Filters This parameter isn't currently supported.
		 * @param {number} MaxRecords <p>The maximum number of records to include in the response. If more than the <code>MaxRecords</code> value is available, a pagination token called a marker is included in the response so you can retrieve the remaining results.</p> <p>Default: 100</p> <p>Constraints: Minimum 20, maximum 100.</p>
		 * @param {string} Marker An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>.
		 * @return {void} Success
		 */
		GET_DescribeReservedDBInstances(ReservedDBInstanceId: string | null | undefined, ReservedDBInstancesOfferingId: string | null | undefined, DBInstanceClass: string | null | undefined, Duration: string | null | undefined, ProductDescription: string | null | undefined, OfferingType: string | null | undefined, MultiAZ: boolean | null | undefined, LeaseId: string | null | undefined, Filters: Array<string> | null | undefined, MaxRecords: number | null | undefined, Marker: string | null | undefined, Action: GET_DescribeReservedDBInstancesAction, Version: GET_AddRoleToDBClusterVersion): Observable<HttpResponse<string>> {
			return this.http.get(this.baseUri + '#Action=DescribeReservedDBInstances?ReservedDBInstanceId=' + (ReservedDBInstanceId == null ? '' : encodeURIComponent(ReservedDBInstanceId)) + '&ReservedDBInstancesOfferingId=' + (ReservedDBInstancesOfferingId == null ? '' : encodeURIComponent(ReservedDBInstancesOfferingId)) + '&DBInstanceClass=' + (DBInstanceClass == null ? '' : encodeURIComponent(DBInstanceClass)) + '&Duration=' + (Duration == null ? '' : encodeURIComponent(Duration)) + '&ProductDescription=' + (ProductDescription == null ? '' : encodeURIComponent(ProductDescription)) + '&OfferingType=' + (OfferingType == null ? '' : encodeURIComponent(OfferingType)) + '&MultiAZ=' + MultiAZ + '&LeaseId=' + (LeaseId == null ? '' : encodeURIComponent(LeaseId)) + '&' + Filters?.map(z => `Filters=${encodeURIComponent(z)}`).join('&') + '&MaxRecords=' + MaxRecords + '&Marker=' + (Marker == null ? '' : encodeURIComponent(Marker)) + '&Action=' + Action + '&Version=' + Version, { observe: 'response', responseType: 'text' });
		}

		/**
		 * Lists available reserved DB instance offerings.
		 * Get #Action=DescribeReservedDBInstancesOfferings
		 * @param {string} ReservedDBInstancesOfferingId <p>The offering identifier filter value. Specify this parameter to show only the available offering that matches the specified reservation identifier.</p> <p>Example: <code>438012d3-4052-4cc7-b2e3-8d3372e0e706</code> </p>
		 * @param {string} DBInstanceClass The DB instance class filter value. Specify this parameter to show only the available offerings matching the specified DB instance class.
		 * @param {string} Duration <p>Duration filter value, specified in years or seconds. Specify this parameter to show only reservations for this duration.</p> <p>Valid Values: <code>1 | 3 | 31536000 | 94608000</code> </p>
		 * @param {string} ProductDescription <p>Product description filter value. Specify this parameter to show only the available offerings that contain the specified product description.</p> <note> <p>The results show offerings that partially match the filter value.</p> </note>
		 * @param {string} OfferingType <p>The offering type filter value. Specify this parameter to show only the available offerings matching the specified offering type.</p> <p>Valid Values: <code>"Partial Upfront" | "All Upfront" | "No Upfront" </code> </p>
		 * @param {boolean} MultiAZ A value that indicates whether to show only those reservations that support Multi-AZ.
		 * @param {Array<string>} Filters This parameter isn't currently supported.
		 * @param {number} MaxRecords <p>The maximum number of records to include in the response. If more than the <code>MaxRecords</code> value is available, a pagination token called a marker is included in the response so you can retrieve the remaining results.</p> <p>Default: 100</p> <p>Constraints: Minimum 20, maximum 100.</p>
		 * @param {string} Marker An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>.
		 * @return {void} Success
		 */
		GET_DescribeReservedDBInstancesOfferings(ReservedDBInstancesOfferingId: string | null | undefined, DBInstanceClass: string | null | undefined, Duration: string | null | undefined, ProductDescription: string | null | undefined, OfferingType: string | null | undefined, MultiAZ: boolean | null | undefined, Filters: Array<string> | null | undefined, MaxRecords: number | null | undefined, Marker: string | null | undefined, Action: GET_DescribeReservedDBInstancesOfferingsAction, Version: GET_AddRoleToDBClusterVersion): Observable<HttpResponse<string>> {
			return this.http.get(this.baseUri + '#Action=DescribeReservedDBInstancesOfferings?ReservedDBInstancesOfferingId=' + (ReservedDBInstancesOfferingId == null ? '' : encodeURIComponent(ReservedDBInstancesOfferingId)) + '&DBInstanceClass=' + (DBInstanceClass == null ? '' : encodeURIComponent(DBInstanceClass)) + '&Duration=' + (Duration == null ? '' : encodeURIComponent(Duration)) + '&ProductDescription=' + (ProductDescription == null ? '' : encodeURIComponent(ProductDescription)) + '&OfferingType=' + (OfferingType == null ? '' : encodeURIComponent(OfferingType)) + '&MultiAZ=' + MultiAZ + '&' + Filters?.map(z => `Filters=${encodeURIComponent(z)}`).join('&') + '&MaxRecords=' + MaxRecords + '&Marker=' + (Marker == null ? '' : encodeURIComponent(Marker)) + '&Action=' + Action + '&Version=' + Version, { observe: 'response', responseType: 'text' });
		}

		/**
		 * <p>Returns a list of the source Amazon Web Services Regions where the current Amazon Web Services Region can create a read replica, copy a DB snapshot from, or replicate automated backups from.</p> <p>Use this operation to determine whether cross-Region features are supported between other Regions and your current Region. This operation supports pagination.</p> <p>To return information about the Regions that are enabled for your account, or all Regions, use the EC2 operation <code>DescribeRegions</code>. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeRegions.html"> DescribeRegions</a> in the <i>Amazon EC2 API Reference</i>.</p>
		 * Get #Action=DescribeSourceRegions
		 * @param {string} RegionName <p>The source Amazon Web Services Region name. For example, <code>us-east-1</code>.</p> <p>Constraints:</p> <ul> <li> <p>Must specify a valid Amazon Web Services Region name.</p> </li> </ul>
		 * @param {number} MaxRecords <p>The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a pagination token called a marker is included in the response so you can retrieve the remaining results.</p> <p>Default: 100</p> <p>Constraints: Minimum 20, maximum 100.</p>
		 * @param {string} Marker An optional pagination token provided by a previous <code>DescribeSourceRegions</code> request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>.
		 * @param {Array<string>} Filters This parameter isn't currently supported.
		 * @return {void} Success
		 */
		GET_DescribeSourceRegions(RegionName: string | null | undefined, MaxRecords: number | null | undefined, Marker: string | null | undefined, Filters: Array<string> | null | undefined, Action: GET_DescribeSourceRegionsAction, Version: GET_AddRoleToDBClusterVersion): Observable<HttpResponse<string>> {
			return this.http.get(this.baseUri + '#Action=DescribeSourceRegions?RegionName=' + (RegionName == null ? '' : encodeURIComponent(RegionName)) + '&MaxRecords=' + MaxRecords + '&Marker=' + (Marker == null ? '' : encodeURIComponent(Marker)) + '&' + Filters?.map(z => `Filters=${encodeURIComponent(z)}`).join('&') + '&Action=' + Action + '&Version=' + Version, { observe: 'response', responseType: 'text' });
		}

		/**
		 * <p>You can call <code>DescribeValidDBInstanceModifications</code> to learn what modifications you can make to your DB instance. You can use this information when you call <code>ModifyDBInstance</code>.</p> <p>This command doesn't apply to RDS Custom.</p>
		 * Get #Action=DescribeValidDBInstanceModifications
		 * @param {string} DBInstanceIdentifier The customer identifier or the ARN of your DB instance.
		 * @return {void} Success
		 */
		GET_DescribeValidDBInstanceModifications(DBInstanceIdentifier: string, Action: GET_DescribeValidDBInstanceModificationsAction, Version: GET_AddRoleToDBClusterVersion): Observable<HttpResponse<string>> {
			return this.http.get(this.baseUri + '#Action=DescribeValidDBInstanceModifications?DBInstanceIdentifier=' + (DBInstanceIdentifier == null ? '' : encodeURIComponent(DBInstanceIdentifier)) + '&Action=' + Action + '&Version=' + Version, { observe: 'response', responseType: 'text' });
		}

		/**
		 * <p>Downloads all or a portion of the specified log file, up to 1 MB in size.</p> <p>This command doesn't apply to RDS Custom.</p>
		 * Get #Action=DownloadDBLogFilePortion
		 * @param {string} DBInstanceIdentifier <p>The customer-assigned name of the DB instance that contains the log files you want to list.</p> <p>Constraints:</p> <ul> <li> <p>Must match the identifier of an existing DBInstance.</p> </li> </ul>
		 * @param {string} LogFileName The name of the log file to be downloaded.
		 * @param {string} Marker The pagination token provided in the previous request or "0". If the Marker parameter is specified the response includes only records beyond the marker until the end of the file or up to NumberOfLines.
		 * @param {number} NumberOfLines <p>The number of lines to download. If the number of lines specified results in a file over 1 MB in size, the file is truncated at 1 MB in size.</p> <p>If the NumberOfLines parameter is specified, then the block of lines returned can be from the beginning or the end of the log file, depending on the value of the Marker parameter.</p> <ul> <li> <p>If neither Marker or NumberOfLines are specified, the entire log file is returned up to a maximum of 10000 lines, starting with the most recent log entries first.</p> </li> <li> <p>If NumberOfLines is specified and Marker isn't specified, then the most recent lines from the end of the log file are returned.</p> </li> <li> <p>If Marker is specified as "0", then the specified number of lines from the beginning of the log file are returned.</p> </li> <li> <p>You can download the log file in blocks of lines by specifying the size of the block using the NumberOfLines parameter, and by specifying a value of "0" for the Marker parameter in your first request. Include the Marker value returned in the response as the Marker value for the next request, continuing until the AdditionalDataPending response element returns false.</p> </li> </ul>
		 * @return {void} Success
		 */
		GET_DownloadDBLogFilePortion(DBInstanceIdentifier: string, LogFileName: string, Marker: string | null | undefined, NumberOfLines: number | null | undefined, Action: GET_DownloadDBLogFilePortionAction, Version: GET_AddRoleToDBClusterVersion): Observable<HttpResponse<string>> {
			return this.http.get(this.baseUri + '#Action=DownloadDBLogFilePortion?DBInstanceIdentifier=' + (DBInstanceIdentifier == null ? '' : encodeURIComponent(DBInstanceIdentifier)) + '&LogFileName=' + (LogFileName == null ? '' : encodeURIComponent(LogFileName)) + '&Marker=' + (Marker == null ? '' : encodeURIComponent(Marker)) + '&NumberOfLines=' + NumberOfLines + '&Action=' + Action + '&Version=' + Version, { observe: 'response', responseType: 'text' });
		}

		/**
		 * <p>Forces a failover for a DB cluster.</p> <p>For an Aurora DB cluster, failover for a DB cluster promotes one of the Aurora Replicas (read-only instances) in the DB cluster to be the primary DB instance (the cluster writer).</p> <p>For a Multi-AZ DB cluster, failover for a DB cluster promotes one of the readable standby DB instances (read-only instances) in the DB cluster to be the primary DB instance (the cluster writer).</p> <p>An Amazon Aurora DB cluster automatically fails over to an Aurora Replica, if one exists, when the primary DB instance fails. A Multi-AZ DB cluster automatically fails over to a readable standby DB instance when the primary DB instance fails.</p> <p>To simulate a failure of a primary instance for testing, you can force a failover. Because each instance in a DB cluster has its own endpoint address, make sure to clean up and re-establish any existing connections that use those endpoint addresses when the failover is complete.</p> <p>For more information on Amazon Aurora DB clusters, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/CHAP_AuroraOverview.html"> What is Amazon Aurora?</a> in the <i>Amazon Aurora User Guide</i>.</p> <p>For more information on Multi-AZ DB clusters, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/multi-az-db-clusters-concepts.html"> Multi-AZ DB cluster deployments</a> in the <i>Amazon RDS User Guide</i>.</p>
		 * Get #Action=FailoverDBCluster
		 * @param {string} DBClusterIdentifier <p>A DB cluster identifier to force a failover for. This parameter isn't case-sensitive.</p> <p>Constraints:</p> <ul> <li> <p>Must match the identifier of an existing DBCluster.</p> </li> </ul>
		 * @param {string} TargetDBInstanceIdentifier <p>The name of the DB instance to promote to the primary DB instance.</p> <p>Specify the DB instance identifier for an Aurora Replica or a Multi-AZ readable standby in the DB cluster, for example <code>mydbcluster-replica1</code>.</p> <p>This setting isn't supported for RDS for MySQL Multi-AZ DB clusters.</p>
		 * @return {void} Success
		 */
		GET_FailoverDBCluster(DBClusterIdentifier: string, TargetDBInstanceIdentifier: string | null | undefined, Action: GET_FailoverDBClusterAction, Version: GET_AddRoleToDBClusterVersion): Observable<HttpResponse<string>> {
			return this.http.get(this.baseUri + '#Action=FailoverDBCluster?DBClusterIdentifier=' + (DBClusterIdentifier == null ? '' : encodeURIComponent(DBClusterIdentifier)) + '&TargetDBInstanceIdentifier=' + (TargetDBInstanceIdentifier == null ? '' : encodeURIComponent(TargetDBInstanceIdentifier)) + '&Action=' + Action + '&Version=' + Version, { observe: 'response', responseType: 'text' });
		}

		/**
		 * <p>Initiates the failover process for an Aurora global database (<a>GlobalCluster</a>).</p> <p>A failover for an Aurora global database promotes one of secondary read-only DB clusters to be the primary DB cluster and demotes the primary DB cluster to being a secondary (read-only) DB cluster. In other words, the role of the current primary DB cluster and the selected (target) DB cluster are switched. The selected secondary DB cluster assumes full read/write capabilities for the Aurora global database.</p> <p>For more information about failing over an Amazon Aurora global database, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-global-database-disaster-recovery.html#aurora-global-database-disaster-recovery.managed-failover">Managed planned failover for Amazon Aurora global databases</a> in the <i>Amazon Aurora User Guide</i>.</p> <note> <p>This action applies to <a>GlobalCluster</a> (Aurora global databases) only. Use this action only on healthy Aurora global databases with running Aurora DB clusters and no Region-wide outages, to test disaster recovery scenarios or to reconfigure your Aurora global database topology.</p> </note>
		 * Get #Action=FailoverGlobalCluster
		 * @param {string} GlobalClusterIdentifier <p>Identifier of the Aurora global database (<a>GlobalCluster</a>) that should be failed over. The identifier is the unique key assigned by the user when the Aurora global database was created. In other words, it's the name of the Aurora global database that you want to fail over.</p> <p>Constraints:</p> <ul> <li> <p>Must match the identifier of an existing <a>GlobalCluster</a> (Aurora global database).</p> </li> </ul>
		 * @param {string} TargetDbClusterIdentifier Identifier of the secondary Aurora DB cluster that you want to promote to primary for the Aurora global database (<a>GlobalCluster</a>.) Use the Amazon Resource Name (ARN) for the identifier so that Aurora can locate the cluster in its Amazon Web Services Region.
		 * @return {void} Success
		 */
		GET_FailoverGlobalCluster(GlobalClusterIdentifier: string, TargetDbClusterIdentifier: string, Action: GET_FailoverGlobalClusterAction, Version: GET_AddRoleToDBClusterVersion): Observable<HttpResponse<string>> {
			return this.http.get(this.baseUri + '#Action=FailoverGlobalCluster?GlobalClusterIdentifier=' + (GlobalClusterIdentifier == null ? '' : encodeURIComponent(GlobalClusterIdentifier)) + '&TargetDbClusterIdentifier=' + (TargetDbClusterIdentifier == null ? '' : encodeURIComponent(TargetDbClusterIdentifier)) + '&Action=' + Action + '&Version=' + Version, { observe: 'response', responseType: 'text' });
		}

		/**
		 * <p>Lists all tags on an Amazon RDS resource.</p> <p>For an overview on tagging an Amazon RDS resource, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Overview.Tagging.html">Tagging Amazon RDS Resources</a> in the <i>Amazon RDS User Guide</i>.</p>
		 * Get #Action=ListTagsForResource
		 * @param {string} ResourceName The Amazon RDS resource with tags to be listed. This value is an Amazon Resource Name (ARN). For information about creating an ARN, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Tagging.ARN.html#USER_Tagging.ARN.Constructing"> Constructing an ARN for Amazon RDS</a> in the <i>Amazon RDS User Guide</i>.
		 * @param {Array<string>} Filters This parameter isn't currently supported.
		 * @return {void} Success
		 */
		GET_ListTagsForResource(ResourceName: string, Filters: Array<string> | null | undefined, Action: GET_ListTagsForResourceAction, Version: GET_AddRoleToDBClusterVersion): Observable<HttpResponse<string>> {
			return this.http.get(this.baseUri + '#Action=ListTagsForResource?ResourceName=' + (ResourceName == null ? '' : encodeURIComponent(ResourceName)) + '&' + Filters?.map(z => `Filters=${encodeURIComponent(z)}`).join('&') + '&Action=' + Action + '&Version=' + Version, { observe: 'response', responseType: 'text' });
		}

		/**
		 * <p>Changes the audit policy state of a database activity stream to either locked (default) or unlocked. A locked policy is read-only, whereas an unlocked policy is read/write. If your activity stream is started and locked, you can unlock it, customize your audit policy, and then lock your activity stream. Restarting the activity stream isn't required. For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/DBActivityStreams.Modifying.html"> Modifying a database activity stream</a> in the <i>Amazon RDS User Guide</i>. </p> <p>This operation is supported for RDS for Oracle and Microsoft SQL Server.</p>
		 * Get #Action=ModifyActivityStream
		 * @param {string} ResourceArn The Amazon Resource Name (ARN) of the RDS for Oracle or Microsoft SQL Server DB instance. For example, <code>arn:aws:rds:us-east-1:12345667890:instance:my-orcl-db</code>.
		 * @param {AuditPolicyState} AuditPolicyState The audit policy state. When a policy is unlocked, it is read/write. When it is locked, it is read-only. You can edit your audit policy only when the activity stream is unlocked or stopped.
		 * @return {void} Success
		 */
		GET_ModifyActivityStream(ResourceArn: string | null | undefined, AuditPolicyState: AuditPolicyState | null | undefined, Action: GET_ModifyActivityStreamAction, Version: GET_AddRoleToDBClusterVersion): Observable<HttpResponse<string>> {
			return this.http.get(this.baseUri + '#Action=ModifyActivityStream?ResourceArn=' + (ResourceArn == null ? '' : encodeURIComponent(ResourceArn)) + '&AuditPolicyState=' + AuditPolicyState + '&Action=' + Action + '&Version=' + Version, { observe: 'response', responseType: 'text' });
		}

		/**
		 * <p>Override the system-default Secure Sockets Layer/Transport Layer Security (SSL/TLS) certificate for Amazon RDS for new DB instances, or remove the override.</p> <p>By using this operation, you can specify an RDS-approved SSL/TLS certificate for new DB instances that is different from the default certificate provided by RDS. You can also use this operation to remove the override, so that new DB instances use the default certificate provided by RDS.</p> <p>You might need to override the default certificate in the following situations:</p> <ul> <li> <p>You already migrated your applications to support the latest certificate authority (CA) certificate, but the new CA certificate is not yet the RDS default CA certificate for the specified Amazon Web Services Region.</p> </li> <li> <p>RDS has already moved to a new default CA certificate for the specified Amazon Web Services Region, but you are still in the process of supporting the new CA certificate. In this case, you temporarily need additional time to finish your application changes.</p> </li> </ul> <p>For more information about rotating your SSL/TLS certificate for RDS DB engines, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/UsingWithRDS.SSL-certificate-rotation.html"> Rotating Your SSL/TLS Certificate</a> in the <i>Amazon RDS User Guide</i>.</p> <p>For more information about rotating your SSL/TLS certificate for Aurora DB engines, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/UsingWithRDS.SSL-certificate-rotation.html"> Rotating Your SSL/TLS Certificate</a> in the <i>Amazon Aurora User Guide</i>.</p>
		 * Get #Action=ModifyCertificates
		 * @param {string} CertificateIdentifier <p>The new default certificate identifier to override the current one with.</p> <p>To determine the valid values, use the <code>describe-certificates</code> CLI command or the <code>DescribeCertificates</code> API operation.</p>
		 * @param {boolean} RemoveCustomerOverride A value that indicates whether to remove the override for the default certificate. If the override is removed, the default certificate is the system default.
		 * @return {void} Success
		 */
		GET_ModifyCertificates(CertificateIdentifier: string | null | undefined, RemoveCustomerOverride: boolean | null | undefined, Action: GET_ModifyCertificatesAction, Version: GET_AddRoleToDBClusterVersion): Observable<HttpResponse<string>> {
			return this.http.get(this.baseUri + '#Action=ModifyCertificates?CertificateIdentifier=' + (CertificateIdentifier == null ? '' : encodeURIComponent(CertificateIdentifier)) + '&RemoveCustomerOverride=' + RemoveCustomerOverride + '&Action=' + Action + '&Version=' + Version, { observe: 'response', responseType: 'text' });
		}

		/**
		 * <p>Set the capacity of an Aurora Serverless v1 DB cluster to a specific value.</p> <p>Aurora Serverless v1 scales seamlessly based on the workload on the DB cluster. In some cases, the capacity might not scale fast enough to meet a sudden change in workload, such as a large number of new transactions. Call <code>ModifyCurrentDBClusterCapacity</code> to set the capacity explicitly.</p> <p>After this call sets the DB cluster capacity, Aurora Serverless v1 can automatically scale the DB cluster based on the cooldown period for scaling up and the cooldown period for scaling down.</p> <p>For more information about Aurora Serverless v1, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-serverless.html">Using Amazon Aurora Serverless v1</a> in the <i>Amazon Aurora User Guide</i>.</p> <important> <p>If you call <code>ModifyCurrentDBClusterCapacity</code> with the default <code>TimeoutAction</code>, connections that prevent Aurora Serverless v1 from finding a scaling point might be dropped. For more information about scaling points, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-serverless.how-it-works.html#aurora-serverless.how-it-works.auto-scaling"> Autoscaling for Aurora Serverless v1</a> in the <i>Amazon Aurora User Guide</i>.</p> </important> <note> <p>This action only applies to Aurora Serverless v1 DB clusters.</p> </note>
		 * Get #Action=ModifyCurrentDBClusterCapacity
		 * @param {string} DBClusterIdentifier <p>The DB cluster identifier for the cluster being modified. This parameter isn't case-sensitive.</p> <p>Constraints:</p> <ul> <li> <p>Must match the identifier of an existing DB cluster.</p> </li> </ul>
		 * @param {number} Capacity <p>The DB cluster capacity.</p> <p>When you change the capacity of a paused Aurora Serverless v1 DB cluster, it automatically resumes.</p> <p>Constraints:</p> <ul> <li> <p>For Aurora MySQL, valid capacity values are <code>1</code>, <code>2</code>, <code>4</code>, <code>8</code>, <code>16</code>, <code>32</code>, <code>64</code>, <code>128</code>, and <code>256</code>.</p> </li> <li> <p>For Aurora PostgreSQL, valid capacity values are <code>2</code>, <code>4</code>, <code>8</code>, <code>16</code>, <code>32</code>, <code>64</code>, <code>192</code>, and <code>384</code>.</p> </li> </ul>
		 * @param {number} SecondsBeforeTimeout <p>The amount of time, in seconds, that Aurora Serverless v1 tries to find a scaling point to perform seamless scaling before enforcing the timeout action. The default is 300.</p> <p>Specify a value between 10 and 600 seconds.</p>
		 * @param {string} TimeoutAction <p>The action to take when the timeout is reached, either <code>ForceApplyCapacityChange</code> or <code>RollbackCapacityChange</code>.</p> <p> <code>ForceApplyCapacityChange</code>, the default, sets the capacity to the specified value as soon as possible.</p> <p> <code>RollbackCapacityChange</code> ignores the capacity change if a scaling point isn't found in the timeout period.</p>
		 * @return {void} Success
		 */
		GET_ModifyCurrentDBClusterCapacity(DBClusterIdentifier: string, Capacity: number | null | undefined, SecondsBeforeTimeout: number | null | undefined, TimeoutAction: string | null | undefined, Action: GET_ModifyCurrentDBClusterCapacityAction, Version: GET_AddRoleToDBClusterVersion): Observable<HttpResponse<string>> {
			return this.http.get(this.baseUri + '#Action=ModifyCurrentDBClusterCapacity?DBClusterIdentifier=' + (DBClusterIdentifier == null ? '' : encodeURIComponent(DBClusterIdentifier)) + '&Capacity=' + Capacity + '&SecondsBeforeTimeout=' + SecondsBeforeTimeout + '&TimeoutAction=' + (TimeoutAction == null ? '' : encodeURIComponent(TimeoutAction)) + '&Action=' + Action + '&Version=' + Version, { observe: 'response', responseType: 'text' });
		}

		/**
		 * <p>Modifies the status of a custom engine version (CEV). You can find CEVs to modify by calling <code>DescribeDBEngineVersions</code>.</p> <note> <p>The MediaImport service that imports files from Amazon S3 to create CEVs isn't integrated with Amazon Web Services CloudTrail. If you turn on data logging for Amazon RDS in CloudTrail, calls to the <code>ModifyCustomDbEngineVersion</code> event aren't logged. However, you might see calls from the API gateway that accesses your Amazon S3 bucket. These calls originate from the MediaImport service for the <code>ModifyCustomDbEngineVersion</code> event.</p> </note> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/custom-cev.html#custom-cev.modify">Modifying CEV status</a> in the <i>Amazon RDS User Guide</i>.</p>
		 * Get #Action=ModifyCustomDBEngineVersion
		 * @param {string} Engine The DB engine. The only supported values are <code>custom-oracle-ee</code> and <code>custom-oracle-ee-cdb</code>.
		 * @param {string} EngineVersion The custom engine version (CEV) that you want to modify. This option is required for RDS Custom for Oracle, but optional for Amazon RDS. The combination of <code>Engine</code> and <code>EngineVersion</code> is unique per customer per Amazon Web Services Region.
		 * @param {string} Description An optional description of your CEV.
		 * @param {CustomEngineVersionStatus} Status <p>The availability status to be assigned to the CEV. Valid values are as follows:</p> <dl> <dt>available</dt> <dd> <p>You can use this CEV to create a new RDS Custom DB instance.</p> </dd> <dt>inactive</dt> <dd> <p>You can create a new RDS Custom instance by restoring a DB snapshot with this CEV. You can't patch or create new instances with this CEV.</p> </dd> </dl> <p>You can change any status to any status. A typical reason to change status is to prevent the accidental use of a CEV, or to make a deprecated CEV eligible for use again. For example, you might change the status of your CEV from <code>available</code> to <code>inactive</code>, and from <code>inactive</code> back to <code>available</code>. To change the availability status of the CEV, it must not currently be in use by an RDS Custom instance, snapshot, or automated backup.</p>
		 * @return {void} Success
		 */
		GET_ModifyCustomDBEngineVersion(Engine: string, EngineVersion: string, Description: string | null | undefined, Status: CustomEngineVersionStatus | null | undefined, Action: GET_ModifyCustomDBEngineVersionAction, Version: GET_AddRoleToDBClusterVersion): Observable<HttpResponse<string>> {
			return this.http.get(this.baseUri + '#Action=ModifyCustomDBEngineVersion?Engine=' + (Engine == null ? '' : encodeURIComponent(Engine)) + '&EngineVersion=' + (EngineVersion == null ? '' : encodeURIComponent(EngineVersion)) + '&Description=' + (Description == null ? '' : encodeURIComponent(Description)) + '&Status=' + Status + '&Action=' + Action + '&Version=' + Version, { observe: 'response', responseType: 'text' });
		}

		/**
		 * <p>Modifies the settings of an Amazon Aurora DB cluster or a Multi-AZ DB cluster. You can change one or more settings by specifying these parameters and the new values in the request.</p> <p>For more information on Amazon Aurora DB clusters, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/CHAP_AuroraOverview.html"> What is Amazon Aurora?</a> in the <i>Amazon Aurora User Guide</i>.</p> <p>For more information on Multi-AZ DB clusters, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/multi-az-db-clusters-concepts.html"> Multi-AZ DB cluster deployments</a> in the <i>Amazon RDS User Guide</i>.</p>
		 * Get #Action=ModifyDBCluster
		 * @param {string} DBClusterIdentifier <p>The DB cluster identifier for the cluster being modified. This parameter isn't case-sensitive.</p> <p>Valid for Cluster Type: Aurora DB clusters and Multi-AZ DB clusters</p> <p>Constraints:</p> <ul> <li> <p>Must match the identifier of an existing DB cluster.</p> </li> </ul>
		 * @param {string} NewDBClusterIdentifier <p>The new DB cluster identifier for the DB cluster when renaming a DB cluster. This value is stored as a lowercase string.</p> <p>Valid for Cluster Type: Aurora DB clusters and Multi-AZ DB clusters</p> <p>Constraints:</p> <ul> <li> <p>Must contain from 1 to 63 letters, numbers, or hyphens.</p> </li> <li> <p>The first character must be a letter.</p> </li> <li> <p>Can't end with a hyphen or contain two consecutive hyphens.</p> </li> </ul> <p>Example: <code>my-cluster2</code> </p>
		 * @param {boolean} ApplyImmediately <p>Specifies whether the modifications in this request and any pending modifications are asynchronously applied as soon as possible, regardless of the <code>PreferredMaintenanceWindow</code> setting for the DB cluster. If this parameter is disabled, changes to the DB cluster are applied during the next maintenance window.</p> <p>Most modifications can be applied immediately or during the next scheduled maintenance window. Some modifications, such as turning on deletion protection and changing the master password, are applied immediately—regardless of when you choose to apply them.</p> <p>By default, this parameter is disabled.</p> <p>Valid for Cluster Type: Aurora DB clusters and Multi-AZ DB clusters</p>
		 * @param {number} BackupRetentionPeriod <p>The number of days for which automated backups are retained. Specify a minimum value of <code>1</code>.</p> <p>Valid for Cluster Type: Aurora DB clusters and Multi-AZ DB clusters</p> <p>Default: <code>1</code> </p> <p>Constraints:</p> <ul> <li> <p>Must be a value from 1 to 35.</p> </li> </ul>
		 * @param {string} DBClusterParameterGroupName <p>The name of the DB cluster parameter group to use for the DB cluster.</p> <p>Valid for Cluster Type: Aurora DB clusters and Multi-AZ DB clusters</p>
		 * @param {Array<string>} VpcSecurityGroupIds <p>A list of EC2 VPC security groups to associate with this DB cluster.</p> <p>Valid for Cluster Type: Aurora DB clusters and Multi-AZ DB clusters</p>
		 * @param {number} Port <p>The port number on which the DB cluster accepts connections.</p> <p>Valid for Cluster Type: Aurora DB clusters only</p> <p>Valid Values: <code>1150-65535</code> </p> <p>Default: The same port as the original DB cluster.</p>
		 * @param {string} MasterUserPassword <p>The new password for the master database user.</p> <p>Valid for Cluster Type: Aurora DB clusters and Multi-AZ DB clusters</p> <p>Constraints:</p> <ul> <li> <p>Must contain from 8 to 41 characters.</p> </li> <li> <p>Can contain any printable ASCII character except "/", """, or "@".</p> </li> <li> <p>Can't be specified if <code>ManageMasterUserPassword</code> is turned on.</p> </li> </ul>
		 * @param {string} OptionGroupName <p>The option group to associate the DB cluster with.</p> <p>DB clusters are associated with a default option group that can't be modified.</p>
		 * @param {string} PreferredBackupWindow <p>The daily time range during which automated backups are created if automated backups are enabled, using the <code>BackupRetentionPeriod</code> parameter.</p> <p>The default is a 30-minute window selected at random from an 8-hour block of time for each Amazon Web Services Region. To view the time blocks available, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/Aurora.Managing.Backups.html#Aurora.Managing.Backups.BackupWindow"> Backup window</a> in the <i>Amazon Aurora User Guide</i>.</p> <p>Valid for Cluster Type: Aurora DB clusters and Multi-AZ DB clusters</p> <p>Constraints:</p> <ul> <li> <p>Must be in the format <code>hh24:mi-hh24:mi</code>.</p> </li> <li> <p>Must be in Universal Coordinated Time (UTC).</p> </li> <li> <p>Must not conflict with the preferred maintenance window.</p> </li> <li> <p>Must be at least 30 minutes.</p> </li> </ul>
		 * @param {string} PreferredMaintenanceWindow <p>The weekly time range during which system maintenance can occur, in Universal Coordinated Time (UTC).</p> <p>Valid for Cluster Type: Aurora DB clusters and Multi-AZ DB clusters</p> <p>The default is a 30-minute window selected at random from an 8-hour block of time for each Amazon Web Services Region, occurring on a random day of the week. To see the time blocks available, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/USER_UpgradeDBInstance.Maintenance.html#AdjustingTheMaintenanceWindow.Aurora"> Adjusting the Preferred DB Cluster Maintenance Window</a> in the <i>Amazon Aurora User Guide</i>.</p> <p>Constraints:</p> <ul> <li> <p>Must be in the format <code>ddd:hh24:mi-ddd:hh24:mi</code>.</p> </li> <li> <p>Days must be one of <code>Mon | Tue | Wed | Thu | Fri | Sat | Sun</code>.</p> </li> <li> <p>Must be in Universal Coordinated Time (UTC).</p> </li> <li> <p>Must be at least 30 minutes.</p> </li> </ul>
		 * @param {boolean} EnableIAMDatabaseAuthentication <p>Specifies whether to enable mapping of Amazon Web Services Identity and Access Management (IAM) accounts to database accounts. By default, mapping isn't enabled.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/UsingWithRDS.IAMDBAuth.html"> IAM Database Authentication</a> in the <i>Amazon Aurora User Guide</i>.</p> <p>Valid for Cluster Type: Aurora DB clusters only</p>
		 * @param {number} BacktrackWindow <p>The target backtrack window, in seconds. To disable backtracking, set this value to <code>0</code>.</p> <p>Valid for Cluster Type: Aurora MySQL DB clusters only</p> <p>Default: <code>0</code> </p> <p>Constraints:</p> <ul> <li> <p>If specified, this value must be set to a number from 0 to 259,200 (72 hours).</p> </li> </ul>
		 * @param {GET_ModifyDBClusterCloudwatchLogsExportConfiguration} CloudwatchLogsExportConfiguration <p>The configuration setting for the log types to be enabled for export to CloudWatch Logs for a specific DB cluster.</p> <p>Valid for Cluster Type: Aurora DB clusters and Multi-AZ DB clusters</p> <p>The following values are valid for each DB engine:</p> <ul> <li> <p>Aurora MySQL - <code>audit | error | general | slowquery</code> </p> </li> <li> <p>Aurora PostgreSQL - <code>postgresql</code> </p> </li> <li> <p>RDS for MySQL - <code>error | general | slowquery</code> </p> </li> <li> <p>RDS for PostgreSQL - <code>postgresql | upgrade</code> </p> </li> </ul> <p>For more information about exporting CloudWatch Logs for Amazon RDS, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_LogAccess.html#USER_LogAccess.Procedural.UploadtoCloudWatch"> Publishing Database Logs to Amazon CloudWatch Logs</a> in the <i>Amazon RDS User Guide</i>.</p> <p>For more information about exporting CloudWatch Logs for Amazon Aurora, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/USER_LogAccess.html#USER_LogAccess.Procedural.UploadtoCloudWatch">Publishing Database Logs to Amazon CloudWatch Logs</a> in the <i>Amazon Aurora User Guide</i>.</p>
		 * @param {string} EngineVersion <p>The version number of the database engine to which you want to upgrade. Changing this parameter results in an outage. The change is applied during the next maintenance window unless <code>ApplyImmediately</code> is enabled.</p> <p>If the cluster that you're modifying has one or more read replicas, all replicas must be running an engine version that's the same or later than the version you specify.</p> <p>To list all of the available engine versions for Aurora MySQL, use the following command:</p> <p> <code>aws rds describe-db-engine-versions --engine aurora-mysql --query "DBEngineVersions[].EngineVersion"</code> </p> <p>To list all of the available engine versions for Aurora PostgreSQL, use the following command:</p> <p> <code>aws rds describe-db-engine-versions --engine aurora-postgresql --query "DBEngineVersions[].EngineVersion"</code> </p> <p>To list all of the available engine versions for RDS for MySQL, use the following command:</p> <p> <code>aws rds describe-db-engine-versions --engine mysql --query "DBEngineVersions[].EngineVersion"</code> </p> <p>To list all of the available engine versions for RDS for PostgreSQL, use the following command:</p> <p> <code>aws rds describe-db-engine-versions --engine postgres --query "DBEngineVersions[].EngineVersion"</code> </p> <p>Valid for Cluster Type: Aurora DB clusters and Multi-AZ DB clusters</p>
		 * @param {boolean} AllowMajorVersionUpgrade <p>Specifies whether major version upgrades are allowed.</p> <p>Valid for Cluster Type: Aurora DB clusters only</p> <p>Constraints:</p> <ul> <li> <p>You must allow major version upgrades when specifying a value for the <code>EngineVersion</code> parameter that is a different major version than the DB cluster's current version.</p> </li> </ul>
		 * @param {string} DBInstanceParameterGroupName <p>The name of the DB parameter group to apply to all instances of the DB cluster.</p> <note> <p>When you apply a parameter group using the <code>DBInstanceParameterGroupName</code> parameter, the DB cluster isn't rebooted automatically. Also, parameter changes are applied immediately rather than during the next maintenance window.</p> </note> <p>Valid for Cluster Type: Aurora DB clusters only</p> <p>Default: The existing name setting</p> <p>Constraints:</p> <ul> <li> <p>The DB parameter group must be in the same DB parameter group family as this DB cluster.</p> </li> <li> <p>The <code>DBInstanceParameterGroupName</code> parameter is valid in combination with the <code>AllowMajorVersionUpgrade</code> parameter for a major version upgrade only.</p> </li> </ul>
		 * @param {string} Domain <p>The Active Directory directory ID to move the DB cluster to. Specify <code>none</code> to remove the cluster from its current domain. The domain must be created prior to this operation.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/kerberos-authentication.html">Kerberos Authentication</a> in the <i>Amazon Aurora User Guide</i>.</p> <p>Valid for Cluster Type: Aurora DB clusters only</p>
		 * @param {string} DomainIAMRoleName <p>The name of the IAM role to use when making API calls to the Directory Service.</p> <p>Valid for Cluster Type: Aurora DB clusters only</p>
		 * @param {GET_ModifyDBClusterScalingConfiguration} ScalingConfiguration <p>The scaling properties of the DB cluster. You can only modify scaling properties for DB clusters in <code>serverless</code> DB engine mode.</p> <p>Valid for Cluster Type: Aurora DB clusters only</p>
		 * @param {boolean} DeletionProtection <p>Specifies whether the DB cluster has deletion protection enabled. The database can't be deleted when deletion protection is enabled. By default, deletion protection isn't enabled.</p> <p>Valid for Cluster Type: Aurora DB clusters and Multi-AZ DB clusters</p>
		 * @param {boolean} EnableHttpEndpoint <p>Specifies whether to enable the HTTP endpoint for an Aurora Serverless v1 DB cluster. By default, the HTTP endpoint is disabled.</p> <p>When enabled, the HTTP endpoint provides a connectionless web service API for running SQL queries on the Aurora Serverless v1 DB cluster. You can also query your database from inside the RDS console with the query editor.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/data-api.html">Using the Data API for Aurora Serverless v1</a> in the <i>Amazon Aurora User Guide</i>.</p> <p>Valid for Cluster Type: Aurora DB clusters only</p>
		 * @param {boolean} CopyTagsToSnapshot <p>Specifies whether to copy all tags from the DB cluster to snapshots of the DB cluster. The default is not to copy them.</p> <p>Valid for Cluster Type: Aurora DB clusters and Multi-AZ DB clusters</p>
		 * @param {boolean} EnableGlobalWriteForwarding <p>Specifies whether to enable this DB cluster to forward write operations to the primary cluster of a global cluster (Aurora global database). By default, write operations are not allowed on Aurora DB clusters that are secondary clusters in an Aurora global database.</p> <p>You can set this value only on Aurora DB clusters that are members of an Aurora global database. With this parameter enabled, a secondary cluster can forward writes to the current primary cluster, and the resulting changes are replicated back to this cluster. For the primary DB cluster of an Aurora global database, this value is used immediately if the primary is demoted by a global cluster API operation, but it does nothing until then.</p> <p>Valid for Cluster Type: Aurora DB clusters only</p>
		 * @param {string} DBClusterInstanceClass <p>The compute and memory capacity of each DB instance in the Multi-AZ DB cluster, for example <code>db.m6gd.xlarge</code>. Not all DB instance classes are available in all Amazon Web Services Regions, or for all database engines.</p> <p>For the full list of DB instance classes and availability for your engine, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.DBInstanceClass.html"> DB Instance Class</a> in the <i>Amazon RDS User Guide</i>.</p> <p>Valid for Cluster Type: Multi-AZ DB clusters only</p>
		 * @param {number} AllocatedStorage <p>The amount of storage in gibibytes (GiB) to allocate to each DB instance in the Multi-AZ DB cluster.</p> <p>Valid for Cluster Type: Multi-AZ DB clusters only</p>
		 * @param {string} StorageType <p>The storage type to associate with the DB cluster.</p> <p>For information on storage types for Aurora DB clusters, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/Aurora.Overview.StorageReliability.html#aurora-storage-type">Storage configurations for Amazon Aurora DB clusters</a>. For information on storage types for Multi-AZ DB clusters, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/create-multi-az-db-cluster.html#create-multi-az-db-cluster-settings">Settings for creating Multi-AZ DB clusters</a>.</p> <p>When specified for a Multi-AZ DB cluster, a value for the <code>Iops</code> parameter is required.</p> <p>Valid for Cluster Type: Aurora DB clusters and Multi-AZ DB clusters</p> <p>Valid Values:</p> <ul> <li> <p>Aurora DB clusters - <code>aurora | aurora-iopt1</code> </p> </li> <li> <p>Multi-AZ DB clusters - <code>io1</code> </p> </li> </ul> <p>Default:</p> <ul> <li> <p>Aurora DB clusters - <code>aurora</code> </p> </li> <li> <p>Multi-AZ DB clusters - <code>io1</code> </p> </li> </ul>
		 * @param {number} Iops <p>The amount of Provisioned IOPS (input/output operations per second) to be initially allocated for each DB instance in the Multi-AZ DB cluster.</p> <p>For information about valid IOPS values, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_Storage.html#USER_PIOPS">Amazon RDS Provisioned IOPS storage</a> in the <i>Amazon RDS User Guide</i>.</p> <p>Valid for Cluster Type: Multi-AZ DB clusters only</p> <p>Constraints:</p> <ul> <li> <p>Must be a multiple between .5 and 50 of the storage amount for the DB cluster.</p> </li> </ul>
		 * @param {boolean} AutoMinorVersionUpgrade <p>Specifies whether minor engine upgrades are applied automatically to the DB cluster during the maintenance window. By default, minor engine upgrades are applied automatically.</p> <p>Valid for Cluster Type: Multi-AZ DB clusters only</p>
		 * @param {number} MonitoringInterval <p>The interval, in seconds, between points when Enhanced Monitoring metrics are collected for the DB cluster. To turn off collecting Enhanced Monitoring metrics, specify <code>0</code>.</p> <p>If <code>MonitoringRoleArn</code> is specified, also set <code>MonitoringInterval</code> to a value other than <code>0</code>.</p> <p>Valid for Cluster Type: Multi-AZ DB clusters only</p> <p>Valid Values: <code>0 | 1 | 5 | 10 | 15 | 30 | 60</code> </p> <p>Default: <code>0</code> </p>
		 * @param {string} MonitoringRoleArn <p>The Amazon Resource Name (ARN) for the IAM role that permits RDS to send Enhanced Monitoring metrics to Amazon CloudWatch Logs. An example is <code>arn:aws:iam:123456789012:role/emaccess</code>. For information on creating a monitoring role, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Monitoring.html#USER_Monitoring.OS.IAMRole">To create an IAM role for Amazon RDS Enhanced Monitoring</a> in the <i>Amazon RDS User Guide.</i> </p> <p>If <code>MonitoringInterval</code> is set to a value other than <code>0</code>, supply a <code>MonitoringRoleArn</code> value.</p> <p>Valid for Cluster Type: Multi-AZ DB clusters only</p>
		 * @param {boolean} EnablePerformanceInsights <p>Specifies whether to turn on Performance Insights for the DB cluster.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_PerfInsights.html"> Using Amazon Performance Insights</a> in the <i>Amazon RDS User Guide</i>.</p> <p>Valid for Cluster Type: Multi-AZ DB clusters only</p>
		 * @param {string} PerformanceInsightsKMSKeyId <p>The Amazon Web Services KMS key identifier for encryption of Performance Insights data.</p> <p>The Amazon Web Services KMS key identifier is the key ARN, key ID, alias ARN, or alias name for the KMS key.</p> <p>If you don't specify a value for <code>PerformanceInsightsKMSKeyId</code>, then Amazon RDS uses your default KMS key. There is a default KMS key for your Amazon Web Services account. Your Amazon Web Services account has a different default KMS key for each Amazon Web Services Region.</p> <p>Valid for Cluster Type: Multi-AZ DB clusters only</p>
		 * @param {number} PerformanceInsightsRetentionPeriod <p>The number of days to retain Performance Insights data.</p> <p>Valid for Cluster Type: Multi-AZ DB clusters only</p> <p>Valid Values:</p> <ul> <li> <p> <code>7</code> </p> </li> <li> <p> <i>month</i> * 31, where <i>month</i> is a number of months from 1-23. Examples: <code>93</code> (3 months * 31), <code>341</code> (11 months * 31), <code>589</code> (19 months * 31)</p> </li> <li> <p> <code>731</code> </p> </li> </ul> <p>Default: <code>7</code> days</p> <p>If you specify a retention period that isn't valid, such as <code>94</code>, Amazon RDS issues an error.</p>
		 * @param {string} NetworkType <p>The network type of the DB cluster.</p> <p>The network type is determined by the <code>DBSubnetGroup</code> specified for the DB cluster. A <code>DBSubnetGroup</code> can support only the IPv4 protocol or the IPv4 and the IPv6 protocols (<code>DUAL</code>).</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/USER_VPC.WorkingWithRDSInstanceinaVPC.html"> Working with a DB instance in a VPC</a> in the <i>Amazon Aurora User Guide.</i> </p> <p>Valid for Cluster Type: Aurora DB clusters only</p> <p>Valid Values: <code>IPV4 | DUAL</code> </p>
		 * @param {boolean} ManageMasterUserPassword <p>Specifies whether to manage the master user password with Amazon Web Services Secrets Manager.</p> <p>If the DB cluster doesn't manage the master user password with Amazon Web Services Secrets Manager, you can turn on this management. In this case, you can't specify <code>MasterUserPassword</code>.</p> <p>If the DB cluster already manages the master user password with Amazon Web Services Secrets Manager, and you specify that the master user password is not managed with Amazon Web Services Secrets Manager, then you must specify <code>MasterUserPassword</code>. In this case, RDS deletes the secret and uses the new password for the master user specified by <code>MasterUserPassword</code>.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/rds-secrets-manager.html">Password management with Amazon Web Services Secrets Manager</a> in the <i>Amazon RDS User Guide</i> and <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/rds-secrets-manager.html">Password management with Amazon Web Services Secrets Manager</a> in the <i>Amazon Aurora User Guide.</i> </p> <p>Valid for Cluster Type: Aurora DB clusters and Multi-AZ DB clusters</p>
		 * @param {boolean} RotateMasterUserPassword <p>Specifies whether to rotate the secret managed by Amazon Web Services Secrets Manager for the master user password.</p> <p>This setting is valid only if the master user password is managed by RDS in Amazon Web Services Secrets Manager for the DB cluster. The secret value contains the updated password.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/rds-secrets-manager.html">Password management with Amazon Web Services Secrets Manager</a> in the <i>Amazon RDS User Guide</i> and <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/rds-secrets-manager.html">Password management with Amazon Web Services Secrets Manager</a> in the <i>Amazon Aurora User Guide.</i> </p> <p>Valid for Cluster Type: Aurora DB clusters and Multi-AZ DB clusters</p> <p>Constraints:</p> <ul> <li> <p>You must apply the change immediately when rotating the master user password.</p> </li> </ul>
		 * @param {string} MasterUserSecretKmsKeyId <p>The Amazon Web Services KMS key identifier to encrypt a secret that is automatically generated and managed in Amazon Web Services Secrets Manager.</p> <p>This setting is valid only if both of the following conditions are met:</p> <ul> <li> <p>The DB cluster doesn't manage the master user password in Amazon Web Services Secrets Manager.</p> <p>If the DB cluster already manages the master user password in Amazon Web Services Secrets Manager, you can't change the KMS key that is used to encrypt the secret.</p> </li> <li> <p>You are turning on <code>ManageMasterUserPassword</code> to manage the master user password in Amazon Web Services Secrets Manager.</p> <p>If you are turning on <code>ManageMasterUserPassword</code> and don't specify <code>MasterUserSecretKmsKeyId</code>, then the <code>aws/secretsmanager</code> KMS key is used to encrypt the secret. If the secret is in a different Amazon Web Services account, then you can't use the <code>aws/secretsmanager</code> KMS key to encrypt the secret, and you must use a customer managed KMS key.</p> </li> </ul> <p>The Amazon Web Services KMS key identifier is the key ARN, key ID, alias ARN, or alias name for the KMS key. To use a KMS key in a different Amazon Web Services account, specify the key ARN or alias ARN.</p> <p>There is a default KMS key for your Amazon Web Services account. Your Amazon Web Services account has a different default KMS key for each Amazon Web Services Region.</p> <p>Valid for Cluster Type: Aurora DB clusters and Multi-AZ DB clusters</p>
		 * @param {string} EngineMode <p>The DB engine mode of the DB cluster, either <code>provisioned</code> or <code>serverless</code>.</p> <note> <p>The DB engine mode can be modified only from <code>serverless</code> to <code>provisioned</code>.</p> </note> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/APIReference/API_CreateDBCluster.html"> CreateDBCluster</a>.</p> <p>Valid for Cluster Type: Aurora DB clusters only</p>
		 * @param {boolean} AllowEngineModeChange <p>Specifies whether engine mode changes from <code>serverless</code> to <code>provisioned</code> are allowed.</p> <p>Valid for Cluster Type: Aurora Serverless v1 DB clusters only</p> <p>Constraints:</p> <ul> <li> <p>You must allow engine mode changes when specifying a different value for the <code>EngineMode</code> parameter from the DB cluster's current engine mode.</p> </li> </ul>
		 * @param {boolean} EnableLocalWriteForwarding <p>Specifies whether read replicas can forward write operations to the writer DB instance in the DB cluster. By default, write operations aren't allowed on reader DB instances.</p> <p>Valid for: Aurora DB clusters only</p>
		 * @return {void} Success
		 */
		GET_ModifyDBCluster(DBClusterIdentifier: string, NewDBClusterIdentifier: string | null | undefined, ApplyImmediately: boolean | null | undefined, BackupRetentionPeriod: number | null | undefined, DBClusterParameterGroupName: string | null | undefined, VpcSecurityGroupIds: Array<string> | null | undefined, Port: number | null | undefined, MasterUserPassword: string | null | undefined, OptionGroupName: string | null | undefined, PreferredBackupWindow: string | null | undefined, PreferredMaintenanceWindow: string | null | undefined, EnableIAMDatabaseAuthentication: boolean | null | undefined, BacktrackWindow: number | null | undefined, CloudwatchLogsExportConfiguration: GET_ModifyDBClusterCloudwatchLogsExportConfiguration | null | undefined, EngineVersion: string | null | undefined, AllowMajorVersionUpgrade: boolean | null | undefined, DBInstanceParameterGroupName: string | null | undefined, Domain: string | null | undefined, DomainIAMRoleName: string | null | undefined, ScalingConfiguration: GET_ModifyDBClusterScalingConfiguration | null | undefined, DeletionProtection: boolean | null | undefined, EnableHttpEndpoint: boolean | null | undefined, CopyTagsToSnapshot: boolean | null | undefined, EnableGlobalWriteForwarding: boolean | null | undefined, DBClusterInstanceClass: string | null | undefined, AllocatedStorage: number | null | undefined, StorageType: string | null | undefined, Iops: number | null | undefined, AutoMinorVersionUpgrade: boolean | null | undefined, MonitoringInterval: number | null | undefined, MonitoringRoleArn: string | null | undefined, EnablePerformanceInsights: boolean | null | undefined, PerformanceInsightsKMSKeyId: string | null | undefined, PerformanceInsightsRetentionPeriod: number | null | undefined, ServerlessV2ScalingConfiguration: GET_ModifyDBClusterServerlessV2ScalingConfiguration | null | undefined, NetworkType: string | null | undefined, ManageMasterUserPassword: boolean | null | undefined, RotateMasterUserPassword: boolean | null | undefined, MasterUserSecretKmsKeyId: string | null | undefined, EngineMode: string | null | undefined, AllowEngineModeChange: boolean | null | undefined, EnableLocalWriteForwarding: boolean | null | undefined, Action: GET_ModifyDBClusterAction, Version: GET_AddRoleToDBClusterVersion): Observable<HttpResponse<string>> {
			return this.http.get(this.baseUri + '#Action=ModifyDBCluster?DBClusterIdentifier=' + (DBClusterIdentifier == null ? '' : encodeURIComponent(DBClusterIdentifier)) + '&NewDBClusterIdentifier=' + (NewDBClusterIdentifier == null ? '' : encodeURIComponent(NewDBClusterIdentifier)) + '&ApplyImmediately=' + ApplyImmediately + '&BackupRetentionPeriod=' + BackupRetentionPeriod + '&DBClusterParameterGroupName=' + (DBClusterParameterGroupName == null ? '' : encodeURIComponent(DBClusterParameterGroupName)) + '&' + VpcSecurityGroupIds?.map(z => `VpcSecurityGroupIds=${encodeURIComponent(z)}`).join('&') + '&Port=' + Port + '&MasterUserPassword=' + (MasterUserPassword == null ? '' : encodeURIComponent(MasterUserPassword)) + '&OptionGroupName=' + (OptionGroupName == null ? '' : encodeURIComponent(OptionGroupName)) + '&PreferredBackupWindow=' + (PreferredBackupWindow == null ? '' : encodeURIComponent(PreferredBackupWindow)) + '&PreferredMaintenanceWindow=' + (PreferredMaintenanceWindow == null ? '' : encodeURIComponent(PreferredMaintenanceWindow)) + '&EnableIAMDatabaseAuthentication=' + EnableIAMDatabaseAuthentication + '&BacktrackWindow=' + BacktrackWindow + '&CloudwatchLogsExportConfiguration=' + CloudwatchLogsExportConfiguration + '&EngineVersion=' + (EngineVersion == null ? '' : encodeURIComponent(EngineVersion)) + '&AllowMajorVersionUpgrade=' + AllowMajorVersionUpgrade + '&DBInstanceParameterGroupName=' + (DBInstanceParameterGroupName == null ? '' : encodeURIComponent(DBInstanceParameterGroupName)) + '&Domain=' + (Domain == null ? '' : encodeURIComponent(Domain)) + '&DomainIAMRoleName=' + (DomainIAMRoleName == null ? '' : encodeURIComponent(DomainIAMRoleName)) + '&ScalingConfiguration=' + ScalingConfiguration + '&DeletionProtection=' + DeletionProtection + '&EnableHttpEndpoint=' + EnableHttpEndpoint + '&CopyTagsToSnapshot=' + CopyTagsToSnapshot + '&EnableGlobalWriteForwarding=' + EnableGlobalWriteForwarding + '&DBClusterInstanceClass=' + (DBClusterInstanceClass == null ? '' : encodeURIComponent(DBClusterInstanceClass)) + '&AllocatedStorage=' + AllocatedStorage + '&StorageType=' + (StorageType == null ? '' : encodeURIComponent(StorageType)) + '&Iops=' + Iops + '&AutoMinorVersionUpgrade=' + AutoMinorVersionUpgrade + '&MonitoringInterval=' + MonitoringInterval + '&MonitoringRoleArn=' + (MonitoringRoleArn == null ? '' : encodeURIComponent(MonitoringRoleArn)) + '&EnablePerformanceInsights=' + EnablePerformanceInsights + '&PerformanceInsightsKMSKeyId=' + (PerformanceInsightsKMSKeyId == null ? '' : encodeURIComponent(PerformanceInsightsKMSKeyId)) + '&PerformanceInsightsRetentionPeriod=' + PerformanceInsightsRetentionPeriod + '&ServerlessV2ScalingConfiguration=' + ServerlessV2ScalingConfiguration + '&NetworkType=' + (NetworkType == null ? '' : encodeURIComponent(NetworkType)) + '&ManageMasterUserPassword=' + ManageMasterUserPassword + '&RotateMasterUserPassword=' + RotateMasterUserPassword + '&MasterUserSecretKmsKeyId=' + (MasterUserSecretKmsKeyId == null ? '' : encodeURIComponent(MasterUserSecretKmsKeyId)) + '&EngineMode=' + (EngineMode == null ? '' : encodeURIComponent(EngineMode)) + '&AllowEngineModeChange=' + AllowEngineModeChange + '&EnableLocalWriteForwarding=' + EnableLocalWriteForwarding + '&Action=' + Action + '&Version=' + Version, { observe: 'response', responseType: 'text' });
		}

		/**
		 * <p>Modifies the properties of an endpoint in an Amazon Aurora DB cluster.</p> <note> <p>This action only applies to Aurora DB clusters.</p> </note>
		 * Get #Action=ModifyDBClusterEndpoint
		 * @param {string} DBClusterEndpointIdentifier The identifier of the endpoint to modify. This parameter is stored as a lowercase string.
		 * @param {string} EndpointType The type of the endpoint. One of: <code>READER</code>, <code>WRITER</code>, <code>ANY</code>.
		 * @param {Array<string>} StaticMembers List of DB instance identifiers that are part of the custom endpoint group.
		 * @param {Array<string>} ExcludedMembers List of DB instance identifiers that aren't part of the custom endpoint group. All other eligible instances are reachable through the custom endpoint. Only relevant if the list of static members is empty.
		 * @return {void} Success
		 */
		GET_ModifyDBClusterEndpoint(DBClusterEndpointIdentifier: string, EndpointType: string | null | undefined, StaticMembers: Array<string> | null | undefined, ExcludedMembers: Array<string> | null | undefined, Action: GET_ModifyDBClusterEndpointAction, Version: GET_AddRoleToDBClusterVersion): Observable<HttpResponse<string>> {
			return this.http.get(this.baseUri + '#Action=ModifyDBClusterEndpoint?DBClusterEndpointIdentifier=' + (DBClusterEndpointIdentifier == null ? '' : encodeURIComponent(DBClusterEndpointIdentifier)) + '&EndpointType=' + (EndpointType == null ? '' : encodeURIComponent(EndpointType)) + '&' + StaticMembers?.map(z => `StaticMembers=${encodeURIComponent(z)}`).join('&') + '&' + ExcludedMembers?.map(z => `ExcludedMembers=${encodeURIComponent(z)}`).join('&') + '&Action=' + Action + '&Version=' + Version, { observe: 'response', responseType: 'text' });
		}

		/**
		 * <p>Modifies the parameters of a DB cluster parameter group. To modify more than one parameter, submit a list of the following: <code>ParameterName</code>, <code>ParameterValue</code>, and <code>ApplyMethod</code>. A maximum of 20 parameters can be modified in a single request.</p> <important> <p>After you create a DB cluster parameter group, you should wait at least 5 minutes before creating your first DB cluster that uses that DB cluster parameter group as the default parameter group. This allows Amazon RDS to fully complete the create action before the parameter group is used as the default for a new DB cluster. This is especially important for parameters that are critical when creating the default database for a DB cluster, such as the character set for the default database defined by the <code>character_set_database</code> parameter. You can use the <i>Parameter Groups</i> option of the <a href="https://console.aws.amazon.com/rds/">Amazon RDS console</a> or the <code>DescribeDBClusterParameters</code> operation to verify that your DB cluster parameter group has been created or modified.</p> <p>If the modified DB cluster parameter group is used by an Aurora Serverless v1 cluster, Aurora applies the update immediately. The cluster restart might interrupt your workload. In that case, your application must reopen any connections and retry any transactions that were active when the parameter changes took effect.</p> </important> <p>For more information on Amazon Aurora DB clusters, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/CHAP_AuroraOverview.html"> What is Amazon Aurora?</a> in the <i>Amazon Aurora User Guide</i>.</p> <p>For more information on Multi-AZ DB clusters, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/multi-az-db-clusters-concepts.html"> Multi-AZ DB cluster deployments</a> in the <i>Amazon RDS User Guide.</i> </p>
		 * Get #Action=ModifyDBClusterParameterGroup
		 * @param {string} DBClusterParameterGroupName The name of the DB cluster parameter group to modify.
		 * @param {Array<string>} Parameters <p>A list of parameters in the DB cluster parameter group to modify.</p> <p>Valid Values (for the application method): <code>immediate | pending-reboot</code> </p> <note> <p>You can use the <code>immediate</code> value with dynamic parameters only. You can use the <code>pending-reboot</code> value for both dynamic and static parameters.</p> <p>When the application method is <code>immediate</code>, changes to dynamic parameters are applied immediately to the DB clusters associated with the parameter group. When the application method is <code>pending-reboot</code>, changes to dynamic and static parameters are applied after a reboot without failover to the DB clusters associated with the parameter group.</p> </note>
		 * @return {void} Success
		 */
		GET_ModifyDBClusterParameterGroup(DBClusterParameterGroupName: string, Parameters: Array<string>, Action: GET_ModifyDBClusterParameterGroupAction, Version: GET_AddRoleToDBClusterVersion): Observable<HttpResponse<string>> {
			return this.http.get(this.baseUri + '#Action=ModifyDBClusterParameterGroup?DBClusterParameterGroupName=' + (DBClusterParameterGroupName == null ? '' : encodeURIComponent(DBClusterParameterGroupName)) + '&' + Parameters.map(z => `Parameters=${encodeURIComponent(z)}`).join('&') + '&Action=' + Action + '&Version=' + Version, { observe: 'response', responseType: 'text' });
		}

		/**
		 * <p>Adds an attribute and values to, or removes an attribute and values from, a manual DB cluster snapshot.</p> <p>To share a manual DB cluster snapshot with other Amazon Web Services accounts, specify <code>restore</code> as the <code>AttributeName</code> and use the <code>ValuesToAdd</code> parameter to add a list of IDs of the Amazon Web Services accounts that are authorized to restore the manual DB cluster snapshot. Use the value <code>all</code> to make the manual DB cluster snapshot public, which means that it can be copied or restored by all Amazon Web Services accounts.</p> <note> <p>Don't add the <code>all</code> value for any manual DB cluster snapshots that contain private information that you don't want available to all Amazon Web Services accounts.</p> </note> <p>If a manual DB cluster snapshot is encrypted, it can be shared, but only by specifying a list of authorized Amazon Web Services account IDs for the <code>ValuesToAdd</code> parameter. You can't use <code>all</code> as a value for that parameter in this case.</p> <p>To view which Amazon Web Services accounts have access to copy or restore a manual DB cluster snapshot, or whether a manual DB cluster snapshot is public or private, use the <a>DescribeDBClusterSnapshotAttributes</a> API operation. The accounts are returned as values for the <code>restore</code> attribute.</p>
		 * Get #Action=ModifyDBClusterSnapshotAttribute
		 * @param {string} DBClusterSnapshotIdentifier The identifier for the DB cluster snapshot to modify the attributes for.
		 * @param {string} AttributeName <p>The name of the DB cluster snapshot attribute to modify.</p> <p>To manage authorization for other Amazon Web Services accounts to copy or restore a manual DB cluster snapshot, set this value to <code>restore</code>.</p> <note> <p>To view the list of attributes available to modify, use the <a>DescribeDBClusterSnapshotAttributes</a> API operation.</p> </note>
		 * @param {Array<string>} ValuesToAdd <p>A list of DB cluster snapshot attributes to add to the attribute specified by <code>AttributeName</code>.</p> <p>To authorize other Amazon Web Services accounts to copy or restore a manual DB cluster snapshot, set this list to include one or more Amazon Web Services account IDs, or <code>all</code> to make the manual DB cluster snapshot restorable by any Amazon Web Services account. Do not add the <code>all</code> value for any manual DB cluster snapshots that contain private information that you don't want available to all Amazon Web Services accounts.</p>
		 * @param {Array<string>} ValuesToRemove <p>A list of DB cluster snapshot attributes to remove from the attribute specified by <code>AttributeName</code>.</p> <p>To remove authorization for other Amazon Web Services accounts to copy or restore a manual DB cluster snapshot, set this list to include one or more Amazon Web Services account identifiers, or <code>all</code> to remove authorization for any Amazon Web Services account to copy or restore the DB cluster snapshot. If you specify <code>all</code>, an Amazon Web Services account whose account ID is explicitly added to the <code>restore</code> attribute can still copy or restore a manual DB cluster snapshot.</p>
		 * @return {void} Success
		 */
		GET_ModifyDBClusterSnapshotAttribute(DBClusterSnapshotIdentifier: string, AttributeName: string, ValuesToAdd: Array<string> | null | undefined, ValuesToRemove: Array<string> | null | undefined, Action: GET_ModifyDBClusterSnapshotAttributeAction, Version: GET_AddRoleToDBClusterVersion): Observable<HttpResponse<string>> {
			return this.http.get(this.baseUri + '#Action=ModifyDBClusterSnapshotAttribute?DBClusterSnapshotIdentifier=' + (DBClusterSnapshotIdentifier == null ? '' : encodeURIComponent(DBClusterSnapshotIdentifier)) + '&AttributeName=' + (AttributeName == null ? '' : encodeURIComponent(AttributeName)) + '&' + ValuesToAdd?.map(z => `ValuesToAdd=${encodeURIComponent(z)}`).join('&') + '&' + ValuesToRemove?.map(z => `ValuesToRemove=${encodeURIComponent(z)}`).join('&') + '&Action=' + Action + '&Version=' + Version, { observe: 'response', responseType: 'text' });
		}

		/**
		 * Modifies settings for a DB instance. You can change one or more database configuration parameters by specifying these parameters and the new values in the request. To learn what modifications you can make to your DB instance, call <code>DescribeValidDBInstanceModifications</code> before you call <code>ModifyDBInstance</code>.
		 * Get #Action=ModifyDBInstance
		 * @param {string} DBInstanceIdentifier <p>The identifier of DB instance to modify. This value is stored as a lowercase string.</p> <p>Constraints:</p> <ul> <li> <p>Must match the identifier of an existing DB instance.</p> </li> </ul>
		 * @param {number} AllocatedStorage <p>The new amount of storage in gibibytes (GiB) to allocate for the DB instance.</p> <p>For RDS for MariaDB, RDS for MySQL, RDS for Oracle, and RDS for PostgreSQL, the value supplied must be at least 10% greater than the current value. Values that are not at least 10% greater than the existing value are rounded up so that they are 10% greater than the current value.</p> <p>For the valid values for allocated storage for each engine, see <code>CreateDBInstance</code>.</p>
		 * @param {string} DBInstanceClass <p>The new compute and memory capacity of the DB instance, for example <code>db.m4.large</code>. Not all DB instance classes are available in all Amazon Web Services Regions, or for all database engines. For the full list of DB instance classes, and availability for your engine, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.DBInstanceClass.html">DB Instance Class</a> in the <i>Amazon RDS User Guide</i> or <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/Concepts.DBInstanceClass.html">Aurora DB instance classes</a> in the <i>Amazon Aurora User Guide</i>. For RDS Custom, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/custom-reqs-limits.html#custom-reqs-limits.instances">DB instance class support for RDS Custom for Oracle</a> and <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/custom-reqs-limits-MS.html#custom-reqs-limits.instancesMS"> DB instance class support for RDS Custom for SQL Server</a>.</p> <p>If you modify the DB instance class, an outage occurs during the change. The change is applied during the next maintenance window, unless you specify <code>ApplyImmediately</code> in your request. </p> <p>Default: Uses existing setting</p>
		 * @param {string} DBSubnetGroupName <p>The new DB subnet group for the DB instance. You can use this parameter to move your DB instance to a different VPC. If your DB instance isn't in a VPC, you can also use this parameter to move your DB instance into a VPC. For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_VPC.WorkingWithRDSInstanceinaVPC.html#USER_VPC.Non-VPC2VPC">Working with a DB instance in a VPC</a> in the <i>Amazon RDS User Guide</i>.</p> <p>Changing the subnet group causes an outage during the change. The change is applied during the next maintenance window, unless you enable <code>ApplyImmediately</code>.</p> <p>This parameter doesn't apply to RDS Custom DB instances.</p> <p>Constraints:</p> <ul> <li> <p>If supplied, must match existing DB subnet group.</p> </li> </ul> <p>Example: <code>mydbsubnetgroup</code> </p>
		 * @param {Array<string>} DBSecurityGroups <p>A list of DB security groups to authorize on this DB instance. Changing this setting doesn't result in an outage and the change is asynchronously applied as soon as possible.</p> <p>This setting doesn't apply to RDS Custom DB instances.</p> <p>Constraints:</p> <ul> <li> <p>If supplied, must match existing DB security groups.</p> </li> </ul>
		 * @param {Array<string>} VpcSecurityGroupIds <p>A list of Amazon EC2 VPC security groups to associate with this DB instance. This change is asynchronously applied as soon as possible.</p> <p>This setting doesn't apply to the following DB instances:</p> <ul> <li> <p>Amazon Aurora (The associated list of EC2 VPC security groups is managed by the DB cluster. For more information, see <code>ModifyDBCluster</code>.)</p> </li> <li> <p>RDS Custom</p> </li> </ul> <p>Constraints:</p> <ul> <li> <p>If supplied, must match existing VPC security group IDs.</p> </li> </ul>
		 * @param {boolean} ApplyImmediately <p>Specifies whether the modifications in this request and any pending modifications are asynchronously applied as soon as possible, regardless of the <code>PreferredMaintenanceWindow</code> setting for the DB instance. By default, this parameter is disabled.</p> <p>If this parameter is disabled, changes to the DB instance are applied during the next maintenance window. Some parameter changes can cause an outage and are applied on the next call to <a>RebootDBInstance</a>, or the next failure reboot. Review the table of parameters in <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Overview.DBInstance.Modifying.html">Modifying a DB Instance</a> in the <i>Amazon RDS User Guide</i> to see the impact of enabling or disabling <code>ApplyImmediately</code> for each modified parameter and to determine when the changes are applied.</p>
		 * @param {string} MasterUserPassword <p>The new password for the master user.</p> <p>Changing this parameter doesn't result in an outage and the change is asynchronously applied as soon as possible. Between the time of the request and the completion of the request, the <code>MasterUserPassword</code> element exists in the <code>PendingModifiedValues</code> element of the operation response.</p> <note> <p>Amazon RDS API operations never return the password, so this action provides a way to regain access to a primary instance user if the password is lost. This includes restoring privileges that might have been accidentally revoked.</p> </note> <p>This setting doesn't apply to the following DB instances:</p> <ul> <li> <p>Amazon Aurora (The password for the master user is managed by the DB cluster. For more information, see <code>ModifyDBCluster</code>.)</p> </li> <li> <p>RDS Custom</p> </li> </ul> <p>Default: Uses existing setting</p> <p>Constraints:</p> <ul> <li> <p>Can't be specified if <code>ManageMasterUserPassword</code> is turned on.</p> </li> <li> <p>Can include any printable ASCII character except "/", """, or "@".</p> </li> </ul> <p>Length Constraints:</p> <ul> <li> <p>RDS for MariaDB - Must contain from 8 to 41 characters.</p> </li> <li> <p>RDS for Microsoft SQL Server - Must contain from 8 to 128 characters.</p> </li> <li> <p>RDS for MySQL - Must contain from 8 to 41 characters.</p> </li> <li> <p>RDS for Oracle - Must contain from 8 to 30 characters.</p> </li> <li> <p>RDS for PostgreSQL - Must contain from 8 to 128 characters.</p> </li> </ul>
		 * @param {string} DBParameterGroupName <p>The name of the DB parameter group to apply to the DB instance.</p> <p>Changing this setting doesn't result in an outage. The parameter group name itself is changed immediately, but the actual parameter changes are not applied until you reboot the instance without failover. In this case, the DB instance isn't rebooted automatically, and the parameter changes aren't applied during the next maintenance window. However, if you modify dynamic parameters in the newly associated DB parameter group, these changes are applied immediately without a reboot.</p> <p>This setting doesn't apply to RDS Custom DB instances.</p> <p>Default: Uses existing setting</p> <p>Constraints:</p> <ul> <li> <p>Must be in the same DB parameter group family as the DB instance.</p> </li> </ul>
		 * @param {number} BackupRetentionPeriod <p>The number of days to retain automated backups. Setting this parameter to a positive number enables backups. Setting this parameter to 0 disables automated backups.</p> <note> <p>Enabling and disabling backups can result in a brief I/O suspension that lasts from a few seconds to a few minutes, depending on the size and class of your DB instance.</p> </note> <p>These changes are applied during the next maintenance window unless the <code>ApplyImmediately</code> parameter is enabled for this request. If you change the parameter from one non-zero value to another non-zero value, the change is asynchronously applied as soon as possible.</p> <p>This setting doesn't apply to Amazon Aurora DB instances. The retention period for automated backups is managed by the DB cluster. For more information, see <code>ModifyDBCluster</code>.</p> <p>Default: Uses existing setting</p> <p>Constraints:</p> <ul> <li> <p>Must be a value from 0 to 35.</p> </li> <li> <p>Can't be set to 0 if the DB instance is a source to read replicas.</p> </li> <li> <p>Can't be set to 0 for an RDS Custom for Oracle DB instance.</p> </li> </ul>
		 * @param {string} PreferredBackupWindow <p>The daily time range during which automated backups are created if automated backups are enabled, as determined by the <code>BackupRetentionPeriod</code> parameter. Changing this parameter doesn't result in an outage and the change is asynchronously applied as soon as possible. The default is a 30-minute window selected at random from an 8-hour block of time for each Amazon Web Services Region. For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_WorkingWithAutomatedBackups.html#USER_WorkingWithAutomatedBackups.BackupWindow">Backup window</a> in the <i>Amazon RDS User Guide</i>.</p> <p>This setting doesn't apply to Amazon Aurora DB instances. The daily time range for creating automated backups is managed by the DB cluster. For more information, see <code>ModifyDBCluster</code>.</p> <p>Constraints:</p> <ul> <li> <p>Must be in the format <code>hh24:mi-hh24:mi</code>.</p> </li> <li> <p>Must be in Universal Coordinated Time (UTC).</p> </li> <li> <p>Must not conflict with the preferred maintenance window.</p> </li> <li> <p>Must be at least 30 minutes.</p> </li> </ul>
		 * @param {string} PreferredMaintenanceWindow <p>The weekly time range during which system maintenance can occur, which might result in an outage. Changing this parameter doesn't result in an outage, except in the following situation, and the change is asynchronously applied as soon as possible. If there are pending actions that cause a reboot, and the maintenance window is changed to include the current time, then changing this parameter causes a reboot of the DB instance. If you change this window to the current time, there must be at least 30 minutes between the current time and end of the window to ensure pending changes are applied.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_UpgradeDBInstance.Maintenance.html#Concepts.DBMaintenance">Amazon RDS Maintenance Window</a> in the <i>Amazon RDS User Guide.</i> </p> <p>Default: Uses existing setting</p> <p>Constraints:</p> <ul> <li> <p>Must be in the format <code>ddd:hh24:mi-ddd:hh24:mi</code>.</p> </li> <li> <p>The day values must be <code>mon | tue | wed | thu | fri | sat | sun</code>. </p> </li> <li> <p>Must be in Universal Coordinated Time (UTC).</p> </li> <li> <p>Must not conflict with the preferred backup window.</p> </li> <li> <p>Must be at least 30 minutes.</p> </li> </ul>
		 * @param {boolean} MultiAZ <p>Specifies whether the DB instance is a Multi-AZ deployment. Changing this parameter doesn't result in an outage. The change is applied during the next maintenance window unless the <code>ApplyImmediately</code> parameter is enabled for this request.</p> <p>This setting doesn't apply to RDS Custom DB instances.</p>
		 * @param {string} EngineVersion <p>The version number of the database engine to upgrade to. Changing this parameter results in an outage and the change is applied during the next maintenance window unless the <code>ApplyImmediately</code> parameter is enabled for this request.</p> <p>For major version upgrades, if a nondefault DB parameter group is currently in use, a new DB parameter group in the DB parameter group family for the new engine version must be specified. The new DB parameter group can be the default for that DB parameter group family.</p> <p>If you specify only a major version, Amazon RDS updates the DB instance to the default minor version if the current minor version is lower. For information about valid engine versions, see <code>CreateDBInstance</code>, or call <code>DescribeDBEngineVersions</code>.</p> <p>If the instance that you're modifying is acting as a read replica, the engine version that you specify must be the same or higher than the version that the source DB instance or cluster is running.</p> <p>In RDS Custom for Oracle, this parameter is supported for read replicas only if they are in the <code>PATCH_DB_FAILURE</code> lifecycle.</p>
		 * @param {boolean} AllowMajorVersionUpgrade <p>Specifies whether major version upgrades are allowed. Changing this parameter doesn't result in an outage and the change is asynchronously applied as soon as possible.</p> <p>This setting doesn't apply to RDS Custom DB instances.</p> <p>Constraints:</p> <ul> <li> <p>Major version upgrades must be allowed when specifying a value for the <code>EngineVersion</code> parameter that's a different major version than the DB instance's current version.</p> </li> </ul>
		 * @param {boolean} AutoMinorVersionUpgrade <p>Specifies whether minor version upgrades are applied automatically to the DB instance during the maintenance window. An outage occurs when all the following conditions are met:</p> <ul> <li> <p>The automatic upgrade is enabled for the maintenance window.</p> </li> <li> <p>A newer minor version is available.</p> </li> <li> <p>RDS has enabled automatic patching for the engine version.</p> </li> </ul> <p>If any of the preceding conditions isn't met, Amazon RDS applies the change as soon as possible and doesn't cause an outage.</p> <p>For an RDS Custom DB instance, don't enable this setting. Otherwise, the operation returns an error.</p>
		 * @param {string} LicenseModel <p>The license model for the DB instance.</p> <p>This setting doesn't apply to Amazon Aurora or RDS Custom DB instances.</p> <p>Valid Values:</p> <ul> <li> <p>RDS for MariaDB - <code>general-public-license</code> </p> </li> <li> <p>RDS for Microsoft SQL Server - <code>license-included</code> </p> </li> <li> <p>RDS for MySQL - <code>general-public-license</code> </p> </li> <li> <p>RDS for Oracle - <code>bring-your-own-license | license-included</code> </p> </li> <li> <p>RDS for PostgreSQL - <code>postgresql-license</code> </p> </li> </ul>
		 * @param {number} Iops <p>The new Provisioned IOPS (I/O operations per second) value for the RDS instance.</p> <p>Changing this setting doesn't result in an outage and the change is applied during the next maintenance window unless the <code>ApplyImmediately</code> parameter is enabled for this request. If you are migrating from Provisioned IOPS to standard storage, set this value to 0. The DB instance will require a reboot for the change in storage type to take effect.</p> <p>If you choose to migrate your DB instance from using standard storage to using Provisioned IOPS, or from using Provisioned IOPS to using standard storage, the process can take time. The duration of the migration depends on several factors such as database load, storage size, storage type (standard or Provisioned IOPS), amount of IOPS provisioned (if any), and the number of prior scale storage operations. Typical migration times are under 24 hours, but the process can take up to several days in some cases. During the migration, the DB instance is available for use, but might experience performance degradation. While the migration takes place, nightly backups for the instance are suspended. No other Amazon RDS operations can take place for the instance, including modifying the instance, rebooting the instance, deleting the instance, creating a read replica for the instance, and creating a DB snapshot of the instance.</p> <p>Constraints:</p> <ul> <li> <p>For RDS for MariaDB, RDS for MySQL, RDS for Oracle, and RDS for PostgreSQL - The value supplied must be at least 10% greater than the current value. Values that are not at least 10% greater than the existing value are rounded up so that they are 10% greater than the current value.</p> </li> </ul> <p>Default: Uses existing setting</p>
		 * @param {string} OptionGroupName <p>The option group to associate the DB instance with.</p> <p>Changing this parameter doesn't result in an outage, with one exception. If the parameter change results in an option group that enables OEM, it can cause a brief period, lasting less than a second, during which new connections are rejected but existing connections aren't interrupted.</p> <p>The change is applied during the next maintenance window unless the <code>ApplyImmediately</code> parameter is enabled for this request.</p> <p>Permanent options, such as the TDE option for Oracle Advanced Security TDE, can't be removed from an option group, and that option group can't be removed from a DB instance after it is associated with a DB instance.</p> <p>This setting doesn't apply to RDS Custom DB instances.</p>
		 * @param {string} NewDBInstanceIdentifier <p>The new identifier for the DB instance when renaming a DB instance. When you change the DB instance identifier, an instance reboot occurs immediately if you enable <code>ApplyImmediately</code>, or will occur during the next maintenance window if you disable <code>ApplyImmediately</code>. This value is stored as a lowercase string.</p> <p>This setting doesn't apply to RDS Custom DB instances.</p> <p>Constraints:</p> <ul> <li> <p>Must contain from 1 to 63 letters, numbers, or hyphens.</p> </li> <li> <p>The first character must be a letter.</p> </li> <li> <p>Can't end with a hyphen or contain two consecutive hyphens.</p> </li> </ul> <p>Example: <code>mydbinstance</code> </p>
		 * @param {string} StorageType <p>The storage type to associate with the DB instance.</p> <p>If you specify Provisioned IOPS (<code>io1</code>), you must also include a value for the <code>Iops</code> parameter.</p> <p>If you choose to migrate your DB instance from using standard storage to using Provisioned IOPS, or from using Provisioned IOPS to using standard storage, the process can take time. The duration of the migration depends on several factors such as database load, storage size, storage type (standard or Provisioned IOPS), amount of IOPS provisioned (if any), and the number of prior scale storage operations. Typical migration times are under 24 hours, but the process can take up to several days in some cases. During the migration, the DB instance is available for use, but might experience performance degradation. While the migration takes place, nightly backups for the instance are suspended. No other Amazon RDS operations can take place for the instance, including modifying the instance, rebooting the instance, deleting the instance, creating a read replica for the instance, and creating a DB snapshot of the instance.</p> <p>Valid Values: <code>gp2 | gp3 | io1 | standard</code> </p> <p>Default: <code>io1</code>, if the <code>Iops</code> parameter is specified. Otherwise, <code>gp2</code>.</p>
		 * @param {string} TdeCredentialArn <p>The ARN from the key store with which to associate the instance for TDE encryption.</p> <p>This setting doesn't apply to RDS Custom DB instances.</p>
		 * @param {string} TdeCredentialPassword <p>The password for the given ARN from the key store in order to access the device.</p> <p>This setting doesn't apply to RDS Custom DB instances.</p>
		 * @param {string} CACertificateIdentifier <p>The CA certificate identifier to use for the DB instance's server certificate.</p> <p>This setting doesn't apply to RDS Custom DB instances.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/UsingWithRDS.SSL.html">Using SSL/TLS to encrypt a connection to a DB instance</a> in the <i>Amazon RDS User Guide</i> and <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/UsingWithRDS.SSL.html"> Using SSL/TLS to encrypt a connection to a DB cluster</a> in the <i>Amazon Aurora User Guide</i>.</p>
		 * @param {string} Domain <p>The Active Directory directory ID to move the DB instance to. Specify <code>none</code> to remove the instance from its current domain. You must create the domain before this operation. Currently, you can create only MySQL, Microsoft SQL Server, Oracle, and PostgreSQL DB instances in an Active Directory Domain.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/kerberos-authentication.html"> Kerberos Authentication</a> in the <i>Amazon RDS User Guide</i>.</p> <p>This setting doesn't apply to RDS Custom DB instances.</p>
		 * @param {string} DomainFqdn <p>The fully qualified domain name (FQDN) of an Active Directory domain.</p> <p>Constraints:</p> <ul> <li> <p>Can't be longer than 64 characters.</p> </li> </ul> <p>Example: <code>mymanagedADtest.mymanagedAD.mydomain</code> </p>
		 * @param {string} DomainOu <p>The Active Directory organizational unit for your DB instance to join.</p> <p>Constraints:</p> <ul> <li> <p>Must be in the distinguished name format.</p> </li> <li> <p>Can't be longer than 64 characters.</p> </li> </ul> <p>Example: <code>OU=mymanagedADtestOU,DC=mymanagedADtest,DC=mymanagedAD,DC=mydomain</code> </p>
		 * @param {string} DomainAuthSecretArn <p>The ARN for the Secrets Manager secret with the credentials for the user joining the domain.</p> <p>Example: <code>arn:aws:secretsmanager:region:account-number:secret:myselfmanagedADtestsecret-123456</code> </p>
		 * @param {Array<string>} DomainDnsIps <p>The IPv4 DNS IP addresses of your primary and secondary Active Directory domain controllers.</p> <p>Constraints:</p> <ul> <li> <p>Two IP addresses must be provided. If there isn't a secondary domain controller, use the IP address of the primary domain controller for both entries in the list.</p> </li> </ul> <p>Example: <code>123.124.125.126,234.235.236.237</code> </p>
		 * @param {boolean} CopyTagsToSnapshot <p>Specifies whether to copy all tags from the DB instance to snapshots of the DB instance. By default, tags aren't copied.</p> <p>This setting doesn't apply to Amazon Aurora DB instances. Copying tags to snapshots is managed by the DB cluster. Setting this value for an Aurora DB instance has no effect on the DB cluster setting. For more information, see <code>ModifyDBCluster</code>.</p>
		 * @param {number} MonitoringInterval <p>The interval, in seconds, between points when Enhanced Monitoring metrics are collected for the DB instance. To disable collection of Enhanced Monitoring metrics, specify <code>0</code>.</p> <p>If <code>MonitoringRoleArn</code> is specified, set <code>MonitoringInterval</code> to a value other than <code>0</code>.</p> <p>This setting doesn't apply to RDS Custom DB instances.</p> <p>Valid Values: <code>0 | 1 | 5 | 10 | 15 | 30 | 60</code> </p> <p>Default: <code>0</code> </p>
		 * @param {number} DBPortNumber <p>The port number on which the database accepts connections.</p> <p>The value of the <code>DBPortNumber</code> parameter must not match any of the port values specified for options in the option group for the DB instance.</p> <p>If you change the <code>DBPortNumber</code> value, your database restarts regardless of the value of the <code>ApplyImmediately</code> parameter.</p> <p>This setting doesn't apply to RDS Custom DB instances.</p> <p>Valid Values: <code>1150-65535</code> </p> <p>Default:</p> <ul> <li> <p>Amazon Aurora - <code>3306</code> </p> </li> <li> <p>RDS for MariaDB - <code>3306</code> </p> </li> <li> <p>RDS for Microsoft SQL Server - <code>1433</code> </p> </li> <li> <p>RDS for MySQL - <code>3306</code> </p> </li> <li> <p>RDS for Oracle - <code>1521</code> </p> </li> <li> <p>RDS for PostgreSQL - <code>5432</code> </p> </li> </ul> <p>Constraints:</p> <ul> <li> <p>For RDS for Microsoft SQL Server, the value can't be <code>1234</code>, <code>1434</code>, <code>3260</code>, <code>3343</code>, <code>3389</code>, <code>47001</code>, or <code>49152-49156</code>.</p> </li> </ul>
		 * @param {boolean} PubliclyAccessible <p>Specifies whether the DB instance is publicly accessible.</p> <p>When the DB cluster is publicly accessible, its Domain Name System (DNS) endpoint resolves to the private IP address from within the DB cluster's virtual private cloud (VPC). It resolves to the public IP address from outside of the DB cluster's VPC. Access to the DB cluster is ultimately controlled by the security group it uses. That public access isn't permitted if the security group assigned to the DB cluster doesn't permit it.</p> <p>When the DB instance isn't publicly accessible, it is an internal DB instance with a DNS name that resolves to a private IP address.</p> <p> <code>PubliclyAccessible</code> only applies to DB instances in a VPC. The DB instance must be part of a public subnet and <code>PubliclyAccessible</code> must be enabled for it to be publicly accessible.</p> <p>Changes to the <code>PubliclyAccessible</code> parameter are applied immediately regardless of the value of the <code>ApplyImmediately</code> parameter.</p>
		 * @param {string} MonitoringRoleArn <p>The ARN for the IAM role that permits RDS to send enhanced monitoring metrics to Amazon CloudWatch Logs. For example, <code>arn:aws:iam:123456789012:role/emaccess</code>. For information on creating a monitoring role, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Monitoring.html#USER_Monitoring.OS.IAMRole">To create an IAM role for Amazon RDS Enhanced Monitoring</a> in the <i>Amazon RDS User Guide.</i> </p> <p>If <code>MonitoringInterval</code> is set to a value other than <code>0</code>, supply a <code>MonitoringRoleArn</code> value.</p> <p>This setting doesn't apply to RDS Custom DB instances.</p>
		 * @param {string} DomainIAMRoleName <p>The name of the IAM role to use when making API calls to the Directory Service.</p> <p>This setting doesn't apply to RDS Custom DB instances.</p>
		 * @param {boolean} DisableDomain Specifies whether to remove the DB instance from the Active Directory domain.
		 * @param {number} PromotionTier <p>The order of priority in which an Aurora Replica is promoted to the primary instance after a failure of the existing primary instance. For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/Concepts.AuroraHighAvailability.html#Aurora.Managing.FaultTolerance"> Fault Tolerance for an Aurora DB Cluster</a> in the <i>Amazon Aurora User Guide</i>.</p> <p>This setting doesn't apply to RDS Custom DB instances.</p> <p>Default: <code>1</code> </p> <p>Valid Values: <code>0 - 15</code> </p>
		 * @param {boolean} EnableIAMDatabaseAuthentication <p>Specifies whether to enable mapping of Amazon Web Services Identity and Access Management (IAM) accounts to database accounts. By default, mapping isn't enabled.</p> <p>This setting doesn't apply to Amazon Aurora. Mapping Amazon Web Services IAM accounts to database accounts is managed by the DB cluster.</p> <p>For more information about IAM database authentication, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/UsingWithRDS.IAMDBAuth.html"> IAM Database Authentication for MySQL and PostgreSQL</a> in the <i>Amazon RDS User Guide.</i> </p> <p>This setting doesn't apply to RDS Custom DB instances.</p>
		 * @param {boolean} EnablePerformanceInsights <p>Specifies whether to enable Performance Insights for the DB instance.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_PerfInsights.html">Using Amazon Performance Insights</a> in the <i>Amazon RDS User Guide</i>.</p> <p>This setting doesn't apply to RDS Custom DB instances.</p>
		 * @param {string} PerformanceInsightsKMSKeyId <p>The Amazon Web Services KMS key identifier for encryption of Performance Insights data.</p> <p>The Amazon Web Services KMS key identifier is the key ARN, key ID, alias ARN, or alias name for the KMS key.</p> <p>If you don't specify a value for <code>PerformanceInsightsKMSKeyId</code>, then Amazon RDS uses your default KMS key. There is a default KMS key for your Amazon Web Services account. Your Amazon Web Services account has a different default KMS key for each Amazon Web Services Region.</p> <p>This setting doesn't apply to RDS Custom DB instances.</p>
		 * @param {number} PerformanceInsightsRetentionPeriod <p>The number of days to retain Performance Insights data.</p> <p>This setting doesn't apply to RDS Custom DB instances.</p> <p>Valid Values:</p> <ul> <li> <p> <code>7</code> </p> </li> <li> <p> <i>month</i> * 31, where <i>month</i> is a number of months from 1-23. Examples: <code>93</code> (3 months * 31), <code>341</code> (11 months * 31), <code>589</code> (19 months * 31)</p> </li> <li> <p> <code>731</code> </p> </li> </ul> <p>Default: <code>7</code> days</p> <p>If you specify a retention period that isn't valid, such as <code>94</code>, Amazon RDS returns an error.</p>
		 * @param {GET_ModifyDBInstanceCloudwatchLogsExportConfiguration} CloudwatchLogsExportConfiguration <p>The log types to be enabled for export to CloudWatch Logs for a specific DB instance.</p> <p>A change to the <code>CloudwatchLogsExportConfiguration</code> parameter is always applied to the DB instance immediately. Therefore, the <code>ApplyImmediately</code> parameter has no effect.</p> <p>This setting doesn't apply to RDS Custom DB instances.</p>
		 * @param {Array<string>} ProcessorFeatures <p>The number of CPU cores and the number of threads per core for the DB instance class of the DB instance.</p> <p>This setting doesn't apply to RDS Custom DB instances.</p>
		 * @param {boolean} UseDefaultProcessorFeatures <p>Specifies whether the DB instance class of the DB instance uses its default processor features.</p> <p>This setting doesn't apply to RDS Custom DB instances.</p>
		 * @param {boolean} DeletionProtection Specifies whether the DB instance has deletion protection enabled. The database can't be deleted when deletion protection is enabled. By default, deletion protection isn't enabled. For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_DeleteInstance.html"> Deleting a DB Instance</a>.
		 * @param {number} MaxAllocatedStorage <p>The upper limit in gibibytes (GiB) to which Amazon RDS can automatically scale the storage of the DB instance.</p> <p>For more information about this setting, including limitations that apply to it, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_PIOPS.StorageTypes.html#USER_PIOPS.Autoscaling"> Managing capacity automatically with Amazon RDS storage autoscaling</a> in the <i>Amazon RDS User Guide</i>.</p> <p>This setting doesn't apply to RDS Custom DB instances.</p>
		 * @param {boolean} CertificateRotationRestart <p>Specifies whether the DB instance is restarted when you rotate your SSL/TLS certificate.</p> <p>By default, the DB instance is restarted when you rotate your SSL/TLS certificate. The certificate is not updated until the DB instance is restarted.</p> <important> <p>Set this parameter only if you are <i>not</i> using SSL/TLS to connect to the DB instance.</p> </important> <p>If you are using SSL/TLS to connect to the DB instance, follow the appropriate instructions for your DB engine to rotate your SSL/TLS certificate:</p> <ul> <li> <p>For more information about rotating your SSL/TLS certificate for RDS DB engines, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/UsingWithRDS.SSL-certificate-rotation.html"> Rotating Your SSL/TLS Certificate.</a> in the <i>Amazon RDS User Guide.</i> </p> </li> <li> <p>For more information about rotating your SSL/TLS certificate for Aurora DB engines, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/UsingWithRDS.SSL-certificate-rotation.html"> Rotating Your SSL/TLS Certificate</a> in the <i>Amazon Aurora User Guide</i>.</p> </li> </ul> <p>This setting doesn't apply to RDS Custom DB instances.</p>
		 * @param {ReplicaMode} ReplicaMode <p>A value that sets the open mode of a replica database to either mounted or read-only.</p> <note> <p>Currently, this parameter is only supported for Oracle DB instances.</p> </note> <p>Mounted DB replicas are included in Oracle Enterprise Edition. The main use case for mounted replicas is cross-Region disaster recovery. The primary database doesn't use Active Data Guard to transmit information to the mounted replica. Because it doesn't accept user connections, a mounted replica can't serve a read-only workload. For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/oracle-read-replicas.html">Working with Oracle Read Replicas for Amazon RDS</a> in the <i>Amazon RDS User Guide</i>.</p> <p>This setting doesn't apply to RDS Custom DB instances.</p>
		 * @param {boolean} EnableCustomerOwnedIp <p>Specifies whether to enable a customer-owned IP address (CoIP) for an RDS on Outposts DB instance.</p> <p>A <i>CoIP</i> provides local or external connectivity to resources in your Outpost subnets through your on-premises network. For some use cases, a CoIP can provide lower latency for connections to the DB instance from outside of its virtual private cloud (VPC) on your local network.</p> <p>For more information about RDS on Outposts, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/rds-on-outposts.html">Working with Amazon RDS on Amazon Web Services Outposts</a> in the <i>Amazon RDS User Guide</i>.</p> <p>For more information about CoIPs, see <a href="https://docs.aws.amazon.com/outposts/latest/userguide/routing.html#ip-addressing">Customer-owned IP addresses</a> in the <i>Amazon Web Services Outposts User Guide</i>.</p>
		 * @param {string} AwsBackupRecoveryPointArn <p>The Amazon Resource Name (ARN) of the recovery point in Amazon Web Services Backup.</p> <p>This setting doesn't apply to RDS Custom DB instances.</p>
		 * @param {AutomationMode} AutomationMode The automation mode of the RDS Custom DB instance. If <code>full</code>, the DB instance automates monitoring and instance recovery. If <code>all paused</code>, the instance pauses automation for the duration set by <code>ResumeFullAutomationModeMinutes</code>.
		 * @param {number} ResumeFullAutomationModeMinutes <p>The number of minutes to pause the automation. When the time period ends, RDS Custom resumes full automation.</p> <p>Default: <code>60</code> </p> <p>Constraints:</p> <ul> <li> <p>Must be at least 60.</p> </li> <li> <p>Must be no more than 1,440.</p> </li> </ul>
		 * @param {string} NetworkType <p>The network type of the DB instance.</p> <p>The network type is determined by the <code>DBSubnetGroup</code> specified for the DB instance. A <code>DBSubnetGroup</code> can support only the IPv4 protocol or the IPv4 and the IPv6 protocols (<code>DUAL</code>).</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_VPC.WorkingWithRDSInstanceinaVPC.html"> Working with a DB instance in a VPC</a> in the <i>Amazon RDS User Guide.</i> </p> <p>Valid Values: <code>IPV4 | DUAL</code> </p>
		 * @param {number} StorageThroughput <p>The storage throughput value for the DB instance.</p> <p>This setting applies only to the <code>gp3</code> storage type.</p> <p>This setting doesn't apply to Amazon Aurora or RDS Custom DB instances.</p>
		 * @param {boolean} ManageMasterUserPassword <p>Specifies whether to manage the master user password with Amazon Web Services Secrets Manager.</p> <p>If the DB instance doesn't manage the master user password with Amazon Web Services Secrets Manager, you can turn on this management. In this case, you can't specify <code>MasterUserPassword</code>.</p> <p>If the DB instance already manages the master user password with Amazon Web Services Secrets Manager, and you specify that the master user password is not managed with Amazon Web Services Secrets Manager, then you must specify <code>MasterUserPassword</code>. In this case, Amazon RDS deletes the secret and uses the new password for the master user specified by <code>MasterUserPassword</code>.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/rds-secrets-manager.html">Password management with Amazon Web Services Secrets Manager</a> in the <i>Amazon RDS User Guide.</i> </p> <p>Constraints:</p> <ul> <li> <p>Can't manage the master user password with Amazon Web Services Secrets Manager if <code>MasterUserPassword</code> is specified.</p> </li> </ul>
		 * @param {boolean} RotateMasterUserPassword <p>Specifies whether to rotate the secret managed by Amazon Web Services Secrets Manager for the master user password.</p> <p>This setting is valid only if the master user password is managed by RDS in Amazon Web Services Secrets Manager for the DB cluster. The secret value contains the updated password.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/rds-secrets-manager.html">Password management with Amazon Web Services Secrets Manager</a> in the <i>Amazon RDS User Guide.</i> </p> <p>Constraints:</p> <ul> <li> <p>You must apply the change immediately when rotating the master user password.</p> </li> </ul>
		 * @param {string} MasterUserSecretKmsKeyId <p>The Amazon Web Services KMS key identifier to encrypt a secret that is automatically generated and managed in Amazon Web Services Secrets Manager.</p> <p>This setting is valid only if both of the following conditions are met:</p> <ul> <li> <p>The DB instance doesn't manage the master user password in Amazon Web Services Secrets Manager.</p> <p>If the DB instance already manages the master user password in Amazon Web Services Secrets Manager, you can't change the KMS key used to encrypt the secret.</p> </li> <li> <p>You are turning on <code>ManageMasterUserPassword</code> to manage the master user password in Amazon Web Services Secrets Manager.</p> <p>If you are turning on <code>ManageMasterUserPassword</code> and don't specify <code>MasterUserSecretKmsKeyId</code>, then the <code>aws/secretsmanager</code> KMS key is used to encrypt the secret. If the secret is in a different Amazon Web Services account, then you can't use the <code>aws/secretsmanager</code> KMS key to encrypt the secret, and you must use a customer managed KMS key.</p> </li> </ul> <p>The Amazon Web Services KMS key identifier is the key ARN, key ID, alias ARN, or alias name for the KMS key. To use a KMS key in a different Amazon Web Services account, specify the key ARN or alias ARN.</p> <p>There is a default KMS key for your Amazon Web Services account. Your Amazon Web Services account has a different default KMS key for each Amazon Web Services Region.</p>
		 * @param {string} Engine <p>The target Oracle DB engine when you convert a non-CDB to a CDB. This intermediate step is necessary to upgrade an Oracle Database 19c non-CDB to an Oracle Database 21c CDB.</p> <p>Note the following requirements:</p> <ul> <li> <p>Make sure that you specify <code>oracle-ee-cdb</code> or <code>oracle-se2-cdb</code>.</p> </li> <li> <p>Make sure that your DB engine runs Oracle Database 19c with an April 2021 or later RU.</p> </li> </ul> <p>Note the following limitations:</p> <ul> <li> <p>You can't convert a CDB to a non-CDB.</p> </li> <li> <p>You can't convert a replica database.</p> </li> <li> <p>You can't convert a non-CDB to a CDB and upgrade the engine version in the same command.</p> </li> <li> <p>You can't convert the existing custom parameter or option group when it has options or parameters that are permanent or persistent. In this situation, the DB instance reverts to the default option and parameter group. To avoid reverting to the default, specify a new parameter group with <code>--db-parameter-group-name</code> and a new option group with <code>--option-group-name</code>.</p> </li> </ul>
		 * @return {void} Success
		 */
		GET_ModifyDBInstance(DBInstanceIdentifier: string, AllocatedStorage: number | null | undefined, DBInstanceClass: string | null | undefined, DBSubnetGroupName: string | null | undefined, DBSecurityGroups: Array<string> | null | undefined, VpcSecurityGroupIds: Array<string> | null | undefined, ApplyImmediately: boolean | null | undefined, MasterUserPassword: string | null | undefined, DBParameterGroupName: string | null | undefined, BackupRetentionPeriod: number | null | undefined, PreferredBackupWindow: string | null | undefined, PreferredMaintenanceWindow: string | null | undefined, MultiAZ: boolean | null | undefined, EngineVersion: string | null | undefined, AllowMajorVersionUpgrade: boolean | null | undefined, AutoMinorVersionUpgrade: boolean | null | undefined, LicenseModel: string | null | undefined, Iops: number | null | undefined, OptionGroupName: string | null | undefined, NewDBInstanceIdentifier: string | null | undefined, StorageType: string | null | undefined, TdeCredentialArn: string | null | undefined, TdeCredentialPassword: string | null | undefined, CACertificateIdentifier: string | null | undefined, Domain: string | null | undefined, DomainFqdn: string | null | undefined, DomainOu: string | null | undefined, DomainAuthSecretArn: string | null | undefined, DomainDnsIps: Array<string> | null | undefined, CopyTagsToSnapshot: boolean | null | undefined, MonitoringInterval: number | null | undefined, DBPortNumber: number | null | undefined, PubliclyAccessible: boolean | null | undefined, MonitoringRoleArn: string | null | undefined, DomainIAMRoleName: string | null | undefined, DisableDomain: boolean | null | undefined, PromotionTier: number | null | undefined, EnableIAMDatabaseAuthentication: boolean | null | undefined, EnablePerformanceInsights: boolean | null | undefined, PerformanceInsightsKMSKeyId: string | null | undefined, PerformanceInsightsRetentionPeriod: number | null | undefined, CloudwatchLogsExportConfiguration: GET_ModifyDBInstanceCloudwatchLogsExportConfiguration | null | undefined, ProcessorFeatures: Array<string> | null | undefined, UseDefaultProcessorFeatures: boolean | null | undefined, DeletionProtection: boolean | null | undefined, MaxAllocatedStorage: number | null | undefined, CertificateRotationRestart: boolean | null | undefined, ReplicaMode: ReplicaMode | null | undefined, EnableCustomerOwnedIp: boolean | null | undefined, AwsBackupRecoveryPointArn: string | null | undefined, AutomationMode: AutomationMode | null | undefined, ResumeFullAutomationModeMinutes: number | null | undefined, NetworkType: string | null | undefined, StorageThroughput: number | null | undefined, ManageMasterUserPassword: boolean | null | undefined, RotateMasterUserPassword: boolean | null | undefined, MasterUserSecretKmsKeyId: string | null | undefined, Engine: string | null | undefined, Action: GET_ModifyDBInstanceAction, Version: GET_AddRoleToDBClusterVersion): Observable<HttpResponse<string>> {
			return this.http.get(this.baseUri + '#Action=ModifyDBInstance?DBInstanceIdentifier=' + (DBInstanceIdentifier == null ? '' : encodeURIComponent(DBInstanceIdentifier)) + '&AllocatedStorage=' + AllocatedStorage + '&DBInstanceClass=' + (DBInstanceClass == null ? '' : encodeURIComponent(DBInstanceClass)) + '&DBSubnetGroupName=' + (DBSubnetGroupName == null ? '' : encodeURIComponent(DBSubnetGroupName)) + '&' + DBSecurityGroups?.map(z => `DBSecurityGroups=${encodeURIComponent(z)}`).join('&') + '&' + VpcSecurityGroupIds?.map(z => `VpcSecurityGroupIds=${encodeURIComponent(z)}`).join('&') + '&ApplyImmediately=' + ApplyImmediately + '&MasterUserPassword=' + (MasterUserPassword == null ? '' : encodeURIComponent(MasterUserPassword)) + '&DBParameterGroupName=' + (DBParameterGroupName == null ? '' : encodeURIComponent(DBParameterGroupName)) + '&BackupRetentionPeriod=' + BackupRetentionPeriod + '&PreferredBackupWindow=' + (PreferredBackupWindow == null ? '' : encodeURIComponent(PreferredBackupWindow)) + '&PreferredMaintenanceWindow=' + (PreferredMaintenanceWindow == null ? '' : encodeURIComponent(PreferredMaintenanceWindow)) + '&MultiAZ=' + MultiAZ + '&EngineVersion=' + (EngineVersion == null ? '' : encodeURIComponent(EngineVersion)) + '&AllowMajorVersionUpgrade=' + AllowMajorVersionUpgrade + '&AutoMinorVersionUpgrade=' + AutoMinorVersionUpgrade + '&LicenseModel=' + (LicenseModel == null ? '' : encodeURIComponent(LicenseModel)) + '&Iops=' + Iops + '&OptionGroupName=' + (OptionGroupName == null ? '' : encodeURIComponent(OptionGroupName)) + '&NewDBInstanceIdentifier=' + (NewDBInstanceIdentifier == null ? '' : encodeURIComponent(NewDBInstanceIdentifier)) + '&StorageType=' + (StorageType == null ? '' : encodeURIComponent(StorageType)) + '&TdeCredentialArn=' + (TdeCredentialArn == null ? '' : encodeURIComponent(TdeCredentialArn)) + '&TdeCredentialPassword=' + (TdeCredentialPassword == null ? '' : encodeURIComponent(TdeCredentialPassword)) + '&CACertificateIdentifier=' + (CACertificateIdentifier == null ? '' : encodeURIComponent(CACertificateIdentifier)) + '&Domain=' + (Domain == null ? '' : encodeURIComponent(Domain)) + '&DomainFqdn=' + (DomainFqdn == null ? '' : encodeURIComponent(DomainFqdn)) + '&DomainOu=' + (DomainOu == null ? '' : encodeURIComponent(DomainOu)) + '&DomainAuthSecretArn=' + (DomainAuthSecretArn == null ? '' : encodeURIComponent(DomainAuthSecretArn)) + '&' + DomainDnsIps?.map(z => `DomainDnsIps=${encodeURIComponent(z)}`).join('&') + '&CopyTagsToSnapshot=' + CopyTagsToSnapshot + '&MonitoringInterval=' + MonitoringInterval + '&DBPortNumber=' + DBPortNumber + '&PubliclyAccessible=' + PubliclyAccessible + '&MonitoringRoleArn=' + (MonitoringRoleArn == null ? '' : encodeURIComponent(MonitoringRoleArn)) + '&DomainIAMRoleName=' + (DomainIAMRoleName == null ? '' : encodeURIComponent(DomainIAMRoleName)) + '&DisableDomain=' + DisableDomain + '&PromotionTier=' + PromotionTier + '&EnableIAMDatabaseAuthentication=' + EnableIAMDatabaseAuthentication + '&EnablePerformanceInsights=' + EnablePerformanceInsights + '&PerformanceInsightsKMSKeyId=' + (PerformanceInsightsKMSKeyId == null ? '' : encodeURIComponent(PerformanceInsightsKMSKeyId)) + '&PerformanceInsightsRetentionPeriod=' + PerformanceInsightsRetentionPeriod + '&CloudwatchLogsExportConfiguration=' + CloudwatchLogsExportConfiguration + '&' + ProcessorFeatures?.map(z => `ProcessorFeatures=${encodeURIComponent(z)}`).join('&') + '&UseDefaultProcessorFeatures=' + UseDefaultProcessorFeatures + '&DeletionProtection=' + DeletionProtection + '&MaxAllocatedStorage=' + MaxAllocatedStorage + '&CertificateRotationRestart=' + CertificateRotationRestart + '&ReplicaMode=' + ReplicaMode + '&EnableCustomerOwnedIp=' + EnableCustomerOwnedIp + '&AwsBackupRecoveryPointArn=' + (AwsBackupRecoveryPointArn == null ? '' : encodeURIComponent(AwsBackupRecoveryPointArn)) + '&AutomationMode=' + AutomationMode + '&ResumeFullAutomationModeMinutes=' + ResumeFullAutomationModeMinutes + '&NetworkType=' + (NetworkType == null ? '' : encodeURIComponent(NetworkType)) + '&StorageThroughput=' + StorageThroughput + '&ManageMasterUserPassword=' + ManageMasterUserPassword + '&RotateMasterUserPassword=' + RotateMasterUserPassword + '&MasterUserSecretKmsKeyId=' + (MasterUserSecretKmsKeyId == null ? '' : encodeURIComponent(MasterUserSecretKmsKeyId)) + '&Engine=' + (Engine == null ? '' : encodeURIComponent(Engine)) + '&Action=' + Action + '&Version=' + Version, { observe: 'response', responseType: 'text' });
		}

		/**
		 * <p>Modifies the parameters of a DB parameter group. To modify more than one parameter, submit a list of the following: <code>ParameterName</code>, <code>ParameterValue</code>, and <code>ApplyMethod</code>. A maximum of 20 parameters can be modified in a single request.</p> <important> <p>After you modify a DB parameter group, you should wait at least 5 minutes before creating your first DB instance that uses that DB parameter group as the default parameter group. This allows Amazon RDS to fully complete the modify action before the parameter group is used as the default for a new DB instance. This is especially important for parameters that are critical when creating the default database for a DB instance, such as the character set for the default database defined by the <code>character_set_database</code> parameter. You can use the <i>Parameter Groups</i> option of the <a href="https://console.aws.amazon.com/rds/">Amazon RDS console</a> or the <i>DescribeDBParameters</i> command to verify that your DB parameter group has been created or modified.</p> </important>
		 * Get #Action=ModifyDBParameterGroup
		 * @param {string} DBParameterGroupName <p>The name of the DB parameter group.</p> <p>Constraints:</p> <ul> <li> <p>If supplied, must match the name of an existing <code>DBParameterGroup</code>.</p> </li> </ul>
		 * @param {Array<string>} Parameters <p>An array of parameter names, values, and the application methods for the parameter update. At least one parameter name, value, and application method must be supplied; later arguments are optional. A maximum of 20 parameters can be modified in a single request.</p> <p>Valid Values (for the application method): <code>immediate | pending-reboot</code> </p> <p>You can use the <code>immediate</code> value with dynamic parameters only. You can use the <code>pending-reboot</code> value for both dynamic and static parameters.</p> <p>When the application method is <code>immediate</code>, changes to dynamic parameters are applied immediately to the DB instances associated with the parameter group.</p> <p>When the application method is <code>pending-reboot</code>, changes to dynamic and static parameters are applied after a reboot without failover to the DB instances associated with the parameter group.</p> <note> <p>You can't use <code>pending-reboot</code> with dynamic parameters on RDS for SQL Server DB instances. Use <code>immediate</code>.</p> </note> <p>For more information on modifying DB parameters, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_WorkingWithParamGroups.html">Working with DB parameter groups</a> in the <i>Amazon RDS User Guide</i>.</p>
		 * @return {void} Success
		 */
		GET_ModifyDBParameterGroup(DBParameterGroupName: string, Parameters: Array<string>, Action: GET_ModifyDBParameterGroupAction, Version: GET_AddRoleToDBClusterVersion): Observable<HttpResponse<string>> {
			return this.http.get(this.baseUri + '#Action=ModifyDBParameterGroup?DBParameterGroupName=' + (DBParameterGroupName == null ? '' : encodeURIComponent(DBParameterGroupName)) + '&' + Parameters.map(z => `Parameters=${encodeURIComponent(z)}`).join('&') + '&Action=' + Action + '&Version=' + Version, { observe: 'response', responseType: 'text' });
		}

		/**
		 * Changes the settings for an existing DB proxy.
		 * Get #Action=ModifyDBProxy
		 * @param {string} DBProxyName The identifier for the <code>DBProxy</code> to modify.
		 * @param {string} NewDBProxyName The new identifier for the <code>DBProxy</code>. An identifier must begin with a letter and must contain only ASCII letters, digits, and hyphens; it can't end with a hyphen or contain two consecutive hyphens.
		 * @param {Array<UserAuthConfig>} Auth The new authentication settings for the <code>DBProxy</code>.
		 * @param {boolean} RequireTLS Whether Transport Layer Security (TLS) encryption is required for connections to the proxy. By enabling this setting, you can enforce encrypted TLS connections to the proxy, even if the associated database doesn't use TLS.
		 * @param {number} IdleClientTimeout The number of seconds that a connection to the proxy can be inactive before the proxy disconnects it. You can set this value higher or lower than the connection timeout limit for the associated database.
		 * @param {boolean} DebugLogging Whether the proxy includes detailed information about SQL statements in its logs. This information helps you to debug issues involving SQL behavior or the performance and scalability of the proxy connections. The debug information includes the text of SQL statements that you submit through the proxy. Thus, only enable this setting when needed for debugging, and only when you have security measures in place to safeguard any sensitive information that appears in the logs.
		 * @param {string} RoleArn The Amazon Resource Name (ARN) of the IAM role that the proxy uses to access secrets in Amazon Web Services Secrets Manager.
		 * @param {Array<string>} SecurityGroups The new list of security groups for the <code>DBProxy</code>.
		 * @return {void} Success
		 */
		GET_ModifyDBProxy(DBProxyName: string, NewDBProxyName: string | null | undefined, Auth: Array<UserAuthConfig> | null | undefined, RequireTLS: boolean | null | undefined, IdleClientTimeout: number | null | undefined, DebugLogging: boolean | null | undefined, RoleArn: string | null | undefined, SecurityGroups: Array<string> | null | undefined, Action: GET_ModifyDBProxyAction, Version: GET_AddRoleToDBClusterVersion): Observable<HttpResponse<string>> {
			return this.http.get(this.baseUri + '#Action=ModifyDBProxy?DBProxyName=' + (DBProxyName == null ? '' : encodeURIComponent(DBProxyName)) + '&NewDBProxyName=' + (NewDBProxyName == null ? '' : encodeURIComponent(NewDBProxyName)) + '&' + Auth?.map(z => `Auth=${z}`).join('&') + '&RequireTLS=' + RequireTLS + '&IdleClientTimeout=' + IdleClientTimeout + '&DebugLogging=' + DebugLogging + '&RoleArn=' + (RoleArn == null ? '' : encodeURIComponent(RoleArn)) + '&' + SecurityGroups?.map(z => `SecurityGroups=${encodeURIComponent(z)}`).join('&') + '&Action=' + Action + '&Version=' + Version, { observe: 'response', responseType: 'text' });
		}

		/**
		 * Changes the settings for an existing DB proxy endpoint.
		 * Get #Action=ModifyDBProxyEndpoint
		 * @param {string} DBProxyEndpointName The name of the DB proxy sociated with the DB proxy endpoint that you want to modify.
		 * @param {string} NewDBProxyEndpointName The new identifier for the <code>DBProxyEndpoint</code>. An identifier must begin with a letter and must contain only ASCII letters, digits, and hyphens; it can't end with a hyphen or contain two consecutive hyphens.
		 * @param {Array<string>} VpcSecurityGroupIds The VPC security group IDs for the DB proxy endpoint. When the DB proxy endpoint uses a different VPC than the original proxy, you also specify a different set of security group IDs than for the original proxy.
		 * @return {void} Success
		 */
		GET_ModifyDBProxyEndpoint(DBProxyEndpointName: string, NewDBProxyEndpointName: string | null | undefined, VpcSecurityGroupIds: Array<string> | null | undefined, Action: GET_ModifyDBProxyEndpointAction, Version: GET_AddRoleToDBClusterVersion): Observable<HttpResponse<string>> {
			return this.http.get(this.baseUri + '#Action=ModifyDBProxyEndpoint?DBProxyEndpointName=' + (DBProxyEndpointName == null ? '' : encodeURIComponent(DBProxyEndpointName)) + '&NewDBProxyEndpointName=' + (NewDBProxyEndpointName == null ? '' : encodeURIComponent(NewDBProxyEndpointName)) + '&' + VpcSecurityGroupIds?.map(z => `VpcSecurityGroupIds=${encodeURIComponent(z)}`).join('&') + '&Action=' + Action + '&Version=' + Version, { observe: 'response', responseType: 'text' });
		}

		/**
		 * Modifies the properties of a <code>DBProxyTargetGroup</code>.
		 * Get #Action=ModifyDBProxyTargetGroup
		 * @param {string} TargetGroupName The name of the target group to modify.
		 * @param {string} DBProxyName The name of the proxy.
		 * @param {GET_ModifyDBProxyTargetGroupConnectionPoolConfig} ConnectionPoolConfig The settings that determine the size and behavior of the connection pool for the target group.
		 * @param {string} NewName The new name for the modified <code>DBProxyTarget</code>. An identifier must begin with a letter and must contain only ASCII letters, digits, and hyphens; it can't end with a hyphen or contain two consecutive hyphens.
		 * @return {void} Success
		 */
		GET_ModifyDBProxyTargetGroup(TargetGroupName: string, DBProxyName: string, ConnectionPoolConfig: GET_ModifyDBProxyTargetGroupConnectionPoolConfig | null | undefined, NewName: string | null | undefined, Action: GET_ModifyDBProxyTargetGroupAction, Version: GET_AddRoleToDBClusterVersion): Observable<HttpResponse<string>> {
			return this.http.get(this.baseUri + '#Action=ModifyDBProxyTargetGroup?TargetGroupName=' + (TargetGroupName == null ? '' : encodeURIComponent(TargetGroupName)) + '&DBProxyName=' + (DBProxyName == null ? '' : encodeURIComponent(DBProxyName)) + '&ConnectionPoolConfig=' + ConnectionPoolConfig + '&NewName=' + (NewName == null ? '' : encodeURIComponent(NewName)) + '&Action=' + Action + '&Version=' + Version, { observe: 'response', responseType: 'text' });
		}

		/**
		 * <p>Updates a manual DB snapshot with a new engine version. The snapshot can be encrypted or unencrypted, but not shared or public. </p> <p>Amazon RDS supports upgrading DB snapshots for MySQL, PostgreSQL, and Oracle. This command doesn't apply to RDS Custom.</p>
		 * Get #Action=ModifyDBSnapshot
		 * @param {string} DBSnapshotIdentifier The identifier of the DB snapshot to modify.
		 * @param {string} EngineVersion <p>The engine version to upgrade the DB snapshot to.</p> <p>The following are the database engines and engine versions that are available when you upgrade a DB snapshot.</p> <p> <b>MySQL</b> </p> <ul> <li> <p> <code>5.5.46</code> (supported for 5.1 DB snapshots)</p> </li> </ul> <p> <b>Oracle</b> </p> <ul> <li> <p> <code>19.0.0.0.ru-2022-01.rur-2022-01.r1</code> (supported for 12.2.0.1 DB snapshots)</p> </li> <li> <p> <code>19.0.0.0.ru-2022-07.rur-2022-07.r1</code> (supported for 12.1.0.2 DB snapshots)</p> </li> <li> <p> <code>12.1.0.2.v8</code> (supported for 12.1.0.1 DB snapshots)</p> </li> <li> <p> <code>11.2.0.4.v12</code> (supported for 11.2.0.2 DB snapshots)</p> </li> <li> <p> <code>11.2.0.4.v11</code> (supported for 11.2.0.3 DB snapshots)</p> </li> </ul> <p> <b>PostgreSQL</b> </p> <p>For the list of engine versions that are available for upgrading a DB snapshot, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_UpgradeDBInstance.PostgreSQL.html#USER_UpgradeDBInstance.PostgreSQL.MajorVersion"> Upgrading the PostgreSQL DB Engine for Amazon RDS</a>.</p>
		 * @param {string} OptionGroupName <p>The option group to identify with the upgraded DB snapshot.</p> <p>You can specify this parameter when you upgrade an Oracle DB snapshot. The same option group considerations apply when upgrading a DB snapshot as when upgrading a DB instance. For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_UpgradeDBInstance.Oracle.html#USER_UpgradeDBInstance.Oracle.OGPG.OG">Option group considerations</a> in the <i>Amazon RDS User Guide.</i> </p>
		 * @return {void} Success
		 */
		GET_ModifyDBSnapshot(DBSnapshotIdentifier: string, EngineVersion: string | null | undefined, OptionGroupName: string | null | undefined, Action: GET_ModifyDBSnapshotAction, Version: GET_AddRoleToDBClusterVersion): Observable<HttpResponse<string>> {
			return this.http.get(this.baseUri + '#Action=ModifyDBSnapshot?DBSnapshotIdentifier=' + (DBSnapshotIdentifier == null ? '' : encodeURIComponent(DBSnapshotIdentifier)) + '&EngineVersion=' + (EngineVersion == null ? '' : encodeURIComponent(EngineVersion)) + '&OptionGroupName=' + (OptionGroupName == null ? '' : encodeURIComponent(OptionGroupName)) + '&Action=' + Action + '&Version=' + Version, { observe: 'response', responseType: 'text' });
		}

		/**
		 * <p>Adds an attribute and values to, or removes an attribute and values from, a manual DB snapshot.</p> <p>To share a manual DB snapshot with other Amazon Web Services accounts, specify <code>restore</code> as the <code>AttributeName</code> and use the <code>ValuesToAdd</code> parameter to add a list of IDs of the Amazon Web Services accounts that are authorized to restore the manual DB snapshot. Uses the value <code>all</code> to make the manual DB snapshot public, which means it can be copied or restored by all Amazon Web Services accounts.</p> <note> <p>Don't add the <code>all</code> value for any manual DB snapshots that contain private information that you don't want available to all Amazon Web Services accounts.</p> </note> <p>If the manual DB snapshot is encrypted, it can be shared, but only by specifying a list of authorized Amazon Web Services account IDs for the <code>ValuesToAdd</code> parameter. You can't use <code>all</code> as a value for that parameter in this case.</p> <p>To view which Amazon Web Services accounts have access to copy or restore a manual DB snapshot, or whether a manual DB snapshot public or private, use the <a>DescribeDBSnapshotAttributes</a> API operation. The accounts are returned as values for the <code>restore</code> attribute.</p>
		 * Get #Action=ModifyDBSnapshotAttribute
		 * @param {string} DBSnapshotIdentifier The identifier for the DB snapshot to modify the attributes for.
		 * @param {string} AttributeName <p>The name of the DB snapshot attribute to modify.</p> <p>To manage authorization for other Amazon Web Services accounts to copy or restore a manual DB snapshot, set this value to <code>restore</code>.</p> <note> <p>To view the list of attributes available to modify, use the <a>DescribeDBSnapshotAttributes</a> API operation.</p> </note>
		 * @param {Array<string>} ValuesToAdd <p>A list of DB snapshot attributes to add to the attribute specified by <code>AttributeName</code>.</p> <p>To authorize other Amazon Web Services accounts to copy or restore a manual snapshot, set this list to include one or more Amazon Web Services account IDs, or <code>all</code> to make the manual DB snapshot restorable by any Amazon Web Services account. Do not add the <code>all</code> value for any manual DB snapshots that contain private information that you don't want available to all Amazon Web Services accounts.</p>
		 * @param {Array<string>} ValuesToRemove <p>A list of DB snapshot attributes to remove from the attribute specified by <code>AttributeName</code>.</p> <p>To remove authorization for other Amazon Web Services accounts to copy or restore a manual snapshot, set this list to include one or more Amazon Web Services account identifiers, or <code>all</code> to remove authorization for any Amazon Web Services account to copy or restore the DB snapshot. If you specify <code>all</code>, an Amazon Web Services account whose account ID is explicitly added to the <code>restore</code> attribute can still copy or restore the manual DB snapshot.</p>
		 * @return {void} Success
		 */
		GET_ModifyDBSnapshotAttribute(DBSnapshotIdentifier: string, AttributeName: string, ValuesToAdd: Array<string> | null | undefined, ValuesToRemove: Array<string> | null | undefined, Action: GET_ModifyDBSnapshotAttributeAction, Version: GET_AddRoleToDBClusterVersion): Observable<HttpResponse<string>> {
			return this.http.get(this.baseUri + '#Action=ModifyDBSnapshotAttribute?DBSnapshotIdentifier=' + (DBSnapshotIdentifier == null ? '' : encodeURIComponent(DBSnapshotIdentifier)) + '&AttributeName=' + (AttributeName == null ? '' : encodeURIComponent(AttributeName)) + '&' + ValuesToAdd?.map(z => `ValuesToAdd=${encodeURIComponent(z)}`).join('&') + '&' + ValuesToRemove?.map(z => `ValuesToRemove=${encodeURIComponent(z)}`).join('&') + '&Action=' + Action + '&Version=' + Version, { observe: 'response', responseType: 'text' });
		}

		/**
		 * Modifies an existing DB subnet group. DB subnet groups must contain at least one subnet in at least two AZs in the Amazon Web Services Region.
		 * Get #Action=ModifyDBSubnetGroup
		 * @param {string} DBSubnetGroupName <p>The name for the DB subnet group. This value is stored as a lowercase string. You can't modify the default subnet group.</p> <p>Constraints: Must match the name of an existing DBSubnetGroup. Must not be default.</p> <p>Example: <code>mydbsubnetgroup</code> </p>
		 * @param {string} DBSubnetGroupDescription The description for the DB subnet group.
		 * @param {Array<string>} SubnetIds The EC2 subnet IDs for the DB subnet group.
		 * @return {void} Success
		 */
		GET_ModifyDBSubnetGroup(DBSubnetGroupName: string, DBSubnetGroupDescription: string | null | undefined, SubnetIds: Array<string>, Action: GET_ModifyDBSubnetGroupAction, Version: GET_AddRoleToDBClusterVersion): Observable<HttpResponse<string>> {
			return this.http.get(this.baseUri + '#Action=ModifyDBSubnetGroup?DBSubnetGroupName=' + (DBSubnetGroupName == null ? '' : encodeURIComponent(DBSubnetGroupName)) + '&DBSubnetGroupDescription=' + (DBSubnetGroupDescription == null ? '' : encodeURIComponent(DBSubnetGroupDescription)) + '&' + SubnetIds.map(z => `SubnetIds=${encodeURIComponent(z)}`).join('&') + '&Action=' + Action + '&Version=' + Version, { observe: 'response', responseType: 'text' });
		}

		/**
		 * <p>Modifies an existing RDS event notification subscription. You can't modify the source identifiers using this call. To change source identifiers for a subscription, use the <code>AddSourceIdentifierToSubscription</code> and <code>RemoveSourceIdentifierFromSubscription</code> calls.</p> <p>You can see a list of the event categories for a given source type (<code>SourceType</code>) in <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Events.html">Events</a> in the <i>Amazon RDS User Guide</i> or by using the <code>DescribeEventCategories</code> operation.</p>
		 * Get #Action=ModifyEventSubscription
		 * @param {string} SubscriptionName The name of the RDS event notification subscription.
		 * @param {string} SnsTopicArn The Amazon Resource Name (ARN) of the SNS topic created for event notification. The ARN is created by Amazon SNS when you create a topic and subscribe to it.
		 * @param {string} SourceType <p>The type of source that is generating the events. For example, if you want to be notified of events generated by a DB instance, you would set this parameter to db-instance. For RDS Proxy events, specify <code>db-proxy</code>. If this value isn't specified, all events are returned.</p> <p>Valid values: <code>db-instance</code> | <code>db-cluster</code> | <code>db-parameter-group</code> | <code>db-security-group</code> | <code>db-snapshot</code> | <code>db-cluster-snapshot</code> | <code>db-proxy</code> </p>
		 * @param {Array<string>} EventCategories A list of event categories for a source type (<code>SourceType</code>) that you want to subscribe to. You can see a list of the categories for a given source type in <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Events.html">Events</a> in the <i>Amazon RDS User Guide</i> or by using the <code>DescribeEventCategories</code> operation.
		 * @param {boolean} Enabled A value that indicates whether to activate the subscription.
		 * @return {void} Success
		 */
		GET_ModifyEventSubscription(SubscriptionName: string, SnsTopicArn: string | null | undefined, SourceType: string | null | undefined, EventCategories: Array<string> | null | undefined, Enabled: boolean | null | undefined, Action: GET_ModifyEventSubscriptionAction, Version: GET_AddRoleToDBClusterVersion): Observable<HttpResponse<string>> {
			return this.http.get(this.baseUri + '#Action=ModifyEventSubscription?SubscriptionName=' + (SubscriptionName == null ? '' : encodeURIComponent(SubscriptionName)) + '&SnsTopicArn=' + (SnsTopicArn == null ? '' : encodeURIComponent(SnsTopicArn)) + '&SourceType=' + (SourceType == null ? '' : encodeURIComponent(SourceType)) + '&' + EventCategories?.map(z => `EventCategories=${encodeURIComponent(z)}`).join('&') + '&Enabled=' + Enabled + '&Action=' + Action + '&Version=' + Version, { observe: 'response', responseType: 'text' });
		}

		/**
		 * <p>Modifies a setting for an Amazon Aurora global cluster. You can change one or more database configuration parameters by specifying these parameters and the new values in the request. For more information on Amazon Aurora, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/CHAP_AuroraOverview.html"> What is Amazon Aurora?</a> in the <i>Amazon Aurora User Guide</i>.</p> <note> <p>This operation only applies to Aurora global database clusters.</p> </note>
		 * Get #Action=ModifyGlobalCluster
		 * @param {string} GlobalClusterIdentifier <p>The cluster identifier for the global cluster to modify. This parameter isn't case-sensitive.</p> <p>Constraints:</p> <ul> <li> <p>Must match the identifier of an existing global database cluster.</p> </li> </ul>
		 * @param {string} NewGlobalClusterIdentifier <p>The new cluster identifier for the global database cluster. This value is stored as a lowercase string.</p> <p>Constraints:</p> <ul> <li> <p>Must contain from 1 to 63 letters, numbers, or hyphens.</p> </li> <li> <p>The first character must be a letter.</p> </li> <li> <p>Can't end with a hyphen or contain two consecutive hyphens.</p> </li> </ul> <p>Example: <code>my-cluster2</code> </p>
		 * @param {boolean} DeletionProtection Specifies whether to enable deletion protection for the global database cluster. The global database cluster can't be deleted when deletion protection is enabled.
		 * @param {string} EngineVersion <p>The version number of the database engine to which you want to upgrade. </p> <p>To list all of the available engine versions for <code>aurora-mysql</code> (for MySQL-based Aurora global databases), use the following command:</p> <p> <code>aws rds describe-db-engine-versions --engine aurora-mysql --query '*[]|[?SupportsGlobalDatabases == `true`].[EngineVersion]'</code> </p> <p>To list all of the available engine versions for <code>aurora-postgresql</code> (for PostgreSQL-based Aurora global databases), use the following command:</p> <p> <code>aws rds describe-db-engine-versions --engine aurora-postgresql --query '*[]|[?SupportsGlobalDatabases == `true`].[EngineVersion]'</code> </p>
		 * @param {boolean} AllowMajorVersionUpgrade <p>Specifies whether to allow major version upgrades.</p> <p>Constraints: Must be enabled if you specify a value for the <code>EngineVersion</code> parameter that's a different major version than the global cluster's current version.</p> <p>If you upgrade the major version of a global database, the cluster and DB instance parameter groups are set to the default parameter groups for the new version. Apply any custom parameter groups after completing the upgrade.</p>
		 * @return {void} Success
		 */
		GET_ModifyGlobalCluster(GlobalClusterIdentifier: string | null | undefined, NewGlobalClusterIdentifier: string | null | undefined, DeletionProtection: boolean | null | undefined, EngineVersion: string | null | undefined, AllowMajorVersionUpgrade: boolean | null | undefined, Action: GET_ModifyGlobalClusterAction, Version: GET_AddRoleToDBClusterVersion): Observable<HttpResponse<string>> {
			return this.http.get(this.baseUri + '#Action=ModifyGlobalCluster?GlobalClusterIdentifier=' + (GlobalClusterIdentifier == null ? '' : encodeURIComponent(GlobalClusterIdentifier)) + '&NewGlobalClusterIdentifier=' + (NewGlobalClusterIdentifier == null ? '' : encodeURIComponent(NewGlobalClusterIdentifier)) + '&DeletionProtection=' + DeletionProtection + '&EngineVersion=' + (EngineVersion == null ? '' : encodeURIComponent(EngineVersion)) + '&AllowMajorVersionUpgrade=' + AllowMajorVersionUpgrade + '&Action=' + Action + '&Version=' + Version, { observe: 'response', responseType: 'text' });
		}

		/**
		 * Modifies an existing option group.
		 * Get #Action=ModifyOptionGroup
		 * @param {string} OptionGroupName <p>The name of the option group to be modified.</p> <p>Permanent options, such as the TDE option for Oracle Advanced Security TDE, can't be removed from an option group, and that option group can't be removed from a DB instance once it is associated with a DB instance</p>
		 * @param {Array<string>} OptionsToInclude Options in this list are added to the option group or, if already present, the specified configuration is used to update the existing configuration.
		 * @param {Array<string>} OptionsToRemove Options in this list are removed from the option group.
		 * @param {boolean} ApplyImmediately A value that indicates whether to apply the change immediately or during the next maintenance window for each instance associated with the option group.
		 * @return {void} Success
		 */
		GET_ModifyOptionGroup(OptionGroupName: string, OptionsToInclude: Array<string> | null | undefined, OptionsToRemove: Array<string> | null | undefined, ApplyImmediately: boolean | null | undefined, Action: GET_ModifyOptionGroupAction, Version: GET_AddRoleToDBClusterVersion): Observable<HttpResponse<string>> {
			return this.http.get(this.baseUri + '#Action=ModifyOptionGroup?OptionGroupName=' + (OptionGroupName == null ? '' : encodeURIComponent(OptionGroupName)) + '&' + OptionsToInclude?.map(z => `OptionsToInclude=${encodeURIComponent(z)}`).join('&') + '&' + OptionsToRemove?.map(z => `OptionsToRemove=${encodeURIComponent(z)}`).join('&') + '&ApplyImmediately=' + ApplyImmediately + '&Action=' + Action + '&Version=' + Version, { observe: 'response', responseType: 'text' });
		}

		/**
		 * <p>Promotes a read replica DB instance to a standalone DB instance.</p> <note> <ul> <li> <p>Backup duration is a function of the amount of changes to the database since the previous backup. If you plan to promote a read replica to a standalone instance, we recommend that you enable backups and complete at least one backup prior to promotion. In addition, a read replica cannot be promoted to a standalone instance when it is in the <code>backing-up</code> status. If you have enabled backups on your read replica, configure the automated backup window so that daily backups do not interfere with read replica promotion.</p> </li> <li> <p>This command doesn't apply to Aurora MySQL, Aurora PostgreSQL, or RDS Custom.</p> </li> </ul> </note>
		 * Get #Action=PromoteReadReplica
		 * @param {string} DBInstanceIdentifier <p>The DB instance identifier. This value is stored as a lowercase string.</p> <p>Constraints:</p> <ul> <li> <p>Must match the identifier of an existing read replica DB instance.</p> </li> </ul> <p>Example: <code>mydbinstance</code> </p>
		 * @param {number} BackupRetentionPeriod <p>The number of days for which automated backups are retained. Setting this parameter to a positive number enables backups. Setting this parameter to 0 disables automated backups.</p> <p>Default: 1</p> <p>Constraints:</p> <ul> <li> <p>Must be a value from 0 to 35.</p> </li> <li> <p>Can't be set to 0 if the DB instance is a source to read replicas.</p> </li> </ul>
		 * @param {string} PreferredBackupWindow <p>The daily time range during which automated backups are created if automated backups are enabled, using the <code>BackupRetentionPeriod</code> parameter.</p> <p>The default is a 30-minute window selected at random from an 8-hour block of time for each Amazon Web Services Region. To see the time blocks available, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/AdjustingTheMaintenanceWindow.html"> Adjusting the Preferred Maintenance Window</a> in the <i>Amazon RDS User Guide.</i> </p> <p>Constraints:</p> <ul> <li> <p>Must be in the format <code>hh24:mi-hh24:mi</code>.</p> </li> <li> <p>Must be in Universal Coordinated Time (UTC).</p> </li> <li> <p>Must not conflict with the preferred maintenance window.</p> </li> <li> <p>Must be at least 30 minutes.</p> </li> </ul>
		 * @return {void} Success
		 */
		GET_PromoteReadReplica(DBInstanceIdentifier: string, BackupRetentionPeriod: number | null | undefined, PreferredBackupWindow: string | null | undefined, Action: GET_PromoteReadReplicaAction, Version: GET_AddRoleToDBClusterVersion): Observable<HttpResponse<string>> {
			return this.http.get(this.baseUri + '#Action=PromoteReadReplica?DBInstanceIdentifier=' + (DBInstanceIdentifier == null ? '' : encodeURIComponent(DBInstanceIdentifier)) + '&BackupRetentionPeriod=' + BackupRetentionPeriod + '&PreferredBackupWindow=' + (PreferredBackupWindow == null ? '' : encodeURIComponent(PreferredBackupWindow)) + '&Action=' + Action + '&Version=' + Version, { observe: 'response', responseType: 'text' });
		}

		/**
		 * Promotes a read replica DB cluster to a standalone DB cluster.
		 * Get #Action=PromoteReadReplicaDBCluster
		 * @param {string} DBClusterIdentifier <p>The identifier of the DB cluster read replica to promote. This parameter isn't case-sensitive.</p> <p>Constraints:</p> <ul> <li> <p>Must match the identifier of an existing DB cluster read replica.</p> </li> </ul> <p>Example: <code>my-cluster-replica1</code> </p>
		 * @return {void} Success
		 */
		GET_PromoteReadReplicaDBCluster(DBClusterIdentifier: string, Action: GET_PromoteReadReplicaDBClusterAction, Version: GET_AddRoleToDBClusterVersion): Observable<HttpResponse<string>> {
			return this.http.get(this.baseUri + '#Action=PromoteReadReplicaDBCluster?DBClusterIdentifier=' + (DBClusterIdentifier == null ? '' : encodeURIComponent(DBClusterIdentifier)) + '&Action=' + Action + '&Version=' + Version, { observe: 'response', responseType: 'text' });
		}

		/**
		 * Purchases a reserved DB instance offering.
		 * Get #Action=PurchaseReservedDBInstancesOffering
		 * @param {string} ReservedDBInstancesOfferingId <p>The ID of the Reserved DB instance offering to purchase.</p> <p>Example: 438012d3-4052-4cc7-b2e3-8d3372e0e706</p>
		 * @param {string} ReservedDBInstanceId <p>Customer-specified identifier to track this reservation.</p> <p>Example: myreservationID</p>
		 * @param {number} DBInstanceCount <p>The number of instances to reserve.</p> <p>Default: <code>1</code> </p>
		 * @return {void} Success
		 */
		GET_PurchaseReservedDBInstancesOffering(ReservedDBInstancesOfferingId: string, ReservedDBInstanceId: string | null | undefined, DBInstanceCount: number | null | undefined, Tags: Array<string> | null | undefined, Action: GET_PurchaseReservedDBInstancesOfferingAction, Version: GET_AddRoleToDBClusterVersion): Observable<HttpResponse<string>> {
			return this.http.get(this.baseUri + '#Action=PurchaseReservedDBInstancesOffering?ReservedDBInstancesOfferingId=' + (ReservedDBInstancesOfferingId == null ? '' : encodeURIComponent(ReservedDBInstancesOfferingId)) + '&ReservedDBInstanceId=' + (ReservedDBInstanceId == null ? '' : encodeURIComponent(ReservedDBInstanceId)) + '&DBInstanceCount=' + DBInstanceCount + '&' + Tags?.map(z => `Tags=${encodeURIComponent(z)}`).join('&') + '&Action=' + Action + '&Version=' + Version, { observe: 'response', responseType: 'text' });
		}

		/**
		 * <p>You might need to reboot your DB cluster, usually for maintenance reasons. For example, if you make certain modifications, or if you change the DB cluster parameter group associated with the DB cluster, reboot the DB cluster for the changes to take effect.</p> <p>Rebooting a DB cluster restarts the database engine service. Rebooting a DB cluster results in a momentary outage, during which the DB cluster status is set to rebooting.</p> <p>Use this operation only for a non-Aurora Multi-AZ DB cluster.</p> <p>For more information on Multi-AZ DB clusters, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/multi-az-db-clusters-concepts.html"> Multi-AZ DB cluster deployments</a> in the <i>Amazon RDS User Guide.</i> </p>
		 * Get #Action=RebootDBCluster
		 * @param {string} DBClusterIdentifier <p>The DB cluster identifier. This parameter is stored as a lowercase string.</p> <p>Constraints:</p> <ul> <li> <p>Must match the identifier of an existing DBCluster.</p> </li> </ul>
		 * @return {void} Success
		 */
		GET_RebootDBCluster(DBClusterIdentifier: string, Action: GET_RebootDBClusterAction, Version: GET_AddRoleToDBClusterVersion): Observable<HttpResponse<string>> {
			return this.http.get(this.baseUri + '#Action=RebootDBCluster?DBClusterIdentifier=' + (DBClusterIdentifier == null ? '' : encodeURIComponent(DBClusterIdentifier)) + '&Action=' + Action + '&Version=' + Version, { observe: 'response', responseType: 'text' });
		}

		/**
		 * <p>You might need to reboot your DB instance, usually for maintenance reasons. For example, if you make certain modifications, or if you change the DB parameter group associated with the DB instance, you must reboot the instance for the changes to take effect.</p> <p>Rebooting a DB instance restarts the database engine service. Rebooting a DB instance results in a momentary outage, during which the DB instance status is set to rebooting.</p> <p>For more information about rebooting, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_RebootInstance.html">Rebooting a DB Instance</a> in the <i>Amazon RDS User Guide.</i> </p> <p>This command doesn't apply to RDS Custom.</p> <p>If your DB instance is part of a Multi-AZ DB cluster, you can reboot the DB cluster with the <code>RebootDBCluster</code> operation.</p>
		 * Get #Action=RebootDBInstance
		 * @param {string} DBInstanceIdentifier <p>The DB instance identifier. This parameter is stored as a lowercase string.</p> <p>Constraints:</p> <ul> <li> <p>Must match the identifier of an existing DBInstance.</p> </li> </ul>
		 * @param {boolean} ForceFailover <p>A value that indicates whether the reboot is conducted through a Multi-AZ failover.</p> <p>Constraint: You can't enable force failover if the instance isn't configured for Multi-AZ.</p>
		 * @return {void} Success
		 */
		GET_RebootDBInstance(DBInstanceIdentifier: string, ForceFailover: boolean | null | undefined, Action: GET_RebootDBInstanceAction, Version: GET_AddRoleToDBClusterVersion): Observable<HttpResponse<string>> {
			return this.http.get(this.baseUri + '#Action=RebootDBInstance?DBInstanceIdentifier=' + (DBInstanceIdentifier == null ? '' : encodeURIComponent(DBInstanceIdentifier)) + '&ForceFailover=' + ForceFailover + '&Action=' + Action + '&Version=' + Version, { observe: 'response', responseType: 'text' });
		}

		/**
		 * Associate one or more <code>DBProxyTarget</code> data structures with a <code>DBProxyTargetGroup</code>.
		 * Get #Action=RegisterDBProxyTargets
		 * @param {string} DBProxyName The identifier of the <code>DBProxy</code> that is associated with the <code>DBProxyTargetGroup</code>.
		 * @param {string} TargetGroupName The identifier of the <code>DBProxyTargetGroup</code>.
		 * @param {Array<string>} DBInstanceIdentifiers One or more DB instance identifiers.
		 * @param {Array<string>} DBClusterIdentifiers One or more DB cluster identifiers.
		 * @return {void} Success
		 */
		GET_RegisterDBProxyTargets(DBProxyName: string, TargetGroupName: string | null | undefined, DBInstanceIdentifiers: Array<string> | null | undefined, DBClusterIdentifiers: Array<string> | null | undefined, Action: GET_RegisterDBProxyTargetsAction, Version: GET_AddRoleToDBClusterVersion): Observable<HttpResponse<string>> {
			return this.http.get(this.baseUri + '#Action=RegisterDBProxyTargets?DBProxyName=' + (DBProxyName == null ? '' : encodeURIComponent(DBProxyName)) + '&TargetGroupName=' + (TargetGroupName == null ? '' : encodeURIComponent(TargetGroupName)) + '&' + DBInstanceIdentifiers?.map(z => `DBInstanceIdentifiers=${encodeURIComponent(z)}`).join('&') + '&' + DBClusterIdentifiers?.map(z => `DBClusterIdentifiers=${encodeURIComponent(z)}`).join('&') + '&Action=' + Action + '&Version=' + Version, { observe: 'response', responseType: 'text' });
		}

		/**
		 * <p>Detaches an Aurora secondary cluster from an Aurora global database cluster. The cluster becomes a standalone cluster with read-write capability instead of being read-only and receiving data from a primary cluster in a different Region.</p> <note> <p>This action only applies to Aurora DB clusters.</p> </note>
		 * Get #Action=RemoveFromGlobalCluster
		 * @param {string} GlobalClusterIdentifier The cluster identifier to detach from the Aurora global database cluster.
		 * @param {string} DbClusterIdentifier The Amazon Resource Name (ARN) identifying the cluster that was detached from the Aurora global database cluster.
		 * @return {void} Success
		 */
		GET_RemoveFromGlobalCluster(GlobalClusterIdentifier: string | null | undefined, DbClusterIdentifier: string | null | undefined, Action: GET_RemoveFromGlobalClusterAction, Version: GET_AddRoleToDBClusterVersion): Observable<HttpResponse<string>> {
			return this.http.get(this.baseUri + '#Action=RemoveFromGlobalCluster?GlobalClusterIdentifier=' + (GlobalClusterIdentifier == null ? '' : encodeURIComponent(GlobalClusterIdentifier)) + '&DbClusterIdentifier=' + (DbClusterIdentifier == null ? '' : encodeURIComponent(DbClusterIdentifier)) + '&Action=' + Action + '&Version=' + Version, { observe: 'response', responseType: 'text' });
		}

		/**
		 * <p>Removes the asssociation of an Amazon Web Services Identity and Access Management (IAM) role from a DB cluster.</p> <p>For more information on Amazon Aurora DB clusters, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/CHAP_AuroraOverview.html"> What is Amazon Aurora?</a> in the <i>Amazon Aurora User Guide</i>.</p> <p>For more information on Multi-AZ DB clusters, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/multi-az-db-clusters-concepts.html"> Multi-AZ DB cluster deployments</a> in the <i>Amazon RDS User Guide.</i> </p>
		 * Get #Action=RemoveRoleFromDBCluster
		 * @param {string} DBClusterIdentifier The name of the DB cluster to disassociate the IAM role from.
		 * @param {string} RoleArn The Amazon Resource Name (ARN) of the IAM role to disassociate from the Aurora DB cluster, for example <code>arn:aws:iam::123456789012:role/AuroraAccessRole</code>.
		 * @param {string} FeatureName The name of the feature for the DB cluster that the IAM role is to be disassociated from. For information about supported feature names, see <a>DBEngineVersion</a>.
		 * @return {void} Success
		 */
		GET_RemoveRoleFromDBCluster(DBClusterIdentifier: string, RoleArn: string, FeatureName: string | null | undefined, Action: GET_RemoveRoleFromDBClusterAction, Version: GET_AddRoleToDBClusterVersion): Observable<HttpResponse<string>> {
			return this.http.get(this.baseUri + '#Action=RemoveRoleFromDBCluster?DBClusterIdentifier=' + (DBClusterIdentifier == null ? '' : encodeURIComponent(DBClusterIdentifier)) + '&RoleArn=' + (RoleArn == null ? '' : encodeURIComponent(RoleArn)) + '&FeatureName=' + (FeatureName == null ? '' : encodeURIComponent(FeatureName)) + '&Action=' + Action + '&Version=' + Version, { observe: 'response', responseType: 'text' });
		}

		/**
		 * Disassociates an Amazon Web Services Identity and Access Management (IAM) role from a DB instance.
		 * Get #Action=RemoveRoleFromDBInstance
		 * @param {string} DBInstanceIdentifier The name of the DB instance to disassociate the IAM role from.
		 * @param {string} RoleArn The Amazon Resource Name (ARN) of the IAM role to disassociate from the DB instance, for example, <code>arn:aws:iam::123456789012:role/AccessRole</code>.
		 * @param {string} FeatureName The name of the feature for the DB instance that the IAM role is to be disassociated from. For information about supported feature names, see <code>DBEngineVersion</code>.
		 * @return {void} Success
		 */
		GET_RemoveRoleFromDBInstance(DBInstanceIdentifier: string, RoleArn: string, FeatureName: string, Action: GET_RemoveRoleFromDBInstanceAction, Version: GET_AddRoleToDBClusterVersion): Observable<HttpResponse<string>> {
			return this.http.get(this.baseUri + '#Action=RemoveRoleFromDBInstance?DBInstanceIdentifier=' + (DBInstanceIdentifier == null ? '' : encodeURIComponent(DBInstanceIdentifier)) + '&RoleArn=' + (RoleArn == null ? '' : encodeURIComponent(RoleArn)) + '&FeatureName=' + (FeatureName == null ? '' : encodeURIComponent(FeatureName)) + '&Action=' + Action + '&Version=' + Version, { observe: 'response', responseType: 'text' });
		}

		/**
		 * Removes a source identifier from an existing RDS event notification subscription.
		 * Get #Action=RemoveSourceIdentifierFromSubscription
		 * @param {string} SubscriptionName The name of the RDS event notification subscription you want to remove a source identifier from.
		 * @param {string} SourceIdentifier The source identifier to be removed from the subscription, such as the <b>DB instance identifier</b> for a DB instance or the name of a security group.
		 * @return {void} Success
		 */
		GET_RemoveSourceIdentifierFromSubscription(SubscriptionName: string, SourceIdentifier: string, Action: GET_RemoveSourceIdentifierFromSubscriptionAction, Version: GET_AddRoleToDBClusterVersion): Observable<HttpResponse<string>> {
			return this.http.get(this.baseUri + '#Action=RemoveSourceIdentifierFromSubscription?SubscriptionName=' + (SubscriptionName == null ? '' : encodeURIComponent(SubscriptionName)) + '&SourceIdentifier=' + (SourceIdentifier == null ? '' : encodeURIComponent(SourceIdentifier)) + '&Action=' + Action + '&Version=' + Version, { observe: 'response', responseType: 'text' });
		}

		/**
		 * <p>Removes metadata tags from an Amazon RDS resource.</p> <p>For an overview on tagging an Amazon RDS resource, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Overview.Tagging.html">Tagging Amazon RDS Resources</a> in the <i>Amazon RDS User Guide.</i> </p>
		 * Get #Action=RemoveTagsFromResource
		 * @param {string} ResourceName The Amazon RDS resource that the tags are removed from. This value is an Amazon Resource Name (ARN). For information about creating an ARN, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Tagging.ARN.html#USER_Tagging.ARN.Constructing"> Constructing an ARN for Amazon RDS</a> in the <i>Amazon RDS User Guide.</i> 
		 * @param {Array<string>} TagKeys The tag key (name) of the tag to be removed.
		 * @return {void} Success
		 */
		GET_RemoveTagsFromResource(ResourceName: string, TagKeys: Array<string>, Action: GET_RemoveTagsFromResourceAction, Version: GET_AddRoleToDBClusterVersion): Observable<HttpResponse<string>> {
			return this.http.get(this.baseUri + '#Action=RemoveTagsFromResource?ResourceName=' + (ResourceName == null ? '' : encodeURIComponent(ResourceName)) + '&' + TagKeys.map(z => `TagKeys=${encodeURIComponent(z)}`).join('&') + '&Action=' + Action + '&Version=' + Version, { observe: 'response', responseType: 'text' });
		}

		/**
		 * <p>Modifies the parameters of a DB cluster parameter group to the default value. To reset specific parameters submit a list of the following: <code>ParameterName</code> and <code>ApplyMethod</code>. To reset the entire DB cluster parameter group, specify the <code>DBClusterParameterGroupName</code> and <code>ResetAllParameters</code> parameters.</p> <p>When resetting the entire group, dynamic parameters are updated immediately and static parameters are set to <code>pending-reboot</code> to take effect on the next DB instance restart or <code>RebootDBInstance</code> request. You must call <code>RebootDBInstance</code> for every DB instance in your DB cluster that you want the updated static parameter to apply to.</p> <p>For more information on Amazon Aurora DB clusters, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/CHAP_AuroraOverview.html"> What is Amazon Aurora?</a> in the <i>Amazon Aurora User Guide</i>.</p> <p>For more information on Multi-AZ DB clusters, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/multi-az-db-clusters-concepts.html"> Multi-AZ DB cluster deployments</a> in the <i>Amazon RDS User Guide.</i> </p>
		 * Get #Action=ResetDBClusterParameterGroup
		 * @param {string} DBClusterParameterGroupName The name of the DB cluster parameter group to reset.
		 * @param {boolean} ResetAllParameters A value that indicates whether to reset all parameters in the DB cluster parameter group to their default values. You can't use this parameter if there is a list of parameter names specified for the <code>Parameters</code> parameter.
		 * @param {Array<string>} Parameters A list of parameter names in the DB cluster parameter group to reset to the default values. You can't use this parameter if the <code>ResetAllParameters</code> parameter is enabled.
		 * @return {void} Success
		 */
		GET_ResetDBClusterParameterGroup(DBClusterParameterGroupName: string, ResetAllParameters: boolean | null | undefined, Parameters: Array<string> | null | undefined, Action: GET_ResetDBClusterParameterGroupAction, Version: GET_AddRoleToDBClusterVersion): Observable<HttpResponse<string>> {
			return this.http.get(this.baseUri + '#Action=ResetDBClusterParameterGroup?DBClusterParameterGroupName=' + (DBClusterParameterGroupName == null ? '' : encodeURIComponent(DBClusterParameterGroupName)) + '&ResetAllParameters=' + ResetAllParameters + '&' + Parameters?.map(z => `Parameters=${encodeURIComponent(z)}`).join('&') + '&Action=' + Action + '&Version=' + Version, { observe: 'response', responseType: 'text' });
		}

		/**
		 * Modifies the parameters of a DB parameter group to the engine/system default value. To reset specific parameters, provide a list of the following: <code>ParameterName</code> and <code>ApplyMethod</code>. To reset the entire DB parameter group, specify the <code>DBParameterGroup</code> name and <code>ResetAllParameters</code> parameters. When resetting the entire group, dynamic parameters are updated immediately and static parameters are set to <code>pending-reboot</code> to take effect on the next DB instance restart or <code>RebootDBInstance</code> request.
		 * Get #Action=ResetDBParameterGroup
		 * @param {string} DBParameterGroupName <p>The name of the DB parameter group.</p> <p>Constraints:</p> <ul> <li> <p>Must match the name of an existing <code>DBParameterGroup</code>.</p> </li> </ul>
		 * @param {boolean} ResetAllParameters A value that indicates whether to reset all parameters in the DB parameter group to default values. By default, all parameters in the DB parameter group are reset to default values.
		 * @param {Array<string>} Parameters <p>To reset the entire DB parameter group, specify the <code>DBParameterGroup</code> name and <code>ResetAllParameters</code> parameters. To reset specific parameters, provide a list of the following: <code>ParameterName</code> and <code>ApplyMethod</code>. A maximum of 20 parameters can be modified in a single request.</p> <p> <b>MySQL</b> </p> <p>Valid Values (for Apply method): <code>immediate</code> | <code>pending-reboot</code> </p> <p>You can use the immediate value with dynamic parameters only. You can use the <code>pending-reboot</code> value for both dynamic and static parameters, and changes are applied when DB instance reboots.</p> <p> <b>MariaDB</b> </p> <p>Valid Values (for Apply method): <code>immediate</code> | <code>pending-reboot</code> </p> <p>You can use the immediate value with dynamic parameters only. You can use the <code>pending-reboot</code> value for both dynamic and static parameters, and changes are applied when DB instance reboots.</p> <p> <b>Oracle</b> </p> <p>Valid Values (for Apply method): <code>pending-reboot</code> </p>
		 * @return {void} Success
		 */
		GET_ResetDBParameterGroup(DBParameterGroupName: string, ResetAllParameters: boolean | null | undefined, Parameters: Array<string> | null | undefined, Action: GET_ResetDBParameterGroupAction, Version: GET_AddRoleToDBClusterVersion): Observable<HttpResponse<string>> {
			return this.http.get(this.baseUri + '#Action=ResetDBParameterGroup?DBParameterGroupName=' + (DBParameterGroupName == null ? '' : encodeURIComponent(DBParameterGroupName)) + '&ResetAllParameters=' + ResetAllParameters + '&' + Parameters?.map(z => `Parameters=${encodeURIComponent(z)}`).join('&') + '&Action=' + Action + '&Version=' + Version, { observe: 'response', responseType: 'text' });
		}

		/**
		 * <p>Creates an Amazon Aurora DB cluster from MySQL data stored in an Amazon S3 bucket. Amazon RDS must be authorized to access the Amazon S3 bucket and the data must be created using the Percona XtraBackup utility as described in <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/AuroraMySQL.Migrating.ExtMySQL.html#AuroraMySQL.Migrating.ExtMySQL.S3"> Migrating Data from MySQL by Using an Amazon S3 Bucket</a> in the <i>Amazon Aurora User Guide</i>.</p> <note> <p>This action only restores the DB cluster, not the DB instances for that DB cluster. You must invoke the <code>CreateDBInstance</code> action to create DB instances for the restored DB cluster, specifying the identifier of the restored DB cluster in <code>DBClusterIdentifier</code>. You can create DB instances only after the <code>RestoreDBClusterFromS3</code> action has completed and the DB cluster is available.</p> </note> <p>For more information on Amazon Aurora, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/CHAP_AuroraOverview.html"> What is Amazon Aurora?</a> in the <i>Amazon Aurora User Guide</i>.</p> <note> <p>This action only applies to Aurora DB clusters. The source DB engine must be MySQL.</p> </note>
		 * Get #Action=RestoreDBClusterFromS3
		 * @param {Array<string>} AvailabilityZones A list of Availability Zones (AZs) where instances in the restored DB cluster can be created.
		 * @param {number} BackupRetentionPeriod <p>The number of days for which automated backups of the restored DB cluster are retained. You must specify a minimum value of 1.</p> <p>Default: 1</p> <p>Constraints:</p> <ul> <li> <p>Must be a value from 1 to 35</p> </li> </ul>
		 * @param {string} CharacterSetName A value that indicates that the restored DB cluster should be associated with the specified CharacterSet.
		 * @param {string} DatabaseName The database name for the restored DB cluster.
		 * @param {string} DBClusterIdentifier <p>The name of the DB cluster to create from the source data in the Amazon S3 bucket. This parameter isn't case-sensitive.</p> <p>Constraints:</p> <ul> <li> <p>Must contain from 1 to 63 letters, numbers, or hyphens.</p> </li> <li> <p>First character must be a letter.</p> </li> <li> <p>Can't end with a hyphen or contain two consecutive hyphens.</p> </li> </ul> <p>Example: <code>my-cluster1</code> </p>
		 * @param {string} DBClusterParameterGroupName <p>The name of the DB cluster parameter group to associate with the restored DB cluster. If this argument is omitted, the default parameter group for the engine version is used.</p> <p>Constraints:</p> <ul> <li> <p>If supplied, must match the name of an existing DBClusterParameterGroup.</p> </li> </ul>
		 * @param {Array<string>} VpcSecurityGroupIds A list of EC2 VPC security groups to associate with the restored DB cluster.
		 * @param {string} DBSubnetGroupName <p>A DB subnet group to associate with the restored DB cluster.</p> <p>Constraints: If supplied, must match the name of an existing DBSubnetGroup.</p> <p>Example: <code>mydbsubnetgroup</code> </p>
		 * @param {string} Engine <p>The name of the database engine to be used for this DB cluster.</p> <p>Valid Values: <code>aurora-mysql</code> (for Aurora MySQL)</p>
		 * @param {string} EngineVersion <p>The version number of the database engine to use.</p> <p>To list all of the available engine versions for <code>aurora-mysql</code> (Aurora MySQL), use the following command:</p> <p> <code>aws rds describe-db-engine-versions --engine aurora-mysql --query "DBEngineVersions[].EngineVersion"</code> </p> <p> <b>Aurora MySQL</b> </p> <p>Examples: <code>5.7.mysql_aurora.2.07.1</code>, <code>8.0.mysql_aurora.3.02.0</code> </p>
		 * @param {number} Port <p>The port number on which the instances in the restored DB cluster accept connections.</p> <p>Default: <code>3306</code> </p>
		 * @param {string} MasterUsername <p>The name of the master user for the restored DB cluster.</p> <p>Constraints:</p> <ul> <li> <p>Must be 1 to 16 letters or numbers.</p> </li> <li> <p>First character must be a letter.</p> </li> <li> <p>Can't be a reserved word for the chosen database engine.</p> </li> </ul>
		 * @param {string} MasterUserPassword <p>The password for the master database user. This password can contain any printable ASCII character except "/", """, or "@".</p> <p>Constraints:</p> <ul> <li> <p>Must contain from 8 to 41 characters.</p> </li> <li> <p>Can't be specified if <code>ManageMasterUserPassword</code> is turned on.</p> </li> </ul>
		 * @param {string} OptionGroupName <p>A value that indicates that the restored DB cluster should be associated with the specified option group.</p> <p>Permanent options can't be removed from an option group. An option group can't be removed from a DB cluster once it is associated with a DB cluster.</p>
		 * @param {string} PreferredBackupWindow <p>The daily time range during which automated backups are created if automated backups are enabled using the <code>BackupRetentionPeriod</code> parameter.</p> <p>The default is a 30-minute window selected at random from an 8-hour block of time for each Amazon Web Services Region. To view the time blocks available, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/Aurora.Managing.Backups.html#Aurora.Managing.Backups.BackupWindow"> Backup window</a> in the <i>Amazon Aurora User Guide</i>.</p> <p>Constraints:</p> <ul> <li> <p>Must be in the format <code>hh24:mi-hh24:mi</code>.</p> </li> <li> <p>Must be in Universal Coordinated Time (UTC).</p> </li> <li> <p>Must not conflict with the preferred maintenance window.</p> </li> <li> <p>Must be at least 30 minutes.</p> </li> </ul>
		 * @param {string} PreferredMaintenanceWindow <p>The weekly time range during which system maintenance can occur, in Universal Coordinated Time (UTC).</p> <p>Format: <code>ddd:hh24:mi-ddd:hh24:mi</code> </p> <p>The default is a 30-minute window selected at random from an 8-hour block of time for each Amazon Web Services Region, occurring on a random day of the week. To see the time blocks available, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/USER_UpgradeDBInstance.Maintenance.html#AdjustingTheMaintenanceWindow.Aurora"> Adjusting the Preferred Maintenance Window</a> in the <i>Amazon Aurora User Guide</i>.</p> <p>Valid Days: Mon, Tue, Wed, Thu, Fri, Sat, Sun.</p> <p>Constraints: Minimum 30-minute window.</p>
		 * @param {boolean} StorageEncrypted A value that indicates whether the restored DB cluster is encrypted.
		 * @param {string} KmsKeyId <p>The Amazon Web Services KMS key identifier for an encrypted DB cluster.</p> <p>The Amazon Web Services KMS key identifier is the key ARN, key ID, alias ARN, or alias name for the KMS key. To use a KMS key in a different Amazon Web Services account, specify the key ARN or alias ARN.</p> <p>If the StorageEncrypted parameter is enabled, and you do not specify a value for the <code>KmsKeyId</code> parameter, then Amazon RDS will use your default KMS key. There is a default KMS key for your Amazon Web Services account. Your Amazon Web Services account has a different default KMS key for each Amazon Web Services Region.</p>
		 * @param {boolean} EnableIAMDatabaseAuthentication <p>A value that indicates whether to enable mapping of Amazon Web Services Identity and Access Management (IAM) accounts to database accounts. By default, mapping isn't enabled.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/UsingWithRDS.IAMDBAuth.html"> IAM Database Authentication</a> in the <i>Amazon Aurora User Guide</i>.</p>
		 * @param {string} SourceEngine <p>The identifier for the database engine that was backed up to create the files stored in the Amazon S3 bucket.</p> <p>Valid values: <code>mysql</code> </p>
		 * @param {string} SourceEngineVersion <p>The version of the database that the backup files were created from.</p> <p>MySQL versions 5.5, 5.6, and 5.7 are supported.</p> <p>Example: <code>5.6.40</code>, <code>5.7.28</code> </p>
		 * @param {string} S3BucketName The name of the Amazon S3 bucket that contains the data used to create the Amazon Aurora DB cluster.
		 * @param {string} S3Prefix The prefix for all of the file names that contain the data used to create the Amazon Aurora DB cluster. If you do not specify a <b>SourceS3Prefix</b> value, then the Amazon Aurora DB cluster is created by using all of the files in the Amazon S3 bucket.
		 * @param {string} S3IngestionRoleArn The Amazon Resource Name (ARN) of the Amazon Web Services Identity and Access Management (IAM) role that authorizes Amazon RDS to access the Amazon S3 bucket on your behalf.
		 * @param {number} BacktrackWindow <p>The target backtrack window, in seconds. To disable backtracking, set this value to 0.</p> <note> <p>Currently, Backtrack is only supported for Aurora MySQL DB clusters.</p> </note> <p>Default: 0</p> <p>Constraints:</p> <ul> <li> <p>If specified, this value must be set to a number from 0 to 259,200 (72 hours).</p> </li> </ul>
		 * @param {Array<string>} EnableCloudwatchLogsExports <p>The list of logs that the restored DB cluster is to export to CloudWatch Logs. The values in the list depend on the DB engine being used.</p> <p> <b>Aurora MySQL</b> </p> <p>Possible values are <code>audit</code>, <code>error</code>, <code>general</code>, and <code>slowquery</code>.</p> <p>For more information about exporting CloudWatch Logs for Amazon Aurora, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/USER_LogAccess.html#USER_LogAccess.Procedural.UploadtoCloudWatch">Publishing Database Logs to Amazon CloudWatch Logs</a> in the <i>Amazon Aurora User Guide</i>.</p>
		 * @param {boolean} DeletionProtection A value that indicates whether the DB cluster has deletion protection enabled. The database can't be deleted when deletion protection is enabled. By default, deletion protection isn't enabled.
		 * @param {boolean} CopyTagsToSnapshot A value that indicates whether to copy all tags from the restored DB cluster to snapshots of the restored DB cluster. The default is not to copy them.
		 * @param {string} Domain <p>Specify the Active Directory directory ID to restore the DB cluster in. The domain must be created prior to this operation.</p> <p>For Amazon Aurora DB clusters, Amazon RDS can use Kerberos Authentication to authenticate users that connect to the DB cluster. For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/kerberos-authentication.html">Kerberos Authentication</a> in the <i>Amazon Aurora User Guide</i>.</p>
		 * @param {string} DomainIAMRoleName Specify the name of the IAM role to be used when making API calls to the Directory Service.
		 * @param {string} NetworkType <p>The network type of the DB cluster.</p> <p>Valid values:</p> <ul> <li> <p> <code>IPV4</code> </p> </li> <li> <p> <code>DUAL</code> </p> </li> </ul> <p>The network type is determined by the <code>DBSubnetGroup</code> specified for the DB cluster. A <code>DBSubnetGroup</code> can support only the IPv4 protocol or the IPv4 and the IPv6 protocols (<code>DUAL</code>).</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/USER_VPC.WorkingWithRDSInstanceinaVPC.html"> Working with a DB instance in a VPC</a> in the <i>Amazon Aurora User Guide.</i> </p>
		 * @param {boolean} ManageMasterUserPassword <p>A value that indicates whether to manage the master user password with Amazon Web Services Secrets Manager.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/rds-secrets-manager.html">Password management with Amazon Web Services Secrets Manager</a> in the <i>Amazon RDS User Guide</i> and <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/rds-secrets-manager.html">Password management with Amazon Web Services Secrets Manager</a> in the <i>Amazon Aurora User Guide.</i> </p> <p>Constraints:</p> <ul> <li> <p>Can't manage the master user password with Amazon Web Services Secrets Manager if <code>MasterUserPassword</code> is specified.</p> </li> </ul>
		 * @param {string} MasterUserSecretKmsKeyId <p>The Amazon Web Services KMS key identifier to encrypt a secret that is automatically generated and managed in Amazon Web Services Secrets Manager.</p> <p>This setting is valid only if the master user password is managed by RDS in Amazon Web Services Secrets Manager for the DB cluster.</p> <p>The Amazon Web Services KMS key identifier is the key ARN, key ID, alias ARN, or alias name for the KMS key. To use a KMS key in a different Amazon Web Services account, specify the key ARN or alias ARN.</p> <p>If you don't specify <code>MasterUserSecretKmsKeyId</code>, then the <code>aws/secretsmanager</code> KMS key is used to encrypt the secret. If the secret is in a different Amazon Web Services account, then you can't use the <code>aws/secretsmanager</code> KMS key to encrypt the secret, and you must use a customer managed KMS key.</p> <p>There is a default KMS key for your Amazon Web Services account. Your Amazon Web Services account has a different default KMS key for each Amazon Web Services Region.</p>
		 * @param {string} StorageType <p>Specifies the storage type to be associated with the DB cluster.</p> <p>Valid values: <code>aurora</code>, <code>aurora-iopt1</code> </p> <p>Default: <code>aurora</code> </p> <p>Valid for: Aurora DB clusters only</p>
		 * @return {void} Success
		 */
		GET_RestoreDBClusterFromS3(AvailabilityZones: Array<string> | null | undefined, BackupRetentionPeriod: number | null | undefined, CharacterSetName: string | null | undefined, DatabaseName: string | null | undefined, DBClusterIdentifier: string, DBClusterParameterGroupName: string | null | undefined, VpcSecurityGroupIds: Array<string> | null | undefined, DBSubnetGroupName: string | null | undefined, Engine: string, EngineVersion: string | null | undefined, Port: number | null | undefined, MasterUsername: string, MasterUserPassword: string | null | undefined, OptionGroupName: string | null | undefined, PreferredBackupWindow: string | null | undefined, PreferredMaintenanceWindow: string | null | undefined, Tags: Array<string> | null | undefined, StorageEncrypted: boolean | null | undefined, KmsKeyId: string | null | undefined, EnableIAMDatabaseAuthentication: boolean | null | undefined, SourceEngine: string, SourceEngineVersion: string, S3BucketName: string, S3Prefix: string | null | undefined, S3IngestionRoleArn: string, BacktrackWindow: number | null | undefined, EnableCloudwatchLogsExports: Array<string> | null | undefined, DeletionProtection: boolean | null | undefined, CopyTagsToSnapshot: boolean | null | undefined, Domain: string | null | undefined, DomainIAMRoleName: string | null | undefined, ServerlessV2ScalingConfiguration: GET_RestoreDBClusterFromS3ServerlessV2ScalingConfiguration | null | undefined, NetworkType: string | null | undefined, ManageMasterUserPassword: boolean | null | undefined, MasterUserSecretKmsKeyId: string | null | undefined, StorageType: string | null | undefined, Action: GET_RestoreDBClusterFromS3Action, Version: GET_AddRoleToDBClusterVersion): Observable<HttpResponse<string>> {
			return this.http.get(this.baseUri + '#Action=RestoreDBClusterFromS3?' + AvailabilityZones?.map(z => `AvailabilityZones=${encodeURIComponent(z)}`).join('&') + '&BackupRetentionPeriod=' + BackupRetentionPeriod + '&CharacterSetName=' + (CharacterSetName == null ? '' : encodeURIComponent(CharacterSetName)) + '&DatabaseName=' + (DatabaseName == null ? '' : encodeURIComponent(DatabaseName)) + '&DBClusterIdentifier=' + (DBClusterIdentifier == null ? '' : encodeURIComponent(DBClusterIdentifier)) + '&DBClusterParameterGroupName=' + (DBClusterParameterGroupName == null ? '' : encodeURIComponent(DBClusterParameterGroupName)) + '&' + VpcSecurityGroupIds?.map(z => `VpcSecurityGroupIds=${encodeURIComponent(z)}`).join('&') + '&DBSubnetGroupName=' + (DBSubnetGroupName == null ? '' : encodeURIComponent(DBSubnetGroupName)) + '&Engine=' + (Engine == null ? '' : encodeURIComponent(Engine)) + '&EngineVersion=' + (EngineVersion == null ? '' : encodeURIComponent(EngineVersion)) + '&Port=' + Port + '&MasterUsername=' + (MasterUsername == null ? '' : encodeURIComponent(MasterUsername)) + '&MasterUserPassword=' + (MasterUserPassword == null ? '' : encodeURIComponent(MasterUserPassword)) + '&OptionGroupName=' + (OptionGroupName == null ? '' : encodeURIComponent(OptionGroupName)) + '&PreferredBackupWindow=' + (PreferredBackupWindow == null ? '' : encodeURIComponent(PreferredBackupWindow)) + '&PreferredMaintenanceWindow=' + (PreferredMaintenanceWindow == null ? '' : encodeURIComponent(PreferredMaintenanceWindow)) + '&' + Tags?.map(z => `Tags=${encodeURIComponent(z)}`).join('&') + '&StorageEncrypted=' + StorageEncrypted + '&KmsKeyId=' + (KmsKeyId == null ? '' : encodeURIComponent(KmsKeyId)) + '&EnableIAMDatabaseAuthentication=' + EnableIAMDatabaseAuthentication + '&SourceEngine=' + (SourceEngine == null ? '' : encodeURIComponent(SourceEngine)) + '&SourceEngineVersion=' + (SourceEngineVersion == null ? '' : encodeURIComponent(SourceEngineVersion)) + '&S3BucketName=' + (S3BucketName == null ? '' : encodeURIComponent(S3BucketName)) + '&S3Prefix=' + (S3Prefix == null ? '' : encodeURIComponent(S3Prefix)) + '&S3IngestionRoleArn=' + (S3IngestionRoleArn == null ? '' : encodeURIComponent(S3IngestionRoleArn)) + '&BacktrackWindow=' + BacktrackWindow + '&' + EnableCloudwatchLogsExports?.map(z => `EnableCloudwatchLogsExports=${encodeURIComponent(z)}`).join('&') + '&DeletionProtection=' + DeletionProtection + '&CopyTagsToSnapshot=' + CopyTagsToSnapshot + '&Domain=' + (Domain == null ? '' : encodeURIComponent(Domain)) + '&DomainIAMRoleName=' + (DomainIAMRoleName == null ? '' : encodeURIComponent(DomainIAMRoleName)) + '&ServerlessV2ScalingConfiguration=' + ServerlessV2ScalingConfiguration + '&NetworkType=' + (NetworkType == null ? '' : encodeURIComponent(NetworkType)) + '&ManageMasterUserPassword=' + ManageMasterUserPassword + '&MasterUserSecretKmsKeyId=' + (MasterUserSecretKmsKeyId == null ? '' : encodeURIComponent(MasterUserSecretKmsKeyId)) + '&StorageType=' + (StorageType == null ? '' : encodeURIComponent(StorageType)) + '&Action=' + Action + '&Version=' + Version, { observe: 'response', responseType: 'text' });
		}

		/**
		 * <p>Creates a new DB cluster from a DB snapshot or DB cluster snapshot.</p> <p>The target DB cluster is created from the source snapshot with a default configuration. If you don't specify a security group, the new DB cluster is associated with the default security group.</p> <note> <p>This action only restores the DB cluster, not the DB instances for that DB cluster. You must invoke the <code>CreateDBInstance</code> action to create DB instances for the restored DB cluster, specifying the identifier of the restored DB cluster in <code>DBClusterIdentifier</code>. You can create DB instances only after the <code>RestoreDBClusterFromSnapshot</code> action has completed and the DB cluster is available.</p> </note> <p>For more information on Amazon Aurora DB clusters, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/CHAP_AuroraOverview.html"> What is Amazon Aurora?</a> in the <i>Amazon Aurora User Guide</i>.</p> <p>For more information on Multi-AZ DB clusters, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/multi-az-db-clusters-concepts.html"> Multi-AZ DB cluster deployments</a> in the <i>Amazon RDS User Guide.</i> </p>
		 * Get #Action=RestoreDBClusterFromSnapshot
		 * @param {Array<string>} AvailabilityZones <p>Provides the list of Availability Zones (AZs) where instances in the restored DB cluster can be created.</p> <p>Valid for: Aurora DB clusters only</p>
		 * @param {string} DBClusterIdentifier <p>The name of the DB cluster to create from the DB snapshot or DB cluster snapshot. This parameter isn't case-sensitive.</p> <p>Constraints:</p> <ul> <li> <p>Must contain from 1 to 63 letters, numbers, or hyphens</p> </li> <li> <p>First character must be a letter</p> </li> <li> <p>Can't end with a hyphen or contain two consecutive hyphens</p> </li> </ul> <p>Example: <code>my-snapshot-id</code> </p> <p>Valid for: Aurora DB clusters and Multi-AZ DB clusters</p>
		 * @param {string} SnapshotIdentifier <p>The identifier for the DB snapshot or DB cluster snapshot to restore from.</p> <p>You can use either the name or the Amazon Resource Name (ARN) to specify a DB cluster snapshot. However, you can use only the ARN to specify a DB snapshot.</p> <p>Constraints:</p> <ul> <li> <p>Must match the identifier of an existing Snapshot.</p> </li> </ul> <p>Valid for: Aurora DB clusters and Multi-AZ DB clusters</p>
		 * @param {string} Engine <p>The database engine to use for the new DB cluster.</p> <p>Default: The same as source</p> <p>Constraint: Must be compatible with the engine of the source</p> <p>Valid for: Aurora DB clusters and Multi-AZ DB clusters</p>
		 * @param {string} EngineVersion <p>The version of the database engine to use for the new DB cluster. If you don't specify an engine version, the default version for the database engine in the Amazon Web Services Region is used.</p> <p>To list all of the available engine versions for Aurora MySQL, use the following command:</p> <p> <code>aws rds describe-db-engine-versions --engine aurora-mysql --query "DBEngineVersions[].EngineVersion"</code> </p> <p>To list all of the available engine versions for Aurora PostgreSQL, use the following command:</p> <p> <code>aws rds describe-db-engine-versions --engine aurora-postgresql --query "DBEngineVersions[].EngineVersion"</code> </p> <p>To list all of the available engine versions for RDS for MySQL, use the following command:</p> <p> <code>aws rds describe-db-engine-versions --engine mysql --query "DBEngineVersions[].EngineVersion"</code> </p> <p>To list all of the available engine versions for RDS for PostgreSQL, use the following command:</p> <p> <code>aws rds describe-db-engine-versions --engine postgres --query "DBEngineVersions[].EngineVersion"</code> </p> <p> <b>Aurora MySQL</b> </p> <p>See <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/AuroraMySQL.Updates.html">Database engine updates for Amazon Aurora MySQL</a> in the <i>Amazon Aurora User Guide</i>.</p> <p> <b>Aurora PostgreSQL</b> </p> <p>See <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/AuroraPostgreSQL.Updates.20180305.html">Amazon Aurora PostgreSQL releases and engine versions</a> in the <i>Amazon Aurora User Guide</i>.</p> <p> <b>MySQL</b> </p> <p>See <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_MySQL.html#MySQL.Concepts.VersionMgmt">Amazon RDS for MySQL</a> in the <i>Amazon RDS User Guide.</i> </p> <p> <b>PostgreSQL</b> </p> <p>See <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_PostgreSQL.html#PostgreSQL.Concepts">Amazon RDS for PostgreSQL versions and extensions</a> in the <i>Amazon RDS User Guide.</i> </p> <p>Valid for: Aurora DB clusters and Multi-AZ DB clusters</p>
		 * @param {number} Port <p>The port number on which the new DB cluster accepts connections.</p> <p>Constraints: This value must be <code>1150-65535</code> </p> <p>Default: The same port as the original DB cluster.</p> <p>Valid for: Aurora DB clusters and Multi-AZ DB clusters</p>
		 * @param {string} DBSubnetGroupName <p>The name of the DB subnet group to use for the new DB cluster.</p> <p>Constraints: If supplied, must match the name of an existing DB subnet group.</p> <p>Example: <code>mydbsubnetgroup</code> </p> <p>Valid for: Aurora DB clusters and Multi-AZ DB clusters</p>
		 * @param {string} DatabaseName <p>The database name for the restored DB cluster.</p> <p>Valid for: Aurora DB clusters and Multi-AZ DB clusters</p>
		 * @param {string} OptionGroupName <p>The name of the option group to use for the restored DB cluster.</p> <p>DB clusters are associated with a default option group that can't be modified.</p>
		 * @param {Array<string>} VpcSecurityGroupIds <p>A list of VPC security groups that the new DB cluster will belong to.</p> <p>Valid for: Aurora DB clusters and Multi-AZ DB clusters</p>
		 * @param {Array<string>} Tags <p>The tags to be assigned to the restored DB cluster.</p> <p>Valid for: Aurora DB clusters and Multi-AZ DB clusters</p>
		 * @param {string} KmsKeyId <p>The Amazon Web Services KMS key identifier to use when restoring an encrypted DB cluster from a DB snapshot or DB cluster snapshot.</p> <p>The Amazon Web Services KMS key identifier is the key ARN, key ID, alias ARN, or alias name for the KMS key. To use a KMS key in a different Amazon Web Services account, specify the key ARN or alias ARN.</p> <p>When you don't specify a value for the <code>KmsKeyId</code> parameter, then the following occurs:</p> <ul> <li> <p>If the DB snapshot or DB cluster snapshot in <code>SnapshotIdentifier</code> is encrypted, then the restored DB cluster is encrypted using the KMS key that was used to encrypt the DB snapshot or DB cluster snapshot.</p> </li> <li> <p>If the DB snapshot or DB cluster snapshot in <code>SnapshotIdentifier</code> isn't encrypted, then the restored DB cluster isn't encrypted.</p> </li> </ul> <p>Valid for: Aurora DB clusters and Multi-AZ DB clusters</p>
		 * @param {boolean} EnableIAMDatabaseAuthentication <p>A value that indicates whether to enable mapping of Amazon Web Services Identity and Access Management (IAM) accounts to database accounts. By default, mapping isn't enabled.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/UsingWithRDS.IAMDBAuth.html"> IAM Database Authentication</a> in the <i>Amazon Aurora User Guide</i>.</p> <p>Valid for: Aurora DB clusters only</p>
		 * @param {number} BacktrackWindow <p>The target backtrack window, in seconds. To disable backtracking, set this value to 0.</p> <note> <p>Currently, Backtrack is only supported for Aurora MySQL DB clusters.</p> </note> <p>Default: 0</p> <p>Constraints:</p> <ul> <li> <p>If specified, this value must be set to a number from 0 to 259,200 (72 hours).</p> </li> </ul> <p>Valid for: Aurora DB clusters only</p>
		 * @param {Array<string>} EnableCloudwatchLogsExports <p>The list of logs that the restored DB cluster is to export to Amazon CloudWatch Logs. The values in the list depend on the DB engine being used.</p> <p> <b>RDS for MySQL</b> </p> <p>Possible values are <code>error</code>, <code>general</code>, and <code>slowquery</code>.</p> <p> <b>RDS for PostgreSQL</b> </p> <p>Possible values are <code>postgresql</code> and <code>upgrade</code>.</p> <p> <b>Aurora MySQL</b> </p> <p>Possible values are <code>audit</code>, <code>error</code>, <code>general</code>, and <code>slowquery</code>.</p> <p> <b>Aurora PostgreSQL</b> </p> <p>Possible value is <code>postgresql</code>.</p> <p>For more information about exporting CloudWatch Logs for Amazon RDS, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_LogAccess.html#USER_LogAccess.Procedural.UploadtoCloudWatch">Publishing Database Logs to Amazon CloudWatch Logs</a> in the <i>Amazon RDS User Guide</i>.</p> <p>For more information about exporting CloudWatch Logs for Amazon Aurora, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/USER_LogAccess.html#USER_LogAccess.Procedural.UploadtoCloudWatch">Publishing Database Logs to Amazon CloudWatch Logs</a> in the <i>Amazon Aurora User Guide</i>.</p> <p>Valid for: Aurora DB clusters and Multi-AZ DB clusters</p>
		 * @param {string} EngineMode <p>The DB engine mode of the DB cluster, either <code>provisioned</code> or <code>serverless</code>.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/APIReference/API_CreateDBCluster.html"> CreateDBCluster</a>.</p> <p>Valid for: Aurora DB clusters only</p>
		 * @param {GET_RestoreDBClusterFromSnapshotScalingConfiguration} ScalingConfiguration <p>For DB clusters in <code>serverless</code> DB engine mode, the scaling properties of the DB cluster.</p> <p>Valid for: Aurora DB clusters only</p>
		 * @param {string} DBClusterParameterGroupName <p>The name of the DB cluster parameter group to associate with this DB cluster. If this argument is omitted, the default DB cluster parameter group for the specified engine is used.</p> <p>Constraints:</p> <ul> <li> <p>If supplied, must match the name of an existing default DB cluster parameter group.</p> </li> <li> <p>Must be 1 to 255 letters, numbers, or hyphens.</p> </li> <li> <p>First character must be a letter.</p> </li> <li> <p>Can't end with a hyphen or contain two consecutive hyphens.</p> </li> </ul> <p>Valid for: Aurora DB clusters and Multi-AZ DB clusters</p>
		 * @param {boolean} DeletionProtection <p>A value that indicates whether the DB cluster has deletion protection enabled. The database can't be deleted when deletion protection is enabled. By default, deletion protection isn't enabled.</p> <p>Valid for: Aurora DB clusters and Multi-AZ DB clusters</p>
		 * @param {boolean} CopyTagsToSnapshot <p>A value that indicates whether to copy all tags from the restored DB cluster to snapshots of the restored DB cluster. The default is not to copy them.</p> <p>Valid for: Aurora DB clusters and Multi-AZ DB clusters</p>
		 * @param {string} Domain <p>Specify the Active Directory directory ID to restore the DB cluster in. The domain must be created prior to this operation. Currently, only MySQL, Microsoft SQL Server, Oracle, and PostgreSQL DB instances can be created in an Active Directory Domain.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/kerberos-authentication.html"> Kerberos Authentication</a> in the <i>Amazon RDS User Guide</i>.</p> <p>Valid for: Aurora DB clusters only</p>
		 * @param {string} DomainIAMRoleName <p>Specify the name of the IAM role to be used when making API calls to the Directory Service.</p> <p>Valid for: Aurora DB clusters only</p>
		 * @param {string} DBClusterInstanceClass <p>The compute and memory capacity of the each DB instance in the Multi-AZ DB cluster, for example db.m6gd.xlarge. Not all DB instance classes are available in all Amazon Web Services Regions, or for all database engines.</p> <p>For the full list of DB instance classes, and availability for your engine, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.DBInstanceClass.html">DB Instance Class</a> in the <i>Amazon RDS User Guide.</i> </p> <p>Valid for: Multi-AZ DB clusters only</p>
		 * @param {string} StorageType <p>Specifies the storage type to be associated with the DB cluster.</p> <p>When specified for a Multi-AZ DB cluster, a value for the <code>Iops</code> parameter is required.</p> <p>Valid values: <code>aurora</code>, <code>aurora-iopt1</code> (Aurora DB clusters); <code>io1</code> (Multi-AZ DB clusters)</p> <p>Default: <code>aurora</code> (Aurora DB clusters); <code>io1</code> (Multi-AZ DB clusters)</p> <p>Valid for: Aurora DB clusters and Multi-AZ DB clusters</p>
		 * @param {number} Iops <p>The amount of Provisioned IOPS (input/output operations per second) to be initially allocated for each DB instance in the Multi-AZ DB cluster.</p> <p>For information about valid IOPS values, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_Storage.html#USER_PIOPS">Amazon RDS Provisioned IOPS storage</a> in the <i>Amazon RDS User Guide</i>.</p> <p>Constraints: Must be a multiple between .5 and 50 of the storage amount for the DB instance.</p> <p>Valid for: Aurora DB clusters and Multi-AZ DB clusters</p>
		 * @param {boolean} PubliclyAccessible <p>A value that indicates whether the DB cluster is publicly accessible.</p> <p>When the DB cluster is publicly accessible, its Domain Name System (DNS) endpoint resolves to the private IP address from within the DB cluster's virtual private cloud (VPC). It resolves to the public IP address from outside of the DB cluster's VPC. Access to the DB cluster is ultimately controlled by the security group it uses. That public access is not permitted if the security group assigned to the DB cluster doesn't permit it.</p> <p>When the DB cluster isn't publicly accessible, it is an internal DB cluster with a DNS name that resolves to a private IP address.</p> <p>Default: The default behavior varies depending on whether <code>DBSubnetGroupName</code> is specified.</p> <p>If <code>DBSubnetGroupName</code> isn't specified, and <code>PubliclyAccessible</code> isn't specified, the following applies:</p> <ul> <li> <p>If the default VPC in the target Region doesn’t have an internet gateway attached to it, the DB cluster is private.</p> </li> <li> <p>If the default VPC in the target Region has an internet gateway attached to it, the DB cluster is public.</p> </li> </ul> <p>If <code>DBSubnetGroupName</code> is specified, and <code>PubliclyAccessible</code> isn't specified, the following applies:</p> <ul> <li> <p>If the subnets are part of a VPC that doesn’t have an internet gateway attached to it, the DB cluster is private.</p> </li> <li> <p>If the subnets are part of a VPC that has an internet gateway attached to it, the DB cluster is public.</p> </li> </ul> <p>Valid for: Aurora DB clusters and Multi-AZ DB clusters</p>
		 * @param {string} NetworkType <p>The network type of the DB cluster.</p> <p>Valid values:</p> <ul> <li> <p> <code>IPV4</code> </p> </li> <li> <p> <code>DUAL</code> </p> </li> </ul> <p>The network type is determined by the <code>DBSubnetGroup</code> specified for the DB cluster. A <code>DBSubnetGroup</code> can support only the IPv4 protocol or the IPv4 and the IPv6 protocols (<code>DUAL</code>).</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/USER_VPC.WorkingWithRDSInstanceinaVPC.html"> Working with a DB instance in a VPC</a> in the <i>Amazon Aurora User Guide.</i> </p> <p>Valid for: Aurora DB clusters only</p>
		 * @return {void} Success
		 */
		GET_RestoreDBClusterFromSnapshot(AvailabilityZones: Array<string> | null | undefined, DBClusterIdentifier: string, SnapshotIdentifier: string, Engine: string, EngineVersion: string | null | undefined, Port: number | null | undefined, DBSubnetGroupName: string | null | undefined, DatabaseName: string | null | undefined, OptionGroupName: string | null | undefined, VpcSecurityGroupIds: Array<string> | null | undefined, Tags: Array<string> | null | undefined, KmsKeyId: string | null | undefined, EnableIAMDatabaseAuthentication: boolean | null | undefined, BacktrackWindow: number | null | undefined, EnableCloudwatchLogsExports: Array<string> | null | undefined, EngineMode: string | null | undefined, ScalingConfiguration: GET_RestoreDBClusterFromSnapshotScalingConfiguration | null | undefined, DBClusterParameterGroupName: string | null | undefined, DeletionProtection: boolean | null | undefined, CopyTagsToSnapshot: boolean | null | undefined, Domain: string | null | undefined, DomainIAMRoleName: string | null | undefined, DBClusterInstanceClass: string | null | undefined, StorageType: string | null | undefined, Iops: number | null | undefined, PubliclyAccessible: boolean | null | undefined, ServerlessV2ScalingConfiguration: GET_RestoreDBClusterFromSnapshotServerlessV2ScalingConfiguration | null | undefined, NetworkType: string | null | undefined, Action: GET_RestoreDBClusterFromSnapshotAction, Version: GET_AddRoleToDBClusterVersion): Observable<HttpResponse<string>> {
			return this.http.get(this.baseUri + '#Action=RestoreDBClusterFromSnapshot?' + AvailabilityZones?.map(z => `AvailabilityZones=${encodeURIComponent(z)}`).join('&') + '&DBClusterIdentifier=' + (DBClusterIdentifier == null ? '' : encodeURIComponent(DBClusterIdentifier)) + '&SnapshotIdentifier=' + (SnapshotIdentifier == null ? '' : encodeURIComponent(SnapshotIdentifier)) + '&Engine=' + (Engine == null ? '' : encodeURIComponent(Engine)) + '&EngineVersion=' + (EngineVersion == null ? '' : encodeURIComponent(EngineVersion)) + '&Port=' + Port + '&DBSubnetGroupName=' + (DBSubnetGroupName == null ? '' : encodeURIComponent(DBSubnetGroupName)) + '&DatabaseName=' + (DatabaseName == null ? '' : encodeURIComponent(DatabaseName)) + '&OptionGroupName=' + (OptionGroupName == null ? '' : encodeURIComponent(OptionGroupName)) + '&' + VpcSecurityGroupIds?.map(z => `VpcSecurityGroupIds=${encodeURIComponent(z)}`).join('&') + '&' + Tags?.map(z => `Tags=${encodeURIComponent(z)}`).join('&') + '&KmsKeyId=' + (KmsKeyId == null ? '' : encodeURIComponent(KmsKeyId)) + '&EnableIAMDatabaseAuthentication=' + EnableIAMDatabaseAuthentication + '&BacktrackWindow=' + BacktrackWindow + '&' + EnableCloudwatchLogsExports?.map(z => `EnableCloudwatchLogsExports=${encodeURIComponent(z)}`).join('&') + '&EngineMode=' + (EngineMode == null ? '' : encodeURIComponent(EngineMode)) + '&ScalingConfiguration=' + ScalingConfiguration + '&DBClusterParameterGroupName=' + (DBClusterParameterGroupName == null ? '' : encodeURIComponent(DBClusterParameterGroupName)) + '&DeletionProtection=' + DeletionProtection + '&CopyTagsToSnapshot=' + CopyTagsToSnapshot + '&Domain=' + (Domain == null ? '' : encodeURIComponent(Domain)) + '&DomainIAMRoleName=' + (DomainIAMRoleName == null ? '' : encodeURIComponent(DomainIAMRoleName)) + '&DBClusterInstanceClass=' + (DBClusterInstanceClass == null ? '' : encodeURIComponent(DBClusterInstanceClass)) + '&StorageType=' + (StorageType == null ? '' : encodeURIComponent(StorageType)) + '&Iops=' + Iops + '&PubliclyAccessible=' + PubliclyAccessible + '&ServerlessV2ScalingConfiguration=' + ServerlessV2ScalingConfiguration + '&NetworkType=' + (NetworkType == null ? '' : encodeURIComponent(NetworkType)) + '&Action=' + Action + '&Version=' + Version, { observe: 'response', responseType: 'text' });
		}

		/**
		 * <p>Restores a DB cluster to an arbitrary point in time. Users can restore to any point in time before <code>LatestRestorableTime</code> for up to <code>BackupRetentionPeriod</code> days. The target DB cluster is created from the source DB cluster with the same configuration as the original DB cluster, except that the new DB cluster is created with the default DB security group.</p> <note> <p>For Aurora, this action only restores the DB cluster, not the DB instances for that DB cluster. You must invoke the <code>CreateDBInstance</code> action to create DB instances for the restored DB cluster, specifying the identifier of the restored DB cluster in <code>DBClusterIdentifier</code>. You can create DB instances only after the <code>RestoreDBClusterToPointInTime</code> action has completed and the DB cluster is available.</p> </note> <p>For more information on Amazon Aurora DB clusters, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/CHAP_AuroraOverview.html"> What is Amazon Aurora?</a> in the <i>Amazon Aurora User Guide</i>.</p> <p>For more information on Multi-AZ DB clusters, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/multi-az-db-clusters-concepts.html"> Multi-AZ DB cluster deployments</a> in the <i>Amazon RDS User Guide.</i> </p>
		 * Get #Action=RestoreDBClusterToPointInTime
		 * @param {string} DBClusterIdentifier <p>The name of the new DB cluster to be created.</p> <p>Constraints:</p> <ul> <li> <p>Must contain from 1 to 63 letters, numbers, or hyphens</p> </li> <li> <p>First character must be a letter</p> </li> <li> <p>Can't end with a hyphen or contain two consecutive hyphens</p> </li> </ul> <p>Valid for: Aurora DB clusters and Multi-AZ DB clusters</p>
		 * @param {string} RestoreType <p>The type of restore to be performed. You can specify one of the following values:</p> <ul> <li> <p> <code>full-copy</code> - The new DB cluster is restored as a full copy of the source DB cluster.</p> </li> <li> <p> <code>copy-on-write</code> - The new DB cluster is restored as a clone of the source DB cluster.</p> </li> </ul> <p>If you don't specify a <code>RestoreType</code> value, then the new DB cluster is restored as a full copy of the source DB cluster.</p> <p>Valid for: Aurora DB clusters and Multi-AZ DB clusters</p>
		 * @param {string} SourceDBClusterIdentifier <p>The identifier of the source DB cluster from which to restore.</p> <p>Constraints:</p> <ul> <li> <p>Must match the identifier of an existing DBCluster.</p> </li> </ul> <p>Valid for: Aurora DB clusters and Multi-AZ DB clusters</p>
		 * @param {Date} RestoreToTime <p>The date and time to restore the DB cluster to.</p> <p>Valid Values: Value must be a time in Universal Coordinated Time (UTC) format</p> <p>Constraints:</p> <ul> <li> <p>Must be before the latest restorable time for the DB instance</p> </li> <li> <p>Must be specified if <code>UseLatestRestorableTime</code> parameter isn't provided</p> </li> <li> <p>Can't be specified if the <code>UseLatestRestorableTime</code> parameter is enabled</p> </li> <li> <p>Can't be specified if the <code>RestoreType</code> parameter is <code>copy-on-write</code> </p> </li> </ul> <p>Example: <code>2015-03-07T23:45:00Z</code> </p> <p>Valid for: Aurora DB clusters and Multi-AZ DB clusters</p>
		 * @param {boolean} UseLatestRestorableTime <p>A value that indicates whether to restore the DB cluster to the latest restorable backup time. By default, the DB cluster isn't restored to the latest restorable backup time.</p> <p>Constraints: Can't be specified if <code>RestoreToTime</code> parameter is provided.</p> <p>Valid for: Aurora DB clusters and Multi-AZ DB clusters</p>
		 * @param {number} Port <p>The port number on which the new DB cluster accepts connections.</p> <p>Constraints: A value from <code>1150-65535</code>.</p> <p>Default: The default port for the engine.</p> <p>Valid for: Aurora DB clusters and Multi-AZ DB clusters</p>
		 * @param {string} DBSubnetGroupName <p>The DB subnet group name to use for the new DB cluster.</p> <p>Constraints: If supplied, must match the name of an existing DBSubnetGroup.</p> <p>Example: <code>mydbsubnetgroup</code> </p> <p>Valid for: Aurora DB clusters and Multi-AZ DB clusters</p>
		 * @param {string} OptionGroupName <p>The name of the option group for the new DB cluster.</p> <p>DB clusters are associated with a default option group that can't be modified.</p>
		 * @param {Array<string>} VpcSecurityGroupIds <p>A list of VPC security groups that the new DB cluster belongs to.</p> <p>Valid for: Aurora DB clusters and Multi-AZ DB clusters</p>
		 * @param {string} KmsKeyId <p>The Amazon Web Services KMS key identifier to use when restoring an encrypted DB cluster from an encrypted DB cluster.</p> <p>The Amazon Web Services KMS key identifier is the key ARN, key ID, alias ARN, or alias name for the KMS key. To use a KMS key in a different Amazon Web Services account, specify the key ARN or alias ARN.</p> <p>You can restore to a new DB cluster and encrypt the new DB cluster with a KMS key that is different from the KMS key used to encrypt the source DB cluster. The new DB cluster is encrypted with the KMS key identified by the <code>KmsKeyId</code> parameter.</p> <p>If you don't specify a value for the <code>KmsKeyId</code> parameter, then the following occurs:</p> <ul> <li> <p>If the DB cluster is encrypted, then the restored DB cluster is encrypted using the KMS key that was used to encrypt the source DB cluster.</p> </li> <li> <p>If the DB cluster isn't encrypted, then the restored DB cluster isn't encrypted.</p> </li> </ul> <p>If <code>DBClusterIdentifier</code> refers to a DB cluster that isn't encrypted, then the restore request is rejected.</p> <p>Valid for: Aurora DB clusters and Multi-AZ DB clusters</p>
		 * @param {boolean} EnableIAMDatabaseAuthentication <p>A value that indicates whether to enable mapping of Amazon Web Services Identity and Access Management (IAM) accounts to database accounts. By default, mapping isn't enabled.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/UsingWithRDS.IAMDBAuth.html"> IAM Database Authentication</a> in the <i>Amazon Aurora User Guide</i>.</p> <p>Valid for: Aurora DB clusters only</p>
		 * @param {number} BacktrackWindow <p>The target backtrack window, in seconds. To disable backtracking, set this value to 0.</p> <p>Default: 0</p> <p>Constraints:</p> <ul> <li> <p>If specified, this value must be set to a number from 0 to 259,200 (72 hours).</p> </li> </ul> <p>Valid for: Aurora MySQL DB clusters only</p>
		 * @param {Array<string>} EnableCloudwatchLogsExports <p>The list of logs that the restored DB cluster is to export to CloudWatch Logs. The values in the list depend on the DB engine being used.</p> <p> <b>RDS for MySQL</b> </p> <p>Possible values are <code>error</code>, <code>general</code>, and <code>slowquery</code>.</p> <p> <b>RDS for PostgreSQL</b> </p> <p>Possible values are <code>postgresql</code> and <code>upgrade</code>.</p> <p> <b>Aurora MySQL</b> </p> <p>Possible values are <code>audit</code>, <code>error</code>, <code>general</code>, and <code>slowquery</code>.</p> <p> <b>Aurora PostgreSQL</b> </p> <p>Possible value is <code>postgresql</code>.</p> <p>For more information about exporting CloudWatch Logs for Amazon RDS, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_LogAccess.html#USER_LogAccess.Procedural.UploadtoCloudWatch">Publishing Database Logs to Amazon CloudWatch Logs</a> in the <i>Amazon RDS User Guide</i>.</p> <p>For more information about exporting CloudWatch Logs for Amazon Aurora, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/USER_LogAccess.html#USER_LogAccess.Procedural.UploadtoCloudWatch">Publishing Database Logs to Amazon CloudWatch Logs</a> in the <i>Amazon Aurora User Guide</i>.</p> <p>Valid for: Aurora DB clusters and Multi-AZ DB clusters</p>
		 * @param {string} DBClusterParameterGroupName <p>The name of the DB cluster parameter group to associate with this DB cluster. If this argument is omitted, the default DB cluster parameter group for the specified engine is used.</p> <p>Constraints:</p> <ul> <li> <p>If supplied, must match the name of an existing DB cluster parameter group.</p> </li> <li> <p>Must be 1 to 255 letters, numbers, or hyphens.</p> </li> <li> <p>First character must be a letter.</p> </li> <li> <p>Can't end with a hyphen or contain two consecutive hyphens.</p> </li> </ul> <p>Valid for: Aurora DB clusters and Multi-AZ DB clusters</p>
		 * @param {boolean} DeletionProtection <p>A value that indicates whether the DB cluster has deletion protection enabled. The database can't be deleted when deletion protection is enabled. By default, deletion protection isn't enabled.</p> <p>Valid for: Aurora DB clusters and Multi-AZ DB clusters</p>
		 * @param {boolean} CopyTagsToSnapshot <p>A value that indicates whether to copy all tags from the restored DB cluster to snapshots of the restored DB cluster. The default is not to copy them.</p> <p>Valid for: Aurora DB clusters and Multi-AZ DB clusters</p>
		 * @param {string} Domain <p>Specify the Active Directory directory ID to restore the DB cluster in. The domain must be created prior to this operation.</p> <p>For Amazon Aurora DB clusters, Amazon RDS can use Kerberos Authentication to authenticate users that connect to the DB cluster. For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/kerberos-authentication.html">Kerberos Authentication</a> in the <i>Amazon Aurora User Guide</i>.</p> <p>Valid for: Aurora DB clusters only</p>
		 * @param {string} DomainIAMRoleName <p>Specify the name of the IAM role to be used when making API calls to the Directory Service.</p> <p>Valid for: Aurora DB clusters only</p>
		 * @param {GET_RestoreDBClusterToPointInTimeScalingConfiguration} ScalingConfiguration <p>For DB clusters in <code>serverless</code> DB engine mode, the scaling properties of the DB cluster.</p> <p>Valid for: Aurora DB clusters only</p>
		 * @param {string} EngineMode <p>The engine mode of the new cluster. Specify <code>provisioned</code> or <code>serverless</code>, depending on the type of the cluster you are creating. You can create an Aurora Serverless v1 clone from a provisioned cluster, or a provisioned clone from an Aurora Serverless v1 cluster. To create a clone that is an Aurora Serverless v1 cluster, the original cluster must be an Aurora Serverless v1 cluster or an encrypted provisioned cluster.</p> <p>Valid for: Aurora DB clusters only</p>
		 * @param {string} DBClusterInstanceClass <p>The compute and memory capacity of the each DB instance in the Multi-AZ DB cluster, for example db.m6gd.xlarge. Not all DB instance classes are available in all Amazon Web Services Regions, or for all database engines.</p> <p>For the full list of DB instance classes, and availability for your engine, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.DBInstanceClass.html">DB instance class</a> in the <i>Amazon RDS User Guide.</i> </p> <p>Valid for: Multi-AZ DB clusters only</p>
		 * @param {string} StorageType <p>Specifies the storage type to be associated with the DB cluster.</p> <p>When specified for a Multi-AZ DB cluster, a value for the <code>Iops</code> parameter is required.</p> <p>Valid values: <code>aurora</code>, <code>aurora-iopt1</code> (Aurora DB clusters); <code>io1</code> (Multi-AZ DB clusters)</p> <p>Default: <code>aurora</code> (Aurora DB clusters); <code>io1</code> (Multi-AZ DB clusters)</p> <p>Valid for: Aurora DB clusters and Multi-AZ DB clusters</p>
		 * @param {boolean} PubliclyAccessible <p>A value that indicates whether the DB cluster is publicly accessible.</p> <p>When the DB cluster is publicly accessible, its Domain Name System (DNS) endpoint resolves to the private IP address from within the DB cluster's virtual private cloud (VPC). It resolves to the public IP address from outside of the DB cluster's VPC. Access to the DB cluster is ultimately controlled by the security group it uses. That public access is not permitted if the security group assigned to the DB cluster doesn't permit it.</p> <p>When the DB cluster isn't publicly accessible, it is an internal DB cluster with a DNS name that resolves to a private IP address.</p> <p>Default: The default behavior varies depending on whether <code>DBSubnetGroupName</code> is specified.</p> <p>If <code>DBSubnetGroupName</code> isn't specified, and <code>PubliclyAccessible</code> isn't specified, the following applies:</p> <ul> <li> <p>If the default VPC in the target Region doesn’t have an internet gateway attached to it, the DB cluster is private.</p> </li> <li> <p>If the default VPC in the target Region has an internet gateway attached to it, the DB cluster is public.</p> </li> </ul> <p>If <code>DBSubnetGroupName</code> is specified, and <code>PubliclyAccessible</code> isn't specified, the following applies:</p> <ul> <li> <p>If the subnets are part of a VPC that doesn’t have an internet gateway attached to it, the DB cluster is private.</p> </li> <li> <p>If the subnets are part of a VPC that has an internet gateway attached to it, the DB cluster is public.</p> </li> </ul> <p>Valid for: Multi-AZ DB clusters only</p>
		 * @param {number} Iops <p>The amount of Provisioned IOPS (input/output operations per second) to be initially allocated for each DB instance in the Multi-AZ DB cluster.</p> <p>For information about valid IOPS values, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_Storage.html#USER_PIOPS">Amazon RDS Provisioned IOPS storage</a> in the <i>Amazon RDS User Guide</i>.</p> <p>Constraints: Must be a multiple between .5 and 50 of the storage amount for the DB instance.</p> <p>Valid for: Multi-AZ DB clusters only</p>
		 * @param {string} NetworkType <p>The network type of the DB cluster.</p> <p>Valid values:</p> <ul> <li> <p> <code>IPV4</code> </p> </li> <li> <p> <code>DUAL</code> </p> </li> </ul> <p>The network type is determined by the <code>DBSubnetGroup</code> specified for the DB cluster. A <code>DBSubnetGroup</code> can support only the IPv4 protocol or the IPv4 and the IPv6 protocols (<code>DUAL</code>).</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/USER_VPC.WorkingWithRDSInstanceinaVPC.html"> Working with a DB instance in a VPC</a> in the <i>Amazon Aurora User Guide.</i> </p> <p>Valid for: Aurora DB clusters only</p>
		 * @param {string} SourceDbClusterResourceId The resource ID of the source DB cluster from which to restore.
		 * @return {void} Success
		 */
		GET_RestoreDBClusterToPointInTime(DBClusterIdentifier: string, RestoreType: string | null | undefined, SourceDBClusterIdentifier: string | null | undefined, RestoreToTime: Date | null | undefined, UseLatestRestorableTime: boolean | null | undefined, Port: number | null | undefined, DBSubnetGroupName: string | null | undefined, OptionGroupName: string | null | undefined, VpcSecurityGroupIds: Array<string> | null | undefined, Tags: Array<string> | null | undefined, KmsKeyId: string | null | undefined, EnableIAMDatabaseAuthentication: boolean | null | undefined, BacktrackWindow: number | null | undefined, EnableCloudwatchLogsExports: Array<string> | null | undefined, DBClusterParameterGroupName: string | null | undefined, DeletionProtection: boolean | null | undefined, CopyTagsToSnapshot: boolean | null | undefined, Domain: string | null | undefined, DomainIAMRoleName: string | null | undefined, ScalingConfiguration: GET_RestoreDBClusterToPointInTimeScalingConfiguration | null | undefined, EngineMode: string | null | undefined, DBClusterInstanceClass: string | null | undefined, StorageType: string | null | undefined, PubliclyAccessible: boolean | null | undefined, Iops: number | null | undefined, ServerlessV2ScalingConfiguration: GET_RestoreDBClusterToPointInTimeServerlessV2ScalingConfiguration | null | undefined, NetworkType: string | null | undefined, SourceDbClusterResourceId: string | null | undefined, Action: GET_RestoreDBClusterToPointInTimeAction, Version: GET_AddRoleToDBClusterVersion): Observable<HttpResponse<string>> {
			return this.http.get(this.baseUri + '#Action=RestoreDBClusterToPointInTime?DBClusterIdentifier=' + (DBClusterIdentifier == null ? '' : encodeURIComponent(DBClusterIdentifier)) + '&RestoreType=' + (RestoreType == null ? '' : encodeURIComponent(RestoreType)) + '&SourceDBClusterIdentifier=' + (SourceDBClusterIdentifier == null ? '' : encodeURIComponent(SourceDBClusterIdentifier)) + '&RestoreToTime=' + RestoreToTime?.toISOString() + '&UseLatestRestorableTime=' + UseLatestRestorableTime + '&Port=' + Port + '&DBSubnetGroupName=' + (DBSubnetGroupName == null ? '' : encodeURIComponent(DBSubnetGroupName)) + '&OptionGroupName=' + (OptionGroupName == null ? '' : encodeURIComponent(OptionGroupName)) + '&' + VpcSecurityGroupIds?.map(z => `VpcSecurityGroupIds=${encodeURIComponent(z)}`).join('&') + '&' + Tags?.map(z => `Tags=${encodeURIComponent(z)}`).join('&') + '&KmsKeyId=' + (KmsKeyId == null ? '' : encodeURIComponent(KmsKeyId)) + '&EnableIAMDatabaseAuthentication=' + EnableIAMDatabaseAuthentication + '&BacktrackWindow=' + BacktrackWindow + '&' + EnableCloudwatchLogsExports?.map(z => `EnableCloudwatchLogsExports=${encodeURIComponent(z)}`).join('&') + '&DBClusterParameterGroupName=' + (DBClusterParameterGroupName == null ? '' : encodeURIComponent(DBClusterParameterGroupName)) + '&DeletionProtection=' + DeletionProtection + '&CopyTagsToSnapshot=' + CopyTagsToSnapshot + '&Domain=' + (Domain == null ? '' : encodeURIComponent(Domain)) + '&DomainIAMRoleName=' + (DomainIAMRoleName == null ? '' : encodeURIComponent(DomainIAMRoleName)) + '&ScalingConfiguration=' + ScalingConfiguration + '&EngineMode=' + (EngineMode == null ? '' : encodeURIComponent(EngineMode)) + '&DBClusterInstanceClass=' + (DBClusterInstanceClass == null ? '' : encodeURIComponent(DBClusterInstanceClass)) + '&StorageType=' + (StorageType == null ? '' : encodeURIComponent(StorageType)) + '&PubliclyAccessible=' + PubliclyAccessible + '&Iops=' + Iops + '&ServerlessV2ScalingConfiguration=' + ServerlessV2ScalingConfiguration + '&NetworkType=' + (NetworkType == null ? '' : encodeURIComponent(NetworkType)) + '&SourceDbClusterResourceId=' + (SourceDbClusterResourceId == null ? '' : encodeURIComponent(SourceDbClusterResourceId)) + '&Action=' + Action + '&Version=' + Version, { observe: 'response', responseType: 'text' });
		}

		/**
		 * <p>Creates a new DB instance from a DB snapshot. The target database is created from the source database restore point with most of the source's original configuration, including the default security group and DB parameter group. By default, the new DB instance is created as a Single-AZ deployment, except when the instance is a SQL Server instance that has an option group associated with mirroring. In this case, the instance becomes a Multi-AZ deployment, not a Single-AZ deployment.</p> <p>If you want to replace your original DB instance with the new, restored DB instance, then rename your original DB instance before you call the RestoreDBInstanceFromDBSnapshot action. RDS doesn't allow two DB instances with the same name. After you have renamed your original DB instance with a different identifier, then you can pass the original name of the DB instance as the DBInstanceIdentifier in the call to the RestoreDBInstanceFromDBSnapshot action. The result is that you replace the original DB instance with the DB instance created from the snapshot.</p> <p>If you are restoring from a shared manual DB snapshot, the <code>DBSnapshotIdentifier</code> must be the ARN of the shared DB snapshot.</p> <note> <p>This command doesn't apply to Aurora MySQL and Aurora PostgreSQL. For Aurora, use <code>RestoreDBClusterFromSnapshot</code>.</p> </note>
		 * Get #Action=RestoreDBInstanceFromDBSnapshot
		 * @param {string} DBInstanceIdentifier <p>Name of the DB instance to create from the DB snapshot. This parameter isn't case-sensitive.</p> <p>Constraints:</p> <ul> <li> <p>Must contain from 1 to 63 numbers, letters, or hyphens</p> </li> <li> <p>First character must be a letter</p> </li> <li> <p>Can't end with a hyphen or contain two consecutive hyphens</p> </li> </ul> <p>Example: <code>my-snapshot-id</code> </p>
		 * @param {string} DBSnapshotIdentifier <p>The identifier for the DB snapshot to restore from.</p> <p>Constraints:</p> <ul> <li> <p>Must match the identifier of an existing DBSnapshot.</p> </li> <li> <p>Can't be specified when <code>DBClusterSnapshotIdentifier</code> is specified.</p> </li> <li> <p>Must be specified when <code>DBClusterSnapshotIdentifier</code> isn't specified.</p> </li> <li> <p>If you are restoring from a shared manual DB snapshot, the <code>DBSnapshotIdentifier</code> must be the ARN of the shared DB snapshot.</p> </li> </ul>
		 * @param {string} DBInstanceClass <p>The compute and memory capacity of the Amazon RDS DB instance, for example db.m4.large. Not all DB instance classes are available in all Amazon Web Services Regions, or for all database engines. For the full list of DB instance classes, and availability for your engine, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.DBInstanceClass.html">DB Instance Class</a> in the <i>Amazon RDS User Guide.</i> </p> <p>Default: The same DBInstanceClass as the original DB instance.</p>
		 * @param {number} Port <p>The port number on which the database accepts connections.</p> <p>Default: The same port as the original DB instance</p> <p>Constraints: Value must be <code>1150-65535</code> </p>
		 * @param {string} AvailabilityZone <p>The Availability Zone (AZ) where the DB instance will be created.</p> <p>Default: A random, system-chosen Availability Zone.</p> <p>Constraint: You can't specify the <code>AvailabilityZone</code> parameter if the DB instance is a Multi-AZ deployment.</p> <p>Example: <code>us-east-1a</code> </p>
		 * @param {string} DBSubnetGroupName <p>The DB subnet group name to use for the new instance.</p> <p>Constraints: If supplied, must match the name of an existing DBSubnetGroup.</p> <p>Example: <code>mydbsubnetgroup</code> </p>
		 * @param {boolean} MultiAZ <p>A value that indicates whether the DB instance is a Multi-AZ deployment.</p> <p>This setting doesn't apply to RDS Custom.</p> <p>Constraint: You can't specify the <code>AvailabilityZone</code> parameter if the DB instance is a Multi-AZ deployment.</p>
		 * @param {boolean} PubliclyAccessible <p>A value that indicates whether the DB instance is publicly accessible.</p> <p>When the DB instance is publicly accessible, its Domain Name System (DNS) endpoint resolves to the private IP address from within the DB instance's virtual private cloud (VPC). It resolves to the public IP address from outside of the DB instance's VPC. Access to the DB instance is ultimately controlled by the security group it uses. That public access is not permitted if the security group assigned to the DB instance doesn't permit it.</p> <p>When the DB instance isn't publicly accessible, it is an internal DB instance with a DNS name that resolves to a private IP address.</p> <p>For more information, see <a>CreateDBInstance</a>.</p>
		 * @param {boolean} AutoMinorVersionUpgrade <p>A value that indicates whether minor version upgrades are applied automatically to the DB instance during the maintenance window.</p> <p>If you restore an RDS Custom DB instance, you must disable this parameter.</p>
		 * @param {string} LicenseModel <p>License model information for the restored DB instance.</p> <p>This setting doesn't apply to RDS Custom.</p> <p>Default: Same as source.</p> <p>Valid values: <code>license-included</code> | <code>bring-your-own-license</code> | <code>general-public-license</code> </p>
		 * @param {string} DBName <p>The database name for the restored DB instance.</p> <p>This parameter doesn't apply to the MySQL, PostgreSQL, or MariaDB engines. It also doesn't apply to RDS Custom DB instances.</p>
		 * @param {string} Engine <p>The database engine to use for the new instance.</p> <p>This setting doesn't apply to RDS Custom.</p> <p>Default: The same as source</p> <p>Constraint: Must be compatible with the engine of the source. For example, you can restore a MariaDB 10.1 DB instance from a MySQL 5.6 snapshot.</p> <p>Valid Values:</p> <ul> <li> <p> <code>mariadb</code> </p> </li> <li> <p> <code>mysql</code> </p> </li> <li> <p> <code>oracle-ee</code> </p> </li> <li> <p> <code>oracle-ee-cdb</code> </p> </li> <li> <p> <code>oracle-se2</code> </p> </li> <li> <p> <code>oracle-se2-cdb</code> </p> </li> <li> <p> <code>postgres</code> </p> </li> <li> <p> <code>sqlserver-ee</code> </p> </li> <li> <p> <code>sqlserver-se</code> </p> </li> <li> <p> <code>sqlserver-ex</code> </p> </li> <li> <p> <code>sqlserver-web</code> </p> </li> </ul>
		 * @param {number} Iops <p>Specifies the amount of provisioned IOPS for the DB instance, expressed in I/O operations per second. If this parameter isn't specified, the IOPS value is taken from the backup. If this parameter is set to 0, the new instance is converted to a non-PIOPS instance. The conversion takes additional time, though your DB instance is available for connections before the conversion starts.</p> <p>The provisioned IOPS value must follow the requirements for your database engine. For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_Storage.html#USER_PIOPS">Amazon RDS Provisioned IOPS storage</a> in the <i>Amazon RDS User Guide.</i> </p> <p>Constraints: Must be an integer greater than 1000.</p>
		 * @param {string} OptionGroupName <p>The name of the option group to be used for the restored DB instance.</p> <p>Permanent options, such as the TDE option for Oracle Advanced Security TDE, can't be removed from an option group, and that option group can't be removed from a DB instance after it is associated with a DB instance.</p> <p>This setting doesn't apply to RDS Custom.</p>
		 * @param {string} StorageType <p>Specifies the storage type to be associated with the DB instance.</p> <p>Valid values: <code>gp2 | gp3 | io1 | standard</code> </p> <p>If you specify <code>io1</code> or <code>gp3</code>, you must also include a value for the <code>Iops</code> parameter.</p> <p>Default: <code>io1</code> if the <code>Iops</code> parameter is specified, otherwise <code>gp2</code> </p>
		 * @param {string} TdeCredentialArn <p>The ARN from the key store with which to associate the instance for TDE encryption.</p> <p>This setting doesn't apply to RDS Custom.</p>
		 * @param {string} TdeCredentialPassword <p>The password for the given ARN from the key store in order to access the device.</p> <p>This setting doesn't apply to RDS Custom.</p>
		 * @param {Array<string>} VpcSecurityGroupIds <p>A list of EC2 VPC security groups to associate with this DB instance.</p> <p>Default: The default EC2 VPC security group for the DB subnet group's VPC.</p>
		 * @param {string} Domain <p>Specify the Active Directory directory ID to restore the DB instance in. The domain/ must be created prior to this operation. Currently, you can create only MySQL, Microsoft SQL Server, Oracle, and PostgreSQL DB instances in an Active Directory Domain.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/kerberos-authentication.html"> Kerberos Authentication</a> in the <i>Amazon RDS User Guide</i>.</p> <p>This setting doesn't apply to RDS Custom.</p>
		 * @param {string} DomainFqdn <p>The fully qualified domain name (FQDN) of an Active Directory domain.</p> <p>Constraints:</p> <ul> <li> <p>Can't be longer than 64 characters.</p> </li> </ul> <p>Example: <code>mymanagedADtest.mymanagedAD.mydomain</code> </p>
		 * @param {string} DomainOu <p>The Active Directory organizational unit for your DB instance to join.</p> <p>Constraints:</p> <ul> <li> <p>Must be in the distinguished name format.</p> </li> <li> <p>Can't be longer than 64 characters.</p> </li> </ul> <p>Example: <code>OU=mymanagedADtestOU,DC=mymanagedADtest,DC=mymanagedAD,DC=mydomain</code> </p>
		 * @param {string} DomainAuthSecretArn <p>The ARN for the Secrets Manager secret with the credentials for the user joining the domain.</p> <p>Constraints:</p> <p>Example: <code>arn:aws:secretsmanager:region:account-number:secret:myselfmanagedADtestsecret-123456</code> </p>
		 * @param {Array<string>} DomainDnsIps <p>The IPv4 DNS IP addresses of your primary and secondary Active Directory domain controllers.</p> <p>Constraints:</p> <ul> <li> <p>Two IP addresses must be provided. If there isn't a secondary domain controller, use the IP address of the primary domain controller for both entries in the list.</p> </li> </ul> <p>Example: <code>123.124.125.126,234.235.236.237</code> </p>
		 * @param {boolean} CopyTagsToSnapshot <p>A value that indicates whether to copy all tags from the restored DB instance to snapshots of the DB instance.</p> <p>In most cases, tags aren't copied by default. However, when you restore a DB instance from a DB snapshot, RDS checks whether you specify new tags. If yes, the new tags are added to the restored DB instance. If there are no new tags, RDS looks for the tags from the source DB instance for the DB snapshot, and then adds those tags to the restored DB instance.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Tagging.html#USER_Tagging.CopyTags"> Copying tags to DB instance snapshots</a> in the <i>Amazon RDS User Guide</i>.</p>
		 * @param {string} DomainIAMRoleName <p>The name of the IAM role to use when making API calls to the Directory Service.</p> <p>This setting doesn't apply to RDS Custom DB instances.</p>
		 * @param {boolean} EnableIAMDatabaseAuthentication <p>A value that indicates whether to enable mapping of Amazon Web Services Identity and Access Management (IAM) accounts to database accounts. By default, mapping is disabled.</p> <p>For more information about IAM database authentication, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/UsingWithRDS.IAMDBAuth.html"> IAM Database Authentication for MySQL and PostgreSQL</a> in the <i>Amazon RDS User Guide.</i> </p> <p>This setting doesn't apply to RDS Custom.</p>
		 * @param {Array<string>} EnableCloudwatchLogsExports <p>The list of logs that the restored DB instance is to export to CloudWatch Logs. The values in the list depend on the DB engine being used. For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_LogAccess.html#USER_LogAccess.Procedural.UploadtoCloudWatch">Publishing Database Logs to Amazon CloudWatch Logs</a> in the <i>Amazon RDS User Guide</i>.</p> <p>This setting doesn't apply to RDS Custom.</p>
		 * @param {Array<string>} ProcessorFeatures <p>The number of CPU cores and the number of threads per core for the DB instance class of the DB instance.</p> <p>This setting doesn't apply to RDS Custom.</p>
		 * @param {boolean} UseDefaultProcessorFeatures <p>A value that indicates whether the DB instance class of the DB instance uses its default processor features.</p> <p>This setting doesn't apply to RDS Custom.</p>
		 * @param {string} DBParameterGroupName <p>The name of the DB parameter group to associate with this DB instance.</p> <p>If you don't specify a value for <code>DBParameterGroupName</code>, then RDS uses the default <code>DBParameterGroup</code> for the specified DB engine.</p> <p>This setting doesn't apply to RDS Custom.</p> <p>Constraints:</p> <ul> <li> <p>If supplied, must match the name of an existing DBParameterGroup.</p> </li> <li> <p>Must be 1 to 255 letters, numbers, or hyphens.</p> </li> <li> <p>First character must be a letter.</p> </li> <li> <p>Can't end with a hyphen or contain two consecutive hyphens.</p> </li> </ul>
		 * @param {boolean} DeletionProtection A value that indicates whether the DB instance has deletion protection enabled. The database can't be deleted when deletion protection is enabled. By default, deletion protection isn't enabled. For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_DeleteInstance.html"> Deleting a DB Instance</a>.
		 * @param {boolean} EnableCustomerOwnedIp <p>A value that indicates whether to enable a customer-owned IP address (CoIP) for an RDS on Outposts DB instance.</p> <p>A <i>CoIP</i> provides local or external connectivity to resources in your Outpost subnets through your on-premises network. For some use cases, a CoIP can provide lower latency for connections to the DB instance from outside of its virtual private cloud (VPC) on your local network.</p> <p>This setting doesn't apply to RDS Custom.</p> <p>For more information about RDS on Outposts, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/rds-on-outposts.html">Working with Amazon RDS on Amazon Web Services Outposts</a> in the <i>Amazon RDS User Guide</i>.</p> <p>For more information about CoIPs, see <a href="https://docs.aws.amazon.com/outposts/latest/userguide/routing.html#ip-addressing">Customer-owned IP addresses</a> in the <i>Amazon Web Services Outposts User Guide</i>.</p>
		 * @param {string} CustomIamInstanceProfile <p>The instance profile associated with the underlying Amazon EC2 instance of an RDS Custom DB instance. The instance profile must meet the following requirements:</p> <ul> <li> <p>The profile must exist in your account.</p> </li> <li> <p>The profile must have an IAM role that Amazon EC2 has permissions to assume.</p> </li> <li> <p>The instance profile name and the associated IAM role name must start with the prefix <code>AWSRDSCustom</code>.</p> </li> </ul> <p>For the list of permissions required for the IAM role, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/custom-setup-orcl.html#custom-setup-orcl.iam-vpc"> Configure IAM and your VPC</a> in the <i>Amazon RDS User Guide</i>.</p> <p>This setting is required for RDS Custom.</p>
		 * @param {string} BackupTarget <p>Specifies where automated backups and manual snapshots are stored for the restored DB instance.</p> <p>Possible values are <code>outposts</code> (Amazon Web Services Outposts) and <code>region</code> (Amazon Web Services Region). The default is <code>region</code>.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/rds-on-outposts.html">Working with Amazon RDS on Amazon Web Services Outposts</a> in the <i>Amazon RDS User Guide</i>.</p>
		 * @param {string} NetworkType <p>The network type of the DB instance.</p> <p>Valid values:</p> <ul> <li> <p> <code>IPV4</code> </p> </li> <li> <p> <code>DUAL</code> </p> </li> </ul> <p>The network type is determined by the <code>DBSubnetGroup</code> specified for the DB instance. A <code>DBSubnetGroup</code> can support only the IPv4 protocol or the IPv4 and the IPv6 protocols (<code>DUAL</code>).</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_VPC.WorkingWithRDSInstanceinaVPC.html"> Working with a DB instance in a VPC</a> in the <i>Amazon RDS User Guide.</i> </p>
		 * @param {number} StorageThroughput <p>Specifies the storage throughput value for the DB instance.</p> <p>This setting doesn't apply to RDS Custom or Amazon Aurora.</p>
		 * @param {string} DBClusterSnapshotIdentifier <p>The identifier for the RDS for MySQL Multi-AZ DB cluster snapshot to restore from.</p> <p>For more information on Multi-AZ DB clusters, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/multi-az-db-clusters-concepts.html"> Multi-AZ DB cluster deployments</a> in the <i>Amazon RDS User Guide</i>.</p> <p>Constraints:</p> <ul> <li> <p>Must match the identifier of an existing Multi-AZ DB cluster snapshot.</p> </li> <li> <p>Can't be specified when <code>DBSnapshotIdentifier</code> is specified.</p> </li> <li> <p>Must be specified when <code>DBSnapshotIdentifier</code> isn't specified.</p> </li> <li> <p>If you are restoring from a shared manual Multi-AZ DB cluster snapshot, the <code>DBClusterSnapshotIdentifier</code> must be the ARN of the shared snapshot.</p> </li> <li> <p>Can't be the identifier of an Aurora DB cluster snapshot.</p> </li> <li> <p>Can't be the identifier of an RDS for PostgreSQL Multi-AZ DB cluster snapshot.</p> </li> </ul>
		 * @param {number} AllocatedStorage <p>The amount of storage (in gibibytes) to allocate initially for the DB instance. Follow the allocation rules specified in CreateDBInstance.</p> <note> <p>Be sure to allocate enough storage for your new DB instance so that the restore operation can succeed. You can also allocate additional storage for future growth.</p> </note>
		 * @return {void} Success
		 */
		GET_RestoreDBInstanceFromDBSnapshot(DBInstanceIdentifier: string, DBSnapshotIdentifier: string | null | undefined, DBInstanceClass: string | null | undefined, Port: number | null | undefined, AvailabilityZone: string | null | undefined, DBSubnetGroupName: string | null | undefined, MultiAZ: boolean | null | undefined, PubliclyAccessible: boolean | null | undefined, AutoMinorVersionUpgrade: boolean | null | undefined, LicenseModel: string | null | undefined, DBName: string | null | undefined, Engine: string | null | undefined, Iops: number | null | undefined, OptionGroupName: string | null | undefined, Tags: Array<string> | null | undefined, StorageType: string | null | undefined, TdeCredentialArn: string | null | undefined, TdeCredentialPassword: string | null | undefined, VpcSecurityGroupIds: Array<string> | null | undefined, Domain: string | null | undefined, DomainFqdn: string | null | undefined, DomainOu: string | null | undefined, DomainAuthSecretArn: string | null | undefined, DomainDnsIps: Array<string> | null | undefined, CopyTagsToSnapshot: boolean | null | undefined, DomainIAMRoleName: string | null | undefined, EnableIAMDatabaseAuthentication: boolean | null | undefined, EnableCloudwatchLogsExports: Array<string> | null | undefined, ProcessorFeatures: Array<string> | null | undefined, UseDefaultProcessorFeatures: boolean | null | undefined, DBParameterGroupName: string | null | undefined, DeletionProtection: boolean | null | undefined, EnableCustomerOwnedIp: boolean | null | undefined, CustomIamInstanceProfile: string | null | undefined, BackupTarget: string | null | undefined, NetworkType: string | null | undefined, StorageThroughput: number | null | undefined, DBClusterSnapshotIdentifier: string | null | undefined, AllocatedStorage: number | null | undefined, Action: GET_RestoreDBInstanceFromDBSnapshotAction, Version: GET_AddRoleToDBClusterVersion): Observable<HttpResponse<string>> {
			return this.http.get(this.baseUri + '#Action=RestoreDBInstanceFromDBSnapshot?DBInstanceIdentifier=' + (DBInstanceIdentifier == null ? '' : encodeURIComponent(DBInstanceIdentifier)) + '&DBSnapshotIdentifier=' + (DBSnapshotIdentifier == null ? '' : encodeURIComponent(DBSnapshotIdentifier)) + '&DBInstanceClass=' + (DBInstanceClass == null ? '' : encodeURIComponent(DBInstanceClass)) + '&Port=' + Port + '&AvailabilityZone=' + (AvailabilityZone == null ? '' : encodeURIComponent(AvailabilityZone)) + '&DBSubnetGroupName=' + (DBSubnetGroupName == null ? '' : encodeURIComponent(DBSubnetGroupName)) + '&MultiAZ=' + MultiAZ + '&PubliclyAccessible=' + PubliclyAccessible + '&AutoMinorVersionUpgrade=' + AutoMinorVersionUpgrade + '&LicenseModel=' + (LicenseModel == null ? '' : encodeURIComponent(LicenseModel)) + '&DBName=' + (DBName == null ? '' : encodeURIComponent(DBName)) + '&Engine=' + (Engine == null ? '' : encodeURIComponent(Engine)) + '&Iops=' + Iops + '&OptionGroupName=' + (OptionGroupName == null ? '' : encodeURIComponent(OptionGroupName)) + '&' + Tags?.map(z => `Tags=${encodeURIComponent(z)}`).join('&') + '&StorageType=' + (StorageType == null ? '' : encodeURIComponent(StorageType)) + '&TdeCredentialArn=' + (TdeCredentialArn == null ? '' : encodeURIComponent(TdeCredentialArn)) + '&TdeCredentialPassword=' + (TdeCredentialPassword == null ? '' : encodeURIComponent(TdeCredentialPassword)) + '&' + VpcSecurityGroupIds?.map(z => `VpcSecurityGroupIds=${encodeURIComponent(z)}`).join('&') + '&Domain=' + (Domain == null ? '' : encodeURIComponent(Domain)) + '&DomainFqdn=' + (DomainFqdn == null ? '' : encodeURIComponent(DomainFqdn)) + '&DomainOu=' + (DomainOu == null ? '' : encodeURIComponent(DomainOu)) + '&DomainAuthSecretArn=' + (DomainAuthSecretArn == null ? '' : encodeURIComponent(DomainAuthSecretArn)) + '&' + DomainDnsIps?.map(z => `DomainDnsIps=${encodeURIComponent(z)}`).join('&') + '&CopyTagsToSnapshot=' + CopyTagsToSnapshot + '&DomainIAMRoleName=' + (DomainIAMRoleName == null ? '' : encodeURIComponent(DomainIAMRoleName)) + '&EnableIAMDatabaseAuthentication=' + EnableIAMDatabaseAuthentication + '&' + EnableCloudwatchLogsExports?.map(z => `EnableCloudwatchLogsExports=${encodeURIComponent(z)}`).join('&') + '&' + ProcessorFeatures?.map(z => `ProcessorFeatures=${encodeURIComponent(z)}`).join('&') + '&UseDefaultProcessorFeatures=' + UseDefaultProcessorFeatures + '&DBParameterGroupName=' + (DBParameterGroupName == null ? '' : encodeURIComponent(DBParameterGroupName)) + '&DeletionProtection=' + DeletionProtection + '&EnableCustomerOwnedIp=' + EnableCustomerOwnedIp + '&CustomIamInstanceProfile=' + (CustomIamInstanceProfile == null ? '' : encodeURIComponent(CustomIamInstanceProfile)) + '&BackupTarget=' + (BackupTarget == null ? '' : encodeURIComponent(BackupTarget)) + '&NetworkType=' + (NetworkType == null ? '' : encodeURIComponent(NetworkType)) + '&StorageThroughput=' + StorageThroughput + '&DBClusterSnapshotIdentifier=' + (DBClusterSnapshotIdentifier == null ? '' : encodeURIComponent(DBClusterSnapshotIdentifier)) + '&AllocatedStorage=' + AllocatedStorage + '&Action=' + Action + '&Version=' + Version, { observe: 'response', responseType: 'text' });
		}

		/**
		 * <p>Amazon Relational Database Service (Amazon RDS) supports importing MySQL databases by using backup files. You can create a backup of your on-premises database, store it on Amazon Simple Storage Service (Amazon S3), and then restore the backup file onto a new Amazon RDS DB instance running MySQL. For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/MySQL.Procedural.Importing.html">Importing Data into an Amazon RDS MySQL DB Instance</a> in the <i>Amazon RDS User Guide.</i> </p> <p>This command doesn't apply to RDS Custom.</p>
		 * Get #Action=RestoreDBInstanceFromS3
		 * @param {string} DBName The name of the database to create when the DB instance is created. Follow the naming rules specified in <code>CreateDBInstance</code>.
		 * @param {string} DBInstanceIdentifier <p>The DB instance identifier. This parameter is stored as a lowercase string.</p> <p>Constraints:</p> <ul> <li> <p>Must contain from 1 to 63 letters, numbers, or hyphens.</p> </li> <li> <p>First character must be a letter.</p> </li> <li> <p>Can't end with a hyphen or contain two consecutive hyphens.</p> </li> </ul> <p>Example: <code>mydbinstance</code> </p>
		 * @param {number} AllocatedStorage <p>The amount of storage (in gibibytes) to allocate initially for the DB instance. Follow the allocation rules specified in <code>CreateDBInstance</code>.</p> <note> <p>Be sure to allocate enough storage for your new DB instance so that the restore operation can succeed. You can also allocate additional storage for future growth.</p> </note>
		 * @param {string} DBInstanceClass <p>The compute and memory capacity of the DB instance, for example db.m4.large. Not all DB instance classes are available in all Amazon Web Services Regions, or for all database engines. For the full list of DB instance classes, and availability for your engine, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.DBInstanceClass.html">DB Instance Class</a> in the <i>Amazon RDS User Guide.</i> </p> <p>Importing from Amazon S3 isn't supported on the db.t2.micro DB instance class.</p>
		 * @param {string} Engine <p>The name of the database engine to be used for this instance.</p> <p>Valid Values: <code>mysql</code> </p>
		 * @param {string} MasterUsername <p>The name for the master user.</p> <p>Constraints:</p> <ul> <li> <p>Must be 1 to 16 letters or numbers.</p> </li> <li> <p>First character must be a letter.</p> </li> <li> <p>Can't be a reserved word for the chosen database engine.</p> </li> </ul>
		 * @param {string} MasterUserPassword <p>The password for the master user. The password can include any printable ASCII character except "/", """, or "@".</p> <p>Constraints: Can't be specified if <code>ManageMasterUserPassword</code> is turned on.</p> <p> <b>MariaDB</b> </p> <p>Constraints: Must contain from 8 to 41 characters.</p> <p> <b>Microsoft SQL Server</b> </p> <p>Constraints: Must contain from 8 to 128 characters.</p> <p> <b>MySQL</b> </p> <p>Constraints: Must contain from 8 to 41 characters.</p> <p> <b>Oracle</b> </p> <p>Constraints: Must contain from 8 to 30 characters.</p> <p> <b>PostgreSQL</b> </p> <p>Constraints: Must contain from 8 to 128 characters.</p>
		 * @param {Array<string>} DBSecurityGroups <p>A list of DB security groups to associate with this DB instance.</p> <p>Default: The default DB security group for the database engine.</p>
		 * @param {Array<string>} VpcSecurityGroupIds A list of VPC security groups to associate with this DB instance.
		 * @param {string} AvailabilityZone <p>The Availability Zone that the DB instance is created in. For information about Amazon Web Services Regions and Availability Zones, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html">Regions and Availability Zones</a> in the <i>Amazon RDS User Guide.</i> </p> <p>Default: A random, system-chosen Availability Zone in the endpoint's Amazon Web Services Region.</p> <p>Example: <code>us-east-1d</code> </p> <p>Constraint: The <code>AvailabilityZone</code> parameter can't be specified if the DB instance is a Multi-AZ deployment. The specified Availability Zone must be in the same Amazon Web Services Region as the current endpoint.</p>
		 * @param {string} DBSubnetGroupName <p>A DB subnet group to associate with this DB instance.</p> <p>Constraints: If supplied, must match the name of an existing DBSubnetGroup.</p> <p>Example: <code>mydbsubnetgroup</code> </p>
		 * @param {string} PreferredMaintenanceWindow <p>The time range each week during which system maintenance can occur, in Universal Coordinated Time (UTC). For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_UpgradeDBInstance.Maintenance.html#Concepts.DBMaintenance">Amazon RDS Maintenance Window</a> in the <i>Amazon RDS User Guide.</i> </p> <p>Constraints:</p> <ul> <li> <p>Must be in the format <code>ddd:hh24:mi-ddd:hh24:mi</code>.</p> </li> <li> <p>Valid Days: Mon, Tue, Wed, Thu, Fri, Sat, Sun.</p> </li> <li> <p>Must be in Universal Coordinated Time (UTC).</p> </li> <li> <p>Must not conflict with the preferred backup window.</p> </li> <li> <p>Must be at least 30 minutes.</p> </li> </ul>
		 * @param {string} DBParameterGroupName <p>The name of the DB parameter group to associate with this DB instance.</p> <p>If you do not specify a value for <code>DBParameterGroupName</code>, then the default <code>DBParameterGroup</code> for the specified DB engine is used.</p>
		 * @param {number} BackupRetentionPeriod The number of days for which automated backups are retained. Setting this parameter to a positive number enables backups. For more information, see <code>CreateDBInstance</code>.
		 * @param {string} PreferredBackupWindow <p>The time range each day during which automated backups are created if automated backups are enabled. For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_WorkingWithAutomatedBackups.html#USER_WorkingWithAutomatedBackups.BackupWindow">Backup window</a> in the <i>Amazon RDS User Guide.</i> </p> <p>Constraints:</p> <ul> <li> <p>Must be in the format <code>hh24:mi-hh24:mi</code>.</p> </li> <li> <p>Must be in Universal Coordinated Time (UTC).</p> </li> <li> <p>Must not conflict with the preferred maintenance window.</p> </li> <li> <p>Must be at least 30 minutes.</p> </li> </ul>
		 * @param {number} Port <p>The port number on which the database accepts connections.</p> <p>Type: Integer</p> <p>Valid Values: <code>1150</code>-<code>65535</code> </p> <p>Default: <code>3306</code> </p>
		 * @param {boolean} MultiAZ A value that indicates whether the DB instance is a Multi-AZ deployment. If the DB instance is a Multi-AZ deployment, you can't set the <code>AvailabilityZone</code> parameter.
		 * @param {string} EngineVersion The version number of the database engine to use. Choose the latest minor version of your database engine. For information about engine versions, see <code>CreateDBInstance</code>, or call <code>DescribeDBEngineVersions</code>.
		 * @param {boolean} AutoMinorVersionUpgrade A value that indicates whether minor engine upgrades are applied automatically to the DB instance during the maintenance window. By default, minor engine upgrades are not applied automatically.
		 * @param {string} LicenseModel The license model for this DB instance. Use <code>general-public-license</code>.
		 * @param {number} Iops The amount of Provisioned IOPS (input/output operations per second) to allocate initially for the DB instance. For information about valid IOPS values, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_Storage.html#USER_PIOPS">Amazon RDS Provisioned IOPS storage</a> in the <i>Amazon RDS User Guide.</i> 
		 * @param {string} OptionGroupName The name of the option group to associate with this DB instance. If this argument is omitted, the default option group for the specified engine is used.
		 * @param {boolean} PubliclyAccessible <p>A value that indicates whether the DB instance is publicly accessible.</p> <p>When the DB instance is publicly accessible, its Domain Name System (DNS) endpoint resolves to the private IP address from within the DB instance's virtual private cloud (VPC). It resolves to the public IP address from outside of the DB instance's VPC. Access to the DB instance is ultimately controlled by the security group it uses. That public access is not permitted if the security group assigned to the DB instance doesn't permit it.</p> <p>When the DB instance isn't publicly accessible, it is an internal DB instance with a DNS name that resolves to a private IP address.</p> <p>For more information, see <a>CreateDBInstance</a>.</p>
		 * @param {Array<string>} Tags A list of tags to associate with this DB instance. For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Tagging.html">Tagging Amazon RDS Resources</a> in the <i>Amazon RDS User Guide.</i> 
		 * @param {string} StorageType <p>Specifies the storage type to be associated with the DB instance.</p> <p>Valid values: <code>gp2 | gp3 | io1 | standard</code> </p> <p>If you specify <code>io1</code> or <code>gp3</code>, you must also include a value for the <code>Iops</code> parameter.</p> <p>Default: <code>io1</code> if the <code>Iops</code> parameter is specified; otherwise <code>gp2</code> </p>
		 * @param {boolean} StorageEncrypted A value that indicates whether the new DB instance is encrypted or not.
		 * @param {string} KmsKeyId <p>The Amazon Web Services KMS key identifier for an encrypted DB instance.</p> <p>The Amazon Web Services KMS key identifier is the key ARN, key ID, alias ARN, or alias name for the KMS key. To use a KMS key in a different Amazon Web Services account, specify the key ARN or alias ARN.</p> <p>If the <code>StorageEncrypted</code> parameter is enabled, and you do not specify a value for the <code>KmsKeyId</code> parameter, then Amazon RDS will use your default KMS key. There is a default KMS key for your Amazon Web Services account. Your Amazon Web Services account has a different default KMS key for each Amazon Web Services Region.</p>
		 * @param {boolean} CopyTagsToSnapshot A value that indicates whether to copy all tags from the DB instance to snapshots of the DB instance. By default, tags are not copied.
		 * @param {number} MonitoringInterval <p>The interval, in seconds, between points when Enhanced Monitoring metrics are collected for the DB instance. To disable collecting Enhanced Monitoring metrics, specify 0.</p> <p>If <code>MonitoringRoleArn</code> is specified, then you must also set <code>MonitoringInterval</code> to a value other than 0.</p> <p>Valid Values: 0, 1, 5, 10, 15, 30, 60</p> <p>Default: <code>0</code> </p>
		 * @param {string} MonitoringRoleArn <p>The ARN for the IAM role that permits RDS to send enhanced monitoring metrics to Amazon CloudWatch Logs. For example, <code>arn:aws:iam:123456789012:role/emaccess</code>. For information on creating a monitoring role, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Monitoring.OS.html#USER_Monitoring.OS.Enabling">Setting Up and Enabling Enhanced Monitoring</a> in the <i>Amazon RDS User Guide.</i> </p> <p>If <code>MonitoringInterval</code> is set to a value other than 0, then you must supply a <code>MonitoringRoleArn</code> value.</p>
		 * @param {boolean} EnableIAMDatabaseAuthentication <p>A value that indicates whether to enable mapping of Amazon Web Services Identity and Access Management (IAM) accounts to database accounts. By default, mapping isn't enabled.</p> <p>For more information about IAM database authentication, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/UsingWithRDS.IAMDBAuth.html"> IAM Database Authentication for MySQL and PostgreSQL</a> in the <i>Amazon RDS User Guide.</i> </p>
		 * @param {string} SourceEngine <p>The name of the engine of your source database.</p> <p>Valid Values: <code>mysql</code> </p>
		 * @param {string} SourceEngineVersion <p>The version of the database that the backup files were created from.</p> <p>MySQL versions 5.6 and 5.7 are supported.</p> <p>Example: <code>5.6.40</code> </p>
		 * @param {string} S3BucketName The name of your Amazon S3 bucket that contains your database backup file.
		 * @param {string} S3Prefix The prefix of your Amazon S3 bucket.
		 * @param {string} S3IngestionRoleArn An Amazon Web Services Identity and Access Management (IAM) role to allow Amazon RDS to access your Amazon S3 bucket.
		 * @param {boolean} EnablePerformanceInsights <p>A value that indicates whether to enable Performance Insights for the DB instance.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_PerfInsights.html">Using Amazon Performance Insights</a> in the <i>Amazon RDS User Guide</i>.</p>
		 * @param {string} PerformanceInsightsKMSKeyId <p>The Amazon Web Services KMS key identifier for encryption of Performance Insights data.</p> <p>The Amazon Web Services KMS key identifier is the key ARN, key ID, alias ARN, or alias name for the KMS key.</p> <p>If you do not specify a value for <code>PerformanceInsightsKMSKeyId</code>, then Amazon RDS uses your default KMS key. There is a default KMS key for your Amazon Web Services account. Your Amazon Web Services account has a different default KMS key for each Amazon Web Services Region.</p>
		 * @param {number} PerformanceInsightsRetentionPeriod <p>The number of days to retain Performance Insights data. The default is 7 days. The following values are valid:</p> <ul> <li> <p>7</p> </li> <li> <p> <i>month</i> * 31, where <i>month</i> is a number of months from 1-23</p> </li> <li> <p>731</p> </li> </ul> <p>For example, the following values are valid:</p> <ul> <li> <p>93 (3 months * 31)</p> </li> <li> <p>341 (11 months * 31)</p> </li> <li> <p>589 (19 months * 31)</p> </li> <li> <p>731</p> </li> </ul> <p>If you specify a retention period such as 94, which isn't a valid value, RDS issues an error.</p>
		 * @param {Array<string>} EnableCloudwatchLogsExports The list of logs that the restored DB instance is to export to CloudWatch Logs. The values in the list depend on the DB engine being used. For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_LogAccess.html#USER_LogAccess.Procedural.UploadtoCloudWatch">Publishing Database Logs to Amazon CloudWatch Logs</a> in the <i>Amazon RDS User Guide</i>.
		 * @param {Array<string>} ProcessorFeatures The number of CPU cores and the number of threads per core for the DB instance class of the DB instance.
		 * @param {boolean} UseDefaultProcessorFeatures A value that indicates whether the DB instance class of the DB instance uses its default processor features.
		 * @param {boolean} DeletionProtection A value that indicates whether the DB instance has deletion protection enabled. The database can't be deleted when deletion protection is enabled. By default, deletion protection isn't enabled. For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_DeleteInstance.html"> Deleting a DB Instance</a>.
		 * @param {number} MaxAllocatedStorage <p>The upper limit in gibibytes (GiB) to which Amazon RDS can automatically scale the storage of the DB instance.</p> <p>For more information about this setting, including limitations that apply to it, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_PIOPS.StorageTypes.html#USER_PIOPS.Autoscaling"> Managing capacity automatically with Amazon RDS storage autoscaling</a> in the <i>Amazon RDS User Guide</i>.</p>
		 * @param {string} NetworkType <p>The network type of the DB instance.</p> <p>Valid values:</p> <ul> <li> <p> <code>IPV4</code> </p> </li> <li> <p> <code>DUAL</code> </p> </li> </ul> <p>The network type is determined by the <code>DBSubnetGroup</code> specified for the DB instance. A <code>DBSubnetGroup</code> can support only the IPv4 protocol or the IPv4 and the IPv6 protocols (<code>DUAL</code>).</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_VPC.WorkingWithRDSInstanceinaVPC.html"> Working with a DB instance in a VPC</a> in the <i>Amazon RDS User Guide.</i> </p>
		 * @param {number} StorageThroughput <p>Specifies the storage throughput value for the DB instance.</p> <p>This setting doesn't apply to RDS Custom or Amazon Aurora.</p>
		 * @param {boolean} ManageMasterUserPassword <p>A value that indicates whether to manage the master user password with Amazon Web Services Secrets Manager.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/rds-secrets-manager.html">Password management with Amazon Web Services Secrets Manager</a> in the <i>Amazon RDS User Guide.</i> </p> <p>Constraints:</p> <ul> <li> <p>Can't manage the master user password with Amazon Web Services Secrets Manager if <code>MasterUserPassword</code> is specified.</p> </li> </ul>
		 * @param {string} MasterUserSecretKmsKeyId <p>The Amazon Web Services KMS key identifier to encrypt a secret that is automatically generated and managed in Amazon Web Services Secrets Manager.</p> <p>This setting is valid only if the master user password is managed by RDS in Amazon Web Services Secrets Manager for the DB instance.</p> <p>The Amazon Web Services KMS key identifier is the key ARN, key ID, alias ARN, or alias name for the KMS key. To use a KMS key in a different Amazon Web Services account, specify the key ARN or alias ARN.</p> <p>If you don't specify <code>MasterUserSecretKmsKeyId</code>, then the <code>aws/secretsmanager</code> KMS key is used to encrypt the secret. If the secret is in a different Amazon Web Services account, then you can't use the <code>aws/secretsmanager</code> KMS key to encrypt the secret, and you must use a customer managed KMS key.</p> <p>There is a default KMS key for your Amazon Web Services account. Your Amazon Web Services account has a different default KMS key for each Amazon Web Services Region.</p>
		 * @return {void} Success
		 */
		GET_RestoreDBInstanceFromS3(DBName: string | null | undefined, DBInstanceIdentifier: string, AllocatedStorage: number | null | undefined, DBInstanceClass: string, Engine: string, MasterUsername: string | null | undefined, MasterUserPassword: string | null | undefined, DBSecurityGroups: Array<string> | null | undefined, VpcSecurityGroupIds: Array<string> | null | undefined, AvailabilityZone: string | null | undefined, DBSubnetGroupName: string | null | undefined, PreferredMaintenanceWindow: string | null | undefined, DBParameterGroupName: string | null | undefined, BackupRetentionPeriod: number | null | undefined, PreferredBackupWindow: string | null | undefined, Port: number | null | undefined, MultiAZ: boolean | null | undefined, EngineVersion: string | null | undefined, AutoMinorVersionUpgrade: boolean | null | undefined, LicenseModel: string | null | undefined, Iops: number | null | undefined, OptionGroupName: string | null | undefined, PubliclyAccessible: boolean | null | undefined, Tags: Array<string> | null | undefined, StorageType: string | null | undefined, StorageEncrypted: boolean | null | undefined, KmsKeyId: string | null | undefined, CopyTagsToSnapshot: boolean | null | undefined, MonitoringInterval: number | null | undefined, MonitoringRoleArn: string | null | undefined, EnableIAMDatabaseAuthentication: boolean | null | undefined, SourceEngine: string, SourceEngineVersion: string, S3BucketName: string, S3Prefix: string | null | undefined, S3IngestionRoleArn: string, EnablePerformanceInsights: boolean | null | undefined, PerformanceInsightsKMSKeyId: string | null | undefined, PerformanceInsightsRetentionPeriod: number | null | undefined, EnableCloudwatchLogsExports: Array<string> | null | undefined, ProcessorFeatures: Array<string> | null | undefined, UseDefaultProcessorFeatures: boolean | null | undefined, DeletionProtection: boolean | null | undefined, MaxAllocatedStorage: number | null | undefined, NetworkType: string | null | undefined, StorageThroughput: number | null | undefined, ManageMasterUserPassword: boolean | null | undefined, MasterUserSecretKmsKeyId: string | null | undefined, Action: GET_RestoreDBInstanceFromS3Action, Version: GET_AddRoleToDBClusterVersion): Observable<HttpResponse<string>> {
			return this.http.get(this.baseUri + '#Action=RestoreDBInstanceFromS3?DBName=' + (DBName == null ? '' : encodeURIComponent(DBName)) + '&DBInstanceIdentifier=' + (DBInstanceIdentifier == null ? '' : encodeURIComponent(DBInstanceIdentifier)) + '&AllocatedStorage=' + AllocatedStorage + '&DBInstanceClass=' + (DBInstanceClass == null ? '' : encodeURIComponent(DBInstanceClass)) + '&Engine=' + (Engine == null ? '' : encodeURIComponent(Engine)) + '&MasterUsername=' + (MasterUsername == null ? '' : encodeURIComponent(MasterUsername)) + '&MasterUserPassword=' + (MasterUserPassword == null ? '' : encodeURIComponent(MasterUserPassword)) + '&' + DBSecurityGroups?.map(z => `DBSecurityGroups=${encodeURIComponent(z)}`).join('&') + '&' + VpcSecurityGroupIds?.map(z => `VpcSecurityGroupIds=${encodeURIComponent(z)}`).join('&') + '&AvailabilityZone=' + (AvailabilityZone == null ? '' : encodeURIComponent(AvailabilityZone)) + '&DBSubnetGroupName=' + (DBSubnetGroupName == null ? '' : encodeURIComponent(DBSubnetGroupName)) + '&PreferredMaintenanceWindow=' + (PreferredMaintenanceWindow == null ? '' : encodeURIComponent(PreferredMaintenanceWindow)) + '&DBParameterGroupName=' + (DBParameterGroupName == null ? '' : encodeURIComponent(DBParameterGroupName)) + '&BackupRetentionPeriod=' + BackupRetentionPeriod + '&PreferredBackupWindow=' + (PreferredBackupWindow == null ? '' : encodeURIComponent(PreferredBackupWindow)) + '&Port=' + Port + '&MultiAZ=' + MultiAZ + '&EngineVersion=' + (EngineVersion == null ? '' : encodeURIComponent(EngineVersion)) + '&AutoMinorVersionUpgrade=' + AutoMinorVersionUpgrade + '&LicenseModel=' + (LicenseModel == null ? '' : encodeURIComponent(LicenseModel)) + '&Iops=' + Iops + '&OptionGroupName=' + (OptionGroupName == null ? '' : encodeURIComponent(OptionGroupName)) + '&PubliclyAccessible=' + PubliclyAccessible + '&' + Tags?.map(z => `Tags=${encodeURIComponent(z)}`).join('&') + '&StorageType=' + (StorageType == null ? '' : encodeURIComponent(StorageType)) + '&StorageEncrypted=' + StorageEncrypted + '&KmsKeyId=' + (KmsKeyId == null ? '' : encodeURIComponent(KmsKeyId)) + '&CopyTagsToSnapshot=' + CopyTagsToSnapshot + '&MonitoringInterval=' + MonitoringInterval + '&MonitoringRoleArn=' + (MonitoringRoleArn == null ? '' : encodeURIComponent(MonitoringRoleArn)) + '&EnableIAMDatabaseAuthentication=' + EnableIAMDatabaseAuthentication + '&SourceEngine=' + (SourceEngine == null ? '' : encodeURIComponent(SourceEngine)) + '&SourceEngineVersion=' + (SourceEngineVersion == null ? '' : encodeURIComponent(SourceEngineVersion)) + '&S3BucketName=' + (S3BucketName == null ? '' : encodeURIComponent(S3BucketName)) + '&S3Prefix=' + (S3Prefix == null ? '' : encodeURIComponent(S3Prefix)) + '&S3IngestionRoleArn=' + (S3IngestionRoleArn == null ? '' : encodeURIComponent(S3IngestionRoleArn)) + '&EnablePerformanceInsights=' + EnablePerformanceInsights + '&PerformanceInsightsKMSKeyId=' + (PerformanceInsightsKMSKeyId == null ? '' : encodeURIComponent(PerformanceInsightsKMSKeyId)) + '&PerformanceInsightsRetentionPeriod=' + PerformanceInsightsRetentionPeriod + '&' + EnableCloudwatchLogsExports?.map(z => `EnableCloudwatchLogsExports=${encodeURIComponent(z)}`).join('&') + '&' + ProcessorFeatures?.map(z => `ProcessorFeatures=${encodeURIComponent(z)}`).join('&') + '&UseDefaultProcessorFeatures=' + UseDefaultProcessorFeatures + '&DeletionProtection=' + DeletionProtection + '&MaxAllocatedStorage=' + MaxAllocatedStorage + '&NetworkType=' + (NetworkType == null ? '' : encodeURIComponent(NetworkType)) + '&StorageThroughput=' + StorageThroughput + '&ManageMasterUserPassword=' + ManageMasterUserPassword + '&MasterUserSecretKmsKeyId=' + (MasterUserSecretKmsKeyId == null ? '' : encodeURIComponent(MasterUserSecretKmsKeyId)) + '&Action=' + Action + '&Version=' + Version, { observe: 'response', responseType: 'text' });
		}

		/**
		 * <p>Restores a DB instance to an arbitrary point in time. You can restore to any point in time before the time identified by the LatestRestorableTime property. You can restore to a point up to the number of days specified by the BackupRetentionPeriod property.</p> <p>The target database is created with most of the original configuration, but in a system-selected Availability Zone, with the default security group, the default subnet group, and the default DB parameter group. By default, the new DB instance is created as a single-AZ deployment except when the instance is a SQL Server instance that has an option group that is associated with mirroring; in this case, the instance becomes a mirrored deployment and not a single-AZ deployment.</p> <note> <p>This command doesn't apply to Aurora MySQL and Aurora PostgreSQL. For Aurora, use <code>RestoreDBClusterToPointInTime</code>.</p> </note>
		 * Get #Action=RestoreDBInstanceToPointInTime
		 * @param {string} SourceDBInstanceIdentifier <p>The identifier of the source DB instance from which to restore.</p> <p>Constraints:</p> <ul> <li> <p>Must match the identifier of an existing DB instance.</p> </li> </ul>
		 * @param {string} TargetDBInstanceIdentifier <p>The name of the new DB instance to be created.</p> <p>Constraints:</p> <ul> <li> <p>Must contain from 1 to 63 letters, numbers, or hyphens</p> </li> <li> <p>First character must be a letter</p> </li> <li> <p>Can't end with a hyphen or contain two consecutive hyphens</p> </li> </ul>
		 * @param {Date} RestoreTime <p>The date and time to restore from.</p> <p>Valid Values: Value must be a time in Universal Coordinated Time (UTC) format</p> <p>Constraints:</p> <ul> <li> <p>Must be before the latest restorable time for the DB instance</p> </li> <li> <p>Can't be specified if the <code>UseLatestRestorableTime</code> parameter is enabled</p> </li> </ul> <p>Example: <code>2009-09-07T23:45:00Z</code> </p>
		 * @param {boolean} UseLatestRestorableTime <p>A value that indicates whether the DB instance is restored from the latest backup time. By default, the DB instance isn't restored from the latest backup time.</p> <p>Constraints: Can't be specified if the <code>RestoreTime</code> parameter is provided.</p>
		 * @param {string} DBInstanceClass <p>The compute and memory capacity of the Amazon RDS DB instance, for example db.m4.large. Not all DB instance classes are available in all Amazon Web Services Regions, or for all database engines. For the full list of DB instance classes, and availability for your engine, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.DBInstanceClass.html">DB Instance Class</a> in the <i>Amazon RDS User Guide</i>.</p> <p>Default: The same DBInstanceClass as the original DB instance.</p>
		 * @param {number} Port <p>The port number on which the database accepts connections.</p> <p>Constraints: Value must be <code>1150-65535</code> </p> <p>Default: The same port as the original DB instance.</p>
		 * @param {string} AvailabilityZone <p>The Availability Zone (AZ) where the DB instance will be created.</p> <p>Default: A random, system-chosen Availability Zone.</p> <p>Constraint: You can't specify the <code>AvailabilityZone</code> parameter if the DB instance is a Multi-AZ deployment.</p> <p>Example: <code>us-east-1a</code> </p>
		 * @param {string} DBSubnetGroupName <p>The DB subnet group name to use for the new instance.</p> <p>Constraints: If supplied, must match the name of an existing DBSubnetGroup.</p> <p>Example: <code>mydbsubnetgroup</code> </p>
		 * @param {boolean} MultiAZ <p>A value that indicates whether the DB instance is a Multi-AZ deployment.</p> <p>This setting doesn't apply to RDS Custom.</p> <p>Constraint: You can't specify the <code>AvailabilityZone</code> parameter if the DB instance is a Multi-AZ deployment.</p>
		 * @param {boolean} PubliclyAccessible <p>A value that indicates whether the DB instance is publicly accessible.</p> <p>When the DB cluster is publicly accessible, its Domain Name System (DNS) endpoint resolves to the private IP address from within the DB cluster's virtual private cloud (VPC). It resolves to the public IP address from outside of the DB cluster's VPC. Access to the DB cluster is ultimately controlled by the security group it uses. That public access isn't permitted if the security group assigned to the DB cluster doesn't permit it.</p> <p>When the DB instance isn't publicly accessible, it is an internal DB instance with a DNS name that resolves to a private IP address.</p> <p>For more information, see <a>CreateDBInstance</a>.</p>
		 * @param {boolean} AutoMinorVersionUpgrade <p>A value that indicates whether minor version upgrades are applied automatically to the DB instance during the maintenance window.</p> <p>This setting doesn't apply to RDS Custom.</p>
		 * @param {string} LicenseModel <p>License model information for the restored DB instance.</p> <p>This setting doesn't apply to RDS Custom.</p> <p>Default: Same as source.</p> <p>Valid values: <code>license-included</code> | <code>bring-your-own-license</code> | <code>general-public-license</code> </p>
		 * @param {string} DBName <p>The database name for the restored DB instance.</p> <note> <p>This parameter isn't supported for the MySQL or MariaDB engines. It also doesn't apply to RDS Custom.</p> </note>
		 * @param {string} Engine <p>The database engine to use for the new instance.</p> <p>This setting doesn't apply to RDS Custom.</p> <p>Default: The same as source</p> <p>Constraint: Must be compatible with the engine of the source</p> <p>Valid Values:</p> <ul> <li> <p> <code>mariadb</code> </p> </li> <li> <p> <code>mysql</code> </p> </li> <li> <p> <code>oracle-ee</code> </p> </li> <li> <p> <code>oracle-ee-cdb</code> </p> </li> <li> <p> <code>oracle-se2</code> </p> </li> <li> <p> <code>oracle-se2-cdb</code> </p> </li> <li> <p> <code>postgres</code> </p> </li> <li> <p> <code>sqlserver-ee</code> </p> </li> <li> <p> <code>sqlserver-se</code> </p> </li> <li> <p> <code>sqlserver-ex</code> </p> </li> <li> <p> <code>sqlserver-web</code> </p> </li> </ul>
		 * @param {number} Iops <p>The amount of Provisioned IOPS (input/output operations per second) to be initially allocated for the DB instance.</p> <p>Constraints: Must be an integer greater than 1000.</p> <p> <b>SQL Server</b> </p> <p>Setting the IOPS value for the SQL Server database engine isn't supported.</p>
		 * @param {string} OptionGroupName <p>The name of the option group to be used for the restored DB instance.</p> <p>Permanent options, such as the TDE option for Oracle Advanced Security TDE, can't be removed from an option group, and that option group can't be removed from a DB instance after it is associated with a DB instance</p> <p>This setting doesn't apply to RDS Custom.</p>
		 * @param {boolean} CopyTagsToSnapshot A value that indicates whether to copy all tags from the restored DB instance to snapshots of the DB instance. By default, tags are not copied.
		 * @param {string} StorageType <p>Specifies the storage type to be associated with the DB instance.</p> <p>Valid values: <code>gp2 | gp3 | io1 | standard</code> </p> <p>If you specify <code>io1</code> or <code>gp3</code>, you must also include a value for the <code>Iops</code> parameter.</p> <p>Default: <code>io1</code> if the <code>Iops</code> parameter is specified, otherwise <code>gp2</code> </p>
		 * @param {string} TdeCredentialArn <p>The ARN from the key store with which to associate the instance for TDE encryption.</p> <p>This setting doesn't apply to RDS Custom.</p>
		 * @param {string} TdeCredentialPassword <p>The password for the given ARN from the key store in order to access the device.</p> <p>This setting doesn't apply to RDS Custom.</p>
		 * @param {Array<string>} VpcSecurityGroupIds <p>A list of EC2 VPC security groups to associate with this DB instance.</p> <p>Default: The default EC2 VPC security group for the DB subnet group's VPC.</p>
		 * @param {string} Domain <p>Specify the Active Directory directory ID to restore the DB instance in. Create the domain before running this command. Currently, you can create only the MySQL, Microsoft SQL Server, Oracle, and PostgreSQL DB instances in an Active Directory Domain.</p> <p>This setting doesn't apply to RDS Custom.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/kerberos-authentication.html"> Kerberos Authentication</a> in the <i>Amazon RDS User Guide</i>.</p>
		 * @param {string} DomainIAMRoleName <p>The name of the IAM role to use when making API calls to the Directory Service.</p> <p>This setting doesn't apply to RDS Custom DB instances.</p>
		 * @param {string} DomainFqdn <p>The fully qualified domain name (FQDN) of an Active Directory domain.</p> <p>Constraints:</p> <ul> <li> <p>Can't be longer than 64 characters.</p> </li> </ul> <p>Example: <code>mymanagedADtest.mymanagedAD.mydomain</code> </p>
		 * @param {string} DomainOu <p>The Active Directory organizational unit for your DB instance to join.</p> <p>Constraints:</p> <ul> <li> <p>Must be in the distinguished name format.</p> </li> <li> <p>Can't be longer than 64 characters.</p> </li> </ul> <p>Example: <code>OU=mymanagedADtestOU,DC=mymanagedADtest,DC=mymanagedAD,DC=mydomain</code> </p>
		 * @param {string} DomainAuthSecretArn <p>The ARN for the Secrets Manager secret with the credentials for the user joining the domain.</p> <p>Constraints:</p> <ul> <li> <p>Can't be longer than 64 characters.</p> </li> </ul> <p>Example: <code>arn:aws:secretsmanager:region:account-number:secret:myselfmanagedADtestsecret-123456</code> </p>
		 * @param {Array<string>} DomainDnsIps <p>The IPv4 DNS IP addresses of your primary and secondary Active Directory domain controllers.</p> <p>Constraints:</p> <ul> <li> <p>Two IP addresses must be provided. If there isn't a secondary domain controller, use the IP address of the primary domain controller for both entries in the list.</p> </li> </ul> <p>Example: <code>123.124.125.126,234.235.236.237</code> </p>
		 * @param {boolean} EnableIAMDatabaseAuthentication <p>A value that indicates whether to enable mapping of Amazon Web Services Identity and Access Management (IAM) accounts to database accounts. By default, mapping isn't enabled.</p> <p>This setting doesn't apply to RDS Custom.</p> <p>For more information about IAM database authentication, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/UsingWithRDS.IAMDBAuth.html"> IAM Database Authentication for MySQL and PostgreSQL</a> in the <i>Amazon RDS User Guide.</i> </p>
		 * @param {Array<string>} EnableCloudwatchLogsExports <p>The list of logs that the restored DB instance is to export to CloudWatch Logs. The values in the list depend on the DB engine being used. For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_LogAccess.html#USER_LogAccess.Procedural.UploadtoCloudWatch">Publishing Database Logs to Amazon CloudWatch Logs</a> in the <i>Amazon RDS User Guide</i>.</p> <p>This setting doesn't apply to RDS Custom.</p>
		 * @param {Array<string>} ProcessorFeatures <p>The number of CPU cores and the number of threads per core for the DB instance class of the DB instance.</p> <p>This setting doesn't apply to RDS Custom.</p>
		 * @param {boolean} UseDefaultProcessorFeatures <p>A value that indicates whether the DB instance class of the DB instance uses its default processor features.</p> <p>This setting doesn't apply to RDS Custom.</p>
		 * @param {string} DBParameterGroupName <p>The name of the DB parameter group to associate with this DB instance.</p> <p>If you do not specify a value for <code>DBParameterGroupName</code>, then the default <code>DBParameterGroup</code> for the specified DB engine is used.</p> <p>This setting doesn't apply to RDS Custom.</p> <p>Constraints:</p> <ul> <li> <p>If supplied, must match the name of an existing DBParameterGroup.</p> </li> <li> <p>Must be 1 to 255 letters, numbers, or hyphens.</p> </li> <li> <p>First character must be a letter.</p> </li> <li> <p>Can't end with a hyphen or contain two consecutive hyphens.</p> </li> </ul>
		 * @param {boolean} DeletionProtection A value that indicates whether the DB instance has deletion protection enabled. The database can't be deleted when deletion protection is enabled. By default, deletion protection isn't enabled. For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_DeleteInstance.html"> Deleting a DB Instance</a>.
		 * @param {string} SourceDbiResourceId The resource ID of the source DB instance from which to restore.
		 * @param {number} MaxAllocatedStorage <p>The upper limit in gibibytes (GiB) to which Amazon RDS can automatically scale the storage of the DB instance.</p> <p>For more information about this setting, including limitations that apply to it, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_PIOPS.StorageTypes.html#USER_PIOPS.Autoscaling"> Managing capacity automatically with Amazon RDS storage autoscaling</a> in the <i>Amazon RDS User Guide</i>.</p> <p>This setting doesn't apply to RDS Custom.</p>
		 * @param {string} SourceDBInstanceAutomatedBackupsArn <p>The Amazon Resource Name (ARN) of the replicated automated backups from which to restore, for example, <code>arn:aws:rds:useast-1:123456789012:auto-backup:ab-L2IJCEXJP7XQ7HOJ4SIEXAMPLE</code>.</p> <p>This setting doesn't apply to RDS Custom.</p>
		 * @param {boolean} EnableCustomerOwnedIp <p>A value that indicates whether to enable a customer-owned IP address (CoIP) for an RDS on Outposts DB instance.</p> <p>A <i>CoIP</i> provides local or external connectivity to resources in your Outpost subnets through your on-premises network. For some use cases, a CoIP can provide lower latency for connections to the DB instance from outside of its virtual private cloud (VPC) on your local network.</p> <p>This setting doesn't apply to RDS Custom.</p> <p>For more information about RDS on Outposts, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/rds-on-outposts.html">Working with Amazon RDS on Amazon Web Services Outposts</a> in the <i>Amazon RDS User Guide</i>.</p> <p>For more information about CoIPs, see <a href="https://docs.aws.amazon.com/outposts/latest/userguide/routing.html#ip-addressing">Customer-owned IP addresses</a> in the <i>Amazon Web Services Outposts User Guide</i>.</p>
		 * @param {string} CustomIamInstanceProfile <p>The instance profile associated with the underlying Amazon EC2 instance of an RDS Custom DB instance. The instance profile must meet the following requirements:</p> <ul> <li> <p>The profile must exist in your account.</p> </li> <li> <p>The profile must have an IAM role that Amazon EC2 has permissions to assume.</p> </li> <li> <p>The instance profile name and the associated IAM role name must start with the prefix <code>AWSRDSCustom</code>.</p> </li> </ul> <p>For the list of permissions required for the IAM role, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/custom-setup-orcl.html#custom-setup-orcl.iam-vpc"> Configure IAM and your VPC</a> in the <i>Amazon RDS User Guide</i>.</p> <p>This setting is required for RDS Custom.</p>
		 * @param {string} BackupTarget <p>Specifies where automated backups and manual snapshots are stored for the restored DB instance.</p> <p>Possible values are <code>outposts</code> (Amazon Web Services Outposts) and <code>region</code> (Amazon Web Services Region). The default is <code>region</code>.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/rds-on-outposts.html">Working with Amazon RDS on Amazon Web Services Outposts</a> in the <i>Amazon RDS User Guide</i>.</p>
		 * @param {string} NetworkType <p>The network type of the DB instance.</p> <p>Valid values:</p> <ul> <li> <p> <code>IPV4</code> </p> </li> <li> <p> <code>DUAL</code> </p> </li> </ul> <p>The network type is determined by the <code>DBSubnetGroup</code> specified for the DB instance. A <code>DBSubnetGroup</code> can support only the IPv4 protocol or the IPv4 and the IPv6 protocols (<code>DUAL</code>).</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_VPC.WorkingWithRDSInstanceinaVPC.html"> Working with a DB instance in a VPC</a> in the <i>Amazon RDS User Guide.</i> </p>
		 * @param {number} StorageThroughput <p>Specifies the storage throughput value for the DB instance.</p> <p>This setting doesn't apply to RDS Custom or Amazon Aurora.</p>
		 * @param {number} AllocatedStorage <p>The amount of storage (in gibibytes) to allocate initially for the DB instance. Follow the allocation rules specified in <code>CreateDBInstance</code>.</p> <note> <p>Be sure to allocate enough storage for your new DB instance so that the restore operation can succeed. You can also allocate additional storage for future growth.</p> </note>
		 * @return {void} Success
		 */
		GET_RestoreDBInstanceToPointInTime(SourceDBInstanceIdentifier: string | null | undefined, TargetDBInstanceIdentifier: string, RestoreTime: Date | null | undefined, UseLatestRestorableTime: boolean | null | undefined, DBInstanceClass: string | null | undefined, Port: number | null | undefined, AvailabilityZone: string | null | undefined, DBSubnetGroupName: string | null | undefined, MultiAZ: boolean | null | undefined, PubliclyAccessible: boolean | null | undefined, AutoMinorVersionUpgrade: boolean | null | undefined, LicenseModel: string | null | undefined, DBName: string | null | undefined, Engine: string | null | undefined, Iops: number | null | undefined, OptionGroupName: string | null | undefined, CopyTagsToSnapshot: boolean | null | undefined, Tags: Array<string> | null | undefined, StorageType: string | null | undefined, TdeCredentialArn: string | null | undefined, TdeCredentialPassword: string | null | undefined, VpcSecurityGroupIds: Array<string> | null | undefined, Domain: string | null | undefined, DomainIAMRoleName: string | null | undefined, DomainFqdn: string | null | undefined, DomainOu: string | null | undefined, DomainAuthSecretArn: string | null | undefined, DomainDnsIps: Array<string> | null | undefined, EnableIAMDatabaseAuthentication: boolean | null | undefined, EnableCloudwatchLogsExports: Array<string> | null | undefined, ProcessorFeatures: Array<string> | null | undefined, UseDefaultProcessorFeatures: boolean | null | undefined, DBParameterGroupName: string | null | undefined, DeletionProtection: boolean | null | undefined, SourceDbiResourceId: string | null | undefined, MaxAllocatedStorage: number | null | undefined, SourceDBInstanceAutomatedBackupsArn: string | null | undefined, EnableCustomerOwnedIp: boolean | null | undefined, CustomIamInstanceProfile: string | null | undefined, BackupTarget: string | null | undefined, NetworkType: string | null | undefined, StorageThroughput: number | null | undefined, AllocatedStorage: number | null | undefined, Action: GET_RestoreDBInstanceToPointInTimeAction, Version: GET_AddRoleToDBClusterVersion): Observable<HttpResponse<string>> {
			return this.http.get(this.baseUri + '#Action=RestoreDBInstanceToPointInTime?SourceDBInstanceIdentifier=' + (SourceDBInstanceIdentifier == null ? '' : encodeURIComponent(SourceDBInstanceIdentifier)) + '&TargetDBInstanceIdentifier=' + (TargetDBInstanceIdentifier == null ? '' : encodeURIComponent(TargetDBInstanceIdentifier)) + '&RestoreTime=' + RestoreTime?.toISOString() + '&UseLatestRestorableTime=' + UseLatestRestorableTime + '&DBInstanceClass=' + (DBInstanceClass == null ? '' : encodeURIComponent(DBInstanceClass)) + '&Port=' + Port + '&AvailabilityZone=' + (AvailabilityZone == null ? '' : encodeURIComponent(AvailabilityZone)) + '&DBSubnetGroupName=' + (DBSubnetGroupName == null ? '' : encodeURIComponent(DBSubnetGroupName)) + '&MultiAZ=' + MultiAZ + '&PubliclyAccessible=' + PubliclyAccessible + '&AutoMinorVersionUpgrade=' + AutoMinorVersionUpgrade + '&LicenseModel=' + (LicenseModel == null ? '' : encodeURIComponent(LicenseModel)) + '&DBName=' + (DBName == null ? '' : encodeURIComponent(DBName)) + '&Engine=' + (Engine == null ? '' : encodeURIComponent(Engine)) + '&Iops=' + Iops + '&OptionGroupName=' + (OptionGroupName == null ? '' : encodeURIComponent(OptionGroupName)) + '&CopyTagsToSnapshot=' + CopyTagsToSnapshot + '&' + Tags?.map(z => `Tags=${encodeURIComponent(z)}`).join('&') + '&StorageType=' + (StorageType == null ? '' : encodeURIComponent(StorageType)) + '&TdeCredentialArn=' + (TdeCredentialArn == null ? '' : encodeURIComponent(TdeCredentialArn)) + '&TdeCredentialPassword=' + (TdeCredentialPassword == null ? '' : encodeURIComponent(TdeCredentialPassword)) + '&' + VpcSecurityGroupIds?.map(z => `VpcSecurityGroupIds=${encodeURIComponent(z)}`).join('&') + '&Domain=' + (Domain == null ? '' : encodeURIComponent(Domain)) + '&DomainIAMRoleName=' + (DomainIAMRoleName == null ? '' : encodeURIComponent(DomainIAMRoleName)) + '&DomainFqdn=' + (DomainFqdn == null ? '' : encodeURIComponent(DomainFqdn)) + '&DomainOu=' + (DomainOu == null ? '' : encodeURIComponent(DomainOu)) + '&DomainAuthSecretArn=' + (DomainAuthSecretArn == null ? '' : encodeURIComponent(DomainAuthSecretArn)) + '&' + DomainDnsIps?.map(z => `DomainDnsIps=${encodeURIComponent(z)}`).join('&') + '&EnableIAMDatabaseAuthentication=' + EnableIAMDatabaseAuthentication + '&' + EnableCloudwatchLogsExports?.map(z => `EnableCloudwatchLogsExports=${encodeURIComponent(z)}`).join('&') + '&' + ProcessorFeatures?.map(z => `ProcessorFeatures=${encodeURIComponent(z)}`).join('&') + '&UseDefaultProcessorFeatures=' + UseDefaultProcessorFeatures + '&DBParameterGroupName=' + (DBParameterGroupName == null ? '' : encodeURIComponent(DBParameterGroupName)) + '&DeletionProtection=' + DeletionProtection + '&SourceDbiResourceId=' + (SourceDbiResourceId == null ? '' : encodeURIComponent(SourceDbiResourceId)) + '&MaxAllocatedStorage=' + MaxAllocatedStorage + '&SourceDBInstanceAutomatedBackupsArn=' + (SourceDBInstanceAutomatedBackupsArn == null ? '' : encodeURIComponent(SourceDBInstanceAutomatedBackupsArn)) + '&EnableCustomerOwnedIp=' + EnableCustomerOwnedIp + '&CustomIamInstanceProfile=' + (CustomIamInstanceProfile == null ? '' : encodeURIComponent(CustomIamInstanceProfile)) + '&BackupTarget=' + (BackupTarget == null ? '' : encodeURIComponent(BackupTarget)) + '&NetworkType=' + (NetworkType == null ? '' : encodeURIComponent(NetworkType)) + '&StorageThroughput=' + StorageThroughput + '&AllocatedStorage=' + AllocatedStorage + '&Action=' + Action + '&Version=' + Version, { observe: 'response', responseType: 'text' });
		}

		/**
		 * <p>Revokes ingress from a DBSecurityGroup for previously authorized IP ranges or EC2 or VPC security groups. Required parameters for this API are one of CIDRIP, EC2SecurityGroupId for VPC, or (EC2SecurityGroupOwnerId and either EC2SecurityGroupName or EC2SecurityGroupId).</p> <note> <p>EC2-Classic was retired on August 15, 2022. If you haven't migrated from EC2-Classic to a VPC, we recommend that you migrate as soon as possible. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/vpc-migrate.html">Migrate from EC2-Classic to a VPC</a> in the <i>Amazon EC2 User Guide</i>, the blog <a href="http://aws.amazon.com/blogs/aws/ec2-classic-is-retiring-heres-how-to-prepare/">EC2-Classic Networking is Retiring – Here’s How to Prepare</a>, and <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_VPC.Non-VPC2VPC.html">Moving a DB instance not in a VPC into a VPC</a> in the <i>Amazon RDS User Guide</i>.</p> </note>
		 * Get #Action=RevokeDBSecurityGroupIngress
		 * @param {string} DBSecurityGroupName The name of the DB security group to revoke ingress from.
		 * @param {string} CIDRIP The IP range to revoke access from. Must be a valid CIDR range. If <code>CIDRIP</code> is specified, <code>EC2SecurityGroupName</code>, <code>EC2SecurityGroupId</code> and <code>EC2SecurityGroupOwnerId</code> can't be provided.
		 * @param {string} EC2SecurityGroupName The name of the EC2 security group to revoke access from. For VPC DB security groups, <code>EC2SecurityGroupId</code> must be provided. Otherwise, EC2SecurityGroupOwnerId and either <code>EC2SecurityGroupName</code> or <code>EC2SecurityGroupId</code> must be provided.
		 * @param {string} EC2SecurityGroupId The id of the EC2 security group to revoke access from. For VPC DB security groups, <code>EC2SecurityGroupId</code> must be provided. Otherwise, EC2SecurityGroupOwnerId and either <code>EC2SecurityGroupName</code> or <code>EC2SecurityGroupId</code> must be provided.
		 * @param {string} EC2SecurityGroupOwnerId The Amazon Web Services account number of the owner of the EC2 security group specified in the <code>EC2SecurityGroupName</code> parameter. The Amazon Web Services access key ID isn't an acceptable value. For VPC DB security groups, <code>EC2SecurityGroupId</code> must be provided. Otherwise, EC2SecurityGroupOwnerId and either <code>EC2SecurityGroupName</code> or <code>EC2SecurityGroupId</code> must be provided.
		 * @return {void} Success
		 */
		GET_RevokeDBSecurityGroupIngress(DBSecurityGroupName: string, CIDRIP: string | null | undefined, EC2SecurityGroupName: string | null | undefined, EC2SecurityGroupId: string | null | undefined, EC2SecurityGroupOwnerId: string | null | undefined, Action: GET_RevokeDBSecurityGroupIngressAction, Version: GET_AddRoleToDBClusterVersion): Observable<HttpResponse<string>> {
			return this.http.get(this.baseUri + '#Action=RevokeDBSecurityGroupIngress?DBSecurityGroupName=' + (DBSecurityGroupName == null ? '' : encodeURIComponent(DBSecurityGroupName)) + '&CIDRIP=' + (CIDRIP == null ? '' : encodeURIComponent(CIDRIP)) + '&EC2SecurityGroupName=' + (EC2SecurityGroupName == null ? '' : encodeURIComponent(EC2SecurityGroupName)) + '&EC2SecurityGroupId=' + (EC2SecurityGroupId == null ? '' : encodeURIComponent(EC2SecurityGroupId)) + '&EC2SecurityGroupOwnerId=' + (EC2SecurityGroupOwnerId == null ? '' : encodeURIComponent(EC2SecurityGroupOwnerId)) + '&Action=' + Action + '&Version=' + Version, { observe: 'response', responseType: 'text' });
		}

		/**
		 * Starts a database activity stream to monitor activity on the database. For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/DBActivityStreams.html"> Monitoring Amazon Aurora with Database Activity Streams</a> in the <i>Amazon Aurora User Guide</i> or <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/DBActivityStreams.html"> Monitoring Amazon RDS with Database Activity Streams</a> in the <i>Amazon RDS User Guide</i>.
		 * Get #Action=StartActivityStream
		 * @param {string} ResourceArn The Amazon Resource Name (ARN) of the DB cluster, for example, <code>arn:aws:rds:us-east-1:12345667890:cluster:das-cluster</code>.
		 * @param {ActivityStreamMode} Mode Specifies the mode of the database activity stream. Database events such as a change or access generate an activity stream event. The database session can handle these events either synchronously or asynchronously.
		 * @param {string} KmsKeyId The Amazon Web Services KMS key identifier for encrypting messages in the database activity stream. The Amazon Web Services KMS key identifier is the key ARN, key ID, alias ARN, or alias name for the KMS key.
		 * @param {boolean} ApplyImmediately Specifies whether or not the database activity stream is to start as soon as possible, regardless of the maintenance window for the database.
		 * @param {boolean} EngineNativeAuditFieldsIncluded Specifies whether the database activity stream includes engine-native audit fields. This option applies to an Oracle or Microsoft SQL Server DB instance. By default, no engine-native audit fields are included.
		 * @return {void} Success
		 */
		GET_StartActivityStream(ResourceArn: string, Mode: ActivityStreamMode, KmsKeyId: string, ApplyImmediately: boolean | null | undefined, EngineNativeAuditFieldsIncluded: boolean | null | undefined, Action: GET_StartActivityStreamAction, Version: GET_AddRoleToDBClusterVersion): Observable<HttpResponse<string>> {
			return this.http.get(this.baseUri + '#Action=StartActivityStream?ResourceArn=' + (ResourceArn == null ? '' : encodeURIComponent(ResourceArn)) + '&Mode=' + Mode + '&KmsKeyId=' + (KmsKeyId == null ? '' : encodeURIComponent(KmsKeyId)) + '&ApplyImmediately=' + ApplyImmediately + '&EngineNativeAuditFieldsIncluded=' + EngineNativeAuditFieldsIncluded + '&Action=' + Action + '&Version=' + Version, { observe: 'response', responseType: 'text' });
		}

		/**
		 * <p>Starts an Amazon Aurora DB cluster that was stopped using the Amazon Web Services console, the stop-db-cluster CLI command, or the StopDBCluster action.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-cluster-stop-start.html"> Stopping and Starting an Aurora Cluster</a> in the <i>Amazon Aurora User Guide</i>.</p> <note> <p>This action only applies to Aurora DB clusters.</p> </note>
		 * Get #Action=StartDBCluster
		 * @param {string} DBClusterIdentifier The DB cluster identifier of the Amazon Aurora DB cluster to be started. This parameter is stored as a lowercase string.
		 * @return {void} Success
		 */
		GET_StartDBCluster(DBClusterIdentifier: string, Action: GET_StartDBClusterAction, Version: GET_AddRoleToDBClusterVersion): Observable<HttpResponse<string>> {
			return this.http.get(this.baseUri + '#Action=StartDBCluster?DBClusterIdentifier=' + (DBClusterIdentifier == null ? '' : encodeURIComponent(DBClusterIdentifier)) + '&Action=' + Action + '&Version=' + Version, { observe: 'response', responseType: 'text' });
		}

		/**
		 * <p>Starts an Amazon RDS DB instance that was stopped using the Amazon Web Services console, the stop-db-instance CLI command, or the StopDBInstance action.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_StartInstance.html"> Starting an Amazon RDS DB instance That Was Previously Stopped</a> in the <i>Amazon RDS User Guide.</i> </p> <note> <p>This command doesn't apply to RDS Custom, Aurora MySQL, and Aurora PostgreSQL. For Aurora DB clusters, use <code>StartDBCluster</code> instead.</p> </note>
		 * Get #Action=StartDBInstance
		 * @param {string} DBInstanceIdentifier The user-supplied instance identifier.
		 * @return {void} Success
		 */
		GET_StartDBInstance(DBInstanceIdentifier: string, Action: GET_StartDBInstanceAction, Version: GET_AddRoleToDBClusterVersion): Observable<HttpResponse<string>> {
			return this.http.get(this.baseUri + '#Action=StartDBInstance?DBInstanceIdentifier=' + (DBInstanceIdentifier == null ? '' : encodeURIComponent(DBInstanceIdentifier)) + '&Action=' + Action + '&Version=' + Version, { observe: 'response', responseType: 'text' });
		}

		/**
		 * <p>Enables replication of automated backups to a different Amazon Web Services Region.</p> <p>This command doesn't apply to RDS Custom.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_ReplicateBackups.html"> Replicating Automated Backups to Another Amazon Web Services Region</a> in the <i>Amazon RDS User Guide.</i> </p>
		 * Get #Action=StartDBInstanceAutomatedBackupsReplication
		 * @param {string} SourceDBInstanceArn The Amazon Resource Name (ARN) of the source DB instance for the replicated automated backups, for example, <code>arn:aws:rds:us-west-2:123456789012:db:mydatabase</code>.
		 * @param {number} BackupRetentionPeriod The retention period for the replicated automated backups.
		 * @param {string} KmsKeyId The Amazon Web Services KMS key identifier for encryption of the replicated automated backups. The KMS key ID is the Amazon Resource Name (ARN) for the KMS encryption key in the destination Amazon Web Services Region, for example, <code>arn:aws:kms:us-east-1:123456789012:key/AKIAIOSFODNN7EXAMPLE</code>.
		 * @param {string} PreSignedUrl <p>In an Amazon Web Services GovCloud (US) Region, an URL that contains a Signature Version 4 signed request for the <code>StartDBInstanceAutomatedBackupsReplication</code> operation to call in the Amazon Web Services Region of the source DB instance. The presigned URL must be a valid request for the <code>StartDBInstanceAutomatedBackupsReplication</code> API operation that can run in the Amazon Web Services Region that contains the source DB instance.</p> <p>This setting applies only to Amazon Web Services GovCloud (US) Regions. It's ignored in other Amazon Web Services Regions.</p> <p>To learn how to generate a Signature Version 4 signed request, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/sigv4-query-string-auth.html"> Authenticating Requests: Using Query Parameters (Amazon Web Services Signature Version 4)</a> and <a href="https://docs.aws.amazon.com/general/latest/gr/signature-version-4.html"> Signature Version 4 Signing Process</a>.</p> <note> <p>If you are using an Amazon Web Services SDK tool or the CLI, you can specify <code>SourceRegion</code> (or <code>--source-region</code> for the CLI) instead of specifying <code>PreSignedUrl</code> manually. Specifying <code>SourceRegion</code> autogenerates a presigned URL that is a valid request for the operation that can run in the source Amazon Web Services Region.</p> </note>
		 * @return {void} Success
		 */
		GET_StartDBInstanceAutomatedBackupsReplication(SourceDBInstanceArn: string, BackupRetentionPeriod: number | null | undefined, KmsKeyId: string | null | undefined, PreSignedUrl: string | null | undefined, Action: GET_StartDBInstanceAutomatedBackupsReplicationAction, Version: GET_AddRoleToDBClusterVersion): Observable<HttpResponse<string>> {
			return this.http.get(this.baseUri + '#Action=StartDBInstanceAutomatedBackupsReplication?SourceDBInstanceArn=' + (SourceDBInstanceArn == null ? '' : encodeURIComponent(SourceDBInstanceArn)) + '&BackupRetentionPeriod=' + BackupRetentionPeriod + '&KmsKeyId=' + (KmsKeyId == null ? '' : encodeURIComponent(KmsKeyId)) + '&PreSignedUrl=' + (PreSignedUrl == null ? '' : encodeURIComponent(PreSignedUrl)) + '&Action=' + Action + '&Version=' + Version, { observe: 'response', responseType: 'text' });
		}

		/**
		 * <p>Starts an export of DB snapshot or DB cluster data to Amazon S3. The provided IAM role must have access to the S3 bucket.</p> <p>You can't export snapshot data from RDS Custom DB instances.</p> <p>You can't export cluster data from Multi-AZ DB clusters.</p> <p>For more information on exporting DB snapshot data, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_ExportSnapshot.html">Exporting DB snapshot data to Amazon S3</a> in the <i>Amazon RDS User Guide</i> or <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-export-snapshot.html">Exporting DB cluster snapshot data to Amazon S3</a> in the <i>Amazon Aurora User Guide</i>.</p> <p>For more information on exporting DB cluster data, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/export-cluster-data.html">Exporting DB cluster data to Amazon S3</a> in the <i>Amazon Aurora User Guide</i>.</p>
		 * Get #Action=StartExportTask
		 * @param {string} ExportTaskIdentifier A unique identifier for the export task. This ID isn't an identifier for the Amazon S3 bucket where the data is to be exported.
		 * @param {string} SourceArn The Amazon Resource Name (ARN) of the snapshot or cluster to export to Amazon S3.
		 * @param {string} S3BucketName The name of the Amazon S3 bucket to export the snapshot or cluster data to.
		 * @param {string} IamRoleArn <p>The name of the IAM role to use for writing to the Amazon S3 bucket when exporting a snapshot or cluster.</p> <p>In the IAM policy attached to your IAM role, include the following required actions to allow the transfer of files from Amazon RDS or Amazon Aurora to an S3 bucket:</p> <ul> <li> <p>s3:PutObject*</p> </li> <li> <p>s3:GetObject*</p> </li> <li> <p>s3:ListBucket</p> </li> <li> <p>s3:DeleteObject*</p> </li> <li> <p>s3:GetBucketLocation </p> </li> </ul> <p>In the policy, include the resources to identify the S3 bucket and objects in the bucket. The following list of resources shows the Amazon Resource Name (ARN) format for accessing S3:</p> <ul> <li> <p> <code>arn:aws:s3:::<i>your-s3-bucket</i> </code> </p> </li> <li> <p> <code>arn:aws:s3:::<i>your-s3-bucket</i>/*</code> </p> </li> </ul>
		 * @param {string} KmsKeyId <p>The ID of the Amazon Web Services KMS key to use to encrypt the data exported to Amazon S3. The Amazon Web Services KMS key identifier is the key ARN, key ID, alias ARN, or alias name for the KMS key. The caller of this operation must be authorized to run the following operations. These can be set in the Amazon Web Services KMS key policy:</p> <ul> <li> <p>kms:Encrypt</p> </li> <li> <p>kms:Decrypt</p> </li> <li> <p>kms:GenerateDataKey</p> </li> <li> <p>kms:GenerateDataKeyWithoutPlaintext</p> </li> <li> <p>kms:ReEncryptFrom</p> </li> <li> <p>kms:ReEncryptTo</p> </li> <li> <p>kms:CreateGrant</p> </li> <li> <p>kms:DescribeKey</p> </li> <li> <p>kms:RetireGrant</p> </li> </ul>
		 * @param {string} S3Prefix The Amazon S3 bucket prefix to use as the file name and path of the exported data.
		 * @param {Array<string>} ExportOnly <p>The data to be exported from the snapshot or cluster. If this parameter is not provided, all of the data is exported. Valid values are the following:</p> <ul> <li> <p> <code>database</code> - Export all the data from a specified database.</p> </li> <li> <p> <code>database.table</code> <i>table-name</i> - Export a table of the snapshot or cluster. This format is valid only for RDS for MySQL, RDS for MariaDB, and Aurora MySQL.</p> </li> <li> <p> <code>database.schema</code> <i>schema-name</i> - Export a database schema of the snapshot or cluster. This format is valid only for RDS for PostgreSQL and Aurora PostgreSQL.</p> </li> <li> <p> <code>database.schema.table</code> <i>table-name</i> - Export a table of the database schema. This format is valid only for RDS for PostgreSQL and Aurora PostgreSQL.</p> </li> </ul>
		 * @return {void} Success
		 */
		GET_StartExportTask(ExportTaskIdentifier: string, SourceArn: string, S3BucketName: string, IamRoleArn: string, KmsKeyId: string, S3Prefix: string | null | undefined, ExportOnly: Array<string> | null | undefined, Action: GET_StartExportTaskAction, Version: GET_AddRoleToDBClusterVersion): Observable<HttpResponse<string>> {
			return this.http.get(this.baseUri + '#Action=StartExportTask?ExportTaskIdentifier=' + (ExportTaskIdentifier == null ? '' : encodeURIComponent(ExportTaskIdentifier)) + '&SourceArn=' + (SourceArn == null ? '' : encodeURIComponent(SourceArn)) + '&S3BucketName=' + (S3BucketName == null ? '' : encodeURIComponent(S3BucketName)) + '&IamRoleArn=' + (IamRoleArn == null ? '' : encodeURIComponent(IamRoleArn)) + '&KmsKeyId=' + (KmsKeyId == null ? '' : encodeURIComponent(KmsKeyId)) + '&S3Prefix=' + (S3Prefix == null ? '' : encodeURIComponent(S3Prefix)) + '&' + ExportOnly?.map(z => `ExportOnly=${encodeURIComponent(z)}`).join('&') + '&Action=' + Action + '&Version=' + Version, { observe: 'response', responseType: 'text' });
		}

		/**
		 * <p>Stops a database activity stream that was started using the Amazon Web Services console, the <code>start-activity-stream</code> CLI command, or the <code>StartActivityStream</code> action.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/DBActivityStreams.html"> Monitoring Amazon Aurora with Database Activity Streams</a> in the <i>Amazon Aurora User Guide</i> or <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/DBActivityStreams.html"> Monitoring Amazon RDS with Database Activity Streams</a> in the <i>Amazon RDS User Guide</i>.</p>
		 * Get #Action=StopActivityStream
		 * @param {string} ResourceArn The Amazon Resource Name (ARN) of the DB cluster for the database activity stream. For example, <code>arn:aws:rds:us-east-1:12345667890:cluster:das-cluster</code>.
		 * @param {boolean} ApplyImmediately Specifies whether or not the database activity stream is to stop as soon as possible, regardless of the maintenance window for the database.
		 * @return {void} Success
		 */
		GET_StopActivityStream(ResourceArn: string, ApplyImmediately: boolean | null | undefined, Action: GET_StopActivityStreamAction, Version: GET_AddRoleToDBClusterVersion): Observable<HttpResponse<string>> {
			return this.http.get(this.baseUri + '#Action=StopActivityStream?ResourceArn=' + (ResourceArn == null ? '' : encodeURIComponent(ResourceArn)) + '&ApplyImmediately=' + ApplyImmediately + '&Action=' + Action + '&Version=' + Version, { observe: 'response', responseType: 'text' });
		}

		/**
		 * <p>Stops an Amazon Aurora DB cluster. When you stop a DB cluster, Aurora retains the DB cluster's metadata, including its endpoints and DB parameter groups. Aurora also retains the transaction logs so you can do a point-in-time restore if necessary.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-cluster-stop-start.html"> Stopping and Starting an Aurora Cluster</a> in the <i>Amazon Aurora User Guide</i>.</p> <note> <p>This action only applies to Aurora DB clusters.</p> </note>
		 * Get #Action=StopDBCluster
		 * @param {string} DBClusterIdentifier The DB cluster identifier of the Amazon Aurora DB cluster to be stopped. This parameter is stored as a lowercase string.
		 * @return {void} Success
		 */
		GET_StopDBCluster(DBClusterIdentifier: string, Action: GET_StopDBClusterAction, Version: GET_AddRoleToDBClusterVersion): Observable<HttpResponse<string>> {
			return this.http.get(this.baseUri + '#Action=StopDBCluster?DBClusterIdentifier=' + (DBClusterIdentifier == null ? '' : encodeURIComponent(DBClusterIdentifier)) + '&Action=' + Action + '&Version=' + Version, { observe: 'response', responseType: 'text' });
		}

		/**
		 * <p>Stops an Amazon RDS DB instance. When you stop a DB instance, Amazon RDS retains the DB instance's metadata, including its endpoint, DB parameter group, and option group membership. Amazon RDS also retains the transaction logs so you can do a point-in-time restore if necessary.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_StopInstance.html"> Stopping an Amazon RDS DB Instance Temporarily</a> in the <i>Amazon RDS User Guide.</i> </p> <note> <p>This command doesn't apply to RDS Custom, Aurora MySQL, and Aurora PostgreSQL. For Aurora clusters, use <code>StopDBCluster</code> instead.</p> </note>
		 * Get #Action=StopDBInstance
		 * @param {string} DBInstanceIdentifier The user-supplied instance identifier.
		 * @param {string} DBSnapshotIdentifier The user-supplied instance identifier of the DB Snapshot created immediately before the DB instance is stopped.
		 * @return {void} Success
		 */
		GET_StopDBInstance(DBInstanceIdentifier: string, DBSnapshotIdentifier: string | null | undefined, Action: GET_StopDBInstanceAction, Version: GET_AddRoleToDBClusterVersion): Observable<HttpResponse<string>> {
			return this.http.get(this.baseUri + '#Action=StopDBInstance?DBInstanceIdentifier=' + (DBInstanceIdentifier == null ? '' : encodeURIComponent(DBInstanceIdentifier)) + '&DBSnapshotIdentifier=' + (DBSnapshotIdentifier == null ? '' : encodeURIComponent(DBSnapshotIdentifier)) + '&Action=' + Action + '&Version=' + Version, { observe: 'response', responseType: 'text' });
		}

		/**
		 * <p>Stops automated backup replication for a DB instance.</p> <p>This command doesn't apply to RDS Custom, Aurora MySQL, and Aurora PostgreSQL.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_ReplicateBackups.html"> Replicating Automated Backups to Another Amazon Web Services Region</a> in the <i>Amazon RDS User Guide.</i> </p>
		 * Get #Action=StopDBInstanceAutomatedBackupsReplication
		 * @param {string} SourceDBInstanceArn The Amazon Resource Name (ARN) of the source DB instance for which to stop replicating automate backups, for example, <code>arn:aws:rds:us-west-2:123456789012:db:mydatabase</code>.
		 * @return {void} Success
		 */
		GET_StopDBInstanceAutomatedBackupsReplication(SourceDBInstanceArn: string, Action: GET_StopDBInstanceAutomatedBackupsReplicationAction, Version: GET_AddRoleToDBClusterVersion): Observable<HttpResponse<string>> {
			return this.http.get(this.baseUri + '#Action=StopDBInstanceAutomatedBackupsReplication?SourceDBInstanceArn=' + (SourceDBInstanceArn == null ? '' : encodeURIComponent(SourceDBInstanceArn)) + '&Action=' + Action + '&Version=' + Version, { observe: 'response', responseType: 'text' });
		}

		/**
		 * <p>Switches over a blue/green deployment.</p> <p>Before you switch over, production traffic is routed to the databases in the blue environment. After you switch over, production traffic is routed to the databases in the green environment.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/blue-green-deployments.html">Using Amazon RDS Blue/Green Deployments for database updates</a> in the <i>Amazon RDS User Guide</i> and <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/blue-green-deployments.html">Using Amazon RDS Blue/Green Deployments for database updates</a> in the <i>Amazon Aurora User Guide</i>.</p>
		 * Get #Action=SwitchoverBlueGreenDeployment
		 * @param {string} BlueGreenDeploymentIdentifier <p>The unique identifier of the blue/green deployment.</p> <p>Constraints:</p> <ul> <li> <p>Must match an existing blue/green deployment identifier.</p> </li> </ul>
		 * @param {number} SwitchoverTimeout <p>The amount of time, in seconds, for the switchover to complete.</p> <p>Default: 300</p> <p>If the switchover takes longer than the specified duration, then any changes are rolled back, and no changes are made to the environments.</p>
		 * @return {void} Success
		 */
		GET_SwitchoverBlueGreenDeployment(BlueGreenDeploymentIdentifier: string, SwitchoverTimeout: number | null | undefined, Action: GET_SwitchoverBlueGreenDeploymentAction, Version: GET_AddRoleToDBClusterVersion): Observable<HttpResponse<string>> {
			return this.http.get(this.baseUri + '#Action=SwitchoverBlueGreenDeployment?BlueGreenDeploymentIdentifier=' + (BlueGreenDeploymentIdentifier == null ? '' : encodeURIComponent(BlueGreenDeploymentIdentifier)) + '&SwitchoverTimeout=' + SwitchoverTimeout + '&Action=' + Action + '&Version=' + Version, { observe: 'response', responseType: 'text' });
		}

		/**
		 * Switches over an Oracle standby database in an Oracle Data Guard environment, making it the new primary database. Issue this command in the Region that hosts the current standby database.
		 * Get #Action=SwitchoverReadReplica
		 * @param {string} DBInstanceIdentifier <p>The DB instance identifier of the current standby database. This value is stored as a lowercase string.</p> <p>Constraints:</p> <ul> <li> <p>Must match the identiﬁer of an existing Oracle read replica DB instance.</p> </li> </ul>
		 * @return {void} Success
		 */
		GET_SwitchoverReadReplica(DBInstanceIdentifier: string, Action: GET_SwitchoverReadReplicaAction, Version: GET_AddRoleToDBClusterVersion): Observable<HttpResponse<string>> {
			return this.http.get(this.baseUri + '#Action=SwitchoverReadReplica?DBInstanceIdentifier=' + (DBInstanceIdentifier == null ? '' : encodeURIComponent(DBInstanceIdentifier)) + '&Action=' + Action + '&Version=' + Version, { observe: 'response', responseType: 'text' });
		}
	}

	export enum GET_AddRoleToDBClusterAction { AddRoleToDBCluster = 0 }

	export enum GET_AddRoleToDBClusterVersion { '2014-10-31' = 0 }

	export enum GET_AddRoleToDBInstanceAction { AddRoleToDBInstance = 0 }

	export enum GET_AddSourceIdentifierToSubscriptionAction { AddSourceIdentifierToSubscription = 0 }

	export enum GET_AddTagsToResourceAction { AddTagsToResource = 0 }

	export enum GET_ApplyPendingMaintenanceActionAction { ApplyPendingMaintenanceAction = 0 }

	export enum GET_AuthorizeDBSecurityGroupIngressAction { AuthorizeDBSecurityGroupIngress = 0 }

	export enum GET_BacktrackDBClusterAction { BacktrackDBCluster = 0 }

	export enum GET_CancelExportTaskAction { CancelExportTask = 0 }

	export enum GET_CopyDBClusterParameterGroupAction { CopyDBClusterParameterGroup = 0 }

	export enum GET_CopyDBClusterSnapshotAction { CopyDBClusterSnapshot = 0 }

	export enum GET_CopyDBParameterGroupAction { CopyDBParameterGroup = 0 }

	export enum GET_CopyDBSnapshotAction { CopyDBSnapshot = 0 }

	export enum GET_CopyOptionGroupAction { CopyOptionGroup = 0 }

	export enum GET_CreateBlueGreenDeploymentAction { CreateBlueGreenDeployment = 0 }

	export enum GET_CreateCustomDBEngineVersionAction { CreateCustomDBEngineVersion = 0 }

	export interface GET_CreateDBClusterScalingConfiguration {
		MinCapacity?: number | null;
		MaxCapacity?: number | null;
		AutoPause?: boolean | null;
		SecondsUntilAutoPause?: number | null;
		TimeoutAction?: string;
		SecondsBeforeTimeout?: number | null;
	}
	export interface GET_CreateDBClusterScalingConfigurationFormProperties {
		MinCapacity: FormControl<number | null | undefined>,
		MaxCapacity: FormControl<number | null | undefined>,
		AutoPause: FormControl<boolean | null | undefined>,
		SecondsUntilAutoPause: FormControl<number | null | undefined>,
		TimeoutAction: FormControl<string | null | undefined>,
		SecondsBeforeTimeout: FormControl<number | null | undefined>,
	}
	export function CreateGET_CreateDBClusterScalingConfigurationFormGroup() {
		return new FormGroup<GET_CreateDBClusterScalingConfigurationFormProperties>({
			MinCapacity: new FormControl<number | null | undefined>(undefined),
			MaxCapacity: new FormControl<number | null | undefined>(undefined),
			AutoPause: new FormControl<boolean | null | undefined>(undefined),
			SecondsUntilAutoPause: new FormControl<number | null | undefined>(undefined),
			TimeoutAction: new FormControl<string | null | undefined>(undefined),
			SecondsBeforeTimeout: new FormControl<number | null | undefined>(undefined),
		});

	}

	export interface GET_CreateDBClusterServerlessV2ScalingConfiguration {
		MinCapacity?: number | null;
		MaxCapacity?: number | null;
	}
	export interface GET_CreateDBClusterServerlessV2ScalingConfigurationFormProperties {
		MinCapacity: FormControl<number | null | undefined>,
		MaxCapacity: FormControl<number | null | undefined>,
	}
	export function CreateGET_CreateDBClusterServerlessV2ScalingConfigurationFormGroup() {
		return new FormGroup<GET_CreateDBClusterServerlessV2ScalingConfigurationFormProperties>({
			MinCapacity: new FormControl<number | null | undefined>(undefined),
			MaxCapacity: new FormControl<number | null | undefined>(undefined),
		});

	}

	export enum GET_CreateDBClusterAction { CreateDBCluster = 0 }

	export enum GET_CreateDBClusterEndpointAction { CreateDBClusterEndpoint = 0 }

	export enum GET_CreateDBClusterParameterGroupAction { CreateDBClusterParameterGroup = 0 }

	export enum GET_CreateDBClusterSnapshotAction { CreateDBClusterSnapshot = 0 }

	export enum GET_CreateDBInstanceAction { CreateDBInstance = 0 }

	export enum GET_CreateDBInstanceReadReplicaAction { CreateDBInstanceReadReplica = 0 }

	export enum GET_CreateDBParameterGroupAction { CreateDBParameterGroup = 0 }

	export enum GET_CreateDBProxyAction { CreateDBProxy = 0 }

	export enum GET_CreateDBProxyEndpointAction { CreateDBProxyEndpoint = 0 }

	export enum GET_CreateDBSecurityGroupAction { CreateDBSecurityGroup = 0 }

	export enum GET_CreateDBSnapshotAction { CreateDBSnapshot = 0 }

	export enum GET_CreateDBSubnetGroupAction { CreateDBSubnetGroup = 0 }

	export enum GET_CreateEventSubscriptionAction { CreateEventSubscription = 0 }

	export enum GET_CreateGlobalClusterAction { CreateGlobalCluster = 0 }

	export enum GET_CreateOptionGroupAction { CreateOptionGroup = 0 }

	export enum GET_DeleteBlueGreenDeploymentAction { DeleteBlueGreenDeployment = 0 }

	export enum GET_DeleteCustomDBEngineVersionAction { DeleteCustomDBEngineVersion = 0 }

	export enum GET_DeleteDBClusterAction { DeleteDBCluster = 0 }

	export enum GET_DeleteDBClusterAutomatedBackupAction { DeleteDBClusterAutomatedBackup = 0 }

	export enum GET_DeleteDBClusterEndpointAction { DeleteDBClusterEndpoint = 0 }

	export enum GET_DeleteDBClusterParameterGroupAction { DeleteDBClusterParameterGroup = 0 }

	export enum GET_DeleteDBClusterSnapshotAction { DeleteDBClusterSnapshot = 0 }

	export enum GET_DeleteDBInstanceAction { DeleteDBInstance = 0 }

	export enum GET_DeleteDBInstanceAutomatedBackupAction { DeleteDBInstanceAutomatedBackup = 0 }

	export enum GET_DeleteDBParameterGroupAction { DeleteDBParameterGroup = 0 }

	export enum GET_DeleteDBProxyAction { DeleteDBProxy = 0 }

	export enum GET_DeleteDBProxyEndpointAction { DeleteDBProxyEndpoint = 0 }

	export enum GET_DeleteDBSecurityGroupAction { DeleteDBSecurityGroup = 0 }

	export enum GET_DeleteDBSnapshotAction { DeleteDBSnapshot = 0 }

	export enum GET_DeleteDBSubnetGroupAction { DeleteDBSubnetGroup = 0 }

	export enum GET_DeleteEventSubscriptionAction { DeleteEventSubscription = 0 }

	export enum GET_DeleteGlobalClusterAction { DeleteGlobalCluster = 0 }

	export enum GET_DeleteOptionGroupAction { DeleteOptionGroup = 0 }

	export enum GET_DeregisterDBProxyTargetsAction { DeregisterDBProxyTargets = 0 }

	export enum GET_DescribeAccountAttributesAction { DescribeAccountAttributes = 0 }

	export enum GET_DescribeBlueGreenDeploymentsAction { DescribeBlueGreenDeployments = 0 }

	export enum GET_DescribeCertificatesAction { DescribeCertificates = 0 }

	export enum GET_DescribeDBClusterAutomatedBackupsAction { DescribeDBClusterAutomatedBackups = 0 }

	export enum GET_DescribeDBClusterBacktracksAction { DescribeDBClusterBacktracks = 0 }

	export enum GET_DescribeDBClusterEndpointsAction { DescribeDBClusterEndpoints = 0 }

	export enum GET_DescribeDBClusterParameterGroupsAction { DescribeDBClusterParameterGroups = 0 }

	export enum GET_DescribeDBClusterParametersAction { DescribeDBClusterParameters = 0 }

	export enum GET_DescribeDBClusterSnapshotAttributesAction { DescribeDBClusterSnapshotAttributes = 0 }

	export enum GET_DescribeDBClusterSnapshotsAction { DescribeDBClusterSnapshots = 0 }

	export enum GET_DescribeDBClustersAction { DescribeDBClusters = 0 }

	export enum GET_DescribeDBEngineVersionsAction { DescribeDBEngineVersions = 0 }

	export enum GET_DescribeDBInstanceAutomatedBackupsAction { DescribeDBInstanceAutomatedBackups = 0 }

	export enum GET_DescribeDBInstancesAction { DescribeDBInstances = 0 }

	export enum GET_DescribeDBLogFilesAction { DescribeDBLogFiles = 0 }

	export enum GET_DescribeDBParameterGroupsAction { DescribeDBParameterGroups = 0 }

	export enum GET_DescribeDBParametersAction { DescribeDBParameters = 0 }

	export enum GET_DescribeDBProxiesAction { DescribeDBProxies = 0 }

	export enum GET_DescribeDBProxyEndpointsAction { DescribeDBProxyEndpoints = 0 }

	export enum GET_DescribeDBProxyTargetGroupsAction { DescribeDBProxyTargetGroups = 0 }

	export enum GET_DescribeDBProxyTargetsAction { DescribeDBProxyTargets = 0 }

	export enum GET_DescribeDBSecurityGroupsAction { DescribeDBSecurityGroups = 0 }

	export enum GET_DescribeDBSnapshotAttributesAction { DescribeDBSnapshotAttributes = 0 }

	export enum GET_DescribeDBSnapshotsAction { DescribeDBSnapshots = 0 }

	export enum GET_DescribeDBSubnetGroupsAction { DescribeDBSubnetGroups = 0 }

	export enum GET_DescribeEngineDefaultClusterParametersAction { DescribeEngineDefaultClusterParameters = 0 }

	export enum GET_DescribeEngineDefaultParametersAction { DescribeEngineDefaultParameters = 0 }

	export enum GET_DescribeEventCategoriesAction { DescribeEventCategories = 0 }

	export enum GET_DescribeEventSubscriptionsAction { DescribeEventSubscriptions = 0 }

	export enum GET_DescribeEventsAction { DescribeEvents = 0 }

	export enum GET_DescribeExportTasksAction { DescribeExportTasks = 0 }

	export enum GET_DescribeGlobalClustersAction { DescribeGlobalClusters = 0 }

	export enum GET_DescribeOptionGroupOptionsAction { DescribeOptionGroupOptions = 0 }

	export enum GET_DescribeOptionGroupsAction { DescribeOptionGroups = 0 }

	export enum GET_DescribeOrderableDBInstanceOptionsAction { DescribeOrderableDBInstanceOptions = 0 }

	export enum GET_DescribePendingMaintenanceActionsAction { DescribePendingMaintenanceActions = 0 }

	export enum GET_DescribeReservedDBInstancesAction { DescribeReservedDBInstances = 0 }

	export enum GET_DescribeReservedDBInstancesOfferingsAction { DescribeReservedDBInstancesOfferings = 0 }

	export enum GET_DescribeSourceRegionsAction { DescribeSourceRegions = 0 }

	export enum GET_DescribeValidDBInstanceModificationsAction { DescribeValidDBInstanceModifications = 0 }

	export enum GET_DownloadDBLogFilePortionAction { DownloadDBLogFilePortion = 0 }

	export enum GET_FailoverDBClusterAction { FailoverDBCluster = 0 }

	export enum GET_FailoverGlobalClusterAction { FailoverGlobalCluster = 0 }

	export enum GET_ListTagsForResourceAction { ListTagsForResource = 0 }

	export enum GET_ModifyActivityStreamAction { ModifyActivityStream = 0 }

	export enum GET_ModifyCertificatesAction { ModifyCertificates = 0 }

	export enum GET_ModifyCurrentDBClusterCapacityAction { ModifyCurrentDBClusterCapacity = 0 }

	export enum GET_ModifyCustomDBEngineVersionAction { ModifyCustomDBEngineVersion = 0 }

	export interface GET_ModifyDBClusterCloudwatchLogsExportConfiguration {
		EnableLogTypes?: Array<string>;
		DisableLogTypes?: Array<string>;
	}
	export interface GET_ModifyDBClusterCloudwatchLogsExportConfigurationFormProperties {
	}
	export function CreateGET_ModifyDBClusterCloudwatchLogsExportConfigurationFormGroup() {
		return new FormGroup<GET_ModifyDBClusterCloudwatchLogsExportConfigurationFormProperties>({
		});

	}

	export interface GET_ModifyDBClusterScalingConfiguration {
		MinCapacity?: number | null;
		MaxCapacity?: number | null;
		AutoPause?: boolean | null;
		SecondsUntilAutoPause?: number | null;
		TimeoutAction?: string;
		SecondsBeforeTimeout?: number | null;
	}
	export interface GET_ModifyDBClusterScalingConfigurationFormProperties {
		MinCapacity: FormControl<number | null | undefined>,
		MaxCapacity: FormControl<number | null | undefined>,
		AutoPause: FormControl<boolean | null | undefined>,
		SecondsUntilAutoPause: FormControl<number | null | undefined>,
		TimeoutAction: FormControl<string | null | undefined>,
		SecondsBeforeTimeout: FormControl<number | null | undefined>,
	}
	export function CreateGET_ModifyDBClusterScalingConfigurationFormGroup() {
		return new FormGroup<GET_ModifyDBClusterScalingConfigurationFormProperties>({
			MinCapacity: new FormControl<number | null | undefined>(undefined),
			MaxCapacity: new FormControl<number | null | undefined>(undefined),
			AutoPause: new FormControl<boolean | null | undefined>(undefined),
			SecondsUntilAutoPause: new FormControl<number | null | undefined>(undefined),
			TimeoutAction: new FormControl<string | null | undefined>(undefined),
			SecondsBeforeTimeout: new FormControl<number | null | undefined>(undefined),
		});

	}

	export interface GET_ModifyDBClusterServerlessV2ScalingConfiguration {
		MinCapacity?: number | null;
		MaxCapacity?: number | null;
	}
	export interface GET_ModifyDBClusterServerlessV2ScalingConfigurationFormProperties {
		MinCapacity: FormControl<number | null | undefined>,
		MaxCapacity: FormControl<number | null | undefined>,
	}
	export function CreateGET_ModifyDBClusterServerlessV2ScalingConfigurationFormGroup() {
		return new FormGroup<GET_ModifyDBClusterServerlessV2ScalingConfigurationFormProperties>({
			MinCapacity: new FormControl<number | null | undefined>(undefined),
			MaxCapacity: new FormControl<number | null | undefined>(undefined),
		});

	}

	export enum GET_ModifyDBClusterAction { ModifyDBCluster = 0 }

	export enum GET_ModifyDBClusterEndpointAction { ModifyDBClusterEndpoint = 0 }

	export enum GET_ModifyDBClusterParameterGroupAction { ModifyDBClusterParameterGroup = 0 }

	export enum GET_ModifyDBClusterSnapshotAttributeAction { ModifyDBClusterSnapshotAttribute = 0 }

	export interface GET_ModifyDBInstanceCloudwatchLogsExportConfiguration {
		EnableLogTypes?: Array<string>;
		DisableLogTypes?: Array<string>;
	}
	export interface GET_ModifyDBInstanceCloudwatchLogsExportConfigurationFormProperties {
	}
	export function CreateGET_ModifyDBInstanceCloudwatchLogsExportConfigurationFormGroup() {
		return new FormGroup<GET_ModifyDBInstanceCloudwatchLogsExportConfigurationFormProperties>({
		});

	}

	export enum GET_ModifyDBInstanceAction { ModifyDBInstance = 0 }

	export enum GET_ModifyDBParameterGroupAction { ModifyDBParameterGroup = 0 }

	export enum GET_ModifyDBProxyAction { ModifyDBProxy = 0 }

	export enum GET_ModifyDBProxyEndpointAction { ModifyDBProxyEndpoint = 0 }

	export interface GET_ModifyDBProxyTargetGroupConnectionPoolConfig {
		MaxConnectionsPercent?: number | null;
		MaxIdleConnectionsPercent?: number | null;
		ConnectionBorrowTimeout?: number | null;
		SessionPinningFilters?: Array<string>;
		InitQuery?: string;
	}
	export interface GET_ModifyDBProxyTargetGroupConnectionPoolConfigFormProperties {
		MaxConnectionsPercent: FormControl<number | null | undefined>,
		MaxIdleConnectionsPercent: FormControl<number | null | undefined>,
		ConnectionBorrowTimeout: FormControl<number | null | undefined>,
		InitQuery: FormControl<string | null | undefined>,
	}
	export function CreateGET_ModifyDBProxyTargetGroupConnectionPoolConfigFormGroup() {
		return new FormGroup<GET_ModifyDBProxyTargetGroupConnectionPoolConfigFormProperties>({
			MaxConnectionsPercent: new FormControl<number | null | undefined>(undefined),
			MaxIdleConnectionsPercent: new FormControl<number | null | undefined>(undefined),
			ConnectionBorrowTimeout: new FormControl<number | null | undefined>(undefined),
			InitQuery: new FormControl<string | null | undefined>(undefined),
		});

	}

	export enum GET_ModifyDBProxyTargetGroupAction { ModifyDBProxyTargetGroup = 0 }

	export enum GET_ModifyDBSnapshotAction { ModifyDBSnapshot = 0 }

	export enum GET_ModifyDBSnapshotAttributeAction { ModifyDBSnapshotAttribute = 0 }

	export enum GET_ModifyDBSubnetGroupAction { ModifyDBSubnetGroup = 0 }

	export enum GET_ModifyEventSubscriptionAction { ModifyEventSubscription = 0 }

	export enum GET_ModifyGlobalClusterAction { ModifyGlobalCluster = 0 }

	export enum GET_ModifyOptionGroupAction { ModifyOptionGroup = 0 }

	export enum GET_PromoteReadReplicaAction { PromoteReadReplica = 0 }

	export enum GET_PromoteReadReplicaDBClusterAction { PromoteReadReplicaDBCluster = 0 }

	export enum GET_PurchaseReservedDBInstancesOfferingAction { PurchaseReservedDBInstancesOffering = 0 }

	export enum GET_RebootDBClusterAction { RebootDBCluster = 0 }

	export enum GET_RebootDBInstanceAction { RebootDBInstance = 0 }

	export enum GET_RegisterDBProxyTargetsAction { RegisterDBProxyTargets = 0 }

	export enum GET_RemoveFromGlobalClusterAction { RemoveFromGlobalCluster = 0 }

	export enum GET_RemoveRoleFromDBClusterAction { RemoveRoleFromDBCluster = 0 }

	export enum GET_RemoveRoleFromDBInstanceAction { RemoveRoleFromDBInstance = 0 }

	export enum GET_RemoveSourceIdentifierFromSubscriptionAction { RemoveSourceIdentifierFromSubscription = 0 }

	export enum GET_RemoveTagsFromResourceAction { RemoveTagsFromResource = 0 }

	export enum GET_ResetDBClusterParameterGroupAction { ResetDBClusterParameterGroup = 0 }

	export enum GET_ResetDBParameterGroupAction { ResetDBParameterGroup = 0 }

	export interface GET_RestoreDBClusterFromS3ServerlessV2ScalingConfiguration {
		MinCapacity?: number | null;
		MaxCapacity?: number | null;
	}
	export interface GET_RestoreDBClusterFromS3ServerlessV2ScalingConfigurationFormProperties {
		MinCapacity: FormControl<number | null | undefined>,
		MaxCapacity: FormControl<number | null | undefined>,
	}
	export function CreateGET_RestoreDBClusterFromS3ServerlessV2ScalingConfigurationFormGroup() {
		return new FormGroup<GET_RestoreDBClusterFromS3ServerlessV2ScalingConfigurationFormProperties>({
			MinCapacity: new FormControl<number | null | undefined>(undefined),
			MaxCapacity: new FormControl<number | null | undefined>(undefined),
		});

	}

	export enum GET_RestoreDBClusterFromS3Action { RestoreDBClusterFromS3 = 0 }

	export interface GET_RestoreDBClusterFromSnapshotScalingConfiguration {
		MinCapacity?: number | null;
		MaxCapacity?: number | null;
		AutoPause?: boolean | null;
		SecondsUntilAutoPause?: number | null;
		TimeoutAction?: string;
		SecondsBeforeTimeout?: number | null;
	}
	export interface GET_RestoreDBClusterFromSnapshotScalingConfigurationFormProperties {
		MinCapacity: FormControl<number | null | undefined>,
		MaxCapacity: FormControl<number | null | undefined>,
		AutoPause: FormControl<boolean | null | undefined>,
		SecondsUntilAutoPause: FormControl<number | null | undefined>,
		TimeoutAction: FormControl<string | null | undefined>,
		SecondsBeforeTimeout: FormControl<number | null | undefined>,
	}
	export function CreateGET_RestoreDBClusterFromSnapshotScalingConfigurationFormGroup() {
		return new FormGroup<GET_RestoreDBClusterFromSnapshotScalingConfigurationFormProperties>({
			MinCapacity: new FormControl<number | null | undefined>(undefined),
			MaxCapacity: new FormControl<number | null | undefined>(undefined),
			AutoPause: new FormControl<boolean | null | undefined>(undefined),
			SecondsUntilAutoPause: new FormControl<number | null | undefined>(undefined),
			TimeoutAction: new FormControl<string | null | undefined>(undefined),
			SecondsBeforeTimeout: new FormControl<number | null | undefined>(undefined),
		});

	}

	export interface GET_RestoreDBClusterFromSnapshotServerlessV2ScalingConfiguration {
		MinCapacity?: number | null;
		MaxCapacity?: number | null;
	}
	export interface GET_RestoreDBClusterFromSnapshotServerlessV2ScalingConfigurationFormProperties {
		MinCapacity: FormControl<number | null | undefined>,
		MaxCapacity: FormControl<number | null | undefined>,
	}
	export function CreateGET_RestoreDBClusterFromSnapshotServerlessV2ScalingConfigurationFormGroup() {
		return new FormGroup<GET_RestoreDBClusterFromSnapshotServerlessV2ScalingConfigurationFormProperties>({
			MinCapacity: new FormControl<number | null | undefined>(undefined),
			MaxCapacity: new FormControl<number | null | undefined>(undefined),
		});

	}

	export enum GET_RestoreDBClusterFromSnapshotAction { RestoreDBClusterFromSnapshot = 0 }

	export interface GET_RestoreDBClusterToPointInTimeScalingConfiguration {
		MinCapacity?: number | null;
		MaxCapacity?: number | null;
		AutoPause?: boolean | null;
		SecondsUntilAutoPause?: number | null;
		TimeoutAction?: string;
		SecondsBeforeTimeout?: number | null;
	}
	export interface GET_RestoreDBClusterToPointInTimeScalingConfigurationFormProperties {
		MinCapacity: FormControl<number | null | undefined>,
		MaxCapacity: FormControl<number | null | undefined>,
		AutoPause: FormControl<boolean | null | undefined>,
		SecondsUntilAutoPause: FormControl<number | null | undefined>,
		TimeoutAction: FormControl<string | null | undefined>,
		SecondsBeforeTimeout: FormControl<number | null | undefined>,
	}
	export function CreateGET_RestoreDBClusterToPointInTimeScalingConfigurationFormGroup() {
		return new FormGroup<GET_RestoreDBClusterToPointInTimeScalingConfigurationFormProperties>({
			MinCapacity: new FormControl<number | null | undefined>(undefined),
			MaxCapacity: new FormControl<number | null | undefined>(undefined),
			AutoPause: new FormControl<boolean | null | undefined>(undefined),
			SecondsUntilAutoPause: new FormControl<number | null | undefined>(undefined),
			TimeoutAction: new FormControl<string | null | undefined>(undefined),
			SecondsBeforeTimeout: new FormControl<number | null | undefined>(undefined),
		});

	}

	export interface GET_RestoreDBClusterToPointInTimeServerlessV2ScalingConfiguration {
		MinCapacity?: number | null;
		MaxCapacity?: number | null;
	}
	export interface GET_RestoreDBClusterToPointInTimeServerlessV2ScalingConfigurationFormProperties {
		MinCapacity: FormControl<number | null | undefined>,
		MaxCapacity: FormControl<number | null | undefined>,
	}
	export function CreateGET_RestoreDBClusterToPointInTimeServerlessV2ScalingConfigurationFormGroup() {
		return new FormGroup<GET_RestoreDBClusterToPointInTimeServerlessV2ScalingConfigurationFormProperties>({
			MinCapacity: new FormControl<number | null | undefined>(undefined),
			MaxCapacity: new FormControl<number | null | undefined>(undefined),
		});

	}

	export enum GET_RestoreDBClusterToPointInTimeAction { RestoreDBClusterToPointInTime = 0 }

	export enum GET_RestoreDBInstanceFromDBSnapshotAction { RestoreDBInstanceFromDBSnapshot = 0 }

	export enum GET_RestoreDBInstanceFromS3Action { RestoreDBInstanceFromS3 = 0 }

	export enum GET_RestoreDBInstanceToPointInTimeAction { RestoreDBInstanceToPointInTime = 0 }

	export enum GET_RevokeDBSecurityGroupIngressAction { RevokeDBSecurityGroupIngress = 0 }

	export enum GET_StartActivityStreamAction { StartActivityStream = 0 }

	export enum GET_StartDBClusterAction { StartDBCluster = 0 }

	export enum GET_StartDBInstanceAction { StartDBInstance = 0 }

	export enum GET_StartDBInstanceAutomatedBackupsReplicationAction { StartDBInstanceAutomatedBackupsReplication = 0 }

	export enum GET_StartExportTaskAction { StartExportTask = 0 }

	export enum GET_StopActivityStreamAction { StopActivityStream = 0 }

	export enum GET_StopDBClusterAction { StopDBCluster = 0 }

	export enum GET_StopDBInstanceAction { StopDBInstance = 0 }

	export enum GET_StopDBInstanceAutomatedBackupsReplicationAction { StopDBInstanceAutomatedBackupsReplication = 0 }

	export enum GET_SwitchoverBlueGreenDeploymentAction { SwitchoverBlueGreenDeployment = 0 }

	export enum GET_SwitchoverReadReplicaAction { SwitchoverReadReplica = 0 }

}


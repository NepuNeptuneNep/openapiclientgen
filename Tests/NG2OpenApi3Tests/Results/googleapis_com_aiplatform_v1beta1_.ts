import { Injectable, Inject } from '@angular/core';
import { HttpClient, HttpHeaders, HttpResponse } from '@angular/common/http';
import { Observable } from 'rxjs';
import { FormControl, FormGroup, Validators } from '@angular/forms';
export namespace MyNS {

	/** Video embedding response. */
	export interface CloudAiLargeModelsVisionEmbedVideoResponse {

		/** The embedding vector for the video. */
		videoEmbeddings?: Array<string>;
	}

	/** Video embedding response. */
	export interface CloudAiLargeModelsVisionEmbedVideoResponseFormProperties {
	}
	export function CreateCloudAiLargeModelsVisionEmbedVideoResponseFormGroup() {
		return new FormGroup<CloudAiLargeModelsVisionEmbedVideoResponseFormProperties>({
		});

	}


	/** Details for filtered input text. */
	export interface CloudAiLargeModelsVisionFilteredText {

		/** Confidence level */
		category?: CloudAiLargeModelsVisionFilteredTextCategory | null;

		/** Filtered category */
		confidence?: CloudAiLargeModelsVisionFilteredTextConfidence | null;

		/** Input prompt */
		prompt?: string | null;

		/** Score for category */
		score?: number | null;
	}

	/** Details for filtered input text. */
	export interface CloudAiLargeModelsVisionFilteredTextFormProperties {

		/** Confidence level */
		category: FormControl<CloudAiLargeModelsVisionFilteredTextCategory | null | undefined>,

		/** Filtered category */
		confidence: FormControl<CloudAiLargeModelsVisionFilteredTextConfidence | null | undefined>,

		/** Input prompt */
		prompt: FormControl<string | null | undefined>,

		/** Score for category */
		score: FormControl<number | null | undefined>,
	}
	export function CreateCloudAiLargeModelsVisionFilteredTextFormGroup() {
		return new FormGroup<CloudAiLargeModelsVisionFilteredTextFormProperties>({
			category: new FormControl<CloudAiLargeModelsVisionFilteredTextCategory | null | undefined>(undefined),
			confidence: new FormControl<CloudAiLargeModelsVisionFilteredTextConfidence | null | undefined>(undefined),
			prompt: new FormControl<string | null | undefined>(undefined),
			score: new FormControl<number | null | undefined>(undefined),
		});

	}

	export enum CloudAiLargeModelsVisionFilteredTextCategory { RAI_CATEGORY_UNSPECIFIED = 0, OBSCENE = 1, SEXUALLY_EXPLICIT = 2, IDENTITY_ATTACK = 3, VIOLENCE_ABUSE = 4, CSAI = 5, SPII = 6, CELEBRITY = 7, FACE_IMG = 8, WATERMARK_IMG = 9, MEMORIZATION_IMG = 10, CSAI_IMG = 11, PORN_IMG = 12, VIOLENCE_IMG = 13, CHILD_IMG = 14, TOXIC = 15, SENSITIVE_WORD = 16, PERSON_IMG = 17, ICA_IMG = 18, SEXUAL_IMG = 19, IU_IMG = 20, RACY_IMG = 21, PEDO_IMG = 22, DEATH_HARM_TRAGEDY = 23, HEALTH = 24, FIREARMS_WEAPONS = 25, RELIGIOUS_BELIEF = 26, ILLICIT_DRUGS = 27, WAR_CONFLICT = 28, POLITICS = 29, HATE_SYMBOL_IMG = 30, CHILD_TEXT = 31, DANGEROUS_CONTENT = 32, RECITATION_TEXT = 33 }

	export enum CloudAiLargeModelsVisionFilteredTextConfidence { CONFIDENCE_UNSPECIFIED = 0, CONFIDENCE_LOW = 1, CONFIDENCE_MEDIUM = 2, CONFIDENCE_HIGH = 3 }


	/** Generate video response. */
	export interface CloudAiLargeModelsVisionGenerateVideoResponse {

		/** The generates samples. */
		generatedSamples?: Array<CloudAiLargeModelsVisionMedia>;

		/** Returns if any videos were filtered due to RAI policies. */
		raiMediaFilteredCount?: number | null;

		/** Returns rai failure reasons if any. */
		raiMediaFilteredReasons?: Array<string>;

		/** Details for filtered input text. */
		raiTextFilteredReason?: CloudAiLargeModelsVisionFilteredText;
	}

	/** Generate video response. */
	export interface CloudAiLargeModelsVisionGenerateVideoResponseFormProperties {

		/** Returns if any videos were filtered due to RAI policies. */
		raiMediaFilteredCount: FormControl<number | null | undefined>,
	}
	export function CreateCloudAiLargeModelsVisionGenerateVideoResponseFormGroup() {
		return new FormGroup<CloudAiLargeModelsVisionGenerateVideoResponseFormProperties>({
			raiMediaFilteredCount: new FormControl<number | null | undefined>(undefined),
		});

	}


	/** Media. */
	export interface CloudAiLargeModelsVisionMedia {

		/** Image. */
		image?: CloudAiLargeModelsVisionImage;

		/** Video */
		video?: CloudAiLargeModelsVisionVideo;
	}

	/** Media. */
	export interface CloudAiLargeModelsVisionMediaFormProperties {
	}
	export function CreateCloudAiLargeModelsVisionMediaFormGroup() {
		return new FormGroup<CloudAiLargeModelsVisionMediaFormProperties>({
		});

	}


	/** Image. */
	export interface CloudAiLargeModelsVisionImage {

		/** Image encoding, encoded as "image/png" or "image/jpg". */
		encoding?: string | null;

		/** Raw bytes. */
		image?: string | null;

		/** RAI scores for generated image returned. */
		imageRaiScores?: CloudAiLargeModelsVisionImageRAIScores;
		raiInfo?: CloudAiLargeModelsVisionRaiInfo;
		semanticFilterResponse?: CloudAiLargeModelsVisionSemanticFilterResponse;

		/** Path to another storage (typically Google Cloud Storage). */
		uri?: string | null;
	}

	/** Image. */
	export interface CloudAiLargeModelsVisionImageFormProperties {

		/** Image encoding, encoded as "image/png" or "image/jpg". */
		encoding: FormControl<string | null | undefined>,

		/** Raw bytes. */
		image: FormControl<string | null | undefined>,

		/** Path to another storage (typically Google Cloud Storage). */
		uri: FormControl<string | null | undefined>,
	}
	export function CreateCloudAiLargeModelsVisionImageFormGroup() {
		return new FormGroup<CloudAiLargeModelsVisionImageFormProperties>({
			encoding: new FormControl<string | null | undefined>(undefined),
			image: new FormControl<string | null | undefined>(undefined),
			uri: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** RAI scores for generated image returned. */
	export interface CloudAiLargeModelsVisionImageRAIScores {

		/** Agile watermark score for image. */
		agileWatermarkDetectionScore?: number | null;
	}

	/** RAI scores for generated image returned. */
	export interface CloudAiLargeModelsVisionImageRAIScoresFormProperties {

		/** Agile watermark score for image. */
		agileWatermarkDetectionScore: FormControl<number | null | undefined>,
	}
	export function CreateCloudAiLargeModelsVisionImageRAIScoresFormGroup() {
		return new FormGroup<CloudAiLargeModelsVisionImageRAIScoresFormProperties>({
			agileWatermarkDetectionScore: new FormControl<number | null | undefined>(undefined),
		});

	}

	export interface CloudAiLargeModelsVisionRaiInfo {

		/** List of rai categories' information to return */
		raiCategories?: Array<string>;

		/** List of rai scores mapping to the rai categories. Rounded to 1 decimal place. */
		scores?: Array<number>;
	}
	export interface CloudAiLargeModelsVisionRaiInfoFormProperties {
	}
	export function CreateCloudAiLargeModelsVisionRaiInfoFormGroup() {
		return new FormGroup<CloudAiLargeModelsVisionRaiInfoFormProperties>({
		});

	}

	export interface CloudAiLargeModelsVisionSemanticFilterResponse {

		/** Class labels of the bounding boxes that failed the semantic filtering. Bounding box coordinates. */
		namedBoundingBoxes?: Array<CloudAiLargeModelsVisionNamedBoundingBox>;

		/** This response is added when semantic filter config is turned on in EditConfig. It reports if this image is passed semantic filter response. If passed_semantic_filter is false, the bounding box information will be populated for user to check what caused the semantic filter to fail. */
		passedSemanticFilter?: boolean | null;
	}
	export interface CloudAiLargeModelsVisionSemanticFilterResponseFormProperties {

		/** This response is added when semantic filter config is turned on in EditConfig. It reports if this image is passed semantic filter response. If passed_semantic_filter is false, the bounding box information will be populated for user to check what caused the semantic filter to fail. */
		passedSemanticFilter: FormControl<boolean | null | undefined>,
	}
	export function CreateCloudAiLargeModelsVisionSemanticFilterResponseFormGroup() {
		return new FormGroup<CloudAiLargeModelsVisionSemanticFilterResponseFormProperties>({
			passedSemanticFilter: new FormControl<boolean | null | undefined>(undefined),
		});

	}

	export interface CloudAiLargeModelsVisionNamedBoundingBox {
		classes?: Array<string>;
		entities?: Array<string>;
		scores?: Array<number>;
		x1?: number | null;
		x2?: number | null;
		y1?: number | null;
		y2?: number | null;
	}
	export interface CloudAiLargeModelsVisionNamedBoundingBoxFormProperties {
		x1: FormControl<number | null | undefined>,
		x2: FormControl<number | null | undefined>,
		y1: FormControl<number | null | undefined>,
		y2: FormControl<number | null | undefined>,
	}
	export function CreateCloudAiLargeModelsVisionNamedBoundingBoxFormGroup() {
		return new FormGroup<CloudAiLargeModelsVisionNamedBoundingBoxFormProperties>({
			x1: new FormControl<number | null | undefined>(undefined),
			x2: new FormControl<number | null | undefined>(undefined),
			y1: new FormControl<number | null | undefined>(undefined),
			y2: new FormControl<number | null | undefined>(undefined),
		});

	}


	/** Video */
	export interface CloudAiLargeModelsVisionVideo {

		/** Path to another storage (typically Google Cloud Storage). */
		uri?: string | null;

		/** Raw bytes. */
		video?: string | null;
	}

	/** Video */
	export interface CloudAiLargeModelsVisionVideoFormProperties {

		/** Path to another storage (typically Google Cloud Storage). */
		uri: FormControl<string | null | undefined>,

		/** Raw bytes. */
		video: FormControl<string | null | undefined>,
	}
	export function CreateCloudAiLargeModelsVisionVideoFormGroup() {
		return new FormGroup<CloudAiLargeModelsVisionVideoFormProperties>({
			uri: new FormControl<string | null | undefined>(undefined),
			video: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Generate media content response */
	export interface CloudAiLargeModelsVisionMediaGenerateContentResponse {
		response?: CloudAiNlLlmProtoServiceGenerateMultiModalResponse;
	}

	/** Generate media content response */
	export interface CloudAiLargeModelsVisionMediaGenerateContentResponseFormProperties {
	}
	export function CreateCloudAiLargeModelsVisionMediaGenerateContentResponseFormGroup() {
		return new FormGroup<CloudAiLargeModelsVisionMediaGenerateContentResponseFormProperties>({
		});

	}

	export interface CloudAiNlLlmProtoServiceGenerateMultiModalResponse {

		/** Possible candidate responses to the conversation up until this point. */
		candidates?: Array<CloudAiNlLlmProtoServiceCandidate>;
		debugMetadata?: CloudAiNlLlmProtoServiceMessageMetadata;

		/** Content filter results for a prompt sent in the request. */
		promptFeedback?: CloudAiNlLlmProtoServicePromptFeedback;
		reportingMetrics?: IntelligenceCloudAutomlXpsReportingMetrics;

		/** Usage metadata about response(s). */
		usageMetadata?: CloudAiNlLlmProtoServiceUsageMetadata;
	}
	export interface CloudAiNlLlmProtoServiceGenerateMultiModalResponseFormProperties {
	}
	export function CreateCloudAiNlLlmProtoServiceGenerateMultiModalResponseFormGroup() {
		return new FormGroup<CloudAiNlLlmProtoServiceGenerateMultiModalResponseFormProperties>({
		});

	}

	export interface CloudAiNlLlmProtoServiceCandidate {

		/** A collection of source attributions for a piece of content. */
		citationMetadata?: CloudAiNlLlmProtoServiceCitationMetadata;

		/** The content of a single message from a participant. */
		content?: CloudAiNlLlmProtoServiceContent;

		/** A string that describes the filtering behavior in more detail. Only filled when reason is set. */
		finishMessage?: string | null;

		/** The reason why the model stopped generating tokens. */
		finishReason?: CloudAiNlLlmProtoServiceCandidateFinishReason | null;

		/** Index of the candidate. */
		index?: number | null;

		/** Safety ratings of the generated content. */
		safetyRatings?: Array<CloudAiNlLlmProtoServiceSafetyRating>;
	}
	export interface CloudAiNlLlmProtoServiceCandidateFormProperties {

		/** A string that describes the filtering behavior in more detail. Only filled when reason is set. */
		finishMessage: FormControl<string | null | undefined>,

		/** The reason why the model stopped generating tokens. */
		finishReason: FormControl<CloudAiNlLlmProtoServiceCandidateFinishReason | null | undefined>,

		/** Index of the candidate. */
		index: FormControl<number | null | undefined>,
	}
	export function CreateCloudAiNlLlmProtoServiceCandidateFormGroup() {
		return new FormGroup<CloudAiNlLlmProtoServiceCandidateFormProperties>({
			finishMessage: new FormControl<string | null | undefined>(undefined),
			finishReason: new FormControl<CloudAiNlLlmProtoServiceCandidateFinishReason | null | undefined>(undefined),
			index: new FormControl<number | null | undefined>(undefined),
		});

	}


	/** A collection of source attributions for a piece of content. */
	export interface CloudAiNlLlmProtoServiceCitationMetadata {

		/** List of citations. */
		citations?: Array<CloudAiNlLlmProtoServiceCitation>;
	}

	/** A collection of source attributions for a piece of content. */
	export interface CloudAiNlLlmProtoServiceCitationMetadataFormProperties {
	}
	export function CreateCloudAiNlLlmProtoServiceCitationMetadataFormGroup() {
		return new FormGroup<CloudAiNlLlmProtoServiceCitationMetadataFormProperties>({
		});

	}


	/** Source attributions for content. */
	export interface CloudAiNlLlmProtoServiceCitation {

		/** End index into the content. */
		endIndex?: number | null;

		/** License of the attribution. */
		license?: string | null;

		/** Represents a whole or partial calendar date, such as a birthday. The time of day and time zone are either specified elsewhere or are insignificant. The date is relative to the Gregorian Calendar. This can represent one of the following: * A full date, with non-zero year, month, and day values. * A month and day, with a zero year (for example, an anniversary). * A year on its own, with a zero month and a zero day. * A year and month, with a zero day (for example, a credit card expiration date). Related types: * google.type.TimeOfDay * google.type.DateTime * google.protobuf.Timestamp */
		publicationDate?: GoogleTypeDate;

		/** Start index into the content. */
		startIndex?: number | null;

		/** Title of the attribution. */
		title?: string | null;

		/** Url reference of the attribution. */
		uri?: string | null;
	}

	/** Source attributions for content. */
	export interface CloudAiNlLlmProtoServiceCitationFormProperties {

		/** End index into the content. */
		endIndex: FormControl<number | null | undefined>,

		/** License of the attribution. */
		license: FormControl<string | null | undefined>,

		/** Start index into the content. */
		startIndex: FormControl<number | null | undefined>,

		/** Title of the attribution. */
		title: FormControl<string | null | undefined>,

		/** Url reference of the attribution. */
		uri: FormControl<string | null | undefined>,
	}
	export function CreateCloudAiNlLlmProtoServiceCitationFormGroup() {
		return new FormGroup<CloudAiNlLlmProtoServiceCitationFormProperties>({
			endIndex: new FormControl<number | null | undefined>(undefined),
			license: new FormControl<string | null | undefined>(undefined),
			startIndex: new FormControl<number | null | undefined>(undefined),
			title: new FormControl<string | null | undefined>(undefined),
			uri: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Represents a whole or partial calendar date, such as a birthday. The time of day and time zone are either specified elsewhere or are insignificant. The date is relative to the Gregorian Calendar. This can represent one of the following: * A full date, with non-zero year, month, and day values. * A month and day, with a zero year (for example, an anniversary). * A year on its own, with a zero month and a zero day. * A year and month, with a zero day (for example, a credit card expiration date). Related types: * google.type.TimeOfDay * google.type.DateTime * google.protobuf.Timestamp */
	export interface GoogleTypeDate {

		/** Day of a month. Must be from 1 to 31 and valid for the year and month, or 0 to specify a year by itself or a year and month where the day isn't significant. */
		day?: number | null;

		/** Month of a year. Must be from 1 to 12, or 0 to specify a year without a month and day. */
		month?: number | null;

		/** Year of the date. Must be from 1 to 9999, or 0 to specify a date without a year. */
		year?: number | null;
	}

	/** Represents a whole or partial calendar date, such as a birthday. The time of day and time zone are either specified elsewhere or are insignificant. The date is relative to the Gregorian Calendar. This can represent one of the following: * A full date, with non-zero year, month, and day values. * A month and day, with a zero year (for example, an anniversary). * A year on its own, with a zero month and a zero day. * A year and month, with a zero day (for example, a credit card expiration date). Related types: * google.type.TimeOfDay * google.type.DateTime * google.protobuf.Timestamp */
	export interface GoogleTypeDateFormProperties {

		/** Day of a month. Must be from 1 to 31 and valid for the year and month, or 0 to specify a year by itself or a year and month where the day isn't significant. */
		day: FormControl<number | null | undefined>,

		/** Month of a year. Must be from 1 to 12, or 0 to specify a year without a month and day. */
		month: FormControl<number | null | undefined>,

		/** Year of the date. Must be from 1 to 9999, or 0 to specify a date without a year. */
		year: FormControl<number | null | undefined>,
	}
	export function CreateGoogleTypeDateFormGroup() {
		return new FormGroup<GoogleTypeDateFormProperties>({
			day: new FormControl<number | null | undefined>(undefined),
			month: new FormControl<number | null | undefined>(undefined),
			year: new FormControl<number | null | undefined>(undefined),
		});

	}


	/** The content of a single message from a participant. */
	export interface CloudAiNlLlmProtoServiceContent {

		/** The parts of the message. */
		parts?: Array<CloudAiNlLlmProtoServicePart>;

		/** The role of the current conversation participant. */
		role?: string | null;
	}

	/** The content of a single message from a participant. */
	export interface CloudAiNlLlmProtoServiceContentFormProperties {

		/** The role of the current conversation participant. */
		role: FormControl<string | null | undefined>,
	}
	export function CreateCloudAiNlLlmProtoServiceContentFormGroup() {
		return new FormGroup<CloudAiNlLlmProtoServiceContentFormProperties>({
			role: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** A single part of a message. */
	export interface CloudAiNlLlmProtoServicePart {

		/** Represents file data. */
		fileData?: CloudAiNlLlmProtoServicePartFileData;

		/** Function call details. */
		functionCall?: CloudAiNlLlmProtoServiceFunctionCall;

		/** Function response details. */
		functionResponse?: CloudAiNlLlmProtoServiceFunctionResponse;

		/** Represents arbitrary blob data input. */
		inlineData?: CloudAiNlLlmProtoServicePartBlob;

		/** Text input. */
		text?: string | null;

		/** Metadata describes the input video content. */
		videoMetadata?: CloudAiNlLlmProtoServicePartVideoMetadata;
	}

	/** A single part of a message. */
	export interface CloudAiNlLlmProtoServicePartFormProperties {

		/** Text input. */
		text: FormControl<string | null | undefined>,
	}
	export function CreateCloudAiNlLlmProtoServicePartFormGroup() {
		return new FormGroup<CloudAiNlLlmProtoServicePartFormProperties>({
			text: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Represents file data. */
	export interface CloudAiNlLlmProtoServicePartFileData {

		/** Inline data. */
		fileUri?: string | null;

		/** The mime type corresponding to this input. */
		mimeType?: string | null;
	}

	/** Represents file data. */
	export interface CloudAiNlLlmProtoServicePartFileDataFormProperties {

		/** Inline data. */
		fileUri: FormControl<string | null | undefined>,

		/** The mime type corresponding to this input. */
		mimeType: FormControl<string | null | undefined>,
	}
	export function CreateCloudAiNlLlmProtoServicePartFileDataFormGroup() {
		return new FormGroup<CloudAiNlLlmProtoServicePartFileDataFormProperties>({
			fileUri: new FormControl<string | null | undefined>(undefined),
			mimeType: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Function call details. */
	export interface CloudAiNlLlmProtoServiceFunctionCall {

		/** The function parameters and values in JSON format. */
		args?: {[id: string]: any };

		/** Required. The name of the function to call. */
		name?: string | null;
	}

	/** Function call details. */
	export interface CloudAiNlLlmProtoServiceFunctionCallFormProperties {

		/** The function parameters and values in JSON format. */
		args: FormControl<{[id: string]: any } | null | undefined>,

		/** Required. The name of the function to call. */
		name: FormControl<string | null | undefined>,
	}
	export function CreateCloudAiNlLlmProtoServiceFunctionCallFormGroup() {
		return new FormGroup<CloudAiNlLlmProtoServiceFunctionCallFormProperties>({
			args: new FormControl<{[id: string]: any } | null | undefined>(undefined),
			name: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Function response details. */
	export interface CloudAiNlLlmProtoServiceFunctionResponse {

		/** Required. The name of the function to call. */
		name?: string | null;

		/** Required. The function response in JSON object format. */
		response?: {[id: string]: any };
	}

	/** Function response details. */
	export interface CloudAiNlLlmProtoServiceFunctionResponseFormProperties {

		/** Required. The name of the function to call. */
		name: FormControl<string | null | undefined>,

		/** Required. The function response in JSON object format. */
		response: FormControl<{[id: string]: any } | null | undefined>,
	}
	export function CreateCloudAiNlLlmProtoServiceFunctionResponseFormGroup() {
		return new FormGroup<CloudAiNlLlmProtoServiceFunctionResponseFormProperties>({
			name: new FormControl<string | null | undefined>(undefined),
			response: new FormControl<{[id: string]: any } | null | undefined>(undefined),
		});

	}


	/** Represents arbitrary blob data input. */
	export interface CloudAiNlLlmProtoServicePartBlob {

		/** Inline data. */
		data?: string | null;

		/** The mime type corresponding to this input. */
		mimeType?: string | null;

		/** Represents file data. */
		originalFileData?: CloudAiNlLlmProtoServicePartFileData;
	}

	/** Represents arbitrary blob data input. */
	export interface CloudAiNlLlmProtoServicePartBlobFormProperties {

		/** Inline data. */
		data: FormControl<string | null | undefined>,

		/** The mime type corresponding to this input. */
		mimeType: FormControl<string | null | undefined>,
	}
	export function CreateCloudAiNlLlmProtoServicePartBlobFormGroup() {
		return new FormGroup<CloudAiNlLlmProtoServicePartBlobFormProperties>({
			data: new FormControl<string | null | undefined>(undefined),
			mimeType: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Metadata describes the input video content. */
	export interface CloudAiNlLlmProtoServicePartVideoMetadata {

		/** The end offset of the video. */
		endOffset?: string | null;

		/** The start offset of the video. */
		startOffset?: string | null;
	}

	/** Metadata describes the input video content. */
	export interface CloudAiNlLlmProtoServicePartVideoMetadataFormProperties {

		/** The end offset of the video. */
		endOffset: FormControl<string | null | undefined>,

		/** The start offset of the video. */
		startOffset: FormControl<string | null | undefined>,
	}
	export function CreateCloudAiNlLlmProtoServicePartVideoMetadataFormGroup() {
		return new FormGroup<CloudAiNlLlmProtoServicePartVideoMetadataFormProperties>({
			endOffset: new FormControl<string | null | undefined>(undefined),
			startOffset: new FormControl<string | null | undefined>(undefined),
		});

	}

	export enum CloudAiNlLlmProtoServiceCandidateFinishReason { FINISH_REASON_UNSPECIFIED = 0, FINISH_REASON_STOP = 1, FINISH_REASON_MAX_TOKENS = 2, FINISH_REASON_SAFETY = 3, FINISH_REASON_RECITATION = 4, FINISH_REASON_OTHER = 5 }


	/** Safety rating corresponding to the generated content. */
	export interface CloudAiNlLlmProtoServiceSafetyRating {

		/** Indicates whether the content was filtered out because of this rating. */
		blocked?: boolean | null;

		/** Harm category. */
		category?: CloudAiNlLlmProtoServiceSafetyRatingCategory | null;

		/** Harm probability levels in the content. */
		probability?: CloudAiNlLlmProtoServiceSafetyRatingProbability | null;
	}

	/** Safety rating corresponding to the generated content. */
	export interface CloudAiNlLlmProtoServiceSafetyRatingFormProperties {

		/** Indicates whether the content was filtered out because of this rating. */
		blocked: FormControl<boolean | null | undefined>,

		/** Harm category. */
		category: FormControl<CloudAiNlLlmProtoServiceSafetyRatingCategory | null | undefined>,

		/** Harm probability levels in the content. */
		probability: FormControl<CloudAiNlLlmProtoServiceSafetyRatingProbability | null | undefined>,
	}
	export function CreateCloudAiNlLlmProtoServiceSafetyRatingFormGroup() {
		return new FormGroup<CloudAiNlLlmProtoServiceSafetyRatingFormProperties>({
			blocked: new FormControl<boolean | null | undefined>(undefined),
			category: new FormControl<CloudAiNlLlmProtoServiceSafetyRatingCategory | null | undefined>(undefined),
			probability: new FormControl<CloudAiNlLlmProtoServiceSafetyRatingProbability | null | undefined>(undefined),
		});

	}

	export enum CloudAiNlLlmProtoServiceSafetyRatingCategory { HARM_CATEGORY_UNSPECIFIED = 0, HARM_CATEGORY_HATE_SPEECH = 1, HARM_CATEGORY_DANGEROUS_CONTENT = 2, HARM_CATEGORY_HARASSMENT = 3, HARM_CATEGORY_SEXUALLY_EXPLICIT = 4 }

	export enum CloudAiNlLlmProtoServiceSafetyRatingProbability { HARM_PROBABILITY_UNSPECIFIED = 0, NEGLIGIBLE = 1, LOW = 2, MEDIUM = 3, HIGH = 4 }

	export interface CloudAiNlLlmProtoServiceMessageMetadata {

		/** LINT.IfChange This metadata contains additional information required for debugging. */
		inputFilterInfo?: LearningServingLlmMessageMetadata;

		/** Holds the final routing decision, by storing the model_config_id. And individual scores each model got. */
		modelRoutingDecision?: LearningGenaiRootRoutingDecision;

		/** Filter metadata of the output messages. */
		outputFilterInfo?: Array<LearningServingLlmMessageMetadata>;
	}
	export interface CloudAiNlLlmProtoServiceMessageMetadataFormProperties {
	}
	export function CreateCloudAiNlLlmProtoServiceMessageMetadataFormGroup() {
		return new FormGroup<CloudAiNlLlmProtoServiceMessageMetadataFormProperties>({
		});

	}


	/** LINT.IfChange This metadata contains additional information required for debugging. */
	export interface LearningServingLlmMessageMetadata {
		classifierSummary?: LearningGenaiRootClassifierOutputSummary;
		currentStreamTextLength?: number | null;

		/** Whether the corresponding message has been deleted. */
		deleted?: boolean | null;

		/** Metadata for filters that triggered. */
		filterMeta?: Array<LearningGenaiRootFilterMetadata>;
		finalMessageScore?: LearningGenaiRootScore;

		/** NOT YET IMPLEMENTED. */
		finishReason?: LearningServingLlmMessageMetadataFinishReason | null;

		/** Applies to Response message only. Indicates whether the message is a fallback and the response would have otherwise been empty. */
		isFallback?: boolean | null;
		langidResult?: NlpSaftLangIdResult;

		/** Detected language. */
		language?: string | null;

		/** The LM prefix used to generate this response. */
		lmPrefix?: string | null;

		/** The original text generated by LLM. This is the raw output for debugging purposes. */
		originalText?: string | null;

		/** NOT YET IMPLEMENTED. Applies to streaming only. Number of tokens decoded / emitted by the model as part of this stream. This may be different from token_count, which contains number of tokens returned in this response after any response rewriting / truncation. */
		perStreamDecodedTokenCount?: number | null;

		/** Results of running RAI on the query or this response candidate. One output per rai_config. It will be populated regardless of whether the threshold is exceeded or not. */
		raiOutputs?: Array<LearningGenaiRootRAIOutput>;

		/** The recitation result for one input */
		recitationResult?: LearningGenaiRecitationRecitationResult;

		/** NOT YET IMPLEMENTED. Number of tokens returned as part of this candidate. */
		returnTokenCount?: number | null;

		/** All the different scores for a message are logged here. */
		scores?: Array<LearningGenaiRootScore>;

		/** Whether the response is terminated during streaming return. Only used for streaming requests. */
		streamTerminated?: boolean | null;

		/** NOT YET IMPLEMENTED. Aggregated number of total tokens decoded so far. For streaming, this is sum of all the tokens decoded so far i.e. aggregated count. */
		totalDecodedTokenCount?: number | null;

		/** Translated user-prompt used for RAI post processing. This is for internal processing only. We will translate in pre-processor and pass the translated text to the post processor using this field. It will be empty if non of the signals requested need translation. */
		translatedUserPrompts?: Array<string>;

		/** The RAI results for a given text. */
		vertexRaiResult?: CloudAiNlLlmProtoServiceRaiResult;
	}

	/** LINT.IfChange This metadata contains additional information required for debugging. */
	export interface LearningServingLlmMessageMetadataFormProperties {
		currentStreamTextLength: FormControl<number | null | undefined>,

		/** Whether the corresponding message has been deleted. */
		deleted: FormControl<boolean | null | undefined>,

		/** NOT YET IMPLEMENTED. */
		finishReason: FormControl<LearningServingLlmMessageMetadataFinishReason | null | undefined>,

		/** Applies to Response message only. Indicates whether the message is a fallback and the response would have otherwise been empty. */
		isFallback: FormControl<boolean | null | undefined>,

		/** Detected language. */
		language: FormControl<string | null | undefined>,

		/** The LM prefix used to generate this response. */
		lmPrefix: FormControl<string | null | undefined>,

		/** The original text generated by LLM. This is the raw output for debugging purposes. */
		originalText: FormControl<string | null | undefined>,

		/** NOT YET IMPLEMENTED. Applies to streaming only. Number of tokens decoded / emitted by the model as part of this stream. This may be different from token_count, which contains number of tokens returned in this response after any response rewriting / truncation. */
		perStreamDecodedTokenCount: FormControl<number | null | undefined>,

		/** NOT YET IMPLEMENTED. Number of tokens returned as part of this candidate. */
		returnTokenCount: FormControl<number | null | undefined>,

		/** Whether the response is terminated during streaming return. Only used for streaming requests. */
		streamTerminated: FormControl<boolean | null | undefined>,

		/** NOT YET IMPLEMENTED. Aggregated number of total tokens decoded so far. For streaming, this is sum of all the tokens decoded so far i.e. aggregated count. */
		totalDecodedTokenCount: FormControl<number | null | undefined>,
	}
	export function CreateLearningServingLlmMessageMetadataFormGroup() {
		return new FormGroup<LearningServingLlmMessageMetadataFormProperties>({
			currentStreamTextLength: new FormControl<number | null | undefined>(undefined),
			deleted: new FormControl<boolean | null | undefined>(undefined),
			finishReason: new FormControl<LearningServingLlmMessageMetadataFinishReason | null | undefined>(undefined),
			isFallback: new FormControl<boolean | null | undefined>(undefined),
			language: new FormControl<string | null | undefined>(undefined),
			lmPrefix: new FormControl<string | null | undefined>(undefined),
			originalText: new FormControl<string | null | undefined>(undefined),
			perStreamDecodedTokenCount: new FormControl<number | null | undefined>(undefined),
			returnTokenCount: new FormControl<number | null | undefined>(undefined),
			streamTerminated: new FormControl<boolean | null | undefined>(undefined),
			totalDecodedTokenCount: new FormControl<number | null | undefined>(undefined),
		});

	}

	export interface LearningGenaiRootClassifierOutputSummary {
		metrics?: Array<LearningGenaiRootMetricOutput>;
		ruleOutput?: LearningGenaiRootRuleOutput;

		/** outputs of all matching rule. */
		ruleOutputs?: Array<LearningGenaiRootRuleOutput>;
	}
	export interface LearningGenaiRootClassifierOutputSummaryFormProperties {
	}
	export function CreateLearningGenaiRootClassifierOutputSummaryFormGroup() {
		return new FormGroup<LearningGenaiRootClassifierOutputSummaryFormProperties>({
		});

	}

	export interface LearningGenaiRootMetricOutput {
		debug?: string | null;

		/** Name of the metric. */
		name?: string | null;
		numericValue?: number | null;

		/** Wire-format for a Status object */
		status?: UtilStatusProto;
		stringValue?: string | null;
	}
	export interface LearningGenaiRootMetricOutputFormProperties {
		debug: FormControl<string | null | undefined>,

		/** Name of the metric. */
		name: FormControl<string | null | undefined>,
		numericValue: FormControl<number | null | undefined>,
		stringValue: FormControl<string | null | undefined>,
	}
	export function CreateLearningGenaiRootMetricOutputFormGroup() {
		return new FormGroup<LearningGenaiRootMetricOutputFormProperties>({
			debug: new FormControl<string | null | undefined>(undefined),
			name: new FormControl<string | null | undefined>(undefined),
			numericValue: new FormControl<number | null | undefined>(undefined),
			stringValue: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Wire-format for a Status object */
	export interface UtilStatusProto {

		/** The canonical error code (see codes.proto) that most closely corresponds to this status. This may be missing, and in the common case of the generic space, it definitely will be. */
		canonicalCode?: number | null;

		/** Numeric code drawn from the space specified below. Often, this is the canonical error space, and code is drawn from google3/util/task/codes.proto */
		code?: number | null;

		/** Detail message */
		message?: string | null;

		/** This is proto2's version of MessageSet. */
		messageSet?: Proto2BridgeMessageSet;

		/** The following are usually only present when code != 0 Space to which this status belongs */
		space?: string | null;
	}

	/** Wire-format for a Status object */
	export interface UtilStatusProtoFormProperties {

		/** The canonical error code (see codes.proto) that most closely corresponds to this status. This may be missing, and in the common case of the generic space, it definitely will be. */
		canonicalCode: FormControl<number | null | undefined>,

		/** Numeric code drawn from the space specified below. Often, this is the canonical error space, and code is drawn from google3/util/task/codes.proto */
		code: FormControl<number | null | undefined>,

		/** Detail message */
		message: FormControl<string | null | undefined>,

		/** The following are usually only present when code != 0 Space to which this status belongs */
		space: FormControl<string | null | undefined>,
	}
	export function CreateUtilStatusProtoFormGroup() {
		return new FormGroup<UtilStatusProtoFormProperties>({
			canonicalCode: new FormControl<number | null | undefined>(undefined),
			code: new FormControl<number | null | undefined>(undefined),
			message: new FormControl<string | null | undefined>(undefined),
			space: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** This is proto2's version of MessageSet. */
	export interface Proto2BridgeMessageSet {
	}

	/** This is proto2's version of MessageSet. */
	export interface Proto2BridgeMessageSetFormProperties {
	}
	export function CreateProto2BridgeMessageSetFormGroup() {
		return new FormGroup<Proto2BridgeMessageSetFormProperties>({
		});

	}

	export interface LearningGenaiRootRuleOutput {
		decision?: LearningGenaiRootRuleOutputDecision | null;
		name?: string | null;
	}
	export interface LearningGenaiRootRuleOutputFormProperties {
		decision: FormControl<LearningGenaiRootRuleOutputDecision | null | undefined>,
		name: FormControl<string | null | undefined>,
	}
	export function CreateLearningGenaiRootRuleOutputFormGroup() {
		return new FormGroup<LearningGenaiRootRuleOutputFormProperties>({
			decision: new FormControl<LearningGenaiRootRuleOutputDecision | null | undefined>(undefined),
			name: new FormControl<string | null | undefined>(undefined),
		});

	}

	export enum LearningGenaiRootRuleOutputDecision { NO_MATCH = 0, MATCH = 1 }

	export interface LearningGenaiRootFilterMetadata {

		/** Filter confidence. */
		confidence?: LearningGenaiRootFilterMetadataConfidence | null;
		debugInfo?: LearningGenaiRootFilterMetadataFilterDebugInfo;

		/** A fallback message chosen by the applied filter. */
		fallback?: string | null;

		/** Additional info for the filter. */
		info?: string | null;

		/** Name of the filter that triggered. */
		name?: string | null;

		/** Filter reason. */
		reason?: LearningGenaiRootFilterMetadataReason | null;

		/** The input query or generated response that is getting filtered. */
		text?: string | null;
	}
	export interface LearningGenaiRootFilterMetadataFormProperties {

		/** Filter confidence. */
		confidence: FormControl<LearningGenaiRootFilterMetadataConfidence | null | undefined>,

		/** A fallback message chosen by the applied filter. */
		fallback: FormControl<string | null | undefined>,

		/** Additional info for the filter. */
		info: FormControl<string | null | undefined>,

		/** Name of the filter that triggered. */
		name: FormControl<string | null | undefined>,

		/** Filter reason. */
		reason: FormControl<LearningGenaiRootFilterMetadataReason | null | undefined>,

		/** The input query or generated response that is getting filtered. */
		text: FormControl<string | null | undefined>,
	}
	export function CreateLearningGenaiRootFilterMetadataFormGroup() {
		return new FormGroup<LearningGenaiRootFilterMetadataFormProperties>({
			confidence: new FormControl<LearningGenaiRootFilterMetadataConfidence | null | undefined>(undefined),
			fallback: new FormControl<string | null | undefined>(undefined),
			info: new FormControl<string | null | undefined>(undefined),
			name: new FormControl<string | null | undefined>(undefined),
			reason: new FormControl<LearningGenaiRootFilterMetadataReason | null | undefined>(undefined),
			text: new FormControl<string | null | undefined>(undefined),
		});

	}

	export enum LearningGenaiRootFilterMetadataConfidence { FILTER_CONFIDENCE_UNKNOWN = 0, FILTER_CONFIDENCE_VERY_LOW = 1, FILTER_CONFIDENCE_LOW = 2, FILTER_CONFIDENCE_MEDIUM = 3, FILTER_CONFIDENCE_HIGH = 4, FILTER_CONFIDENCE_VERY_HIGH = 5 }

	export interface LearningGenaiRootFilterMetadataFilterDebugInfo {
		classifierOutput?: LearningGenaiRootClassifierOutput;
		defaultMetadata?: string | null;
		languageFilterResult?: LearningServingLlmLanguageFilterResult;

		/** This is per harm. */
		raiOutput?: LearningGenaiRootRAIOutput;

		/** The RAI results for a given text. */
		raiResult?: CloudAiNlLlmProtoServiceRaiResult;

		/** An RAI signal for a single category. */
		raiSignal?: CloudAiNlLlmProtoServiceRaiSignal;

		/** The recitation result for one stream input */
		streamRecitationResult?: LanguageLabsAidaTrustRecitationProtoStreamRecitationResult;
		takedownResult?: LearningGenaiRootTakedownResult;

		/** A model can generate multiple signals and this captures all the generated signals for a single message. */
		toxicityResult?: LearningGenaiRootToxicityResult;
	}
	export interface LearningGenaiRootFilterMetadataFilterDebugInfoFormProperties {
		defaultMetadata: FormControl<string | null | undefined>,
	}
	export function CreateLearningGenaiRootFilterMetadataFilterDebugInfoFormGroup() {
		return new FormGroup<LearningGenaiRootFilterMetadataFilterDebugInfoFormProperties>({
			defaultMetadata: new FormControl<string | null | undefined>(undefined),
		});

	}

	export interface LearningGenaiRootClassifierOutput {
		ruleOutput?: LearningGenaiRootRuleOutput;

		/** outputs of all matching rule. */
		ruleOutputs?: Array<LearningGenaiRootRuleOutput>;

		/** DataProviderOutput and MetricOutput can be saved between calls to the Classifier framework. For instance, you can run the query classifier, get outputs from those metrics, then use them in a result classifier as well. Example rule based on this idea: and_rules { rule { metric_name: 'query_safesearch_v2' ... } rule { metric_name: 'response_safesearch_v2' ... } } */
		state?: LearningGenaiRootClassifierState;
	}
	export interface LearningGenaiRootClassifierOutputFormProperties {
	}
	export function CreateLearningGenaiRootClassifierOutputFormGroup() {
		return new FormGroup<LearningGenaiRootClassifierOutputFormProperties>({
		});

	}


	/** DataProviderOutput and MetricOutput can be saved between calls to the Classifier framework. For instance, you can run the query classifier, get outputs from those metrics, then use them in a result classifier as well. Example rule based on this idea: and_rules { rule { metric_name: 'query_safesearch_v2' ... } rule { metric_name: 'response_safesearch_v2' ... } } */
	export interface LearningGenaiRootClassifierState {
		dataProviderOutput?: Array<LearningGenaiRootDataProviderOutput>;
		metricOutput?: Array<LearningGenaiRootMetricOutput>;
	}

	/** DataProviderOutput and MetricOutput can be saved between calls to the Classifier framework. For instance, you can run the query classifier, get outputs from those metrics, then use them in a result classifier as well. Example rule based on this idea: and_rules { rule { metric_name: 'query_safesearch_v2' ... } rule { metric_name: 'response_safesearch_v2' ... } } */
	export interface LearningGenaiRootClassifierStateFormProperties {
	}
	export function CreateLearningGenaiRootClassifierStateFormGroup() {
		return new FormGroup<LearningGenaiRootClassifierStateFormProperties>({
		});

	}

	export interface LearningGenaiRootDataProviderOutput {
		name?: string | null;

		/** Wire-format for a Status object */
		status?: UtilStatusProto;
	}
	export interface LearningGenaiRootDataProviderOutputFormProperties {
		name: FormControl<string | null | undefined>,
	}
	export function CreateLearningGenaiRootDataProviderOutputFormGroup() {
		return new FormGroup<LearningGenaiRootDataProviderOutputFormProperties>({
			name: new FormControl<string | null | undefined>(undefined),
		});

	}

	export interface LearningServingLlmLanguageFilterResult {

		/** False when query or response should be filtered out due to unsupported language. */
		allowed?: boolean | null;

		/** Language of the query or response. */
		detectedLanguage?: string | null;

		/** Probability of the language predicted as returned by LangID. */
		detectedLanguageProbability?: number | null;
	}
	export interface LearningServingLlmLanguageFilterResultFormProperties {

		/** False when query or response should be filtered out due to unsupported language. */
		allowed: FormControl<boolean | null | undefined>,

		/** Language of the query or response. */
		detectedLanguage: FormControl<string | null | undefined>,

		/** Probability of the language predicted as returned by LangID. */
		detectedLanguageProbability: FormControl<number | null | undefined>,
	}
	export function CreateLearningServingLlmLanguageFilterResultFormGroup() {
		return new FormGroup<LearningServingLlmLanguageFilterResultFormProperties>({
			allowed: new FormControl<boolean | null | undefined>(undefined),
			detectedLanguage: new FormControl<string | null | undefined>(undefined),
			detectedLanguageProbability: new FormControl<number | null | undefined>(undefined),
		});

	}


	/** This is per harm. */
	export interface LearningGenaiRootRAIOutput {
		allowed?: boolean | null;
		harm?: LearningGenaiRootHarm;
		name?: string | null;
		score?: number | null;
	}

	/** This is per harm. */
	export interface LearningGenaiRootRAIOutputFormProperties {
		allowed: FormControl<boolean | null | undefined>,
		name: FormControl<string | null | undefined>,
		score: FormControl<number | null | undefined>,
	}
	export function CreateLearningGenaiRootRAIOutputFormGroup() {
		return new FormGroup<LearningGenaiRootRAIOutputFormProperties>({
			allowed: new FormControl<boolean | null | undefined>(undefined),
			name: new FormControl<string | null | undefined>(undefined),
			score: new FormControl<number | null | undefined>(undefined),
		});

	}

	export interface LearningGenaiRootHarm {

		/** Please do not use, this is still under development. */
		contextualDangerous?: boolean | null;
		csam?: boolean | null;
		fringe?: boolean | null;

		/** Harm type for images */
		grailImageHarmType?: LearningGenaiRootHarmGrailImageHarmType;

		/** Harm type for text */
		grailTextHarmType?: LearningGenaiRootHarmGrailTextHarmType;
		imageCsam?: boolean | null;
		imagePedo?: boolean | null;

		/** Image signals */
		imagePorn?: boolean | null;
		imageViolence?: boolean | null;
		pqc?: boolean | null;
		safetycat?: LearningGenaiRootHarmSafetyCatCategories;
		spii?: LearningGenaiRootHarmSpiiFilter;
		threshold?: number | null;
		videoFrameCsam?: boolean | null;
		videoFramePedo?: boolean | null;

		/** Video frame signals */
		videoFramePorn?: boolean | null;
		videoFrameViolence?: boolean | null;
	}
	export interface LearningGenaiRootHarmFormProperties {

		/** Please do not use, this is still under development. */
		contextualDangerous: FormControl<boolean | null | undefined>,
		csam: FormControl<boolean | null | undefined>,
		fringe: FormControl<boolean | null | undefined>,
		imageCsam: FormControl<boolean | null | undefined>,
		imagePedo: FormControl<boolean | null | undefined>,

		/** Image signals */
		imagePorn: FormControl<boolean | null | undefined>,
		imageViolence: FormControl<boolean | null | undefined>,
		pqc: FormControl<boolean | null | undefined>,
		threshold: FormControl<number | null | undefined>,
		videoFrameCsam: FormControl<boolean | null | undefined>,
		videoFramePedo: FormControl<boolean | null | undefined>,

		/** Video frame signals */
		videoFramePorn: FormControl<boolean | null | undefined>,
		videoFrameViolence: FormControl<boolean | null | undefined>,
	}
	export function CreateLearningGenaiRootHarmFormGroup() {
		return new FormGroup<LearningGenaiRootHarmFormProperties>({
			contextualDangerous: new FormControl<boolean | null | undefined>(undefined),
			csam: new FormControl<boolean | null | undefined>(undefined),
			fringe: new FormControl<boolean | null | undefined>(undefined),
			imageCsam: new FormControl<boolean | null | undefined>(undefined),
			imagePedo: new FormControl<boolean | null | undefined>(undefined),
			imagePorn: new FormControl<boolean | null | undefined>(undefined),
			imageViolence: new FormControl<boolean | null | undefined>(undefined),
			pqc: new FormControl<boolean | null | undefined>(undefined),
			threshold: new FormControl<number | null | undefined>(undefined),
			videoFrameCsam: new FormControl<boolean | null | undefined>(undefined),
			videoFramePedo: new FormControl<boolean | null | undefined>(undefined),
			videoFramePorn: new FormControl<boolean | null | undefined>(undefined),
			videoFrameViolence: new FormControl<boolean | null | undefined>(undefined),
		});

	}


	/** Harm type for images */
	export interface LearningGenaiRootHarmGrailImageHarmType {
		imageHarmType?: Array<string>;
	}

	/** Harm type for images */
	export interface LearningGenaiRootHarmGrailImageHarmTypeFormProperties {
	}
	export function CreateLearningGenaiRootHarmGrailImageHarmTypeFormGroup() {
		return new FormGroup<LearningGenaiRootHarmGrailImageHarmTypeFormProperties>({
		});

	}


	/** Harm type for text */
	export interface LearningGenaiRootHarmGrailTextHarmType {
		harmType?: Array<string>;
	}

	/** Harm type for text */
	export interface LearningGenaiRootHarmGrailTextHarmTypeFormProperties {
	}
	export function CreateLearningGenaiRootHarmGrailTextHarmTypeFormGroup() {
		return new FormGroup<LearningGenaiRootHarmGrailTextHarmTypeFormProperties>({
		});

	}

	export interface LearningGenaiRootHarmSafetyCatCategories {
		categories?: Array<string>;
	}
	export interface LearningGenaiRootHarmSafetyCatCategoriesFormProperties {
	}
	export function CreateLearningGenaiRootHarmSafetyCatCategoriesFormGroup() {
		return new FormGroup<LearningGenaiRootHarmSafetyCatCategoriesFormProperties>({
		});

	}

	export interface LearningGenaiRootHarmSpiiFilter {
		usBankRoutingMicr?: boolean | null;
		usEmployerIdentificationNumber?: boolean | null;
		usSocialSecurityNumber?: boolean | null;
	}
	export interface LearningGenaiRootHarmSpiiFilterFormProperties {
		usBankRoutingMicr: FormControl<boolean | null | undefined>,
		usEmployerIdentificationNumber: FormControl<boolean | null | undefined>,
		usSocialSecurityNumber: FormControl<boolean | null | undefined>,
	}
	export function CreateLearningGenaiRootHarmSpiiFilterFormGroup() {
		return new FormGroup<LearningGenaiRootHarmSpiiFilterFormProperties>({
			usBankRoutingMicr: new FormControl<boolean | null | undefined>(undefined),
			usEmployerIdentificationNumber: new FormControl<boolean | null | undefined>(undefined),
			usSocialSecurityNumber: new FormControl<boolean | null | undefined>(undefined),
		});

	}


	/** The RAI results for a given text. */
	export interface CloudAiNlLlmProtoServiceRaiResult {

		/** The recitation result for one input */
		aidaRecitationResult?: LanguageLabsAidaTrustRecitationProtoRecitationResult;

		/** Use `triggered_blocklist`. */
		blocked?: boolean | null;

		/** The error codes indicate which RAI filters block the response. */
		errorCodes?: Array<number>;

		/** Whether the text should be filtered and not shown to the end user. This is determined based on a combination of `triggered_recitation`, `triggered_blocklist`, `language_filter_result`, and `triggered_safety_filter`. */
		filtered?: boolean | null;
		languageFilterResult?: LearningServingLlmLanguageFilterResult;

		/** The RAI signals for the text. */
		raiSignals?: Array<CloudAiNlLlmProtoServiceRaiSignal>;

		/** Whether the text triggered the blocklist. */
		triggeredBlocklist?: boolean | null;

		/** Whether the text should be blocked by the recitation result from Aida recitation checker. It is determined from aida_recitation_result. */
		triggeredRecitation?: boolean | null;

		/** Whether the text triggered the safety filter. Currently, this is due to CSAI triggering or one of four categories (derogatory, sexual, toxic, violent) having a score over the filter threshold. */
		triggeredSafetyFilter?: boolean | null;
	}

	/** The RAI results for a given text. */
	export interface CloudAiNlLlmProtoServiceRaiResultFormProperties {

		/** Use `triggered_blocklist`. */
		blocked: FormControl<boolean | null | undefined>,

		/** Whether the text should be filtered and not shown to the end user. This is determined based on a combination of `triggered_recitation`, `triggered_blocklist`, `language_filter_result`, and `triggered_safety_filter`. */
		filtered: FormControl<boolean | null | undefined>,

		/** Whether the text triggered the blocklist. */
		triggeredBlocklist: FormControl<boolean | null | undefined>,

		/** Whether the text should be blocked by the recitation result from Aida recitation checker. It is determined from aida_recitation_result. */
		triggeredRecitation: FormControl<boolean | null | undefined>,

		/** Whether the text triggered the safety filter. Currently, this is due to CSAI triggering or one of four categories (derogatory, sexual, toxic, violent) having a score over the filter threshold. */
		triggeredSafetyFilter: FormControl<boolean | null | undefined>,
	}
	export function CreateCloudAiNlLlmProtoServiceRaiResultFormGroup() {
		return new FormGroup<CloudAiNlLlmProtoServiceRaiResultFormProperties>({
			blocked: new FormControl<boolean | null | undefined>(undefined),
			filtered: new FormControl<boolean | null | undefined>(undefined),
			triggeredBlocklist: new FormControl<boolean | null | undefined>(undefined),
			triggeredRecitation: new FormControl<boolean | null | undefined>(undefined),
			triggeredSafetyFilter: new FormControl<boolean | null | undefined>(undefined),
		});

	}


	/** The recitation result for one input */
	export interface LanguageLabsAidaTrustRecitationProtoRecitationResult {
		dynamicSegmentResults?: Array<LanguageLabsAidaTrustRecitationProtoSegmentResult>;

		/** The recitation action for one given input. When its segments contain different actions, the overall action will be returned in the precedence of BLOCK > CITE > NO_ACTION. */
		recitationAction?: LanguageLabsAidaTrustRecitationProtoSegmentResultSegmentRecitationAction | null;
		trainingSegmentResults?: Array<LanguageLabsAidaTrustRecitationProtoSegmentResult>;
	}

	/** The recitation result for one input */
	export interface LanguageLabsAidaTrustRecitationProtoRecitationResultFormProperties {

		/** The recitation action for one given input. When its segments contain different actions, the overall action will be returned in the precedence of BLOCK > CITE > NO_ACTION. */
		recitationAction: FormControl<LanguageLabsAidaTrustRecitationProtoSegmentResultSegmentRecitationAction | null | undefined>,
	}
	export function CreateLanguageLabsAidaTrustRecitationProtoRecitationResultFormGroup() {
		return new FormGroup<LanguageLabsAidaTrustRecitationProtoRecitationResultFormProperties>({
			recitationAction: new FormControl<LanguageLabsAidaTrustRecitationProtoSegmentResultSegmentRecitationAction | null | undefined>(undefined),
		});

	}


	/** The recitation result for each segment in a given input. */
	export interface LanguageLabsAidaTrustRecitationProtoSegmentResult {

		/** The dataset the segment came from. */
		attributionDataset?: LanguageLabsAidaTrustRecitationProtoSegmentResultAttributionDataset | null;

		/** human-friendly string that contains information from doc_attribution which could be shown by clients */
		displayAttributionMessage?: string | null;

		/** The proto defines the attribution information for a document using whatever fields are most applicable for that document's datasource. For example, a Wikipedia article's attribution is in the form of its article title, a website is in the form of a URL, and a Github repo is in the form of a repo name. Next id:28 */
		docAttribution?: LanguageLabsAidaTrustRecitationProtoDocAttribution;

		/** number of documents that contained this segment */
		docOccurrences?: number | null;
		endIndex?: number | null;

		/** The raw text in the given input that is corresponding to the segment. It will be available only when 'return_segment_raw_text' is enabled in the request options. */
		rawText?: string | null;
		segmentRecitationAction?: LanguageLabsAidaTrustRecitationProtoSegmentResultSegmentRecitationAction | null;

		/** The segment boundary start (inclusive) and end index (exclusive) in the given text. In the streaming RPC, the indexes always start from the beginning of the first text in the entire stream. The indexes are measured in UTF-16 code units. */
		startIndex?: number | null;
	}

	/** The recitation result for each segment in a given input. */
	export interface LanguageLabsAidaTrustRecitationProtoSegmentResultFormProperties {

		/** The dataset the segment came from. */
		attributionDataset: FormControl<LanguageLabsAidaTrustRecitationProtoSegmentResultAttributionDataset | null | undefined>,

		/** human-friendly string that contains information from doc_attribution which could be shown by clients */
		displayAttributionMessage: FormControl<string | null | undefined>,

		/** number of documents that contained this segment */
		docOccurrences: FormControl<number | null | undefined>,
		endIndex: FormControl<number | null | undefined>,

		/** The raw text in the given input that is corresponding to the segment. It will be available only when 'return_segment_raw_text' is enabled in the request options. */
		rawText: FormControl<string | null | undefined>,
		segmentRecitationAction: FormControl<LanguageLabsAidaTrustRecitationProtoSegmentResultSegmentRecitationAction | null | undefined>,

		/** The segment boundary start (inclusive) and end index (exclusive) in the given text. In the streaming RPC, the indexes always start from the beginning of the first text in the entire stream. The indexes are measured in UTF-16 code units. */
		startIndex: FormControl<number | null | undefined>,
	}
	export function CreateLanguageLabsAidaTrustRecitationProtoSegmentResultFormGroup() {
		return new FormGroup<LanguageLabsAidaTrustRecitationProtoSegmentResultFormProperties>({
			attributionDataset: new FormControl<LanguageLabsAidaTrustRecitationProtoSegmentResultAttributionDataset | null | undefined>(undefined),
			displayAttributionMessage: new FormControl<string | null | undefined>(undefined),
			docOccurrences: new FormControl<number | null | undefined>(undefined),
			endIndex: new FormControl<number | null | undefined>(undefined),
			rawText: new FormControl<string | null | undefined>(undefined),
			segmentRecitationAction: new FormControl<LanguageLabsAidaTrustRecitationProtoSegmentResultSegmentRecitationAction | null | undefined>(undefined),
			startIndex: new FormControl<number | null | undefined>(undefined),
		});

	}

	export enum LanguageLabsAidaTrustRecitationProtoSegmentResultAttributionDataset { DATASET_UNSPECIFIED = 0, WIKIPEDIA = 1, WEBDOCS = 2, WEBDOCS_FINETUNE = 3, GITHUB_MIRROR = 4, BOOKS_FULL_VIEW = 5, BOOKS_PRIVATE = 6, GNEWS = 7, ULM_DOCJOINS = 8, ULM_DOCJOINS_DEDUPED = 9, MEENA_FC = 10, PODCAST = 11, AQUA = 12, WEB_ASR = 13, BARD_GOLDEN = 14, COMMON_SENSE_REASONING = 15, MATH = 16, MATH_REASONING = 17, CLEAN_ARXIV = 18, LAMDA_FACTUALITY_E2E_QUERY_GENERATION = 19, LAMDA_FACTUALITY_E2E_RESPONSE_GENERATION = 20, MASSIVE_FORUM_THREAD_SCORED_BARD = 21, MASSIVE_FORUM_THREAD_SCORED_LONG_200 = 22, MASSIVE_FORUM_THREAD_SCORED_LONG_500 = 23, DOCUMENT_CHUNKS = 24, MEENA_RESEARCH_PHASE_GOLDEN_MARKDOWN = 25, MEENA_RESEARCH_PHASE_GOOGLERS = 26, MEENA_RESPONSE_SAFETY_HUMAN_GEN = 27, MEENA_RESPONSE_SAFETY_SCHEMA_NO_BROADCAST = 28, MEENA_RESPONSE_SAFETY_V3_HUMAN_GEN2 = 29, MEENA_RESPONSE_SAFETY_V3_SCHEMA_NO_BROADCAST = 30, LAMDA_FACTUALITY_TRIGGER = 31, LAMDA_SAFETY_V2_SCHEMA_NO_BROADCAST = 32, LAMDA_SSI_DISCRIMINATIVE = 33, ASSISTANT_PERSONALITY_SAFETY = 34, PODCAST_FINETUNE_DIALOG = 35, WORLD_QUERY_GENERATOR = 36, C4_JOINED_DOCJOINS = 37, HOL4_THEORIES = 38, HOL_LIGHT_THEORIES = 39, HOLSTEPS = 40, ISABELLE_STEP = 41, ISABELLE_THEORIES = 42, LEAN_MATHLIB_THEORIES = 43, LEAN_STEP = 44, MIZAR_THEORIES = 45, COQ_STEP = 46, COQ_THEORIES = 47, AMPS_KHAN = 48, AMPS_MATHEMATICA = 49, CODEY_CODE = 50, CODE_QA_SE = 51, CODE_QA_SO = 52, CODE_QA_FT_FORMAT = 53, CODE_QA_FT_KNOWLEDGE = 54, CODE_QA_GITHUB_FILTERED_CODE = 55, BARD_PERSONALITY_GOLDEN = 56, ULM_DOCJOINS_WITH_URLS_EN = 57, ULM_DOCJOINS_WITH_URLS_I18N = 58, GOODALL_MTV5_GITHUB = 59, GOODALL_MTV5_BOOKS = 60, GOODALL_MTV5_C4 = 61, GOODALL_MTV5_WIKIPEDIA = 62, GOODALL_MW_TOP_100B = 63, GOODALL_MW_STACK_EXCHANGE = 64, GOODALL_MW_TOP_0_10B = 65, GOODALL_MW_TOP_10B_20B = 66, CODEY_NOTEBOOK_LM_PRETRAINING = 67, VERTEX_SAFE_FLAN = 68, GITHUB_MIRROR_V1_0_1 = 69, GITHUB_MIRROR_V2_1_0 = 70, CMS_WIKIPEDIA_LANG_FILTERED = 71, CMS_STACKOVERFLOW_MULTILINGUAL = 72, CMS_STACKEXCHANGE = 73, PUBMED = 74, GEMINI_DOCJOINS_EN_TOP10B_GCC = 75, GEMINI_DOCJOINS_EN_TOP10B_TOP20B_GCC = 76, GEMINI_DOCJOINS_EN_TOP20B_TOP100B_GCC = 77, GEMINI_DOCJOINS_EN_TOP100B_ALL_INDEXED_GCC = 78, GEMINI_DOCJOINS_I18N_TOP10B_GCC = 79, GEMINI_DOCJOINS_I18N_TOP10B_TOP20B_GCC = 80, GEMINI_DOCJOINS_I18N_TOP20B_TOP100B_GCC = 81, SIMPLIFIED_HTML_V1_GCC = 82, GEMINI_DOCJOINS_TOXICITY_TAGGED_GCC = 83, CMS_GITHUB_V4 = 84, GITHUB_HTML_V4 = 85, GITHUB_OTHER_V4 = 86, GITHUB_LONG_TAIL_V4 = 87, CMS_GITHUB_MULTIFILE_V4 = 88, GITHUB_DIFFS_WITH_COMMIT_MESSAGE = 89, ULM_ARXIV = 90, NONPUB_COPYRIGHT_BOOKS_V2_70_CONF_040623_LONG_DEDUP_ENONLY = 91, NONPUB_COPYRIGHT_BOOKS_V2_70_CONF_040623_LONG_DEDUP_NONENONLY = 92, QUORA = 93, PODCASTS_ROBOTSTXT = 94, COMBINED_REDDIT = 95, CANARIES_SHUFFLED = 96, CLM_TRANSLATE_DATAV2_ALLTIERS_GCC_MIX = 97, TECHDOCS_DATA_SOURCE = 98, SCIENCE_PDF_70M_DOCS_FILTERED = 99, GEMINI_V1_CMS_WIKIPEDIA_LANG_FILTERED = 100, GEMINI_V1_WIKIPEDIA_DIFFS = 101, GEMINI_V1_DOCJOINS_EN_TOP10B_GCC_NODEDUP_050523 = 102, GEMINI_V1_DOCJOINS_EN_TOP10B_TOP20B_GCC_NODEDUP_050523 = 103, GEMINI_V1_DOCJOINS_EN_TOP20B_TOP100B_GCC_NODEDUP_050523 = 104, GEMINI_V1_DOCJOINS_EN_TOP100B_ALL_INDEXED_GCC_NODEDUP_050523 = 105, GEMINI_V1_DOCJOINS_I18N_TOP10B_GCC_050523 = 106, GEMINI_V1_DOCJOINS_I18N_TOP10B_TOP20B_GCC_050523 = 107, GEMINI_V1_DOCJOINS_I18N_TOP20B_TOP100B_GCC_050523 = 108, GEMINI_V1_SIMPLIFIED_HTML_V2_GCC = 109, GEMINI_V1_CMS_STACKOVERFLOW_MULTILINGUAL_V2 = 110, GEMINI_V1_CMS_STACKEXCHANGE_DECONT = 111, GEMINI_V1_QUORA = 112, GEMINI_V1_COMBINED_REDDIT = 113, GEMINI_V1_DOCJOIN_100B_EN_TOXICITY_TAGGED_GCC_FIXED_TAGS = 114, GEMINI_V1_PUBMED = 115, GEMINI_V1_WEB_MATH_V2 = 116, GEMINI_V1_CMS_GITHUB_DECONTAMINATED_V_7 = 117, GEMINI_V1_GITHUB_DIFF_WITH_COMMIT_MESSAGE_V2 = 118, GEMINI_V1_GITHUB_HTML_CSS_XML_V4 = 119, GEMINI_V1_GITHUB_OTHER_V4 = 120, GEMINI_V1_GITHUB_LONG_TAIL_V4 = 121, GEMINI_V1_GITHUB_JUPTYER_NOTEBOOKS_SSTABLE = 122, GEMINI_V1_ULM_ARXIV_SSTABLE = 123, GEMINI_V1_PODCASTS_ROBOTSTXT = 124, GEMINI_V1_SCIENCE_PDF_68M_HQ_DOCS_GCC = 125, GEMINI_V1_GITHUB_TECHDOCS_V2 = 126, GEMINI_V1_NONPUB_COPYRIGHT_BOOKS_V2_70_CONF_LONG_DEDUP_EN = 127, GEMINI_V1_NONPUB_COPYRIGHT_BOOKS_V2_70_CONF_LONG_DEDUP_NONEN = 128, GEMINI_V1_STEM_BOOKS_650K_TEXT = 129, GEMINI_V1_VQCOCA_1B_MULTIRES_M3W_V2_FILTERED = 130, GEMINI_V1_VQCOCA_1B_MULTIRES_WEBLI_EN_V4_350M_PREFIXED_FILTERED_IMAGE2TEXT = 131, GEMINI_V1_VQCOCA_1B_MULTIRES_SCREENAI_PREFIXED_FILTERED_IMAGE2TEXT = 132, GEMINI_V1_VQCOCA_1B_MULTIRES_CULTURE_PREFIXED_FILTERED_IMAGE2TEXT = 133, GEMINI_V1_VQCOCA_1B_MULTIRES_CC3M_EN_PREFIXED_IMAGE2TEXT = 134, GEMINI_V1_VQCOCA_1B_MULTIRES_CC3M_I18N_PREFIXED_IMAGE2TEXT = 135, GEMINI_V1_VQCOCA_1B_MULTIRES_OCR_EN_PREFIXED_FILTERED_IMAGE2TEXT = 136, GEMINI_V1_VQCOCA_1B_MULTIRES_OCR_NON_EN_PREFIXED_FILTERED_IMAGE2TEXT = 137, GEMINI_V1_VQCOCA_1B_MULTIRES_VTP_4F_VIDEO2TEXT_PREFIX = 138, GEMINI_V1_FORMAL_MATH_WITHOUT_HOLSTEPS_AND_MIZAR = 139, GEMINI_V1_TRANSLATE_DATAV2_ALLTIERS_GCC_MIX = 140, GEMINI_V1_CANARIES_SHUFFLED_DOCJOIN_EN_NONEN_CODE_ARXIV_TRANSLATE = 141, DUET_CLOUD_SECURITY_DOCS = 142, DUET_GITHUB_CODE_SNIPPETS = 143, DUET_GITHUB_FILES = 144, DUET_GOBYEXAMPLE = 145, DUET_GOLANG_DOCS = 146, DUET_CLOUD_DOCS_TROUBLESHOOTING_TABLES = 147, DUET_DEVSITE_DOCS = 148, DUET_CLOUD_BLOG_POSTS = 149, DUET_CLOUD_PODCAST_EPISODES = 150, DUET_YOUTUBE_VIDEOS = 151, DUET_CLOUD_SKILLS_BOOST = 152, DUET_CLOUD_DOCS = 153, DUET_CLOUD_GITHUB_CODE_SNIPPETS_GENERATED = 154, DUET_CLOUD_GITHUB_CODE_SNIPPETS_HANDWRITTEN = 155, DUET_GOOGLESQL_GENERATION = 156, DUET_CLOUD_IX_PROMPTS = 157, DUET_RAD = 158, BARD_ARCADE_GITHUB = 159, MOBILE_ASSISTANT_MAGI_FILTERED_0825_373K = 160, MOBILE_ASSISTANT_PALM24B_FILTERED_400K = 161, GENESIS_NEWS_INSIGHTS = 162, CLOUD_SECURITY_PRETRAINING = 163, CLOUD_SECURITY_FINETUNING = 164, LABS_AQA_DSCOUT = 165, LABS_AQA_TAILWIND = 166, LABS_AQA_DELEWARE = 167, GEMINI_MULTIMODAL_FT_URL = 168, GEMINI_MULTIMODAL_FT_YT = 169, GEMINI_MULTIMODAL_FT_SHUTTERSTOCK = 170, GEMINI_MULTIMODAL_FT_NONE = 171, GEMINI_MULTIMODAL_FT_OTHER = 172, GEMINI_MULTIMODAL_FT_INK = 173, GEMINI_MULTIMODAL_IT = 174, GEMINI_IT_SHUTTERSTOCK = 175, GEMINI_IT_M3W = 176, GEMINI_IT_HEDGING = 177, GEMINI_IT_DSCOUT_FACTUALITY = 178, GEMINI_IT_AQUAMUSE = 179, GEMINI_IT_SHOTGUN = 180, GEMINI_IT_ACI_BENCH = 181, GEMINI_IT_SPIDER_FILTERED = 182, GEMINI_IT_TAB_SUM_BQ = 183, GEMINI_IT_QA_WITH_URL = 184, GEMINI_IT_CODE_INSTRUCT = 185, GEMINI_IT_MED_PALM = 186, GEMINI_IT_TASK_ORIENTED_DIALOG = 187, GEMINI_IT_NIMBUS_GROUNDING_TO_PROMPT = 188, GEMINI_IT_EITL_GEN = 189, GEMINI_IT_HITL_GEN = 190, GEMINI_IT_MECH = 191, GEMINI_IT_TABLE_GEN = 192, GEMINI_IT_NIMBUS_DECIBEL = 193, GEMIT_BRIDGE_SUFFIX_FT = 194, GEMINI_IT_CLOUD_CODE_IF = 195, GEMINI_IT_CLOUD_EUR_LEX_JSON = 196, GEMINI_IT_CLOUD_OASST = 197, GEMINI_IT_CLOUD_SELF_INSTRUCT = 198, GEMINI_IT_CLOUD_UCS_AQUAMUSE = 199, GEMINI_V2_CMS_WIKIPEDIA_LANG_FILTERED_GCC_PII = 200, GEMINI_V2_WIKIPEDIA_DIFFS_COMPLIANT = 201, GEMINI_V2_ENGLISH_ARTICLES_TOP10B_211123_PII_FILTERED = 202, GEMINI_V2_ENGLISH_NONARTICLES_TOP10B_211123_PII_FILTERED = 203, GEMINI_V2_GEMINI_DOCJOINS_NONEN_TOP10B_111323_WITHOUT_CJKT_STOP_NONARTICLES_COMPLIANT = 204, GEMINI_V2_GEMINI_DOCJOINS_NONEN_TOP10B_111323_WITHOUT_CJKT_STOP_ARTICLES_COMPLIANT = 205, GEMINI_V2_ENGLISH_ARTICLES_TOP20B_211123_PII_FILTERED = 206, GEMINI_V2_ENGLISH_NONARTICLES_TOP20B_211123_PII_FILTERED = 207, GEMINI_V2_GEMINI_DOCJOINS_NONEN_TOP20B_111323_WITHOUT_CJKT_STOP_NONARTICLES_COMPLIANT = 208, GEMINI_V2_GEMINI_DOCJOINS_NONEN_TOP20B_111323_WITHOUT_CJKT_STOP_ARTICLES_COMPLIANT = 209, GEMINI_V2_ENGLISH_ARTICLES_TOP100B_211123_PII_FILTERED = 210, GEMINI_V2_ENGLISH_NONARTICLES_TOP100B_211123_PII_FILTERED = 211, GEMINI_V2_GEMINI_DOCJOINS_NONEN_TOP100B_111323_WITHOUT_CJKT_STOP_NONARTICLES_COMPLIANT = 212, GEMINI_V2_GEMINI_DOCJOINS_NONEN_TOP100B_111323_WITHOUT_CJKT_STOP_ARTICLES_COMPLIANT = 213, GEMINI_V2_ENGLISH_ARTICLES_TOP500B_211123_PII_FILTERED = 214, GEMINI_V2_ENGLISH_NONARTICLES_TOP500B_211123_PII_FILTERED = 215, GEMINI_V2_QUORA_COMPLIANT = 216, GEMINI_V2_FORUMS_V2_COMPLIANT = 217, GEMINI_V2_CMS_STACKOVERFLOW_MULTILINGUAL_V2_COMPLIANT = 218, GEMINI_V2_SIMPLIFIED_HTML_V2_CORRECT_FORMAT_COMPLIANT = 219, GEMINI_V2_GEMINI_DOCJOINS_TOXICITY_TAGGED_FIXED_TAGS_COMPLIANT = 220, GEMINI_V2_CODEWEB_V1_COMPLIANT = 221, GEMINI_V2_LEETCODE_GCC_PII = 222, GEMINI_V2_CODE_CONTESTS_COMPLIANT = 223, GEMINI_V2_CMS_GITHUB_MULTI_FILE_FOR_FIM_GEMBAGZ_FIXED_BYTES_LENGTHS = 224, GEMINI_V2_GITHUB_EVALED_LANGUAGES_COMPLIANT = 225, GEMINI_V2_GITHUB_NON_EVAL_HIGH_PRI_LANGUAGES_COMPLIANT = 226, GEMINI_V2_GITHUB_LOW_PRI_LANGUAGES_AND_CONFIGS_COMPLIANT = 227, GEMINI_V2_GITHUB_LONG_TAIL_AND_STRUCTURED_DATA_COMPLIANT = 228, GEMINI_V2_GITHUB_PYTHON_NOTEBOOKS_COMPLIANT = 229, GEMINI_V2_GITHUB_DIFFS_COMPLIANT = 230, GEMINI_V2_GITHUB_TECHDOCS_COMPLIANT = 231, GEMINI_V2_HIGH_QUALITY_CODE_TARGETED_DATA_COMPLIANT2 = 232, GEMINI_V2_SCIENCE_PDF_68M_HQ_DOCS_DEDUP_COMPLIANT_CLEAN_TEX = 233, GEMINI_V2_ARXIV_2023_COMPLIANT = 234, GEMINI_V2_FORMAL_COMPLIANT = 235, GEMINI_V2_CMS_STACKEXCHANGE_COMPLIANT = 236, GEMINI_V2_PUBMED_COMPLIANT = 237, GEMINI_V2_WEB_MATH_V3_COMPLIANT = 238, GEMINI_V2_SCIENCEWEB_V0_GCC_PII = 239, GEMINI_V2_WEB_POLYMATH_V1_COMPLIANT = 240, GEMINI_V2_MATH_TARGETED_DATA_COMPLIANT2 = 241, GEMINI_V2_BIOLOGY_TARGETED_DATA_COMPLIANT2 = 242, GEMINI_V2_PHYSICS_V2_TARGETED_DATA_COMPLIANT2 = 243, GEMINI_V2_CHEMISTRY_TARGETED_DATA_COMPLIANT2 = 244, GEMINI_V2_MACHINE_LEARNING_TARGETED_DATA_COMPLIANT2 = 245, GEMINI_V2_QA_TARGETED_DATA_COMPLIANT2 = 246, GEMINI_V2_ECONOMICS_V2_TARGETED_DATA_COMPLIANT2 = 247, GEMINI_V2_MEDICAL_TARGETED_DATA_COMPLIANT2 = 248, GEMINI_V2_CHESS_COMPLIANT = 249, GEMINI_V2_YOUTUBE_SCIENCE_V4_FILTERED_COMPLIANT = 250, GEMINI_V2_GOALDMINE_XL_GENERATED_PLUS_GT_NO_DM_MATH_COMPLIANT = 251, GEMINI_V2_FIRSTTIMES_SCIENCE_PDF_DEDUP_HQ_LENGTH_FILTERED_COMPLIANT = 252, GEMINI_V2_PODCASTS_COMPLIANT = 253, GEMINI_V2_EN_NONSCIENCE_PDF_DEDUP_46M_DOCS_COMPLIANT = 254, GEMINI_V2_NONPUB_COPYRIGHT_BOOKS_V3_70_CONF_082323_LONG_DEDUP_ENONLY_COMPLIANT = 255, GEMINI_V2_STEM_COPYRIGHT_BOOKS_V3_111823_LONG_DEDUP_ENONLY_COMPLIANT = 256, GEMINI_V2_STEM_BOOKS_318K_TEXT_COMPLIANT = 257, GEMINI_V2_CACHED_VQCOCA_MMFT_17T_M3W_WITH_IMAGE_TOKENS_INSERTED_INTERLEAVED_COMPLIANT_PII_FILTERED = 258, GEMINI_V2_CACHED_VQCOCA_MMFT_17T_M3W_WITH_IMAGE_TOKENS_INSERTED_INTERLEAVED_COMPLIANT_PII_FILTERED_SOFT = 259, GEMINI_V2_CACHED_VQCOCA_MMFT_17T_WEBLI_EN_V4_350M_T2I_TEXT_TO_IMAGE_COMPLIANT_PII_FILTERED = 260, GEMINI_V2_CACHED_VQCOCA_MMFT_17T_SHUTTERSTOCK_IMAGE_TO_TEXT_COMPLIANT_PII_FILTERED = 261, GEMINI_V2_CACHED_VQCOCA_MMFT_17T_WEBLI_EN_V4_350M_IMAGE_TO_TEXT_COMPLIANT_PII_FILTERED = 262, GEMINI_V2_CACHED_VQCOCA_MMFT_17T_WEBLI_OCR_I18N_680M_IMAGE_TO_TEXT_COMPLIANT_PII_FILTERED = 263, GEMINI_V2_CACHED_VQCOCA_MMFT_17T_CLOUDAI_DOC_IMAGE_TO_TEXT_COMPLIANT_PII_FILTERED = 264, GEMINI_V2_CACHED_VQCOCA_MMFT_17T_SCREENAI_FULL_HTML_75M_IMAGE_TO_TEXT_COMPLIANT_PII_FILTERED = 265, GEMINI_V2_CACHED_VQCOCA_MMFT_17T_SCREENAI_V1_1_IMAGE_TO_TEXT_COMPLIANT_PII_FILTERED = 266, GEMINI_V2_CACHED_VQCOCA_MMFT_17T_WEBLI_OCR_DOC_240M_IMAGE_TO_TEXT_COMPLIANT_PII_FILTERED = 267, GEMINI_V2_CACHED_VQCOCA_MMFT_17T_SHUTTERSTOCK_VIDEO_VIDEO_TO_TEXT_COMPLIANT_PII_FILTERED = 268, GEMINI_V2_CACHED_VQCOCA_MMFT_17T_M4W_INTERLEAVED_COMPLIANT_PII_FILTERED_SOFT = 269, GEMINI_V2_CACHED_VQCOCA_MMFT_17T_CULTURE_IMAGE_TO_TEXT_COMPLIANT_PII_FILTERED = 270, GEMINI_V2_CACHED_VQCOCA_MMFT_17T_WEBLI_DETECTION_IMAGE_TO_TEXT_COMPLIANT_PII_FILTERED = 271, GEMINI_V2_CACHED_VQCOCA_MMFT_17T_WEBLI_ALT_TEXT_NONEN_500M_IMAGE_TO_TEXT_COMPLIANT_PII_FILTERED = 272, GEMINI_V2_CACHED_VQCOCA_MMFT_17T_SPATIAL_AWARE_PALI_IMAGE_TO_TEXT_COMPLIANT_PII_FILTERED = 273, GEMINI_V2_CACHED_VQCOCA_MMFT_17T_CLOUDAI_TABLE2HTML_3D_IMAGE_TO_TEXT_COMPLIANT_PII_FILTERED = 274, GEMINI_V2_CACHED_VQCOCA_MMFT_17T_TABLE2MD_V2_EN_IMAGE_TO_TEXT_COMPLIANT_PII_FILTERED = 275, GEMINI_V2_CACHED_VQCOCA_MMFT_17T_TABLE2MD_V2_NON_EN_IMAGE_TO_TEXT_COMPLIANT_PII_FILTERED = 276, GEMINI_V2_CACHED_VQCOCA_MMFT_17T_CLOUDAI_3D_DOC_IMAGE_TO_TEXT_COMPLIANT_PII_FILTERED = 277, GEMINI_V2_CACHED_VQCOCA_MMFT_17T_CC3M_IMAGE_TO_TEXT_COMPLIANT_PII_FILTERED = 278, GEMINI_V2_CACHED_VQCOCA_MMFT_17T_INFOGRAPHICS_LARGE_WEB_IMAGE_TO_TEXT_COMPLIANT_PII_FILTERED = 279, GEMINI_V2_CACHED_VQCOCA_MMFT_17T_BIORXIV_IMAGE_TO_TEXT_COMPLIANT_PII_FILTERED = 280, GEMINI_V2_CACHED_VQCOCA_MMFT_17T_PHOTOMATH_IM2SOL_PROBLEM_AND_SOLUTION_IMAGE_TO_TEXT_COMPLIANT_PII_FILTERED = 281, GEMINI_V2_CACHED_VQCOCA_MMFT_17T_PLOT2TABLE_V2_IMAGE_TO_TEXT_COMPLIANT_PII_FILTERED = 282, GEMINI_V2_CACHED_VQCOCA_MMFT_17T_TIKZ_DERENDERING_MERGED_IMAGE_TO_TEXT_COMPLIANT_PII_FILTERED = 283, GEMINI_V2_CACHED_VQCOCA_MMFT_17T_CLOUDAI_TABLE2HTML_2D_IMAGE_TO_TEXT_COMPLIANT_PII_FILTERED = 284, GEMINI_V2_CACHED_VQCOCA_MMFT_17T_WIKIPEDIA_EQUATIONS_IMAGE_TO_TEXT_COMPLIANT_PII_FILTERED = 285, GEMINI_V2_CACHED_VQCOCA_MMFT_17T_PHOTOMATH_EQ2LATEX_IMAGE_TO_TEXT_COMPLIANT_PII_FILTERED = 286, GEMINI_V2_CACHED_VQCOCA_MMFT_17T_ARXIV_EQUATIONS_V2_IMAGE_TO_TEXT_COMPLIANT_PII_FILTERED = 287, GEMINI_V2_USM2B_MLPV5_YT_ASR_SUP_GEMBAGZ_V2_COMPLIANT = 288, GEMINI_V2_USM2B_MLPV5_YT_ASR_1P5M_GEMBAGZ_V2_COMPLIANT = 289, GEMINI_V2_USM2B_MLPV5_YT_ASR_4M_GEMBAGZ_V2_COMPLIANT = 290, GEMINI_V2_USM2B_MLPV5_YT_TTS_SUP_GEMBAGZ_V2_COMPLIANT = 291, GEMINI_V2_USM2B_MLPV5_YT_TTS_1P5M_GEMBAGZ_V2_COMPLIANT = 292, GEMINI_V2_USM2B_MLPV5_YT_TTS_4M_GEMBAGZ_V2_COMPLIANT = 293, GEMINI_V2_USM2B_MLPV5_PODIOSET_INTERLEAVE_ENUS_GEMBAGZ_V2_COMPLIANT = 294, GEMINI_V2_USM2B_MLPV5_PODIOSET_INTERLEAVE_I18N_GEMBAGZ_V2_COMPLIANT = 295, GEMINI_V2_USM2B_MLPV5_YT_INTERLEAVE_SCIENCE_ENUS_GEMBAGZ_V2_COMPLIANT = 296, GEMINI_V2_USM2B_MLPV5_YT_INTERLEAVE_SCIENCE_I18N_GEMBAGZ_V2_COMPLIANT = 297, GEMINI_V2_USM2B_MLPV5_YT_INTERLEAVE_1P5M_GEMBAGZ_V2_COMPLIANT = 298, GEMINI_V2_USM2B_MLPV5_YT_INTERLEAVE_HEAD_4M_GEMBAGZ_V2_COMPLIANT = 299, GEMINI_V2_CLM_TRANSLATE_DATAV3_WEB_UNWMT_INCR_MIX = 300, GEMINI_V2_NTL_NTLV4A_MONOLINGUAL_DEDUP_N5 = 301, GEMINI_V2_NTL_STT_TRANSLATE_DEDUP_N5 = 302, GEMINI_V2_NTL_TRANSLIT_BILEX_TRANSLATE_DEDUP_N5 = 303, GEMINI_V2_NTL_SYN_BT_TRANSLATE_DEDUP_N5 = 304, GEMINI_V2_NTL_SYN_FT_FIXED_TRANSLATE_DEDUP_N5 = 305, GEMINI_V2_CANARIES_SHUFFLED_COMPLIANT = 306 }


	/** The proto defines the attribution information for a document using whatever fields are most applicable for that document's datasource. For example, a Wikipedia article's attribution is in the form of its article title, a website is in the form of a URL, and a Github repo is in the form of a repo name. Next id:28 */
	export interface LanguageLabsAidaTrustRecitationProtoDocAttribution {
		amarnaId?: string | null;
		arxivId?: string | null;
		author?: string | null;
		bibkey?: string | null;
		bookTitle?: string | null;

		/** The Oceanographers full-view books dataset uses a 'volume id' as the unique ID of a book. There is a deterministic function from a volume id to a URL under the books.google.com domain. Marked as 'optional' since a volume ID of zero is potentially possible and we want to distinguish that from the volume ID not being set. */
		bookVolumeId?: string | null;
		category?: LanguageLabsAidaTrustRecitationProtoDocAttributionCategory | null;
		conversationId?: string | null;

		/** The dataset this document comes from. */
		dataset?: LanguageLabsAidaTrustRecitationProtoSegmentResultAttributionDataset | null;
		filepath?: string | null;
		geminiId?: string | null;
		gnewsArticleTitle?: string | null;
		goodallExampleId?: string | null;

		/** Whether the document is opted out. */
		isOptOut?: boolean | null;
		isPrompt?: boolean | null;
		lamdaExampleId?: string | null;
		license?: string | null;
		meenaConversationId?: string | null;

		/** Natural (not programming) language of the document. Language code as defined by http://www.unicode.org/reports/tr35/#Identifiers and https://tools.ietf.org/html/bcp47. Currently applicable to full-view books. Use docinfo-util.h to set & read language fields. See go/iii. */
		naturalLanguageCode?: string | null;

		/** True if this doc has no attribution information available. We use an explicit field for this instead of just implicitly leaving all the DocAttribution fields blank to distinguish a case where a bug/oversight has left the attribution information empty vs when we really have no attribution information available. */
		noAttribution?: boolean | null;
		podcastUtteranceId?: string | null;

		/** Represents a whole or partial calendar date, such as a birthday. The time of day and time zone are either specified elsewhere or are insignificant. The date is relative to the Gregorian Calendar. This can represent one of the following: * A full date, with non-zero year, month, and day values. * A month and day, with a zero year (for example, an anniversary). * A year on its own, with a zero month and a zero day. * A year and month, with a zero day (for example, a credit card expiration date). Related types: * google.type.TimeOfDay * google.type.DateTime * google.protobuf.Timestamp */
		publicationDate?: GoogleTypeDate;

		/** This field is for opt-out experiment only, MUST never be used during actual production/serving. */
		qualityScoreExperimentOnly?: number | null;

		/** Github repository */
		repo?: string | null;

		/** URL of a webdoc */
		url?: string | null;
		volumeId?: string | null;

		/** Wikipedia article title. The Wikipedia TFDS dataset includes article titles but not URLs. While a URL is to the best of our knowledge a deterministic function of the title, we store the original title to reflect the information in the original dataset. */
		wikipediaArticleTitle?: string | null;
	}

	/** The proto defines the attribution information for a document using whatever fields are most applicable for that document's datasource. For example, a Wikipedia article's attribution is in the form of its article title, a website is in the form of a URL, and a Github repo is in the form of a repo name. Next id:28 */
	export interface LanguageLabsAidaTrustRecitationProtoDocAttributionFormProperties {
		amarnaId: FormControl<string | null | undefined>,
		arxivId: FormControl<string | null | undefined>,
		author: FormControl<string | null | undefined>,
		bibkey: FormControl<string | null | undefined>,
		bookTitle: FormControl<string | null | undefined>,

		/** The Oceanographers full-view books dataset uses a 'volume id' as the unique ID of a book. There is a deterministic function from a volume id to a URL under the books.google.com domain. Marked as 'optional' since a volume ID of zero is potentially possible and we want to distinguish that from the volume ID not being set. */
		bookVolumeId: FormControl<string | null | undefined>,
		category: FormControl<LanguageLabsAidaTrustRecitationProtoDocAttributionCategory | null | undefined>,
		conversationId: FormControl<string | null | undefined>,

		/** The dataset this document comes from. */
		dataset: FormControl<LanguageLabsAidaTrustRecitationProtoSegmentResultAttributionDataset | null | undefined>,
		filepath: FormControl<string | null | undefined>,
		geminiId: FormControl<string | null | undefined>,
		gnewsArticleTitle: FormControl<string | null | undefined>,
		goodallExampleId: FormControl<string | null | undefined>,

		/** Whether the document is opted out. */
		isOptOut: FormControl<boolean | null | undefined>,
		isPrompt: FormControl<boolean | null | undefined>,
		lamdaExampleId: FormControl<string | null | undefined>,
		license: FormControl<string | null | undefined>,
		meenaConversationId: FormControl<string | null | undefined>,

		/** Natural (not programming) language of the document. Language code as defined by http://www.unicode.org/reports/tr35/#Identifiers and https://tools.ietf.org/html/bcp47. Currently applicable to full-view books. Use docinfo-util.h to set & read language fields. See go/iii. */
		naturalLanguageCode: FormControl<string | null | undefined>,

		/** True if this doc has no attribution information available. We use an explicit field for this instead of just implicitly leaving all the DocAttribution fields blank to distinguish a case where a bug/oversight has left the attribution information empty vs when we really have no attribution information available. */
		noAttribution: FormControl<boolean | null | undefined>,
		podcastUtteranceId: FormControl<string | null | undefined>,

		/** This field is for opt-out experiment only, MUST never be used during actual production/serving. */
		qualityScoreExperimentOnly: FormControl<number | null | undefined>,

		/** Github repository */
		repo: FormControl<string | null | undefined>,

		/** URL of a webdoc */
		url: FormControl<string | null | undefined>,
		volumeId: FormControl<string | null | undefined>,

		/** Wikipedia article title. The Wikipedia TFDS dataset includes article titles but not URLs. While a URL is to the best of our knowledge a deterministic function of the title, we store the original title to reflect the information in the original dataset. */
		wikipediaArticleTitle: FormControl<string | null | undefined>,
	}
	export function CreateLanguageLabsAidaTrustRecitationProtoDocAttributionFormGroup() {
		return new FormGroup<LanguageLabsAidaTrustRecitationProtoDocAttributionFormProperties>({
			amarnaId: new FormControl<string | null | undefined>(undefined),
			arxivId: new FormControl<string | null | undefined>(undefined),
			author: new FormControl<string | null | undefined>(undefined),
			bibkey: new FormControl<string | null | undefined>(undefined),
			bookTitle: new FormControl<string | null | undefined>(undefined),
			bookVolumeId: new FormControl<string | null | undefined>(undefined),
			category: new FormControl<LanguageLabsAidaTrustRecitationProtoDocAttributionCategory | null | undefined>(undefined),
			conversationId: new FormControl<string | null | undefined>(undefined),
			dataset: new FormControl<LanguageLabsAidaTrustRecitationProtoSegmentResultAttributionDataset | null | undefined>(undefined),
			filepath: new FormControl<string | null | undefined>(undefined),
			geminiId: new FormControl<string | null | undefined>(undefined),
			gnewsArticleTitle: new FormControl<string | null | undefined>(undefined),
			goodallExampleId: new FormControl<string | null | undefined>(undefined),
			isOptOut: new FormControl<boolean | null | undefined>(undefined),
			isPrompt: new FormControl<boolean | null | undefined>(undefined),
			lamdaExampleId: new FormControl<string | null | undefined>(undefined),
			license: new FormControl<string | null | undefined>(undefined),
			meenaConversationId: new FormControl<string | null | undefined>(undefined),
			naturalLanguageCode: new FormControl<string | null | undefined>(undefined),
			noAttribution: new FormControl<boolean | null | undefined>(undefined),
			podcastUtteranceId: new FormControl<string | null | undefined>(undefined),
			qualityScoreExperimentOnly: new FormControl<number | null | undefined>(undefined),
			repo: new FormControl<string | null | undefined>(undefined),
			url: new FormControl<string | null | undefined>(undefined),
			volumeId: new FormControl<string | null | undefined>(undefined),
			wikipediaArticleTitle: new FormControl<string | null | undefined>(undefined),
		});

	}

	export enum LanguageLabsAidaTrustRecitationProtoDocAttributionCategory { CATEGORY_UNSPECIFIED = 0, CATEGORY_NEWS = 1, CATEGORY_NON_NEWS_WEBDOC = 2, CATEGORY_UNKNOWN_MISSING_SIGNAL = 3 }

	export enum LanguageLabsAidaTrustRecitationProtoSegmentResultSegmentRecitationAction { ACTION_UNSPECIFIED = 0, CITE = 1, BLOCK = 2, NO_ACTION = 3, EXEMPT_FOUND_IN_PROMPT = 4 }


	/** An RAI signal for a single category. */
	export interface CloudAiNlLlmProtoServiceRaiSignal {

		/** The confidence level for the RAI category. */
		confidence?: CloudAiNlLlmProtoServiceRaiSignalConfidence | null;

		/** Whether the category is flagged as being present. Currently, this is set to true if score >= 0.5. */
		flagged?: boolean | null;

		/** The RAI category. */
		raiCategory?: CloudAiNlLlmProtoServiceRaiSignalRaiCategory | null;

		/** The score for the category, in the range [0.0, 1.0]. */
		score?: number | null;
	}

	/** An RAI signal for a single category. */
	export interface CloudAiNlLlmProtoServiceRaiSignalFormProperties {

		/** The confidence level for the RAI category. */
		confidence: FormControl<CloudAiNlLlmProtoServiceRaiSignalConfidence | null | undefined>,

		/** Whether the category is flagged as being present. Currently, this is set to true if score >= 0.5. */
		flagged: FormControl<boolean | null | undefined>,

		/** The RAI category. */
		raiCategory: FormControl<CloudAiNlLlmProtoServiceRaiSignalRaiCategory | null | undefined>,

		/** The score for the category, in the range [0.0, 1.0]. */
		score: FormControl<number | null | undefined>,
	}
	export function CreateCloudAiNlLlmProtoServiceRaiSignalFormGroup() {
		return new FormGroup<CloudAiNlLlmProtoServiceRaiSignalFormProperties>({
			confidence: new FormControl<CloudAiNlLlmProtoServiceRaiSignalConfidence | null | undefined>(undefined),
			flagged: new FormControl<boolean | null | undefined>(undefined),
			raiCategory: new FormControl<CloudAiNlLlmProtoServiceRaiSignalRaiCategory | null | undefined>(undefined),
			score: new FormControl<number | null | undefined>(undefined),
		});

	}

	export enum CloudAiNlLlmProtoServiceRaiSignalConfidence { CONFIDENCE_UNSPECIFIED = 0, CONFIDENCE_NONE = 1, CONFIDENCE_LOW = 2, CONFIDENCE_MEDIUM = 3, CONFIDENCE_HIGH = 4 }

	export enum CloudAiNlLlmProtoServiceRaiSignalRaiCategory { RAI_CATEGORY_UNSPECIFIED = 0, TOXIC = 1, SEXUALLY_EXPLICIT = 2, HATE_SPEECH = 3, VIOLENT = 4, PROFANITY = 5, HARASSMENT = 6, DEATH_HARM_TRAGEDY = 7, FIREARMS_WEAPONS = 8, PUBLIC_SAFETY = 9, HEALTH = 10, RELIGIOUS_BELIEF = 11, ILLICIT_DRUGS = 12, WAR_CONFLICT = 13, POLITICS = 14, FINANCE = 15, LEGAL = 16, CSAI = 17, FRINGE = 18, THREAT = 19, SEVERE_TOXICITY = 20, TOXICITY = 21, SEXUAL = 22, INSULT = 23, DEROGATORY = 24, IDENTITY_ATTACK = 25, VIOLENCE_ABUSE = 26, OBSCENE = 27, DRUGS = 28, CSAM = 29, SPII = 30, DANGEROUS_CONTENT = 31, DANGEROUS_CONTENT_SEVERITY = 32, INSULT_SEVERITY = 33, DEROGATORY_SEVERITY = 34, SEXUAL_SEVERITY = 35 }


	/** The recitation result for one stream input */
	export interface LanguageLabsAidaTrustRecitationProtoStreamRecitationResult {

		/** The recitation result against the given dynamic data source. */
		dynamicSegmentResults?: Array<LanguageLabsAidaTrustRecitationProtoSegmentResult>;

		/** Last index of input text fully checked for recitation in the entire streaming context. Would return `-1` if no Input was checked for recitation. */
		fullyCheckedTextIndex?: number | null;

		/** The recitation action for one given input. When its segments contain different actions, the overall action will be returned in the precedence of BLOCK > CITE > NO_ACTION. */
		recitationAction?: LanguageLabsAidaTrustRecitationProtoSegmentResultSegmentRecitationAction | null;

		/** The recitation result against model training data. */
		trainingSegmentResults?: Array<LanguageLabsAidaTrustRecitationProtoSegmentResult>;
	}

	/** The recitation result for one stream input */
	export interface LanguageLabsAidaTrustRecitationProtoStreamRecitationResultFormProperties {

		/** Last index of input text fully checked for recitation in the entire streaming context. Would return `-1` if no Input was checked for recitation. */
		fullyCheckedTextIndex: FormControl<number | null | undefined>,

		/** The recitation action for one given input. When its segments contain different actions, the overall action will be returned in the precedence of BLOCK > CITE > NO_ACTION. */
		recitationAction: FormControl<LanguageLabsAidaTrustRecitationProtoSegmentResultSegmentRecitationAction | null | undefined>,
	}
	export function CreateLanguageLabsAidaTrustRecitationProtoStreamRecitationResultFormGroup() {
		return new FormGroup<LanguageLabsAidaTrustRecitationProtoStreamRecitationResultFormProperties>({
			fullyCheckedTextIndex: new FormControl<number | null | undefined>(undefined),
			recitationAction: new FormControl<LanguageLabsAidaTrustRecitationProtoSegmentResultSegmentRecitationAction | null | undefined>(undefined),
		});

	}

	export interface LearningGenaiRootTakedownResult {

		/** False when query or response should be taken down by any of the takedown rules, true otherwise. */
		allowed?: boolean | null;
		regexTakedownResult?: LearningGenaiRootRegexTakedownResult;
		requestResponseTakedownResult?: LearningGenaiRootRequestResponseTakedownResult;
		similarityTakedownResult?: LearningGenaiRootSimilarityTakedownResult;
	}
	export interface LearningGenaiRootTakedownResultFormProperties {

		/** False when query or response should be taken down by any of the takedown rules, true otherwise. */
		allowed: FormControl<boolean | null | undefined>,
	}
	export function CreateLearningGenaiRootTakedownResultFormGroup() {
		return new FormGroup<LearningGenaiRootTakedownResultFormProperties>({
			allowed: new FormControl<boolean | null | undefined>(undefined),
		});

	}

	export interface LearningGenaiRootRegexTakedownResult {

		/** False when query or response should be taken down due to match with a blocked regex, true otherwise. */
		allowed?: boolean | null;

		/** Regex used to decide that query or response should be taken down. Empty when query or response is kept. */
		takedownRegex?: string | null;
	}
	export interface LearningGenaiRootRegexTakedownResultFormProperties {

		/** False when query or response should be taken down due to match with a blocked regex, true otherwise. */
		allowed: FormControl<boolean | null | undefined>,

		/** Regex used to decide that query or response should be taken down. Empty when query or response is kept. */
		takedownRegex: FormControl<string | null | undefined>,
	}
	export function CreateLearningGenaiRootRegexTakedownResultFormGroup() {
		return new FormGroup<LearningGenaiRootRegexTakedownResultFormProperties>({
			allowed: new FormControl<boolean | null | undefined>(undefined),
			takedownRegex: new FormControl<string | null | undefined>(undefined),
		});

	}

	export interface LearningGenaiRootRequestResponseTakedownResult {

		/** False when response has to be taken down per above config. */
		allowed?: boolean | null;

		/** Regex used to match the request. */
		requestTakedownRegex?: string | null;

		/** Regex used to decide that response should be taken down. Empty when response is kept. */
		responseTakedownRegex?: string | null;
	}
	export interface LearningGenaiRootRequestResponseTakedownResultFormProperties {

		/** False when response has to be taken down per above config. */
		allowed: FormControl<boolean | null | undefined>,

		/** Regex used to match the request. */
		requestTakedownRegex: FormControl<string | null | undefined>,

		/** Regex used to decide that response should be taken down. Empty when response is kept. */
		responseTakedownRegex: FormControl<string | null | undefined>,
	}
	export function CreateLearningGenaiRootRequestResponseTakedownResultFormGroup() {
		return new FormGroup<LearningGenaiRootRequestResponseTakedownResultFormProperties>({
			allowed: new FormControl<boolean | null | undefined>(undefined),
			requestTakedownRegex: new FormControl<string | null | undefined>(undefined),
			responseTakedownRegex: new FormControl<string | null | undefined>(undefined),
		});

	}

	export interface LearningGenaiRootSimilarityTakedownResult {

		/** False when query or response should be taken down by any of the takedown rules, true otherwise. */
		allowed?: boolean | null;

		/** List of similar phrases with score. Set only if allowed=false. */
		scoredPhrases?: Array<LearningGenaiRootScoredSimilarityTakedownPhrase>;
	}
	export interface LearningGenaiRootSimilarityTakedownResultFormProperties {

		/** False when query or response should be taken down by any of the takedown rules, true otherwise. */
		allowed: FormControl<boolean | null | undefined>,
	}
	export function CreateLearningGenaiRootSimilarityTakedownResultFormGroup() {
		return new FormGroup<LearningGenaiRootSimilarityTakedownResultFormProperties>({
			allowed: new FormControl<boolean | null | undefined>(undefined),
		});

	}


	/** Proto containing the results from the Universal Sentence Encoder / Other models */
	export interface LearningGenaiRootScoredSimilarityTakedownPhrase {

		/** Each SimilarityTakedownPhrase treats a logical group of blocked and allowed phrases together along with a corresponding punt If the closest matching response is of the allowed type, we allow the response If the closest matching response is of the blocked type, we block the response. eg: Blocked phrase - "All lives matter" */
		phrase?: LearningGenaiRootSimilarityTakedownPhrase;
		similarityScore?: number | null;
	}

	/** Proto containing the results from the Universal Sentence Encoder / Other models */
	export interface LearningGenaiRootScoredSimilarityTakedownPhraseFormProperties {
		similarityScore: FormControl<number | null | undefined>,
	}
	export function CreateLearningGenaiRootScoredSimilarityTakedownPhraseFormGroup() {
		return new FormGroup<LearningGenaiRootScoredSimilarityTakedownPhraseFormProperties>({
			similarityScore: new FormControl<number | null | undefined>(undefined),
		});

	}


	/** Each SimilarityTakedownPhrase treats a logical group of blocked and allowed phrases together along with a corresponding punt If the closest matching response is of the allowed type, we allow the response If the closest matching response is of the blocked type, we block the response. eg: Blocked phrase - "All lives matter" */
	export interface LearningGenaiRootSimilarityTakedownPhrase {
		blockedPhrase?: string | null;
	}

	/** Each SimilarityTakedownPhrase treats a logical group of blocked and allowed phrases together along with a corresponding punt If the closest matching response is of the allowed type, we allow the response If the closest matching response is of the blocked type, we block the response. eg: Blocked phrase - "All lives matter" */
	export interface LearningGenaiRootSimilarityTakedownPhraseFormProperties {
		blockedPhrase: FormControl<string | null | undefined>,
	}
	export function CreateLearningGenaiRootSimilarityTakedownPhraseFormGroup() {
		return new FormGroup<LearningGenaiRootSimilarityTakedownPhraseFormProperties>({
			blockedPhrase: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** A model can generate multiple signals and this captures all the generated signals for a single message. */
	export interface LearningGenaiRootToxicityResult {
		signals?: Array<LearningGenaiRootToxicitySignal>;
	}

	/** A model can generate multiple signals and this captures all the generated signals for a single message. */
	export interface LearningGenaiRootToxicityResultFormProperties {
	}
	export function CreateLearningGenaiRootToxicityResultFormGroup() {
		return new FormGroup<LearningGenaiRootToxicityResultFormProperties>({
		});

	}


	/** Proto to capture a signal generated by the toxicity model. */
	export interface LearningGenaiRootToxicitySignal {
		allowed?: boolean | null;
		label?: LearningGenaiRootToxicitySignalLabel | null;
		score?: number | null;
	}

	/** Proto to capture a signal generated by the toxicity model. */
	export interface LearningGenaiRootToxicitySignalFormProperties {
		allowed: FormControl<boolean | null | undefined>,
		label: FormControl<LearningGenaiRootToxicitySignalLabel | null | undefined>,
		score: FormControl<number | null | undefined>,
	}
	export function CreateLearningGenaiRootToxicitySignalFormGroup() {
		return new FormGroup<LearningGenaiRootToxicitySignalFormProperties>({
			allowed: new FormControl<boolean | null | undefined>(undefined),
			label: new FormControl<LearningGenaiRootToxicitySignalLabel | null | undefined>(undefined),
			score: new FormControl<number | null | undefined>(undefined),
		});

	}

	export enum LearningGenaiRootToxicitySignalLabel { LABEL_UNSPECIFIED = 0, NOT_SENSITIVE = 1, SENSITIVE = 2, ACCIDENTS_DISASTERS = 3, ADULT = 4, COMPUTER_SECURITY = 5, CONTROVERSIAL_SOCIAL_ISSUES = 6, DEATH_TRAGEDY = 7, DRUGS = 8, IDENTITY_ETHNICITY = 9, FINANCIAL_HARDSHIP = 10, FIREARMS_WEAPONS = 11, HEALTH = 12, INSULT = 13, LEGAL = 14, MENTAL_HEALTH = 15, POLITICS = 16, RELIGION_BELIEFS = 17, SAFETY = 18, SELF_HARM = 19, SPECIAL_NEEDS = 20, TERRORISM = 21, TOXIC = 22, TROUBLED_RELATIONSHIP = 23, VIOLENCE_ABUSE = 24, VULGAR = 25, WAR_CONFLICT = 26 }

	export enum LearningGenaiRootFilterMetadataReason { FILTER_REASON_UNKNOWN = 0, FILTER_REASON_NOT_FILTERED = 1, FILTER_REASON_SENSITIVE = 2, FILTER_REASON_RECITATION = 3, FILTER_REASON_LANGUAGE = 4, FILTER_REASON_TAKEDOWN = 5, FILTER_REASON_CLASSIFIER = 6, FILTER_REASON_EMPTY_RESPONSE = 7, FILTER_REASON_SIMILARITY_TAKEDOWN = 8, FILTER_REASON_UNSAFE = 9, FILTER_REASON_PAIRWISE_CLASSIFIER = 10, FILTER_REASON_CODEY = 11, FILTER_REASON_URL = 12, FILTER_REASON_EMAIL = 13, FILTER_REASON_SAFETY_CAT = 14, FILTER_REASON_REQUEST_RESPONSE_TAKEDOWN = 15, FILTER_REASON_RAI_PQC = 16, FILTER_REASON_ATLAS = 17, FILTER_REASON_RAI_CSAM = 18, FILTER_REASON_RAI_FRINGE = 19, FILTER_REASON_RAI_SPII = 20, FILTER_REASON_RAI_IMAGE_VIOLENCE = 21, FILTER_REASON_RAI_IMAGE_PORN = 22, FILTER_REASON_RAI_IMAGE_CSAM = 23, FILTER_REASON_RAI_IMAGE_PEDO = 24, FILTER_REASON_RAI_VIDEO_FRAME_VIOLENCE = 25, FILTER_REASON_RAI_VIDEO_FRAME_PORN = 26, FILTER_REASON_RAI_VIDEO_FRAME_CSAM = 27, FILTER_REASON_RAI_VIDEO_FRAME_PEDO = 28, FILTER_REASON_RAI_CONTEXTUAL_DANGEROUS = 29, FILTER_REASON_RAI_SAFETYCAT = 30, FILTER_REASON_TOXICITY = 31, FILTER_REASON_ATLAS_PRICING = 32, FILTER_REASON_ATLAS_BILLING = 33, FILTER_REASON_ATLAS_NON_ENGLISH_QUESTION = 34, FILTER_REASON_ATLAS_NOT_RELATED_TO_GCP = 35, FILTER_REASON_ATLAS_AWS_AZURE_RELATED = 36 }

	export interface LearningGenaiRootScore {

		/** The type used for final weights calculation. */
		calculationType?: LearningGenaiRootCalculationType;
		internalMetadata?: LearningGenaiRootInternalMetadata;

		/** The type of score that bundled with a threshold, and will not be attending the final score calculation. How each score type uses the threshold can be implementation details. */
		thresholdType?: LearningGenaiRootThresholdType;

		/** Results of RandomSamplingParams::top_k_logprob_per_decoding_step. */
		tokensAndLogprobPerDecodingStep?: LearningGenaiRootTokensAndLogProbPerDecodingStep;
		value?: number | null;
	}
	export interface LearningGenaiRootScoreFormProperties {
		value: FormControl<number | null | undefined>,
	}
	export function CreateLearningGenaiRootScoreFormGroup() {
		return new FormGroup<LearningGenaiRootScoreFormProperties>({
			value: new FormControl<number | null | undefined>(undefined),
		});

	}


	/** The type used for final weights calculation. */
	export interface LearningGenaiRootCalculationType {
		scoreType?: LearningGenaiRootCalculationTypeScoreType | null;
		weights?: number | null;
	}

	/** The type used for final weights calculation. */
	export interface LearningGenaiRootCalculationTypeFormProperties {
		scoreType: FormControl<LearningGenaiRootCalculationTypeScoreType | null | undefined>,
		weights: FormControl<number | null | undefined>,
	}
	export function CreateLearningGenaiRootCalculationTypeFormGroup() {
		return new FormGroup<LearningGenaiRootCalculationTypeFormProperties>({
			scoreType: new FormControl<LearningGenaiRootCalculationTypeScoreType | null | undefined>(undefined),
			weights: new FormControl<number | null | undefined>(undefined),
		});

	}

	export enum LearningGenaiRootCalculationTypeScoreType { TYPE_UNKNOWN = 0, TYPE_SAFE = 1, TYPE_POLICY = 2, TYPE_GENERATION = 3 }

	export interface LearningGenaiRootInternalMetadata {
		scoredTokens?: Array<LearningGenaiRootScoredToken>;
	}
	export interface LearningGenaiRootInternalMetadataFormProperties {
	}
	export function CreateLearningGenaiRootInternalMetadataFormGroup() {
		return new FormGroup<LearningGenaiRootInternalMetadataFormProperties>({
		});

	}


	/** A token with its own score. */
	export interface LearningGenaiRootScoredToken {

		/** Each end_token_score is a logprob for how well the completion would end at a particular token. See http://google3/labs/language/aida/config/proto/model_config.proto;l=376;rcl=573039459 */
		endTokenScore?: number | null;

		/** Each score is the logprob for the token in model response. */
		score?: number | null;
		token?: string | null;
	}

	/** A token with its own score. */
	export interface LearningGenaiRootScoredTokenFormProperties {

		/** Each end_token_score is a logprob for how well the completion would end at a particular token. See http://google3/labs/language/aida/config/proto/model_config.proto;l=376;rcl=573039459 */
		endTokenScore: FormControl<number | null | undefined>,

		/** Each score is the logprob for the token in model response. */
		score: FormControl<number | null | undefined>,
		token: FormControl<string | null | undefined>,
	}
	export function CreateLearningGenaiRootScoredTokenFormGroup() {
		return new FormGroup<LearningGenaiRootScoredTokenFormProperties>({
			endTokenScore: new FormControl<number | null | undefined>(undefined),
			score: new FormControl<number | null | undefined>(undefined),
			token: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** The type of score that bundled with a threshold, and will not be attending the final score calculation. How each score type uses the threshold can be implementation details. */
	export interface LearningGenaiRootThresholdType {
		scoreType?: LearningGenaiRootCalculationTypeScoreType | null;
		threshold?: number | null;
	}

	/** The type of score that bundled with a threshold, and will not be attending the final score calculation. How each score type uses the threshold can be implementation details. */
	export interface LearningGenaiRootThresholdTypeFormProperties {
		scoreType: FormControl<LearningGenaiRootCalculationTypeScoreType | null | undefined>,
		threshold: FormControl<number | null | undefined>,
	}
	export function CreateLearningGenaiRootThresholdTypeFormGroup() {
		return new FormGroup<LearningGenaiRootThresholdTypeFormProperties>({
			scoreType: new FormControl<LearningGenaiRootCalculationTypeScoreType | null | undefined>(undefined),
			threshold: new FormControl<number | null | undefined>(undefined),
		});

	}


	/** Results of RandomSamplingParams::top_k_logprob_per_decoding_step. */
	export interface LearningGenaiRootTokensAndLogProbPerDecodingStep {

		/** Length = total number of decoding steps. The chosen candidates may or may not be in top_candidates. */
		chosenCandidates?: Array<LearningGenaiRootTokensAndLogProbPerDecodingStepCandidate>;

		/** Length = total number of decoding steps. */
		topCandidates?: Array<LearningGenaiRootTokensAndLogProbPerDecodingStepTopCandidates>;
	}

	/** Results of RandomSamplingParams::top_k_logprob_per_decoding_step. */
	export interface LearningGenaiRootTokensAndLogProbPerDecodingStepFormProperties {
	}
	export function CreateLearningGenaiRootTokensAndLogProbPerDecodingStepFormGroup() {
		return new FormGroup<LearningGenaiRootTokensAndLogProbPerDecodingStepFormProperties>({
		});

	}


	/** A candidate at a decoding step. */
	export interface LearningGenaiRootTokensAndLogProbPerDecodingStepCandidate {

		/** The candidate's log probability. */
		logProbability?: number | null;

		/** The candidate’s token value. */
		token?: string | null;
	}

	/** A candidate at a decoding step. */
	export interface LearningGenaiRootTokensAndLogProbPerDecodingStepCandidateFormProperties {

		/** The candidate's log probability. */
		logProbability: FormControl<number | null | undefined>,

		/** The candidate’s token value. */
		token: FormControl<string | null | undefined>,
	}
	export function CreateLearningGenaiRootTokensAndLogProbPerDecodingStepCandidateFormGroup() {
		return new FormGroup<LearningGenaiRootTokensAndLogProbPerDecodingStepCandidateFormProperties>({
			logProbability: new FormControl<number | null | undefined>(undefined),
			token: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Candidates with top log probabilities at each decoding step. */
	export interface LearningGenaiRootTokensAndLogProbPerDecodingStepTopCandidates {

		/** Sorted by log probability in descending order. */
		candidates?: Array<LearningGenaiRootTokensAndLogProbPerDecodingStepCandidate>;
	}

	/** Candidates with top log probabilities at each decoding step. */
	export interface LearningGenaiRootTokensAndLogProbPerDecodingStepTopCandidatesFormProperties {
	}
	export function CreateLearningGenaiRootTokensAndLogProbPerDecodingStepTopCandidatesFormGroup() {
		return new FormGroup<LearningGenaiRootTokensAndLogProbPerDecodingStepTopCandidatesFormProperties>({
		});

	}

	export enum LearningServingLlmMessageMetadataFinishReason { UNSPECIFIED = 0, RETURN = 1, STOP = 2, MAX_TOKENS = 3, FILTER = 4 }

	export interface NlpSaftLangIdResult {

		/** The version of the model used to create these annotations. */
		modelVersion?: NlpSaftLangIdResultModelVersion | null;

		/** This field stores the n-best list of possible BCP 47 language code strings for a given input sorted in descending order according to each code's respective probability. */
		predictions?: Array<NlpSaftLanguageSpan>;

		/** This field stores language predictions of subspans of the input, when available. Each LanguageSpanSequence is a sequence of LanguageSpans. A particular sequence of LanguageSpans has an associated probability, and need not necessarily cover the entire input. If no language could be predicted for any span, then this field may be empty. */
		spanPredictions?: Array<NlpSaftLanguageSpanSequence>;
	}
	export interface NlpSaftLangIdResultFormProperties {

		/** The version of the model used to create these annotations. */
		modelVersion: FormControl<NlpSaftLangIdResultModelVersion | null | undefined>,
	}
	export function CreateNlpSaftLangIdResultFormGroup() {
		return new FormGroup<NlpSaftLangIdResultFormProperties>({
			modelVersion: new FormControl<NlpSaftLangIdResultModelVersion | null | undefined>(undefined),
		});

	}

	export enum NlpSaftLangIdResultModelVersion { VERSION_UNSPECIFIED = 0, INDEXING_20181017 = 1, INDEXING_20191206 = 2, INDEXING_20200313 = 3, INDEXING_20210618 = 4, STANDARD_20220516 = 5 }

	export interface NlpSaftLanguageSpan {
		end?: number | null;

		/** A BCP 47 language code for this span. */
		languageCode?: string | null;
		locales?: NlpSaftLangIdLocalesResult;

		/** A probability associated with this prediction. */
		probability?: number | null;

		/** Start and end byte offsets, inclusive, within the given input string. A value of -1 implies that this field is not set. Both fields must either be set with a nonnegative value or both are unset. If both are unset then this LanguageSpan applies to the entire input. */
		start?: number | null;
	}
	export interface NlpSaftLanguageSpanFormProperties {
		end: FormControl<number | null | undefined>,

		/** A BCP 47 language code for this span. */
		languageCode: FormControl<string | null | undefined>,

		/** A probability associated with this prediction. */
		probability: FormControl<number | null | undefined>,

		/** Start and end byte offsets, inclusive, within the given input string. A value of -1 implies that this field is not set. Both fields must either be set with a nonnegative value or both are unset. If both are unset then this LanguageSpan applies to the entire input. */
		start: FormControl<number | null | undefined>,
	}
	export function CreateNlpSaftLanguageSpanFormGroup() {
		return new FormGroup<NlpSaftLanguageSpanFormProperties>({
			end: new FormControl<number | null | undefined>(undefined),
			languageCode: new FormControl<string | null | undefined>(undefined),
			probability: new FormControl<number | null | undefined>(undefined),
			start: new FormControl<number | null | undefined>(undefined),
		});

	}

	export interface NlpSaftLangIdLocalesResult {

		/** List of locales in which the text would be considered acceptable. Sorted in descending order according to each locale's respective likelihood. For example, if a Portuguese text is acceptable in both Brazil and Portugal, but is more strongly associated with Brazil, then the predictions would be ["pt-BR", "pt-PT"], in that order. May be empty, indicating that the model did not predict any acceptable locales. */
		predictions?: Array<NlpSaftLangIdLocalesResultLocale>;
	}
	export interface NlpSaftLangIdLocalesResultFormProperties {
	}
	export function CreateNlpSaftLangIdLocalesResultFormGroup() {
		return new FormGroup<NlpSaftLangIdLocalesResultFormProperties>({
		});

	}

	export interface NlpSaftLangIdLocalesResultLocale {

		/** A BCP 47 language code that includes region information. For example, "pt-BR" or "pt-PT". This field will always be populated. */
		languageCode?: string | null;
	}
	export interface NlpSaftLangIdLocalesResultLocaleFormProperties {

		/** A BCP 47 language code that includes region information. For example, "pt-BR" or "pt-PT". This field will always be populated. */
		languageCode: FormControl<string | null | undefined>,
	}
	export function CreateNlpSaftLangIdLocalesResultLocaleFormGroup() {
		return new FormGroup<NlpSaftLangIdLocalesResultLocaleFormProperties>({
			languageCode: new FormControl<string | null | undefined>(undefined),
		});

	}

	export interface NlpSaftLanguageSpanSequence {

		/** A sequence of LanguageSpan objects, each assigning a language to a subspan of the input. */
		languageSpans?: Array<NlpSaftLanguageSpan>;

		/** The probability of this sequence of LanguageSpans. */
		probability?: number | null;
	}
	export interface NlpSaftLanguageSpanSequenceFormProperties {

		/** The probability of this sequence of LanguageSpans. */
		probability: FormControl<number | null | undefined>,
	}
	export function CreateNlpSaftLanguageSpanSequenceFormGroup() {
		return new FormGroup<NlpSaftLanguageSpanSequenceFormProperties>({
			probability: new FormControl<number | null | undefined>(undefined),
		});

	}


	/** The recitation result for one input */
	export interface LearningGenaiRecitationRecitationResult {
		dynamicSegmentResults?: Array<LearningGenaiRecitationSegmentResult>;

		/** The recitation action for one given input. When its segments contain different actions, the overall action will be returned in the precedence of BLOCK > CITE > NO_ACTION. */
		recitationAction?: LanguageLabsAidaTrustRecitationProtoSegmentResultSegmentRecitationAction | null;
		trainingSegmentResults?: Array<LearningGenaiRecitationSegmentResult>;
	}

	/** The recitation result for one input */
	export interface LearningGenaiRecitationRecitationResultFormProperties {

		/** The recitation action for one given input. When its segments contain different actions, the overall action will be returned in the precedence of BLOCK > CITE > NO_ACTION. */
		recitationAction: FormControl<LanguageLabsAidaTrustRecitationProtoSegmentResultSegmentRecitationAction | null | undefined>,
	}
	export function CreateLearningGenaiRecitationRecitationResultFormGroup() {
		return new FormGroup<LearningGenaiRecitationRecitationResultFormProperties>({
			recitationAction: new FormControl<LanguageLabsAidaTrustRecitationProtoSegmentResultSegmentRecitationAction | null | undefined>(undefined),
		});

	}


	/** The recitation result for each segment in a given input. */
	export interface LearningGenaiRecitationSegmentResult {

		/** The dataset the segment came from. */
		attributionDataset?: LanguageLabsAidaTrustRecitationProtoSegmentResultAttributionDataset | null;

		/** human-friendly string that contains information from doc_attribution which could be shown by clients */
		displayAttributionMessage?: string | null;

		/** The proto defines the attribution information for a document using whatever fields are most applicable for that document's datasource. For example, a Wikipedia article's attribution is in the form of its article title, a website is in the form of a URL, and a Github repo is in the form of a repo name. Next id: 28 */
		docAttribution?: LearningGenaiRecitationDocAttribution;

		/** number of documents that contained this segment */
		docOccurrences?: number | null;
		endIndex?: number | null;

		/** The raw text in the given input that is corresponding to the segment. It will be available only when 'return_segment_raw_text' is enabled in the request options. */
		rawText?: string | null;
		segmentRecitationAction?: LanguageLabsAidaTrustRecitationProtoSegmentResultSegmentRecitationAction | null;

		/** The segment boundary start (inclusive) and end index (exclusive) in the given text. In the streaming RPC, the indexes always start from the beginning of the first text in the entire stream. The indexes are measured in UTF-16 code units. */
		startIndex?: number | null;
	}

	/** The recitation result for each segment in a given input. */
	export interface LearningGenaiRecitationSegmentResultFormProperties {

		/** The dataset the segment came from. */
		attributionDataset: FormControl<LanguageLabsAidaTrustRecitationProtoSegmentResultAttributionDataset | null | undefined>,

		/** human-friendly string that contains information from doc_attribution which could be shown by clients */
		displayAttributionMessage: FormControl<string | null | undefined>,

		/** number of documents that contained this segment */
		docOccurrences: FormControl<number | null | undefined>,
		endIndex: FormControl<number | null | undefined>,

		/** The raw text in the given input that is corresponding to the segment. It will be available only when 'return_segment_raw_text' is enabled in the request options. */
		rawText: FormControl<string | null | undefined>,
		segmentRecitationAction: FormControl<LanguageLabsAidaTrustRecitationProtoSegmentResultSegmentRecitationAction | null | undefined>,

		/** The segment boundary start (inclusive) and end index (exclusive) in the given text. In the streaming RPC, the indexes always start from the beginning of the first text in the entire stream. The indexes are measured in UTF-16 code units. */
		startIndex: FormControl<number | null | undefined>,
	}
	export function CreateLearningGenaiRecitationSegmentResultFormGroup() {
		return new FormGroup<LearningGenaiRecitationSegmentResultFormProperties>({
			attributionDataset: new FormControl<LanguageLabsAidaTrustRecitationProtoSegmentResultAttributionDataset | null | undefined>(undefined),
			displayAttributionMessage: new FormControl<string | null | undefined>(undefined),
			docOccurrences: new FormControl<number | null | undefined>(undefined),
			endIndex: new FormControl<number | null | undefined>(undefined),
			rawText: new FormControl<string | null | undefined>(undefined),
			segmentRecitationAction: new FormControl<LanguageLabsAidaTrustRecitationProtoSegmentResultSegmentRecitationAction | null | undefined>(undefined),
			startIndex: new FormControl<number | null | undefined>(undefined),
		});

	}


	/** The proto defines the attribution information for a document using whatever fields are most applicable for that document's datasource. For example, a Wikipedia article's attribution is in the form of its article title, a website is in the form of a URL, and a Github repo is in the form of a repo name. Next id: 28 */
	export interface LearningGenaiRecitationDocAttribution {
		amarnaId?: string | null;
		arxivId?: string | null;
		author?: string | null;
		bibkey?: string | null;
		bookTitle?: string | null;

		/** The Oceanographers full-view books dataset uses a 'volume id' as the unique ID of a book. There is a deterministic function from a volume id to a URL under the books.google.com domain. Marked as 'optional' since a volume ID of zero is potentially possible and we want to distinguish that from the volume ID not being set. */
		bookVolumeId?: string | null;
		conversationId?: string | null;

		/** The dataset this document comes from. */
		dataset?: LanguageLabsAidaTrustRecitationProtoSegmentResultAttributionDataset | null;
		filepath?: string | null;
		geminiId?: string | null;
		gnewsArticleTitle?: string | null;
		goodallExampleId?: string | null;

		/** Whether the document is opted out. */
		isOptOut?: boolean | null;

		/** When true, this attribution came from the user's prompt. */
		isPrompt?: boolean | null;
		lamdaExampleId?: string | null;
		license?: string | null;
		meenaConversationId?: string | null;

		/** Natural (not programming) language of the document. Language code as defined by http://www.unicode.org/reports/tr35/#Identifiers and https://tools.ietf.org/html/bcp47. Currently applicable to full-view books. Use docinfo-util.h to set & read language fields. See go/iii. */
		naturalLanguageCode?: string | null;

		/** True if this doc has no attribution information available. We use an explicit field for this instead of just implicitly leaving all the DocAttribution fields blank to distinguish a case where a bug/oversight has left the attribution information empty vs when we really have no attribution information available. */
		noAttribution?: boolean | null;
		podcastUtteranceId?: string | null;

		/** Represents a whole or partial calendar date, such as a birthday. The time of day and time zone are either specified elsewhere or are insignificant. The date is relative to the Gregorian Calendar. This can represent one of the following: * A full date, with non-zero year, month, and day values. * A month and day, with a zero year (for example, an anniversary). * A year on its own, with a zero month and a zero day. * A year and month, with a zero day (for example, a credit card expiration date). Related types: * google.type.TimeOfDay * google.type.DateTime * google.protobuf.Timestamp */
		publicationDate?: GoogleTypeDate;

		/** This field is for opt-out experiment only, MUST never be used during actual production/serving. */
		qualityScoreExperimentOnly?: number | null;

		/** Github repository */
		repo?: string | null;

		/** URL of a webdoc */
		url?: string | null;
		volumeId?: string | null;

		/** Wikipedia article title. The Wikipedia TFDS dataset includes article titles but not URLs. While a URL is to the best of our knowledge a deterministic function of the title, we store the original title to reflect the information in the original dataset. */
		wikipediaArticleTitle?: string | null;
	}

	/** The proto defines the attribution information for a document using whatever fields are most applicable for that document's datasource. For example, a Wikipedia article's attribution is in the form of its article title, a website is in the form of a URL, and a Github repo is in the form of a repo name. Next id: 28 */
	export interface LearningGenaiRecitationDocAttributionFormProperties {
		amarnaId: FormControl<string | null | undefined>,
		arxivId: FormControl<string | null | undefined>,
		author: FormControl<string | null | undefined>,
		bibkey: FormControl<string | null | undefined>,
		bookTitle: FormControl<string | null | undefined>,

		/** The Oceanographers full-view books dataset uses a 'volume id' as the unique ID of a book. There is a deterministic function from a volume id to a URL under the books.google.com domain. Marked as 'optional' since a volume ID of zero is potentially possible and we want to distinguish that from the volume ID not being set. */
		bookVolumeId: FormControl<string | null | undefined>,
		conversationId: FormControl<string | null | undefined>,

		/** The dataset this document comes from. */
		dataset: FormControl<LanguageLabsAidaTrustRecitationProtoSegmentResultAttributionDataset | null | undefined>,
		filepath: FormControl<string | null | undefined>,
		geminiId: FormControl<string | null | undefined>,
		gnewsArticleTitle: FormControl<string | null | undefined>,
		goodallExampleId: FormControl<string | null | undefined>,

		/** Whether the document is opted out. */
		isOptOut: FormControl<boolean | null | undefined>,

		/** When true, this attribution came from the user's prompt. */
		isPrompt: FormControl<boolean | null | undefined>,
		lamdaExampleId: FormControl<string | null | undefined>,
		license: FormControl<string | null | undefined>,
		meenaConversationId: FormControl<string | null | undefined>,

		/** Natural (not programming) language of the document. Language code as defined by http://www.unicode.org/reports/tr35/#Identifiers and https://tools.ietf.org/html/bcp47. Currently applicable to full-view books. Use docinfo-util.h to set & read language fields. See go/iii. */
		naturalLanguageCode: FormControl<string | null | undefined>,

		/** True if this doc has no attribution information available. We use an explicit field for this instead of just implicitly leaving all the DocAttribution fields blank to distinguish a case where a bug/oversight has left the attribution information empty vs when we really have no attribution information available. */
		noAttribution: FormControl<boolean | null | undefined>,
		podcastUtteranceId: FormControl<string | null | undefined>,

		/** This field is for opt-out experiment only, MUST never be used during actual production/serving. */
		qualityScoreExperimentOnly: FormControl<number | null | undefined>,

		/** Github repository */
		repo: FormControl<string | null | undefined>,

		/** URL of a webdoc */
		url: FormControl<string | null | undefined>,
		volumeId: FormControl<string | null | undefined>,

		/** Wikipedia article title. The Wikipedia TFDS dataset includes article titles but not URLs. While a URL is to the best of our knowledge a deterministic function of the title, we store the original title to reflect the information in the original dataset. */
		wikipediaArticleTitle: FormControl<string | null | undefined>,
	}
	export function CreateLearningGenaiRecitationDocAttributionFormGroup() {
		return new FormGroup<LearningGenaiRecitationDocAttributionFormProperties>({
			amarnaId: new FormControl<string | null | undefined>(undefined),
			arxivId: new FormControl<string | null | undefined>(undefined),
			author: new FormControl<string | null | undefined>(undefined),
			bibkey: new FormControl<string | null | undefined>(undefined),
			bookTitle: new FormControl<string | null | undefined>(undefined),
			bookVolumeId: new FormControl<string | null | undefined>(undefined),
			conversationId: new FormControl<string | null | undefined>(undefined),
			dataset: new FormControl<LanguageLabsAidaTrustRecitationProtoSegmentResultAttributionDataset | null | undefined>(undefined),
			filepath: new FormControl<string | null | undefined>(undefined),
			geminiId: new FormControl<string | null | undefined>(undefined),
			gnewsArticleTitle: new FormControl<string | null | undefined>(undefined),
			goodallExampleId: new FormControl<string | null | undefined>(undefined),
			isOptOut: new FormControl<boolean | null | undefined>(undefined),
			isPrompt: new FormControl<boolean | null | undefined>(undefined),
			lamdaExampleId: new FormControl<string | null | undefined>(undefined),
			license: new FormControl<string | null | undefined>(undefined),
			meenaConversationId: new FormControl<string | null | undefined>(undefined),
			naturalLanguageCode: new FormControl<string | null | undefined>(undefined),
			noAttribution: new FormControl<boolean | null | undefined>(undefined),
			podcastUtteranceId: new FormControl<string | null | undefined>(undefined),
			qualityScoreExperimentOnly: new FormControl<number | null | undefined>(undefined),
			repo: new FormControl<string | null | undefined>(undefined),
			url: new FormControl<string | null | undefined>(undefined),
			volumeId: new FormControl<string | null | undefined>(undefined),
			wikipediaArticleTitle: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Holds the final routing decision, by storing the model_config_id. And individual scores each model got. */
	export interface LearningGenaiRootRoutingDecision {

		/** Debug metadata about the routing decision. */
		metadata?: LearningGenaiRootRoutingDecisionMetadata;

		/** The selected model to route traffic to. */
		modelConfigId?: string | null;
	}

	/** Holds the final routing decision, by storing the model_config_id. And individual scores each model got. */
	export interface LearningGenaiRootRoutingDecisionFormProperties {

		/** The selected model to route traffic to. */
		modelConfigId: FormControl<string | null | undefined>,
	}
	export function CreateLearningGenaiRootRoutingDecisionFormGroup() {
		return new FormGroup<LearningGenaiRootRoutingDecisionFormProperties>({
			modelConfigId: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Debug metadata about the routing decision. */
	export interface LearningGenaiRootRoutingDecisionMetadata {

		/** If we are routing using scored based configuration, then the metadata about that is available in this proto. */
		scoreBasedRoutingMetadata?: LearningGenaiRootRoutingDecisionMetadataScoreBased;
		tokenLengthBasedRoutingMetadata?: LearningGenaiRootRoutingDecisionMetadataTokenLengthBased;
	}

	/** Debug metadata about the routing decision. */
	export interface LearningGenaiRootRoutingDecisionMetadataFormProperties {
	}
	export function CreateLearningGenaiRootRoutingDecisionMetadataFormGroup() {
		return new FormGroup<LearningGenaiRootRoutingDecisionMetadataFormProperties>({
		});

	}


	/** If we are routing using scored based configuration, then the metadata about that is available in this proto. */
	export interface LearningGenaiRootRoutingDecisionMetadataScoreBased {
		matchedRule?: LearningGenaiRootScoreBasedRoutingConfigRule;
		score?: LearningGenaiRootScore;

		/** No rules were matched & therefore used the default fallback. */
		usedDefaultFallback?: boolean | null;
	}

	/** If we are routing using scored based configuration, then the metadata about that is available in this proto. */
	export interface LearningGenaiRootRoutingDecisionMetadataScoreBasedFormProperties {

		/** No rules were matched & therefore used the default fallback. */
		usedDefaultFallback: FormControl<boolean | null | undefined>,
	}
	export function CreateLearningGenaiRootRoutingDecisionMetadataScoreBasedFormGroup() {
		return new FormGroup<LearningGenaiRootRoutingDecisionMetadataScoreBasedFormProperties>({
			usedDefaultFallback: new FormControl<boolean | null | undefined>(undefined),
		});

	}

	export interface LearningGenaiRootScoreBasedRoutingConfigRule {
		equalOrGreaterThan?: LearningGenaiRootScore;
		lessThan?: LearningGenaiRootScore;

		/** This model_config_id points to ModelConfig::id which allows us to find the ModelConfig to route to. This is part of the banks specified in the ModelBankConfig. */
		modelConfigId?: string | null;
	}
	export interface LearningGenaiRootScoreBasedRoutingConfigRuleFormProperties {

		/** This model_config_id points to ModelConfig::id which allows us to find the ModelConfig to route to. This is part of the banks specified in the ModelBankConfig. */
		modelConfigId: FormControl<string | null | undefined>,
	}
	export function CreateLearningGenaiRootScoreBasedRoutingConfigRuleFormGroup() {
		return new FormGroup<LearningGenaiRootScoreBasedRoutingConfigRuleFormProperties>({
			modelConfigId: new FormControl<string | null | undefined>(undefined),
		});

	}

	export interface LearningGenaiRootRoutingDecisionMetadataTokenLengthBased {
		modelInputTokenMetadata?: Array<LearningGenaiRootRoutingDecisionMetadataTokenLengthBasedModelInputTokenMetadata>;
		modelMaxTokenMetadata?: Array<LearningGenaiRootRoutingDecisionMetadataTokenLengthBasedModelMaxTokenMetadata>;
	}
	export interface LearningGenaiRootRoutingDecisionMetadataTokenLengthBasedFormProperties {
	}
	export function CreateLearningGenaiRootRoutingDecisionMetadataTokenLengthBasedFormGroup() {
		return new FormGroup<LearningGenaiRootRoutingDecisionMetadataTokenLengthBasedFormProperties>({
		});

	}

	export interface LearningGenaiRootRoutingDecisionMetadataTokenLengthBasedModelInputTokenMetadata {

		/** The length computed by backends using the formatter & tokenizer specific to the model */
		computedInputTokenLength?: number | null;
		modelId?: string | null;
	}
	export interface LearningGenaiRootRoutingDecisionMetadataTokenLengthBasedModelInputTokenMetadataFormProperties {

		/** The length computed by backends using the formatter & tokenizer specific to the model */
		computedInputTokenLength: FormControl<number | null | undefined>,
		modelId: FormControl<string | null | undefined>,
	}
	export function CreateLearningGenaiRootRoutingDecisionMetadataTokenLengthBasedModelInputTokenMetadataFormGroup() {
		return new FormGroup<LearningGenaiRootRoutingDecisionMetadataTokenLengthBasedModelInputTokenMetadataFormProperties>({
			computedInputTokenLength: new FormControl<number | null | undefined>(undefined),
			modelId: new FormControl<string | null | undefined>(undefined),
		});

	}

	export interface LearningGenaiRootRoutingDecisionMetadataTokenLengthBasedModelMaxTokenMetadata {
		maxNumInputTokens?: number | null;
		maxNumOutputTokens?: number | null;
		modelId?: string | null;
	}
	export interface LearningGenaiRootRoutingDecisionMetadataTokenLengthBasedModelMaxTokenMetadataFormProperties {
		maxNumInputTokens: FormControl<number | null | undefined>,
		maxNumOutputTokens: FormControl<number | null | undefined>,
		modelId: FormControl<string | null | undefined>,
	}
	export function CreateLearningGenaiRootRoutingDecisionMetadataTokenLengthBasedModelMaxTokenMetadataFormGroup() {
		return new FormGroup<LearningGenaiRootRoutingDecisionMetadataTokenLengthBasedModelMaxTokenMetadataFormProperties>({
			maxNumInputTokens: new FormControl<number | null | undefined>(undefined),
			maxNumOutputTokens: new FormControl<number | null | undefined>(undefined),
			modelId: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Content filter results for a prompt sent in the request. */
	export interface CloudAiNlLlmProtoServicePromptFeedback {

		/** Blocked reason. */
		blockReason?: CloudAiNlLlmProtoServicePromptFeedbackBlockReason | null;

		/** A readable block reason message. */
		blockReasonMessage?: string | null;

		/** Safety ratings. */
		safetyRatings?: Array<CloudAiNlLlmProtoServiceSafetyRating>;
	}

	/** Content filter results for a prompt sent in the request. */
	export interface CloudAiNlLlmProtoServicePromptFeedbackFormProperties {

		/** Blocked reason. */
		blockReason: FormControl<CloudAiNlLlmProtoServicePromptFeedbackBlockReason | null | undefined>,

		/** A readable block reason message. */
		blockReasonMessage: FormControl<string | null | undefined>,
	}
	export function CreateCloudAiNlLlmProtoServicePromptFeedbackFormGroup() {
		return new FormGroup<CloudAiNlLlmProtoServicePromptFeedbackFormProperties>({
			blockReason: new FormControl<CloudAiNlLlmProtoServicePromptFeedbackBlockReason | null | undefined>(undefined),
			blockReasonMessage: new FormControl<string | null | undefined>(undefined),
		});

	}

	export enum CloudAiNlLlmProtoServicePromptFeedbackBlockReason { BLOCKED_REASON_UNSPECIFIED = 0, SAFETY = 1, OTHER = 2 }

	export interface IntelligenceCloudAutomlXpsReportingMetrics {

		/** The effective time training used. If set, this is used for quota management and billing. Deprecated. AutoML BE doesn't use this. Don't set. */
		effectiveTrainingDuration?: string | null;

		/** One entry per metric name. The values must be aggregated per metric name. */
		metricEntries?: Array<IntelligenceCloudAutomlXpsMetricEntry>;
	}
	export interface IntelligenceCloudAutomlXpsReportingMetricsFormProperties {

		/** The effective time training used. If set, this is used for quota management and billing. Deprecated. AutoML BE doesn't use this. Don't set. */
		effectiveTrainingDuration: FormControl<string | null | undefined>,
	}
	export function CreateIntelligenceCloudAutomlXpsReportingMetricsFormGroup() {
		return new FormGroup<IntelligenceCloudAutomlXpsReportingMetricsFormProperties>({
			effectiveTrainingDuration: new FormControl<string | null | undefined>(undefined),
		});

	}

	export interface IntelligenceCloudAutomlXpsMetricEntry {

		/** For billing metrics that are using legacy sku's, set the legacy billing metric id here. This will be sent to Chemist as the "cloudbilling.googleapis.com/argentum_metric_id" label. Otherwise leave empty. */
		argentumMetricId?: string | null;

		/** A double value. */
		doubleValue?: number | null;

		/** A signed 64-bit integer value. */
		int64Value?: string | null;

		/** The metric name defined in the service configuration. */
		metricName?: string | null;

		/** Billing system labels for this (metric, value) pair. */
		systemLabels?: Array<IntelligenceCloudAutomlXpsMetricEntryLabel>;
	}
	export interface IntelligenceCloudAutomlXpsMetricEntryFormProperties {

		/** For billing metrics that are using legacy sku's, set the legacy billing metric id here. This will be sent to Chemist as the "cloudbilling.googleapis.com/argentum_metric_id" label. Otherwise leave empty. */
		argentumMetricId: FormControl<string | null | undefined>,

		/** A double value. */
		doubleValue: FormControl<number | null | undefined>,

		/** A signed 64-bit integer value. */
		int64Value: FormControl<string | null | undefined>,

		/** The metric name defined in the service configuration. */
		metricName: FormControl<string | null | undefined>,
	}
	export function CreateIntelligenceCloudAutomlXpsMetricEntryFormGroup() {
		return new FormGroup<IntelligenceCloudAutomlXpsMetricEntryFormProperties>({
			argentumMetricId: new FormControl<string | null | undefined>(undefined),
			doubleValue: new FormControl<number | null | undefined>(undefined),
			int64Value: new FormControl<string | null | undefined>(undefined),
			metricName: new FormControl<string | null | undefined>(undefined),
		});

	}

	export interface IntelligenceCloudAutomlXpsMetricEntryLabel {

		/** The name of the label. */
		labelName?: string | null;

		/** The value of the label. */
		labelValue?: string | null;
	}
	export interface IntelligenceCloudAutomlXpsMetricEntryLabelFormProperties {

		/** The name of the label. */
		labelName: FormControl<string | null | undefined>,

		/** The value of the label. */
		labelValue: FormControl<string | null | undefined>,
	}
	export function CreateIntelligenceCloudAutomlXpsMetricEntryLabelFormGroup() {
		return new FormGroup<IntelligenceCloudAutomlXpsMetricEntryLabelFormProperties>({
			labelName: new FormControl<string | null | undefined>(undefined),
			labelValue: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Usage metadata about response(s). */
	export interface CloudAiNlLlmProtoServiceUsageMetadata {

		/** Number of tokens in the response(s). */
		candidatesTokenCount?: number | null;

		/** Number of tokens in the request. */
		promptTokenCount?: number | null;
		totalTokenCount?: number | null;
	}

	/** Usage metadata about response(s). */
	export interface CloudAiNlLlmProtoServiceUsageMetadataFormProperties {

		/** Number of tokens in the response(s). */
		candidatesTokenCount: FormControl<number | null | undefined>,

		/** Number of tokens in the request. */
		promptTokenCount: FormControl<number | null | undefined>,
		totalTokenCount: FormControl<number | null | undefined>,
	}
	export function CreateCloudAiNlLlmProtoServiceUsageMetadataFormGroup() {
		return new FormGroup<CloudAiNlLlmProtoServiceUsageMetadataFormProperties>({
			candidatesTokenCount: new FormControl<number | null | undefined>(undefined),
			promptTokenCount: new FormControl<number | null | undefined>(undefined),
			totalTokenCount: new FormControl<number | null | undefined>(undefined),
		});

	}


	/** Video reasoning response. */
	export interface CloudAiLargeModelsVisionReasonVideoResponse {

		/** Generated text responses. The generated responses for different segments within the same video. */
		responses?: Array<CloudAiLargeModelsVisionReasonVideoResponseTextResponse>;
	}

	/** Video reasoning response. */
	export interface CloudAiLargeModelsVisionReasonVideoResponseFormProperties {
	}
	export function CreateCloudAiLargeModelsVisionReasonVideoResponseFormGroup() {
		return new FormGroup<CloudAiLargeModelsVisionReasonVideoResponseFormProperties>({
		});

	}


	/** Contains text that is the response of the video captioning. */
	export interface CloudAiLargeModelsVisionReasonVideoResponseTextResponse {

		/** For ease of use, assume that the start_offset is inclusive and the end_offset is exclusive. In mathematical terms, the partition would be written as [start_offset, end_offset). */
		relativeTemporalPartition?: CloudAiLargeModelsVisionRelativeTemporalPartition;

		/** Text information */
		text?: string | null;
	}

	/** Contains text that is the response of the video captioning. */
	export interface CloudAiLargeModelsVisionReasonVideoResponseTextResponseFormProperties {

		/** Text information */
		text: FormControl<string | null | undefined>,
	}
	export function CreateCloudAiLargeModelsVisionReasonVideoResponseTextResponseFormGroup() {
		return new FormGroup<CloudAiLargeModelsVisionReasonVideoResponseTextResponseFormProperties>({
			text: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** For ease of use, assume that the start_offset is inclusive and the end_offset is exclusive. In mathematical terms, the partition would be written as [start_offset, end_offset). */
	export interface CloudAiLargeModelsVisionRelativeTemporalPartition {

		/** End time offset of the partition. */
		endOffset?: string | null;

		/** Start time offset of the partition. */
		startOffset?: string | null;
	}

	/** For ease of use, assume that the start_offset is inclusive and the end_offset is exclusive. In mathematical terms, the partition would be written as [start_offset, end_offset). */
	export interface CloudAiLargeModelsVisionRelativeTemporalPartitionFormProperties {

		/** End time offset of the partition. */
		endOffset: FormControl<string | null | undefined>,

		/** Start time offset of the partition. */
		startOffset: FormControl<string | null | undefined>,
	}
	export function CreateCloudAiLargeModelsVisionRelativeTemporalPartitionFormGroup() {
		return new FormGroup<CloudAiLargeModelsVisionRelativeTemporalPartitionFormProperties>({
			endOffset: new FormControl<string | null | undefined>(undefined),
			startOffset: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Message that represents an arbitrary HTTP body. It should only be used for payload formats that can't be represented as JSON, such as raw binary or an HTML page. This message can be used both in streaming and non-streaming API methods in the request as well as the response. It can be used as a top-level request field, which is convenient if one wants to extract parameters from either the URL or HTTP template into the request fields and also want access to the raw HTTP body. Example: message GetResourceRequest { // A unique request id. string request_id = 1; // The raw HTTP body is bound to this field. google.api.HttpBody http_body = 2; } service ResourceService { rpc GetResource(GetResourceRequest) returns (google.api.HttpBody); rpc UpdateResource(google.api.HttpBody) returns (google.protobuf.Empty); } Example with streaming methods: service CaldavService { rpc GetCalendar(stream google.api.HttpBody) returns (stream google.api.HttpBody); rpc UpdateCalendar(stream google.api.HttpBody) returns (stream google.api.HttpBody); } Use of this type only changes how the request and response bodies are handled, all other features will continue to work unchanged. */
	export interface GoogleApiHttpBody {

		/** The HTTP Content-Type header value specifying the content type of the body. */
		contentType?: string | null;

		/** The HTTP request/response body as raw binary. */
		data?: string | null;

		/** Application specific response metadata. Must be set in the first response for streaming APIs. */
		extensions?: Array<string>;
	}

	/** Message that represents an arbitrary HTTP body. It should only be used for payload formats that can't be represented as JSON, such as raw binary or an HTML page. This message can be used both in streaming and non-streaming API methods in the request as well as the response. It can be used as a top-level request field, which is convenient if one wants to extract parameters from either the URL or HTTP template into the request fields and also want access to the raw HTTP body. Example: message GetResourceRequest { // A unique request id. string request_id = 1; // The raw HTTP body is bound to this field. google.api.HttpBody http_body = 2; } service ResourceService { rpc GetResource(GetResourceRequest) returns (google.api.HttpBody); rpc UpdateResource(google.api.HttpBody) returns (google.protobuf.Empty); } Example with streaming methods: service CaldavService { rpc GetCalendar(stream google.api.HttpBody) returns (stream google.api.HttpBody); rpc UpdateCalendar(stream google.api.HttpBody) returns (stream google.api.HttpBody); } Use of this type only changes how the request and response bodies are handled, all other features will continue to work unchanged. */
	export interface GoogleApiHttpBodyFormProperties {

		/** The HTTP Content-Type header value specifying the content type of the body. */
		contentType: FormControl<string | null | undefined>,

		/** The HTTP request/response body as raw binary. */
		data: FormControl<string | null | undefined>,
	}
	export function CreateGoogleApiHttpBodyFormGroup() {
		return new FormGroup<GoogleApiHttpBodyFormProperties>({
			contentType: new FormControl<string | null | undefined>(undefined),
			data: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Parameters that configure the active learning pipeline. Active learning will label the data incrementally by several iterations. For every iteration, it will select a batch of data based on the sampling strategy. */
	export interface GoogleCloudAiplatformV1beta1ActiveLearningConfig {

		/** Max number of human labeled DataItems. */
		maxDataItemCount?: string | null;

		/** Max percent of total DataItems for human labeling. */
		maxDataItemPercentage?: number | null;

		/** Active learning data sampling config. For every active learning labeling iteration, it will select a batch of data based on the sampling strategy. */
		sampleConfig?: GoogleCloudAiplatformV1beta1SampleConfig;

		/** CMLE training config. For every active learning labeling iteration, system will train a machine learning model on CMLE. The trained model will be used by data sampling algorithm to select DataItems. */
		trainingConfig?: GoogleCloudAiplatformV1beta1TrainingConfig;
	}

	/** Parameters that configure the active learning pipeline. Active learning will label the data incrementally by several iterations. For every iteration, it will select a batch of data based on the sampling strategy. */
	export interface GoogleCloudAiplatformV1beta1ActiveLearningConfigFormProperties {

		/** Max number of human labeled DataItems. */
		maxDataItemCount: FormControl<string | null | undefined>,

		/** Max percent of total DataItems for human labeling. */
		maxDataItemPercentage: FormControl<number | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1ActiveLearningConfigFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1ActiveLearningConfigFormProperties>({
			maxDataItemCount: new FormControl<string | null | undefined>(undefined),
			maxDataItemPercentage: new FormControl<number | null | undefined>(undefined),
		});

	}


	/** Active learning data sampling config. For every active learning labeling iteration, it will select a batch of data based on the sampling strategy. */
	export interface GoogleCloudAiplatformV1beta1SampleConfig {

		/** The percentage of data needed to be labeled in each following batch (except the first batch). */
		followingBatchSamplePercentage?: number | null;

		/** The percentage of data needed to be labeled in the first batch. */
		initialBatchSamplePercentage?: number | null;

		/** Field to choose sampling strategy. Sampling strategy will decide which data should be selected for human labeling in every batch. */
		sampleStrategy?: GoogleCloudAiplatformV1beta1SampleConfigSampleStrategy | null;
	}

	/** Active learning data sampling config. For every active learning labeling iteration, it will select a batch of data based on the sampling strategy. */
	export interface GoogleCloudAiplatformV1beta1SampleConfigFormProperties {

		/** The percentage of data needed to be labeled in each following batch (except the first batch). */
		followingBatchSamplePercentage: FormControl<number | null | undefined>,

		/** The percentage of data needed to be labeled in the first batch. */
		initialBatchSamplePercentage: FormControl<number | null | undefined>,

		/** Field to choose sampling strategy. Sampling strategy will decide which data should be selected for human labeling in every batch. */
		sampleStrategy: FormControl<GoogleCloudAiplatformV1beta1SampleConfigSampleStrategy | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1SampleConfigFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1SampleConfigFormProperties>({
			followingBatchSamplePercentage: new FormControl<number | null | undefined>(undefined),
			initialBatchSamplePercentage: new FormControl<number | null | undefined>(undefined),
			sampleStrategy: new FormControl<GoogleCloudAiplatformV1beta1SampleConfigSampleStrategy | null | undefined>(undefined),
		});

	}

	export enum GoogleCloudAiplatformV1beta1SampleConfigSampleStrategy { SAMPLE_STRATEGY_UNSPECIFIED = 0, UNCERTAINTY = 1 }


	/** CMLE training config. For every active learning labeling iteration, system will train a machine learning model on CMLE. The trained model will be used by data sampling algorithm to select DataItems. */
	export interface GoogleCloudAiplatformV1beta1TrainingConfig {

		/** The timeout hours for the CMLE training job, expressed in milli hours i.e. 1,000 value in this field means 1 hour. */
		timeoutTrainingMilliHours?: string | null;
	}

	/** CMLE training config. For every active learning labeling iteration, system will train a machine learning model on CMLE. The trained model will be used by data sampling algorithm to select DataItems. */
	export interface GoogleCloudAiplatformV1beta1TrainingConfigFormProperties {

		/** The timeout hours for the CMLE training job, expressed in milli hours i.e. 1,000 value in this field means 1 hour. */
		timeoutTrainingMilliHours: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1TrainingConfigFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1TrainingConfigFormProperties>({
			timeoutTrainingMilliHours: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Request message for MetadataService.AddContextArtifactsAndExecutions. */
	export interface GoogleCloudAiplatformV1beta1AddContextArtifactsAndExecutionsRequest {

		/** The resource names of the Artifacts to attribute to the Context. Format: `projects/{project}/locations/{location}/metadataStores/{metadatastore}/artifacts/{artifact}` */
		artifacts?: Array<string>;

		/** The resource names of the Executions to associate with the Context. Format: `projects/{project}/locations/{location}/metadataStores/{metadatastore}/executions/{execution}` */
		executions?: Array<string>;
	}

	/** Request message for MetadataService.AddContextArtifactsAndExecutions. */
	export interface GoogleCloudAiplatformV1beta1AddContextArtifactsAndExecutionsRequestFormProperties {
	}
	export function CreateGoogleCloudAiplatformV1beta1AddContextArtifactsAndExecutionsRequestFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1AddContextArtifactsAndExecutionsRequestFormProperties>({
		});

	}


	/** Response message for MetadataService.AddContextArtifactsAndExecutions. */
	export interface GoogleCloudAiplatformV1beta1AddContextArtifactsAndExecutionsResponse {
	}

	/** Response message for MetadataService.AddContextArtifactsAndExecutions. */
	export interface GoogleCloudAiplatformV1beta1AddContextArtifactsAndExecutionsResponseFormProperties {
	}
	export function CreateGoogleCloudAiplatformV1beta1AddContextArtifactsAndExecutionsResponseFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1AddContextArtifactsAndExecutionsResponseFormProperties>({
		});

	}


	/** Request message for MetadataService.AddContextChildren. */
	export interface GoogleCloudAiplatformV1beta1AddContextChildrenRequest {

		/** The resource names of the child Contexts. */
		childContexts?: Array<string>;
	}

	/** Request message for MetadataService.AddContextChildren. */
	export interface GoogleCloudAiplatformV1beta1AddContextChildrenRequestFormProperties {
	}
	export function CreateGoogleCloudAiplatformV1beta1AddContextChildrenRequestFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1AddContextChildrenRequestFormProperties>({
		});

	}


	/** Response message for MetadataService.AddContextChildren. */
	export interface GoogleCloudAiplatformV1beta1AddContextChildrenResponse {
	}

	/** Response message for MetadataService.AddContextChildren. */
	export interface GoogleCloudAiplatformV1beta1AddContextChildrenResponseFormProperties {
	}
	export function CreateGoogleCloudAiplatformV1beta1AddContextChildrenResponseFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1AddContextChildrenResponseFormProperties>({
		});

	}


	/** Request message for MetadataService.AddExecutionEvents. */
	export interface GoogleCloudAiplatformV1beta1AddExecutionEventsRequest {

		/** The Events to create and add. */
		events?: Array<GoogleCloudAiplatformV1beta1Event>;
	}

	/** Request message for MetadataService.AddExecutionEvents. */
	export interface GoogleCloudAiplatformV1beta1AddExecutionEventsRequestFormProperties {
	}
	export function CreateGoogleCloudAiplatformV1beta1AddExecutionEventsRequestFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1AddExecutionEventsRequestFormProperties>({
		});

	}


	/** An edge describing the relationship between an Artifact and an Execution in a lineage graph. */
	export interface GoogleCloudAiplatformV1beta1Event {

		/** Required. The relative resource name of the Artifact in the Event. */
		artifact?: string | null;

		/** Output only. Time the Event occurred. */
		eventTime?: string | null;

		/** Output only. The relative resource name of the Execution in the Event. */
		execution?: string | null;

		/** The labels with user-defined metadata to annotate Events. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. No more than 64 user labels can be associated with one Event (System labels are excluded). See https://goo.gl/xmQnxf for more information and examples of labels. System reserved label keys are prefixed with "aiplatform.googleapis.com/" and are immutable. */
		labels?: {[id: string]: string };

		/** Required. The type of the Event. */
		type?: GoogleCloudAiplatformV1beta1EventType | null;
	}

	/** An edge describing the relationship between an Artifact and an Execution in a lineage graph. */
	export interface GoogleCloudAiplatformV1beta1EventFormProperties {

		/** Required. The relative resource name of the Artifact in the Event. */
		artifact: FormControl<string | null | undefined>,

		/** Output only. Time the Event occurred. */
		eventTime: FormControl<string | null | undefined>,

		/** Output only. The relative resource name of the Execution in the Event. */
		execution: FormControl<string | null | undefined>,

		/** The labels with user-defined metadata to annotate Events. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. No more than 64 user labels can be associated with one Event (System labels are excluded). See https://goo.gl/xmQnxf for more information and examples of labels. System reserved label keys are prefixed with "aiplatform.googleapis.com/" and are immutable. */
		labels: FormControl<{[id: string]: string } | null | undefined>,

		/** Required. The type of the Event. */
		type: FormControl<GoogleCloudAiplatformV1beta1EventType | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1EventFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1EventFormProperties>({
			artifact: new FormControl<string | null | undefined>(undefined),
			eventTime: new FormControl<string | null | undefined>(undefined),
			execution: new FormControl<string | null | undefined>(undefined),
			labels: new FormControl<{[id: string]: string } | null | undefined>(undefined),
			type: new FormControl<GoogleCloudAiplatformV1beta1EventType | null | undefined>(undefined),
		});

	}

	export enum GoogleCloudAiplatformV1beta1EventType { TYPE_UNSPECIFIED = 0, INPUT = 1, OUTPUT = 2 }


	/** Response message for MetadataService.AddExecutionEvents. */
	export interface GoogleCloudAiplatformV1beta1AddExecutionEventsResponse {
	}

	/** Response message for MetadataService.AddExecutionEvents. */
	export interface GoogleCloudAiplatformV1beta1AddExecutionEventsResponseFormProperties {
	}
	export function CreateGoogleCloudAiplatformV1beta1AddExecutionEventsResponseFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1AddExecutionEventsResponseFormProperties>({
		});

	}


	/** Request message for VizierService.AddTrialMeasurement. */
	export interface GoogleCloudAiplatformV1beta1AddTrialMeasurementRequest {

		/** A message representing a Measurement of a Trial. A Measurement contains the Metrics got by executing a Trial using suggested hyperparameter values. */
		measurement?: GoogleCloudAiplatformV1beta1Measurement;
	}

	/** Request message for VizierService.AddTrialMeasurement. */
	export interface GoogleCloudAiplatformV1beta1AddTrialMeasurementRequestFormProperties {
	}
	export function CreateGoogleCloudAiplatformV1beta1AddTrialMeasurementRequestFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1AddTrialMeasurementRequestFormProperties>({
		});

	}


	/** A message representing a Measurement of a Trial. A Measurement contains the Metrics got by executing a Trial using suggested hyperparameter values. */
	export interface GoogleCloudAiplatformV1beta1Measurement {

		/** Output only. Time that the Trial has been running at the point of this Measurement. */
		elapsedDuration?: string | null;

		/** Output only. A list of metrics got by evaluating the objective functions using suggested Parameter values. */
		metrics?: Array<GoogleCloudAiplatformV1beta1MeasurementMetric>;

		/** Output only. The number of steps the machine learning model has been trained for. Must be non-negative. */
		stepCount?: string | null;
	}

	/** A message representing a Measurement of a Trial. A Measurement contains the Metrics got by executing a Trial using suggested hyperparameter values. */
	export interface GoogleCloudAiplatformV1beta1MeasurementFormProperties {

		/** Output only. Time that the Trial has been running at the point of this Measurement. */
		elapsedDuration: FormControl<string | null | undefined>,

		/** Output only. The number of steps the machine learning model has been trained for. Must be non-negative. */
		stepCount: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1MeasurementFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1MeasurementFormProperties>({
			elapsedDuration: new FormControl<string | null | undefined>(undefined),
			stepCount: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** A message representing a metric in the measurement. */
	export interface GoogleCloudAiplatformV1beta1MeasurementMetric {

		/** Output only. The ID of the Metric. The Metric should be defined in StudySpec's Metrics. */
		metricId?: string | null;

		/** Output only. The value for this metric. */
		value?: number | null;
	}

	/** A message representing a metric in the measurement. */
	export interface GoogleCloudAiplatformV1beta1MeasurementMetricFormProperties {

		/** Output only. The ID of the Metric. The Metric should be defined in StudySpec's Metrics. */
		metricId: FormControl<string | null | undefined>,

		/** Output only. The value for this metric. */
		value: FormControl<number | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1MeasurementMetricFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1MeasurementMetricFormProperties>({
			metricId: new FormControl<string | null | undefined>(undefined),
			value: new FormControl<number | null | undefined>(undefined),
		});

	}


	/** Used to assign specific AnnotationSpec to a particular area of a DataItem or the whole part of the DataItem. */
	export interface GoogleCloudAiplatformV1beta1Annotation {

		/** References an API call. It contains more information about long running operation and Jobs that are triggered by the API call. */
		annotationSource?: GoogleCloudAiplatformV1beta1UserActionReference;

		/** Output only. Timestamp when this Annotation was created. */
		createTime?: string | null;

		/** Optional. Used to perform consistent read-modify-write updates. If not set, a blind "overwrite" update happens. */
		etag?: string | null;

		/** Optional. The labels with user-defined metadata to organize your Annotations. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. No more than 64 user labels can be associated with one Annotation(System labels are excluded). See https://goo.gl/xmQnxf for more information and examples of labels. System reserved label keys are prefixed with "aiplatform.googleapis.com/" and are immutable. Following system labels exist for each Annotation: * "aiplatform.googleapis.com/annotation_set_name": optional, name of the UI's annotation set this Annotation belongs to. If not set, the Annotation is not visible in the UI. * "aiplatform.googleapis.com/payload_schema": output only, its value is the payload_schema's title. */
		labels?: {[id: string]: string };

		/** Output only. Resource name of the Annotation. */
		name?: string | null;

		/** Required. The schema of the payload can be found in payload_schema. */
		payload?: any;

		/** Required. Google Cloud Storage URI points to a YAML file describing payload. The schema is defined as an [OpenAPI 3.0.2 Schema Object](https://github.com/OAI/OpenAPI-Specification/blob/main/versions/3.0.2.md#schemaObject). The schema files that can be used here are found in gs://google-cloud-aiplatform/schema/dataset/annotation/, note that the chosen schema must be consistent with the parent Dataset's metadata. */
		payloadSchemaUri?: string | null;

		/** Output only. Timestamp when this Annotation was last updated. */
		updateTime?: string | null;
	}

	/** Used to assign specific AnnotationSpec to a particular area of a DataItem or the whole part of the DataItem. */
	export interface GoogleCloudAiplatformV1beta1AnnotationFormProperties {

		/** Output only. Timestamp when this Annotation was created. */
		createTime: FormControl<string | null | undefined>,

		/** Optional. Used to perform consistent read-modify-write updates. If not set, a blind "overwrite" update happens. */
		etag: FormControl<string | null | undefined>,

		/** Optional. The labels with user-defined metadata to organize your Annotations. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. No more than 64 user labels can be associated with one Annotation(System labels are excluded). See https://goo.gl/xmQnxf for more information and examples of labels. System reserved label keys are prefixed with "aiplatform.googleapis.com/" and are immutable. Following system labels exist for each Annotation: * "aiplatform.googleapis.com/annotation_set_name": optional, name of the UI's annotation set this Annotation belongs to. If not set, the Annotation is not visible in the UI. * "aiplatform.googleapis.com/payload_schema": output only, its value is the payload_schema's title. */
		labels: FormControl<{[id: string]: string } | null | undefined>,

		/** Output only. Resource name of the Annotation. */
		name: FormControl<string | null | undefined>,

		/** Required. The schema of the payload can be found in payload_schema. */
		payload: FormControl<any | null | undefined>,

		/** Required. Google Cloud Storage URI points to a YAML file describing payload. The schema is defined as an [OpenAPI 3.0.2 Schema Object](https://github.com/OAI/OpenAPI-Specification/blob/main/versions/3.0.2.md#schemaObject). The schema files that can be used here are found in gs://google-cloud-aiplatform/schema/dataset/annotation/, note that the chosen schema must be consistent with the parent Dataset's metadata. */
		payloadSchemaUri: FormControl<string | null | undefined>,

		/** Output only. Timestamp when this Annotation was last updated. */
		updateTime: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1AnnotationFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1AnnotationFormProperties>({
			createTime: new FormControl<string | null | undefined>(undefined),
			etag: new FormControl<string | null | undefined>(undefined),
			labels: new FormControl<{[id: string]: string } | null | undefined>(undefined),
			name: new FormControl<string | null | undefined>(undefined),
			payload: new FormControl<any | null | undefined>(undefined),
			payloadSchemaUri: new FormControl<string | null | undefined>(undefined),
			updateTime: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** References an API call. It contains more information about long running operation and Jobs that are triggered by the API call. */
	export interface GoogleCloudAiplatformV1beta1UserActionReference {

		/** For API calls that start a LabelingJob. Resource name of the LabelingJob. Format: `projects/{project}/locations/{location}/dataLabelingJobs/{data_labeling_job}` */
		dataLabelingJob?: string | null;

		/** The method name of the API RPC call. For example, "/google.cloud.aiplatform.{apiVersion}.DatasetService.CreateDataset" */
		method?: string | null;

		/** For API calls that return a long running operation. Resource name of the long running operation. Format: `projects/{project}/locations/{location}/operations/{operation}` */
		operation?: string | null;
	}

	/** References an API call. It contains more information about long running operation and Jobs that are triggered by the API call. */
	export interface GoogleCloudAiplatformV1beta1UserActionReferenceFormProperties {

		/** For API calls that start a LabelingJob. Resource name of the LabelingJob. Format: `projects/{project}/locations/{location}/dataLabelingJobs/{data_labeling_job}` */
		dataLabelingJob: FormControl<string | null | undefined>,

		/** The method name of the API RPC call. For example, "/google.cloud.aiplatform.{apiVersion}.DatasetService.CreateDataset" */
		method: FormControl<string | null | undefined>,

		/** For API calls that return a long running operation. Resource name of the long running operation. Format: `projects/{project}/locations/{location}/operations/{operation}` */
		operation: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1UserActionReferenceFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1UserActionReferenceFormProperties>({
			dataLabelingJob: new FormControl<string | null | undefined>(undefined),
			method: new FormControl<string | null | undefined>(undefined),
			operation: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Identifies a concept with which DataItems may be annotated with. */
	export interface GoogleCloudAiplatformV1beta1AnnotationSpec {

		/** Output only. Timestamp when this AnnotationSpec was created. */
		createTime?: string | null;

		/** Required. The user-defined name of the AnnotationSpec. The name can be up to 128 characters long and can consist of any UTF-8 characters. */
		displayName?: string | null;

		/** Optional. Used to perform consistent read-modify-write updates. If not set, a blind "overwrite" update happens. */
		etag?: string | null;

		/** Output only. Resource name of the AnnotationSpec. */
		name?: string | null;

		/** Output only. Timestamp when AnnotationSpec was last updated. */
		updateTime?: string | null;
	}

	/** Identifies a concept with which DataItems may be annotated with. */
	export interface GoogleCloudAiplatformV1beta1AnnotationSpecFormProperties {

		/** Output only. Timestamp when this AnnotationSpec was created. */
		createTime: FormControl<string | null | undefined>,

		/** Required. The user-defined name of the AnnotationSpec. The name can be up to 128 characters long and can consist of any UTF-8 characters. */
		displayName: FormControl<string | null | undefined>,

		/** Optional. Used to perform consistent read-modify-write updates. If not set, a blind "overwrite" update happens. */
		etag: FormControl<string | null | undefined>,

		/** Output only. Resource name of the AnnotationSpec. */
		name: FormControl<string | null | undefined>,

		/** Output only. Timestamp when AnnotationSpec was last updated. */
		updateTime: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1AnnotationSpecFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1AnnotationSpecFormProperties>({
			createTime: new FormControl<string | null | undefined>(undefined),
			displayName: new FormControl<string | null | undefined>(undefined),
			etag: new FormControl<string | null | undefined>(undefined),
			name: new FormControl<string | null | undefined>(undefined),
			updateTime: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Instance of a general artifact. */
	export interface GoogleCloudAiplatformV1beta1Artifact {

		/** Output only. Timestamp when this Artifact was created. */
		createTime?: string | null;

		/** Description of the Artifact */
		description?: string | null;

		/** User provided display name of the Artifact. May be up to 128 Unicode characters. */
		displayName?: string | null;

		/** An eTag used to perform consistent read-modify-write updates. If not set, a blind "overwrite" update happens. */
		etag?: string | null;

		/** The labels with user-defined metadata to organize your Artifacts. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. No more than 64 user labels can be associated with one Artifact (System labels are excluded). */
		labels?: {[id: string]: string };

		/** Properties of the Artifact. Top level metadata keys' heading and trailing spaces will be trimmed. The size of this field should not exceed 200KB. */
		metadata?: {[id: string]: any };

		/** Output only. The resource name of the Artifact. */
		name?: string | null;

		/** The title of the schema describing the metadata. Schema title and version is expected to be registered in earlier Create Schema calls. And both are used together as unique identifiers to identify schemas within the local metadata store. */
		schemaTitle?: string | null;

		/** The version of the schema in schema_name to use. Schema title and version is expected to be registered in earlier Create Schema calls. And both are used together as unique identifiers to identify schemas within the local metadata store. */
		schemaVersion?: string | null;

		/** The state of this Artifact. This is a property of the Artifact, and does not imply or capture any ongoing process. This property is managed by clients (such as Vertex AI Pipelines), and the system does not prescribe or check the validity of state transitions. */
		state?: GoogleCloudAiplatformV1beta1ArtifactState | null;

		/** Output only. Timestamp when this Artifact was last updated. */
		updateTime?: string | null;

		/** The uniform resource identifier of the artifact file. May be empty if there is no actual artifact file. */
		uri?: string | null;
	}

	/** Instance of a general artifact. */
	export interface GoogleCloudAiplatformV1beta1ArtifactFormProperties {

		/** Output only. Timestamp when this Artifact was created. */
		createTime: FormControl<string | null | undefined>,

		/** Description of the Artifact */
		description: FormControl<string | null | undefined>,

		/** User provided display name of the Artifact. May be up to 128 Unicode characters. */
		displayName: FormControl<string | null | undefined>,

		/** An eTag used to perform consistent read-modify-write updates. If not set, a blind "overwrite" update happens. */
		etag: FormControl<string | null | undefined>,

		/** The labels with user-defined metadata to organize your Artifacts. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. No more than 64 user labels can be associated with one Artifact (System labels are excluded). */
		labels: FormControl<{[id: string]: string } | null | undefined>,

		/** Properties of the Artifact. Top level metadata keys' heading and trailing spaces will be trimmed. The size of this field should not exceed 200KB. */
		metadata: FormControl<{[id: string]: any } | null | undefined>,

		/** Output only. The resource name of the Artifact. */
		name: FormControl<string | null | undefined>,

		/** The title of the schema describing the metadata. Schema title and version is expected to be registered in earlier Create Schema calls. And both are used together as unique identifiers to identify schemas within the local metadata store. */
		schemaTitle: FormControl<string | null | undefined>,

		/** The version of the schema in schema_name to use. Schema title and version is expected to be registered in earlier Create Schema calls. And both are used together as unique identifiers to identify schemas within the local metadata store. */
		schemaVersion: FormControl<string | null | undefined>,

		/** The state of this Artifact. This is a property of the Artifact, and does not imply or capture any ongoing process. This property is managed by clients (such as Vertex AI Pipelines), and the system does not prescribe or check the validity of state transitions. */
		state: FormControl<GoogleCloudAiplatformV1beta1ArtifactState | null | undefined>,

		/** Output only. Timestamp when this Artifact was last updated. */
		updateTime: FormControl<string | null | undefined>,

		/** The uniform resource identifier of the artifact file. May be empty if there is no actual artifact file. */
		uri: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1ArtifactFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1ArtifactFormProperties>({
			createTime: new FormControl<string | null | undefined>(undefined),
			description: new FormControl<string | null | undefined>(undefined),
			displayName: new FormControl<string | null | undefined>(undefined),
			etag: new FormControl<string | null | undefined>(undefined),
			labels: new FormControl<{[id: string]: string } | null | undefined>(undefined),
			metadata: new FormControl<{[id: string]: any } | null | undefined>(undefined),
			name: new FormControl<string | null | undefined>(undefined),
			schemaTitle: new FormControl<string | null | undefined>(undefined),
			schemaVersion: new FormControl<string | null | undefined>(undefined),
			state: new FormControl<GoogleCloudAiplatformV1beta1ArtifactState | null | undefined>(undefined),
			updateTime: new FormControl<string | null | undefined>(undefined),
			uri: new FormControl<string | null | undefined>(undefined),
		});

	}

	export enum GoogleCloudAiplatformV1beta1ArtifactState { STATE_UNSPECIFIED = 0, PENDING = 1, LIVE = 2 }


	/** Metadata information for NotebookService.AssignNotebookRuntime. */
	export interface GoogleCloudAiplatformV1beta1AssignNotebookRuntimeOperationMetadata {

		/** Generic Metadata shared by all operations. */
		genericMetadata?: GoogleCloudAiplatformV1beta1GenericOperationMetadata;

		/** A human-readable message that shows the intermediate progress details of NotebookRuntime. */
		progressMessage?: string | null;
	}

	/** Metadata information for NotebookService.AssignNotebookRuntime. */
	export interface GoogleCloudAiplatformV1beta1AssignNotebookRuntimeOperationMetadataFormProperties {

		/** A human-readable message that shows the intermediate progress details of NotebookRuntime. */
		progressMessage: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1AssignNotebookRuntimeOperationMetadataFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1AssignNotebookRuntimeOperationMetadataFormProperties>({
			progressMessage: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Generic Metadata shared by all operations. */
	export interface GoogleCloudAiplatformV1beta1GenericOperationMetadata {

		/** Output only. Time when the operation was created. */
		createTime?: string | null;

		/** Output only. Partial failures encountered. E.g. single files that couldn't be read. This field should never exceed 20 entries. Status details field will contain standard Google Cloud error details. */
		partialFailures?: Array<GoogleRpcStatus>;

		/** Output only. Time when the operation was updated for the last time. If the operation has finished (successfully or not), this is the finish time. */
		updateTime?: string | null;
	}

	/** Generic Metadata shared by all operations. */
	export interface GoogleCloudAiplatformV1beta1GenericOperationMetadataFormProperties {

		/** Output only. Time when the operation was created. */
		createTime: FormControl<string | null | undefined>,

		/** Output only. Time when the operation was updated for the last time. If the operation has finished (successfully or not), this is the finish time. */
		updateTime: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1GenericOperationMetadataFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1GenericOperationMetadataFormProperties>({
			createTime: new FormControl<string | null | undefined>(undefined),
			updateTime: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors). */
	export interface GoogleRpcStatus {

		/** The status code, which should be an enum value of google.rpc.Code. */
		code?: number | null;

		/** A list of messages that carry the error details. There is a common set of message types for APIs to use. */
		details?: Array<string>;

		/** A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client. */
		message?: string | null;
	}

	/** The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors). */
	export interface GoogleRpcStatusFormProperties {

		/** The status code, which should be an enum value of google.rpc.Code. */
		code: FormControl<number | null | undefined>,

		/** A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client. */
		message: FormControl<string | null | undefined>,
	}
	export function CreateGoogleRpcStatusFormGroup() {
		return new FormGroup<GoogleRpcStatusFormProperties>({
			code: new FormControl<number | null | undefined>(undefined),
			message: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Request message for NotebookService.AssignNotebookRuntime. */
	export interface GoogleCloudAiplatformV1beta1AssignNotebookRuntimeRequest {

		/** A runtime is a virtual machine allocated to a particular user for a particular Notebook file on temporary basis with lifetime limited to 24 hours. */
		notebookRuntime?: GoogleCloudAiplatformV1beta1NotebookRuntime;

		/** Optional. User specified ID for the notebook runtime. */
		notebookRuntimeId?: string | null;

		/** Required. The resource name of the NotebookRuntimeTemplate based on which a NotebookRuntime will be assigned (reuse or create a new one). */
		notebookRuntimeTemplate?: string | null;
	}

	/** Request message for NotebookService.AssignNotebookRuntime. */
	export interface GoogleCloudAiplatformV1beta1AssignNotebookRuntimeRequestFormProperties {

		/** Optional. User specified ID for the notebook runtime. */
		notebookRuntimeId: FormControl<string | null | undefined>,

		/** Required. The resource name of the NotebookRuntimeTemplate based on which a NotebookRuntime will be assigned (reuse or create a new one). */
		notebookRuntimeTemplate: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1AssignNotebookRuntimeRequestFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1AssignNotebookRuntimeRequestFormProperties>({
			notebookRuntimeId: new FormControl<string | null | undefined>(undefined),
			notebookRuntimeTemplate: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** A runtime is a virtual machine allocated to a particular user for a particular Notebook file on temporary basis with lifetime limited to 24 hours. */
	export interface GoogleCloudAiplatformV1beta1NotebookRuntime {

		/** Output only. Timestamp when this NotebookRuntime was created. */
		createTime?: string | null;

		/** The description of the NotebookRuntime. */
		description?: string | null;

		/** Required. The display name of the NotebookRuntime. The name can be up to 128 characters long and can consist of any UTF-8 characters. */
		displayName?: string | null;

		/** Output only. Timestamp when this NotebookRuntime will be expired: 1. System Predefined NotebookRuntime: 24 hours after creation. After expiration, system predifined runtime will be deleted. 2. User created NotebookRuntime: 6 months after last upgrade. After expiration, user created runtime will be stopped and allowed for upgrade. */
		expirationTime?: string | null;

		/** Output only. The health state of the NotebookRuntime. */
		healthState?: GoogleCloudAiplatformV1beta1NotebookRuntimeHealthState | null;

		/** Output only. Whether NotebookRuntime is upgradable. */
		isUpgradable?: boolean | null;

		/** The labels with user-defined metadata to organize your NotebookRuntime. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. No more than 64 user labels can be associated with one NotebookRuntime (System labels are excluded). See https://goo.gl/xmQnxf for more information and examples of labels. System reserved label keys are prefixed with "aiplatform.googleapis.com/" and are immutable. Following system labels exist for NotebookRuntime: * "aiplatform.googleapis.com/notebook_runtime_gce_instance_id": output only, its value is the Compute Engine instance id. * "aiplatform.googleapis.com/colab_enterprise_entry_service": its value is either "bigquery" or "vertex"; if absent, it should be "vertex". This is to describe the entry service, either BigQuery or Vertex. */
		labels?: {[id: string]: string };

		/** Output only. The resource name of the NotebookRuntime. */
		name?: string | null;

		/** Optional. The Compute Engine tags to add to runtime (see [Tagging instances](https://cloud.google.com/vpc/docs/add-remove-network-tags)). */
		networkTags?: Array<string>;

		/** Points to a NotebookRuntimeTemplateRef. */
		notebookRuntimeTemplateRef?: GoogleCloudAiplatformV1beta1NotebookRuntimeTemplateRef;

		/** Output only. The type of the notebook runtime. */
		notebookRuntimeType?: GoogleCloudAiplatformV1beta1NotebookRuntimeNotebookRuntimeType | null;

		/** Output only. The proxy endpoint used to access the NotebookRuntime. */
		proxyUri?: string | null;

		/** Notebook Reservation Affinity for consuming Zonal reservation. */
		reservationAffinity?: GoogleCloudAiplatformV1beta1NotebookReservationAffinity;

		/** Output only. The runtime (instance) state of the NotebookRuntime. */
		runtimeState?: GoogleCloudAiplatformV1beta1NotebookRuntimeRuntimeState | null;

		/** Required. The user email of the NotebookRuntime. */
		runtimeUser?: string | null;

		/** Output only. The service account that the NotebookRuntime workload runs as. */
		serviceAccount?: string | null;

		/** Output only. Timestamp when this NotebookRuntime was most recently updated. */
		updateTime?: string | null;

		/** Output only. The VM os image version of NotebookRuntime. */
		version?: string | null;
	}

	/** A runtime is a virtual machine allocated to a particular user for a particular Notebook file on temporary basis with lifetime limited to 24 hours. */
	export interface GoogleCloudAiplatformV1beta1NotebookRuntimeFormProperties {

		/** Output only. Timestamp when this NotebookRuntime was created. */
		createTime: FormControl<string | null | undefined>,

		/** The description of the NotebookRuntime. */
		description: FormControl<string | null | undefined>,

		/** Required. The display name of the NotebookRuntime. The name can be up to 128 characters long and can consist of any UTF-8 characters. */
		displayName: FormControl<string | null | undefined>,

		/** Output only. Timestamp when this NotebookRuntime will be expired: 1. System Predefined NotebookRuntime: 24 hours after creation. After expiration, system predifined runtime will be deleted. 2. User created NotebookRuntime: 6 months after last upgrade. After expiration, user created runtime will be stopped and allowed for upgrade. */
		expirationTime: FormControl<string | null | undefined>,

		/** Output only. The health state of the NotebookRuntime. */
		healthState: FormControl<GoogleCloudAiplatformV1beta1NotebookRuntimeHealthState | null | undefined>,

		/** Output only. Whether NotebookRuntime is upgradable. */
		isUpgradable: FormControl<boolean | null | undefined>,

		/** The labels with user-defined metadata to organize your NotebookRuntime. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. No more than 64 user labels can be associated with one NotebookRuntime (System labels are excluded). See https://goo.gl/xmQnxf for more information and examples of labels. System reserved label keys are prefixed with "aiplatform.googleapis.com/" and are immutable. Following system labels exist for NotebookRuntime: * "aiplatform.googleapis.com/notebook_runtime_gce_instance_id": output only, its value is the Compute Engine instance id. * "aiplatform.googleapis.com/colab_enterprise_entry_service": its value is either "bigquery" or "vertex"; if absent, it should be "vertex". This is to describe the entry service, either BigQuery or Vertex. */
		labels: FormControl<{[id: string]: string } | null | undefined>,

		/** Output only. The resource name of the NotebookRuntime. */
		name: FormControl<string | null | undefined>,

		/** Output only. The type of the notebook runtime. */
		notebookRuntimeType: FormControl<GoogleCloudAiplatformV1beta1NotebookRuntimeNotebookRuntimeType | null | undefined>,

		/** Output only. The proxy endpoint used to access the NotebookRuntime. */
		proxyUri: FormControl<string | null | undefined>,

		/** Output only. The runtime (instance) state of the NotebookRuntime. */
		runtimeState: FormControl<GoogleCloudAiplatformV1beta1NotebookRuntimeRuntimeState | null | undefined>,

		/** Required. The user email of the NotebookRuntime. */
		runtimeUser: FormControl<string | null | undefined>,

		/** Output only. The service account that the NotebookRuntime workload runs as. */
		serviceAccount: FormControl<string | null | undefined>,

		/** Output only. Timestamp when this NotebookRuntime was most recently updated. */
		updateTime: FormControl<string | null | undefined>,

		/** Output only. The VM os image version of NotebookRuntime. */
		version: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1NotebookRuntimeFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1NotebookRuntimeFormProperties>({
			createTime: new FormControl<string | null | undefined>(undefined),
			description: new FormControl<string | null | undefined>(undefined),
			displayName: new FormControl<string | null | undefined>(undefined),
			expirationTime: new FormControl<string | null | undefined>(undefined),
			healthState: new FormControl<GoogleCloudAiplatformV1beta1NotebookRuntimeHealthState | null | undefined>(undefined),
			isUpgradable: new FormControl<boolean | null | undefined>(undefined),
			labels: new FormControl<{[id: string]: string } | null | undefined>(undefined),
			name: new FormControl<string | null | undefined>(undefined),
			notebookRuntimeType: new FormControl<GoogleCloudAiplatformV1beta1NotebookRuntimeNotebookRuntimeType | null | undefined>(undefined),
			proxyUri: new FormControl<string | null | undefined>(undefined),
			runtimeState: new FormControl<GoogleCloudAiplatformV1beta1NotebookRuntimeRuntimeState | null | undefined>(undefined),
			runtimeUser: new FormControl<string | null | undefined>(undefined),
			serviceAccount: new FormControl<string | null | undefined>(undefined),
			updateTime: new FormControl<string | null | undefined>(undefined),
			version: new FormControl<string | null | undefined>(undefined),
		});

	}

	export enum GoogleCloudAiplatformV1beta1NotebookRuntimeHealthState { HEALTH_STATE_UNSPECIFIED = 0, HEALTHY = 1, UNHEALTHY = 2 }


	/** Points to a NotebookRuntimeTemplateRef. */
	export interface GoogleCloudAiplatformV1beta1NotebookRuntimeTemplateRef {

		/** Immutable. A resource name of the NotebookRuntimeTemplate. */
		notebookRuntimeTemplate?: string | null;
	}

	/** Points to a NotebookRuntimeTemplateRef. */
	export interface GoogleCloudAiplatformV1beta1NotebookRuntimeTemplateRefFormProperties {

		/** Immutable. A resource name of the NotebookRuntimeTemplate. */
		notebookRuntimeTemplate: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1NotebookRuntimeTemplateRefFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1NotebookRuntimeTemplateRefFormProperties>({
			notebookRuntimeTemplate: new FormControl<string | null | undefined>(undefined),
		});

	}

	export enum GoogleCloudAiplatformV1beta1NotebookRuntimeNotebookRuntimeType { NOTEBOOK_RUNTIME_TYPE_UNSPECIFIED = 0, USER_DEFINED = 1, ONE_CLICK = 2 }


	/** Notebook Reservation Affinity for consuming Zonal reservation. */
	export interface GoogleCloudAiplatformV1beta1NotebookReservationAffinity {

		/** Required. Specifies the type of reservation from which this instance can consume resources: RESERVATION_ANY (default), RESERVATION_SPECIFIC, or RESERVATION_NONE. See Consuming reserved instances for examples. */
		consumeReservationType?: GoogleCloudAiplatformV1beta1NotebookReservationAffinityConsumeReservationType | null;

		/** Optional. Corresponds to the label key of a reservation resource. To target a RESERVATION_SPECIFIC by name, use compute.googleapis.com/reservation-name as the key and specify the name of your reservation as its value. */
		key?: string | null;

		/** Optional. Corresponds to the label values of a reservation resource. This must be the full path name of Reservation. */
		values?: Array<string>;
	}

	/** Notebook Reservation Affinity for consuming Zonal reservation. */
	export interface GoogleCloudAiplatformV1beta1NotebookReservationAffinityFormProperties {

		/** Required. Specifies the type of reservation from which this instance can consume resources: RESERVATION_ANY (default), RESERVATION_SPECIFIC, or RESERVATION_NONE. See Consuming reserved instances for examples. */
		consumeReservationType: FormControl<GoogleCloudAiplatformV1beta1NotebookReservationAffinityConsumeReservationType | null | undefined>,

		/** Optional. Corresponds to the label key of a reservation resource. To target a RESERVATION_SPECIFIC by name, use compute.googleapis.com/reservation-name as the key and specify the name of your reservation as its value. */
		key: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1NotebookReservationAffinityFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1NotebookReservationAffinityFormProperties>({
			consumeReservationType: new FormControl<GoogleCloudAiplatformV1beta1NotebookReservationAffinityConsumeReservationType | null | undefined>(undefined),
			key: new FormControl<string | null | undefined>(undefined),
		});

	}

	export enum GoogleCloudAiplatformV1beta1NotebookReservationAffinityConsumeReservationType { RESERVATION_AFFINITY_TYPE_UNSPECIFIED = 0, RESERVATION_NONE = 1, RESERVATION_ANY = 2, RESERVATION_SPECIFIC = 3 }

	export enum GoogleCloudAiplatformV1beta1NotebookRuntimeRuntimeState { RUNTIME_STATE_UNSPECIFIED = 0, RUNNING = 1, BEING_STARTED = 2, BEING_STOPPED = 3, STOPPED = 4, BEING_UPGRADED = 5 }


	/** Attribution that explains a particular prediction output. */
	export interface GoogleCloudAiplatformV1beta1Attribution {

		/** Output only. Error of feature_attributions caused by approximation used in the explanation method. Lower value means more precise attributions. * For Sampled Shapley attribution, increasing path_count might reduce the error. * For Integrated Gradients attribution, increasing step_count might reduce the error. * For XRAI attribution, increasing step_count might reduce the error. See [this introduction](/vertex-ai/docs/explainable-ai/overview) for more information. */
		approximationError?: number | null;

		/** Output only. Model predicted output if the input instance is constructed from the baselines of all the features defined in ExplanationMetadata.inputs. The field name of the output is determined by the key in ExplanationMetadata.outputs. If the Model's predicted output has multiple dimensions (rank > 1), this is the value in the output located by output_index. If there are multiple baselines, their output values are averaged. */
		baselineOutputValue?: number | null;

		/** Output only. Attributions of each explained feature. Features are extracted from the prediction instances according to explanation metadata for inputs. The value is a struct, whose keys are the name of the feature. The values are how much the feature in the instance contributed to the predicted result. The format of the value is determined by the feature's input format: * If the feature is a scalar value, the attribution value is a floating number. * If the feature is an array of scalar values, the attribution value is an array. * If the feature is a struct, the attribution value is a struct. The keys in the attribution value struct are the same as the keys in the feature struct. The formats of the values in the attribution struct are determined by the formats of the values in the feature struct. The ExplanationMetadata.feature_attributions_schema_uri field, pointed to by the ExplanationSpec field of the Endpoint.deployed_models object, points to the schema file that describes the features and their attribution values (if it is populated). */
		featureAttributions?: any;

		/** Output only. Model predicted output on the corresponding explanation instance. The field name of the output is determined by the key in ExplanationMetadata.outputs. If the Model predicted output has multiple dimensions, this is the value in the output located by output_index. */
		instanceOutputValue?: number | null;

		/** Output only. The display name of the output identified by output_index. For example, the predicted class name by a multi-classification Model. This field is only populated iff the Model predicts display names as a separate field along with the explained output. The predicted display name must has the same shape of the explained output, and can be located using output_index. */
		outputDisplayName?: string | null;

		/** Output only. The index that locates the explained prediction output. If the prediction output is a scalar value, output_index is not populated. If the prediction output has multiple dimensions, the length of the output_index list is the same as the number of dimensions of the output. The i-th element in output_index is the element index of the i-th dimension of the output vector. Indices start from 0. */
		outputIndex?: Array<number>;

		/** Output only. Name of the explain output. Specified as the key in ExplanationMetadata.outputs. */
		outputName?: string | null;
	}

	/** Attribution that explains a particular prediction output. */
	export interface GoogleCloudAiplatformV1beta1AttributionFormProperties {

		/** Output only. Error of feature_attributions caused by approximation used in the explanation method. Lower value means more precise attributions. * For Sampled Shapley attribution, increasing path_count might reduce the error. * For Integrated Gradients attribution, increasing step_count might reduce the error. * For XRAI attribution, increasing step_count might reduce the error. See [this introduction](/vertex-ai/docs/explainable-ai/overview) for more information. */
		approximationError: FormControl<number | null | undefined>,

		/** Output only. Model predicted output if the input instance is constructed from the baselines of all the features defined in ExplanationMetadata.inputs. The field name of the output is determined by the key in ExplanationMetadata.outputs. If the Model's predicted output has multiple dimensions (rank > 1), this is the value in the output located by output_index. If there are multiple baselines, their output values are averaged. */
		baselineOutputValue: FormControl<number | null | undefined>,

		/** Output only. Attributions of each explained feature. Features are extracted from the prediction instances according to explanation metadata for inputs. The value is a struct, whose keys are the name of the feature. The values are how much the feature in the instance contributed to the predicted result. The format of the value is determined by the feature's input format: * If the feature is a scalar value, the attribution value is a floating number. * If the feature is an array of scalar values, the attribution value is an array. * If the feature is a struct, the attribution value is a struct. The keys in the attribution value struct are the same as the keys in the feature struct. The formats of the values in the attribution struct are determined by the formats of the values in the feature struct. The ExplanationMetadata.feature_attributions_schema_uri field, pointed to by the ExplanationSpec field of the Endpoint.deployed_models object, points to the schema file that describes the features and their attribution values (if it is populated). */
		featureAttributions: FormControl<any | null | undefined>,

		/** Output only. Model predicted output on the corresponding explanation instance. The field name of the output is determined by the key in ExplanationMetadata.outputs. If the Model predicted output has multiple dimensions, this is the value in the output located by output_index. */
		instanceOutputValue: FormControl<number | null | undefined>,

		/** Output only. The display name of the output identified by output_index. For example, the predicted class name by a multi-classification Model. This field is only populated iff the Model predicts display names as a separate field along with the explained output. The predicted display name must has the same shape of the explained output, and can be located using output_index. */
		outputDisplayName: FormControl<string | null | undefined>,

		/** Output only. Name of the explain output. Specified as the key in ExplanationMetadata.outputs. */
		outputName: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1AttributionFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1AttributionFormProperties>({
			approximationError: new FormControl<number | null | undefined>(undefined),
			baselineOutputValue: new FormControl<number | null | undefined>(undefined),
			featureAttributions: new FormControl<any | null | undefined>(undefined),
			instanceOutputValue: new FormControl<number | null | undefined>(undefined),
			outputDisplayName: new FormControl<string | null | undefined>(undefined),
			outputName: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** A description of resources that to large degree are decided by Vertex AI, and require only a modest additional configuration. Each Model supporting these resources documents its specific guidelines. */
	export interface GoogleCloudAiplatformV1beta1AutomaticResources {

		/** Immutable. The maximum number of replicas this DeployedModel may be deployed on when the traffic against it increases. If the requested value is too large, the deployment will error, but if deployment succeeds then the ability to scale the model to that many replicas is guaranteed (barring service outages). If traffic against the DeployedModel increases beyond what its replicas at maximum may handle, a portion of the traffic will be dropped. If this value is not provided, a no upper bound for scaling under heavy traffic will be assume, though Vertex AI may be unable to scale beyond certain replica number. */
		maxReplicaCount?: number | null;

		/** Immutable. The minimum number of replicas this DeployedModel will be always deployed on. If traffic against it increases, it may dynamically be deployed onto more replicas up to max_replica_count, and as traffic decreases, some of these extra replicas may be freed. If the requested value is too large, the deployment will error. */
		minReplicaCount?: number | null;
	}

	/** A description of resources that to large degree are decided by Vertex AI, and require only a modest additional configuration. Each Model supporting these resources documents its specific guidelines. */
	export interface GoogleCloudAiplatformV1beta1AutomaticResourcesFormProperties {

		/** Immutable. The maximum number of replicas this DeployedModel may be deployed on when the traffic against it increases. If the requested value is too large, the deployment will error, but if deployment succeeds then the ability to scale the model to that many replicas is guaranteed (barring service outages). If traffic against the DeployedModel increases beyond what its replicas at maximum may handle, a portion of the traffic will be dropped. If this value is not provided, a no upper bound for scaling under heavy traffic will be assume, though Vertex AI may be unable to scale beyond certain replica number. */
		maxReplicaCount: FormControl<number | null | undefined>,

		/** Immutable. The minimum number of replicas this DeployedModel will be always deployed on. If traffic against it increases, it may dynamically be deployed onto more replicas up to max_replica_count, and as traffic decreases, some of these extra replicas may be freed. If the requested value is too large, the deployment will error. */
		minReplicaCount: FormControl<number | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1AutomaticResourcesFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1AutomaticResourcesFormProperties>({
			maxReplicaCount: new FormControl<number | null | undefined>(undefined),
			minReplicaCount: new FormControl<number | null | undefined>(undefined),
		});

	}


	/** The metric specification that defines the target resource utilization (CPU utilization, accelerator's duty cycle, and so on) for calculating the desired replica count. */
	export interface GoogleCloudAiplatformV1beta1AutoscalingMetricSpec {

		/** Required. The resource metric name. Supported metrics: * For Online Prediction: * `aiplatform.googleapis.com/prediction/online/accelerator/duty_cycle` * `aiplatform.googleapis.com/prediction/online/cpu/utilization` */
		metricName?: string | null;

		/** The target resource utilization in percentage (1% - 100%) for the given metric; once the real usage deviates from the target by a certain percentage, the machine replicas change. The default value is 60 (representing 60%) if not provided. */
		target?: number | null;
	}

	/** The metric specification that defines the target resource utilization (CPU utilization, accelerator's duty cycle, and so on) for calculating the desired replica count. */
	export interface GoogleCloudAiplatformV1beta1AutoscalingMetricSpecFormProperties {

		/** Required. The resource metric name. Supported metrics: * For Online Prediction: * `aiplatform.googleapis.com/prediction/online/accelerator/duty_cycle` * `aiplatform.googleapis.com/prediction/online/cpu/utilization` */
		metricName: FormControl<string | null | undefined>,

		/** The target resource utilization in percentage (1% - 100%) for the given metric; once the real usage deviates from the target by a certain percentage, the machine replicas change. The default value is 60 (representing 60%) if not provided. */
		target: FormControl<number | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1AutoscalingMetricSpecFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1AutoscalingMetricSpecFormProperties>({
			metricName: new FormControl<string | null | undefined>(undefined),
			target: new FormControl<number | null | undefined>(undefined),
		});

	}


	/** The storage details for Avro input content. */
	export interface GoogleCloudAiplatformV1beta1AvroSource {

		/** The Google Cloud Storage location for the input content. */
		gcsSource?: GoogleCloudAiplatformV1beta1GcsSource;
	}

	/** The storage details for Avro input content. */
	export interface GoogleCloudAiplatformV1beta1AvroSourceFormProperties {
	}
	export function CreateGoogleCloudAiplatformV1beta1AvroSourceFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1AvroSourceFormProperties>({
		});

	}


	/** The Google Cloud Storage location for the input content. */
	export interface GoogleCloudAiplatformV1beta1GcsSource {

		/** Required. Google Cloud Storage URI(-s) to the input file(s). May contain wildcards. For more information on wildcards, see https://cloud.google.com/storage/docs/gsutil/addlhelp/WildcardNames. */
		uris?: Array<string>;
	}

	/** The Google Cloud Storage location for the input content. */
	export interface GoogleCloudAiplatformV1beta1GcsSourceFormProperties {
	}
	export function CreateGoogleCloudAiplatformV1beta1GcsSourceFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1GcsSourceFormProperties>({
		});

	}


	/** Request message for PipelineService.BatchCancelPipelineJobs. */
	export interface GoogleCloudAiplatformV1beta1BatchCancelPipelineJobsRequest {

		/** Required. The names of the PipelineJobs to cancel. A maximum of 32 PipelineJobs can be cancelled in a batch. Format: `projects/{project}/locations/{location}/pipelineJobs/{pipelineJob}` */
		names?: Array<string>;
	}

	/** Request message for PipelineService.BatchCancelPipelineJobs. */
	export interface GoogleCloudAiplatformV1beta1BatchCancelPipelineJobsRequestFormProperties {
	}
	export function CreateGoogleCloudAiplatformV1beta1BatchCancelPipelineJobsRequestFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1BatchCancelPipelineJobsRequestFormProperties>({
		});

	}


	/** Response message for PipelineService.BatchCancelPipelineJobs. */
	export interface GoogleCloudAiplatformV1beta1BatchCancelPipelineJobsResponse {

		/** PipelineJobs cancelled. */
		pipelineJobs?: Array<GoogleCloudAiplatformV1beta1PipelineJob>;
	}

	/** Response message for PipelineService.BatchCancelPipelineJobs. */
	export interface GoogleCloudAiplatformV1beta1BatchCancelPipelineJobsResponseFormProperties {
	}
	export function CreateGoogleCloudAiplatformV1beta1BatchCancelPipelineJobsResponseFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1BatchCancelPipelineJobsResponseFormProperties>({
		});

	}


	/** An instance of a machine learning PipelineJob. */
	export interface GoogleCloudAiplatformV1beta1PipelineJob {

		/** Output only. Pipeline creation time. */
		createTime?: string | null;

		/** The display name of the Pipeline. The name can be up to 128 characters long and can consist of any UTF-8 characters. */
		displayName?: string | null;

		/** Represents a customer-managed encryption key spec that can be applied to a top-level resource. */
		encryptionSpec?: GoogleCloudAiplatformV1beta1EncryptionSpec;

		/** Output only. Pipeline end time. */
		endTime?: string | null;

		/** The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors). */
		error?: GoogleRpcStatus;

		/** The runtime detail of PipelineJob. */
		jobDetail?: GoogleCloudAiplatformV1beta1PipelineJobDetail;

		/** The labels with user-defined metadata to organize PipelineJob. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. See https://goo.gl/xmQnxf for more information and examples of labels. Note there is some reserved label key for Vertex AI Pipelines. - `vertex-ai-pipelines-run-billing-id`, user set value will get overrided. */
		labels?: {[id: string]: string };

		/** Output only. The resource name of the PipelineJob. */
		name?: string | null;

		/** The full name of the Compute Engine [network](/compute/docs/networks-and-firewalls#networks) to which the Pipeline Job's workload should be peered. For example, `projects/12345/global/networks/myVPC`. [Format](/compute/docs/reference/rest/v1/networks/insert) is of the form `projects/{project}/global/networks/{network}`. Where {project} is a project number, as in `12345`, and {network} is a network name. Private services access must already be configured for the network. Pipeline job will apply the network configuration to the Google Cloud resources being launched, if applied, such as Vertex AI Training or Dataflow job. If left unspecified, the workload is not peered with any network. */
		network?: string | null;

		/** The spec of the pipeline. */
		pipelineSpec?: {[id: string]: any };

		/** A list of names for the reserved ip ranges under the VPC network that can be used for this Pipeline Job's workload. If set, we will deploy the Pipeline Job's workload within the provided ip ranges. Otherwise, the job will be deployed to any ip ranges under the provided VPC network. Example: ['vertex-ai-ip-range']. */
		reservedIpRanges?: Array<string>;

		/** The runtime config of a PipelineJob. */
		runtimeConfig?: GoogleCloudAiplatformV1beta1PipelineJobRuntimeConfig;

		/** Output only. The schedule resource name. Only returned if the Pipeline is created by Schedule API. */
		scheduleName?: string | null;

		/** The service account that the pipeline workload runs as. If not specified, the Compute Engine default service account in the project will be used. See https://cloud.google.com/compute/docs/access/service-accounts#default_service_account Users starting the pipeline must have the `iam.serviceAccounts.actAs` permission on this service account. */
		serviceAccount?: string | null;

		/** Output only. Pipeline start time. */
		startTime?: string | null;

		/** Output only. The detailed state of the job. */
		state?: GoogleCloudAiplatformV1beta1PipelineJobState | null;

		/** Pipeline template metadata if PipelineJob.template_uri is from supported template registry. Currently, the only supported registry is Artifact Registry. */
		templateMetadata?: GoogleCloudAiplatformV1beta1PipelineTemplateMetadata;

		/** A template uri from where the PipelineJob.pipeline_spec, if empty, will be downloaded. Currently, only uri from Vertex Template Registry & Gallery is supported. Reference to https://cloud.google.com/vertex-ai/docs/pipelines/create-pipeline-template. */
		templateUri?: string | null;

		/** Output only. Timestamp when this PipelineJob was most recently updated. */
		updateTime?: string | null;
	}

	/** An instance of a machine learning PipelineJob. */
	export interface GoogleCloudAiplatformV1beta1PipelineJobFormProperties {

		/** Output only. Pipeline creation time. */
		createTime: FormControl<string | null | undefined>,

		/** The display name of the Pipeline. The name can be up to 128 characters long and can consist of any UTF-8 characters. */
		displayName: FormControl<string | null | undefined>,

		/** Output only. Pipeline end time. */
		endTime: FormControl<string | null | undefined>,

		/** The labels with user-defined metadata to organize PipelineJob. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. See https://goo.gl/xmQnxf for more information and examples of labels. Note there is some reserved label key for Vertex AI Pipelines. - `vertex-ai-pipelines-run-billing-id`, user set value will get overrided. */
		labels: FormControl<{[id: string]: string } | null | undefined>,

		/** Output only. The resource name of the PipelineJob. */
		name: FormControl<string | null | undefined>,

		/** The full name of the Compute Engine [network](/compute/docs/networks-and-firewalls#networks) to which the Pipeline Job's workload should be peered. For example, `projects/12345/global/networks/myVPC`. [Format](/compute/docs/reference/rest/v1/networks/insert) is of the form `projects/{project}/global/networks/{network}`. Where {project} is a project number, as in `12345`, and {network} is a network name. Private services access must already be configured for the network. Pipeline job will apply the network configuration to the Google Cloud resources being launched, if applied, such as Vertex AI Training or Dataflow job. If left unspecified, the workload is not peered with any network. */
		network: FormControl<string | null | undefined>,

		/** The spec of the pipeline. */
		pipelineSpec: FormControl<{[id: string]: any } | null | undefined>,

		/** Output only. The schedule resource name. Only returned if the Pipeline is created by Schedule API. */
		scheduleName: FormControl<string | null | undefined>,

		/** The service account that the pipeline workload runs as. If not specified, the Compute Engine default service account in the project will be used. See https://cloud.google.com/compute/docs/access/service-accounts#default_service_account Users starting the pipeline must have the `iam.serviceAccounts.actAs` permission on this service account. */
		serviceAccount: FormControl<string | null | undefined>,

		/** Output only. Pipeline start time. */
		startTime: FormControl<string | null | undefined>,

		/** Output only. The detailed state of the job. */
		state: FormControl<GoogleCloudAiplatformV1beta1PipelineJobState | null | undefined>,

		/** A template uri from where the PipelineJob.pipeline_spec, if empty, will be downloaded. Currently, only uri from Vertex Template Registry & Gallery is supported. Reference to https://cloud.google.com/vertex-ai/docs/pipelines/create-pipeline-template. */
		templateUri: FormControl<string | null | undefined>,

		/** Output only. Timestamp when this PipelineJob was most recently updated. */
		updateTime: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1PipelineJobFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1PipelineJobFormProperties>({
			createTime: new FormControl<string | null | undefined>(undefined),
			displayName: new FormControl<string | null | undefined>(undefined),
			endTime: new FormControl<string | null | undefined>(undefined),
			labels: new FormControl<{[id: string]: string } | null | undefined>(undefined),
			name: new FormControl<string | null | undefined>(undefined),
			network: new FormControl<string | null | undefined>(undefined),
			pipelineSpec: new FormControl<{[id: string]: any } | null | undefined>(undefined),
			scheduleName: new FormControl<string | null | undefined>(undefined),
			serviceAccount: new FormControl<string | null | undefined>(undefined),
			startTime: new FormControl<string | null | undefined>(undefined),
			state: new FormControl<GoogleCloudAiplatformV1beta1PipelineJobState | null | undefined>(undefined),
			templateUri: new FormControl<string | null | undefined>(undefined),
			updateTime: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Represents a customer-managed encryption key spec that can be applied to a top-level resource. */
	export interface GoogleCloudAiplatformV1beta1EncryptionSpec {

		/** Required. The Cloud KMS resource identifier of the customer managed encryption key used to protect a resource. Has the form: `projects/my-project/locations/my-region/keyRings/my-kr/cryptoKeys/my-key`. The key needs to be in the same region as where the compute resource is created. */
		kmsKeyName?: string | null;
	}

	/** Represents a customer-managed encryption key spec that can be applied to a top-level resource. */
	export interface GoogleCloudAiplatformV1beta1EncryptionSpecFormProperties {

		/** Required. The Cloud KMS resource identifier of the customer managed encryption key used to protect a resource. Has the form: `projects/my-project/locations/my-region/keyRings/my-kr/cryptoKeys/my-key`. The key needs to be in the same region as where the compute resource is created. */
		kmsKeyName: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1EncryptionSpecFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1EncryptionSpecFormProperties>({
			kmsKeyName: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** The runtime detail of PipelineJob. */
	export interface GoogleCloudAiplatformV1beta1PipelineJobDetail {

		/** Instance of a general context. */
		pipelineContext?: GoogleCloudAiplatformV1beta1Context;

		/** Instance of a general context. */
		pipelineRunContext?: GoogleCloudAiplatformV1beta1Context;

		/** Output only. The runtime details of the tasks under the pipeline. */
		taskDetails?: Array<GoogleCloudAiplatformV1beta1PipelineTaskDetail>;
	}

	/** The runtime detail of PipelineJob. */
	export interface GoogleCloudAiplatformV1beta1PipelineJobDetailFormProperties {
	}
	export function CreateGoogleCloudAiplatformV1beta1PipelineJobDetailFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1PipelineJobDetailFormProperties>({
		});

	}


	/** Instance of a general context. */
	export interface GoogleCloudAiplatformV1beta1Context {

		/** Output only. Timestamp when this Context was created. */
		createTime?: string | null;

		/** Description of the Context */
		description?: string | null;

		/** User provided display name of the Context. May be up to 128 Unicode characters. */
		displayName?: string | null;

		/** An eTag used to perform consistent read-modify-write updates. If not set, a blind "overwrite" update happens. */
		etag?: string | null;

		/** The labels with user-defined metadata to organize your Contexts. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. No more than 64 user labels can be associated with one Context (System labels are excluded). */
		labels?: {[id: string]: string };

		/** Properties of the Context. Top level metadata keys' heading and trailing spaces will be trimmed. The size of this field should not exceed 200KB. */
		metadata?: {[id: string]: any };

		/** Immutable. The resource name of the Context. */
		name?: string | null;

		/** Output only. A list of resource names of Contexts that are parents of this Context. A Context may have at most 10 parent_contexts. */
		parentContexts?: Array<string>;

		/** The title of the schema describing the metadata. Schema title and version is expected to be registered in earlier Create Schema calls. And both are used together as unique identifiers to identify schemas within the local metadata store. */
		schemaTitle?: string | null;

		/** The version of the schema in schema_name to use. Schema title and version is expected to be registered in earlier Create Schema calls. And both are used together as unique identifiers to identify schemas within the local metadata store. */
		schemaVersion?: string | null;

		/** Output only. Timestamp when this Context was last updated. */
		updateTime?: string | null;
	}

	/** Instance of a general context. */
	export interface GoogleCloudAiplatformV1beta1ContextFormProperties {

		/** Output only. Timestamp when this Context was created. */
		createTime: FormControl<string | null | undefined>,

		/** Description of the Context */
		description: FormControl<string | null | undefined>,

		/** User provided display name of the Context. May be up to 128 Unicode characters. */
		displayName: FormControl<string | null | undefined>,

		/** An eTag used to perform consistent read-modify-write updates. If not set, a blind "overwrite" update happens. */
		etag: FormControl<string | null | undefined>,

		/** The labels with user-defined metadata to organize your Contexts. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. No more than 64 user labels can be associated with one Context (System labels are excluded). */
		labels: FormControl<{[id: string]: string } | null | undefined>,

		/** Properties of the Context. Top level metadata keys' heading and trailing spaces will be trimmed. The size of this field should not exceed 200KB. */
		metadata: FormControl<{[id: string]: any } | null | undefined>,

		/** Immutable. The resource name of the Context. */
		name: FormControl<string | null | undefined>,

		/** The title of the schema describing the metadata. Schema title and version is expected to be registered in earlier Create Schema calls. And both are used together as unique identifiers to identify schemas within the local metadata store. */
		schemaTitle: FormControl<string | null | undefined>,

		/** The version of the schema in schema_name to use. Schema title and version is expected to be registered in earlier Create Schema calls. And both are used together as unique identifiers to identify schemas within the local metadata store. */
		schemaVersion: FormControl<string | null | undefined>,

		/** Output only. Timestamp when this Context was last updated. */
		updateTime: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1ContextFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1ContextFormProperties>({
			createTime: new FormControl<string | null | undefined>(undefined),
			description: new FormControl<string | null | undefined>(undefined),
			displayName: new FormControl<string | null | undefined>(undefined),
			etag: new FormControl<string | null | undefined>(undefined),
			labels: new FormControl<{[id: string]: string } | null | undefined>(undefined),
			metadata: new FormControl<{[id: string]: any } | null | undefined>(undefined),
			name: new FormControl<string | null | undefined>(undefined),
			schemaTitle: new FormControl<string | null | undefined>(undefined),
			schemaVersion: new FormControl<string | null | undefined>(undefined),
			updateTime: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** The runtime detail of a task execution. */
	export interface GoogleCloudAiplatformV1beta1PipelineTaskDetail {

		/** Output only. Task create time. */
		createTime?: string | null;

		/** Output only. Task end time. */
		endTime?: string | null;

		/** The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors). */
		error?: GoogleRpcStatus;

		/** Instance of a general execution. */
		execution?: GoogleCloudAiplatformV1beta1Execution;

		/** The runtime detail of a pipeline executor. */
		executorDetail?: GoogleCloudAiplatformV1beta1PipelineTaskExecutorDetail;

		/** Output only. The runtime input artifacts of the task. */
		inputs?: {[id: string]: GoogleCloudAiplatformV1beta1PipelineTaskDetailArtifactList };

		/** Output only. The runtime output artifacts of the task. */
		outputs?: {[id: string]: GoogleCloudAiplatformV1beta1PipelineTaskDetailArtifactList };

		/** Output only. The id of the parent task if the task is within a component scope. Empty if the task is at the root level. */
		parentTaskId?: string | null;

		/** Output only. A list of task status. This field keeps a record of task status evolving over time. */
		pipelineTaskStatus?: Array<GoogleCloudAiplatformV1beta1PipelineTaskDetailPipelineTaskStatus>;

		/** Output only. Task start time. */
		startTime?: string | null;

		/** Output only. State of the task. */
		state?: GoogleCloudAiplatformV1beta1PipelineTaskDetailPipelineTaskStatusState | null;

		/** Output only. The system generated ID of the task. */
		taskId?: string | null;

		/** Output only. The user specified name of the task that is defined in pipeline_spec. */
		taskName?: string | null;
	}

	/** The runtime detail of a task execution. */
	export interface GoogleCloudAiplatformV1beta1PipelineTaskDetailFormProperties {

		/** Output only. Task create time. */
		createTime: FormControl<string | null | undefined>,

		/** Output only. Task end time. */
		endTime: FormControl<string | null | undefined>,

		/** Output only. The runtime input artifacts of the task. */
		inputs: FormControl<{[id: string]: GoogleCloudAiplatformV1beta1PipelineTaskDetailArtifactList } | null | undefined>,

		/** Output only. The runtime output artifacts of the task. */
		outputs: FormControl<{[id: string]: GoogleCloudAiplatformV1beta1PipelineTaskDetailArtifactList } | null | undefined>,

		/** Output only. The id of the parent task if the task is within a component scope. Empty if the task is at the root level. */
		parentTaskId: FormControl<string | null | undefined>,

		/** Output only. Task start time. */
		startTime: FormControl<string | null | undefined>,

		/** Output only. State of the task. */
		state: FormControl<GoogleCloudAiplatformV1beta1PipelineTaskDetailPipelineTaskStatusState | null | undefined>,

		/** Output only. The system generated ID of the task. */
		taskId: FormControl<string | null | undefined>,

		/** Output only. The user specified name of the task that is defined in pipeline_spec. */
		taskName: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1PipelineTaskDetailFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1PipelineTaskDetailFormProperties>({
			createTime: new FormControl<string | null | undefined>(undefined),
			endTime: new FormControl<string | null | undefined>(undefined),
			inputs: new FormControl<{[id: string]: GoogleCloudAiplatformV1beta1PipelineTaskDetailArtifactList } | null | undefined>(undefined),
			outputs: new FormControl<{[id: string]: GoogleCloudAiplatformV1beta1PipelineTaskDetailArtifactList } | null | undefined>(undefined),
			parentTaskId: new FormControl<string | null | undefined>(undefined),
			startTime: new FormControl<string | null | undefined>(undefined),
			state: new FormControl<GoogleCloudAiplatformV1beta1PipelineTaskDetailPipelineTaskStatusState | null | undefined>(undefined),
			taskId: new FormControl<string | null | undefined>(undefined),
			taskName: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Instance of a general execution. */
	export interface GoogleCloudAiplatformV1beta1Execution {

		/** Output only. Timestamp when this Execution was created. */
		createTime?: string | null;

		/** Description of the Execution */
		description?: string | null;

		/** User provided display name of the Execution. May be up to 128 Unicode characters. */
		displayName?: string | null;

		/** An eTag used to perform consistent read-modify-write updates. If not set, a blind "overwrite" update happens. */
		etag?: string | null;

		/** The labels with user-defined metadata to organize your Executions. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. No more than 64 user labels can be associated with one Execution (System labels are excluded). */
		labels?: {[id: string]: string };

		/** Properties of the Execution. Top level metadata keys' heading and trailing spaces will be trimmed. The size of this field should not exceed 200KB. */
		metadata?: {[id: string]: any };

		/** Output only. The resource name of the Execution. */
		name?: string | null;

		/** The title of the schema describing the metadata. Schema title and version is expected to be registered in earlier Create Schema calls. And both are used together as unique identifiers to identify schemas within the local metadata store. */
		schemaTitle?: string | null;

		/** The version of the schema in `schema_title` to use. Schema title and version is expected to be registered in earlier Create Schema calls. And both are used together as unique identifiers to identify schemas within the local metadata store. */
		schemaVersion?: string | null;

		/** The state of this Execution. This is a property of the Execution, and does not imply or capture any ongoing process. This property is managed by clients (such as Vertex AI Pipelines) and the system does not prescribe or check the validity of state transitions. */
		state?: GoogleCloudAiplatformV1beta1ExecutionState | null;

		/** Output only. Timestamp when this Execution was last updated. */
		updateTime?: string | null;
	}

	/** Instance of a general execution. */
	export interface GoogleCloudAiplatformV1beta1ExecutionFormProperties {

		/** Output only. Timestamp when this Execution was created. */
		createTime: FormControl<string | null | undefined>,

		/** Description of the Execution */
		description: FormControl<string | null | undefined>,

		/** User provided display name of the Execution. May be up to 128 Unicode characters. */
		displayName: FormControl<string | null | undefined>,

		/** An eTag used to perform consistent read-modify-write updates. If not set, a blind "overwrite" update happens. */
		etag: FormControl<string | null | undefined>,

		/** The labels with user-defined metadata to organize your Executions. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. No more than 64 user labels can be associated with one Execution (System labels are excluded). */
		labels: FormControl<{[id: string]: string } | null | undefined>,

		/** Properties of the Execution. Top level metadata keys' heading and trailing spaces will be trimmed. The size of this field should not exceed 200KB. */
		metadata: FormControl<{[id: string]: any } | null | undefined>,

		/** Output only. The resource name of the Execution. */
		name: FormControl<string | null | undefined>,

		/** The title of the schema describing the metadata. Schema title and version is expected to be registered in earlier Create Schema calls. And both are used together as unique identifiers to identify schemas within the local metadata store. */
		schemaTitle: FormControl<string | null | undefined>,

		/** The version of the schema in `schema_title` to use. Schema title and version is expected to be registered in earlier Create Schema calls. And both are used together as unique identifiers to identify schemas within the local metadata store. */
		schemaVersion: FormControl<string | null | undefined>,

		/** The state of this Execution. This is a property of the Execution, and does not imply or capture any ongoing process. This property is managed by clients (such as Vertex AI Pipelines) and the system does not prescribe or check the validity of state transitions. */
		state: FormControl<GoogleCloudAiplatformV1beta1ExecutionState | null | undefined>,

		/** Output only. Timestamp when this Execution was last updated. */
		updateTime: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1ExecutionFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1ExecutionFormProperties>({
			createTime: new FormControl<string | null | undefined>(undefined),
			description: new FormControl<string | null | undefined>(undefined),
			displayName: new FormControl<string | null | undefined>(undefined),
			etag: new FormControl<string | null | undefined>(undefined),
			labels: new FormControl<{[id: string]: string } | null | undefined>(undefined),
			metadata: new FormControl<{[id: string]: any } | null | undefined>(undefined),
			name: new FormControl<string | null | undefined>(undefined),
			schemaTitle: new FormControl<string | null | undefined>(undefined),
			schemaVersion: new FormControl<string | null | undefined>(undefined),
			state: new FormControl<GoogleCloudAiplatformV1beta1ExecutionState | null | undefined>(undefined),
			updateTime: new FormControl<string | null | undefined>(undefined),
		});

	}

	export enum GoogleCloudAiplatformV1beta1ExecutionState { STATE_UNSPECIFIED = 0, NEW = 1, RUNNING = 2, COMPLETE = 3, FAILED = 4, CACHED = 5, CANCELLED = 6 }


	/** The runtime detail of a pipeline executor. */
	export interface GoogleCloudAiplatformV1beta1PipelineTaskExecutorDetail {

		/** The detail of a container execution. It contains the job names of the lifecycle of a container execution. */
		containerDetail?: GoogleCloudAiplatformV1beta1PipelineTaskExecutorDetailContainerDetail;

		/** The detailed info for a custom job executor. */
		customJobDetail?: GoogleCloudAiplatformV1beta1PipelineTaskExecutorDetailCustomJobDetail;
	}

	/** The runtime detail of a pipeline executor. */
	export interface GoogleCloudAiplatformV1beta1PipelineTaskExecutorDetailFormProperties {
	}
	export function CreateGoogleCloudAiplatformV1beta1PipelineTaskExecutorDetailFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1PipelineTaskExecutorDetailFormProperties>({
		});

	}


	/** The detail of a container execution. It contains the job names of the lifecycle of a container execution. */
	export interface GoogleCloudAiplatformV1beta1PipelineTaskExecutorDetailContainerDetail {

		/** Output only. The names of the previously failed CustomJob for the main container executions. The list includes the all attempts in chronological order. */
		failedMainJobs?: Array<string>;

		/** Output only. The names of the previously failed CustomJob for the pre-caching-check container executions. This job will be available if the PipelineJob.pipeline_spec specifies the `pre_caching_check` hook in the lifecycle events. The list includes the all attempts in chronological order. */
		failedPreCachingCheckJobs?: Array<string>;

		/** Output only. The name of the CustomJob for the main container execution. */
		mainJob?: string | null;

		/** Output only. The name of the CustomJob for the pre-caching-check container execution. This job will be available if the PipelineJob.pipeline_spec specifies the `pre_caching_check` hook in the lifecycle events. */
		preCachingCheckJob?: string | null;
	}

	/** The detail of a container execution. It contains the job names of the lifecycle of a container execution. */
	export interface GoogleCloudAiplatformV1beta1PipelineTaskExecutorDetailContainerDetailFormProperties {

		/** Output only. The name of the CustomJob for the main container execution. */
		mainJob: FormControl<string | null | undefined>,

		/** Output only. The name of the CustomJob for the pre-caching-check container execution. This job will be available if the PipelineJob.pipeline_spec specifies the `pre_caching_check` hook in the lifecycle events. */
		preCachingCheckJob: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1PipelineTaskExecutorDetailContainerDetailFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1PipelineTaskExecutorDetailContainerDetailFormProperties>({
			mainJob: new FormControl<string | null | undefined>(undefined),
			preCachingCheckJob: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** The detailed info for a custom job executor. */
	export interface GoogleCloudAiplatformV1beta1PipelineTaskExecutorDetailCustomJobDetail {

		/** Output only. The names of the previously failed CustomJob. The list includes the all attempts in chronological order. */
		failedJobs?: Array<string>;

		/** Output only. The name of the CustomJob. */
		job?: string | null;
	}

	/** The detailed info for a custom job executor. */
	export interface GoogleCloudAiplatformV1beta1PipelineTaskExecutorDetailCustomJobDetailFormProperties {

		/** Output only. The name of the CustomJob. */
		job: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1PipelineTaskExecutorDetailCustomJobDetailFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1PipelineTaskExecutorDetailCustomJobDetailFormProperties>({
			job: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** A list of artifact metadata. */
	export interface GoogleCloudAiplatformV1beta1PipelineTaskDetailArtifactList {

		/** Output only. A list of artifact metadata. */
		artifacts?: Array<GoogleCloudAiplatformV1beta1Artifact>;
	}

	/** A list of artifact metadata. */
	export interface GoogleCloudAiplatformV1beta1PipelineTaskDetailArtifactListFormProperties {
	}
	export function CreateGoogleCloudAiplatformV1beta1PipelineTaskDetailArtifactListFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1PipelineTaskDetailArtifactListFormProperties>({
		});

	}


	/** A single record of the task status. */
	export interface GoogleCloudAiplatformV1beta1PipelineTaskDetailPipelineTaskStatus {

		/** The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors). */
		error?: GoogleRpcStatus;

		/** Output only. The state of the task. */
		state?: GoogleCloudAiplatformV1beta1PipelineTaskDetailPipelineTaskStatusState | null;

		/** Output only. Update time of this status. */
		updateTime?: string | null;
	}

	/** A single record of the task status. */
	export interface GoogleCloudAiplatformV1beta1PipelineTaskDetailPipelineTaskStatusFormProperties {

		/** Output only. The state of the task. */
		state: FormControl<GoogleCloudAiplatformV1beta1PipelineTaskDetailPipelineTaskStatusState | null | undefined>,

		/** Output only. Update time of this status. */
		updateTime: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1PipelineTaskDetailPipelineTaskStatusFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1PipelineTaskDetailPipelineTaskStatusFormProperties>({
			state: new FormControl<GoogleCloudAiplatformV1beta1PipelineTaskDetailPipelineTaskStatusState | null | undefined>(undefined),
			updateTime: new FormControl<string | null | undefined>(undefined),
		});

	}

	export enum GoogleCloudAiplatformV1beta1PipelineTaskDetailPipelineTaskStatusState { STATE_UNSPECIFIED = 0, PENDING = 1, RUNNING = 2, SUCCEEDED = 3, CANCEL_PENDING = 4, CANCELLING = 5, CANCELLED = 6, FAILED = 7, SKIPPED = 8, NOT_TRIGGERED = 9 }


	/** The runtime config of a PipelineJob. */
	export interface GoogleCloudAiplatformV1beta1PipelineJobRuntimeConfig {

		/** Represents the failure policy of a pipeline. Currently, the default of a pipeline is that the pipeline will continue to run until no more tasks can be executed, also known as PIPELINE_FAILURE_POLICY_FAIL_SLOW. However, if a pipeline is set to PIPELINE_FAILURE_POLICY_FAIL_FAST, it will stop scheduling any new tasks when a task has failed. Any scheduled tasks will continue to completion. */
		failurePolicy?: GoogleCloudAiplatformV1beta1PipelineJobRuntimeConfigFailurePolicy | null;

		/** Required. A path in a Cloud Storage bucket, which will be treated as the root output directory of the pipeline. It is used by the system to generate the paths of output artifacts. The artifact paths are generated with a sub-path pattern `{job_id}/{task_id}/{output_key}` under the specified output directory. The service account specified in this pipeline must have the `storage.objects.get` and `storage.objects.create` permissions for this bucket. */
		gcsOutputDirectory?: string | null;

		/** The runtime artifacts of the PipelineJob. The key will be the input artifact name and the value would be one of the InputArtifact. */
		inputArtifacts?: {[id: string]: GoogleCloudAiplatformV1beta1PipelineJobRuntimeConfigInputArtifact };

		/** The runtime parameters of the PipelineJob. The parameters will be passed into PipelineJob.pipeline_spec to replace the placeholders at runtime. This field is used by pipelines built using `PipelineJob.pipeline_spec.schema_version` 2.1.0, such as pipelines built using Kubeflow Pipelines SDK 1.9 or higher and the v2 DSL. */
		parameterValues?: {[id: string]: any };

		/** Deprecated. Use RuntimeConfig.parameter_values instead. The runtime parameters of the PipelineJob. The parameters will be passed into PipelineJob.pipeline_spec to replace the placeholders at runtime. This field is used by pipelines built using `PipelineJob.pipeline_spec.schema_version` 2.0.0 or lower, such as pipelines built using Kubeflow Pipelines SDK 1.8 or lower. */
		parameters?: {[id: string]: GoogleCloudAiplatformV1beta1Value };
	}

	/** The runtime config of a PipelineJob. */
	export interface GoogleCloudAiplatformV1beta1PipelineJobRuntimeConfigFormProperties {

		/** Represents the failure policy of a pipeline. Currently, the default of a pipeline is that the pipeline will continue to run until no more tasks can be executed, also known as PIPELINE_FAILURE_POLICY_FAIL_SLOW. However, if a pipeline is set to PIPELINE_FAILURE_POLICY_FAIL_FAST, it will stop scheduling any new tasks when a task has failed. Any scheduled tasks will continue to completion. */
		failurePolicy: FormControl<GoogleCloudAiplatformV1beta1PipelineJobRuntimeConfigFailurePolicy | null | undefined>,

		/** Required. A path in a Cloud Storage bucket, which will be treated as the root output directory of the pipeline. It is used by the system to generate the paths of output artifacts. The artifact paths are generated with a sub-path pattern `{job_id}/{task_id}/{output_key}` under the specified output directory. The service account specified in this pipeline must have the `storage.objects.get` and `storage.objects.create` permissions for this bucket. */
		gcsOutputDirectory: FormControl<string | null | undefined>,

		/** The runtime artifacts of the PipelineJob. The key will be the input artifact name and the value would be one of the InputArtifact. */
		inputArtifacts: FormControl<{[id: string]: GoogleCloudAiplatformV1beta1PipelineJobRuntimeConfigInputArtifact } | null | undefined>,

		/** The runtime parameters of the PipelineJob. The parameters will be passed into PipelineJob.pipeline_spec to replace the placeholders at runtime. This field is used by pipelines built using `PipelineJob.pipeline_spec.schema_version` 2.1.0, such as pipelines built using Kubeflow Pipelines SDK 1.9 or higher and the v2 DSL. */
		parameterValues: FormControl<{[id: string]: any } | null | undefined>,

		/** Deprecated. Use RuntimeConfig.parameter_values instead. The runtime parameters of the PipelineJob. The parameters will be passed into PipelineJob.pipeline_spec to replace the placeholders at runtime. This field is used by pipelines built using `PipelineJob.pipeline_spec.schema_version` 2.0.0 or lower, such as pipelines built using Kubeflow Pipelines SDK 1.8 or lower. */
		parameters: FormControl<{[id: string]: GoogleCloudAiplatformV1beta1Value } | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1PipelineJobRuntimeConfigFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1PipelineJobRuntimeConfigFormProperties>({
			failurePolicy: new FormControl<GoogleCloudAiplatformV1beta1PipelineJobRuntimeConfigFailurePolicy | null | undefined>(undefined),
			gcsOutputDirectory: new FormControl<string | null | undefined>(undefined),
			inputArtifacts: new FormControl<{[id: string]: GoogleCloudAiplatformV1beta1PipelineJobRuntimeConfigInputArtifact } | null | undefined>(undefined),
			parameterValues: new FormControl<{[id: string]: any } | null | undefined>(undefined),
			parameters: new FormControl<{[id: string]: GoogleCloudAiplatformV1beta1Value } | null | undefined>(undefined),
		});

	}

	export enum GoogleCloudAiplatformV1beta1PipelineJobRuntimeConfigFailurePolicy { PIPELINE_FAILURE_POLICY_UNSPECIFIED = 0, PIPELINE_FAILURE_POLICY_FAIL_SLOW = 1, PIPELINE_FAILURE_POLICY_FAIL_FAST = 2 }


	/** The type of an input artifact. */
	export interface GoogleCloudAiplatformV1beta1PipelineJobRuntimeConfigInputArtifact {

		/** Artifact resource id from MLMD. Which is the last portion of an artifact resource name: `projects/{project}/locations/{location}/metadataStores/default/artifacts/{artifact_id}`. The artifact must stay within the same project, location and default metadatastore as the pipeline. */
		artifactId?: string | null;
	}

	/** The type of an input artifact. */
	export interface GoogleCloudAiplatformV1beta1PipelineJobRuntimeConfigInputArtifactFormProperties {

		/** Artifact resource id from MLMD. Which is the last portion of an artifact resource name: `projects/{project}/locations/{location}/metadataStores/default/artifacts/{artifact_id}`. The artifact must stay within the same project, location and default metadatastore as the pipeline. */
		artifactId: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1PipelineJobRuntimeConfigInputArtifactFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1PipelineJobRuntimeConfigInputArtifactFormProperties>({
			artifactId: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Value is the value of the field. */
	export interface GoogleCloudAiplatformV1beta1Value {

		/** A double value. */
		doubleValue?: number | null;

		/** An integer value. */
		intValue?: string | null;

		/** A string value. */
		stringValue?: string | null;
	}

	/** Value is the value of the field. */
	export interface GoogleCloudAiplatformV1beta1ValueFormProperties {

		/** A double value. */
		doubleValue: FormControl<number | null | undefined>,

		/** An integer value. */
		intValue: FormControl<string | null | undefined>,

		/** A string value. */
		stringValue: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1ValueFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1ValueFormProperties>({
			doubleValue: new FormControl<number | null | undefined>(undefined),
			intValue: new FormControl<string | null | undefined>(undefined),
			stringValue: new FormControl<string | null | undefined>(undefined),
		});

	}

	export enum GoogleCloudAiplatformV1beta1PipelineJobState { PIPELINE_STATE_UNSPECIFIED = 0, PIPELINE_STATE_QUEUED = 1, PIPELINE_STATE_PENDING = 2, PIPELINE_STATE_RUNNING = 3, PIPELINE_STATE_SUCCEEDED = 4, PIPELINE_STATE_FAILED = 5, PIPELINE_STATE_CANCELLING = 6, PIPELINE_STATE_CANCELLED = 7, PIPELINE_STATE_PAUSED = 8 }


	/** Pipeline template metadata if PipelineJob.template_uri is from supported template registry. Currently, the only supported registry is Artifact Registry. */
	export interface GoogleCloudAiplatformV1beta1PipelineTemplateMetadata {

		/** The version_name in artifact registry. Will always be presented in output if the PipelineJob.template_uri is from supported template registry. Format is "sha256:abcdef123456...". */
		version?: string | null;
	}

	/** Pipeline template metadata if PipelineJob.template_uri is from supported template registry. Currently, the only supported registry is Artifact Registry. */
	export interface GoogleCloudAiplatformV1beta1PipelineTemplateMetadataFormProperties {

		/** The version_name in artifact registry. Will always be presented in output if the PipelineJob.template_uri is from supported template registry. Format is "sha256:abcdef123456...". */
		version: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1PipelineTemplateMetadataFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1PipelineTemplateMetadataFormProperties>({
			version: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Details of operations that perform batch create Features. */
	export interface GoogleCloudAiplatformV1beta1BatchCreateFeaturesOperationMetadata {

		/** Generic Metadata shared by all operations. */
		genericMetadata?: GoogleCloudAiplatformV1beta1GenericOperationMetadata;
	}

	/** Details of operations that perform batch create Features. */
	export interface GoogleCloudAiplatformV1beta1BatchCreateFeaturesOperationMetadataFormProperties {
	}
	export function CreateGoogleCloudAiplatformV1beta1BatchCreateFeaturesOperationMetadataFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1BatchCreateFeaturesOperationMetadataFormProperties>({
		});

	}


	/** Request message for FeaturestoreService.BatchCreateFeatures. */
	export interface GoogleCloudAiplatformV1beta1BatchCreateFeaturesRequest {

		/** Required. The request message specifying the Features to create. All Features must be created under the same parent EntityType. The `parent` field in each child request message can be omitted. If `parent` is set in a child request, then the value must match the `parent` value in this request message. */
		requests?: Array<GoogleCloudAiplatformV1beta1CreateFeatureRequest>;
	}

	/** Request message for FeaturestoreService.BatchCreateFeatures. */
	export interface GoogleCloudAiplatformV1beta1BatchCreateFeaturesRequestFormProperties {
	}
	export function CreateGoogleCloudAiplatformV1beta1BatchCreateFeaturesRequestFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1BatchCreateFeaturesRequestFormProperties>({
		});

	}


	/** Request message for FeaturestoreService.CreateFeature. Request message for FeatureRegistryService.CreateFeature. */
	export interface GoogleCloudAiplatformV1beta1CreateFeatureRequest {

		/** Feature Metadata information. For example, color is a feature that describes an apple. */
		feature?: GoogleCloudAiplatformV1beta1Feature;

		/** Required. The ID to use for the Feature, which will become the final component of the Feature's resource name. This value may be up to 128 characters, and valid characters are `[a-z0-9_]`. The first character cannot be a number. The value must be unique within an EntityType/FeatureGroup. */
		featureId?: string | null;

		/** Required. The resource name of the EntityType or FeatureGroup to create a Feature. Format for entity_type as parent: `projects/{project}/locations/{location}/featurestores/{featurestore}/entityTypes/{entity_type}` Format for feature_group as parent: `projects/{project}/locations/{location}/featureGroups/{feature_group}` */
		parent?: string | null;
	}

	/** Request message for FeaturestoreService.CreateFeature. Request message for FeatureRegistryService.CreateFeature. */
	export interface GoogleCloudAiplatformV1beta1CreateFeatureRequestFormProperties {

		/** Required. The ID to use for the Feature, which will become the final component of the Feature's resource name. This value may be up to 128 characters, and valid characters are `[a-z0-9_]`. The first character cannot be a number. The value must be unique within an EntityType/FeatureGroup. */
		featureId: FormControl<string | null | undefined>,

		/** Required. The resource name of the EntityType or FeatureGroup to create a Feature. Format for entity_type as parent: `projects/{project}/locations/{location}/featurestores/{featurestore}/entityTypes/{entity_type}` Format for feature_group as parent: `projects/{project}/locations/{location}/featureGroups/{feature_group}` */
		parent: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1CreateFeatureRequestFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1CreateFeatureRequestFormProperties>({
			featureId: new FormControl<string | null | undefined>(undefined),
			parent: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Feature Metadata information. For example, color is a feature that describes an apple. */
	export interface GoogleCloudAiplatformV1beta1Feature {

		/** Output only. Only applicable for Vertex AI Feature Store (Legacy). Timestamp when this EntityType was created. */
		createTime?: string | null;

		/** Description of the Feature. */
		description?: string | null;

		/** Optional. Only applicable for Vertex AI Feature Store (Legacy). If not set, use the monitoring_config defined for the EntityType this Feature belongs to. Only Features with type (Feature.ValueType) BOOL, STRING, DOUBLE or INT64 can enable monitoring. If set to true, all types of data monitoring are disabled despite the config on EntityType. */
		disableMonitoring?: boolean | null;

		/** Used to perform a consistent read-modify-write updates. If not set, a blind "overwrite" update happens. */
		etag?: string | null;

		/** Optional. The labels with user-defined metadata to organize your Features. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. See https://goo.gl/xmQnxf for more information on and examples of labels. No more than 64 user labels can be associated with one Feature (System labels are excluded)." System reserved label keys are prefixed with "aiplatform.googleapis.com/" and are immutable. */
		labels?: {[id: string]: string };

		/** Configuration of how features in Featurestore are monitored. */
		monitoringConfig?: GoogleCloudAiplatformV1beta1FeaturestoreMonitoringConfig;

		/** Output only. Only applicable for Vertex AI Feature Store (Legacy). A list of historical SnapshotAnalysis stats requested by user, sorted by FeatureStatsAnomaly.start_time descending. */
		monitoringStats?: Array<GoogleCloudAiplatformV1beta1FeatureStatsAnomaly>;

		/** Output only. Only applicable for Vertex AI Feature Store (Legacy). The list of historical stats and anomalies with specified objectives. */
		monitoringStatsAnomalies?: Array<GoogleCloudAiplatformV1beta1FeatureMonitoringStatsAnomaly>;

		/** Immutable. Name of the Feature. Format: `projects/{project}/locations/{location}/featurestores/{featurestore}/entityTypes/{entity_type}/features/{feature}` `projects/{project}/locations/{location}/featureGroups/{feature_group}/features/{feature}` The last part feature is assigned by the client. The feature can be up to 64 characters long and can consist only of ASCII Latin letters A-Z and a-z, underscore(_), and ASCII digits 0-9 starting with a letter. The value will be unique given an entity type. */
		name?: string | null;

		/** Output only. Only applicable for Vertex AI Feature Store (Legacy). Timestamp when this EntityType was most recently updated. */
		updateTime?: string | null;

		/** Immutable. Only applicable for Vertex AI Feature Store (Legacy). Type of Feature value. */
		valueType?: GoogleCloudAiplatformV1beta1FeatureValueType | null;

		/** Only applicable for Vertex AI Feature Store. The name of the BigQuery Table/View column hosting data for this version. If no value is provided, will use feature_id. */
		versionColumnName?: string | null;
	}

	/** Feature Metadata information. For example, color is a feature that describes an apple. */
	export interface GoogleCloudAiplatformV1beta1FeatureFormProperties {

		/** Output only. Only applicable for Vertex AI Feature Store (Legacy). Timestamp when this EntityType was created. */
		createTime: FormControl<string | null | undefined>,

		/** Description of the Feature. */
		description: FormControl<string | null | undefined>,

		/** Optional. Only applicable for Vertex AI Feature Store (Legacy). If not set, use the monitoring_config defined for the EntityType this Feature belongs to. Only Features with type (Feature.ValueType) BOOL, STRING, DOUBLE or INT64 can enable monitoring. If set to true, all types of data monitoring are disabled despite the config on EntityType. */
		disableMonitoring: FormControl<boolean | null | undefined>,

		/** Used to perform a consistent read-modify-write updates. If not set, a blind "overwrite" update happens. */
		etag: FormControl<string | null | undefined>,

		/** Optional. The labels with user-defined metadata to organize your Features. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. See https://goo.gl/xmQnxf for more information on and examples of labels. No more than 64 user labels can be associated with one Feature (System labels are excluded)." System reserved label keys are prefixed with "aiplatform.googleapis.com/" and are immutable. */
		labels: FormControl<{[id: string]: string } | null | undefined>,

		/** Immutable. Name of the Feature. Format: `projects/{project}/locations/{location}/featurestores/{featurestore}/entityTypes/{entity_type}/features/{feature}` `projects/{project}/locations/{location}/featureGroups/{feature_group}/features/{feature}` The last part feature is assigned by the client. The feature can be up to 64 characters long and can consist only of ASCII Latin letters A-Z and a-z, underscore(_), and ASCII digits 0-9 starting with a letter. The value will be unique given an entity type. */
		name: FormControl<string | null | undefined>,

		/** Output only. Only applicable for Vertex AI Feature Store (Legacy). Timestamp when this EntityType was most recently updated. */
		updateTime: FormControl<string | null | undefined>,

		/** Immutable. Only applicable for Vertex AI Feature Store (Legacy). Type of Feature value. */
		valueType: FormControl<GoogleCloudAiplatformV1beta1FeatureValueType | null | undefined>,

		/** Only applicable for Vertex AI Feature Store. The name of the BigQuery Table/View column hosting data for this version. If no value is provided, will use feature_id. */
		versionColumnName: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1FeatureFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1FeatureFormProperties>({
			createTime: new FormControl<string | null | undefined>(undefined),
			description: new FormControl<string | null | undefined>(undefined),
			disableMonitoring: new FormControl<boolean | null | undefined>(undefined),
			etag: new FormControl<string | null | undefined>(undefined),
			labels: new FormControl<{[id: string]: string } | null | undefined>(undefined),
			name: new FormControl<string | null | undefined>(undefined),
			updateTime: new FormControl<string | null | undefined>(undefined),
			valueType: new FormControl<GoogleCloudAiplatformV1beta1FeatureValueType | null | undefined>(undefined),
			versionColumnName: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Configuration of how features in Featurestore are monitored. */
	export interface GoogleCloudAiplatformV1beta1FeaturestoreMonitoringConfig {

		/** The config for Featurestore Monitoring threshold. */
		categoricalThresholdConfig?: GoogleCloudAiplatformV1beta1FeaturestoreMonitoringConfigThresholdConfig;

		/** Configuration of the Featurestore's ImportFeature Analysis Based Monitoring. This type of analysis generates statistics for values of each Feature imported by every ImportFeatureValues operation. */
		importFeaturesAnalysis?: GoogleCloudAiplatformV1beta1FeaturestoreMonitoringConfigImportFeaturesAnalysis;

		/** The config for Featurestore Monitoring threshold. */
		numericalThresholdConfig?: GoogleCloudAiplatformV1beta1FeaturestoreMonitoringConfigThresholdConfig;

		/** Configuration of the Featurestore's Snapshot Analysis Based Monitoring. This type of analysis generates statistics for each Feature based on a snapshot of the latest feature value of each entities every monitoring_interval. */
		snapshotAnalysis?: GoogleCloudAiplatformV1beta1FeaturestoreMonitoringConfigSnapshotAnalysis;
	}

	/** Configuration of how features in Featurestore are monitored. */
	export interface GoogleCloudAiplatformV1beta1FeaturestoreMonitoringConfigFormProperties {
	}
	export function CreateGoogleCloudAiplatformV1beta1FeaturestoreMonitoringConfigFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1FeaturestoreMonitoringConfigFormProperties>({
		});

	}


	/** The config for Featurestore Monitoring threshold. */
	export interface GoogleCloudAiplatformV1beta1FeaturestoreMonitoringConfigThresholdConfig {

		/** Specify a threshold value that can trigger the alert. 1. For categorical feature, the distribution distance is calculated by L-inifinity norm. 2. For numerical feature, the distribution distance is calculated by Jensen–Shannon divergence. Each feature must have a non-zero threshold if they need to be monitored. Otherwise no alert will be triggered for that feature. */
		value?: number | null;
	}

	/** The config for Featurestore Monitoring threshold. */
	export interface GoogleCloudAiplatformV1beta1FeaturestoreMonitoringConfigThresholdConfigFormProperties {

		/** Specify a threshold value that can trigger the alert. 1. For categorical feature, the distribution distance is calculated by L-inifinity norm. 2. For numerical feature, the distribution distance is calculated by Jensen–Shannon divergence. Each feature must have a non-zero threshold if they need to be monitored. Otherwise no alert will be triggered for that feature. */
		value: FormControl<number | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1FeaturestoreMonitoringConfigThresholdConfigFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1FeaturestoreMonitoringConfigThresholdConfigFormProperties>({
			value: new FormControl<number | null | undefined>(undefined),
		});

	}


	/** Configuration of the Featurestore's ImportFeature Analysis Based Monitoring. This type of analysis generates statistics for values of each Feature imported by every ImportFeatureValues operation. */
	export interface GoogleCloudAiplatformV1beta1FeaturestoreMonitoringConfigImportFeaturesAnalysis {

		/** The baseline used to do anomaly detection for the statistics generated by import features analysis. */
		anomalyDetectionBaseline?: GoogleCloudAiplatformV1beta1FeaturestoreMonitoringConfigImportFeaturesAnalysisAnomalyDetectionBaseline | null;

		/** Whether to enable / disable / inherite default hebavior for import features analysis. */
		state?: GoogleCloudAiplatformV1beta1FeaturestoreMonitoringConfigImportFeaturesAnalysisState | null;
	}

	/** Configuration of the Featurestore's ImportFeature Analysis Based Monitoring. This type of analysis generates statistics for values of each Feature imported by every ImportFeatureValues operation. */
	export interface GoogleCloudAiplatformV1beta1FeaturestoreMonitoringConfigImportFeaturesAnalysisFormProperties {

		/** The baseline used to do anomaly detection for the statistics generated by import features analysis. */
		anomalyDetectionBaseline: FormControl<GoogleCloudAiplatformV1beta1FeaturestoreMonitoringConfigImportFeaturesAnalysisAnomalyDetectionBaseline | null | undefined>,

		/** Whether to enable / disable / inherite default hebavior for import features analysis. */
		state: FormControl<GoogleCloudAiplatformV1beta1FeaturestoreMonitoringConfigImportFeaturesAnalysisState | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1FeaturestoreMonitoringConfigImportFeaturesAnalysisFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1FeaturestoreMonitoringConfigImportFeaturesAnalysisFormProperties>({
			anomalyDetectionBaseline: new FormControl<GoogleCloudAiplatformV1beta1FeaturestoreMonitoringConfigImportFeaturesAnalysisAnomalyDetectionBaseline | null | undefined>(undefined),
			state: new FormControl<GoogleCloudAiplatformV1beta1FeaturestoreMonitoringConfigImportFeaturesAnalysisState | null | undefined>(undefined),
		});

	}

	export enum GoogleCloudAiplatformV1beta1FeaturestoreMonitoringConfigImportFeaturesAnalysisAnomalyDetectionBaseline { BASELINE_UNSPECIFIED = 0, LATEST_STATS = 1, MOST_RECENT_SNAPSHOT_STATS = 2, PREVIOUS_IMPORT_FEATURES_STATS = 3 }

	export enum GoogleCloudAiplatformV1beta1FeaturestoreMonitoringConfigImportFeaturesAnalysisState { STATE_UNSPECIFIED = 0, DEFAULT = 1, ENABLED = 2, DISABLED = 3 }


	/** Configuration of the Featurestore's Snapshot Analysis Based Monitoring. This type of analysis generates statistics for each Feature based on a snapshot of the latest feature value of each entities every monitoring_interval. */
	export interface GoogleCloudAiplatformV1beta1FeaturestoreMonitoringConfigSnapshotAnalysis {

		/** The monitoring schedule for snapshot analysis. For EntityType-level config: unset / disabled = true indicates disabled by default for Features under it; otherwise by default enable snapshot analysis monitoring with monitoring_interval for Features under it. Feature-level config: disabled = true indicates disabled regardless of the EntityType-level config; unset monitoring_interval indicates going with EntityType-level config; otherwise run snapshot analysis monitoring with monitoring_interval regardless of the EntityType-level config. Explicitly Disable the snapshot analysis based monitoring. */
		disabled?: boolean | null;

		/** Configuration of the snapshot analysis based monitoring pipeline running interval. The value is rolled up to full day. If both monitoring_interval_days and the deprecated `monitoring_interval` field are set when creating/updating EntityTypes/Features, monitoring_interval_days will be used. */
		monitoringInterval?: string | null;

		/** Configuration of the snapshot analysis based monitoring pipeline running interval. The value indicates number of days. */
		monitoringIntervalDays?: number | null;

		/** Customized export features time window for snapshot analysis. Unit is one day. Default value is 3 weeks. Minimum value is 1 day. Maximum value is 4000 days. */
		stalenessDays?: number | null;
	}

	/** Configuration of the Featurestore's Snapshot Analysis Based Monitoring. This type of analysis generates statistics for each Feature based on a snapshot of the latest feature value of each entities every monitoring_interval. */
	export interface GoogleCloudAiplatformV1beta1FeaturestoreMonitoringConfigSnapshotAnalysisFormProperties {

		/** The monitoring schedule for snapshot analysis. For EntityType-level config: unset / disabled = true indicates disabled by default for Features under it; otherwise by default enable snapshot analysis monitoring with monitoring_interval for Features under it. Feature-level config: disabled = true indicates disabled regardless of the EntityType-level config; unset monitoring_interval indicates going with EntityType-level config; otherwise run snapshot analysis monitoring with monitoring_interval regardless of the EntityType-level config. Explicitly Disable the snapshot analysis based monitoring. */
		disabled: FormControl<boolean | null | undefined>,

		/** Configuration of the snapshot analysis based monitoring pipeline running interval. The value is rolled up to full day. If both monitoring_interval_days and the deprecated `monitoring_interval` field are set when creating/updating EntityTypes/Features, monitoring_interval_days will be used. */
		monitoringInterval: FormControl<string | null | undefined>,

		/** Configuration of the snapshot analysis based monitoring pipeline running interval. The value indicates number of days. */
		monitoringIntervalDays: FormControl<number | null | undefined>,

		/** Customized export features time window for snapshot analysis. Unit is one day. Default value is 3 weeks. Minimum value is 1 day. Maximum value is 4000 days. */
		stalenessDays: FormControl<number | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1FeaturestoreMonitoringConfigSnapshotAnalysisFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1FeaturestoreMonitoringConfigSnapshotAnalysisFormProperties>({
			disabled: new FormControl<boolean | null | undefined>(undefined),
			monitoringInterval: new FormControl<string | null | undefined>(undefined),
			monitoringIntervalDays: new FormControl<number | null | undefined>(undefined),
			stalenessDays: new FormControl<number | null | undefined>(undefined),
		});

	}


	/** Stats and Anomaly generated at specific timestamp for specific Feature. The start_time and end_time are used to define the time range of the dataset that current stats belongs to, e.g. prediction traffic is bucketed into prediction datasets by time window. If the Dataset is not defined by time window, start_time = end_time. Timestamp of the stats and anomalies always refers to end_time. Raw stats and anomalies are stored in stats_uri or anomaly_uri in the tensorflow defined protos. Field data_stats contains almost identical information with the raw stats in Vertex AI defined proto, for UI to display. */
	export interface GoogleCloudAiplatformV1beta1FeatureStatsAnomaly {

		/** This is the threshold used when detecting anomalies. The threshold can be changed by user, so this one might be different from ThresholdConfig.value. */
		anomalyDetectionThreshold?: number | null;

		/** Path of the anomaly file for current feature values in Cloud Storage bucket. Format: gs:////anomalies. Example: gs://monitoring_bucket/feature_name/anomalies. Stats are stored as binary format with Protobuf message Anoamlies are stored as binary format with Protobuf message [tensorflow.metadata.v0.AnomalyInfo] (https://github.com/tensorflow/metadata/blob/master/tensorflow_metadata/proto/v0/anomalies.proto). */
		anomalyUri?: string | null;

		/** Deviation from the current stats to baseline stats. 1. For categorical feature, the distribution distance is calculated by L-inifinity norm. 2. For numerical feature, the distribution distance is calculated by Jensen–Shannon divergence. */
		distributionDeviation?: number | null;

		/** The end timestamp of window where stats were generated. For objectives where time window doesn't make sense (e.g. Featurestore Snapshot Monitoring), end_time indicates the timestamp of the data used to generate stats (e.g. timestamp we take snapshots for feature values). */
		endTime?: string | null;

		/** Feature importance score, only populated when cross-feature monitoring is enabled. For now only used to represent feature attribution score within range [0, 1] for ModelDeploymentMonitoringObjectiveType.FEATURE_ATTRIBUTION_SKEW and ModelDeploymentMonitoringObjectiveType.FEATURE_ATTRIBUTION_DRIFT. */
		score?: number | null;

		/** The start timestamp of window where stats were generated. For objectives where time window doesn't make sense (e.g. Featurestore Snapshot Monitoring), start_time is only used to indicate the monitoring intervals, so it always equals to (end_time - monitoring_interval). */
		startTime?: string | null;

		/** Path of the stats file for current feature values in Cloud Storage bucket. Format: gs:////stats. Example: gs://monitoring_bucket/feature_name/stats. Stats are stored as binary format with Protobuf message [tensorflow.metadata.v0.FeatureNameStatistics](https://github.com/tensorflow/metadata/blob/master/tensorflow_metadata/proto/v0/statistics.proto). */
		statsUri?: string | null;
	}

	/** Stats and Anomaly generated at specific timestamp for specific Feature. The start_time and end_time are used to define the time range of the dataset that current stats belongs to, e.g. prediction traffic is bucketed into prediction datasets by time window. If the Dataset is not defined by time window, start_time = end_time. Timestamp of the stats and anomalies always refers to end_time. Raw stats and anomalies are stored in stats_uri or anomaly_uri in the tensorflow defined protos. Field data_stats contains almost identical information with the raw stats in Vertex AI defined proto, for UI to display. */
	export interface GoogleCloudAiplatformV1beta1FeatureStatsAnomalyFormProperties {

		/** This is the threshold used when detecting anomalies. The threshold can be changed by user, so this one might be different from ThresholdConfig.value. */
		anomalyDetectionThreshold: FormControl<number | null | undefined>,

		/** Path of the anomaly file for current feature values in Cloud Storage bucket. Format: gs:////anomalies. Example: gs://monitoring_bucket/feature_name/anomalies. Stats are stored as binary format with Protobuf message Anoamlies are stored as binary format with Protobuf message [tensorflow.metadata.v0.AnomalyInfo] (https://github.com/tensorflow/metadata/blob/master/tensorflow_metadata/proto/v0/anomalies.proto). */
		anomalyUri: FormControl<string | null | undefined>,

		/** Deviation from the current stats to baseline stats. 1. For categorical feature, the distribution distance is calculated by L-inifinity norm. 2. For numerical feature, the distribution distance is calculated by Jensen–Shannon divergence. */
		distributionDeviation: FormControl<number | null | undefined>,

		/** The end timestamp of window where stats were generated. For objectives where time window doesn't make sense (e.g. Featurestore Snapshot Monitoring), end_time indicates the timestamp of the data used to generate stats (e.g. timestamp we take snapshots for feature values). */
		endTime: FormControl<string | null | undefined>,

		/** Feature importance score, only populated when cross-feature monitoring is enabled. For now only used to represent feature attribution score within range [0, 1] for ModelDeploymentMonitoringObjectiveType.FEATURE_ATTRIBUTION_SKEW and ModelDeploymentMonitoringObjectiveType.FEATURE_ATTRIBUTION_DRIFT. */
		score: FormControl<number | null | undefined>,

		/** The start timestamp of window where stats were generated. For objectives where time window doesn't make sense (e.g. Featurestore Snapshot Monitoring), start_time is only used to indicate the monitoring intervals, so it always equals to (end_time - monitoring_interval). */
		startTime: FormControl<string | null | undefined>,

		/** Path of the stats file for current feature values in Cloud Storage bucket. Format: gs:////stats. Example: gs://monitoring_bucket/feature_name/stats. Stats are stored as binary format with Protobuf message [tensorflow.metadata.v0.FeatureNameStatistics](https://github.com/tensorflow/metadata/blob/master/tensorflow_metadata/proto/v0/statistics.proto). */
		statsUri: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1FeatureStatsAnomalyFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1FeatureStatsAnomalyFormProperties>({
			anomalyDetectionThreshold: new FormControl<number | null | undefined>(undefined),
			anomalyUri: new FormControl<string | null | undefined>(undefined),
			distributionDeviation: new FormControl<number | null | undefined>(undefined),
			endTime: new FormControl<string | null | undefined>(undefined),
			score: new FormControl<number | null | undefined>(undefined),
			startTime: new FormControl<string | null | undefined>(undefined),
			statsUri: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** A list of historical SnapshotAnalysis or ImportFeaturesAnalysis stats requested by user, sorted by FeatureStatsAnomaly.start_time descending. */
	export interface GoogleCloudAiplatformV1beta1FeatureMonitoringStatsAnomaly {

		/** Stats and Anomaly generated at specific timestamp for specific Feature. The start_time and end_time are used to define the time range of the dataset that current stats belongs to, e.g. prediction traffic is bucketed into prediction datasets by time window. If the Dataset is not defined by time window, start_time = end_time. Timestamp of the stats and anomalies always refers to end_time. Raw stats and anomalies are stored in stats_uri or anomaly_uri in the tensorflow defined protos. Field data_stats contains almost identical information with the raw stats in Vertex AI defined proto, for UI to display. */
		featureStatsAnomaly?: GoogleCloudAiplatformV1beta1FeatureStatsAnomaly;

		/** Output only. The objective for each stats. */
		objective?: GoogleCloudAiplatformV1beta1FeatureMonitoringStatsAnomalyObjective | null;
	}

	/** A list of historical SnapshotAnalysis or ImportFeaturesAnalysis stats requested by user, sorted by FeatureStatsAnomaly.start_time descending. */
	export interface GoogleCloudAiplatformV1beta1FeatureMonitoringStatsAnomalyFormProperties {

		/** Output only. The objective for each stats. */
		objective: FormControl<GoogleCloudAiplatformV1beta1FeatureMonitoringStatsAnomalyObjective | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1FeatureMonitoringStatsAnomalyFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1FeatureMonitoringStatsAnomalyFormProperties>({
			objective: new FormControl<GoogleCloudAiplatformV1beta1FeatureMonitoringStatsAnomalyObjective | null | undefined>(undefined),
		});

	}

	export enum GoogleCloudAiplatformV1beta1FeatureMonitoringStatsAnomalyObjective { OBJECTIVE_UNSPECIFIED = 0, IMPORT_FEATURE_ANALYSIS = 1, SNAPSHOT_ANALYSIS = 2 }

	export enum GoogleCloudAiplatformV1beta1FeatureValueType { VALUE_TYPE_UNSPECIFIED = 0, BOOL = 1, BOOL_ARRAY = 2, DOUBLE = 3, DOUBLE_ARRAY = 4, INT64 = 5, INT64_ARRAY = 6, STRING = 7, STRING_ARRAY = 8, BYTES = 9 }


	/** Response message for FeaturestoreService.BatchCreateFeatures. */
	export interface GoogleCloudAiplatformV1beta1BatchCreateFeaturesResponse {

		/** The Features created. */
		features?: Array<GoogleCloudAiplatformV1beta1Feature>;
	}

	/** Response message for FeaturestoreService.BatchCreateFeatures. */
	export interface GoogleCloudAiplatformV1beta1BatchCreateFeaturesResponseFormProperties {
	}
	export function CreateGoogleCloudAiplatformV1beta1BatchCreateFeaturesResponseFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1BatchCreateFeaturesResponseFormProperties>({
		});

	}


	/** Request message for TensorboardService.BatchCreateTensorboardRuns. */
	export interface GoogleCloudAiplatformV1beta1BatchCreateTensorboardRunsRequest {

		/** Required. The request message specifying the TensorboardRuns to create. A maximum of 1000 TensorboardRuns can be created in a batch. */
		requests?: Array<GoogleCloudAiplatformV1beta1CreateTensorboardRunRequest>;
	}

	/** Request message for TensorboardService.BatchCreateTensorboardRuns. */
	export interface GoogleCloudAiplatformV1beta1BatchCreateTensorboardRunsRequestFormProperties {
	}
	export function CreateGoogleCloudAiplatformV1beta1BatchCreateTensorboardRunsRequestFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1BatchCreateTensorboardRunsRequestFormProperties>({
		});

	}


	/** Request message for TensorboardService.CreateTensorboardRun. */
	export interface GoogleCloudAiplatformV1beta1CreateTensorboardRunRequest {

		/** Required. The resource name of the TensorboardExperiment to create the TensorboardRun in. Format: `projects/{project}/locations/{location}/tensorboards/{tensorboard}/experiments/{experiment}` */
		parent?: string | null;

		/** TensorboardRun maps to a specific execution of a training job with a given set of hyperparameter values, model definition, dataset, etc */
		tensorboardRun?: GoogleCloudAiplatformV1beta1TensorboardRun;

		/** Required. The ID to use for the Tensorboard run, which becomes the final component of the Tensorboard run's resource name. This value should be 1-128 characters, and valid characters are `/a-z-/`. */
		tensorboardRunId?: string | null;
	}

	/** Request message for TensorboardService.CreateTensorboardRun. */
	export interface GoogleCloudAiplatformV1beta1CreateTensorboardRunRequestFormProperties {

		/** Required. The resource name of the TensorboardExperiment to create the TensorboardRun in. Format: `projects/{project}/locations/{location}/tensorboards/{tensorboard}/experiments/{experiment}` */
		parent: FormControl<string | null | undefined>,

		/** Required. The ID to use for the Tensorboard run, which becomes the final component of the Tensorboard run's resource name. This value should be 1-128 characters, and valid characters are `/a-z-/`. */
		tensorboardRunId: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1CreateTensorboardRunRequestFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1CreateTensorboardRunRequestFormProperties>({
			parent: new FormControl<string | null | undefined>(undefined),
			tensorboardRunId: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** TensorboardRun maps to a specific execution of a training job with a given set of hyperparameter values, model definition, dataset, etc */
	export interface GoogleCloudAiplatformV1beta1TensorboardRun {

		/** Output only. Timestamp when this TensorboardRun was created. */
		createTime?: string | null;

		/** Description of this TensorboardRun. */
		description?: string | null;

		/** Required. User provided name of this TensorboardRun. This value must be unique among all TensorboardRuns belonging to the same parent TensorboardExperiment. */
		displayName?: string | null;

		/** Used to perform a consistent read-modify-write updates. If not set, a blind "overwrite" update happens. */
		etag?: string | null;

		/** The labels with user-defined metadata to organize your TensorboardRuns. This field will be used to filter and visualize Runs in the Tensorboard UI. For example, a Vertex AI training job can set a label aiplatform.googleapis.com/training_job_id=xxxxx to all the runs created within that job. An end user can set a label experiment_id=xxxxx for all the runs produced in a Jupyter notebook. These runs can be grouped by a label value and visualized together in the Tensorboard UI. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. No more than 64 user labels can be associated with one TensorboardRun (System labels are excluded). See https://goo.gl/xmQnxf for more information and examples of labels. System reserved label keys are prefixed with "aiplatform.googleapis.com/" and are immutable. */
		labels?: {[id: string]: string };

		/** Output only. Name of the TensorboardRun. Format: `projects/{project}/locations/{location}/tensorboards/{tensorboard}/experiments/{experiment}/runs/{run}` */
		name?: string | null;

		/** Output only. Timestamp when this TensorboardRun was last updated. */
		updateTime?: string | null;
	}

	/** TensorboardRun maps to a specific execution of a training job with a given set of hyperparameter values, model definition, dataset, etc */
	export interface GoogleCloudAiplatformV1beta1TensorboardRunFormProperties {

		/** Output only. Timestamp when this TensorboardRun was created. */
		createTime: FormControl<string | null | undefined>,

		/** Description of this TensorboardRun. */
		description: FormControl<string | null | undefined>,

		/** Required. User provided name of this TensorboardRun. This value must be unique among all TensorboardRuns belonging to the same parent TensorboardExperiment. */
		displayName: FormControl<string | null | undefined>,

		/** Used to perform a consistent read-modify-write updates. If not set, a blind "overwrite" update happens. */
		etag: FormControl<string | null | undefined>,

		/** The labels with user-defined metadata to organize your TensorboardRuns. This field will be used to filter and visualize Runs in the Tensorboard UI. For example, a Vertex AI training job can set a label aiplatform.googleapis.com/training_job_id=xxxxx to all the runs created within that job. An end user can set a label experiment_id=xxxxx for all the runs produced in a Jupyter notebook. These runs can be grouped by a label value and visualized together in the Tensorboard UI. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. No more than 64 user labels can be associated with one TensorboardRun (System labels are excluded). See https://goo.gl/xmQnxf for more information and examples of labels. System reserved label keys are prefixed with "aiplatform.googleapis.com/" and are immutable. */
		labels: FormControl<{[id: string]: string } | null | undefined>,

		/** Output only. Name of the TensorboardRun. Format: `projects/{project}/locations/{location}/tensorboards/{tensorboard}/experiments/{experiment}/runs/{run}` */
		name: FormControl<string | null | undefined>,

		/** Output only. Timestamp when this TensorboardRun was last updated. */
		updateTime: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1TensorboardRunFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1TensorboardRunFormProperties>({
			createTime: new FormControl<string | null | undefined>(undefined),
			description: new FormControl<string | null | undefined>(undefined),
			displayName: new FormControl<string | null | undefined>(undefined),
			etag: new FormControl<string | null | undefined>(undefined),
			labels: new FormControl<{[id: string]: string } | null | undefined>(undefined),
			name: new FormControl<string | null | undefined>(undefined),
			updateTime: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Response message for TensorboardService.BatchCreateTensorboardRuns. */
	export interface GoogleCloudAiplatformV1beta1BatchCreateTensorboardRunsResponse {

		/** The created TensorboardRuns. */
		tensorboardRuns?: Array<GoogleCloudAiplatformV1beta1TensorboardRun>;
	}

	/** Response message for TensorboardService.BatchCreateTensorboardRuns. */
	export interface GoogleCloudAiplatformV1beta1BatchCreateTensorboardRunsResponseFormProperties {
	}
	export function CreateGoogleCloudAiplatformV1beta1BatchCreateTensorboardRunsResponseFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1BatchCreateTensorboardRunsResponseFormProperties>({
		});

	}


	/** Request message for TensorboardService.BatchCreateTensorboardTimeSeries. */
	export interface GoogleCloudAiplatformV1beta1BatchCreateTensorboardTimeSeriesRequest {

		/** Required. The request message specifying the TensorboardTimeSeries to create. A maximum of 1000 TensorboardTimeSeries can be created in a batch. */
		requests?: Array<GoogleCloudAiplatformV1beta1CreateTensorboardTimeSeriesRequest>;
	}

	/** Request message for TensorboardService.BatchCreateTensorboardTimeSeries. */
	export interface GoogleCloudAiplatformV1beta1BatchCreateTensorboardTimeSeriesRequestFormProperties {
	}
	export function CreateGoogleCloudAiplatformV1beta1BatchCreateTensorboardTimeSeriesRequestFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1BatchCreateTensorboardTimeSeriesRequestFormProperties>({
		});

	}


	/** Request message for TensorboardService.CreateTensorboardTimeSeries. */
	export interface GoogleCloudAiplatformV1beta1CreateTensorboardTimeSeriesRequest {

		/** Required. The resource name of the TensorboardRun to create the TensorboardTimeSeries in. Format: `projects/{project}/locations/{location}/tensorboards/{tensorboard}/experiments/{experiment}/runs/{run}` */
		parent?: string | null;

		/** TensorboardTimeSeries maps to times series produced in training runs */
		tensorboardTimeSeries?: GoogleCloudAiplatformV1beta1TensorboardTimeSeries;

		/** Optional. The user specified unique ID to use for the TensorboardTimeSeries, which becomes the final component of the TensorboardTimeSeries's resource name. This value should match "a-z0-9{0, 127}" */
		tensorboardTimeSeriesId?: string | null;
	}

	/** Request message for TensorboardService.CreateTensorboardTimeSeries. */
	export interface GoogleCloudAiplatformV1beta1CreateTensorboardTimeSeriesRequestFormProperties {

		/** Required. The resource name of the TensorboardRun to create the TensorboardTimeSeries in. Format: `projects/{project}/locations/{location}/tensorboards/{tensorboard}/experiments/{experiment}/runs/{run}` */
		parent: FormControl<string | null | undefined>,

		/** Optional. The user specified unique ID to use for the TensorboardTimeSeries, which becomes the final component of the TensorboardTimeSeries's resource name. This value should match "a-z0-9{0, 127}" */
		tensorboardTimeSeriesId: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1CreateTensorboardTimeSeriesRequestFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1CreateTensorboardTimeSeriesRequestFormProperties>({
			parent: new FormControl<string | null | undefined>(undefined),
			tensorboardTimeSeriesId: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** TensorboardTimeSeries maps to times series produced in training runs */
	export interface GoogleCloudAiplatformV1beta1TensorboardTimeSeries {

		/** Output only. Timestamp when this TensorboardTimeSeries was created. */
		createTime?: string | null;

		/** Description of this TensorboardTimeSeries. */
		description?: string | null;

		/** Required. User provided name of this TensorboardTimeSeries. This value should be unique among all TensorboardTimeSeries resources belonging to the same TensorboardRun resource (parent resource). */
		displayName?: string | null;

		/** Used to perform a consistent read-modify-write updates. If not set, a blind "overwrite" update happens. */
		etag?: string | null;

		/** Describes metadata for a TensorboardTimeSeries. */
		metadata?: GoogleCloudAiplatformV1beta1TensorboardTimeSeriesMetadata;

		/** Output only. Name of the TensorboardTimeSeries. */
		name?: string | null;

		/** Data of the current plugin, with the size limited to 65KB. */
		pluginData?: string | null;

		/** Immutable. Name of the plugin this time series pertain to. Such as Scalar, Tensor, Blob */
		pluginName?: string | null;

		/** Output only. Timestamp when this TensorboardTimeSeries was last updated. */
		updateTime?: string | null;

		/** Required. Immutable. Type of TensorboardTimeSeries value. */
		valueType?: GoogleCloudAiplatformV1beta1TensorboardTimeSeriesValueType | null;
	}

	/** TensorboardTimeSeries maps to times series produced in training runs */
	export interface GoogleCloudAiplatformV1beta1TensorboardTimeSeriesFormProperties {

		/** Output only. Timestamp when this TensorboardTimeSeries was created. */
		createTime: FormControl<string | null | undefined>,

		/** Description of this TensorboardTimeSeries. */
		description: FormControl<string | null | undefined>,

		/** Required. User provided name of this TensorboardTimeSeries. This value should be unique among all TensorboardTimeSeries resources belonging to the same TensorboardRun resource (parent resource). */
		displayName: FormControl<string | null | undefined>,

		/** Used to perform a consistent read-modify-write updates. If not set, a blind "overwrite" update happens. */
		etag: FormControl<string | null | undefined>,

		/** Output only. Name of the TensorboardTimeSeries. */
		name: FormControl<string | null | undefined>,

		/** Data of the current plugin, with the size limited to 65KB. */
		pluginData: FormControl<string | null | undefined>,

		/** Immutable. Name of the plugin this time series pertain to. Such as Scalar, Tensor, Blob */
		pluginName: FormControl<string | null | undefined>,

		/** Output only. Timestamp when this TensorboardTimeSeries was last updated. */
		updateTime: FormControl<string | null | undefined>,

		/** Required. Immutable. Type of TensorboardTimeSeries value. */
		valueType: FormControl<GoogleCloudAiplatformV1beta1TensorboardTimeSeriesValueType | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1TensorboardTimeSeriesFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1TensorboardTimeSeriesFormProperties>({
			createTime: new FormControl<string | null | undefined>(undefined),
			description: new FormControl<string | null | undefined>(undefined),
			displayName: new FormControl<string | null | undefined>(undefined),
			etag: new FormControl<string | null | undefined>(undefined),
			name: new FormControl<string | null | undefined>(undefined),
			pluginData: new FormControl<string | null | undefined>(undefined),
			pluginName: new FormControl<string | null | undefined>(undefined),
			updateTime: new FormControl<string | null | undefined>(undefined),
			valueType: new FormControl<GoogleCloudAiplatformV1beta1TensorboardTimeSeriesValueType | null | undefined>(undefined),
		});

	}


	/** Describes metadata for a TensorboardTimeSeries. */
	export interface GoogleCloudAiplatformV1beta1TensorboardTimeSeriesMetadata {

		/** Output only. The largest blob sequence length (number of blobs) of all data points in this time series, if its ValueType is BLOB_SEQUENCE. */
		maxBlobSequenceLength?: string | null;

		/** Output only. Max step index of all data points within a TensorboardTimeSeries. */
		maxStep?: string | null;

		/** Output only. Max wall clock timestamp of all data points within a TensorboardTimeSeries. */
		maxWallTime?: string | null;
	}

	/** Describes metadata for a TensorboardTimeSeries. */
	export interface GoogleCloudAiplatformV1beta1TensorboardTimeSeriesMetadataFormProperties {

		/** Output only. The largest blob sequence length (number of blobs) of all data points in this time series, if its ValueType is BLOB_SEQUENCE. */
		maxBlobSequenceLength: FormControl<string | null | undefined>,

		/** Output only. Max step index of all data points within a TensorboardTimeSeries. */
		maxStep: FormControl<string | null | undefined>,

		/** Output only. Max wall clock timestamp of all data points within a TensorboardTimeSeries. */
		maxWallTime: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1TensorboardTimeSeriesMetadataFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1TensorboardTimeSeriesMetadataFormProperties>({
			maxBlobSequenceLength: new FormControl<string | null | undefined>(undefined),
			maxStep: new FormControl<string | null | undefined>(undefined),
			maxWallTime: new FormControl<string | null | undefined>(undefined),
		});

	}

	export enum GoogleCloudAiplatformV1beta1TensorboardTimeSeriesValueType { VALUE_TYPE_UNSPECIFIED = 0, SCALAR = 1, TENSOR = 2, BLOB_SEQUENCE = 3 }


	/** Response message for TensorboardService.BatchCreateTensorboardTimeSeries. */
	export interface GoogleCloudAiplatformV1beta1BatchCreateTensorboardTimeSeriesResponse {

		/** The created TensorboardTimeSeries. */
		tensorboardTimeSeries?: Array<GoogleCloudAiplatformV1beta1TensorboardTimeSeries>;
	}

	/** Response message for TensorboardService.BatchCreateTensorboardTimeSeries. */
	export interface GoogleCloudAiplatformV1beta1BatchCreateTensorboardTimeSeriesResponseFormProperties {
	}
	export function CreateGoogleCloudAiplatformV1beta1BatchCreateTensorboardTimeSeriesResponseFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1BatchCreateTensorboardTimeSeriesResponseFormProperties>({
		});

	}


	/** A description of resources that are used for performing batch operations, are dedicated to a Model, and need manual configuration. */
	export interface GoogleCloudAiplatformV1beta1BatchDedicatedResources {

		/** Specification of a single machine. */
		machineSpec?: GoogleCloudAiplatformV1beta1MachineSpec;

		/** Immutable. The maximum number of machine replicas the batch operation may be scaled to. The default value is 10. */
		maxReplicaCount?: number | null;

		/** Immutable. The number of machine replicas used at the start of the batch operation. If not set, Vertex AI decides starting number, not greater than max_replica_count */
		startingReplicaCount?: number | null;
	}

	/** A description of resources that are used for performing batch operations, are dedicated to a Model, and need manual configuration. */
	export interface GoogleCloudAiplatformV1beta1BatchDedicatedResourcesFormProperties {

		/** Immutable. The maximum number of machine replicas the batch operation may be scaled to. The default value is 10. */
		maxReplicaCount: FormControl<number | null | undefined>,

		/** Immutable. The number of machine replicas used at the start of the batch operation. If not set, Vertex AI decides starting number, not greater than max_replica_count */
		startingReplicaCount: FormControl<number | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1BatchDedicatedResourcesFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1BatchDedicatedResourcesFormProperties>({
			maxReplicaCount: new FormControl<number | null | undefined>(undefined),
			startingReplicaCount: new FormControl<number | null | undefined>(undefined),
		});

	}


	/** Specification of a single machine. */
	export interface GoogleCloudAiplatformV1beta1MachineSpec {

		/** The number of accelerators to attach to the machine. */
		acceleratorCount?: number | null;

		/** Immutable. The type of accelerator(s) that may be attached to the machine as per accelerator_count. */
		acceleratorType?: GoogleCloudAiplatformV1beta1MachineSpecAcceleratorType | null;

		/** Immutable. The type of the machine. See the [list of machine types supported for prediction](https://cloud.google.com/vertex-ai/docs/predictions/configure-compute#machine-types) See the [list of machine types supported for custom training](https://cloud.google.com/vertex-ai/docs/training/configure-compute#machine-types). For DeployedModel this field is optional, and the default value is `n1-standard-2`. For BatchPredictionJob or as part of WorkerPoolSpec this field is required. */
		machineType?: string | null;

		/** Immutable. The topology of the TPUs. Corresponds to the TPU topologies available from GKE. (Example: tpu_topology: "2x2x1"). */
		tpuTopology?: string | null;
	}

	/** Specification of a single machine. */
	export interface GoogleCloudAiplatformV1beta1MachineSpecFormProperties {

		/** The number of accelerators to attach to the machine. */
		acceleratorCount: FormControl<number | null | undefined>,

		/** Immutable. The type of accelerator(s) that may be attached to the machine as per accelerator_count. */
		acceleratorType: FormControl<GoogleCloudAiplatformV1beta1MachineSpecAcceleratorType | null | undefined>,

		/** Immutable. The type of the machine. See the [list of machine types supported for prediction](https://cloud.google.com/vertex-ai/docs/predictions/configure-compute#machine-types) See the [list of machine types supported for custom training](https://cloud.google.com/vertex-ai/docs/training/configure-compute#machine-types). For DeployedModel this field is optional, and the default value is `n1-standard-2`. For BatchPredictionJob or as part of WorkerPoolSpec this field is required. */
		machineType: FormControl<string | null | undefined>,

		/** Immutable. The topology of the TPUs. Corresponds to the TPU topologies available from GKE. (Example: tpu_topology: "2x2x1"). */
		tpuTopology: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1MachineSpecFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1MachineSpecFormProperties>({
			acceleratorCount: new FormControl<number | null | undefined>(undefined),
			acceleratorType: new FormControl<GoogleCloudAiplatformV1beta1MachineSpecAcceleratorType | null | undefined>(undefined),
			machineType: new FormControl<string | null | undefined>(undefined),
			tpuTopology: new FormControl<string | null | undefined>(undefined),
		});

	}

	export enum GoogleCloudAiplatformV1beta1MachineSpecAcceleratorType { ACCELERATOR_TYPE_UNSPECIFIED = 0, NVIDIA_TESLA_K80 = 1, NVIDIA_TESLA_P100 = 2, NVIDIA_TESLA_V100 = 3, NVIDIA_TESLA_P4 = 4, NVIDIA_TESLA_T4 = 5, NVIDIA_TESLA_A100 = 6, NVIDIA_A100_80GB = 7, NVIDIA_L4 = 8, NVIDIA_H100_80GB = 9, TPU_V2 = 10, TPU_V3 = 11, TPU_V4_POD = 12, TPU_V5_LITEPOD = 13 }


	/** Request message for PipelineService.BatchDeletePipelineJobs. */
	export interface GoogleCloudAiplatformV1beta1BatchDeletePipelineJobsRequest {

		/** Required. The names of the PipelineJobs to delete. A maximum of 32 PipelineJobs can be deleted in a batch. Format: `projects/{project}/locations/{location}/pipelineJobs/{pipelineJob}` */
		names?: Array<string>;
	}

	/** Request message for PipelineService.BatchDeletePipelineJobs. */
	export interface GoogleCloudAiplatformV1beta1BatchDeletePipelineJobsRequestFormProperties {
	}
	export function CreateGoogleCloudAiplatformV1beta1BatchDeletePipelineJobsRequestFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1BatchDeletePipelineJobsRequestFormProperties>({
		});

	}


	/** Response message for PipelineService.BatchDeletePipelineJobs. */
	export interface GoogleCloudAiplatformV1beta1BatchDeletePipelineJobsResponse {

		/** PipelineJobs deleted. */
		pipelineJobs?: Array<GoogleCloudAiplatformV1beta1PipelineJob>;
	}

	/** Response message for PipelineService.BatchDeletePipelineJobs. */
	export interface GoogleCloudAiplatformV1beta1BatchDeletePipelineJobsResponseFormProperties {
	}
	export function CreateGoogleCloudAiplatformV1beta1BatchDeletePipelineJobsResponseFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1BatchDeletePipelineJobsResponseFormProperties>({
		});

	}


	/** Request message for ModelService.BatchImportEvaluatedAnnotations */
	export interface GoogleCloudAiplatformV1beta1BatchImportEvaluatedAnnotationsRequest {

		/** Required. Evaluated annotations resource to be imported. */
		evaluatedAnnotations?: Array<GoogleCloudAiplatformV1beta1EvaluatedAnnotation>;
	}

	/** Request message for ModelService.BatchImportEvaluatedAnnotations */
	export interface GoogleCloudAiplatformV1beta1BatchImportEvaluatedAnnotationsRequestFormProperties {
	}
	export function CreateGoogleCloudAiplatformV1beta1BatchImportEvaluatedAnnotationsRequestFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1BatchImportEvaluatedAnnotationsRequestFormProperties>({
		});

	}


	/** True positive, false positive, or false negative. EvaluatedAnnotation is only available under ModelEvaluationSlice with slice of `annotationSpec` dimension. */
	export interface GoogleCloudAiplatformV1beta1EvaluatedAnnotation {

		/** Output only. The data item payload that the Model predicted this EvaluatedAnnotation on. */
		dataItemPayload?: any;

		/** Annotations of model error analysis results. */
		errorAnalysisAnnotations?: Array<GoogleCloudAiplatformV1beta1ErrorAnalysisAnnotation>;

		/** Output only. ID of the EvaluatedDataItemView under the same ancestor ModelEvaluation. The EvaluatedDataItemView consists of all ground truths and predictions on data_item_payload. */
		evaluatedDataItemViewId?: string | null;

		/** Explanations of predictions. Each element of the explanations indicates the explanation for one explanation Method. The attributions list in the EvaluatedAnnotationExplanation.explanation object corresponds to the predictions list. For example, the second element in the attributions list explains the second element in the predictions list. */
		explanations?: Array<GoogleCloudAiplatformV1beta1EvaluatedAnnotationExplanation>;

		/** Output only. The ground truth Annotations, i.e. the Annotations that exist in the test data the Model is evaluated on. For true positive, there is one and only one ground truth annotation, which matches the only prediction in predictions. For false positive, there are zero or more ground truth annotations that are similar to the only prediction in predictions, but not enough for a match. For false negative, there is one and only one ground truth annotation, which doesn't match any predictions created by the model. The schema of the ground truth is stored in ModelEvaluation.annotation_schema_uri */
		groundTruths?: Array<string>;

		/** Output only. The model predicted annotations. For true positive, there is one and only one prediction, which matches the only one ground truth annotation in ground_truths. For false positive, there is one and only one prediction, which doesn't match any ground truth annotation of the corresponding data_item_view_id. For false negative, there are zero or more predictions which are similar to the only ground truth annotation in ground_truths but not enough for a match. The schema of the prediction is stored in ModelEvaluation.annotation_schema_uri */
		predictions?: Array<string>;

		/** Output only. Type of the EvaluatedAnnotation. */
		type?: GoogleCloudAiplatformV1beta1EvaluatedAnnotationType | null;
	}

	/** True positive, false positive, or false negative. EvaluatedAnnotation is only available under ModelEvaluationSlice with slice of `annotationSpec` dimension. */
	export interface GoogleCloudAiplatformV1beta1EvaluatedAnnotationFormProperties {

		/** Output only. The data item payload that the Model predicted this EvaluatedAnnotation on. */
		dataItemPayload: FormControl<any | null | undefined>,

		/** Output only. ID of the EvaluatedDataItemView under the same ancestor ModelEvaluation. The EvaluatedDataItemView consists of all ground truths and predictions on data_item_payload. */
		evaluatedDataItemViewId: FormControl<string | null | undefined>,

		/** Output only. Type of the EvaluatedAnnotation. */
		type: FormControl<GoogleCloudAiplatformV1beta1EvaluatedAnnotationType | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1EvaluatedAnnotationFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1EvaluatedAnnotationFormProperties>({
			dataItemPayload: new FormControl<any | null | undefined>(undefined),
			evaluatedDataItemViewId: new FormControl<string | null | undefined>(undefined),
			type: new FormControl<GoogleCloudAiplatformV1beta1EvaluatedAnnotationType | null | undefined>(undefined),
		});

	}


	/** Model error analysis for each annotation. */
	export interface GoogleCloudAiplatformV1beta1ErrorAnalysisAnnotation {

		/** Attributed items for a given annotation, typically representing neighbors from the training sets constrained by the query type. */
		attributedItems?: Array<GoogleCloudAiplatformV1beta1ErrorAnalysisAnnotationAttributedItem>;

		/** The outlier score of this annotated item. Usually defined as the min of all distances from attributed items. */
		outlierScore?: number | null;

		/** The threshold used to determine if this annotation is an outlier or not. */
		outlierThreshold?: number | null;

		/** The query type used for finding the attributed items. */
		queryType?: GoogleCloudAiplatformV1beta1ErrorAnalysisAnnotationQueryType | null;
	}

	/** Model error analysis for each annotation. */
	export interface GoogleCloudAiplatformV1beta1ErrorAnalysisAnnotationFormProperties {

		/** The outlier score of this annotated item. Usually defined as the min of all distances from attributed items. */
		outlierScore: FormControl<number | null | undefined>,

		/** The threshold used to determine if this annotation is an outlier or not. */
		outlierThreshold: FormControl<number | null | undefined>,

		/** The query type used for finding the attributed items. */
		queryType: FormControl<GoogleCloudAiplatformV1beta1ErrorAnalysisAnnotationQueryType | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1ErrorAnalysisAnnotationFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1ErrorAnalysisAnnotationFormProperties>({
			outlierScore: new FormControl<number | null | undefined>(undefined),
			outlierThreshold: new FormControl<number | null | undefined>(undefined),
			queryType: new FormControl<GoogleCloudAiplatformV1beta1ErrorAnalysisAnnotationQueryType | null | undefined>(undefined),
		});

	}


	/** Attributed items for a given annotation, typically representing neighbors from the training sets constrained by the query type. */
	export interface GoogleCloudAiplatformV1beta1ErrorAnalysisAnnotationAttributedItem {

		/** The unique ID for each annotation. Used by FE to allocate the annotation in DB. */
		annotationResourceName?: string | null;

		/** The distance of this item to the annotation. */
		distance?: number | null;
	}

	/** Attributed items for a given annotation, typically representing neighbors from the training sets constrained by the query type. */
	export interface GoogleCloudAiplatformV1beta1ErrorAnalysisAnnotationAttributedItemFormProperties {

		/** The unique ID for each annotation. Used by FE to allocate the annotation in DB. */
		annotationResourceName: FormControl<string | null | undefined>,

		/** The distance of this item to the annotation. */
		distance: FormControl<number | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1ErrorAnalysisAnnotationAttributedItemFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1ErrorAnalysisAnnotationAttributedItemFormProperties>({
			annotationResourceName: new FormControl<string | null | undefined>(undefined),
			distance: new FormControl<number | null | undefined>(undefined),
		});

	}

	export enum GoogleCloudAiplatformV1beta1ErrorAnalysisAnnotationQueryType { QUERY_TYPE_UNSPECIFIED = 0, ALL_SIMILAR = 1, SAME_CLASS_SIMILAR = 2, SAME_CLASS_DISSIMILAR = 3 }


	/** Explanation result of the prediction produced by the Model. */
	export interface GoogleCloudAiplatformV1beta1EvaluatedAnnotationExplanation {

		/** Explanation of a prediction (provided in PredictResponse.predictions) produced by the Model on a given instance. */
		explanation?: GoogleCloudAiplatformV1beta1Explanation;

		/** Explanation type. For AutoML Image Classification models, possible values are: * `image-integrated-gradients` * `image-xrai` */
		explanationType?: string | null;
	}

	/** Explanation result of the prediction produced by the Model. */
	export interface GoogleCloudAiplatformV1beta1EvaluatedAnnotationExplanationFormProperties {

		/** Explanation type. For AutoML Image Classification models, possible values are: * `image-integrated-gradients` * `image-xrai` */
		explanationType: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1EvaluatedAnnotationExplanationFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1EvaluatedAnnotationExplanationFormProperties>({
			explanationType: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Explanation of a prediction (provided in PredictResponse.predictions) produced by the Model on a given instance. */
	export interface GoogleCloudAiplatformV1beta1Explanation {

		/** Output only. Feature attributions grouped by predicted outputs. For Models that predict only one output, such as regression Models that predict only one score, there is only one attibution that explains the predicted output. For Models that predict multiple outputs, such as multiclass Models that predict multiple classes, each element explains one specific item. Attribution.output_index can be used to identify which output this attribution is explaining. If users set ExplanationParameters.top_k, the attributions are sorted by instance_output_value in descending order. If ExplanationParameters.output_indices is specified, the attributions are stored by Attribution.output_index in the same order as they appear in the output_indices. */
		attributions?: Array<GoogleCloudAiplatformV1beta1Attribution>;

		/** Output only. List of the nearest neighbors for example-based explanations. For models deployed with the examples explanations feature enabled, the attributions field is empty and instead the neighbors field is populated. */
		neighbors?: Array<GoogleCloudAiplatformV1beta1Neighbor>;
	}

	/** Explanation of a prediction (provided in PredictResponse.predictions) produced by the Model on a given instance. */
	export interface GoogleCloudAiplatformV1beta1ExplanationFormProperties {
	}
	export function CreateGoogleCloudAiplatformV1beta1ExplanationFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1ExplanationFormProperties>({
		});

	}


	/** Neighbors for example-based explanations. */
	export interface GoogleCloudAiplatformV1beta1Neighbor {

		/** Output only. The neighbor distance. */
		neighborDistance?: number | null;

		/** Output only. The neighbor id. */
		neighborId?: string | null;
	}

	/** Neighbors for example-based explanations. */
	export interface GoogleCloudAiplatformV1beta1NeighborFormProperties {

		/** Output only. The neighbor distance. */
		neighborDistance: FormControl<number | null | undefined>,

		/** Output only. The neighbor id. */
		neighborId: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1NeighborFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1NeighborFormProperties>({
			neighborDistance: new FormControl<number | null | undefined>(undefined),
			neighborId: new FormControl<string | null | undefined>(undefined),
		});

	}

	export enum GoogleCloudAiplatformV1beta1EvaluatedAnnotationType { EVALUATED_ANNOTATION_TYPE_UNSPECIFIED = 0, TRUE_POSITIVE = 1, FALSE_POSITIVE = 2, FALSE_NEGATIVE = 3 }


	/** Response message for ModelService.BatchImportEvaluatedAnnotations */
	export interface GoogleCloudAiplatformV1beta1BatchImportEvaluatedAnnotationsResponse {

		/** Output only. Number of EvaluatedAnnotations imported. */
		importedEvaluatedAnnotationsCount?: number | null;
	}

	/** Response message for ModelService.BatchImportEvaluatedAnnotations */
	export interface GoogleCloudAiplatformV1beta1BatchImportEvaluatedAnnotationsResponseFormProperties {

		/** Output only. Number of EvaluatedAnnotations imported. */
		importedEvaluatedAnnotationsCount: FormControl<number | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1BatchImportEvaluatedAnnotationsResponseFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1BatchImportEvaluatedAnnotationsResponseFormProperties>({
			importedEvaluatedAnnotationsCount: new FormControl<number | null | undefined>(undefined),
		});

	}


	/** Request message for ModelService.BatchImportModelEvaluationSlices */
	export interface GoogleCloudAiplatformV1beta1BatchImportModelEvaluationSlicesRequest {

		/** Required. Model evaluation slice resource to be imported. */
		modelEvaluationSlices?: Array<GoogleCloudAiplatformV1beta1ModelEvaluationSlice>;
	}

	/** Request message for ModelService.BatchImportModelEvaluationSlices */
	export interface GoogleCloudAiplatformV1beta1BatchImportModelEvaluationSlicesRequestFormProperties {
	}
	export function CreateGoogleCloudAiplatformV1beta1BatchImportModelEvaluationSlicesRequestFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1BatchImportModelEvaluationSlicesRequestFormProperties>({
		});

	}


	/** A collection of metrics calculated by comparing Model's predictions on a slice of the test data against ground truth annotations. */
	export interface GoogleCloudAiplatformV1beta1ModelEvaluationSlice {

		/** Output only. Timestamp when this ModelEvaluationSlice was created. */
		createTime?: string | null;

		/** Output only. Sliced evaluation metrics of the Model. The schema of the metrics is stored in metrics_schema_uri */
		metrics?: any;

		/** Output only. Points to a YAML file stored on Google Cloud Storage describing the metrics of this ModelEvaluationSlice. The schema is defined as an OpenAPI 3.0.2 [Schema Object](https://github.com/OAI/OpenAPI-Specification/blob/main/versions/3.0.2.md#schemaObject). */
		metricsSchemaUri?: string | null;

		/** Aggregated explanation metrics for a Model over a set of instances. */
		modelExplanation?: GoogleCloudAiplatformV1beta1ModelExplanation;

		/** Output only. The resource name of the ModelEvaluationSlice. */
		name?: string | null;

		/** Definition of a slice. */
		slice?: GoogleCloudAiplatformV1beta1ModelEvaluationSliceSlice;
	}

	/** A collection of metrics calculated by comparing Model's predictions on a slice of the test data against ground truth annotations. */
	export interface GoogleCloudAiplatformV1beta1ModelEvaluationSliceFormProperties {

		/** Output only. Timestamp when this ModelEvaluationSlice was created. */
		createTime: FormControl<string | null | undefined>,

		/** Output only. Sliced evaluation metrics of the Model. The schema of the metrics is stored in metrics_schema_uri */
		metrics: FormControl<any | null | undefined>,

		/** Output only. Points to a YAML file stored on Google Cloud Storage describing the metrics of this ModelEvaluationSlice. The schema is defined as an OpenAPI 3.0.2 [Schema Object](https://github.com/OAI/OpenAPI-Specification/blob/main/versions/3.0.2.md#schemaObject). */
		metricsSchemaUri: FormControl<string | null | undefined>,

		/** Output only. The resource name of the ModelEvaluationSlice. */
		name: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1ModelEvaluationSliceFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1ModelEvaluationSliceFormProperties>({
			createTime: new FormControl<string | null | undefined>(undefined),
			metrics: new FormControl<any | null | undefined>(undefined),
			metricsSchemaUri: new FormControl<string | null | undefined>(undefined),
			name: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Aggregated explanation metrics for a Model over a set of instances. */
	export interface GoogleCloudAiplatformV1beta1ModelExplanation {

		/** Output only. Aggregated attributions explaining the Model's prediction outputs over the set of instances. The attributions are grouped by outputs. For Models that predict only one output, such as regression Models that predict only one score, there is only one attibution that explains the predicted output. For Models that predict multiple outputs, such as multiclass Models that predict multiple classes, each element explains one specific item. Attribution.output_index can be used to identify which output this attribution is explaining. The baselineOutputValue, instanceOutputValue and featureAttributions fields are averaged over the test data. NOTE: Currently AutoML tabular classification Models produce only one attribution, which averages attributions over all the classes it predicts. Attribution.approximation_error is not populated. */
		meanAttributions?: Array<GoogleCloudAiplatformV1beta1Attribution>;
	}

	/** Aggregated explanation metrics for a Model over a set of instances. */
	export interface GoogleCloudAiplatformV1beta1ModelExplanationFormProperties {
	}
	export function CreateGoogleCloudAiplatformV1beta1ModelExplanationFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1ModelExplanationFormProperties>({
		});

	}


	/** Definition of a slice. */
	export interface GoogleCloudAiplatformV1beta1ModelEvaluationSliceSlice {

		/** Output only. The dimension of the slice. Well-known dimensions are: * `annotationSpec`: This slice is on the test data that has either ground truth or prediction with AnnotationSpec.display_name equals to value. * `slice`: This slice is a user customized slice defined by its SliceSpec. */
		dimension?: string | null;

		/** Specification for how the data should be sliced. */
		sliceSpec?: GoogleCloudAiplatformV1beta1ModelEvaluationSliceSliceSliceSpec;

		/** Output only. The value of the dimension in this slice. */
		value?: string | null;
	}

	/** Definition of a slice. */
	export interface GoogleCloudAiplatformV1beta1ModelEvaluationSliceSliceFormProperties {

		/** Output only. The dimension of the slice. Well-known dimensions are: * `annotationSpec`: This slice is on the test data that has either ground truth or prediction with AnnotationSpec.display_name equals to value. * `slice`: This slice is a user customized slice defined by its SliceSpec. */
		dimension: FormControl<string | null | undefined>,

		/** Output only. The value of the dimension in this slice. */
		value: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1ModelEvaluationSliceSliceFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1ModelEvaluationSliceSliceFormProperties>({
			dimension: new FormControl<string | null | undefined>(undefined),
			value: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Specification for how the data should be sliced. */
	export interface GoogleCloudAiplatformV1beta1ModelEvaluationSliceSliceSliceSpec {

		/** Mapping configuration for this SliceSpec. The key is the name of the feature. By default, the key will be prefixed by "instance" as a dictionary prefix for Vertex Batch Predictions output format. */
		configs?: {[id: string]: GoogleCloudAiplatformV1beta1ModelEvaluationSliceSliceSliceSpecSliceConfig };
	}

	/** Specification for how the data should be sliced. */
	export interface GoogleCloudAiplatformV1beta1ModelEvaluationSliceSliceSliceSpecFormProperties {

		/** Mapping configuration for this SliceSpec. The key is the name of the feature. By default, the key will be prefixed by "instance" as a dictionary prefix for Vertex Batch Predictions output format. */
		configs: FormControl<{[id: string]: GoogleCloudAiplatformV1beta1ModelEvaluationSliceSliceSliceSpecSliceConfig } | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1ModelEvaluationSliceSliceSliceSpecFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1ModelEvaluationSliceSliceSliceSpecFormProperties>({
			configs: new FormControl<{[id: string]: GoogleCloudAiplatformV1beta1ModelEvaluationSliceSliceSliceSpecSliceConfig } | null | undefined>(undefined),
		});

	}


	/** Specification message containing the config for this SliceSpec. When `kind` is selected as `value` and/or `range`, only a single slice will be computed. When `all_values` is present, a separate slice will be computed for each possible label/value for the corresponding key in `config`. Examples, with feature zip_code with values 12345, 23334, 88888 and feature country with values "US", "Canada", "Mexico" in the dataset: Example 1: { "zip_code": { "value": { "float_value": 12345.0 } } } A single slice for any data with zip_code 12345 in the dataset. Example 2: { "zip_code": { "range": { "low": 12345, "high": 20000 } } } A single slice containing data where the zip_codes between 12345 and 20000 For this example, data with the zip_code of 12345 will be in this slice. Example 3: { "zip_code": { "range": { "low": 10000, "high": 20000 } }, "country": { "value": { "string_value": "US" } } } A single slice containing data where the zip_codes between 10000 and 20000 has the country "US". For this example, data with the zip_code of 12345 and country "US" will be in this slice. Example 4: { "country": {"all_values": { "value": true } } } Three slices are computed, one for each unique country in the dataset. Example 5: { "country": { "all_values": { "value": true } }, "zip_code": { "value": { "float_value": 12345.0 } } } Three slices are computed, one for each unique country in the dataset where the zip_code is also 12345. For this example, data with zip_code 12345 and country "US" will be in one slice, zip_code 12345 and country "Canada" in another slice, and zip_code 12345 and country "Mexico" in another slice, totaling 3 slices. */
	export interface GoogleCloudAiplatformV1beta1ModelEvaluationSliceSliceSliceSpecSliceConfig {

		/** If all_values is set to true, then all possible labels of the keyed feature will have another slice computed. Example: `{"all_values":{"value":true}}` */
		allValues?: boolean | null;

		/** A range of values for slice(s). `low` is inclusive, `high` is exclusive. */
		range?: GoogleCloudAiplatformV1beta1ModelEvaluationSliceSliceSliceSpecRange;

		/** Single value that supports strings and floats. */
		value?: GoogleCloudAiplatformV1beta1ModelEvaluationSliceSliceSliceSpecValue;
	}

	/** Specification message containing the config for this SliceSpec. When `kind` is selected as `value` and/or `range`, only a single slice will be computed. When `all_values` is present, a separate slice will be computed for each possible label/value for the corresponding key in `config`. Examples, with feature zip_code with values 12345, 23334, 88888 and feature country with values "US", "Canada", "Mexico" in the dataset: Example 1: { "zip_code": { "value": { "float_value": 12345.0 } } } A single slice for any data with zip_code 12345 in the dataset. Example 2: { "zip_code": { "range": { "low": 12345, "high": 20000 } } } A single slice containing data where the zip_codes between 12345 and 20000 For this example, data with the zip_code of 12345 will be in this slice. Example 3: { "zip_code": { "range": { "low": 10000, "high": 20000 } }, "country": { "value": { "string_value": "US" } } } A single slice containing data where the zip_codes between 10000 and 20000 has the country "US". For this example, data with the zip_code of 12345 and country "US" will be in this slice. Example 4: { "country": {"all_values": { "value": true } } } Three slices are computed, one for each unique country in the dataset. Example 5: { "country": { "all_values": { "value": true } }, "zip_code": { "value": { "float_value": 12345.0 } } } Three slices are computed, one for each unique country in the dataset where the zip_code is also 12345. For this example, data with zip_code 12345 and country "US" will be in one slice, zip_code 12345 and country "Canada" in another slice, and zip_code 12345 and country "Mexico" in another slice, totaling 3 slices. */
	export interface GoogleCloudAiplatformV1beta1ModelEvaluationSliceSliceSliceSpecSliceConfigFormProperties {

		/** If all_values is set to true, then all possible labels of the keyed feature will have another slice computed. Example: `{"all_values":{"value":true}}` */
		allValues: FormControl<boolean | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1ModelEvaluationSliceSliceSliceSpecSliceConfigFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1ModelEvaluationSliceSliceSliceSpecSliceConfigFormProperties>({
			allValues: new FormControl<boolean | null | undefined>(undefined),
		});

	}


	/** A range of values for slice(s). `low` is inclusive, `high` is exclusive. */
	export interface GoogleCloudAiplatformV1beta1ModelEvaluationSliceSliceSliceSpecRange {

		/** Exclusive high value for the range. */
		high?: number | null;

		/** Inclusive low value for the range. */
		low?: number | null;
	}

	/** A range of values for slice(s). `low` is inclusive, `high` is exclusive. */
	export interface GoogleCloudAiplatformV1beta1ModelEvaluationSliceSliceSliceSpecRangeFormProperties {

		/** Exclusive high value for the range. */
		high: FormControl<number | null | undefined>,

		/** Inclusive low value for the range. */
		low: FormControl<number | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1ModelEvaluationSliceSliceSliceSpecRangeFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1ModelEvaluationSliceSliceSliceSpecRangeFormProperties>({
			high: new FormControl<number | null | undefined>(undefined),
			low: new FormControl<number | null | undefined>(undefined),
		});

	}


	/** Single value that supports strings and floats. */
	export interface GoogleCloudAiplatformV1beta1ModelEvaluationSliceSliceSliceSpecValue {

		/** Float type. */
		floatValue?: number | null;

		/** String type. */
		stringValue?: string | null;
	}

	/** Single value that supports strings and floats. */
	export interface GoogleCloudAiplatformV1beta1ModelEvaluationSliceSliceSliceSpecValueFormProperties {

		/** Float type. */
		floatValue: FormControl<number | null | undefined>,

		/** String type. */
		stringValue: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1ModelEvaluationSliceSliceSliceSpecValueFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1ModelEvaluationSliceSliceSliceSpecValueFormProperties>({
			floatValue: new FormControl<number | null | undefined>(undefined),
			stringValue: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Response message for ModelService.BatchImportModelEvaluationSlices */
	export interface GoogleCloudAiplatformV1beta1BatchImportModelEvaluationSlicesResponse {

		/** Output only. List of imported ModelEvaluationSlice.name. */
		importedModelEvaluationSlices?: Array<string>;
	}

	/** Response message for ModelService.BatchImportModelEvaluationSlices */
	export interface GoogleCloudAiplatformV1beta1BatchImportModelEvaluationSlicesResponseFormProperties {
	}
	export function CreateGoogleCloudAiplatformV1beta1BatchImportModelEvaluationSlicesResponseFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1BatchImportModelEvaluationSlicesResponseFormProperties>({
		});

	}


	/** Runtime operation information for MigrationService.BatchMigrateResources. */
	export interface GoogleCloudAiplatformV1beta1BatchMigrateResourcesOperationMetadata {

		/** Generic Metadata shared by all operations. */
		genericMetadata?: GoogleCloudAiplatformV1beta1GenericOperationMetadata;

		/** Partial results that reflect the latest migration operation progress. */
		partialResults?: Array<GoogleCloudAiplatformV1beta1BatchMigrateResourcesOperationMetadataPartialResult>;
	}

	/** Runtime operation information for MigrationService.BatchMigrateResources. */
	export interface GoogleCloudAiplatformV1beta1BatchMigrateResourcesOperationMetadataFormProperties {
	}
	export function CreateGoogleCloudAiplatformV1beta1BatchMigrateResourcesOperationMetadataFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1BatchMigrateResourcesOperationMetadataFormProperties>({
		});

	}


	/** Represents a partial result in batch migration operation for one MigrateResourceRequest. */
	export interface GoogleCloudAiplatformV1beta1BatchMigrateResourcesOperationMetadataPartialResult {

		/** Migrated dataset resource name. */
		dataset?: string | null;

		/** The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors). */
		error?: GoogleRpcStatus;

		/** Migrated model resource name. */
		model?: string | null;

		/** Config of migrating one resource from automl.googleapis.com, datalabeling.googleapis.com and ml.googleapis.com to Vertex AI. */
		request?: GoogleCloudAiplatformV1beta1MigrateResourceRequest;
	}

	/** Represents a partial result in batch migration operation for one MigrateResourceRequest. */
	export interface GoogleCloudAiplatformV1beta1BatchMigrateResourcesOperationMetadataPartialResultFormProperties {

		/** Migrated dataset resource name. */
		dataset: FormControl<string | null | undefined>,

		/** Migrated model resource name. */
		model: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1BatchMigrateResourcesOperationMetadataPartialResultFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1BatchMigrateResourcesOperationMetadataPartialResultFormProperties>({
			dataset: new FormControl<string | null | undefined>(undefined),
			model: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Config of migrating one resource from automl.googleapis.com, datalabeling.googleapis.com and ml.googleapis.com to Vertex AI. */
	export interface GoogleCloudAiplatformV1beta1MigrateResourceRequest {

		/** Config for migrating Dataset in automl.googleapis.com to Vertex AI's Dataset. */
		migrateAutomlDatasetConfig?: GoogleCloudAiplatformV1beta1MigrateResourceRequestMigrateAutomlDatasetConfig;

		/** Config for migrating Model in automl.googleapis.com to Vertex AI's Model. */
		migrateAutomlModelConfig?: GoogleCloudAiplatformV1beta1MigrateResourceRequestMigrateAutomlModelConfig;

		/** Config for migrating Dataset in datalabeling.googleapis.com to Vertex AI's Dataset. */
		migrateDataLabelingDatasetConfig?: GoogleCloudAiplatformV1beta1MigrateResourceRequestMigrateDataLabelingDatasetConfig;

		/** Config for migrating version in ml.googleapis.com to Vertex AI's Model. */
		migrateMlEngineModelVersionConfig?: GoogleCloudAiplatformV1beta1MigrateResourceRequestMigrateMlEngineModelVersionConfig;
	}

	/** Config of migrating one resource from automl.googleapis.com, datalabeling.googleapis.com and ml.googleapis.com to Vertex AI. */
	export interface GoogleCloudAiplatformV1beta1MigrateResourceRequestFormProperties {
	}
	export function CreateGoogleCloudAiplatformV1beta1MigrateResourceRequestFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1MigrateResourceRequestFormProperties>({
		});

	}


	/** Config for migrating Dataset in automl.googleapis.com to Vertex AI's Dataset. */
	export interface GoogleCloudAiplatformV1beta1MigrateResourceRequestMigrateAutomlDatasetConfig {

		/** Required. Full resource name of automl Dataset. Format: `projects/{project}/locations/{location}/datasets/{dataset}`. */
		dataset?: string | null;

		/** Required. Display name of the Dataset in Vertex AI. System will pick a display name if unspecified. */
		datasetDisplayName?: string | null;
	}

	/** Config for migrating Dataset in automl.googleapis.com to Vertex AI's Dataset. */
	export interface GoogleCloudAiplatformV1beta1MigrateResourceRequestMigrateAutomlDatasetConfigFormProperties {

		/** Required. Full resource name of automl Dataset. Format: `projects/{project}/locations/{location}/datasets/{dataset}`. */
		dataset: FormControl<string | null | undefined>,

		/** Required. Display name of the Dataset in Vertex AI. System will pick a display name if unspecified. */
		datasetDisplayName: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1MigrateResourceRequestMigrateAutomlDatasetConfigFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1MigrateResourceRequestMigrateAutomlDatasetConfigFormProperties>({
			dataset: new FormControl<string | null | undefined>(undefined),
			datasetDisplayName: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Config for migrating Model in automl.googleapis.com to Vertex AI's Model. */
	export interface GoogleCloudAiplatformV1beta1MigrateResourceRequestMigrateAutomlModelConfig {

		/** Required. Full resource name of automl Model. Format: `projects/{project}/locations/{location}/models/{model}`. */
		model?: string | null;

		/** Optional. Display name of the model in Vertex AI. System will pick a display name if unspecified. */
		modelDisplayName?: string | null;
	}

	/** Config for migrating Model in automl.googleapis.com to Vertex AI's Model. */
	export interface GoogleCloudAiplatformV1beta1MigrateResourceRequestMigrateAutomlModelConfigFormProperties {

		/** Required. Full resource name of automl Model. Format: `projects/{project}/locations/{location}/models/{model}`. */
		model: FormControl<string | null | undefined>,

		/** Optional. Display name of the model in Vertex AI. System will pick a display name if unspecified. */
		modelDisplayName: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1MigrateResourceRequestMigrateAutomlModelConfigFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1MigrateResourceRequestMigrateAutomlModelConfigFormProperties>({
			model: new FormControl<string | null | undefined>(undefined),
			modelDisplayName: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Config for migrating Dataset in datalabeling.googleapis.com to Vertex AI's Dataset. */
	export interface GoogleCloudAiplatformV1beta1MigrateResourceRequestMigrateDataLabelingDatasetConfig {

		/** Required. Full resource name of data labeling Dataset. Format: `projects/{project}/datasets/{dataset}`. */
		dataset?: string | null;

		/** Optional. Display name of the Dataset in Vertex AI. System will pick a display name if unspecified. */
		datasetDisplayName?: string | null;

		/** Optional. Configs for migrating AnnotatedDataset in datalabeling.googleapis.com to Vertex AI's SavedQuery. The specified AnnotatedDatasets have to belong to the datalabeling Dataset. */
		migrateDataLabelingAnnotatedDatasetConfigs?: Array<GoogleCloudAiplatformV1beta1MigrateResourceRequestMigrateDataLabelingDatasetConfigMigrateDataLabelingAnnotatedDatasetConfig>;
	}

	/** Config for migrating Dataset in datalabeling.googleapis.com to Vertex AI's Dataset. */
	export interface GoogleCloudAiplatformV1beta1MigrateResourceRequestMigrateDataLabelingDatasetConfigFormProperties {

		/** Required. Full resource name of data labeling Dataset. Format: `projects/{project}/datasets/{dataset}`. */
		dataset: FormControl<string | null | undefined>,

		/** Optional. Display name of the Dataset in Vertex AI. System will pick a display name if unspecified. */
		datasetDisplayName: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1MigrateResourceRequestMigrateDataLabelingDatasetConfigFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1MigrateResourceRequestMigrateDataLabelingDatasetConfigFormProperties>({
			dataset: new FormControl<string | null | undefined>(undefined),
			datasetDisplayName: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Config for migrating AnnotatedDataset in datalabeling.googleapis.com to Vertex AI's SavedQuery. */
	export interface GoogleCloudAiplatformV1beta1MigrateResourceRequestMigrateDataLabelingDatasetConfigMigrateDataLabelingAnnotatedDatasetConfig {

		/** Required. Full resource name of data labeling AnnotatedDataset. Format: `projects/{project}/datasets/{dataset}/annotatedDatasets/{annotated_dataset}`. */
		annotatedDataset?: string | null;
	}

	/** Config for migrating AnnotatedDataset in datalabeling.googleapis.com to Vertex AI's SavedQuery. */
	export interface GoogleCloudAiplatformV1beta1MigrateResourceRequestMigrateDataLabelingDatasetConfigMigrateDataLabelingAnnotatedDatasetConfigFormProperties {

		/** Required. Full resource name of data labeling AnnotatedDataset. Format: `projects/{project}/datasets/{dataset}/annotatedDatasets/{annotated_dataset}`. */
		annotatedDataset: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1MigrateResourceRequestMigrateDataLabelingDatasetConfigMigrateDataLabelingAnnotatedDatasetConfigFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1MigrateResourceRequestMigrateDataLabelingDatasetConfigMigrateDataLabelingAnnotatedDatasetConfigFormProperties>({
			annotatedDataset: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Config for migrating version in ml.googleapis.com to Vertex AI's Model. */
	export interface GoogleCloudAiplatformV1beta1MigrateResourceRequestMigrateMlEngineModelVersionConfig {

		/** Required. The ml.googleapis.com endpoint that this model version should be migrated from. Example values: * ml.googleapis.com * us-centrall-ml.googleapis.com * europe-west4-ml.googleapis.com * asia-east1-ml.googleapis.com */
		endpoint?: string | null;

		/** Required. Display name of the model in Vertex AI. System will pick a display name if unspecified. */
		modelDisplayName?: string | null;

		/** Required. Full resource name of ml engine model version. Format: `projects/{project}/models/{model}/versions/{version}`. */
		modelVersion?: string | null;
	}

	/** Config for migrating version in ml.googleapis.com to Vertex AI's Model. */
	export interface GoogleCloudAiplatformV1beta1MigrateResourceRequestMigrateMlEngineModelVersionConfigFormProperties {

		/** Required. The ml.googleapis.com endpoint that this model version should be migrated from. Example values: * ml.googleapis.com * us-centrall-ml.googleapis.com * europe-west4-ml.googleapis.com * asia-east1-ml.googleapis.com */
		endpoint: FormControl<string | null | undefined>,

		/** Required. Display name of the model in Vertex AI. System will pick a display name if unspecified. */
		modelDisplayName: FormControl<string | null | undefined>,

		/** Required. Full resource name of ml engine model version. Format: `projects/{project}/models/{model}/versions/{version}`. */
		modelVersion: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1MigrateResourceRequestMigrateMlEngineModelVersionConfigFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1MigrateResourceRequestMigrateMlEngineModelVersionConfigFormProperties>({
			endpoint: new FormControl<string | null | undefined>(undefined),
			modelDisplayName: new FormControl<string | null | undefined>(undefined),
			modelVersion: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Request message for MigrationService.BatchMigrateResources. */
	export interface GoogleCloudAiplatformV1beta1BatchMigrateResourcesRequest {

		/** Required. The request messages specifying the resources to migrate. They must be in the same location as the destination. Up to 50 resources can be migrated in one batch. */
		migrateResourceRequests?: Array<GoogleCloudAiplatformV1beta1MigrateResourceRequest>;
	}

	/** Request message for MigrationService.BatchMigrateResources. */
	export interface GoogleCloudAiplatformV1beta1BatchMigrateResourcesRequestFormProperties {
	}
	export function CreateGoogleCloudAiplatformV1beta1BatchMigrateResourcesRequestFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1BatchMigrateResourcesRequestFormProperties>({
		});

	}


	/** Response message for MigrationService.BatchMigrateResources. */
	export interface GoogleCloudAiplatformV1beta1BatchMigrateResourcesResponse {

		/** Successfully migrated resources. */
		migrateResourceResponses?: Array<GoogleCloudAiplatformV1beta1MigrateResourceResponse>;
	}

	/** Response message for MigrationService.BatchMigrateResources. */
	export interface GoogleCloudAiplatformV1beta1BatchMigrateResourcesResponseFormProperties {
	}
	export function CreateGoogleCloudAiplatformV1beta1BatchMigrateResourcesResponseFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1BatchMigrateResourcesResponseFormProperties>({
		});

	}


	/** Describes a successfully migrated resource. */
	export interface GoogleCloudAiplatformV1beta1MigrateResourceResponse {

		/** Migrated Dataset's resource name. */
		dataset?: string | null;

		/** Represents one resource that exists in automl.googleapis.com, datalabeling.googleapis.com or ml.googleapis.com. */
		migratableResource?: GoogleCloudAiplatformV1beta1MigratableResource;

		/** Migrated Model's resource name. */
		model?: string | null;
	}

	/** Describes a successfully migrated resource. */
	export interface GoogleCloudAiplatformV1beta1MigrateResourceResponseFormProperties {

		/** Migrated Dataset's resource name. */
		dataset: FormControl<string | null | undefined>,

		/** Migrated Model's resource name. */
		model: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1MigrateResourceResponseFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1MigrateResourceResponseFormProperties>({
			dataset: new FormControl<string | null | undefined>(undefined),
			model: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Represents one resource that exists in automl.googleapis.com, datalabeling.googleapis.com or ml.googleapis.com. */
	export interface GoogleCloudAiplatformV1beta1MigratableResource {

		/** Represents one Dataset in automl.googleapis.com. */
		automlDataset?: GoogleCloudAiplatformV1beta1MigratableResourceAutomlDataset;

		/** Represents one Model in automl.googleapis.com. */
		automlModel?: GoogleCloudAiplatformV1beta1MigratableResourceAutomlModel;

		/** Represents one Dataset in datalabeling.googleapis.com. */
		dataLabelingDataset?: GoogleCloudAiplatformV1beta1MigratableResourceDataLabelingDataset;

		/** Output only. Timestamp when the last migration attempt on this MigratableResource started. Will not be set if there's no migration attempt on this MigratableResource. */
		lastMigrateTime?: string | null;

		/** Output only. Timestamp when this MigratableResource was last updated. */
		lastUpdateTime?: string | null;

		/** Represents one model Version in ml.googleapis.com. */
		mlEngineModelVersion?: GoogleCloudAiplatformV1beta1MigratableResourceMlEngineModelVersion;
	}

	/** Represents one resource that exists in automl.googleapis.com, datalabeling.googleapis.com or ml.googleapis.com. */
	export interface GoogleCloudAiplatformV1beta1MigratableResourceFormProperties {

		/** Output only. Timestamp when the last migration attempt on this MigratableResource started. Will not be set if there's no migration attempt on this MigratableResource. */
		lastMigrateTime: FormControl<string | null | undefined>,

		/** Output only. Timestamp when this MigratableResource was last updated. */
		lastUpdateTime: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1MigratableResourceFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1MigratableResourceFormProperties>({
			lastMigrateTime: new FormControl<string | null | undefined>(undefined),
			lastUpdateTime: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Represents one Dataset in automl.googleapis.com. */
	export interface GoogleCloudAiplatformV1beta1MigratableResourceAutomlDataset {

		/** Full resource name of automl Dataset. Format: `projects/{project}/locations/{location}/datasets/{dataset}`. */
		dataset?: string | null;

		/** The Dataset's display name in automl.googleapis.com. */
		datasetDisplayName?: string | null;
	}

	/** Represents one Dataset in automl.googleapis.com. */
	export interface GoogleCloudAiplatformV1beta1MigratableResourceAutomlDatasetFormProperties {

		/** Full resource name of automl Dataset. Format: `projects/{project}/locations/{location}/datasets/{dataset}`. */
		dataset: FormControl<string | null | undefined>,

		/** The Dataset's display name in automl.googleapis.com. */
		datasetDisplayName: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1MigratableResourceAutomlDatasetFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1MigratableResourceAutomlDatasetFormProperties>({
			dataset: new FormControl<string | null | undefined>(undefined),
			datasetDisplayName: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Represents one Model in automl.googleapis.com. */
	export interface GoogleCloudAiplatformV1beta1MigratableResourceAutomlModel {

		/** Full resource name of automl Model. Format: `projects/{project}/locations/{location}/models/{model}`. */
		model?: string | null;

		/** The Model's display name in automl.googleapis.com. */
		modelDisplayName?: string | null;
	}

	/** Represents one Model in automl.googleapis.com. */
	export interface GoogleCloudAiplatformV1beta1MigratableResourceAutomlModelFormProperties {

		/** Full resource name of automl Model. Format: `projects/{project}/locations/{location}/models/{model}`. */
		model: FormControl<string | null | undefined>,

		/** The Model's display name in automl.googleapis.com. */
		modelDisplayName: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1MigratableResourceAutomlModelFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1MigratableResourceAutomlModelFormProperties>({
			model: new FormControl<string | null | undefined>(undefined),
			modelDisplayName: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Represents one Dataset in datalabeling.googleapis.com. */
	export interface GoogleCloudAiplatformV1beta1MigratableResourceDataLabelingDataset {

		/** The migratable AnnotatedDataset in datalabeling.googleapis.com belongs to the data labeling Dataset. */
		dataLabelingAnnotatedDatasets?: Array<GoogleCloudAiplatformV1beta1MigratableResourceDataLabelingDatasetDataLabelingAnnotatedDataset>;

		/** Full resource name of data labeling Dataset. Format: `projects/{project}/datasets/{dataset}`. */
		dataset?: string | null;

		/** The Dataset's display name in datalabeling.googleapis.com. */
		datasetDisplayName?: string | null;
	}

	/** Represents one Dataset in datalabeling.googleapis.com. */
	export interface GoogleCloudAiplatformV1beta1MigratableResourceDataLabelingDatasetFormProperties {

		/** Full resource name of data labeling Dataset. Format: `projects/{project}/datasets/{dataset}`. */
		dataset: FormControl<string | null | undefined>,

		/** The Dataset's display name in datalabeling.googleapis.com. */
		datasetDisplayName: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1MigratableResourceDataLabelingDatasetFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1MigratableResourceDataLabelingDatasetFormProperties>({
			dataset: new FormControl<string | null | undefined>(undefined),
			datasetDisplayName: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Represents one AnnotatedDataset in datalabeling.googleapis.com. */
	export interface GoogleCloudAiplatformV1beta1MigratableResourceDataLabelingDatasetDataLabelingAnnotatedDataset {

		/** Full resource name of data labeling AnnotatedDataset. Format: `projects/{project}/datasets/{dataset}/annotatedDatasets/{annotated_dataset}`. */
		annotatedDataset?: string | null;

		/** The AnnotatedDataset's display name in datalabeling.googleapis.com. */
		annotatedDatasetDisplayName?: string | null;
	}

	/** Represents one AnnotatedDataset in datalabeling.googleapis.com. */
	export interface GoogleCloudAiplatformV1beta1MigratableResourceDataLabelingDatasetDataLabelingAnnotatedDatasetFormProperties {

		/** Full resource name of data labeling AnnotatedDataset. Format: `projects/{project}/datasets/{dataset}/annotatedDatasets/{annotated_dataset}`. */
		annotatedDataset: FormControl<string | null | undefined>,

		/** The AnnotatedDataset's display name in datalabeling.googleapis.com. */
		annotatedDatasetDisplayName: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1MigratableResourceDataLabelingDatasetDataLabelingAnnotatedDatasetFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1MigratableResourceDataLabelingDatasetDataLabelingAnnotatedDatasetFormProperties>({
			annotatedDataset: new FormControl<string | null | undefined>(undefined),
			annotatedDatasetDisplayName: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Represents one model Version in ml.googleapis.com. */
	export interface GoogleCloudAiplatformV1beta1MigratableResourceMlEngineModelVersion {

		/** The ml.googleapis.com endpoint that this model Version currently lives in. Example values: * ml.googleapis.com * us-centrall-ml.googleapis.com * europe-west4-ml.googleapis.com * asia-east1-ml.googleapis.com */
		endpoint?: string | null;

		/** Full resource name of ml engine model Version. Format: `projects/{project}/models/{model}/versions/{version}`. */
		version?: string | null;
	}

	/** Represents one model Version in ml.googleapis.com. */
	export interface GoogleCloudAiplatformV1beta1MigratableResourceMlEngineModelVersionFormProperties {

		/** The ml.googleapis.com endpoint that this model Version currently lives in. Example values: * ml.googleapis.com * us-centrall-ml.googleapis.com * europe-west4-ml.googleapis.com * asia-east1-ml.googleapis.com */
		endpoint: FormControl<string | null | undefined>,

		/** Full resource name of ml engine model Version. Format: `projects/{project}/models/{model}/versions/{version}`. */
		version: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1MigratableResourceMlEngineModelVersionFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1MigratableResourceMlEngineModelVersionFormProperties>({
			endpoint: new FormControl<string | null | undefined>(undefined),
			version: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** A job that uses a Model to produce predictions on multiple input instances. If predictions for significant portion of the instances fail, the job may finish without attempting predictions for all remaining instances. */
	export interface GoogleCloudAiplatformV1beta1BatchPredictionJob {

		/** Success and error statistics of processing multiple entities (for example, DataItems or structured data rows) in batch. */
		completionStats?: GoogleCloudAiplatformV1beta1CompletionStats;

		/** Output only. Time when the BatchPredictionJob was created. */
		createTime?: string | null;

		/** A description of resources that are used for performing batch operations, are dedicated to a Model, and need manual configuration. */
		dedicatedResources?: GoogleCloudAiplatformV1beta1BatchDedicatedResources;

		/** For custom-trained Models and AutoML Tabular Models, the container of the DeployedModel instances will send `stderr` and `stdout` streams to Cloud Logging by default. Please note that the logs incur cost, which are subject to [Cloud Logging pricing](https://cloud.google.com/logging/pricing). User can disable container logging by setting this flag to true. */
		disableContainerLogging?: boolean | null;

		/** Required. The user-defined name of this BatchPredictionJob. */
		displayName?: string | null;

		/** Represents a customer-managed encryption key spec that can be applied to a top-level resource. */
		encryptionSpec?: GoogleCloudAiplatformV1beta1EncryptionSpec;

		/** Output only. Time when the BatchPredictionJob entered any of the following states: `JOB_STATE_SUCCEEDED`, `JOB_STATE_FAILED`, `JOB_STATE_CANCELLED`. */
		endTime?: string | null;

		/** The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors). */
		error?: GoogleRpcStatus;

		/** Specification of Model explanation. */
		explanationSpec?: GoogleCloudAiplatformV1beta1ExplanationSpec;

		/** Generate explanation with the batch prediction results. When set to `true`, the batch prediction output changes based on the `predictions_format` field of the BatchPredictionJob.output_config object: * `bigquery`: output includes a column named `explanation`. The value is a struct that conforms to the Explanation object. * `jsonl`: The JSON objects on each line include an additional entry keyed `explanation`. The value of the entry is a JSON object that conforms to the Explanation object. * `csv`: Generating explanations for CSV format is not supported. If this field is set to true, either the Model.explanation_spec or explanation_spec must be populated. */
		generateExplanation?: boolean | null;

		/** Configures the input to BatchPredictionJob. See Model.supported_input_storage_formats for Model's supported input formats, and how instances should be expressed via any of them. */
		inputConfig?: GoogleCloudAiplatformV1beta1BatchPredictionJobInputConfig;

		/** Configuration defining how to transform batch prediction input instances to the instances that the Model accepts. */
		instanceConfig?: GoogleCloudAiplatformV1beta1BatchPredictionJobInstanceConfig;

		/** The labels with user-defined metadata to organize BatchPredictionJobs. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. See https://goo.gl/xmQnxf for more information and examples of labels. */
		labels?: {[id: string]: string };

		/** Manual batch tuning parameters. */
		manualBatchTuningParameters?: GoogleCloudAiplatformV1beta1ManualBatchTuningParameters;

		/** The name of the Model resource that produces the predictions via this job, must share the same ancestor Location. Starting this job has no impact on any existing deployments of the Model and their resources. Exactly one of model and unmanaged_container_model must be set. The model resource name may contain version id or version alias to specify the version. Example: `projects/{project}/locations/{location}/models/{model}@2` or `projects/{project}/locations/{location}/models/{model}@golden` if no version is specified, the default version will be deployed. The model resource could also be a publisher model. Example: `publishers/{publisher}/models/{model}` or `projects/{project}/locations/{location}/publishers/{publisher}/models/{model}` */
		model?: string | null;

		/** The model monitoring configuration used for Batch Prediction Job. */
		modelMonitoringConfig?: GoogleCloudAiplatformV1beta1ModelMonitoringConfig;

		/** Get batch prediction job monitoring statistics. */
		modelMonitoringStatsAnomalies?: Array<GoogleCloudAiplatformV1beta1ModelMonitoringStatsAnomalies>;

		/** The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors). */
		modelMonitoringStatus?: GoogleRpcStatus;

		/** The parameters that govern the predictions. The schema of the parameters may be specified via the Model's PredictSchemata's parameters_schema_uri. */
		modelParameters?: any;

		/** Output only. The version ID of the Model that produces the predictions via this job. */
		modelVersionId?: string | null;

		/** Output only. Resource name of the BatchPredictionJob. */
		name?: string | null;

		/** Configures the output of BatchPredictionJob. See Model.supported_output_storage_formats for supported output formats, and how predictions are expressed via any of them. */
		outputConfig?: GoogleCloudAiplatformV1beta1BatchPredictionJobOutputConfig;

		/** Further describes this job's output. Supplements output_config. */
		outputInfo?: GoogleCloudAiplatformV1beta1BatchPredictionJobOutputInfo;

		/** Output only. Partial failures encountered. For example, single files that can't be read. This field never exceeds 20 entries. Status details fields contain standard Google Cloud error details. */
		partialFailures?: Array<GoogleRpcStatus>;

		/** Statistics information about resource consumption. */
		resourcesConsumed?: GoogleCloudAiplatformV1beta1ResourcesConsumed;

		/** The service account that the DeployedModel's container runs as. If not specified, a system generated one will be used, which has minimal permissions and the custom container, if used, may not have enough permission to access other Google Cloud resources. Users deploying the Model must have the `iam.serviceAccounts.actAs` permission on this service account. */
		serviceAccount?: string | null;

		/** Output only. Time when the BatchPredictionJob for the first time entered the `JOB_STATE_RUNNING` state. */
		startTime?: string | null;

		/** Output only. The detailed state of the job. */
		state?: GoogleCloudAiplatformV1beta1BatchPredictionJobState | null;

		/** Contains model information necessary to perform batch prediction without requiring a full model import. */
		unmanagedContainerModel?: GoogleCloudAiplatformV1beta1UnmanagedContainerModel;

		/** Output only. Time when the BatchPredictionJob was most recently updated. */
		updateTime?: string | null;
	}

	/** A job that uses a Model to produce predictions on multiple input instances. If predictions for significant portion of the instances fail, the job may finish without attempting predictions for all remaining instances. */
	export interface GoogleCloudAiplatformV1beta1BatchPredictionJobFormProperties {

		/** Output only. Time when the BatchPredictionJob was created. */
		createTime: FormControl<string | null | undefined>,

		/** For custom-trained Models and AutoML Tabular Models, the container of the DeployedModel instances will send `stderr` and `stdout` streams to Cloud Logging by default. Please note that the logs incur cost, which are subject to [Cloud Logging pricing](https://cloud.google.com/logging/pricing). User can disable container logging by setting this flag to true. */
		disableContainerLogging: FormControl<boolean | null | undefined>,

		/** Required. The user-defined name of this BatchPredictionJob. */
		displayName: FormControl<string | null | undefined>,

		/** Output only. Time when the BatchPredictionJob entered any of the following states: `JOB_STATE_SUCCEEDED`, `JOB_STATE_FAILED`, `JOB_STATE_CANCELLED`. */
		endTime: FormControl<string | null | undefined>,

		/** Generate explanation with the batch prediction results. When set to `true`, the batch prediction output changes based on the `predictions_format` field of the BatchPredictionJob.output_config object: * `bigquery`: output includes a column named `explanation`. The value is a struct that conforms to the Explanation object. * `jsonl`: The JSON objects on each line include an additional entry keyed `explanation`. The value of the entry is a JSON object that conforms to the Explanation object. * `csv`: Generating explanations for CSV format is not supported. If this field is set to true, either the Model.explanation_spec or explanation_spec must be populated. */
		generateExplanation: FormControl<boolean | null | undefined>,

		/** The labels with user-defined metadata to organize BatchPredictionJobs. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. See https://goo.gl/xmQnxf for more information and examples of labels. */
		labels: FormControl<{[id: string]: string } | null | undefined>,

		/** The name of the Model resource that produces the predictions via this job, must share the same ancestor Location. Starting this job has no impact on any existing deployments of the Model and their resources. Exactly one of model and unmanaged_container_model must be set. The model resource name may contain version id or version alias to specify the version. Example: `projects/{project}/locations/{location}/models/{model}@2` or `projects/{project}/locations/{location}/models/{model}@golden` if no version is specified, the default version will be deployed. The model resource could also be a publisher model. Example: `publishers/{publisher}/models/{model}` or `projects/{project}/locations/{location}/publishers/{publisher}/models/{model}` */
		model: FormControl<string | null | undefined>,

		/** The parameters that govern the predictions. The schema of the parameters may be specified via the Model's PredictSchemata's parameters_schema_uri. */
		modelParameters: FormControl<any | null | undefined>,

		/** Output only. The version ID of the Model that produces the predictions via this job. */
		modelVersionId: FormControl<string | null | undefined>,

		/** Output only. Resource name of the BatchPredictionJob. */
		name: FormControl<string | null | undefined>,

		/** The service account that the DeployedModel's container runs as. If not specified, a system generated one will be used, which has minimal permissions and the custom container, if used, may not have enough permission to access other Google Cloud resources. Users deploying the Model must have the `iam.serviceAccounts.actAs` permission on this service account. */
		serviceAccount: FormControl<string | null | undefined>,

		/** Output only. Time when the BatchPredictionJob for the first time entered the `JOB_STATE_RUNNING` state. */
		startTime: FormControl<string | null | undefined>,

		/** Output only. The detailed state of the job. */
		state: FormControl<GoogleCloudAiplatformV1beta1BatchPredictionJobState | null | undefined>,

		/** Output only. Time when the BatchPredictionJob was most recently updated. */
		updateTime: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1BatchPredictionJobFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1BatchPredictionJobFormProperties>({
			createTime: new FormControl<string | null | undefined>(undefined),
			disableContainerLogging: new FormControl<boolean | null | undefined>(undefined),
			displayName: new FormControl<string | null | undefined>(undefined),
			endTime: new FormControl<string | null | undefined>(undefined),
			generateExplanation: new FormControl<boolean | null | undefined>(undefined),
			labels: new FormControl<{[id: string]: string } | null | undefined>(undefined),
			model: new FormControl<string | null | undefined>(undefined),
			modelParameters: new FormControl<any | null | undefined>(undefined),
			modelVersionId: new FormControl<string | null | undefined>(undefined),
			name: new FormControl<string | null | undefined>(undefined),
			serviceAccount: new FormControl<string | null | undefined>(undefined),
			startTime: new FormControl<string | null | undefined>(undefined),
			state: new FormControl<GoogleCloudAiplatformV1beta1BatchPredictionJobState | null | undefined>(undefined),
			updateTime: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Success and error statistics of processing multiple entities (for example, DataItems or structured data rows) in batch. */
	export interface GoogleCloudAiplatformV1beta1CompletionStats {

		/** Output only. The number of entities for which any error was encountered. */
		failedCount?: string | null;

		/** Output only. In cases when enough errors are encountered a job, pipeline, or operation may be failed as a whole. Below is the number of entities for which the processing had not been finished (either in successful or failed state). Set to -1 if the number is unknown (for example, the operation failed before the total entity number could be collected). */
		incompleteCount?: string | null;

		/** Output only. The number of entities that had been processed successfully. */
		successfulCount?: string | null;

		/** Output only. The number of the successful forecast points that are generated by the forecasting model. This is ONLY used by the forecasting batch prediction. */
		successfulForecastPointCount?: string | null;
	}

	/** Success and error statistics of processing multiple entities (for example, DataItems or structured data rows) in batch. */
	export interface GoogleCloudAiplatformV1beta1CompletionStatsFormProperties {

		/** Output only. The number of entities for which any error was encountered. */
		failedCount: FormControl<string | null | undefined>,

		/** Output only. In cases when enough errors are encountered a job, pipeline, or operation may be failed as a whole. Below is the number of entities for which the processing had not been finished (either in successful or failed state). Set to -1 if the number is unknown (for example, the operation failed before the total entity number could be collected). */
		incompleteCount: FormControl<string | null | undefined>,

		/** Output only. The number of entities that had been processed successfully. */
		successfulCount: FormControl<string | null | undefined>,

		/** Output only. The number of the successful forecast points that are generated by the forecasting model. This is ONLY used by the forecasting batch prediction. */
		successfulForecastPointCount: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1CompletionStatsFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1CompletionStatsFormProperties>({
			failedCount: new FormControl<string | null | undefined>(undefined),
			incompleteCount: new FormControl<string | null | undefined>(undefined),
			successfulCount: new FormControl<string | null | undefined>(undefined),
			successfulForecastPointCount: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Specification of Model explanation. */
	export interface GoogleCloudAiplatformV1beta1ExplanationSpec {

		/** Metadata describing the Model's input and output for explanation. */
		metadata?: GoogleCloudAiplatformV1beta1ExplanationMetadata;

		/** Parameters to configure explaining for Model's predictions. */
		parameters?: GoogleCloudAiplatformV1beta1ExplanationParameters;
	}

	/** Specification of Model explanation. */
	export interface GoogleCloudAiplatformV1beta1ExplanationSpecFormProperties {
	}
	export function CreateGoogleCloudAiplatformV1beta1ExplanationSpecFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1ExplanationSpecFormProperties>({
		});

	}


	/** Metadata describing the Model's input and output for explanation. */
	export interface GoogleCloudAiplatformV1beta1ExplanationMetadata {

		/** Points to a YAML file stored on Google Cloud Storage describing the format of the feature attributions. The schema is defined as an OpenAPI 3.0.2 [Schema Object](https://github.com/OAI/OpenAPI-Specification/blob/main/versions/3.0.2.md#schemaObject). AutoML tabular Models always have this field populated by Vertex AI. Note: The URI given on output may be different, including the URI scheme, than the one given on input. The output URI will point to a location where the user only has a read access. */
		featureAttributionsSchemaUri?: string | null;

		/** Required. Map from feature names to feature input metadata. Keys are the name of the features. Values are the specification of the feature. An empty InputMetadata is valid. It describes a text feature which has the name specified as the key in ExplanationMetadata.inputs. The baseline of the empty feature is chosen by Vertex AI. For Vertex AI-provided Tensorflow images, the key can be any friendly name of the feature. Once specified, featureAttributions are keyed by this key (if not grouped with another feature). For custom images, the key must match with the key in instance. */
		inputs?: {[id: string]: GoogleCloudAiplatformV1beta1ExplanationMetadataInputMetadata };

		/** Name of the source to generate embeddings for example based explanations. */
		latentSpaceSource?: string | null;

		/** Required. Map from output names to output metadata. For Vertex AI-provided Tensorflow images, keys can be any user defined string that consists of any UTF-8 characters. For custom images, keys are the name of the output field in the prediction to be explained. Currently only one key is allowed. */
		outputs?: {[id: string]: GoogleCloudAiplatformV1beta1ExplanationMetadataOutputMetadata };
	}

	/** Metadata describing the Model's input and output for explanation. */
	export interface GoogleCloudAiplatformV1beta1ExplanationMetadataFormProperties {

		/** Points to a YAML file stored on Google Cloud Storage describing the format of the feature attributions. The schema is defined as an OpenAPI 3.0.2 [Schema Object](https://github.com/OAI/OpenAPI-Specification/blob/main/versions/3.0.2.md#schemaObject). AutoML tabular Models always have this field populated by Vertex AI. Note: The URI given on output may be different, including the URI scheme, than the one given on input. The output URI will point to a location where the user only has a read access. */
		featureAttributionsSchemaUri: FormControl<string | null | undefined>,

		/** Required. Map from feature names to feature input metadata. Keys are the name of the features. Values are the specification of the feature. An empty InputMetadata is valid. It describes a text feature which has the name specified as the key in ExplanationMetadata.inputs. The baseline of the empty feature is chosen by Vertex AI. For Vertex AI-provided Tensorflow images, the key can be any friendly name of the feature. Once specified, featureAttributions are keyed by this key (if not grouped with another feature). For custom images, the key must match with the key in instance. */
		inputs: FormControl<{[id: string]: GoogleCloudAiplatformV1beta1ExplanationMetadataInputMetadata } | null | undefined>,

		/** Name of the source to generate embeddings for example based explanations. */
		latentSpaceSource: FormControl<string | null | undefined>,

		/** Required. Map from output names to output metadata. For Vertex AI-provided Tensorflow images, keys can be any user defined string that consists of any UTF-8 characters. For custom images, keys are the name of the output field in the prediction to be explained. Currently only one key is allowed. */
		outputs: FormControl<{[id: string]: GoogleCloudAiplatformV1beta1ExplanationMetadataOutputMetadata } | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1ExplanationMetadataFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1ExplanationMetadataFormProperties>({
			featureAttributionsSchemaUri: new FormControl<string | null | undefined>(undefined),
			inputs: new FormControl<{[id: string]: GoogleCloudAiplatformV1beta1ExplanationMetadataInputMetadata } | null | undefined>(undefined),
			latentSpaceSource: new FormControl<string | null | undefined>(undefined),
			outputs: new FormControl<{[id: string]: GoogleCloudAiplatformV1beta1ExplanationMetadataOutputMetadata } | null | undefined>(undefined),
		});

	}


	/** Metadata of the input of a feature. Fields other than InputMetadata.input_baselines are applicable only for Models that are using Vertex AI-provided images for Tensorflow. */
	export interface GoogleCloudAiplatformV1beta1ExplanationMetadataInputMetadata {

		/** Specifies the shape of the values of the input if the input is a sparse representation. Refer to Tensorflow documentation for more details: https://www.tensorflow.org/api_docs/python/tf/sparse/SparseTensor. */
		denseShapeTensorName?: string | null;

		/** A list of baselines for the encoded tensor. The shape of each baseline should match the shape of the encoded tensor. If a scalar is provided, Vertex AI broadcasts to the same shape as the encoded tensor. */
		encodedBaselines?: Array<string>;

		/** Encoded tensor is a transformation of the input tensor. Must be provided if choosing Integrated Gradients attribution or XRAI attribution and the input tensor is not differentiable. An encoded tensor is generated if the input tensor is encoded by a lookup table. */
		encodedTensorName?: string | null;

		/** Defines how the feature is encoded into the input tensor. Defaults to IDENTITY. */
		encoding?: GoogleCloudAiplatformV1beta1ExplanationMetadataInputMetadataEncoding | null;

		/** Domain details of the input feature value. Provides numeric information about the feature, such as its range (min, max). If the feature has been pre-processed, for example with z-scoring, then it provides information about how to recover the original feature. For example, if the input feature is an image and it has been pre-processed to obtain 0-mean and stddev = 1 values, then original_mean, and original_stddev refer to the mean and stddev of the original feature (e.g. image tensor) from which input feature (with mean = 0 and stddev = 1) was obtained. */
		featureValueDomain?: GoogleCloudAiplatformV1beta1ExplanationMetadataInputMetadataFeatureValueDomain;

		/** Name of the group that the input belongs to. Features with the same group name will be treated as one feature when computing attributions. Features grouped together can have different shapes in value. If provided, there will be one single attribution generated in Attribution.feature_attributions, keyed by the group name. */
		groupName?: string | null;

		/** A list of feature names for each index in the input tensor. Required when the input InputMetadata.encoding is BAG_OF_FEATURES, BAG_OF_FEATURES_SPARSE, INDICATOR. */
		indexFeatureMapping?: Array<string>;

		/** Specifies the index of the values of the input tensor. Required when the input tensor is a sparse representation. Refer to Tensorflow documentation for more details: https://www.tensorflow.org/api_docs/python/tf/sparse/SparseTensor. */
		indicesTensorName?: string | null;

		/** Baseline inputs for this feature. If no baseline is specified, Vertex AI chooses the baseline for this feature. If multiple baselines are specified, Vertex AI returns the average attributions across them in Attribution.feature_attributions. For Vertex AI-provided Tensorflow images (both 1.x and 2.x), the shape of each baseline must match the shape of the input tensor. If a scalar is provided, we broadcast to the same shape as the input tensor. For custom images, the element of the baselines must be in the same format as the feature's input in the instance[]. The schema of any single instance may be specified via Endpoint's DeployedModels' Model's PredictSchemata's instance_schema_uri. */
		inputBaselines?: Array<string>;

		/** Name of the input tensor for this feature. Required and is only applicable to Vertex AI-provided images for Tensorflow. */
		inputTensorName?: string | null;

		/** Modality of the feature. Valid values are: numeric, image. Defaults to numeric. */
		modality?: string | null;

		/** Visualization configurations for image explanation. */
		visualization?: GoogleCloudAiplatformV1beta1ExplanationMetadataInputMetadataVisualization;
	}

	/** Metadata of the input of a feature. Fields other than InputMetadata.input_baselines are applicable only for Models that are using Vertex AI-provided images for Tensorflow. */
	export interface GoogleCloudAiplatformV1beta1ExplanationMetadataInputMetadataFormProperties {

		/** Specifies the shape of the values of the input if the input is a sparse representation. Refer to Tensorflow documentation for more details: https://www.tensorflow.org/api_docs/python/tf/sparse/SparseTensor. */
		denseShapeTensorName: FormControl<string | null | undefined>,

		/** Encoded tensor is a transformation of the input tensor. Must be provided if choosing Integrated Gradients attribution or XRAI attribution and the input tensor is not differentiable. An encoded tensor is generated if the input tensor is encoded by a lookup table. */
		encodedTensorName: FormControl<string | null | undefined>,

		/** Defines how the feature is encoded into the input tensor. Defaults to IDENTITY. */
		encoding: FormControl<GoogleCloudAiplatformV1beta1ExplanationMetadataInputMetadataEncoding | null | undefined>,

		/** Name of the group that the input belongs to. Features with the same group name will be treated as one feature when computing attributions. Features grouped together can have different shapes in value. If provided, there will be one single attribution generated in Attribution.feature_attributions, keyed by the group name. */
		groupName: FormControl<string | null | undefined>,

		/** Specifies the index of the values of the input tensor. Required when the input tensor is a sparse representation. Refer to Tensorflow documentation for more details: https://www.tensorflow.org/api_docs/python/tf/sparse/SparseTensor. */
		indicesTensorName: FormControl<string | null | undefined>,

		/** Name of the input tensor for this feature. Required and is only applicable to Vertex AI-provided images for Tensorflow. */
		inputTensorName: FormControl<string | null | undefined>,

		/** Modality of the feature. Valid values are: numeric, image. Defaults to numeric. */
		modality: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1ExplanationMetadataInputMetadataFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1ExplanationMetadataInputMetadataFormProperties>({
			denseShapeTensorName: new FormControl<string | null | undefined>(undefined),
			encodedTensorName: new FormControl<string | null | undefined>(undefined),
			encoding: new FormControl<GoogleCloudAiplatformV1beta1ExplanationMetadataInputMetadataEncoding | null | undefined>(undefined),
			groupName: new FormControl<string | null | undefined>(undefined),
			indicesTensorName: new FormControl<string | null | undefined>(undefined),
			inputTensorName: new FormControl<string | null | undefined>(undefined),
			modality: new FormControl<string | null | undefined>(undefined),
		});

	}

	export enum GoogleCloudAiplatformV1beta1ExplanationMetadataInputMetadataEncoding { ENCODING_UNSPECIFIED = 0, IDENTITY = 1, BAG_OF_FEATURES = 2, BAG_OF_FEATURES_SPARSE = 3, INDICATOR = 4, COMBINED_EMBEDDING = 5, CONCAT_EMBEDDING = 6 }


	/** Domain details of the input feature value. Provides numeric information about the feature, such as its range (min, max). If the feature has been pre-processed, for example with z-scoring, then it provides information about how to recover the original feature. For example, if the input feature is an image and it has been pre-processed to obtain 0-mean and stddev = 1 values, then original_mean, and original_stddev refer to the mean and stddev of the original feature (e.g. image tensor) from which input feature (with mean = 0 and stddev = 1) was obtained. */
	export interface GoogleCloudAiplatformV1beta1ExplanationMetadataInputMetadataFeatureValueDomain {

		/** The maximum permissible value for this feature. */
		maxValue?: number | null;

		/** The minimum permissible value for this feature. */
		minValue?: number | null;

		/** If this input feature has been normalized to a mean value of 0, the original_mean specifies the mean value of the domain prior to normalization. */
		originalMean?: number | null;

		/** If this input feature has been normalized to a standard deviation of 1.0, the original_stddev specifies the standard deviation of the domain prior to normalization. */
		originalStddev?: number | null;
	}

	/** Domain details of the input feature value. Provides numeric information about the feature, such as its range (min, max). If the feature has been pre-processed, for example with z-scoring, then it provides information about how to recover the original feature. For example, if the input feature is an image and it has been pre-processed to obtain 0-mean and stddev = 1 values, then original_mean, and original_stddev refer to the mean and stddev of the original feature (e.g. image tensor) from which input feature (with mean = 0 and stddev = 1) was obtained. */
	export interface GoogleCloudAiplatformV1beta1ExplanationMetadataInputMetadataFeatureValueDomainFormProperties {

		/** The maximum permissible value for this feature. */
		maxValue: FormControl<number | null | undefined>,

		/** The minimum permissible value for this feature. */
		minValue: FormControl<number | null | undefined>,

		/** If this input feature has been normalized to a mean value of 0, the original_mean specifies the mean value of the domain prior to normalization. */
		originalMean: FormControl<number | null | undefined>,

		/** If this input feature has been normalized to a standard deviation of 1.0, the original_stddev specifies the standard deviation of the domain prior to normalization. */
		originalStddev: FormControl<number | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1ExplanationMetadataInputMetadataFeatureValueDomainFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1ExplanationMetadataInputMetadataFeatureValueDomainFormProperties>({
			maxValue: new FormControl<number | null | undefined>(undefined),
			minValue: new FormControl<number | null | undefined>(undefined),
			originalMean: new FormControl<number | null | undefined>(undefined),
			originalStddev: new FormControl<number | null | undefined>(undefined),
		});

	}


	/** Visualization configurations for image explanation. */
	export interface GoogleCloudAiplatformV1beta1ExplanationMetadataInputMetadataVisualization {

		/** Excludes attributions below the specified percentile, from the highlighted areas. Defaults to 62. */
		clipPercentLowerbound?: number | null;

		/** Excludes attributions above the specified percentile from the highlighted areas. Using the clip_percent_upperbound and clip_percent_lowerbound together can be useful for filtering out noise and making it easier to see areas of strong attribution. Defaults to 99.9. */
		clipPercentUpperbound?: number | null;

		/** The color scheme used for the highlighted areas. Defaults to PINK_GREEN for Integrated Gradients attribution, which shows positive attributions in green and negative in pink. Defaults to VIRIDIS for XRAI attribution, which highlights the most influential regions in yellow and the least influential in blue. */
		colorMap?: GoogleCloudAiplatformV1beta1ExplanationMetadataInputMetadataVisualizationColorMap | null;

		/** How the original image is displayed in the visualization. Adjusting the overlay can help increase visual clarity if the original image makes it difficult to view the visualization. Defaults to NONE. */
		overlayType?: GoogleCloudAiplatformV1beta1ExplanationMetadataInputMetadataVisualizationOverlayType | null;

		/** Whether to only highlight pixels with positive contributions, negative or both. Defaults to POSITIVE. */
		polarity?: GoogleCloudAiplatformV1beta1ExplanationMetadataInputMetadataVisualizationPolarity | null;

		/** Type of the image visualization. Only applicable to Integrated Gradients attribution. OUTLINES shows regions of attribution, while PIXELS shows per-pixel attribution. Defaults to OUTLINES. */
		type?: GoogleCloudAiplatformV1beta1ExplanationMetadataInputMetadataVisualizationType | null;
	}

	/** Visualization configurations for image explanation. */
	export interface GoogleCloudAiplatformV1beta1ExplanationMetadataInputMetadataVisualizationFormProperties {

		/** Excludes attributions below the specified percentile, from the highlighted areas. Defaults to 62. */
		clipPercentLowerbound: FormControl<number | null | undefined>,

		/** Excludes attributions above the specified percentile from the highlighted areas. Using the clip_percent_upperbound and clip_percent_lowerbound together can be useful for filtering out noise and making it easier to see areas of strong attribution. Defaults to 99.9. */
		clipPercentUpperbound: FormControl<number | null | undefined>,

		/** The color scheme used for the highlighted areas. Defaults to PINK_GREEN for Integrated Gradients attribution, which shows positive attributions in green and negative in pink. Defaults to VIRIDIS for XRAI attribution, which highlights the most influential regions in yellow and the least influential in blue. */
		colorMap: FormControl<GoogleCloudAiplatformV1beta1ExplanationMetadataInputMetadataVisualizationColorMap | null | undefined>,

		/** How the original image is displayed in the visualization. Adjusting the overlay can help increase visual clarity if the original image makes it difficult to view the visualization. Defaults to NONE. */
		overlayType: FormControl<GoogleCloudAiplatformV1beta1ExplanationMetadataInputMetadataVisualizationOverlayType | null | undefined>,

		/** Whether to only highlight pixels with positive contributions, negative or both. Defaults to POSITIVE. */
		polarity: FormControl<GoogleCloudAiplatformV1beta1ExplanationMetadataInputMetadataVisualizationPolarity | null | undefined>,

		/** Type of the image visualization. Only applicable to Integrated Gradients attribution. OUTLINES shows regions of attribution, while PIXELS shows per-pixel attribution. Defaults to OUTLINES. */
		type: FormControl<GoogleCloudAiplatformV1beta1ExplanationMetadataInputMetadataVisualizationType | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1ExplanationMetadataInputMetadataVisualizationFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1ExplanationMetadataInputMetadataVisualizationFormProperties>({
			clipPercentLowerbound: new FormControl<number | null | undefined>(undefined),
			clipPercentUpperbound: new FormControl<number | null | undefined>(undefined),
			colorMap: new FormControl<GoogleCloudAiplatformV1beta1ExplanationMetadataInputMetadataVisualizationColorMap | null | undefined>(undefined),
			overlayType: new FormControl<GoogleCloudAiplatformV1beta1ExplanationMetadataInputMetadataVisualizationOverlayType | null | undefined>(undefined),
			polarity: new FormControl<GoogleCloudAiplatformV1beta1ExplanationMetadataInputMetadataVisualizationPolarity | null | undefined>(undefined),
			type: new FormControl<GoogleCloudAiplatformV1beta1ExplanationMetadataInputMetadataVisualizationType | null | undefined>(undefined),
		});

	}

	export enum GoogleCloudAiplatformV1beta1ExplanationMetadataInputMetadataVisualizationColorMap { COLOR_MAP_UNSPECIFIED = 0, PINK_GREEN = 1, VIRIDIS = 2, RED = 3, GREEN = 4, RED_GREEN = 5, PINK_WHITE_GREEN = 6 }

	export enum GoogleCloudAiplatformV1beta1ExplanationMetadataInputMetadataVisualizationOverlayType { OVERLAY_TYPE_UNSPECIFIED = 0, NONE = 1, ORIGINAL = 2, GRAYSCALE = 3, MASK_BLACK = 4 }

	export enum GoogleCloudAiplatformV1beta1ExplanationMetadataInputMetadataVisualizationPolarity { POLARITY_UNSPECIFIED = 0, POSITIVE = 1, NEGATIVE = 2, BOTH = 3 }

	export enum GoogleCloudAiplatformV1beta1ExplanationMetadataInputMetadataVisualizationType { TYPE_UNSPECIFIED = 0, PIXELS = 1, OUTLINES = 2 }


	/** Metadata of the prediction output to be explained. */
	export interface GoogleCloudAiplatformV1beta1ExplanationMetadataOutputMetadata {

		/** Specify a field name in the prediction to look for the display name. Use this if the prediction contains the display names for the outputs. The display names in the prediction must have the same shape of the outputs, so that it can be located by Attribution.output_index for a specific output. */
		displayNameMappingKey?: string | null;

		/** Static mapping between the index and display name. Use this if the outputs are a deterministic n-dimensional array, e.g. a list of scores of all the classes in a pre-defined order for a multi-classification Model. It's not feasible if the outputs are non-deterministic, e.g. the Model produces top-k classes or sort the outputs by their values. The shape of the value must be an n-dimensional array of strings. The number of dimensions must match that of the outputs to be explained. The Attribution.output_display_name is populated by locating in the mapping with Attribution.output_index. */
		indexDisplayNameMapping?: any;

		/** Name of the output tensor. Required and is only applicable to Vertex AI provided images for Tensorflow. */
		outputTensorName?: string | null;
	}

	/** Metadata of the prediction output to be explained. */
	export interface GoogleCloudAiplatformV1beta1ExplanationMetadataOutputMetadataFormProperties {

		/** Specify a field name in the prediction to look for the display name. Use this if the prediction contains the display names for the outputs. The display names in the prediction must have the same shape of the outputs, so that it can be located by Attribution.output_index for a specific output. */
		displayNameMappingKey: FormControl<string | null | undefined>,

		/** Static mapping between the index and display name. Use this if the outputs are a deterministic n-dimensional array, e.g. a list of scores of all the classes in a pre-defined order for a multi-classification Model. It's not feasible if the outputs are non-deterministic, e.g. the Model produces top-k classes or sort the outputs by their values. The shape of the value must be an n-dimensional array of strings. The number of dimensions must match that of the outputs to be explained. The Attribution.output_display_name is populated by locating in the mapping with Attribution.output_index. */
		indexDisplayNameMapping: FormControl<any | null | undefined>,

		/** Name of the output tensor. Required and is only applicable to Vertex AI provided images for Tensorflow. */
		outputTensorName: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1ExplanationMetadataOutputMetadataFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1ExplanationMetadataOutputMetadataFormProperties>({
			displayNameMappingKey: new FormControl<string | null | undefined>(undefined),
			indexDisplayNameMapping: new FormControl<any | null | undefined>(undefined),
			outputTensorName: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Parameters to configure explaining for Model's predictions. */
	export interface GoogleCloudAiplatformV1beta1ExplanationParameters {

		/** Example-based explainability that returns the nearest neighbors from the provided dataset. */
		examples?: GoogleCloudAiplatformV1beta1Examples;

		/** An attribution method that computes the Aumann-Shapley value taking advantage of the model's fully differentiable structure. Refer to this paper for more details: https://arxiv.org/abs/1703.01365 */
		integratedGradientsAttribution?: GoogleCloudAiplatformV1beta1IntegratedGradientsAttribution;

		/** If populated, only returns attributions that have output_index contained in output_indices. It must be an ndarray of integers, with the same shape of the output it's explaining. If not populated, returns attributions for top_k indices of outputs. If neither top_k nor output_indices is populated, returns the argmax index of the outputs. Only applicable to Models that predict multiple outputs (e,g, multi-class Models that predict multiple classes). */
		outputIndices?: Array<string>;

		/** An attribution method that approximates Shapley values for features that contribute to the label being predicted. A sampling strategy is used to approximate the value rather than considering all subsets of features. */
		sampledShapleyAttribution?: GoogleCloudAiplatformV1beta1SampledShapleyAttribution;

		/** If populated, returns attributions for top K indices of outputs (defaults to 1). Only applies to Models that predicts more than one outputs (e,g, multi-class Models). When set to -1, returns explanations for all outputs. */
		topK?: number | null;

		/** An explanation method that redistributes Integrated Gradients attributions to segmented regions, taking advantage of the model's fully differentiable structure. Refer to this paper for more details: https://arxiv.org/abs/1906.02825 Supported only by image Models. */
		xraiAttribution?: GoogleCloudAiplatformV1beta1XraiAttribution;
	}

	/** Parameters to configure explaining for Model's predictions. */
	export interface GoogleCloudAiplatformV1beta1ExplanationParametersFormProperties {

		/** If populated, returns attributions for top K indices of outputs (defaults to 1). Only applies to Models that predicts more than one outputs (e,g, multi-class Models). When set to -1, returns explanations for all outputs. */
		topK: FormControl<number | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1ExplanationParametersFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1ExplanationParametersFormProperties>({
			topK: new FormControl<number | null | undefined>(undefined),
		});

	}


	/** Example-based explainability that returns the nearest neighbors from the provided dataset. */
	export interface GoogleCloudAiplatformV1beta1Examples {

		/** The Cloud Storage input instances. */
		exampleGcsSource?: GoogleCloudAiplatformV1beta1ExamplesExampleGcsSource;

		/** The Google Cloud Storage location for the input content. */
		gcsSource?: GoogleCloudAiplatformV1beta1GcsSource;

		/** The full configuration for the generated index, the semantics are the same as metadata and should match [NearestNeighborSearchConfig](https://cloud.google.com/vertex-ai/docs/explainable-ai/configuring-explanations-example-based#nearest-neighbor-search-config). */
		nearestNeighborSearchConfig?: any;

		/** The number of neighbors to return when querying for examples. */
		neighborCount?: number | null;

		/** Preset configuration for example-based explanations */
		presets?: GoogleCloudAiplatformV1beta1Presets;
	}

	/** Example-based explainability that returns the nearest neighbors from the provided dataset. */
	export interface GoogleCloudAiplatformV1beta1ExamplesFormProperties {

		/** The full configuration for the generated index, the semantics are the same as metadata and should match [NearestNeighborSearchConfig](https://cloud.google.com/vertex-ai/docs/explainable-ai/configuring-explanations-example-based#nearest-neighbor-search-config). */
		nearestNeighborSearchConfig: FormControl<any | null | undefined>,

		/** The number of neighbors to return when querying for examples. */
		neighborCount: FormControl<number | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1ExamplesFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1ExamplesFormProperties>({
			nearestNeighborSearchConfig: new FormControl<any | null | undefined>(undefined),
			neighborCount: new FormControl<number | null | undefined>(undefined),
		});

	}


	/** The Cloud Storage input instances. */
	export interface GoogleCloudAiplatformV1beta1ExamplesExampleGcsSource {

		/** The format in which instances are given, if not specified, assume it's JSONL format. Currently only JSONL format is supported. */
		dataFormat?: GoogleCloudAiplatformV1beta1ExamplesExampleGcsSourceDataFormat | null;

		/** The Google Cloud Storage location for the input content. */
		gcsSource?: GoogleCloudAiplatformV1beta1GcsSource;
	}

	/** The Cloud Storage input instances. */
	export interface GoogleCloudAiplatformV1beta1ExamplesExampleGcsSourceFormProperties {

		/** The format in which instances are given, if not specified, assume it's JSONL format. Currently only JSONL format is supported. */
		dataFormat: FormControl<GoogleCloudAiplatformV1beta1ExamplesExampleGcsSourceDataFormat | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1ExamplesExampleGcsSourceFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1ExamplesExampleGcsSourceFormProperties>({
			dataFormat: new FormControl<GoogleCloudAiplatformV1beta1ExamplesExampleGcsSourceDataFormat | null | undefined>(undefined),
		});

	}

	export enum GoogleCloudAiplatformV1beta1ExamplesExampleGcsSourceDataFormat { DATA_FORMAT_UNSPECIFIED = 0, JSONL = 1 }


	/** Preset configuration for example-based explanations */
	export interface GoogleCloudAiplatformV1beta1Presets {

		/** The modality of the uploaded model, which automatically configures the distance measurement and feature normalization for the underlying example index and queries. If your model does not precisely fit one of these types, it is okay to choose the closest type. */
		modality?: GoogleCloudAiplatformV1beta1PresetsModality | null;

		/** Preset option controlling parameters for speed-precision trade-off when querying for examples. If omitted, defaults to `PRECISE`. */
		query?: GoogleCloudAiplatformV1beta1PresetsQuery | null;
	}

	/** Preset configuration for example-based explanations */
	export interface GoogleCloudAiplatformV1beta1PresetsFormProperties {

		/** The modality of the uploaded model, which automatically configures the distance measurement and feature normalization for the underlying example index and queries. If your model does not precisely fit one of these types, it is okay to choose the closest type. */
		modality: FormControl<GoogleCloudAiplatformV1beta1PresetsModality | null | undefined>,

		/** Preset option controlling parameters for speed-precision trade-off when querying for examples. If omitted, defaults to `PRECISE`. */
		query: FormControl<GoogleCloudAiplatformV1beta1PresetsQuery | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1PresetsFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1PresetsFormProperties>({
			modality: new FormControl<GoogleCloudAiplatformV1beta1PresetsModality | null | undefined>(undefined),
			query: new FormControl<GoogleCloudAiplatformV1beta1PresetsQuery | null | undefined>(undefined),
		});

	}

	export enum GoogleCloudAiplatformV1beta1PresetsModality { MODALITY_UNSPECIFIED = 0, IMAGE = 1, TEXT = 2, TABULAR = 3 }

	export enum GoogleCloudAiplatformV1beta1PresetsQuery { PRECISE = 0, FAST = 1 }


	/** An attribution method that computes the Aumann-Shapley value taking advantage of the model's fully differentiable structure. Refer to this paper for more details: https://arxiv.org/abs/1703.01365 */
	export interface GoogleCloudAiplatformV1beta1IntegratedGradientsAttribution {

		/** Config for blur baseline. When enabled, a linear path from the maximally blurred image to the input image is created. Using a blurred baseline instead of zero (black image) is motivated by the BlurIG approach explained here: https://arxiv.org/abs/2004.03383 */
		blurBaselineConfig?: GoogleCloudAiplatformV1beta1BlurBaselineConfig;

		/** Config for SmoothGrad approximation of gradients. When enabled, the gradients are approximated by averaging the gradients from noisy samples in the vicinity of the inputs. Adding noise can help improve the computed gradients. Refer to this paper for more details: https://arxiv.org/pdf/1706.03825.pdf */
		smoothGradConfig?: GoogleCloudAiplatformV1beta1SmoothGradConfig;

		/** Required. The number of steps for approximating the path integral. A good value to start is 50 and gradually increase until the sum to diff property is within the desired error range. Valid range of its value is [1, 100], inclusively. */
		stepCount?: number | null;
	}

	/** An attribution method that computes the Aumann-Shapley value taking advantage of the model's fully differentiable structure. Refer to this paper for more details: https://arxiv.org/abs/1703.01365 */
	export interface GoogleCloudAiplatformV1beta1IntegratedGradientsAttributionFormProperties {

		/** Required. The number of steps for approximating the path integral. A good value to start is 50 and gradually increase until the sum to diff property is within the desired error range. Valid range of its value is [1, 100], inclusively. */
		stepCount: FormControl<number | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1IntegratedGradientsAttributionFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1IntegratedGradientsAttributionFormProperties>({
			stepCount: new FormControl<number | null | undefined>(undefined),
		});

	}


	/** Config for blur baseline. When enabled, a linear path from the maximally blurred image to the input image is created. Using a blurred baseline instead of zero (black image) is motivated by the BlurIG approach explained here: https://arxiv.org/abs/2004.03383 */
	export interface GoogleCloudAiplatformV1beta1BlurBaselineConfig {

		/** The standard deviation of the blur kernel for the blurred baseline. The same blurring parameter is used for both the height and the width dimension. If not set, the method defaults to the zero (i.e. black for images) baseline. */
		maxBlurSigma?: number | null;
	}

	/** Config for blur baseline. When enabled, a linear path from the maximally blurred image to the input image is created. Using a blurred baseline instead of zero (black image) is motivated by the BlurIG approach explained here: https://arxiv.org/abs/2004.03383 */
	export interface GoogleCloudAiplatformV1beta1BlurBaselineConfigFormProperties {

		/** The standard deviation of the blur kernel for the blurred baseline. The same blurring parameter is used for both the height and the width dimension. If not set, the method defaults to the zero (i.e. black for images) baseline. */
		maxBlurSigma: FormControl<number | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1BlurBaselineConfigFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1BlurBaselineConfigFormProperties>({
			maxBlurSigma: new FormControl<number | null | undefined>(undefined),
		});

	}


	/** Config for SmoothGrad approximation of gradients. When enabled, the gradients are approximated by averaging the gradients from noisy samples in the vicinity of the inputs. Adding noise can help improve the computed gradients. Refer to this paper for more details: https://arxiv.org/pdf/1706.03825.pdf */
	export interface GoogleCloudAiplatformV1beta1SmoothGradConfig {

		/** Noise sigma by features. Noise sigma represents the standard deviation of the gaussian kernel that will be used to add noise to interpolated inputs prior to computing gradients. */
		featureNoiseSigma?: GoogleCloudAiplatformV1beta1FeatureNoiseSigma;

		/** This is a single float value and will be used to add noise to all the features. Use this field when all features are normalized to have the same distribution: scale to range [0, 1], [-1, 1] or z-scoring, where features are normalized to have 0-mean and 1-variance. Learn more about [normalization](https://developers.google.com/machine-learning/data-prep/transform/normalization). For best results the recommended value is about 10% - 20% of the standard deviation of the input feature. Refer to section 3.2 of the SmoothGrad paper: https://arxiv.org/pdf/1706.03825.pdf. Defaults to 0.1. If the distribution is different per feature, set feature_noise_sigma instead for each feature. */
		noiseSigma?: number | null;

		/** The number of gradient samples to use for approximation. The higher this number, the more accurate the gradient is, but the runtime complexity increases by this factor as well. Valid range of its value is [1, 50]. Defaults to 3. */
		noisySampleCount?: number | null;
	}

	/** Config for SmoothGrad approximation of gradients. When enabled, the gradients are approximated by averaging the gradients from noisy samples in the vicinity of the inputs. Adding noise can help improve the computed gradients. Refer to this paper for more details: https://arxiv.org/pdf/1706.03825.pdf */
	export interface GoogleCloudAiplatformV1beta1SmoothGradConfigFormProperties {

		/** This is a single float value and will be used to add noise to all the features. Use this field when all features are normalized to have the same distribution: scale to range [0, 1], [-1, 1] or z-scoring, where features are normalized to have 0-mean and 1-variance. Learn more about [normalization](https://developers.google.com/machine-learning/data-prep/transform/normalization). For best results the recommended value is about 10% - 20% of the standard deviation of the input feature. Refer to section 3.2 of the SmoothGrad paper: https://arxiv.org/pdf/1706.03825.pdf. Defaults to 0.1. If the distribution is different per feature, set feature_noise_sigma instead for each feature. */
		noiseSigma: FormControl<number | null | undefined>,

		/** The number of gradient samples to use for approximation. The higher this number, the more accurate the gradient is, but the runtime complexity increases by this factor as well. Valid range of its value is [1, 50]. Defaults to 3. */
		noisySampleCount: FormControl<number | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1SmoothGradConfigFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1SmoothGradConfigFormProperties>({
			noiseSigma: new FormControl<number | null | undefined>(undefined),
			noisySampleCount: new FormControl<number | null | undefined>(undefined),
		});

	}


	/** Noise sigma by features. Noise sigma represents the standard deviation of the gaussian kernel that will be used to add noise to interpolated inputs prior to computing gradients. */
	export interface GoogleCloudAiplatformV1beta1FeatureNoiseSigma {

		/** Noise sigma per feature. No noise is added to features that are not set. */
		noiseSigma?: Array<GoogleCloudAiplatformV1beta1FeatureNoiseSigmaNoiseSigmaForFeature>;
	}

	/** Noise sigma by features. Noise sigma represents the standard deviation of the gaussian kernel that will be used to add noise to interpolated inputs prior to computing gradients. */
	export interface GoogleCloudAiplatformV1beta1FeatureNoiseSigmaFormProperties {
	}
	export function CreateGoogleCloudAiplatformV1beta1FeatureNoiseSigmaFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1FeatureNoiseSigmaFormProperties>({
		});

	}


	/** Noise sigma for a single feature. */
	export interface GoogleCloudAiplatformV1beta1FeatureNoiseSigmaNoiseSigmaForFeature {

		/** The name of the input feature for which noise sigma is provided. The features are defined in explanation metadata inputs. */
		name?: string | null;

		/** This represents the standard deviation of the Gaussian kernel that will be used to add noise to the feature prior to computing gradients. Similar to noise_sigma but represents the noise added to the current feature. Defaults to 0.1. */
		sigma?: number | null;
	}

	/** Noise sigma for a single feature. */
	export interface GoogleCloudAiplatformV1beta1FeatureNoiseSigmaNoiseSigmaForFeatureFormProperties {

		/** The name of the input feature for which noise sigma is provided. The features are defined in explanation metadata inputs. */
		name: FormControl<string | null | undefined>,

		/** This represents the standard deviation of the Gaussian kernel that will be used to add noise to the feature prior to computing gradients. Similar to noise_sigma but represents the noise added to the current feature. Defaults to 0.1. */
		sigma: FormControl<number | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1FeatureNoiseSigmaNoiseSigmaForFeatureFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1FeatureNoiseSigmaNoiseSigmaForFeatureFormProperties>({
			name: new FormControl<string | null | undefined>(undefined),
			sigma: new FormControl<number | null | undefined>(undefined),
		});

	}


	/** An attribution method that approximates Shapley values for features that contribute to the label being predicted. A sampling strategy is used to approximate the value rather than considering all subsets of features. */
	export interface GoogleCloudAiplatformV1beta1SampledShapleyAttribution {

		/** Required. The number of feature permutations to consider when approximating the Shapley values. Valid range of its value is [1, 50], inclusively. */
		pathCount?: number | null;
	}

	/** An attribution method that approximates Shapley values for features that contribute to the label being predicted. A sampling strategy is used to approximate the value rather than considering all subsets of features. */
	export interface GoogleCloudAiplatformV1beta1SampledShapleyAttributionFormProperties {

		/** Required. The number of feature permutations to consider when approximating the Shapley values. Valid range of its value is [1, 50], inclusively. */
		pathCount: FormControl<number | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1SampledShapleyAttributionFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1SampledShapleyAttributionFormProperties>({
			pathCount: new FormControl<number | null | undefined>(undefined),
		});

	}


	/** An explanation method that redistributes Integrated Gradients attributions to segmented regions, taking advantage of the model's fully differentiable structure. Refer to this paper for more details: https://arxiv.org/abs/1906.02825 Supported only by image Models. */
	export interface GoogleCloudAiplatformV1beta1XraiAttribution {

		/** Config for blur baseline. When enabled, a linear path from the maximally blurred image to the input image is created. Using a blurred baseline instead of zero (black image) is motivated by the BlurIG approach explained here: https://arxiv.org/abs/2004.03383 */
		blurBaselineConfig?: GoogleCloudAiplatformV1beta1BlurBaselineConfig;

		/** Config for SmoothGrad approximation of gradients. When enabled, the gradients are approximated by averaging the gradients from noisy samples in the vicinity of the inputs. Adding noise can help improve the computed gradients. Refer to this paper for more details: https://arxiv.org/pdf/1706.03825.pdf */
		smoothGradConfig?: GoogleCloudAiplatformV1beta1SmoothGradConfig;

		/** Required. The number of steps for approximating the path integral. A good value to start is 50 and gradually increase until the sum to diff property is met within the desired error range. Valid range of its value is [1, 100], inclusively. */
		stepCount?: number | null;
	}

	/** An explanation method that redistributes Integrated Gradients attributions to segmented regions, taking advantage of the model's fully differentiable structure. Refer to this paper for more details: https://arxiv.org/abs/1906.02825 Supported only by image Models. */
	export interface GoogleCloudAiplatformV1beta1XraiAttributionFormProperties {

		/** Required. The number of steps for approximating the path integral. A good value to start is 50 and gradually increase until the sum to diff property is met within the desired error range. Valid range of its value is [1, 100], inclusively. */
		stepCount: FormControl<number | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1XraiAttributionFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1XraiAttributionFormProperties>({
			stepCount: new FormControl<number | null | undefined>(undefined),
		});

	}


	/** Configures the input to BatchPredictionJob. See Model.supported_input_storage_formats for Model's supported input formats, and how instances should be expressed via any of them. */
	export interface GoogleCloudAiplatformV1beta1BatchPredictionJobInputConfig {

		/** The BigQuery location for the input content. */
		bigquerySource?: GoogleCloudAiplatformV1beta1BigQuerySource;

		/** The Google Cloud Storage location for the input content. */
		gcsSource?: GoogleCloudAiplatformV1beta1GcsSource;

		/** Required. The format in which instances are given, must be one of the Model's supported_input_storage_formats. */
		instancesFormat?: string | null;
	}

	/** Configures the input to BatchPredictionJob. See Model.supported_input_storage_formats for Model's supported input formats, and how instances should be expressed via any of them. */
	export interface GoogleCloudAiplatformV1beta1BatchPredictionJobInputConfigFormProperties {

		/** Required. The format in which instances are given, must be one of the Model's supported_input_storage_formats. */
		instancesFormat: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1BatchPredictionJobInputConfigFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1BatchPredictionJobInputConfigFormProperties>({
			instancesFormat: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** The BigQuery location for the input content. */
	export interface GoogleCloudAiplatformV1beta1BigQuerySource {

		/** Required. BigQuery URI to a table, up to 2000 characters long. Accepted forms: * BigQuery path. For example: `bq://projectId.bqDatasetId.bqTableId`. */
		inputUri?: string | null;
	}

	/** The BigQuery location for the input content. */
	export interface GoogleCloudAiplatformV1beta1BigQuerySourceFormProperties {

		/** Required. BigQuery URI to a table, up to 2000 characters long. Accepted forms: * BigQuery path. For example: `bq://projectId.bqDatasetId.bqTableId`. */
		inputUri: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1BigQuerySourceFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1BigQuerySourceFormProperties>({
			inputUri: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Configuration defining how to transform batch prediction input instances to the instances that the Model accepts. */
	export interface GoogleCloudAiplatformV1beta1BatchPredictionJobInstanceConfig {

		/** Fields that will be excluded in the prediction instance that is sent to the Model. Excluded will be attached to the batch prediction output if key_field is not specified. When excluded_fields is populated, included_fields must be empty. The input must be JSONL with objects at each line, BigQuery or TfRecord. */
		excludedFields?: Array<string>;

		/** Fields that will be included in the prediction instance that is sent to the Model. If instance_type is `array`, the order of field names in included_fields also determines the order of the values in the array. When included_fields is populated, excluded_fields must be empty. The input must be JSONL with objects at each line, BigQuery or TfRecord. */
		includedFields?: Array<string>;

		/** The format of the instance that the Model accepts. Vertex AI will convert compatible batch prediction input instance formats to the specified format. Supported values are: * `object`: Each input is converted to JSON object format. * For `bigquery`, each row is converted to an object. * For `jsonl`, each line of the JSONL input must be an object. * Does not apply to `csv`, `file-list`, `tf-record`, or `tf-record-gzip`. * `array`: Each input is converted to JSON array format. * For `bigquery`, each row is converted to an array. The order of columns is determined by the BigQuery column order, unless included_fields is populated. included_fields must be populated for specifying field orders. * For `jsonl`, if each line of the JSONL input is an object, included_fields must be populated for specifying field orders. * Does not apply to `csv`, `file-list`, `tf-record`, or `tf-record-gzip`. If not specified, Vertex AI converts the batch prediction input as follows: * For `bigquery` and `csv`, the behavior is the same as `array`. The order of columns is the same as defined in the file or table, unless included_fields is populated. * For `jsonl`, the prediction instance format is determined by each line of the input. * For `tf-record`/`tf-record-gzip`, each record will be converted to an object in the format of `{"b64": }`, where `` is the Base64-encoded string of the content of the record. * For `file-list`, each file in the list will be converted to an object in the format of `{"b64": }`, where `` is the Base64-encoded string of the content of the file. */
		instanceType?: string | null;

		/** The name of the field that is considered as a key. The values identified by the key field is not included in the transformed instances that is sent to the Model. This is similar to specifying this name of the field in excluded_fields. In addition, the batch prediction output will not include the instances. Instead the output will only include the value of the key field, in a field named `key` in the output: * For `jsonl` output format, the output will have a `key` field instead of the `instance` field. * For `csv`/`bigquery` output format, the output will have have a `key` column instead of the instance feature columns. The input must be JSONL with objects at each line, CSV, BigQuery or TfRecord. */
		keyField?: string | null;
	}

	/** Configuration defining how to transform batch prediction input instances to the instances that the Model accepts. */
	export interface GoogleCloudAiplatformV1beta1BatchPredictionJobInstanceConfigFormProperties {

		/** The format of the instance that the Model accepts. Vertex AI will convert compatible batch prediction input instance formats to the specified format. Supported values are: * `object`: Each input is converted to JSON object format. * For `bigquery`, each row is converted to an object. * For `jsonl`, each line of the JSONL input must be an object. * Does not apply to `csv`, `file-list`, `tf-record`, or `tf-record-gzip`. * `array`: Each input is converted to JSON array format. * For `bigquery`, each row is converted to an array. The order of columns is determined by the BigQuery column order, unless included_fields is populated. included_fields must be populated for specifying field orders. * For `jsonl`, if each line of the JSONL input is an object, included_fields must be populated for specifying field orders. * Does not apply to `csv`, `file-list`, `tf-record`, or `tf-record-gzip`. If not specified, Vertex AI converts the batch prediction input as follows: * For `bigquery` and `csv`, the behavior is the same as `array`. The order of columns is the same as defined in the file or table, unless included_fields is populated. * For `jsonl`, the prediction instance format is determined by each line of the input. * For `tf-record`/`tf-record-gzip`, each record will be converted to an object in the format of `{"b64": }`, where `` is the Base64-encoded string of the content of the record. * For `file-list`, each file in the list will be converted to an object in the format of `{"b64": }`, where `` is the Base64-encoded string of the content of the file. */
		instanceType: FormControl<string | null | undefined>,

		/** The name of the field that is considered as a key. The values identified by the key field is not included in the transformed instances that is sent to the Model. This is similar to specifying this name of the field in excluded_fields. In addition, the batch prediction output will not include the instances. Instead the output will only include the value of the key field, in a field named `key` in the output: * For `jsonl` output format, the output will have a `key` field instead of the `instance` field. * For `csv`/`bigquery` output format, the output will have have a `key` column instead of the instance feature columns. The input must be JSONL with objects at each line, CSV, BigQuery or TfRecord. */
		keyField: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1BatchPredictionJobInstanceConfigFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1BatchPredictionJobInstanceConfigFormProperties>({
			instanceType: new FormControl<string | null | undefined>(undefined),
			keyField: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Manual batch tuning parameters. */
	export interface GoogleCloudAiplatformV1beta1ManualBatchTuningParameters {

		/** Immutable. The number of the records (e.g. instances) of the operation given in each batch to a machine replica. Machine type, and size of a single record should be considered when setting this parameter, higher value speeds up the batch operation's execution, but too high value will result in a whole batch not fitting in a machine's memory, and the whole operation will fail. The default value is 64. */
		batchSize?: number | null;
	}

	/** Manual batch tuning parameters. */
	export interface GoogleCloudAiplatformV1beta1ManualBatchTuningParametersFormProperties {

		/** Immutable. The number of the records (e.g. instances) of the operation given in each batch to a machine replica. Machine type, and size of a single record should be considered when setting this parameter, higher value speeds up the batch operation's execution, but too high value will result in a whole batch not fitting in a machine's memory, and the whole operation will fail. The default value is 64. */
		batchSize: FormControl<number | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1ManualBatchTuningParametersFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1ManualBatchTuningParametersFormProperties>({
			batchSize: new FormControl<number | null | undefined>(undefined),
		});

	}


	/** The model monitoring configuration used for Batch Prediction Job. */
	export interface GoogleCloudAiplatformV1beta1ModelMonitoringConfig {
		alertConfig?: GoogleCloudAiplatformV1beta1ModelMonitoringAlertConfig;

		/** YAML schema file uri in Cloud Storage describing the format of a single instance that you want Tensorflow Data Validation (TFDV) to analyze. If there are any data type differences between predict instance and TFDV instance, this field can be used to override the schema. For models trained with Vertex AI, this field must be set as all the fields in predict instance formatted as string. */
		analysisInstanceSchemaUri?: string | null;

		/** Model monitoring objective config. */
		objectiveConfigs?: Array<GoogleCloudAiplatformV1beta1ModelMonitoringObjectiveConfig>;

		/** The Google Cloud Storage location where the output is to be written to. */
		statsAnomaliesBaseDirectory?: GoogleCloudAiplatformV1beta1GcsDestination;
	}

	/** The model monitoring configuration used for Batch Prediction Job. */
	export interface GoogleCloudAiplatformV1beta1ModelMonitoringConfigFormProperties {

		/** YAML schema file uri in Cloud Storage describing the format of a single instance that you want Tensorflow Data Validation (TFDV) to analyze. If there are any data type differences between predict instance and TFDV instance, this field can be used to override the schema. For models trained with Vertex AI, this field must be set as all the fields in predict instance formatted as string. */
		analysisInstanceSchemaUri: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1ModelMonitoringConfigFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1ModelMonitoringConfigFormProperties>({
			analysisInstanceSchemaUri: new FormControl<string | null | undefined>(undefined),
		});

	}

	export interface GoogleCloudAiplatformV1beta1ModelMonitoringAlertConfig {

		/** The config for email alert. */
		emailAlertConfig?: GoogleCloudAiplatformV1beta1ModelMonitoringAlertConfigEmailAlertConfig;

		/** Dump the anomalies to Cloud Logging. The anomalies will be put to json payload encoded from proto google.cloud.aiplatform.logging.ModelMonitoringAnomaliesLogEntry. This can be further sinked to Pub/Sub or any other services supported by Cloud Logging. */
		enableLogging?: boolean | null;

		/** Resource names of the NotificationChannels to send alert. Must be of the format `projects//notificationChannels/` */
		notificationChannels?: Array<string>;
	}
	export interface GoogleCloudAiplatformV1beta1ModelMonitoringAlertConfigFormProperties {

		/** Dump the anomalies to Cloud Logging. The anomalies will be put to json payload encoded from proto google.cloud.aiplatform.logging.ModelMonitoringAnomaliesLogEntry. This can be further sinked to Pub/Sub or any other services supported by Cloud Logging. */
		enableLogging: FormControl<boolean | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1ModelMonitoringAlertConfigFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1ModelMonitoringAlertConfigFormProperties>({
			enableLogging: new FormControl<boolean | null | undefined>(undefined),
		});

	}


	/** The config for email alert. */
	export interface GoogleCloudAiplatformV1beta1ModelMonitoringAlertConfigEmailAlertConfig {

		/** The email addresses to send the alert. */
		userEmails?: Array<string>;
	}

	/** The config for email alert. */
	export interface GoogleCloudAiplatformV1beta1ModelMonitoringAlertConfigEmailAlertConfigFormProperties {
	}
	export function CreateGoogleCloudAiplatformV1beta1ModelMonitoringAlertConfigEmailAlertConfigFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1ModelMonitoringAlertConfigEmailAlertConfigFormProperties>({
		});

	}


	/** The objective configuration for model monitoring, including the information needed to detect anomalies for one particular model. */
	export interface GoogleCloudAiplatformV1beta1ModelMonitoringObjectiveConfig {

		/** The config for integrating with Vertex Explainable AI. Only applicable if the Model has explanation_spec populated. */
		explanationConfig?: GoogleCloudAiplatformV1beta1ModelMonitoringObjectiveConfigExplanationConfig;

		/** The config for Prediction data drift detection. */
		predictionDriftDetectionConfig?: GoogleCloudAiplatformV1beta1ModelMonitoringObjectiveConfigPredictionDriftDetectionConfig;

		/** Training Dataset information. */
		trainingDataset?: GoogleCloudAiplatformV1beta1ModelMonitoringObjectiveConfigTrainingDataset;

		/** The config for Training & Prediction data skew detection. It specifies the training dataset sources and the skew detection parameters. */
		trainingPredictionSkewDetectionConfig?: GoogleCloudAiplatformV1beta1ModelMonitoringObjectiveConfigTrainingPredictionSkewDetectionConfig;
	}

	/** The objective configuration for model monitoring, including the information needed to detect anomalies for one particular model. */
	export interface GoogleCloudAiplatformV1beta1ModelMonitoringObjectiveConfigFormProperties {
	}
	export function CreateGoogleCloudAiplatformV1beta1ModelMonitoringObjectiveConfigFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1ModelMonitoringObjectiveConfigFormProperties>({
		});

	}


	/** The config for integrating with Vertex Explainable AI. Only applicable if the Model has explanation_spec populated. */
	export interface GoogleCloudAiplatformV1beta1ModelMonitoringObjectiveConfigExplanationConfig {

		/** If want to analyze the Vertex Explainable AI feature attribute scores or not. If set to true, Vertex AI will log the feature attributions from explain response and do the skew/drift detection for them. */
		enableFeatureAttributes?: boolean | null;

		/** Output from BatchPredictionJob for Model Monitoring baseline dataset, which can be used to generate baseline attribution scores. */
		explanationBaseline?: GoogleCloudAiplatformV1beta1ModelMonitoringObjectiveConfigExplanationConfigExplanationBaseline;
	}

	/** The config for integrating with Vertex Explainable AI. Only applicable if the Model has explanation_spec populated. */
	export interface GoogleCloudAiplatformV1beta1ModelMonitoringObjectiveConfigExplanationConfigFormProperties {

		/** If want to analyze the Vertex Explainable AI feature attribute scores or not. If set to true, Vertex AI will log the feature attributions from explain response and do the skew/drift detection for them. */
		enableFeatureAttributes: FormControl<boolean | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1ModelMonitoringObjectiveConfigExplanationConfigFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1ModelMonitoringObjectiveConfigExplanationConfigFormProperties>({
			enableFeatureAttributes: new FormControl<boolean | null | undefined>(undefined),
		});

	}


	/** Output from BatchPredictionJob for Model Monitoring baseline dataset, which can be used to generate baseline attribution scores. */
	export interface GoogleCloudAiplatformV1beta1ModelMonitoringObjectiveConfigExplanationConfigExplanationBaseline {

		/** The BigQuery location for the output content. */
		bigquery?: GoogleCloudAiplatformV1beta1BigQueryDestination;

		/** The Google Cloud Storage location where the output is to be written to. */
		gcs?: GoogleCloudAiplatformV1beta1GcsDestination;

		/** The storage format of the predictions generated BatchPrediction job. */
		predictionFormat?: GoogleCloudAiplatformV1beta1ModelMonitoringObjectiveConfigExplanationConfigExplanationBaselinePredictionFormat | null;
	}

	/** Output from BatchPredictionJob for Model Monitoring baseline dataset, which can be used to generate baseline attribution scores. */
	export interface GoogleCloudAiplatformV1beta1ModelMonitoringObjectiveConfigExplanationConfigExplanationBaselineFormProperties {

		/** The storage format of the predictions generated BatchPrediction job. */
		predictionFormat: FormControl<GoogleCloudAiplatformV1beta1ModelMonitoringObjectiveConfigExplanationConfigExplanationBaselinePredictionFormat | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1ModelMonitoringObjectiveConfigExplanationConfigExplanationBaselineFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1ModelMonitoringObjectiveConfigExplanationConfigExplanationBaselineFormProperties>({
			predictionFormat: new FormControl<GoogleCloudAiplatformV1beta1ModelMonitoringObjectiveConfigExplanationConfigExplanationBaselinePredictionFormat | null | undefined>(undefined),
		});

	}


	/** The BigQuery location for the output content. */
	export interface GoogleCloudAiplatformV1beta1BigQueryDestination {

		/** Required. BigQuery URI to a project or table, up to 2000 characters long. When only the project is specified, the Dataset and Table is created. When the full table reference is specified, the Dataset must exist and table must not exist. Accepted forms: * BigQuery path. For example: `bq://projectId` or `bq://projectId.bqDatasetId` or `bq://projectId.bqDatasetId.bqTableId`. */
		outputUri?: string | null;
	}

	/** The BigQuery location for the output content. */
	export interface GoogleCloudAiplatformV1beta1BigQueryDestinationFormProperties {

		/** Required. BigQuery URI to a project or table, up to 2000 characters long. When only the project is specified, the Dataset and Table is created. When the full table reference is specified, the Dataset must exist and table must not exist. Accepted forms: * BigQuery path. For example: `bq://projectId` or `bq://projectId.bqDatasetId` or `bq://projectId.bqDatasetId.bqTableId`. */
		outputUri: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1BigQueryDestinationFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1BigQueryDestinationFormProperties>({
			outputUri: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** The Google Cloud Storage location where the output is to be written to. */
	export interface GoogleCloudAiplatformV1beta1GcsDestination {

		/** Required. Google Cloud Storage URI to output directory. If the uri doesn't end with '/', a '/' will be automatically appended. The directory is created if it doesn't exist. */
		outputUriPrefix?: string | null;
	}

	/** The Google Cloud Storage location where the output is to be written to. */
	export interface GoogleCloudAiplatformV1beta1GcsDestinationFormProperties {

		/** Required. Google Cloud Storage URI to output directory. If the uri doesn't end with '/', a '/' will be automatically appended. The directory is created if it doesn't exist. */
		outputUriPrefix: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1GcsDestinationFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1GcsDestinationFormProperties>({
			outputUriPrefix: new FormControl<string | null | undefined>(undefined),
		});

	}

	export enum GoogleCloudAiplatformV1beta1ModelMonitoringObjectiveConfigExplanationConfigExplanationBaselinePredictionFormat { PREDICTION_FORMAT_UNSPECIFIED = 0, JSONL = 1, BIGQUERY = 2 }


	/** The config for Prediction data drift detection. */
	export interface GoogleCloudAiplatformV1beta1ModelMonitoringObjectiveConfigPredictionDriftDetectionConfig {

		/** Key is the feature name and value is the threshold. The threshold here is against attribution score distance between different time windows. */
		attributionScoreDriftThresholds?: {[id: string]: GoogleCloudAiplatformV1beta1ThresholdConfig };

		/** The config for feature monitoring threshold. */
		defaultDriftThreshold?: GoogleCloudAiplatformV1beta1ThresholdConfig;

		/** Key is the feature name and value is the threshold. If a feature needs to be monitored for drift, a value threshold must be configured for that feature. The threshold here is against feature distribution distance between different time windws. */
		driftThresholds?: {[id: string]: GoogleCloudAiplatformV1beta1ThresholdConfig };
	}

	/** The config for Prediction data drift detection. */
	export interface GoogleCloudAiplatformV1beta1ModelMonitoringObjectiveConfigPredictionDriftDetectionConfigFormProperties {

		/** Key is the feature name and value is the threshold. The threshold here is against attribution score distance between different time windows. */
		attributionScoreDriftThresholds: FormControl<{[id: string]: GoogleCloudAiplatformV1beta1ThresholdConfig } | null | undefined>,

		/** Key is the feature name and value is the threshold. If a feature needs to be monitored for drift, a value threshold must be configured for that feature. The threshold here is against feature distribution distance between different time windws. */
		driftThresholds: FormControl<{[id: string]: GoogleCloudAiplatformV1beta1ThresholdConfig } | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1ModelMonitoringObjectiveConfigPredictionDriftDetectionConfigFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1ModelMonitoringObjectiveConfigPredictionDriftDetectionConfigFormProperties>({
			attributionScoreDriftThresholds: new FormControl<{[id: string]: GoogleCloudAiplatformV1beta1ThresholdConfig } | null | undefined>(undefined),
			driftThresholds: new FormControl<{[id: string]: GoogleCloudAiplatformV1beta1ThresholdConfig } | null | undefined>(undefined),
		});

	}


	/** The config for feature monitoring threshold. */
	export interface GoogleCloudAiplatformV1beta1ThresholdConfig {

		/** Specify a threshold value that can trigger the alert. If this threshold config is for feature distribution distance: 1. For categorical feature, the distribution distance is calculated by L-inifinity norm. 2. For numerical feature, the distribution distance is calculated by Jensen–Shannon divergence. Each feature must have a non-zero threshold if they need to be monitored. Otherwise no alert will be triggered for that feature. */
		value?: number | null;
	}

	/** The config for feature monitoring threshold. */
	export interface GoogleCloudAiplatformV1beta1ThresholdConfigFormProperties {

		/** Specify a threshold value that can trigger the alert. If this threshold config is for feature distribution distance: 1. For categorical feature, the distribution distance is calculated by L-inifinity norm. 2. For numerical feature, the distribution distance is calculated by Jensen–Shannon divergence. Each feature must have a non-zero threshold if they need to be monitored. Otherwise no alert will be triggered for that feature. */
		value: FormControl<number | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1ThresholdConfigFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1ThresholdConfigFormProperties>({
			value: new FormControl<number | null | undefined>(undefined),
		});

	}


	/** Training Dataset information. */
	export interface GoogleCloudAiplatformV1beta1ModelMonitoringObjectiveConfigTrainingDataset {

		/** The BigQuery location for the input content. */
		bigquerySource?: GoogleCloudAiplatformV1beta1BigQuerySource;

		/** Data format of the dataset, only applicable if the input is from Google Cloud Storage. The possible formats are: "tf-record" The source file is a TFRecord file. "csv" The source file is a CSV file. "jsonl" The source file is a JSONL file. */
		dataFormat?: string | null;

		/** The resource name of the Dataset used to train this Model. */
		dataset?: string | null;

		/** The Google Cloud Storage location for the input content. */
		gcsSource?: GoogleCloudAiplatformV1beta1GcsSource;

		/** Sampling Strategy for logging, can be for both training and prediction dataset. */
		loggingSamplingStrategy?: GoogleCloudAiplatformV1beta1SamplingStrategy;

		/** The target field name the model is to predict. This field will be excluded when doing Predict and (or) Explain for the training data. */
		targetField?: string | null;
	}

	/** Training Dataset information. */
	export interface GoogleCloudAiplatformV1beta1ModelMonitoringObjectiveConfigTrainingDatasetFormProperties {

		/** Data format of the dataset, only applicable if the input is from Google Cloud Storage. The possible formats are: "tf-record" The source file is a TFRecord file. "csv" The source file is a CSV file. "jsonl" The source file is a JSONL file. */
		dataFormat: FormControl<string | null | undefined>,

		/** The resource name of the Dataset used to train this Model. */
		dataset: FormControl<string | null | undefined>,

		/** The target field name the model is to predict. This field will be excluded when doing Predict and (or) Explain for the training data. */
		targetField: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1ModelMonitoringObjectiveConfigTrainingDatasetFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1ModelMonitoringObjectiveConfigTrainingDatasetFormProperties>({
			dataFormat: new FormControl<string | null | undefined>(undefined),
			dataset: new FormControl<string | null | undefined>(undefined),
			targetField: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Sampling Strategy for logging, can be for both training and prediction dataset. */
	export interface GoogleCloudAiplatformV1beta1SamplingStrategy {

		/** Requests are randomly selected. */
		randomSampleConfig?: GoogleCloudAiplatformV1beta1SamplingStrategyRandomSampleConfig;
	}

	/** Sampling Strategy for logging, can be for both training and prediction dataset. */
	export interface GoogleCloudAiplatformV1beta1SamplingStrategyFormProperties {
	}
	export function CreateGoogleCloudAiplatformV1beta1SamplingStrategyFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1SamplingStrategyFormProperties>({
		});

	}


	/** Requests are randomly selected. */
	export interface GoogleCloudAiplatformV1beta1SamplingStrategyRandomSampleConfig {

		/** Sample rate (0, 1] */
		sampleRate?: number | null;
	}

	/** Requests are randomly selected. */
	export interface GoogleCloudAiplatformV1beta1SamplingStrategyRandomSampleConfigFormProperties {

		/** Sample rate (0, 1] */
		sampleRate: FormControl<number | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1SamplingStrategyRandomSampleConfigFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1SamplingStrategyRandomSampleConfigFormProperties>({
			sampleRate: new FormControl<number | null | undefined>(undefined),
		});

	}


	/** The config for Training & Prediction data skew detection. It specifies the training dataset sources and the skew detection parameters. */
	export interface GoogleCloudAiplatformV1beta1ModelMonitoringObjectiveConfigTrainingPredictionSkewDetectionConfig {

		/** Key is the feature name and value is the threshold. The threshold here is against attribution score distance between the training and prediction feature. */
		attributionScoreSkewThresholds?: {[id: string]: GoogleCloudAiplatformV1beta1ThresholdConfig };

		/** The config for feature monitoring threshold. */
		defaultSkewThreshold?: GoogleCloudAiplatformV1beta1ThresholdConfig;

		/** Key is the feature name and value is the threshold. If a feature needs to be monitored for skew, a value threshold must be configured for that feature. The threshold here is against feature distribution distance between the training and prediction feature. */
		skewThresholds?: {[id: string]: GoogleCloudAiplatformV1beta1ThresholdConfig };
	}

	/** The config for Training & Prediction data skew detection. It specifies the training dataset sources and the skew detection parameters. */
	export interface GoogleCloudAiplatformV1beta1ModelMonitoringObjectiveConfigTrainingPredictionSkewDetectionConfigFormProperties {

		/** Key is the feature name and value is the threshold. The threshold here is against attribution score distance between the training and prediction feature. */
		attributionScoreSkewThresholds: FormControl<{[id: string]: GoogleCloudAiplatformV1beta1ThresholdConfig } | null | undefined>,

		/** Key is the feature name and value is the threshold. If a feature needs to be monitored for skew, a value threshold must be configured for that feature. The threshold here is against feature distribution distance between the training and prediction feature. */
		skewThresholds: FormControl<{[id: string]: GoogleCloudAiplatformV1beta1ThresholdConfig } | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1ModelMonitoringObjectiveConfigTrainingPredictionSkewDetectionConfigFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1ModelMonitoringObjectiveConfigTrainingPredictionSkewDetectionConfigFormProperties>({
			attributionScoreSkewThresholds: new FormControl<{[id: string]: GoogleCloudAiplatformV1beta1ThresholdConfig } | null | undefined>(undefined),
			skewThresholds: new FormControl<{[id: string]: GoogleCloudAiplatformV1beta1ThresholdConfig } | null | undefined>(undefined),
		});

	}


	/** Statistics and anomalies generated by Model Monitoring. */
	export interface GoogleCloudAiplatformV1beta1ModelMonitoringStatsAnomalies {

		/** Number of anomalies within all stats. */
		anomalyCount?: number | null;

		/** Deployed Model ID. */
		deployedModelId?: string | null;

		/** A list of historical Stats and Anomalies generated for all Features. */
		featureStats?: Array<GoogleCloudAiplatformV1beta1ModelMonitoringStatsAnomaliesFeatureHistoricStatsAnomalies>;

		/** Model Monitoring Objective those stats and anomalies belonging to. */
		objective?: GoogleCloudAiplatformV1beta1ModelMonitoringStatsAnomaliesObjective | null;
	}

	/** Statistics and anomalies generated by Model Monitoring. */
	export interface GoogleCloudAiplatformV1beta1ModelMonitoringStatsAnomaliesFormProperties {

		/** Number of anomalies within all stats. */
		anomalyCount: FormControl<number | null | undefined>,

		/** Deployed Model ID. */
		deployedModelId: FormControl<string | null | undefined>,

		/** Model Monitoring Objective those stats and anomalies belonging to. */
		objective: FormControl<GoogleCloudAiplatformV1beta1ModelMonitoringStatsAnomaliesObjective | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1ModelMonitoringStatsAnomaliesFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1ModelMonitoringStatsAnomaliesFormProperties>({
			anomalyCount: new FormControl<number | null | undefined>(undefined),
			deployedModelId: new FormControl<string | null | undefined>(undefined),
			objective: new FormControl<GoogleCloudAiplatformV1beta1ModelMonitoringStatsAnomaliesObjective | null | undefined>(undefined),
		});

	}


	/** Historical Stats (and Anomalies) for a specific Feature. */
	export interface GoogleCloudAiplatformV1beta1ModelMonitoringStatsAnomaliesFeatureHistoricStatsAnomalies {

		/** Display Name of the Feature. */
		featureDisplayName?: string | null;

		/** A list of historical stats generated by different time window's Prediction Dataset. */
		predictionStats?: Array<GoogleCloudAiplatformV1beta1FeatureStatsAnomaly>;

		/** The config for feature monitoring threshold. */
		threshold?: GoogleCloudAiplatformV1beta1ThresholdConfig;

		/** Stats and Anomaly generated at specific timestamp for specific Feature. The start_time and end_time are used to define the time range of the dataset that current stats belongs to, e.g. prediction traffic is bucketed into prediction datasets by time window. If the Dataset is not defined by time window, start_time = end_time. Timestamp of the stats and anomalies always refers to end_time. Raw stats and anomalies are stored in stats_uri or anomaly_uri in the tensorflow defined protos. Field data_stats contains almost identical information with the raw stats in Vertex AI defined proto, for UI to display. */
		trainingStats?: GoogleCloudAiplatformV1beta1FeatureStatsAnomaly;
	}

	/** Historical Stats (and Anomalies) for a specific Feature. */
	export interface GoogleCloudAiplatformV1beta1ModelMonitoringStatsAnomaliesFeatureHistoricStatsAnomaliesFormProperties {

		/** Display Name of the Feature. */
		featureDisplayName: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1ModelMonitoringStatsAnomaliesFeatureHistoricStatsAnomaliesFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1ModelMonitoringStatsAnomaliesFeatureHistoricStatsAnomaliesFormProperties>({
			featureDisplayName: new FormControl<string | null | undefined>(undefined),
		});

	}

	export enum GoogleCloudAiplatformV1beta1ModelMonitoringStatsAnomaliesObjective { MODEL_DEPLOYMENT_MONITORING_OBJECTIVE_TYPE_UNSPECIFIED = 0, RAW_FEATURE_SKEW = 1, RAW_FEATURE_DRIFT = 2, FEATURE_ATTRIBUTION_SKEW = 3, FEATURE_ATTRIBUTION_DRIFT = 4 }


	/** Configures the output of BatchPredictionJob. See Model.supported_output_storage_formats for supported output formats, and how predictions are expressed via any of them. */
	export interface GoogleCloudAiplatformV1beta1BatchPredictionJobOutputConfig {

		/** The BigQuery location for the output content. */
		bigqueryDestination?: GoogleCloudAiplatformV1beta1BigQueryDestination;

		/** The Google Cloud Storage location where the output is to be written to. */
		gcsDestination?: GoogleCloudAiplatformV1beta1GcsDestination;

		/** Required. The format in which Vertex AI gives the predictions, must be one of the Model's supported_output_storage_formats. */
		predictionsFormat?: string | null;
	}

	/** Configures the output of BatchPredictionJob. See Model.supported_output_storage_formats for supported output formats, and how predictions are expressed via any of them. */
	export interface GoogleCloudAiplatformV1beta1BatchPredictionJobOutputConfigFormProperties {

		/** Required. The format in which Vertex AI gives the predictions, must be one of the Model's supported_output_storage_formats. */
		predictionsFormat: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1BatchPredictionJobOutputConfigFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1BatchPredictionJobOutputConfigFormProperties>({
			predictionsFormat: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Further describes this job's output. Supplements output_config. */
	export interface GoogleCloudAiplatformV1beta1BatchPredictionJobOutputInfo {

		/** Output only. The path of the BigQuery dataset created, in `bq://projectId.bqDatasetId` format, into which the prediction output is written. */
		bigqueryOutputDataset?: string | null;

		/** Output only. The name of the BigQuery table created, in `predictions_` format, into which the prediction output is written. Can be used by UI to generate the BigQuery output path, for example. */
		bigqueryOutputTable?: string | null;

		/** Output only. The full path of the Cloud Storage directory created, into which the prediction output is written. */
		gcsOutputDirectory?: string | null;
	}

	/** Further describes this job's output. Supplements output_config. */
	export interface GoogleCloudAiplatformV1beta1BatchPredictionJobOutputInfoFormProperties {

		/** Output only. The path of the BigQuery dataset created, in `bq://projectId.bqDatasetId` format, into which the prediction output is written. */
		bigqueryOutputDataset: FormControl<string | null | undefined>,

		/** Output only. The name of the BigQuery table created, in `predictions_` format, into which the prediction output is written. Can be used by UI to generate the BigQuery output path, for example. */
		bigqueryOutputTable: FormControl<string | null | undefined>,

		/** Output only. The full path of the Cloud Storage directory created, into which the prediction output is written. */
		gcsOutputDirectory: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1BatchPredictionJobOutputInfoFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1BatchPredictionJobOutputInfoFormProperties>({
			bigqueryOutputDataset: new FormControl<string | null | undefined>(undefined),
			bigqueryOutputTable: new FormControl<string | null | undefined>(undefined),
			gcsOutputDirectory: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Statistics information about resource consumption. */
	export interface GoogleCloudAiplatformV1beta1ResourcesConsumed {

		/** Output only. The number of replica hours used. Note that many replicas may run in parallel, and additionally any given work may be queued for some time. Therefore this value is not strictly related to wall time. */
		replicaHours?: number | null;
	}

	/** Statistics information about resource consumption. */
	export interface GoogleCloudAiplatformV1beta1ResourcesConsumedFormProperties {

		/** Output only. The number of replica hours used. Note that many replicas may run in parallel, and additionally any given work may be queued for some time. Therefore this value is not strictly related to wall time. */
		replicaHours: FormControl<number | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1ResourcesConsumedFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1ResourcesConsumedFormProperties>({
			replicaHours: new FormControl<number | null | undefined>(undefined),
		});

	}

	export enum GoogleCloudAiplatformV1beta1BatchPredictionJobState { JOB_STATE_UNSPECIFIED = 0, JOB_STATE_QUEUED = 1, JOB_STATE_PENDING = 2, JOB_STATE_RUNNING = 3, JOB_STATE_SUCCEEDED = 4, JOB_STATE_FAILED = 5, JOB_STATE_CANCELLING = 6, JOB_STATE_CANCELLED = 7, JOB_STATE_PAUSED = 8, JOB_STATE_EXPIRED = 9, JOB_STATE_UPDATING = 10, JOB_STATE_PARTIALLY_SUCCEEDED = 11 }


	/** Contains model information necessary to perform batch prediction without requiring a full model import. */
	export interface GoogleCloudAiplatformV1beta1UnmanagedContainerModel {

		/** The path to the directory containing the Model artifact and any of its supporting files. */
		artifactUri?: string | null;

		/** Specification of a container for serving predictions. Some fields in this message correspond to fields in the [Kubernetes Container v1 core specification](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.23/#container-v1-core). */
		containerSpec?: GoogleCloudAiplatformV1beta1ModelContainerSpec;

		/** Contains the schemata used in Model's predictions and explanations via PredictionService.Predict, PredictionService.Explain and BatchPredictionJob. */
		predictSchemata?: GoogleCloudAiplatformV1beta1PredictSchemata;
	}

	/** Contains model information necessary to perform batch prediction without requiring a full model import. */
	export interface GoogleCloudAiplatformV1beta1UnmanagedContainerModelFormProperties {

		/** The path to the directory containing the Model artifact and any of its supporting files. */
		artifactUri: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1UnmanagedContainerModelFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1UnmanagedContainerModelFormProperties>({
			artifactUri: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Specification of a container for serving predictions. Some fields in this message correspond to fields in the [Kubernetes Container v1 core specification](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.23/#container-v1-core). */
	export interface GoogleCloudAiplatformV1beta1ModelContainerSpec {

		/** Immutable. Specifies arguments for the command that runs when the container starts. This overrides the container's [`CMD`](https://docs.docker.com/engine/reference/builder/#cmd). Specify this field as an array of executable and arguments, similar to a Docker `CMD`'s "default parameters" form. If you don't specify this field but do specify the command field, then the command from the `command` field runs without any additional arguments. See the [Kubernetes documentation about how the `command` and `args` fields interact with a container's `ENTRYPOINT` and `CMD`](https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#notes). If you don't specify this field and don't specify the `command` field, then the container's [`ENTRYPOINT`](https://docs.docker.com/engine/reference/builder/#cmd) and `CMD` determine what runs based on their default behavior. See the Docker documentation about [how `CMD` and `ENTRYPOINT` interact](https://docs.docker.com/engine/reference/builder/#understand-how-cmd-and-entrypoint-interact). In this field, you can reference [environment variables set by Vertex AI](https://cloud.google.com/vertex-ai/docs/predictions/custom-container-requirements#aip-variables) and environment variables set in the env field. You cannot reference environment variables set in the Docker image. In order for environment variables to be expanded, reference them by using the following syntax: $( VARIABLE_NAME) Note that this differs from Bash variable expansion, which does not use parentheses. If a variable cannot be resolved, the reference in the input string is used unchanged. To avoid variable expansion, you can escape this syntax with `$$`; for example: $$(VARIABLE_NAME) This field corresponds to the `args` field of the Kubernetes Containers [v1 core API](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.23/#container-v1-core). */
		args?: Array<string>;

		/** Immutable. Specifies the command that runs when the container starts. This overrides the container's [ENTRYPOINT](https://docs.docker.com/engine/reference/builder/#entrypoint). Specify this field as an array of executable and arguments, similar to a Docker `ENTRYPOINT`'s "exec" form, not its "shell" form. If you do not specify this field, then the container's `ENTRYPOINT` runs, in conjunction with the args field or the container's [`CMD`](https://docs.docker.com/engine/reference/builder/#cmd), if either exists. If this field is not specified and the container does not have an `ENTRYPOINT`, then refer to the Docker documentation about [how `CMD` and `ENTRYPOINT` interact](https://docs.docker.com/engine/reference/builder/#understand-how-cmd-and-entrypoint-interact). If you specify this field, then you can also specify the `args` field to provide additional arguments for this command. However, if you specify this field, then the container's `CMD` is ignored. See the [Kubernetes documentation about how the `command` and `args` fields interact with a container's `ENTRYPOINT` and `CMD`](https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#notes). In this field, you can reference [environment variables set by Vertex AI](https://cloud.google.com/vertex-ai/docs/predictions/custom-container-requirements#aip-variables) and environment variables set in the env field. You cannot reference environment variables set in the Docker image. In order for environment variables to be expanded, reference them by using the following syntax: $( VARIABLE_NAME) Note that this differs from Bash variable expansion, which does not use parentheses. If a variable cannot be resolved, the reference in the input string is used unchanged. To avoid variable expansion, you can escape this syntax with `$$`; for example: $$(VARIABLE_NAME) This field corresponds to the `command` field of the Kubernetes Containers [v1 core API](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.23/#container-v1-core). */
		command?: Array<string>;

		/** Immutable. Deployment timeout. Limit for deployment timeout is 2 hours. */
		deploymentTimeout?: string | null;

		/** Immutable. List of environment variables to set in the container. After the container starts running, code running in the container can read these environment variables. Additionally, the command and args fields can reference these variables. Later entries in this list can also reference earlier entries. For example, the following example sets the variable `VAR_2` to have the value `foo bar`: ```json [ { "name": "VAR_1", "value": "foo" }, { "name": "VAR_2", "value": "$(VAR_1) bar" } ] ``` If you switch the order of the variables in the example, then the expansion does not occur. This field corresponds to the `env` field of the Kubernetes Containers [v1 core API](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.23/#container-v1-core). */
		env?: Array<GoogleCloudAiplatformV1beta1EnvVar>;

		/** Immutable. List of ports to expose from the container. Vertex AI sends gRPC prediction requests that it receives to the first port on this list. Vertex AI also sends liveness and health checks to this port. If you do not specify this field, gRPC requests to the container will be disabled. Vertex AI does not use ports other than the first one listed. This field corresponds to the `ports` field of the Kubernetes Containers v1 core API. */
		grpcPorts?: Array<GoogleCloudAiplatformV1beta1Port>;

		/** Probe describes a health check to be performed against a container to determine whether it is alive or ready to receive traffic. */
		healthProbe?: GoogleCloudAiplatformV1beta1Probe;

		/** Immutable. HTTP path on the container to send health checks to. Vertex AI intermittently sends GET requests to this path on the container's IP address and port to check that the container is healthy. Read more about [health checks](https://cloud.google.com/vertex-ai/docs/predictions/custom-container-requirements#health). For example, if you set this field to `/bar`, then Vertex AI intermittently sends a GET request to the `/bar` path on the port of your container specified by the first value of this `ModelContainerSpec`'s ports field. If you don't specify this field, it defaults to the following value when you deploy this Model to an Endpoint: /v1/endpoints/ENDPOINT/deployedModels/ DEPLOYED_MODEL:predict The placeholders in this value are replaced as follows: * ENDPOINT: The last segment (following `endpoints/`)of the Endpoint.name][] field of the Endpoint where this Model has been deployed. (Vertex AI makes this value available to your container code as the [`AIP_ENDPOINT_ID` environment variable](https://cloud.google.com/vertex-ai/docs/predictions/custom-container-requirements#aip-variables).) * DEPLOYED_MODEL: DeployedModel.id of the `DeployedModel`. (Vertex AI makes this value available to your container code as the [`AIP_DEPLOYED_MODEL_ID` environment variable](https://cloud.google.com/vertex-ai/docs/predictions/custom-container-requirements#aip-variables).) */
		healthRoute?: string | null;

		/** Required. Immutable. URI of the Docker image to be used as the custom container for serving predictions. This URI must identify an image in Artifact Registry or Container Registry. Learn more about the [container publishing requirements](https://cloud.google.com/vertex-ai/docs/predictions/custom-container-requirements#publishing), including permissions requirements for the Vertex AI Service Agent. The container image is ingested upon ModelService.UploadModel, stored internally, and this original path is afterwards not used. To learn about the requirements for the Docker image itself, see [Custom container requirements](https://cloud.google.com/vertex-ai/docs/predictions/custom-container-requirements#). You can use the URI to one of Vertex AI's [pre-built container images for prediction](https://cloud.google.com/vertex-ai/docs/predictions/pre-built-containers) in this field. */
		imageUri?: string | null;

		/** Immutable. List of ports to expose from the container. Vertex AI sends any prediction requests that it receives to the first port on this list. Vertex AI also sends [liveness and health checks](https://cloud.google.com/vertex-ai/docs/predictions/custom-container-requirements#liveness) to this port. If you do not specify this field, it defaults to following value: ```json [ { "containerPort": 8080 } ] ``` Vertex AI does not use ports other than the first one listed. This field corresponds to the `ports` field of the Kubernetes Containers [v1 core API](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.23/#container-v1-core). */
		ports?: Array<GoogleCloudAiplatformV1beta1Port>;

		/** Immutable. HTTP path on the container to send prediction requests to. Vertex AI forwards requests sent using projects.locations.endpoints.predict to this path on the container's IP address and port. Vertex AI then returns the container's response in the API response. For example, if you set this field to `/foo`, then when Vertex AI receives a prediction request, it forwards the request body in a POST request to the `/foo` path on the port of your container specified by the first value of this `ModelContainerSpec`'s ports field. If you don't specify this field, it defaults to the following value when you deploy this Model to an Endpoint: /v1/endpoints/ENDPOINT/deployedModels/DEPLOYED_MODEL:predict The placeholders in this value are replaced as follows: * ENDPOINT: The last segment (following `endpoints/`)of the Endpoint.name][] field of the Endpoint where this Model has been deployed. (Vertex AI makes this value available to your container code as the [`AIP_ENDPOINT_ID` environment variable](https://cloud.google.com/vertex-ai/docs/predictions/custom-container-requirements#aip-variables).) * DEPLOYED_MODEL: DeployedModel.id of the `DeployedModel`. (Vertex AI makes this value available to your container code as the [`AIP_DEPLOYED_MODEL_ID` environment variable](https://cloud.google.com/vertex-ai/docs/predictions/custom-container-requirements#aip-variables).) */
		predictRoute?: string | null;

		/** Immutable. The amount of the VM memory to reserve as the shared memory for the model in megabytes. */
		sharedMemorySizeMb?: string | null;

		/** Probe describes a health check to be performed against a container to determine whether it is alive or ready to receive traffic. */
		startupProbe?: GoogleCloudAiplatformV1beta1Probe;
	}

	/** Specification of a container for serving predictions. Some fields in this message correspond to fields in the [Kubernetes Container v1 core specification](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.23/#container-v1-core). */
	export interface GoogleCloudAiplatformV1beta1ModelContainerSpecFormProperties {

		/** Immutable. Deployment timeout. Limit for deployment timeout is 2 hours. */
		deploymentTimeout: FormControl<string | null | undefined>,

		/** Immutable. HTTP path on the container to send health checks to. Vertex AI intermittently sends GET requests to this path on the container's IP address and port to check that the container is healthy. Read more about [health checks](https://cloud.google.com/vertex-ai/docs/predictions/custom-container-requirements#health). For example, if you set this field to `/bar`, then Vertex AI intermittently sends a GET request to the `/bar` path on the port of your container specified by the first value of this `ModelContainerSpec`'s ports field. If you don't specify this field, it defaults to the following value when you deploy this Model to an Endpoint: /v1/endpoints/ENDPOINT/deployedModels/ DEPLOYED_MODEL:predict The placeholders in this value are replaced as follows: * ENDPOINT: The last segment (following `endpoints/`)of the Endpoint.name][] field of the Endpoint where this Model has been deployed. (Vertex AI makes this value available to your container code as the [`AIP_ENDPOINT_ID` environment variable](https://cloud.google.com/vertex-ai/docs/predictions/custom-container-requirements#aip-variables).) * DEPLOYED_MODEL: DeployedModel.id of the `DeployedModel`. (Vertex AI makes this value available to your container code as the [`AIP_DEPLOYED_MODEL_ID` environment variable](https://cloud.google.com/vertex-ai/docs/predictions/custom-container-requirements#aip-variables).) */
		healthRoute: FormControl<string | null | undefined>,

		/** Required. Immutable. URI of the Docker image to be used as the custom container for serving predictions. This URI must identify an image in Artifact Registry or Container Registry. Learn more about the [container publishing requirements](https://cloud.google.com/vertex-ai/docs/predictions/custom-container-requirements#publishing), including permissions requirements for the Vertex AI Service Agent. The container image is ingested upon ModelService.UploadModel, stored internally, and this original path is afterwards not used. To learn about the requirements for the Docker image itself, see [Custom container requirements](https://cloud.google.com/vertex-ai/docs/predictions/custom-container-requirements#). You can use the URI to one of Vertex AI's [pre-built container images for prediction](https://cloud.google.com/vertex-ai/docs/predictions/pre-built-containers) in this field. */
		imageUri: FormControl<string | null | undefined>,

		/** Immutable. HTTP path on the container to send prediction requests to. Vertex AI forwards requests sent using projects.locations.endpoints.predict to this path on the container's IP address and port. Vertex AI then returns the container's response in the API response. For example, if you set this field to `/foo`, then when Vertex AI receives a prediction request, it forwards the request body in a POST request to the `/foo` path on the port of your container specified by the first value of this `ModelContainerSpec`'s ports field. If you don't specify this field, it defaults to the following value when you deploy this Model to an Endpoint: /v1/endpoints/ENDPOINT/deployedModels/DEPLOYED_MODEL:predict The placeholders in this value are replaced as follows: * ENDPOINT: The last segment (following `endpoints/`)of the Endpoint.name][] field of the Endpoint where this Model has been deployed. (Vertex AI makes this value available to your container code as the [`AIP_ENDPOINT_ID` environment variable](https://cloud.google.com/vertex-ai/docs/predictions/custom-container-requirements#aip-variables).) * DEPLOYED_MODEL: DeployedModel.id of the `DeployedModel`. (Vertex AI makes this value available to your container code as the [`AIP_DEPLOYED_MODEL_ID` environment variable](https://cloud.google.com/vertex-ai/docs/predictions/custom-container-requirements#aip-variables).) */
		predictRoute: FormControl<string | null | undefined>,

		/** Immutable. The amount of the VM memory to reserve as the shared memory for the model in megabytes. */
		sharedMemorySizeMb: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1ModelContainerSpecFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1ModelContainerSpecFormProperties>({
			deploymentTimeout: new FormControl<string | null | undefined>(undefined),
			healthRoute: new FormControl<string | null | undefined>(undefined),
			imageUri: new FormControl<string | null | undefined>(undefined),
			predictRoute: new FormControl<string | null | undefined>(undefined),
			sharedMemorySizeMb: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Represents an environment variable present in a Container or Python Module. */
	export interface GoogleCloudAiplatformV1beta1EnvVar {

		/** Required. Name of the environment variable. Must be a valid C identifier. */
		name?: string | null;

		/** Required. Variables that reference a $(VAR_NAME) are expanded using the previous defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. */
		value?: string | null;
	}

	/** Represents an environment variable present in a Container or Python Module. */
	export interface GoogleCloudAiplatformV1beta1EnvVarFormProperties {

		/** Required. Name of the environment variable. Must be a valid C identifier. */
		name: FormControl<string | null | undefined>,

		/** Required. Variables that reference a $(VAR_NAME) are expanded using the previous defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. */
		value: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1EnvVarFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1EnvVarFormProperties>({
			name: new FormControl<string | null | undefined>(undefined),
			value: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Represents a network port in a container. */
	export interface GoogleCloudAiplatformV1beta1Port {

		/** The number of the port to expose on the pod's IP address. Must be a valid port number, between 1 and 65535 inclusive. */
		containerPort?: number | null;
	}

	/** Represents a network port in a container. */
	export interface GoogleCloudAiplatformV1beta1PortFormProperties {

		/** The number of the port to expose on the pod's IP address. Must be a valid port number, between 1 and 65535 inclusive. */
		containerPort: FormControl<number | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1PortFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1PortFormProperties>({
			containerPort: new FormControl<number | null | undefined>(undefined),
		});

	}


	/** Probe describes a health check to be performed against a container to determine whether it is alive or ready to receive traffic. */
	export interface GoogleCloudAiplatformV1beta1Probe {

		/** ExecAction specifies a command to execute. */
		exec?: GoogleCloudAiplatformV1beta1ProbeExecAction;

		/** How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1. Must be less than timeout_seconds. Maps to Kubernetes probe argument 'periodSeconds'. */
		periodSeconds?: number | null;

		/** Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. Must be greater or equal to period_seconds. Maps to Kubernetes probe argument 'timeoutSeconds'. */
		timeoutSeconds?: number | null;
	}

	/** Probe describes a health check to be performed against a container to determine whether it is alive or ready to receive traffic. */
	export interface GoogleCloudAiplatformV1beta1ProbeFormProperties {

		/** How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1. Must be less than timeout_seconds. Maps to Kubernetes probe argument 'periodSeconds'. */
		periodSeconds: FormControl<number | null | undefined>,

		/** Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. Must be greater or equal to period_seconds. Maps to Kubernetes probe argument 'timeoutSeconds'. */
		timeoutSeconds: FormControl<number | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1ProbeFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1ProbeFormProperties>({
			periodSeconds: new FormControl<number | null | undefined>(undefined),
			timeoutSeconds: new FormControl<number | null | undefined>(undefined),
		});

	}


	/** ExecAction specifies a command to execute. */
	export interface GoogleCloudAiplatformV1beta1ProbeExecAction {

		/** Command is the command line to execute inside the container, the working directory for the command is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy. */
		command?: Array<string>;
	}

	/** ExecAction specifies a command to execute. */
	export interface GoogleCloudAiplatformV1beta1ProbeExecActionFormProperties {
	}
	export function CreateGoogleCloudAiplatformV1beta1ProbeExecActionFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1ProbeExecActionFormProperties>({
		});

	}


	/** Contains the schemata used in Model's predictions and explanations via PredictionService.Predict, PredictionService.Explain and BatchPredictionJob. */
	export interface GoogleCloudAiplatformV1beta1PredictSchemata {

		/** Immutable. Points to a YAML file stored on Google Cloud Storage describing the format of a single instance, which are used in PredictRequest.instances, ExplainRequest.instances and BatchPredictionJob.input_config. The schema is defined as an OpenAPI 3.0.2 [Schema Object](https://github.com/OAI/OpenAPI-Specification/blob/main/versions/3.0.2.md#schemaObject). AutoML Models always have this field populated by Vertex AI. Note: The URI given on output will be immutable and probably different, including the URI scheme, than the one given on input. The output URI will point to a location where the user only has a read access. */
		instanceSchemaUri?: string | null;

		/** Immutable. Points to a YAML file stored on Google Cloud Storage describing the parameters of prediction and explanation via PredictRequest.parameters, ExplainRequest.parameters and BatchPredictionJob.model_parameters. The schema is defined as an OpenAPI 3.0.2 [Schema Object](https://github.com/OAI/OpenAPI-Specification/blob/main/versions/3.0.2.md#schemaObject). AutoML Models always have this field populated by Vertex AI, if no parameters are supported, then it is set to an empty string. Note: The URI given on output will be immutable and probably different, including the URI scheme, than the one given on input. The output URI will point to a location where the user only has a read access. */
		parametersSchemaUri?: string | null;

		/** Immutable. Points to a YAML file stored on Google Cloud Storage describing the format of a single prediction produced by this Model, which are returned via PredictResponse.predictions, ExplainResponse.explanations, and BatchPredictionJob.output_config. The schema is defined as an OpenAPI 3.0.2 [Schema Object](https://github.com/OAI/OpenAPI-Specification/blob/main/versions/3.0.2.md#schemaObject). AutoML Models always have this field populated by Vertex AI. Note: The URI given on output will be immutable and probably different, including the URI scheme, than the one given on input. The output URI will point to a location where the user only has a read access. */
		predictionSchemaUri?: string | null;
	}

	/** Contains the schemata used in Model's predictions and explanations via PredictionService.Predict, PredictionService.Explain and BatchPredictionJob. */
	export interface GoogleCloudAiplatformV1beta1PredictSchemataFormProperties {

		/** Immutable. Points to a YAML file stored on Google Cloud Storage describing the format of a single instance, which are used in PredictRequest.instances, ExplainRequest.instances and BatchPredictionJob.input_config. The schema is defined as an OpenAPI 3.0.2 [Schema Object](https://github.com/OAI/OpenAPI-Specification/blob/main/versions/3.0.2.md#schemaObject). AutoML Models always have this field populated by Vertex AI. Note: The URI given on output will be immutable and probably different, including the URI scheme, than the one given on input. The output URI will point to a location where the user only has a read access. */
		instanceSchemaUri: FormControl<string | null | undefined>,

		/** Immutable. Points to a YAML file stored on Google Cloud Storage describing the parameters of prediction and explanation via PredictRequest.parameters, ExplainRequest.parameters and BatchPredictionJob.model_parameters. The schema is defined as an OpenAPI 3.0.2 [Schema Object](https://github.com/OAI/OpenAPI-Specification/blob/main/versions/3.0.2.md#schemaObject). AutoML Models always have this field populated by Vertex AI, if no parameters are supported, then it is set to an empty string. Note: The URI given on output will be immutable and probably different, including the URI scheme, than the one given on input. The output URI will point to a location where the user only has a read access. */
		parametersSchemaUri: FormControl<string | null | undefined>,

		/** Immutable. Points to a YAML file stored on Google Cloud Storage describing the format of a single prediction produced by this Model, which are returned via PredictResponse.predictions, ExplainResponse.explanations, and BatchPredictionJob.output_config. The schema is defined as an OpenAPI 3.0.2 [Schema Object](https://github.com/OAI/OpenAPI-Specification/blob/main/versions/3.0.2.md#schemaObject). AutoML Models always have this field populated by Vertex AI. Note: The URI given on output will be immutable and probably different, including the URI scheme, than the one given on input. The output URI will point to a location where the user only has a read access. */
		predictionSchemaUri: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1PredictSchemataFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1PredictSchemataFormProperties>({
			instanceSchemaUri: new FormControl<string | null | undefined>(undefined),
			parametersSchemaUri: new FormControl<string | null | undefined>(undefined),
			predictionSchemaUri: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Details of operations that batch reads Feature values. */
	export interface GoogleCloudAiplatformV1beta1BatchReadFeatureValuesOperationMetadata {

		/** Generic Metadata shared by all operations. */
		genericMetadata?: GoogleCloudAiplatformV1beta1GenericOperationMetadata;
	}

	/** Details of operations that batch reads Feature values. */
	export interface GoogleCloudAiplatformV1beta1BatchReadFeatureValuesOperationMetadataFormProperties {
	}
	export function CreateGoogleCloudAiplatformV1beta1BatchReadFeatureValuesOperationMetadataFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1BatchReadFeatureValuesOperationMetadataFormProperties>({
		});

	}


	/** Request message for FeaturestoreService.BatchReadFeatureValues. */
	export interface GoogleCloudAiplatformV1beta1BatchReadFeatureValuesRequest {

		/** The BigQuery location for the input content. */
		bigqueryReadInstances?: GoogleCloudAiplatformV1beta1BigQuerySource;

		/** The storage details for CSV input content. */
		csvReadInstances?: GoogleCloudAiplatformV1beta1CsvSource;

		/** A destination location for Feature values and format. */
		destination?: GoogleCloudAiplatformV1beta1FeatureValueDestination;

		/** Required. Specifies EntityType grouping Features to read values of and settings. */
		entityTypeSpecs?: Array<GoogleCloudAiplatformV1beta1BatchReadFeatureValuesRequestEntityTypeSpec>;

		/** When not empty, the specified fields in the *_read_instances source will be joined as-is in the output, in addition to those fields from the Featurestore Entity. For BigQuery source, the type of the pass-through values will be automatically inferred. For CSV source, the pass-through values will be passed as opaque bytes. */
		passThroughFields?: Array<GoogleCloudAiplatformV1beta1BatchReadFeatureValuesRequestPassThroughField>;

		/** Optional. Excludes Feature values with feature generation timestamp before this timestamp. If not set, retrieve oldest values kept in Feature Store. Timestamp, if present, must not have higher than millisecond precision. */
		startTime?: string | null;
	}

	/** Request message for FeaturestoreService.BatchReadFeatureValues. */
	export interface GoogleCloudAiplatformV1beta1BatchReadFeatureValuesRequestFormProperties {

		/** Optional. Excludes Feature values with feature generation timestamp before this timestamp. If not set, retrieve oldest values kept in Feature Store. Timestamp, if present, must not have higher than millisecond precision. */
		startTime: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1BatchReadFeatureValuesRequestFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1BatchReadFeatureValuesRequestFormProperties>({
			startTime: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** The storage details for CSV input content. */
	export interface GoogleCloudAiplatformV1beta1CsvSource {

		/** The Google Cloud Storage location for the input content. */
		gcsSource?: GoogleCloudAiplatformV1beta1GcsSource;
	}

	/** The storage details for CSV input content. */
	export interface GoogleCloudAiplatformV1beta1CsvSourceFormProperties {
	}
	export function CreateGoogleCloudAiplatformV1beta1CsvSourceFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1CsvSourceFormProperties>({
		});

	}


	/** A destination location for Feature values and format. */
	export interface GoogleCloudAiplatformV1beta1FeatureValueDestination {

		/** The BigQuery location for the output content. */
		bigqueryDestination?: GoogleCloudAiplatformV1beta1BigQueryDestination;

		/** The storage details for CSV output content. */
		csvDestination?: GoogleCloudAiplatformV1beta1CsvDestination;

		/** The storage details for TFRecord output content. */
		tfrecordDestination?: GoogleCloudAiplatformV1beta1TFRecordDestination;
	}

	/** A destination location for Feature values and format. */
	export interface GoogleCloudAiplatformV1beta1FeatureValueDestinationFormProperties {
	}
	export function CreateGoogleCloudAiplatformV1beta1FeatureValueDestinationFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1FeatureValueDestinationFormProperties>({
		});

	}


	/** The storage details for CSV output content. */
	export interface GoogleCloudAiplatformV1beta1CsvDestination {

		/** The Google Cloud Storage location where the output is to be written to. */
		gcsDestination?: GoogleCloudAiplatformV1beta1GcsDestination;
	}

	/** The storage details for CSV output content. */
	export interface GoogleCloudAiplatformV1beta1CsvDestinationFormProperties {
	}
	export function CreateGoogleCloudAiplatformV1beta1CsvDestinationFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1CsvDestinationFormProperties>({
		});

	}


	/** The storage details for TFRecord output content. */
	export interface GoogleCloudAiplatformV1beta1TFRecordDestination {

		/** The Google Cloud Storage location where the output is to be written to. */
		gcsDestination?: GoogleCloudAiplatformV1beta1GcsDestination;
	}

	/** The storage details for TFRecord output content. */
	export interface GoogleCloudAiplatformV1beta1TFRecordDestinationFormProperties {
	}
	export function CreateGoogleCloudAiplatformV1beta1TFRecordDestinationFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1TFRecordDestinationFormProperties>({
		});

	}


	/** Selects Features of an EntityType to read values of and specifies read settings. */
	export interface GoogleCloudAiplatformV1beta1BatchReadFeatureValuesRequestEntityTypeSpec {

		/** Required. ID of the EntityType to select Features. The EntityType id is the entity_type_id specified during EntityType creation. */
		entityTypeId?: string | null;

		/** Selector for Features of an EntityType. */
		featureSelector?: GoogleCloudAiplatformV1beta1FeatureSelector;

		/** Per-Feature settings for the batch read. */
		settings?: Array<GoogleCloudAiplatformV1beta1DestinationFeatureSetting>;
	}

	/** Selects Features of an EntityType to read values of and specifies read settings. */
	export interface GoogleCloudAiplatformV1beta1BatchReadFeatureValuesRequestEntityTypeSpecFormProperties {

		/** Required. ID of the EntityType to select Features. The EntityType id is the entity_type_id specified during EntityType creation. */
		entityTypeId: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1BatchReadFeatureValuesRequestEntityTypeSpecFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1BatchReadFeatureValuesRequestEntityTypeSpecFormProperties>({
			entityTypeId: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Selector for Features of an EntityType. */
	export interface GoogleCloudAiplatformV1beta1FeatureSelector {

		/** Matcher for Features of an EntityType by Feature ID. */
		idMatcher?: GoogleCloudAiplatformV1beta1IdMatcher;
	}

	/** Selector for Features of an EntityType. */
	export interface GoogleCloudAiplatformV1beta1FeatureSelectorFormProperties {
	}
	export function CreateGoogleCloudAiplatformV1beta1FeatureSelectorFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1FeatureSelectorFormProperties>({
		});

	}


	/** Matcher for Features of an EntityType by Feature ID. */
	export interface GoogleCloudAiplatformV1beta1IdMatcher {

		/** Required. The following are accepted as `ids`: * A single-element list containing only `*`, which selects all Features in the target EntityType, or * A list containing only Feature IDs, which selects only Features with those IDs in the target EntityType. */
		ids?: Array<string>;
	}

	/** Matcher for Features of an EntityType by Feature ID. */
	export interface GoogleCloudAiplatformV1beta1IdMatcherFormProperties {
	}
	export function CreateGoogleCloudAiplatformV1beta1IdMatcherFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1IdMatcherFormProperties>({
		});

	}

	export interface GoogleCloudAiplatformV1beta1DestinationFeatureSetting {

		/** Specify the field name in the export destination. If not specified, Feature ID is used. */
		destinationField?: string | null;

		/** Required. The ID of the Feature to apply the setting to. */
		featureId?: string | null;
	}
	export interface GoogleCloudAiplatformV1beta1DestinationFeatureSettingFormProperties {

		/** Specify the field name in the export destination. If not specified, Feature ID is used. */
		destinationField: FormControl<string | null | undefined>,

		/** Required. The ID of the Feature to apply the setting to. */
		featureId: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1DestinationFeatureSettingFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1DestinationFeatureSettingFormProperties>({
			destinationField: new FormControl<string | null | undefined>(undefined),
			featureId: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Describe pass-through fields in read_instance source. */
	export interface GoogleCloudAiplatformV1beta1BatchReadFeatureValuesRequestPassThroughField {

		/** Required. The name of the field in the CSV header or the name of the column in BigQuery table. The naming restriction is the same as Feature.name. */
		fieldName?: string | null;
	}

	/** Describe pass-through fields in read_instance source. */
	export interface GoogleCloudAiplatformV1beta1BatchReadFeatureValuesRequestPassThroughFieldFormProperties {

		/** Required. The name of the field in the CSV header or the name of the column in BigQuery table. The naming restriction is the same as Feature.name. */
		fieldName: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1BatchReadFeatureValuesRequestPassThroughFieldFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1BatchReadFeatureValuesRequestPassThroughFieldFormProperties>({
			fieldName: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Response message for FeaturestoreService.BatchReadFeatureValues. */
	export interface GoogleCloudAiplatformV1beta1BatchReadFeatureValuesResponse {
	}

	/** Response message for FeaturestoreService.BatchReadFeatureValues. */
	export interface GoogleCloudAiplatformV1beta1BatchReadFeatureValuesResponseFormProperties {
	}
	export function CreateGoogleCloudAiplatformV1beta1BatchReadFeatureValuesResponseFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1BatchReadFeatureValuesResponseFormProperties>({
		});

	}


	/** Response message for TensorboardService.BatchReadTensorboardTimeSeriesData. */
	export interface GoogleCloudAiplatformV1beta1BatchReadTensorboardTimeSeriesDataResponse {

		/** The returned time series data. */
		timeSeriesData?: Array<GoogleCloudAiplatformV1beta1TimeSeriesData>;
	}

	/** Response message for TensorboardService.BatchReadTensorboardTimeSeriesData. */
	export interface GoogleCloudAiplatformV1beta1BatchReadTensorboardTimeSeriesDataResponseFormProperties {
	}
	export function CreateGoogleCloudAiplatformV1beta1BatchReadTensorboardTimeSeriesDataResponseFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1BatchReadTensorboardTimeSeriesDataResponseFormProperties>({
		});

	}


	/** All the data stored in a TensorboardTimeSeries. */
	export interface GoogleCloudAiplatformV1beta1TimeSeriesData {

		/** Required. The ID of the TensorboardTimeSeries, which will become the final component of the TensorboardTimeSeries' resource name */
		tensorboardTimeSeriesId?: string | null;

		/** Required. Immutable. The value type of this time series. All the values in this time series data must match this value type. */
		valueType?: GoogleCloudAiplatformV1beta1TensorboardTimeSeriesValueType | null;

		/** Required. Data points in this time series. */
		values?: Array<GoogleCloudAiplatformV1beta1TimeSeriesDataPoint>;
	}

	/** All the data stored in a TensorboardTimeSeries. */
	export interface GoogleCloudAiplatformV1beta1TimeSeriesDataFormProperties {

		/** Required. The ID of the TensorboardTimeSeries, which will become the final component of the TensorboardTimeSeries' resource name */
		tensorboardTimeSeriesId: FormControl<string | null | undefined>,

		/** Required. Immutable. The value type of this time series. All the values in this time series data must match this value type. */
		valueType: FormControl<GoogleCloudAiplatformV1beta1TensorboardTimeSeriesValueType | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1TimeSeriesDataFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1TimeSeriesDataFormProperties>({
			tensorboardTimeSeriesId: new FormControl<string | null | undefined>(undefined),
			valueType: new FormControl<GoogleCloudAiplatformV1beta1TensorboardTimeSeriesValueType | null | undefined>(undefined),
		});

	}


	/** A TensorboardTimeSeries data point. */
	export interface GoogleCloudAiplatformV1beta1TimeSeriesDataPoint {

		/** One point viewable on a blob metric plot, but mostly just a wrapper message to work around repeated fields can't be used directly within `oneof` fields. */
		blobs?: GoogleCloudAiplatformV1beta1TensorboardBlobSequence;

		/** One point viewable on a scalar metric plot. */
		scalar?: GoogleCloudAiplatformV1beta1Scalar;

		/** Step index of this data point within the run. */
		step?: string | null;

		/** One point viewable on a tensor metric plot. */
		tensor?: GoogleCloudAiplatformV1beta1TensorboardTensor;

		/** Wall clock timestamp when this data point is generated by the end user. */
		wallTime?: string | null;
	}

	/** A TensorboardTimeSeries data point. */
	export interface GoogleCloudAiplatformV1beta1TimeSeriesDataPointFormProperties {

		/** Step index of this data point within the run. */
		step: FormControl<string | null | undefined>,

		/** Wall clock timestamp when this data point is generated by the end user. */
		wallTime: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1TimeSeriesDataPointFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1TimeSeriesDataPointFormProperties>({
			step: new FormControl<string | null | undefined>(undefined),
			wallTime: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** One point viewable on a blob metric plot, but mostly just a wrapper message to work around repeated fields can't be used directly within `oneof` fields. */
	export interface GoogleCloudAiplatformV1beta1TensorboardBlobSequence {

		/** List of blobs contained within the sequence. */
		values?: Array<GoogleCloudAiplatformV1beta1TensorboardBlob>;
	}

	/** One point viewable on a blob metric plot, but mostly just a wrapper message to work around repeated fields can't be used directly within `oneof` fields. */
	export interface GoogleCloudAiplatformV1beta1TensorboardBlobSequenceFormProperties {
	}
	export function CreateGoogleCloudAiplatformV1beta1TensorboardBlobSequenceFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1TensorboardBlobSequenceFormProperties>({
		});

	}


	/** One blob (e.g, image, graph) viewable on a blob metric plot. */
	export interface GoogleCloudAiplatformV1beta1TensorboardBlob {

		/** Optional. The bytes of the blob is not present unless it's returned by the ReadTensorboardBlobData endpoint. */
		data?: string | null;

		/** Output only. A URI safe key uniquely identifying a blob. Can be used to locate the blob stored in the Cloud Storage bucket of the consumer project. */
		id?: string | null;
	}

	/** One blob (e.g, image, graph) viewable on a blob metric plot. */
	export interface GoogleCloudAiplatformV1beta1TensorboardBlobFormProperties {

		/** Optional. The bytes of the blob is not present unless it's returned by the ReadTensorboardBlobData endpoint. */
		data: FormControl<string | null | undefined>,

		/** Output only. A URI safe key uniquely identifying a blob. Can be used to locate the blob stored in the Cloud Storage bucket of the consumer project. */
		id: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1TensorboardBlobFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1TensorboardBlobFormProperties>({
			data: new FormControl<string | null | undefined>(undefined),
			id: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** One point viewable on a scalar metric plot. */
	export interface GoogleCloudAiplatformV1beta1Scalar {

		/** Value of the point at this step / timestamp. */
		value?: number | null;
	}

	/** One point viewable on a scalar metric plot. */
	export interface GoogleCloudAiplatformV1beta1ScalarFormProperties {

		/** Value of the point at this step / timestamp. */
		value: FormControl<number | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1ScalarFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1ScalarFormProperties>({
			value: new FormControl<number | null | undefined>(undefined),
		});

	}


	/** One point viewable on a tensor metric plot. */
	export interface GoogleCloudAiplatformV1beta1TensorboardTensor {

		/** Required. Serialized form of https://github.com/tensorflow/tensorflow/blob/master/tensorflow/core/framework/tensor.proto */
		value?: string | null;

		/** Optional. Version number of TensorProto used to serialize value. */
		versionNumber?: number | null;
	}

	/** One point viewable on a tensor metric plot. */
	export interface GoogleCloudAiplatformV1beta1TensorboardTensorFormProperties {

		/** Required. Serialized form of https://github.com/tensorflow/tensorflow/blob/master/tensorflow/core/framework/tensor.proto */
		value: FormControl<string | null | undefined>,

		/** Optional. Version number of TensorProto used to serialize value. */
		versionNumber: FormControl<number | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1TensorboardTensorFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1TensorboardTensorFormProperties>({
			value: new FormControl<string | null | undefined>(undefined),
			versionNumber: new FormControl<number | null | undefined>(undefined),
		});

	}


	/** Raw media bytes. Text should not be sent as raw bytes, use the 'text' field. */
	export interface GoogleCloudAiplatformV1beta1Blob {

		/** Required. Raw bytes for media formats. */
		data?: string | null;

		/** Required. The IANA standard MIME type of the source data. */
		mimeType?: string | null;
	}

	/** Raw media bytes. Text should not be sent as raw bytes, use the 'text' field. */
	export interface GoogleCloudAiplatformV1beta1BlobFormProperties {

		/** Required. Raw bytes for media formats. */
		data: FormControl<string | null | undefined>,

		/** Required. The IANA standard MIME type of the source data. */
		mimeType: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1BlobFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1BlobFormProperties>({
			data: new FormControl<string | null | undefined>(undefined),
			mimeType: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** A list of boolean values. */
	export interface GoogleCloudAiplatformV1beta1BoolArray {

		/** A list of bool values. */
		values?: Array<boolean>;
	}

	/** A list of boolean values. */
	export interface GoogleCloudAiplatformV1beta1BoolArrayFormProperties {
	}
	export function CreateGoogleCloudAiplatformV1beta1BoolArrayFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1BoolArrayFormProperties>({
		});

	}


	/** Request message for JobService.CancelBatchPredictionJob. */
	export interface GoogleCloudAiplatformV1beta1CancelBatchPredictionJobRequest {
	}

	/** Request message for JobService.CancelBatchPredictionJob. */
	export interface GoogleCloudAiplatformV1beta1CancelBatchPredictionJobRequestFormProperties {
	}
	export function CreateGoogleCloudAiplatformV1beta1CancelBatchPredictionJobRequestFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1CancelBatchPredictionJobRequestFormProperties>({
		});

	}


	/** Request message for JobService.CancelCustomJob. */
	export interface GoogleCloudAiplatformV1beta1CancelCustomJobRequest {
	}

	/** Request message for JobService.CancelCustomJob. */
	export interface GoogleCloudAiplatformV1beta1CancelCustomJobRequestFormProperties {
	}
	export function CreateGoogleCloudAiplatformV1beta1CancelCustomJobRequestFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1CancelCustomJobRequestFormProperties>({
		});

	}


	/** Request message for JobService.CancelDataLabelingJob. */
	export interface GoogleCloudAiplatformV1beta1CancelDataLabelingJobRequest {
	}

	/** Request message for JobService.CancelDataLabelingJob. */
	export interface GoogleCloudAiplatformV1beta1CancelDataLabelingJobRequestFormProperties {
	}
	export function CreateGoogleCloudAiplatformV1beta1CancelDataLabelingJobRequestFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1CancelDataLabelingJobRequestFormProperties>({
		});

	}


	/** Request message for JobService.CancelHyperparameterTuningJob. */
	export interface GoogleCloudAiplatformV1beta1CancelHyperparameterTuningJobRequest {
	}

	/** Request message for JobService.CancelHyperparameterTuningJob. */
	export interface GoogleCloudAiplatformV1beta1CancelHyperparameterTuningJobRequestFormProperties {
	}
	export function CreateGoogleCloudAiplatformV1beta1CancelHyperparameterTuningJobRequestFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1CancelHyperparameterTuningJobRequestFormProperties>({
		});

	}


	/** Request message for JobService.CancelNasJob. */
	export interface GoogleCloudAiplatformV1beta1CancelNasJobRequest {
	}

	/** Request message for JobService.CancelNasJob. */
	export interface GoogleCloudAiplatformV1beta1CancelNasJobRequestFormProperties {
	}
	export function CreateGoogleCloudAiplatformV1beta1CancelNasJobRequestFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1CancelNasJobRequestFormProperties>({
		});

	}


	/** Request message for PipelineService.CancelPipelineJob. */
	export interface GoogleCloudAiplatformV1beta1CancelPipelineJobRequest {
	}

	/** Request message for PipelineService.CancelPipelineJob. */
	export interface GoogleCloudAiplatformV1beta1CancelPipelineJobRequestFormProperties {
	}
	export function CreateGoogleCloudAiplatformV1beta1CancelPipelineJobRequestFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1CancelPipelineJobRequestFormProperties>({
		});

	}


	/** Request message for PipelineService.CancelTrainingPipeline. */
	export interface GoogleCloudAiplatformV1beta1CancelTrainingPipelineRequest {
	}

	/** Request message for PipelineService.CancelTrainingPipeline. */
	export interface GoogleCloudAiplatformV1beta1CancelTrainingPipelineRequestFormProperties {
	}
	export function CreateGoogleCloudAiplatformV1beta1CancelTrainingPipelineRequestFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1CancelTrainingPipelineRequestFormProperties>({
		});

	}


	/** A response candidate generated from the model. */
	export interface GoogleCloudAiplatformV1beta1Candidate {

		/** A collection of source attributions for a piece of content. */
		citationMetadata?: GoogleCloudAiplatformV1beta1CitationMetadata;

		/** The base structured datatype containing multi-part content of a message. A `Content` includes a `role` field designating the producer of the `Content` and a `parts` field containing multi-part data that contains the content of the message turn. */
		content?: GoogleCloudAiplatformV1beta1Content;

		/** Output only. Describes the reason the mode stopped generating tokens in more detail. This is only filled when `finish_reason` is set. */
		finishMessage?: string | null;

		/** Output only. The reason why the model stopped generating tokens. If empty, the model has not stopped generating the tokens. */
		finishReason?: GoogleCloudAiplatformV1beta1CandidateFinishReason | null;

		/** Output only. Index of the candidate. */
		index?: number | null;

		/** Output only. List of ratings for the safety of a response candidate. There is at most one rating per category. */
		safetyRatings?: Array<GoogleCloudAiplatformV1beta1SafetyRating>;
	}

	/** A response candidate generated from the model. */
	export interface GoogleCloudAiplatformV1beta1CandidateFormProperties {

		/** Output only. Describes the reason the mode stopped generating tokens in more detail. This is only filled when `finish_reason` is set. */
		finishMessage: FormControl<string | null | undefined>,

		/** Output only. The reason why the model stopped generating tokens. If empty, the model has not stopped generating the tokens. */
		finishReason: FormControl<GoogleCloudAiplatformV1beta1CandidateFinishReason | null | undefined>,

		/** Output only. Index of the candidate. */
		index: FormControl<number | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1CandidateFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1CandidateFormProperties>({
			finishMessage: new FormControl<string | null | undefined>(undefined),
			finishReason: new FormControl<GoogleCloudAiplatformV1beta1CandidateFinishReason | null | undefined>(undefined),
			index: new FormControl<number | null | undefined>(undefined),
		});

	}


	/** A collection of source attributions for a piece of content. */
	export interface GoogleCloudAiplatformV1beta1CitationMetadata {

		/** Output only. List of citations. */
		citations?: Array<GoogleCloudAiplatformV1beta1Citation>;
	}

	/** A collection of source attributions for a piece of content. */
	export interface GoogleCloudAiplatformV1beta1CitationMetadataFormProperties {
	}
	export function CreateGoogleCloudAiplatformV1beta1CitationMetadataFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1CitationMetadataFormProperties>({
		});

	}


	/** Source attributions for content. */
	export interface GoogleCloudAiplatformV1beta1Citation {

		/** Output only. End index into the content. */
		endIndex?: number | null;

		/** Output only. License of the attribution. */
		license?: string | null;

		/** Represents a whole or partial calendar date, such as a birthday. The time of day and time zone are either specified elsewhere or are insignificant. The date is relative to the Gregorian Calendar. This can represent one of the following: * A full date, with non-zero year, month, and day values. * A month and day, with a zero year (for example, an anniversary). * A year on its own, with a zero month and a zero day. * A year and month, with a zero day (for example, a credit card expiration date). Related types: * google.type.TimeOfDay * google.type.DateTime * google.protobuf.Timestamp */
		publicationDate?: GoogleTypeDate;

		/** Output only. Start index into the content. */
		startIndex?: number | null;

		/** Output only. Title of the attribution. */
		title?: string | null;

		/** Output only. Url reference of the attribution. */
		uri?: string | null;
	}

	/** Source attributions for content. */
	export interface GoogleCloudAiplatformV1beta1CitationFormProperties {

		/** Output only. End index into the content. */
		endIndex: FormControl<number | null | undefined>,

		/** Output only. License of the attribution. */
		license: FormControl<string | null | undefined>,

		/** Output only. Start index into the content. */
		startIndex: FormControl<number | null | undefined>,

		/** Output only. Title of the attribution. */
		title: FormControl<string | null | undefined>,

		/** Output only. Url reference of the attribution. */
		uri: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1CitationFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1CitationFormProperties>({
			endIndex: new FormControl<number | null | undefined>(undefined),
			license: new FormControl<string | null | undefined>(undefined),
			startIndex: new FormControl<number | null | undefined>(undefined),
			title: new FormControl<string | null | undefined>(undefined),
			uri: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** The base structured datatype containing multi-part content of a message. A `Content` includes a `role` field designating the producer of the `Content` and a `parts` field containing multi-part data that contains the content of the message turn. */
	export interface GoogleCloudAiplatformV1beta1Content {

		/** Required. Ordered `Parts` that constitute a single message. Parts may have different IANA MIME types. */
		parts?: Array<GoogleCloudAiplatformV1beta1Part>;

		/** Optional. The producer of the content. Must be either 'user' or 'model'. Useful to set for multi-turn conversations, otherwise can be left blank or unset. */
		role?: string | null;
	}

	/** The base structured datatype containing multi-part content of a message. A `Content` includes a `role` field designating the producer of the `Content` and a `parts` field containing multi-part data that contains the content of the message turn. */
	export interface GoogleCloudAiplatformV1beta1ContentFormProperties {

		/** Optional. The producer of the content. Must be either 'user' or 'model'. Useful to set for multi-turn conversations, otherwise can be left blank or unset. */
		role: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1ContentFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1ContentFormProperties>({
			role: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** A datatype containing media that is part of a multi-part `Content` message. A `Part` consists of data which has an associated datatype. A `Part` can only contain one of the accepted types in `Part.data`. A `Part` must have a fixed IANA MIME type identifying the type and subtype of the media if `inline_data` or `file_data` field is filled with raw bytes. */
	export interface GoogleCloudAiplatformV1beta1Part {

		/** URI based data. */
		fileData?: GoogleCloudAiplatformV1beta1FileData;

		/** A predicted [FunctionCall] returned from the model that contains a string representing the [FunctionDeclaration.name] and a structured JSON object containing the parameters and their values. */
		functionCall?: GoogleCloudAiplatformV1beta1FunctionCall;

		/** The result output from a [FunctionCall] that contains a string representing the [FunctionDeclaration.name] and a structured JSON object containing any output from the function is used as context to the model. This should contain the result of a [FunctionCall] made based on model prediction. */
		functionResponse?: GoogleCloudAiplatformV1beta1FunctionResponse;

		/** Raw media bytes. Text should not be sent as raw bytes, use the 'text' field. */
		inlineData?: GoogleCloudAiplatformV1beta1Blob;

		/** Optional. Text part (can be code). */
		text?: string | null;

		/** Metadata describes the input video content. */
		videoMetadata?: GoogleCloudAiplatformV1beta1VideoMetadata;
	}

	/** A datatype containing media that is part of a multi-part `Content` message. A `Part` consists of data which has an associated datatype. A `Part` can only contain one of the accepted types in `Part.data`. A `Part` must have a fixed IANA MIME type identifying the type and subtype of the media if `inline_data` or `file_data` field is filled with raw bytes. */
	export interface GoogleCloudAiplatformV1beta1PartFormProperties {

		/** Optional. Text part (can be code). */
		text: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1PartFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1PartFormProperties>({
			text: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** URI based data. */
	export interface GoogleCloudAiplatformV1beta1FileData {

		/** Required. URI. */
		fileUri?: string | null;

		/** Required. The IANA standard MIME type of the source data. */
		mimeType?: string | null;
	}

	/** URI based data. */
	export interface GoogleCloudAiplatformV1beta1FileDataFormProperties {

		/** Required. URI. */
		fileUri: FormControl<string | null | undefined>,

		/** Required. The IANA standard MIME type of the source data. */
		mimeType: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1FileDataFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1FileDataFormProperties>({
			fileUri: new FormControl<string | null | undefined>(undefined),
			mimeType: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** A predicted [FunctionCall] returned from the model that contains a string representing the [FunctionDeclaration.name] and a structured JSON object containing the parameters and their values. */
	export interface GoogleCloudAiplatformV1beta1FunctionCall {

		/** Optional. Required. The function parameters and values in JSON object format. See [FunctionDeclaration.parameters] for parameter details. */
		args?: {[id: string]: any };

		/** Required. The name of the function to call. Matches [FunctionDeclaration.name]. */
		name?: string | null;
	}

	/** A predicted [FunctionCall] returned from the model that contains a string representing the [FunctionDeclaration.name] and a structured JSON object containing the parameters and their values. */
	export interface GoogleCloudAiplatformV1beta1FunctionCallFormProperties {

		/** Optional. Required. The function parameters and values in JSON object format. See [FunctionDeclaration.parameters] for parameter details. */
		args: FormControl<{[id: string]: any } | null | undefined>,

		/** Required. The name of the function to call. Matches [FunctionDeclaration.name]. */
		name: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1FunctionCallFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1FunctionCallFormProperties>({
			args: new FormControl<{[id: string]: any } | null | undefined>(undefined),
			name: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** The result output from a [FunctionCall] that contains a string representing the [FunctionDeclaration.name] and a structured JSON object containing any output from the function is used as context to the model. This should contain the result of a [FunctionCall] made based on model prediction. */
	export interface GoogleCloudAiplatformV1beta1FunctionResponse {

		/** Required. The name of the function to call. Matches [FunctionDeclaration.name] and [FunctionCall.name]. */
		name?: string | null;

		/** Required. The function response in JSON object format. */
		response?: {[id: string]: any };
	}

	/** The result output from a [FunctionCall] that contains a string representing the [FunctionDeclaration.name] and a structured JSON object containing any output from the function is used as context to the model. This should contain the result of a [FunctionCall] made based on model prediction. */
	export interface GoogleCloudAiplatformV1beta1FunctionResponseFormProperties {

		/** Required. The name of the function to call. Matches [FunctionDeclaration.name] and [FunctionCall.name]. */
		name: FormControl<string | null | undefined>,

		/** Required. The function response in JSON object format. */
		response: FormControl<{[id: string]: any } | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1FunctionResponseFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1FunctionResponseFormProperties>({
			name: new FormControl<string | null | undefined>(undefined),
			response: new FormControl<{[id: string]: any } | null | undefined>(undefined),
		});

	}


	/** Metadata describes the input video content. */
	export interface GoogleCloudAiplatformV1beta1VideoMetadata {

		/** Optional. The end offset of the video. */
		endOffset?: string | null;

		/** Optional. The start offset of the video. */
		startOffset?: string | null;
	}

	/** Metadata describes the input video content. */
	export interface GoogleCloudAiplatformV1beta1VideoMetadataFormProperties {

		/** Optional. The end offset of the video. */
		endOffset: FormControl<string | null | undefined>,

		/** Optional. The start offset of the video. */
		startOffset: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1VideoMetadataFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1VideoMetadataFormProperties>({
			endOffset: new FormControl<string | null | undefined>(undefined),
			startOffset: new FormControl<string | null | undefined>(undefined),
		});

	}

	export enum GoogleCloudAiplatformV1beta1CandidateFinishReason { FINISH_REASON_UNSPECIFIED = 0, STOP = 1, MAX_TOKENS = 2, SAFETY = 3, RECITATION = 4, OTHER = 5 }


	/** Safety rating corresponding to the generated content. */
	export interface GoogleCloudAiplatformV1beta1SafetyRating {

		/** Output only. Indicates whether the content was filtered out because of this rating. */
		blocked?: boolean | null;

		/** Output only. Harm category. */
		category?: CloudAiNlLlmProtoServiceSafetyRatingCategory | null;

		/** Output only. Harm probability levels in the content. */
		probability?: CloudAiNlLlmProtoServiceSafetyRatingProbability | null;
	}

	/** Safety rating corresponding to the generated content. */
	export interface GoogleCloudAiplatformV1beta1SafetyRatingFormProperties {

		/** Output only. Indicates whether the content was filtered out because of this rating. */
		blocked: FormControl<boolean | null | undefined>,

		/** Output only. Harm category. */
		category: FormControl<CloudAiNlLlmProtoServiceSafetyRatingCategory | null | undefined>,

		/** Output only. Harm probability levels in the content. */
		probability: FormControl<CloudAiNlLlmProtoServiceSafetyRatingProbability | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1SafetyRatingFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1SafetyRatingFormProperties>({
			blocked: new FormControl<boolean | null | undefined>(undefined),
			category: new FormControl<CloudAiNlLlmProtoServiceSafetyRatingCategory | null | undefined>(undefined),
			probability: new FormControl<CloudAiNlLlmProtoServiceSafetyRatingProbability | null | undefined>(undefined),
		});

	}


	/** This message will be placed in the metadata field of a google.longrunning.Operation associated with a CheckTrialEarlyStoppingState request. */
	export interface GoogleCloudAiplatformV1beta1CheckTrialEarlyStoppingStateMetatdata {

		/** Generic Metadata shared by all operations. */
		genericMetadata?: GoogleCloudAiplatformV1beta1GenericOperationMetadata;

		/** The name of the Study that the Trial belongs to. */
		study?: string | null;

		/** The Trial name. */
		trial?: string | null;
	}

	/** This message will be placed in the metadata field of a google.longrunning.Operation associated with a CheckTrialEarlyStoppingState request. */
	export interface GoogleCloudAiplatformV1beta1CheckTrialEarlyStoppingStateMetatdataFormProperties {

		/** The name of the Study that the Trial belongs to. */
		study: FormControl<string | null | undefined>,

		/** The Trial name. */
		trial: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1CheckTrialEarlyStoppingStateMetatdataFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1CheckTrialEarlyStoppingStateMetatdataFormProperties>({
			study: new FormControl<string | null | undefined>(undefined),
			trial: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Request message for VizierService.CheckTrialEarlyStoppingState. */
	export interface GoogleCloudAiplatformV1beta1CheckTrialEarlyStoppingStateRequest {
	}

	/** Request message for VizierService.CheckTrialEarlyStoppingState. */
	export interface GoogleCloudAiplatformV1beta1CheckTrialEarlyStoppingStateRequestFormProperties {
	}
	export function CreateGoogleCloudAiplatformV1beta1CheckTrialEarlyStoppingStateRequestFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1CheckTrialEarlyStoppingStateRequestFormProperties>({
		});

	}


	/** Response message for VizierService.CheckTrialEarlyStoppingState. */
	export interface GoogleCloudAiplatformV1beta1CheckTrialEarlyStoppingStateResponse {

		/** True if the Trial should stop. */
		shouldStop?: boolean | null;
	}

	/** Response message for VizierService.CheckTrialEarlyStoppingState. */
	export interface GoogleCloudAiplatformV1beta1CheckTrialEarlyStoppingStateResponseFormProperties {

		/** True if the Trial should stop. */
		shouldStop: FormControl<boolean | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1CheckTrialEarlyStoppingStateResponseFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1CheckTrialEarlyStoppingStateResponseFormProperties>({
			shouldStop: new FormControl<boolean | null | undefined>(undefined),
		});

	}


	/** Request message for VizierService.CompleteTrial. */
	export interface GoogleCloudAiplatformV1beta1CompleteTrialRequest {

		/** A message representing a Measurement of a Trial. A Measurement contains the Metrics got by executing a Trial using suggested hyperparameter values. */
		finalMeasurement?: GoogleCloudAiplatformV1beta1Measurement;

		/** Optional. A human readable reason why the trial was infeasible. This should only be provided if `trial_infeasible` is true. */
		infeasibleReason?: string | null;

		/** Optional. True if the Trial cannot be run with the given Parameter, and final_measurement will be ignored. */
		trialInfeasible?: boolean | null;
	}

	/** Request message for VizierService.CompleteTrial. */
	export interface GoogleCloudAiplatformV1beta1CompleteTrialRequestFormProperties {

		/** Optional. A human readable reason why the trial was infeasible. This should only be provided if `trial_infeasible` is true. */
		infeasibleReason: FormControl<string | null | undefined>,

		/** Optional. True if the Trial cannot be run with the given Parameter, and final_measurement will be ignored. */
		trialInfeasible: FormControl<boolean | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1CompleteTrialRequestFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1CompleteTrialRequestFormProperties>({
			infeasibleReason: new FormControl<string | null | undefined>(undefined),
			trialInfeasible: new FormControl<boolean | null | undefined>(undefined),
		});

	}


	/** Request message for ComputeTokens RPC call. */
	export interface GoogleCloudAiplatformV1beta1ComputeTokensRequest {

		/** Required. The instances that are the input to token computing API call. Schema is identical to the prediction schema of the text model, even for the non-text models, like chat models, or Codey models. */
		instances?: Array<string>;
	}

	/** Request message for ComputeTokens RPC call. */
	export interface GoogleCloudAiplatformV1beta1ComputeTokensRequestFormProperties {
	}
	export function CreateGoogleCloudAiplatformV1beta1ComputeTokensRequestFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1ComputeTokensRequestFormProperties>({
		});

	}


	/** Response message for ComputeTokens RPC call. */
	export interface GoogleCloudAiplatformV1beta1ComputeTokensResponse {

		/** Lists of tokens info from the input. A ComputeTokensRequest could have multiple instances with a prompt in each instance. We also need to return lists of tokens info for the request with multiple instances. */
		tokensInfo?: Array<GoogleCloudAiplatformV1beta1TokensInfo>;
	}

	/** Response message for ComputeTokens RPC call. */
	export interface GoogleCloudAiplatformV1beta1ComputeTokensResponseFormProperties {
	}
	export function CreateGoogleCloudAiplatformV1beta1ComputeTokensResponseFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1ComputeTokensResponseFormProperties>({
		});

	}


	/** Tokens info with a list of tokens and the corresponding list of token ids. */
	export interface GoogleCloudAiplatformV1beta1TokensInfo {

		/** A list of token ids from the input. */
		tokenIds?: Array<string>;

		/** A list of tokens from the input. */
		tokens?: Array<string>;
	}

	/** Tokens info with a list of tokens and the corresponding list of token ids. */
	export interface GoogleCloudAiplatformV1beta1TokensInfoFormProperties {
	}
	export function CreateGoogleCloudAiplatformV1beta1TokensInfoFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1TokensInfoFormProperties>({
		});

	}


	/** The Container Registry location for the container image. */
	export interface GoogleCloudAiplatformV1beta1ContainerRegistryDestination {

		/** Required. Container Registry URI of a container image. Only Google Container Registry and Artifact Registry are supported now. Accepted forms: * Google Container Registry path. For example: `gcr.io/projectId/imageName:tag`. * Artifact Registry path. For example: `us-central1-docker.pkg.dev/projectId/repoName/imageName:tag`. If a tag is not specified, "latest" will be used as the default tag. */
		outputUri?: string | null;
	}

	/** The Container Registry location for the container image. */
	export interface GoogleCloudAiplatformV1beta1ContainerRegistryDestinationFormProperties {

		/** Required. Container Registry URI of a container image. Only Google Container Registry and Artifact Registry are supported now. Accepted forms: * Google Container Registry path. For example: `gcr.io/projectId/imageName:tag`. * Artifact Registry path. For example: `us-central1-docker.pkg.dev/projectId/repoName/imageName:tag`. If a tag is not specified, "latest" will be used as the default tag. */
		outputUri: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1ContainerRegistryDestinationFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1ContainerRegistryDestinationFormProperties>({
			outputUri: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** The spec of a Container. */
	export interface GoogleCloudAiplatformV1beta1ContainerSpec {

		/** The arguments to be passed when starting the container. */
		args?: Array<string>;

		/** The command to be invoked when the container is started. It overrides the entrypoint instruction in Dockerfile when provided. */
		command?: Array<string>;

		/** Environment variables to be passed to the container. Maximum limit is 100. */
		env?: Array<GoogleCloudAiplatformV1beta1EnvVar>;

		/** Required. The URI of a container image in the Container Registry that is to be run on each worker replica. */
		imageUri?: string | null;
	}

	/** The spec of a Container. */
	export interface GoogleCloudAiplatformV1beta1ContainerSpecFormProperties {

		/** Required. The URI of a container image in the Container Registry that is to be run on each worker replica. */
		imageUri: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1ContainerSpecFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1ContainerSpecFormProperties>({
			imageUri: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Details of ModelService.CopyModel operation. */
	export interface GoogleCloudAiplatformV1beta1CopyModelOperationMetadata {

		/** Generic Metadata shared by all operations. */
		genericMetadata?: GoogleCloudAiplatformV1beta1GenericOperationMetadata;
	}

	/** Details of ModelService.CopyModel operation. */
	export interface GoogleCloudAiplatformV1beta1CopyModelOperationMetadataFormProperties {
	}
	export function CreateGoogleCloudAiplatformV1beta1CopyModelOperationMetadataFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1CopyModelOperationMetadataFormProperties>({
		});

	}


	/** Request message for ModelService.CopyModel. */
	export interface GoogleCloudAiplatformV1beta1CopyModelRequest {

		/** Represents a customer-managed encryption key spec that can be applied to a top-level resource. */
		encryptionSpec?: GoogleCloudAiplatformV1beta1EncryptionSpec;

		/** Optional. Copy source_model into a new Model with this ID. The ID will become the final component of the model resource name. This value may be up to 63 characters, and valid characters are `[a-z0-9_-]`. The first character cannot be a number or hyphen. */
		modelId?: string | null;

		/** Optional. Specify this field to copy source_model into this existing Model as a new version. Format: `projects/{project}/locations/{location}/models/{model}` */
		parentModel?: string | null;

		/** Required. The resource name of the Model to copy. That Model must be in the same Project. Format: `projects/{project}/locations/{location}/models/{model}` */
		sourceModel?: string | null;
	}

	/** Request message for ModelService.CopyModel. */
	export interface GoogleCloudAiplatformV1beta1CopyModelRequestFormProperties {

		/** Optional. Copy source_model into a new Model with this ID. The ID will become the final component of the model resource name. This value may be up to 63 characters, and valid characters are `[a-z0-9_-]`. The first character cannot be a number or hyphen. */
		modelId: FormControl<string | null | undefined>,

		/** Optional. Specify this field to copy source_model into this existing Model as a new version. Format: `projects/{project}/locations/{location}/models/{model}` */
		parentModel: FormControl<string | null | undefined>,

		/** Required. The resource name of the Model to copy. That Model must be in the same Project. Format: `projects/{project}/locations/{location}/models/{model}` */
		sourceModel: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1CopyModelRequestFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1CopyModelRequestFormProperties>({
			modelId: new FormControl<string | null | undefined>(undefined),
			parentModel: new FormControl<string | null | undefined>(undefined),
			sourceModel: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Response message of ModelService.CopyModel operation. */
	export interface GoogleCloudAiplatformV1beta1CopyModelResponse {

		/** The name of the copied Model resource. Format: `projects/{project}/locations/{location}/models/{model}` */
		model?: string | null;

		/** Output only. The version ID of the model that is copied. */
		modelVersionId?: string | null;
	}

	/** Response message of ModelService.CopyModel operation. */
	export interface GoogleCloudAiplatformV1beta1CopyModelResponseFormProperties {

		/** The name of the copied Model resource. Format: `projects/{project}/locations/{location}/models/{model}` */
		model: FormControl<string | null | undefined>,

		/** Output only. The version ID of the model that is copied. */
		modelVersionId: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1CopyModelResponseFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1CopyModelResponseFormProperties>({
			model: new FormControl<string | null | undefined>(undefined),
			modelVersionId: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Request message for PredictionService.CountTokens. */
	export interface GoogleCloudAiplatformV1beta1CountTokensRequest {

		/** Required. Input content. */
		contents?: Array<GoogleCloudAiplatformV1beta1Content>;

		/** Required. The instances that are the input to token counting call. Schema is identical to the prediction schema of the underlying model. */
		instances?: Array<string>;

		/** Required. The name of the publisher model requested to serve the prediction. Format: `projects/{project}/locations/{location}/publishers/models/*` */
		model?: string | null;
	}

	/** Request message for PredictionService.CountTokens. */
	export interface GoogleCloudAiplatformV1beta1CountTokensRequestFormProperties {

		/** Required. The name of the publisher model requested to serve the prediction. Format: `projects/{project}/locations/{location}/publishers/models/*` */
		model: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1CountTokensRequestFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1CountTokensRequestFormProperties>({
			model: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Response message for PredictionService.CountTokens. */
	export interface GoogleCloudAiplatformV1beta1CountTokensResponse {

		/** The total number of billable characters counted across all instances from the request. */
		totalBillableCharacters?: number | null;

		/** The total number of tokens counted across all instances from the request. */
		totalTokens?: number | null;
	}

	/** Response message for PredictionService.CountTokens. */
	export interface GoogleCloudAiplatformV1beta1CountTokensResponseFormProperties {

		/** The total number of billable characters counted across all instances from the request. */
		totalBillableCharacters: FormControl<number | null | undefined>,

		/** The total number of tokens counted across all instances from the request. */
		totalTokens: FormControl<number | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1CountTokensResponseFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1CountTokensResponseFormProperties>({
			totalBillableCharacters: new FormControl<number | null | undefined>(undefined),
			totalTokens: new FormControl<number | null | undefined>(undefined),
		});

	}


	/** Runtime operation information for DatasetService.CreateDataset. */
	export interface GoogleCloudAiplatformV1beta1CreateDatasetOperationMetadata {

		/** Generic Metadata shared by all operations. */
		genericMetadata?: GoogleCloudAiplatformV1beta1GenericOperationMetadata;
	}

	/** Runtime operation information for DatasetService.CreateDataset. */
	export interface GoogleCloudAiplatformV1beta1CreateDatasetOperationMetadataFormProperties {
	}
	export function CreateGoogleCloudAiplatformV1beta1CreateDatasetOperationMetadataFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1CreateDatasetOperationMetadataFormProperties>({
		});

	}


	/** Runtime operation information for DatasetService.CreateDatasetVersion. */
	export interface GoogleCloudAiplatformV1beta1CreateDatasetVersionOperationMetadata {

		/** Generic Metadata shared by all operations. */
		genericMetadata?: GoogleCloudAiplatformV1beta1GenericOperationMetadata;
	}

	/** Runtime operation information for DatasetService.CreateDatasetVersion. */
	export interface GoogleCloudAiplatformV1beta1CreateDatasetVersionOperationMetadataFormProperties {
	}
	export function CreateGoogleCloudAiplatformV1beta1CreateDatasetVersionOperationMetadataFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1CreateDatasetVersionOperationMetadataFormProperties>({
		});

	}


	/** Runtime operation information for CreateDeploymentResourcePool method. */
	export interface GoogleCloudAiplatformV1beta1CreateDeploymentResourcePoolOperationMetadata {

		/** Generic Metadata shared by all operations. */
		genericMetadata?: GoogleCloudAiplatformV1beta1GenericOperationMetadata;
	}

	/** Runtime operation information for CreateDeploymentResourcePool method. */
	export interface GoogleCloudAiplatformV1beta1CreateDeploymentResourcePoolOperationMetadataFormProperties {
	}
	export function CreateGoogleCloudAiplatformV1beta1CreateDeploymentResourcePoolOperationMetadataFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1CreateDeploymentResourcePoolOperationMetadataFormProperties>({
		});

	}


	/** Request message for CreateDeploymentResourcePool method. */
	export interface GoogleCloudAiplatformV1beta1CreateDeploymentResourcePoolRequest {

		/** A description of resources that can be shared by multiple DeployedModels, whose underlying specification consists of a DedicatedResources. */
		deploymentResourcePool?: GoogleCloudAiplatformV1beta1DeploymentResourcePool;

		/** Required. The ID to use for the DeploymentResourcePool, which will become the final component of the DeploymentResourcePool's resource name. The maximum length is 63 characters, and valid characters are `/^[a-z]([a-z0-9-]{0,61}[a-z0-9])?$/`. */
		deploymentResourcePoolId?: string | null;
	}

	/** Request message for CreateDeploymentResourcePool method. */
	export interface GoogleCloudAiplatformV1beta1CreateDeploymentResourcePoolRequestFormProperties {

		/** Required. The ID to use for the DeploymentResourcePool, which will become the final component of the DeploymentResourcePool's resource name. The maximum length is 63 characters, and valid characters are `/^[a-z]([a-z0-9-]{0,61}[a-z0-9])?$/`. */
		deploymentResourcePoolId: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1CreateDeploymentResourcePoolRequestFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1CreateDeploymentResourcePoolRequestFormProperties>({
			deploymentResourcePoolId: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** A description of resources that can be shared by multiple DeployedModels, whose underlying specification consists of a DedicatedResources. */
	export interface GoogleCloudAiplatformV1beta1DeploymentResourcePool {

		/** Output only. Timestamp when this DeploymentResourcePool was created. */
		createTime?: string | null;

		/** A description of resources that are dedicated to a DeployedModel, and that need a higher degree of manual configuration. */
		dedicatedResources?: GoogleCloudAiplatformV1beta1DedicatedResources;

		/** Immutable. The resource name of the DeploymentResourcePool. Format: `projects/{project}/locations/{location}/deploymentResourcePools/{deployment_resource_pool}` */
		name?: string | null;
	}

	/** A description of resources that can be shared by multiple DeployedModels, whose underlying specification consists of a DedicatedResources. */
	export interface GoogleCloudAiplatformV1beta1DeploymentResourcePoolFormProperties {

		/** Output only. Timestamp when this DeploymentResourcePool was created. */
		createTime: FormControl<string | null | undefined>,

		/** Immutable. The resource name of the DeploymentResourcePool. Format: `projects/{project}/locations/{location}/deploymentResourcePools/{deployment_resource_pool}` */
		name: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1DeploymentResourcePoolFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1DeploymentResourcePoolFormProperties>({
			createTime: new FormControl<string | null | undefined>(undefined),
			name: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** A description of resources that are dedicated to a DeployedModel, and that need a higher degree of manual configuration. */
	export interface GoogleCloudAiplatformV1beta1DedicatedResources {

		/** Immutable. The metric specifications that overrides a resource utilization metric (CPU utilization, accelerator's duty cycle, and so on) target value (default to 60 if not set). At most one entry is allowed per metric. If machine_spec.accelerator_count is above 0, the autoscaling will be based on both CPU utilization and accelerator's duty cycle metrics and scale up when either metrics exceeds its target value while scale down if both metrics are under their target value. The default target value is 60 for both metrics. If machine_spec.accelerator_count is 0, the autoscaling will be based on CPU utilization metric only with default target value 60 if not explicitly set. For example, in the case of Online Prediction, if you want to override target CPU utilization to 80, you should set autoscaling_metric_specs.metric_name to `aiplatform.googleapis.com/prediction/online/cpu/utilization` and autoscaling_metric_specs.target to `80`. */
		autoscalingMetricSpecs?: Array<GoogleCloudAiplatformV1beta1AutoscalingMetricSpec>;

		/** Specification of a single machine. */
		machineSpec?: GoogleCloudAiplatformV1beta1MachineSpec;

		/** Immutable. The maximum number of replicas this DeployedModel may be deployed on when the traffic against it increases. If the requested value is too large, the deployment will error, but if deployment succeeds then the ability to scale the model to that many replicas is guaranteed (barring service outages). If traffic against the DeployedModel increases beyond what its replicas at maximum may handle, a portion of the traffic will be dropped. If this value is not provided, will use min_replica_count as the default value. The value of this field impacts the charge against Vertex CPU and GPU quotas. Specifically, you will be charged for (max_replica_count * number of cores in the selected machine type) and (max_replica_count * number of GPUs per replica in the selected machine type). */
		maxReplicaCount?: number | null;

		/** Required. Immutable. The minimum number of machine replicas this DeployedModel will be always deployed on. This value must be greater than or equal to 1. If traffic against the DeployedModel increases, it may dynamically be deployed onto more replicas, and as traffic decreases, some of these extra replicas may be freed. */
		minReplicaCount?: number | null;
	}

	/** A description of resources that are dedicated to a DeployedModel, and that need a higher degree of manual configuration. */
	export interface GoogleCloudAiplatformV1beta1DedicatedResourcesFormProperties {

		/** Immutable. The maximum number of replicas this DeployedModel may be deployed on when the traffic against it increases. If the requested value is too large, the deployment will error, but if deployment succeeds then the ability to scale the model to that many replicas is guaranteed (barring service outages). If traffic against the DeployedModel increases beyond what its replicas at maximum may handle, a portion of the traffic will be dropped. If this value is not provided, will use min_replica_count as the default value. The value of this field impacts the charge against Vertex CPU and GPU quotas. Specifically, you will be charged for (max_replica_count * number of cores in the selected machine type) and (max_replica_count * number of GPUs per replica in the selected machine type). */
		maxReplicaCount: FormControl<number | null | undefined>,

		/** Required. Immutable. The minimum number of machine replicas this DeployedModel will be always deployed on. This value must be greater than or equal to 1. If traffic against the DeployedModel increases, it may dynamically be deployed onto more replicas, and as traffic decreases, some of these extra replicas may be freed. */
		minReplicaCount: FormControl<number | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1DedicatedResourcesFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1DedicatedResourcesFormProperties>({
			maxReplicaCount: new FormControl<number | null | undefined>(undefined),
			minReplicaCount: new FormControl<number | null | undefined>(undefined),
		});

	}


	/** Runtime operation information for EndpointService.CreateEndpoint. */
	export interface GoogleCloudAiplatformV1beta1CreateEndpointOperationMetadata {

		/** Generic Metadata shared by all operations. */
		genericMetadata?: GoogleCloudAiplatformV1beta1GenericOperationMetadata;
	}

	/** Runtime operation information for EndpointService.CreateEndpoint. */
	export interface GoogleCloudAiplatformV1beta1CreateEndpointOperationMetadataFormProperties {
	}
	export function CreateGoogleCloudAiplatformV1beta1CreateEndpointOperationMetadataFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1CreateEndpointOperationMetadataFormProperties>({
		});

	}


	/** Details of operations that perform create EntityType. */
	export interface GoogleCloudAiplatformV1beta1CreateEntityTypeOperationMetadata {

		/** Generic Metadata shared by all operations. */
		genericMetadata?: GoogleCloudAiplatformV1beta1GenericOperationMetadata;
	}

	/** Details of operations that perform create EntityType. */
	export interface GoogleCloudAiplatformV1beta1CreateEntityTypeOperationMetadataFormProperties {
	}
	export function CreateGoogleCloudAiplatformV1beta1CreateEntityTypeOperationMetadataFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1CreateEntityTypeOperationMetadataFormProperties>({
		});

	}


	/** Details of ExtensionControllerService.CreateExtensionController operation. */
	export interface GoogleCloudAiplatformV1beta1CreateExtensionControllerOperationMetadata {

		/** Generic Metadata shared by all operations. */
		genericMetadata?: GoogleCloudAiplatformV1beta1GenericOperationMetadata;
	}

	/** Details of ExtensionControllerService.CreateExtensionController operation. */
	export interface GoogleCloudAiplatformV1beta1CreateExtensionControllerOperationMetadataFormProperties {
	}
	export function CreateGoogleCloudAiplatformV1beta1CreateExtensionControllerOperationMetadataFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1CreateExtensionControllerOperationMetadataFormProperties>({
		});

	}


	/** Details of ExtensionRegistryService.CreateExtensionDeployment operation. */
	export interface GoogleCloudAiplatformV1beta1CreateExtensionDeploymentOperationMetadata {

		/** Generic Metadata shared by all operations. */
		genericMetadata?: GoogleCloudAiplatformV1beta1GenericOperationMetadata;
	}

	/** Details of ExtensionRegistryService.CreateExtensionDeployment operation. */
	export interface GoogleCloudAiplatformV1beta1CreateExtensionDeploymentOperationMetadataFormProperties {
	}
	export function CreateGoogleCloudAiplatformV1beta1CreateExtensionDeploymentOperationMetadataFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1CreateExtensionDeploymentOperationMetadataFormProperties>({
		});

	}


	/** Details of operations that perform create FeatureGroup. */
	export interface GoogleCloudAiplatformV1beta1CreateFeatureGroupOperationMetadata {

		/** Generic Metadata shared by all operations. */
		genericMetadata?: GoogleCloudAiplatformV1beta1GenericOperationMetadata;
	}

	/** Details of operations that perform create FeatureGroup. */
	export interface GoogleCloudAiplatformV1beta1CreateFeatureGroupOperationMetadataFormProperties {
	}
	export function CreateGoogleCloudAiplatformV1beta1CreateFeatureGroupOperationMetadataFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1CreateFeatureGroupOperationMetadataFormProperties>({
		});

	}


	/** Details of operations that perform create FeatureOnlineStore. */
	export interface GoogleCloudAiplatformV1beta1CreateFeatureOnlineStoreOperationMetadata {

		/** Generic Metadata shared by all operations. */
		genericMetadata?: GoogleCloudAiplatformV1beta1GenericOperationMetadata;
	}

	/** Details of operations that perform create FeatureOnlineStore. */
	export interface GoogleCloudAiplatformV1beta1CreateFeatureOnlineStoreOperationMetadataFormProperties {
	}
	export function CreateGoogleCloudAiplatformV1beta1CreateFeatureOnlineStoreOperationMetadataFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1CreateFeatureOnlineStoreOperationMetadataFormProperties>({
		});

	}


	/** Details of operations that perform create Feature. */
	export interface GoogleCloudAiplatformV1beta1CreateFeatureOperationMetadata {

		/** Generic Metadata shared by all operations. */
		genericMetadata?: GoogleCloudAiplatformV1beta1GenericOperationMetadata;
	}

	/** Details of operations that perform create Feature. */
	export interface GoogleCloudAiplatformV1beta1CreateFeatureOperationMetadataFormProperties {
	}
	export function CreateGoogleCloudAiplatformV1beta1CreateFeatureOperationMetadataFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1CreateFeatureOperationMetadataFormProperties>({
		});

	}


	/** Details of operations that perform create FeatureView. */
	export interface GoogleCloudAiplatformV1beta1CreateFeatureViewOperationMetadata {

		/** Generic Metadata shared by all operations. */
		genericMetadata?: GoogleCloudAiplatformV1beta1GenericOperationMetadata;
	}

	/** Details of operations that perform create FeatureView. */
	export interface GoogleCloudAiplatformV1beta1CreateFeatureViewOperationMetadataFormProperties {
	}
	export function CreateGoogleCloudAiplatformV1beta1CreateFeatureViewOperationMetadataFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1CreateFeatureViewOperationMetadataFormProperties>({
		});

	}


	/** Details of operations that perform create Featurestore. */
	export interface GoogleCloudAiplatformV1beta1CreateFeaturestoreOperationMetadata {

		/** Generic Metadata shared by all operations. */
		genericMetadata?: GoogleCloudAiplatformV1beta1GenericOperationMetadata;
	}

	/** Details of operations that perform create Featurestore. */
	export interface GoogleCloudAiplatformV1beta1CreateFeaturestoreOperationMetadataFormProperties {
	}
	export function CreateGoogleCloudAiplatformV1beta1CreateFeaturestoreOperationMetadataFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1CreateFeaturestoreOperationMetadataFormProperties>({
		});

	}


	/** Runtime operation information for IndexEndpointService.CreateIndexEndpoint. */
	export interface GoogleCloudAiplatformV1beta1CreateIndexEndpointOperationMetadata {

		/** Generic Metadata shared by all operations. */
		genericMetadata?: GoogleCloudAiplatformV1beta1GenericOperationMetadata;
	}

	/** Runtime operation information for IndexEndpointService.CreateIndexEndpoint. */
	export interface GoogleCloudAiplatformV1beta1CreateIndexEndpointOperationMetadataFormProperties {
	}
	export function CreateGoogleCloudAiplatformV1beta1CreateIndexEndpointOperationMetadataFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1CreateIndexEndpointOperationMetadataFormProperties>({
		});

	}


	/** Runtime operation information for IndexService.CreateIndex. */
	export interface GoogleCloudAiplatformV1beta1CreateIndexOperationMetadata {

		/** Generic Metadata shared by all operations. */
		genericMetadata?: GoogleCloudAiplatformV1beta1GenericOperationMetadata;

		/** Runtime operation metadata with regard to Matching Engine Index. */
		nearestNeighborSearchOperationMetadata?: GoogleCloudAiplatformV1beta1NearestNeighborSearchOperationMetadata;
	}

	/** Runtime operation information for IndexService.CreateIndex. */
	export interface GoogleCloudAiplatformV1beta1CreateIndexOperationMetadataFormProperties {
	}
	export function CreateGoogleCloudAiplatformV1beta1CreateIndexOperationMetadataFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1CreateIndexOperationMetadataFormProperties>({
		});

	}


	/** Runtime operation metadata with regard to Matching Engine Index. */
	export interface GoogleCloudAiplatformV1beta1NearestNeighborSearchOperationMetadata {

		/** The validation stats of the content (per file) to be inserted or updated on the Matching Engine Index resource. Populated if contentsDeltaUri is provided as part of Index.metadata. Please note that, currently for those files that are broken or has unsupported file format, we will not have the stats for those files. */
		contentValidationStats?: Array<GoogleCloudAiplatformV1beta1NearestNeighborSearchOperationMetadataContentValidationStats>;

		/** The ingested data size in bytes. */
		dataBytesCount?: string | null;
	}

	/** Runtime operation metadata with regard to Matching Engine Index. */
	export interface GoogleCloudAiplatformV1beta1NearestNeighborSearchOperationMetadataFormProperties {

		/** The ingested data size in bytes. */
		dataBytesCount: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1NearestNeighborSearchOperationMetadataFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1NearestNeighborSearchOperationMetadataFormProperties>({
			dataBytesCount: new FormControl<string | null | undefined>(undefined),
		});

	}

	export interface GoogleCloudAiplatformV1beta1NearestNeighborSearchOperationMetadataContentValidationStats {

		/** Number of records in this file we skipped due to validate errors. */
		invalidRecordCount?: string | null;

		/** The detail information of the partial failures encountered for those invalid records that couldn't be parsed. Up to 50 partial errors will be reported. */
		partialErrors?: Array<GoogleCloudAiplatformV1beta1NearestNeighborSearchOperationMetadataRecordError>;

		/** Cloud Storage URI pointing to the original file in user's bucket. */
		sourceGcsUri?: string | null;

		/** Number of records in this file that were successfully processed. */
		validRecordCount?: string | null;
	}
	export interface GoogleCloudAiplatformV1beta1NearestNeighborSearchOperationMetadataContentValidationStatsFormProperties {

		/** Number of records in this file we skipped due to validate errors. */
		invalidRecordCount: FormControl<string | null | undefined>,

		/** Cloud Storage URI pointing to the original file in user's bucket. */
		sourceGcsUri: FormControl<string | null | undefined>,

		/** Number of records in this file that were successfully processed. */
		validRecordCount: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1NearestNeighborSearchOperationMetadataContentValidationStatsFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1NearestNeighborSearchOperationMetadataContentValidationStatsFormProperties>({
			invalidRecordCount: new FormControl<string | null | undefined>(undefined),
			sourceGcsUri: new FormControl<string | null | undefined>(undefined),
			validRecordCount: new FormControl<string | null | undefined>(undefined),
		});

	}

	export interface GoogleCloudAiplatformV1beta1NearestNeighborSearchOperationMetadataRecordError {

		/** Empty if the embedding id is failed to parse. */
		embeddingId?: string | null;

		/** A human-readable message that is shown to the user to help them fix the error. Note that this message may change from time to time, your code should check against error_type as the source of truth. */
		errorMessage?: string | null;

		/** The error type of this record. */
		errorType?: GoogleCloudAiplatformV1beta1NearestNeighborSearchOperationMetadataRecordErrorErrorType | null;

		/** The original content of this record. */
		rawRecord?: string | null;

		/** Cloud Storage URI pointing to the original file in user's bucket. */
		sourceGcsUri?: string | null;
	}
	export interface GoogleCloudAiplatformV1beta1NearestNeighborSearchOperationMetadataRecordErrorFormProperties {

		/** Empty if the embedding id is failed to parse. */
		embeddingId: FormControl<string | null | undefined>,

		/** A human-readable message that is shown to the user to help them fix the error. Note that this message may change from time to time, your code should check against error_type as the source of truth. */
		errorMessage: FormControl<string | null | undefined>,

		/** The error type of this record. */
		errorType: FormControl<GoogleCloudAiplatformV1beta1NearestNeighborSearchOperationMetadataRecordErrorErrorType | null | undefined>,

		/** The original content of this record. */
		rawRecord: FormControl<string | null | undefined>,

		/** Cloud Storage URI pointing to the original file in user's bucket. */
		sourceGcsUri: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1NearestNeighborSearchOperationMetadataRecordErrorFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1NearestNeighborSearchOperationMetadataRecordErrorFormProperties>({
			embeddingId: new FormControl<string | null | undefined>(undefined),
			errorMessage: new FormControl<string | null | undefined>(undefined),
			errorType: new FormControl<GoogleCloudAiplatformV1beta1NearestNeighborSearchOperationMetadataRecordErrorErrorType | null | undefined>(undefined),
			rawRecord: new FormControl<string | null | undefined>(undefined),
			sourceGcsUri: new FormControl<string | null | undefined>(undefined),
		});

	}

	export enum GoogleCloudAiplatformV1beta1NearestNeighborSearchOperationMetadataRecordErrorErrorType { ERROR_TYPE_UNSPECIFIED = 0, EMPTY_LINE = 1, INVALID_JSON_SYNTAX = 2, INVALID_CSV_SYNTAX = 3, INVALID_AVRO_SYNTAX = 4, INVALID_EMBEDDING_ID = 5, EMBEDDING_SIZE_MISMATCH = 6, NAMESPACE_MISSING = 7 }


	/** Details of operations that perform MetadataService.CreateMetadataStore. */
	export interface GoogleCloudAiplatformV1beta1CreateMetadataStoreOperationMetadata {

		/** Generic Metadata shared by all operations. */
		genericMetadata?: GoogleCloudAiplatformV1beta1GenericOperationMetadata;
	}

	/** Details of operations that perform MetadataService.CreateMetadataStore. */
	export interface GoogleCloudAiplatformV1beta1CreateMetadataStoreOperationMetadataFormProperties {
	}
	export function CreateGoogleCloudAiplatformV1beta1CreateMetadataStoreOperationMetadataFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1CreateMetadataStoreOperationMetadataFormProperties>({
		});

	}


	/** Metadata information for NotebookService.CreateNotebookRuntimeTemplate. */
	export interface GoogleCloudAiplatformV1beta1CreateNotebookRuntimeTemplateOperationMetadata {

		/** Generic Metadata shared by all operations. */
		genericMetadata?: GoogleCloudAiplatformV1beta1GenericOperationMetadata;
	}

	/** Metadata information for NotebookService.CreateNotebookRuntimeTemplate. */
	export interface GoogleCloudAiplatformV1beta1CreateNotebookRuntimeTemplateOperationMetadataFormProperties {
	}
	export function CreateGoogleCloudAiplatformV1beta1CreateNotebookRuntimeTemplateOperationMetadataFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1CreateNotebookRuntimeTemplateOperationMetadataFormProperties>({
		});

	}


	/** Details of operations that perform create PersistentResource. */
	export interface GoogleCloudAiplatformV1beta1CreatePersistentResourceOperationMetadata {

		/** Generic Metadata shared by all operations. */
		genericMetadata?: GoogleCloudAiplatformV1beta1GenericOperationMetadata;
	}

	/** Details of operations that perform create PersistentResource. */
	export interface GoogleCloudAiplatformV1beta1CreatePersistentResourceOperationMetadataFormProperties {
	}
	export function CreateGoogleCloudAiplatformV1beta1CreatePersistentResourceOperationMetadataFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1CreatePersistentResourceOperationMetadataFormProperties>({
		});

	}


	/** Request message for PipelineService.CreatePipelineJob. */
	export interface GoogleCloudAiplatformV1beta1CreatePipelineJobRequest {

		/** Required. The resource name of the Location to create the PipelineJob in. Format: `projects/{project}/locations/{location}` */
		parent?: string | null;

		/** An instance of a machine learning PipelineJob. */
		pipelineJob?: GoogleCloudAiplatformV1beta1PipelineJob;

		/** The ID to use for the PipelineJob, which will become the final component of the PipelineJob name. If not provided, an ID will be automatically generated. This value should be less than 128 characters, and valid characters are `/a-z-/`. */
		pipelineJobId?: string | null;
	}

	/** Request message for PipelineService.CreatePipelineJob. */
	export interface GoogleCloudAiplatformV1beta1CreatePipelineJobRequestFormProperties {

		/** Required. The resource name of the Location to create the PipelineJob in. Format: `projects/{project}/locations/{location}` */
		parent: FormControl<string | null | undefined>,

		/** The ID to use for the PipelineJob, which will become the final component of the PipelineJob name. If not provided, an ID will be automatically generated. This value should be less than 128 characters, and valid characters are `/a-z-/`. */
		pipelineJobId: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1CreatePipelineJobRequestFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1CreatePipelineJobRequestFormProperties>({
			parent: new FormControl<string | null | undefined>(undefined),
			pipelineJobId: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Details of operations that perform create FeatureGroup. */
	export interface GoogleCloudAiplatformV1beta1CreateRegistryFeatureOperationMetadata {

		/** Generic Metadata shared by all operations. */
		genericMetadata?: GoogleCloudAiplatformV1beta1GenericOperationMetadata;
	}

	/** Details of operations that perform create FeatureGroup. */
	export interface GoogleCloudAiplatformV1beta1CreateRegistryFeatureOperationMetadataFormProperties {
	}
	export function CreateGoogleCloudAiplatformV1beta1CreateRegistryFeatureOperationMetadataFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1CreateRegistryFeatureOperationMetadataFormProperties>({
		});

	}


	/** Runtime operation information for SolverService.CreateSolver. */
	export interface GoogleCloudAiplatformV1beta1CreateSolverOperationMetadata {

		/** Generic Metadata shared by all operations. */
		genericMetadata?: GoogleCloudAiplatformV1beta1GenericOperationMetadata;
	}

	/** Runtime operation information for SolverService.CreateSolver. */
	export interface GoogleCloudAiplatformV1beta1CreateSolverOperationMetadataFormProperties {
	}
	export function CreateGoogleCloudAiplatformV1beta1CreateSolverOperationMetadataFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1CreateSolverOperationMetadataFormProperties>({
		});

	}


	/** Runtime operation information for SpecialistPoolService.CreateSpecialistPool. */
	export interface GoogleCloudAiplatformV1beta1CreateSpecialistPoolOperationMetadata {

		/** Generic Metadata shared by all operations. */
		genericMetadata?: GoogleCloudAiplatformV1beta1GenericOperationMetadata;
	}

	/** Runtime operation information for SpecialistPoolService.CreateSpecialistPool. */
	export interface GoogleCloudAiplatformV1beta1CreateSpecialistPoolOperationMetadataFormProperties {
	}
	export function CreateGoogleCloudAiplatformV1beta1CreateSpecialistPoolOperationMetadataFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1CreateSpecialistPoolOperationMetadataFormProperties>({
		});

	}


	/** Details of operations that perform create Tensorboard. */
	export interface GoogleCloudAiplatformV1beta1CreateTensorboardOperationMetadata {

		/** Generic Metadata shared by all operations. */
		genericMetadata?: GoogleCloudAiplatformV1beta1GenericOperationMetadata;
	}

	/** Details of operations that perform create Tensorboard. */
	export interface GoogleCloudAiplatformV1beta1CreateTensorboardOperationMetadataFormProperties {
	}
	export function CreateGoogleCloudAiplatformV1beta1CreateTensorboardOperationMetadataFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1CreateTensorboardOperationMetadataFormProperties>({
		});

	}


	/** Represents a job that runs custom workloads such as a Docker container or a Python package. A CustomJob can have multiple worker pools and each worker pool can have its own machine and input spec. A CustomJob will be cleaned up once the job enters terminal state (failed or succeeded). */
	export interface GoogleCloudAiplatformV1beta1CustomJob {

		/** Output only. Time when the CustomJob was created. */
		createTime?: string | null;

		/** Required. The display name of the CustomJob. The name can be up to 128 characters long and can consist of any UTF-8 characters. */
		displayName?: string | null;

		/** Represents a customer-managed encryption key spec that can be applied to a top-level resource. */
		encryptionSpec?: GoogleCloudAiplatformV1beta1EncryptionSpec;

		/** Output only. Time when the CustomJob entered any of the following states: `JOB_STATE_SUCCEEDED`, `JOB_STATE_FAILED`, `JOB_STATE_CANCELLED`. */
		endTime?: string | null;

		/** The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors). */
		error?: GoogleRpcStatus;

		/** Represents the spec of a CustomJob. */
		jobSpec?: GoogleCloudAiplatformV1beta1CustomJobSpec;

		/** The labels with user-defined metadata to organize CustomJobs. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. See https://goo.gl/xmQnxf for more information and examples of labels. */
		labels?: {[id: string]: string };

		/** Output only. Resource name of a CustomJob. */
		name?: string | null;

		/** Output only. Time when the CustomJob for the first time entered the `JOB_STATE_RUNNING` state. */
		startTime?: string | null;

		/** Output only. The detailed state of the job. */
		state?: GoogleCloudAiplatformV1beta1BatchPredictionJobState | null;

		/** Output only. Time when the CustomJob was most recently updated. */
		updateTime?: string | null;

		/** Output only. URIs for accessing [interactive shells](https://cloud.google.com/vertex-ai/docs/training/monitor-debug-interactive-shell) (one URI for each training node). Only available if job_spec.enable_web_access is `true`. The keys are names of each node in the training job; for example, `workerpool0-0` for the primary node, `workerpool1-0` for the first node in the second worker pool, and `workerpool1-1` for the second node in the second worker pool. The values are the URIs for each node's interactive shell. */
		webAccessUris?: {[id: string]: string };
	}

	/** Represents a job that runs custom workloads such as a Docker container or a Python package. A CustomJob can have multiple worker pools and each worker pool can have its own machine and input spec. A CustomJob will be cleaned up once the job enters terminal state (failed or succeeded). */
	export interface GoogleCloudAiplatformV1beta1CustomJobFormProperties {

		/** Output only. Time when the CustomJob was created. */
		createTime: FormControl<string | null | undefined>,

		/** Required. The display name of the CustomJob. The name can be up to 128 characters long and can consist of any UTF-8 characters. */
		displayName: FormControl<string | null | undefined>,

		/** Output only. Time when the CustomJob entered any of the following states: `JOB_STATE_SUCCEEDED`, `JOB_STATE_FAILED`, `JOB_STATE_CANCELLED`. */
		endTime: FormControl<string | null | undefined>,

		/** The labels with user-defined metadata to organize CustomJobs. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. See https://goo.gl/xmQnxf for more information and examples of labels. */
		labels: FormControl<{[id: string]: string } | null | undefined>,

		/** Output only. Resource name of a CustomJob. */
		name: FormControl<string | null | undefined>,

		/** Output only. Time when the CustomJob for the first time entered the `JOB_STATE_RUNNING` state. */
		startTime: FormControl<string | null | undefined>,

		/** Output only. The detailed state of the job. */
		state: FormControl<GoogleCloudAiplatformV1beta1BatchPredictionJobState | null | undefined>,

		/** Output only. Time when the CustomJob was most recently updated. */
		updateTime: FormControl<string | null | undefined>,

		/** Output only. URIs for accessing [interactive shells](https://cloud.google.com/vertex-ai/docs/training/monitor-debug-interactive-shell) (one URI for each training node). Only available if job_spec.enable_web_access is `true`. The keys are names of each node in the training job; for example, `workerpool0-0` for the primary node, `workerpool1-0` for the first node in the second worker pool, and `workerpool1-1` for the second node in the second worker pool. The values are the URIs for each node's interactive shell. */
		webAccessUris: FormControl<{[id: string]: string } | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1CustomJobFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1CustomJobFormProperties>({
			createTime: new FormControl<string | null | undefined>(undefined),
			displayName: new FormControl<string | null | undefined>(undefined),
			endTime: new FormControl<string | null | undefined>(undefined),
			labels: new FormControl<{[id: string]: string } | null | undefined>(undefined),
			name: new FormControl<string | null | undefined>(undefined),
			startTime: new FormControl<string | null | undefined>(undefined),
			state: new FormControl<GoogleCloudAiplatformV1beta1BatchPredictionJobState | null | undefined>(undefined),
			updateTime: new FormControl<string | null | undefined>(undefined),
			webAccessUris: new FormControl<{[id: string]: string } | null | undefined>(undefined),
		});

	}


	/** Represents the spec of a CustomJob. */
	export interface GoogleCloudAiplatformV1beta1CustomJobSpec {

		/** The Google Cloud Storage location where the output is to be written to. */
		baseOutputDirectory?: GoogleCloudAiplatformV1beta1GcsDestination;

		/** Optional. Whether you want Vertex AI to enable access to the customized dashboard in training chief container. If set to `true`, you can access the dashboard at the URIs given by CustomJob.web_access_uris or Trial.web_access_uris (within HyperparameterTuningJob.trials). */
		enableDashboardAccess?: boolean | null;

		/** Optional. Whether you want Vertex AI to enable [interactive shell access](https://cloud.google.com/vertex-ai/docs/training/monitor-debug-interactive-shell) to training containers. If set to `true`, you can access interactive shells at the URIs given by CustomJob.web_access_uris or Trial.web_access_uris (within HyperparameterTuningJob.trials). */
		enableWebAccess?: boolean | null;

		/** Optional. The Experiment associated with this job. Format: `projects/{project}/locations/{location}/metadataStores/{metadataStores}/contexts/{experiment-name}` */
		experiment?: string | null;

		/** Optional. The Experiment Run associated with this job. Format: `projects/{project}/locations/{location}/metadataStores/{metadataStores}/contexts/{experiment-name}-{experiment-run-name}` */
		experimentRun?: string | null;

		/** Optional. The name of the Model resources for which to generate a mapping to artifact URIs. Applicable only to some of the Google-provided custom jobs. Format: `projects/{project}/locations/{location}/models/{model}` In order to retrieve a specific version of the model, also provide the version ID or version alias. Example: `projects/{project}/locations/{location}/models/{model}@2` or `projects/{project}/locations/{location}/models/{model}@golden` If no version ID or alias is specified, the "default" version will be returned. The "default" version alias is created for the first version of the model, and can be moved to other versions later on. There will be exactly one default version. */
		models?: Array<string>;

		/** Optional. The full name of the Compute Engine [network](/compute/docs/networks-and-firewalls#networks) to which the Job should be peered. For example, `projects/12345/global/networks/myVPC`. [Format](/compute/docs/reference/rest/v1/networks/insert) is of the form `projects/{project}/global/networks/{network}`. Where {project} is a project number, as in `12345`, and {network} is a network name. To specify this field, you must have already [configured VPC Network Peering for Vertex AI](https://cloud.google.com/vertex-ai/docs/general/vpc-peering). If this field is left unspecified, the job is not peered with any network. */
		network?: string | null;

		/** Optional. The ID of the PersistentResource in the same Project and Location which to run If this is specified, the job will be run on existing machines held by the PersistentResource instead of on-demand short-live machines. The network and CMEK configs on the job should be consistent with those on the PersistentResource, otherwise, the job will be rejected. */
		persistentResourceId?: string | null;

		/** The ID of the location to store protected artifacts. e.g. us-central1. Populate only when the location is different than CustomJob location. List of supported locations: https://cloud.google.com/vertex-ai/docs/general/locations */
		protectedArtifactLocationId?: string | null;

		/** Optional. A list of names for the reserved ip ranges under the VPC network that can be used for this job. If set, we will deploy the job within the provided ip ranges. Otherwise, the job will be deployed to any ip ranges under the provided VPC network. Example: ['vertex-ai-ip-range']. */
		reservedIpRanges?: Array<string>;

		/** All parameters related to queuing and scheduling of custom jobs. */
		scheduling?: GoogleCloudAiplatformV1beta1Scheduling;

		/** Specifies the service account for workload run-as account. Users submitting jobs must have act-as permission on this run-as account. If unspecified, the [Vertex AI Custom Code Service Agent](https://cloud.google.com/vertex-ai/docs/general/access-control#service-agents) for the CustomJob's project is used. */
		serviceAccount?: string | null;

		/** Optional. The name of a Vertex AI Tensorboard resource to which this CustomJob will upload Tensorboard logs. Format: `projects/{project}/locations/{location}/tensorboards/{tensorboard}` */
		tensorboard?: string | null;

		/** Required. The spec of the worker pools including machine type and Docker image. All worker pools except the first one are optional and can be skipped by providing an empty value. */
		workerPoolSpecs?: Array<GoogleCloudAiplatformV1beta1WorkerPoolSpec>;
	}

	/** Represents the spec of a CustomJob. */
	export interface GoogleCloudAiplatformV1beta1CustomJobSpecFormProperties {

		/** Optional. Whether you want Vertex AI to enable access to the customized dashboard in training chief container. If set to `true`, you can access the dashboard at the URIs given by CustomJob.web_access_uris or Trial.web_access_uris (within HyperparameterTuningJob.trials). */
		enableDashboardAccess: FormControl<boolean | null | undefined>,

		/** Optional. Whether you want Vertex AI to enable [interactive shell access](https://cloud.google.com/vertex-ai/docs/training/monitor-debug-interactive-shell) to training containers. If set to `true`, you can access interactive shells at the URIs given by CustomJob.web_access_uris or Trial.web_access_uris (within HyperparameterTuningJob.trials). */
		enableWebAccess: FormControl<boolean | null | undefined>,

		/** Optional. The Experiment associated with this job. Format: `projects/{project}/locations/{location}/metadataStores/{metadataStores}/contexts/{experiment-name}` */
		experiment: FormControl<string | null | undefined>,

		/** Optional. The Experiment Run associated with this job. Format: `projects/{project}/locations/{location}/metadataStores/{metadataStores}/contexts/{experiment-name}-{experiment-run-name}` */
		experimentRun: FormControl<string | null | undefined>,

		/** Optional. The full name of the Compute Engine [network](/compute/docs/networks-and-firewalls#networks) to which the Job should be peered. For example, `projects/12345/global/networks/myVPC`. [Format](/compute/docs/reference/rest/v1/networks/insert) is of the form `projects/{project}/global/networks/{network}`. Where {project} is a project number, as in `12345`, and {network} is a network name. To specify this field, you must have already [configured VPC Network Peering for Vertex AI](https://cloud.google.com/vertex-ai/docs/general/vpc-peering). If this field is left unspecified, the job is not peered with any network. */
		network: FormControl<string | null | undefined>,

		/** Optional. The ID of the PersistentResource in the same Project and Location which to run If this is specified, the job will be run on existing machines held by the PersistentResource instead of on-demand short-live machines. The network and CMEK configs on the job should be consistent with those on the PersistentResource, otherwise, the job will be rejected. */
		persistentResourceId: FormControl<string | null | undefined>,

		/** The ID of the location to store protected artifacts. e.g. us-central1. Populate only when the location is different than CustomJob location. List of supported locations: https://cloud.google.com/vertex-ai/docs/general/locations */
		protectedArtifactLocationId: FormControl<string | null | undefined>,

		/** Specifies the service account for workload run-as account. Users submitting jobs must have act-as permission on this run-as account. If unspecified, the [Vertex AI Custom Code Service Agent](https://cloud.google.com/vertex-ai/docs/general/access-control#service-agents) for the CustomJob's project is used. */
		serviceAccount: FormControl<string | null | undefined>,

		/** Optional. The name of a Vertex AI Tensorboard resource to which this CustomJob will upload Tensorboard logs. Format: `projects/{project}/locations/{location}/tensorboards/{tensorboard}` */
		tensorboard: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1CustomJobSpecFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1CustomJobSpecFormProperties>({
			enableDashboardAccess: new FormControl<boolean | null | undefined>(undefined),
			enableWebAccess: new FormControl<boolean | null | undefined>(undefined),
			experiment: new FormControl<string | null | undefined>(undefined),
			experimentRun: new FormControl<string | null | undefined>(undefined),
			network: new FormControl<string | null | undefined>(undefined),
			persistentResourceId: new FormControl<string | null | undefined>(undefined),
			protectedArtifactLocationId: new FormControl<string | null | undefined>(undefined),
			serviceAccount: new FormControl<string | null | undefined>(undefined),
			tensorboard: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** All parameters related to queuing and scheduling of custom jobs. */
	export interface GoogleCloudAiplatformV1beta1Scheduling {

		/** Optional. Indicates if the job should retry for internal errors after the job starts running. If true, overrides `Scheduling.restart_job_on_worker_restart` to false. */
		disableRetries?: boolean | null;

		/** Optional. This is the maximum time a user will wait in the QRM queue for resources. Default is 1 day */
		maxWaitDuration?: string | null;

		/** Restarts the entire CustomJob if a worker gets restarted. This feature can be used by distributed training jobs that are not resilient to workers leaving and joining a job. */
		restartJobOnWorkerRestart?: boolean | null;

		/** The maximum job running time. The default is 7 days. */
		timeout?: string | null;
	}

	/** All parameters related to queuing and scheduling of custom jobs. */
	export interface GoogleCloudAiplatformV1beta1SchedulingFormProperties {

		/** Optional. Indicates if the job should retry for internal errors after the job starts running. If true, overrides `Scheduling.restart_job_on_worker_restart` to false. */
		disableRetries: FormControl<boolean | null | undefined>,

		/** Optional. This is the maximum time a user will wait in the QRM queue for resources. Default is 1 day */
		maxWaitDuration: FormControl<string | null | undefined>,

		/** Restarts the entire CustomJob if a worker gets restarted. This feature can be used by distributed training jobs that are not resilient to workers leaving and joining a job. */
		restartJobOnWorkerRestart: FormControl<boolean | null | undefined>,

		/** The maximum job running time. The default is 7 days. */
		timeout: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1SchedulingFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1SchedulingFormProperties>({
			disableRetries: new FormControl<boolean | null | undefined>(undefined),
			maxWaitDuration: new FormControl<string | null | undefined>(undefined),
			restartJobOnWorkerRestart: new FormControl<boolean | null | undefined>(undefined),
			timeout: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Represents the spec of a worker pool in a job. */
	export interface GoogleCloudAiplatformV1beta1WorkerPoolSpec {

		/** The spec of a Container. */
		containerSpec?: GoogleCloudAiplatformV1beta1ContainerSpec;

		/** Represents the spec of disk options. */
		diskSpec?: GoogleCloudAiplatformV1beta1DiskSpec;

		/** Specification of a single machine. */
		machineSpec?: GoogleCloudAiplatformV1beta1MachineSpec;

		/** Optional. List of NFS mount spec. */
		nfsMounts?: Array<GoogleCloudAiplatformV1beta1NfsMount>;

		/** The spec of a Python packaged code. */
		pythonPackageSpec?: GoogleCloudAiplatformV1beta1PythonPackageSpec;

		/** Optional. The number of worker replicas to use for this worker pool. */
		replicaCount?: string | null;
	}

	/** Represents the spec of a worker pool in a job. */
	export interface GoogleCloudAiplatformV1beta1WorkerPoolSpecFormProperties {

		/** Optional. The number of worker replicas to use for this worker pool. */
		replicaCount: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1WorkerPoolSpecFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1WorkerPoolSpecFormProperties>({
			replicaCount: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Represents the spec of disk options. */
	export interface GoogleCloudAiplatformV1beta1DiskSpec {

		/** Size in GB of the boot disk (default is 100GB). */
		bootDiskSizeGb?: number | null;

		/** Type of the boot disk (default is "pd-ssd"). Valid values: "pd-ssd" (Persistent Disk Solid State Drive) or "pd-standard" (Persistent Disk Hard Disk Drive). */
		bootDiskType?: string | null;
	}

	/** Represents the spec of disk options. */
	export interface GoogleCloudAiplatformV1beta1DiskSpecFormProperties {

		/** Size in GB of the boot disk (default is 100GB). */
		bootDiskSizeGb: FormControl<number | null | undefined>,

		/** Type of the boot disk (default is "pd-ssd"). Valid values: "pd-ssd" (Persistent Disk Solid State Drive) or "pd-standard" (Persistent Disk Hard Disk Drive). */
		bootDiskType: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1DiskSpecFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1DiskSpecFormProperties>({
			bootDiskSizeGb: new FormControl<number | null | undefined>(undefined),
			bootDiskType: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Represents a mount configuration for Network File System (NFS) to mount. */
	export interface GoogleCloudAiplatformV1beta1NfsMount {

		/** Required. Destination mount path. The NFS will be mounted for the user under /mnt/nfs/ */
		mountPoint?: string | null;

		/** Required. Source path exported from NFS server. Has to start with '/', and combined with the ip address, it indicates the source mount path in the form of `server:path` */
		path?: string | null;

		/** Required. IP address of the NFS server. */
		server?: string | null;
	}

	/** Represents a mount configuration for Network File System (NFS) to mount. */
	export interface GoogleCloudAiplatformV1beta1NfsMountFormProperties {

		/** Required. Destination mount path. The NFS will be mounted for the user under /mnt/nfs/ */
		mountPoint: FormControl<string | null | undefined>,

		/** Required. Source path exported from NFS server. Has to start with '/', and combined with the ip address, it indicates the source mount path in the form of `server:path` */
		path: FormControl<string | null | undefined>,

		/** Required. IP address of the NFS server. */
		server: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1NfsMountFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1NfsMountFormProperties>({
			mountPoint: new FormControl<string | null | undefined>(undefined),
			path: new FormControl<string | null | undefined>(undefined),
			server: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** The spec of a Python packaged code. */
	export interface GoogleCloudAiplatformV1beta1PythonPackageSpec {

		/** Command line arguments to be passed to the Python task. */
		args?: Array<string>;

		/** Environment variables to be passed to the python module. Maximum limit is 100. */
		env?: Array<GoogleCloudAiplatformV1beta1EnvVar>;

		/** Required. The URI of a container image in Artifact Registry that will run the provided Python package. Vertex AI provides a wide range of executor images with pre-installed packages to meet users' various use cases. See the list of [pre-built containers for training](https://cloud.google.com/vertex-ai/docs/training/pre-built-containers). You must use an image from this list. */
		executorImageUri?: string | null;

		/** Required. The Google Cloud Storage location of the Python package files which are the training program and its dependent packages. The maximum number of package URIs is 100. */
		packageUris?: Array<string>;

		/** Required. The Python module name to run after installing the packages. */
		pythonModule?: string | null;
	}

	/** The spec of a Python packaged code. */
	export interface GoogleCloudAiplatformV1beta1PythonPackageSpecFormProperties {

		/** Required. The URI of a container image in Artifact Registry that will run the provided Python package. Vertex AI provides a wide range of executor images with pre-installed packages to meet users' various use cases. See the list of [pre-built containers for training](https://cloud.google.com/vertex-ai/docs/training/pre-built-containers). You must use an image from this list. */
		executorImageUri: FormControl<string | null | undefined>,

		/** Required. The Python module name to run after installing the packages. */
		pythonModule: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1PythonPackageSpecFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1PythonPackageSpecFormProperties>({
			executorImageUri: new FormControl<string | null | undefined>(undefined),
			pythonModule: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** A piece of data in a Dataset. Could be an image, a video, a document or plain text. */
	export interface GoogleCloudAiplatformV1beta1DataItem {

		/** Output only. Timestamp when this DataItem was created. */
		createTime?: string | null;

		/** Optional. Used to perform consistent read-modify-write updates. If not set, a blind "overwrite" update happens. */
		etag?: string | null;

		/** Optional. The labels with user-defined metadata to organize your DataItems. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. No more than 64 user labels can be associated with one DataItem(System labels are excluded). See https://goo.gl/xmQnxf for more information and examples of labels. System reserved label keys are prefixed with "aiplatform.googleapis.com/" and are immutable. */
		labels?: {[id: string]: string };

		/** Output only. The resource name of the DataItem. */
		name?: string | null;

		/** Required. The data that the DataItem represents (for example, an image or a text snippet). The schema of the payload is stored in the parent Dataset's metadata schema's dataItemSchemaUri field. */
		payload?: any;

		/** Output only. Timestamp when this DataItem was last updated. */
		updateTime?: string | null;
	}

	/** A piece of data in a Dataset. Could be an image, a video, a document or plain text. */
	export interface GoogleCloudAiplatformV1beta1DataItemFormProperties {

		/** Output only. Timestamp when this DataItem was created. */
		createTime: FormControl<string | null | undefined>,

		/** Optional. Used to perform consistent read-modify-write updates. If not set, a blind "overwrite" update happens. */
		etag: FormControl<string | null | undefined>,

		/** Optional. The labels with user-defined metadata to organize your DataItems. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. No more than 64 user labels can be associated with one DataItem(System labels are excluded). See https://goo.gl/xmQnxf for more information and examples of labels. System reserved label keys are prefixed with "aiplatform.googleapis.com/" and are immutable. */
		labels: FormControl<{[id: string]: string } | null | undefined>,

		/** Output only. The resource name of the DataItem. */
		name: FormControl<string | null | undefined>,

		/** Required. The data that the DataItem represents (for example, an image or a text snippet). The schema of the payload is stored in the parent Dataset's metadata schema's dataItemSchemaUri field. */
		payload: FormControl<any | null | undefined>,

		/** Output only. Timestamp when this DataItem was last updated. */
		updateTime: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1DataItemFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1DataItemFormProperties>({
			createTime: new FormControl<string | null | undefined>(undefined),
			etag: new FormControl<string | null | undefined>(undefined),
			labels: new FormControl<{[id: string]: string } | null | undefined>(undefined),
			name: new FormControl<string | null | undefined>(undefined),
			payload: new FormControl<any | null | undefined>(undefined),
			updateTime: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** A container for a single DataItem and Annotations on it. */
	export interface GoogleCloudAiplatformV1beta1DataItemView {

		/** The Annotations on the DataItem. If too many Annotations should be returned for the DataItem, this field will be truncated per annotations_limit in request. If it was, then the has_truncated_annotations will be set to true. */
		annotations?: Array<GoogleCloudAiplatformV1beta1Annotation>;

		/** A piece of data in a Dataset. Could be an image, a video, a document or plain text. */
		dataItem?: GoogleCloudAiplatformV1beta1DataItem;

		/** True if and only if the Annotations field has been truncated. It happens if more Annotations for this DataItem met the request's annotation_filter than are allowed to be returned by annotations_limit. Note that if Annotations field is not being returned due to field mask, then this field will not be set to true no matter how many Annotations are there. */
		hasTruncatedAnnotations?: boolean | null;
	}

	/** A container for a single DataItem and Annotations on it. */
	export interface GoogleCloudAiplatformV1beta1DataItemViewFormProperties {

		/** True if and only if the Annotations field has been truncated. It happens if more Annotations for this DataItem met the request's annotation_filter than are allowed to be returned by annotations_limit. Note that if Annotations field is not being returned due to field mask, then this field will not be set to true no matter how many Annotations are there. */
		hasTruncatedAnnotations: FormControl<boolean | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1DataItemViewFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1DataItemViewFormProperties>({
			hasTruncatedAnnotations: new FormControl<boolean | null | undefined>(undefined),
		});

	}


	/** DataLabelingJob is used to trigger a human labeling job on unlabeled data from the following Dataset: */
	export interface GoogleCloudAiplatformV1beta1DataLabelingJob {

		/** Parameters that configure the active learning pipeline. Active learning will label the data incrementally by several iterations. For every iteration, it will select a batch of data based on the sampling strategy. */
		activeLearningConfig?: GoogleCloudAiplatformV1beta1ActiveLearningConfig;

		/** Labels to assign to annotations generated by this DataLabelingJob. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. See https://goo.gl/xmQnxf for more information and examples of labels. System reserved label keys are prefixed with "aiplatform.googleapis.com/" and are immutable. */
		annotationLabels?: {[id: string]: string };

		/** Output only. Timestamp when this DataLabelingJob was created. */
		createTime?: string | null;

		/** Represents an amount of money with its currency type. */
		currentSpend?: GoogleTypeMoney;

		/** Required. Dataset resource names. Right now we only support labeling from a single Dataset. Format: `projects/{project}/locations/{location}/datasets/{dataset}` */
		datasets?: Array<string>;

		/** Required. The user-defined name of the DataLabelingJob. The name can be up to 128 characters long and can consist of any UTF-8 characters. Display name of a DataLabelingJob. */
		displayName?: string | null;

		/** Represents a customer-managed encryption key spec that can be applied to a top-level resource. */
		encryptionSpec?: GoogleCloudAiplatformV1beta1EncryptionSpec;

		/** The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors). */
		error?: GoogleRpcStatus;

		/** Required. Input config parameters for the DataLabelingJob. */
		inputs?: any;

		/** Required. Points to a YAML file stored on Google Cloud Storage describing the config for a specific type of DataLabelingJob. The schema files that can be used here are found in the https://storage.googleapis.com/google-cloud-aiplatform bucket in the /schema/datalabelingjob/inputs/ folder. */
		inputsSchemaUri?: string | null;

		/** Required. The Google Cloud Storage location of the instruction pdf. This pdf is shared with labelers, and provides detailed description on how to label DataItems in Datasets. */
		instructionUri?: string | null;

		/** Required. Number of labelers to work on each DataItem. */
		labelerCount?: number | null;

		/** Output only. Current labeling job progress percentage scaled in interval [0, 100], indicating the percentage of DataItems that has been finished. */
		labelingProgress?: number | null;

		/** The labels with user-defined metadata to organize your DataLabelingJobs. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. See https://goo.gl/xmQnxf for more information and examples of labels. System reserved label keys are prefixed with "aiplatform.googleapis.com/" and are immutable. Following system labels exist for each DataLabelingJob: * "aiplatform.googleapis.com/schema": output only, its value is the inputs_schema's title. */
		labels?: {[id: string]: string };

		/** Output only. Resource name of the DataLabelingJob. */
		name?: string | null;

		/** The SpecialistPools' resource names associated with this job. */
		specialistPools?: Array<string>;

		/** Output only. The detailed state of the job. */
		state?: GoogleCloudAiplatformV1beta1BatchPredictionJobState | null;

		/** Output only. Timestamp when this DataLabelingJob was updated most recently. */
		updateTime?: string | null;
	}

	/** DataLabelingJob is used to trigger a human labeling job on unlabeled data from the following Dataset: */
	export interface GoogleCloudAiplatformV1beta1DataLabelingJobFormProperties {

		/** Labels to assign to annotations generated by this DataLabelingJob. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. See https://goo.gl/xmQnxf for more information and examples of labels. System reserved label keys are prefixed with "aiplatform.googleapis.com/" and are immutable. */
		annotationLabels: FormControl<{[id: string]: string } | null | undefined>,

		/** Output only. Timestamp when this DataLabelingJob was created. */
		createTime: FormControl<string | null | undefined>,

		/** Required. The user-defined name of the DataLabelingJob. The name can be up to 128 characters long and can consist of any UTF-8 characters. Display name of a DataLabelingJob. */
		displayName: FormControl<string | null | undefined>,

		/** Required. Input config parameters for the DataLabelingJob. */
		inputs: FormControl<any | null | undefined>,

		/** Required. Points to a YAML file stored on Google Cloud Storage describing the config for a specific type of DataLabelingJob. The schema files that can be used here are found in the https://storage.googleapis.com/google-cloud-aiplatform bucket in the /schema/datalabelingjob/inputs/ folder. */
		inputsSchemaUri: FormControl<string | null | undefined>,

		/** Required. The Google Cloud Storage location of the instruction pdf. This pdf is shared with labelers, and provides detailed description on how to label DataItems in Datasets. */
		instructionUri: FormControl<string | null | undefined>,

		/** Required. Number of labelers to work on each DataItem. */
		labelerCount: FormControl<number | null | undefined>,

		/** Output only. Current labeling job progress percentage scaled in interval [0, 100], indicating the percentage of DataItems that has been finished. */
		labelingProgress: FormControl<number | null | undefined>,

		/** The labels with user-defined metadata to organize your DataLabelingJobs. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. See https://goo.gl/xmQnxf for more information and examples of labels. System reserved label keys are prefixed with "aiplatform.googleapis.com/" and are immutable. Following system labels exist for each DataLabelingJob: * "aiplatform.googleapis.com/schema": output only, its value is the inputs_schema's title. */
		labels: FormControl<{[id: string]: string } | null | undefined>,

		/** Output only. Resource name of the DataLabelingJob. */
		name: FormControl<string | null | undefined>,

		/** Output only. The detailed state of the job. */
		state: FormControl<GoogleCloudAiplatformV1beta1BatchPredictionJobState | null | undefined>,

		/** Output only. Timestamp when this DataLabelingJob was updated most recently. */
		updateTime: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1DataLabelingJobFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1DataLabelingJobFormProperties>({
			annotationLabels: new FormControl<{[id: string]: string } | null | undefined>(undefined),
			createTime: new FormControl<string | null | undefined>(undefined),
			displayName: new FormControl<string | null | undefined>(undefined),
			inputs: new FormControl<any | null | undefined>(undefined),
			inputsSchemaUri: new FormControl<string | null | undefined>(undefined),
			instructionUri: new FormControl<string | null | undefined>(undefined),
			labelerCount: new FormControl<number | null | undefined>(undefined),
			labelingProgress: new FormControl<number | null | undefined>(undefined),
			labels: new FormControl<{[id: string]: string } | null | undefined>(undefined),
			name: new FormControl<string | null | undefined>(undefined),
			state: new FormControl<GoogleCloudAiplatformV1beta1BatchPredictionJobState | null | undefined>(undefined),
			updateTime: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Represents an amount of money with its currency type. */
	export interface GoogleTypeMoney {

		/** The three-letter currency code defined in ISO 4217. */
		currencyCode?: string | null;

		/** Number of nano (10^-9) units of the amount. The value must be between -999,999,999 and +999,999,999 inclusive. If `units` is positive, `nanos` must be positive or zero. If `units` is zero, `nanos` can be positive, zero, or negative. If `units` is negative, `nanos` must be negative or zero. For example $-1.75 is represented as `units`=-1 and `nanos`=-750,000,000. */
		nanos?: number | null;

		/** The whole units of the amount. For example if `currencyCode` is `"USD"`, then 1 unit is one US dollar. */
		units?: string | null;
	}

	/** Represents an amount of money with its currency type. */
	export interface GoogleTypeMoneyFormProperties {

		/** The three-letter currency code defined in ISO 4217. */
		currencyCode: FormControl<string | null | undefined>,

		/** Number of nano (10^-9) units of the amount. The value must be between -999,999,999 and +999,999,999 inclusive. If `units` is positive, `nanos` must be positive or zero. If `units` is zero, `nanos` can be positive, zero, or negative. If `units` is negative, `nanos` must be negative or zero. For example $-1.75 is represented as `units`=-1 and `nanos`=-750,000,000. */
		nanos: FormControl<number | null | undefined>,

		/** The whole units of the amount. For example if `currencyCode` is `"USD"`, then 1 unit is one US dollar. */
		units: FormControl<string | null | undefined>,
	}
	export function CreateGoogleTypeMoneyFormGroup() {
		return new FormGroup<GoogleTypeMoneyFormProperties>({
			currencyCode: new FormControl<string | null | undefined>(undefined),
			nanos: new FormControl<number | null | undefined>(undefined),
			units: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** A collection of DataItems and Annotations on them. */
	export interface GoogleCloudAiplatformV1beta1Dataset {

		/** Output only. Timestamp when this Dataset was created. */
		createTime?: string | null;

		/** Output only. The number of DataItems in this Dataset. Only apply for non-structured Dataset. */
		dataItemCount?: string | null;

		/** The description of the Dataset. */
		description?: string | null;

		/** Required. The user-defined name of the Dataset. The name can be up to 128 characters long and can consist of any UTF-8 characters. */
		displayName?: string | null;

		/** Represents a customer-managed encryption key spec that can be applied to a top-level resource. */
		encryptionSpec?: GoogleCloudAiplatformV1beta1EncryptionSpec;

		/** Used to perform consistent read-modify-write updates. If not set, a blind "overwrite" update happens. */
		etag?: string | null;

		/** The labels with user-defined metadata to organize your Datasets. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. No more than 64 user labels can be associated with one Dataset (System labels are excluded). See https://goo.gl/xmQnxf for more information and examples of labels. System reserved label keys are prefixed with "aiplatform.googleapis.com/" and are immutable. Following system labels exist for each Dataset: * "aiplatform.googleapis.com/dataset_metadata_schema": output only, its value is the metadata_schema's title. */
		labels?: {[id: string]: string };

		/** Required. Additional information about the Dataset. */
		metadata?: any;

		/** Output only. The resource name of the Artifact that was created in MetadataStore when creating the Dataset. The Artifact resource name pattern is `projects/{project}/locations/{location}/metadataStores/{metadata_store}/artifacts/{artifact}`. */
		metadataArtifact?: string | null;

		/** Required. Points to a YAML file stored on Google Cloud Storage describing additional information about the Dataset. The schema is defined as an OpenAPI 3.0.2 Schema Object. The schema files that can be used here are found in gs://google-cloud-aiplatform/schema/dataset/metadata/. */
		metadataSchemaUri?: string | null;

		/** Output only. The resource name of the Dataset. */
		name?: string | null;

		/** All SavedQueries belong to the Dataset will be returned in List/Get Dataset response. The annotation_specs field will not be populated except for UI cases which will only use annotation_spec_count. In CreateDataset request, a SavedQuery is created together if this field is set, up to one SavedQuery can be set in CreateDatasetRequest. The SavedQuery should not contain any AnnotationSpec. */
		savedQueries?: Array<GoogleCloudAiplatformV1beta1SavedQuery>;

		/** Output only. Timestamp when this Dataset was last updated. */
		updateTime?: string | null;
	}

	/** A collection of DataItems and Annotations on them. */
	export interface GoogleCloudAiplatformV1beta1DatasetFormProperties {

		/** Output only. Timestamp when this Dataset was created. */
		createTime: FormControl<string | null | undefined>,

		/** Output only. The number of DataItems in this Dataset. Only apply for non-structured Dataset. */
		dataItemCount: FormControl<string | null | undefined>,

		/** The description of the Dataset. */
		description: FormControl<string | null | undefined>,

		/** Required. The user-defined name of the Dataset. The name can be up to 128 characters long and can consist of any UTF-8 characters. */
		displayName: FormControl<string | null | undefined>,

		/** Used to perform consistent read-modify-write updates. If not set, a blind "overwrite" update happens. */
		etag: FormControl<string | null | undefined>,

		/** The labels with user-defined metadata to organize your Datasets. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. No more than 64 user labels can be associated with one Dataset (System labels are excluded). See https://goo.gl/xmQnxf for more information and examples of labels. System reserved label keys are prefixed with "aiplatform.googleapis.com/" and are immutable. Following system labels exist for each Dataset: * "aiplatform.googleapis.com/dataset_metadata_schema": output only, its value is the metadata_schema's title. */
		labels: FormControl<{[id: string]: string } | null | undefined>,

		/** Required. Additional information about the Dataset. */
		metadata: FormControl<any | null | undefined>,

		/** Output only. The resource name of the Artifact that was created in MetadataStore when creating the Dataset. The Artifact resource name pattern is `projects/{project}/locations/{location}/metadataStores/{metadata_store}/artifacts/{artifact}`. */
		metadataArtifact: FormControl<string | null | undefined>,

		/** Required. Points to a YAML file stored on Google Cloud Storage describing additional information about the Dataset. The schema is defined as an OpenAPI 3.0.2 Schema Object. The schema files that can be used here are found in gs://google-cloud-aiplatform/schema/dataset/metadata/. */
		metadataSchemaUri: FormControl<string | null | undefined>,

		/** Output only. The resource name of the Dataset. */
		name: FormControl<string | null | undefined>,

		/** Output only. Timestamp when this Dataset was last updated. */
		updateTime: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1DatasetFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1DatasetFormProperties>({
			createTime: new FormControl<string | null | undefined>(undefined),
			dataItemCount: new FormControl<string | null | undefined>(undefined),
			description: new FormControl<string | null | undefined>(undefined),
			displayName: new FormControl<string | null | undefined>(undefined),
			etag: new FormControl<string | null | undefined>(undefined),
			labels: new FormControl<{[id: string]: string } | null | undefined>(undefined),
			metadata: new FormControl<any | null | undefined>(undefined),
			metadataArtifact: new FormControl<string | null | undefined>(undefined),
			metadataSchemaUri: new FormControl<string | null | undefined>(undefined),
			name: new FormControl<string | null | undefined>(undefined),
			updateTime: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** A SavedQuery is a view of the dataset. It references a subset of annotations by problem type and filters. */
	export interface GoogleCloudAiplatformV1beta1SavedQuery {

		/** Output only. Filters on the Annotations in the dataset. */
		annotationFilter?: string | null;

		/** Output only. Number of AnnotationSpecs in the context of the SavedQuery. */
		annotationSpecCount?: number | null;

		/** Output only. Timestamp when this SavedQuery was created. */
		createTime?: string | null;

		/** Required. The user-defined name of the SavedQuery. The name can be up to 128 characters long and can consist of any UTF-8 characters. */
		displayName?: string | null;

		/** Used to perform a consistent read-modify-write update. If not set, a blind "overwrite" update happens. */
		etag?: string | null;

		/** Some additional information about the SavedQuery. */
		metadata?: any;

		/** Output only. Resource name of the SavedQuery. */
		name?: string | null;

		/** Required. Problem type of the SavedQuery. Allowed values: * IMAGE_CLASSIFICATION_SINGLE_LABEL * IMAGE_CLASSIFICATION_MULTI_LABEL * IMAGE_BOUNDING_POLY * IMAGE_BOUNDING_BOX * TEXT_CLASSIFICATION_SINGLE_LABEL * TEXT_CLASSIFICATION_MULTI_LABEL * TEXT_EXTRACTION * TEXT_SENTIMENT * VIDEO_CLASSIFICATION * VIDEO_OBJECT_TRACKING */
		problemType?: string | null;

		/** Output only. If the Annotations belonging to the SavedQuery can be used for AutoML training. */
		supportAutomlTraining?: boolean | null;

		/** Output only. Timestamp when SavedQuery was last updated. */
		updateTime?: string | null;
	}

	/** A SavedQuery is a view of the dataset. It references a subset of annotations by problem type and filters. */
	export interface GoogleCloudAiplatformV1beta1SavedQueryFormProperties {

		/** Output only. Filters on the Annotations in the dataset. */
		annotationFilter: FormControl<string | null | undefined>,

		/** Output only. Number of AnnotationSpecs in the context of the SavedQuery. */
		annotationSpecCount: FormControl<number | null | undefined>,

		/** Output only. Timestamp when this SavedQuery was created. */
		createTime: FormControl<string | null | undefined>,

		/** Required. The user-defined name of the SavedQuery. The name can be up to 128 characters long and can consist of any UTF-8 characters. */
		displayName: FormControl<string | null | undefined>,

		/** Used to perform a consistent read-modify-write update. If not set, a blind "overwrite" update happens. */
		etag: FormControl<string | null | undefined>,

		/** Some additional information about the SavedQuery. */
		metadata: FormControl<any | null | undefined>,

		/** Output only. Resource name of the SavedQuery. */
		name: FormControl<string | null | undefined>,

		/** Required. Problem type of the SavedQuery. Allowed values: * IMAGE_CLASSIFICATION_SINGLE_LABEL * IMAGE_CLASSIFICATION_MULTI_LABEL * IMAGE_BOUNDING_POLY * IMAGE_BOUNDING_BOX * TEXT_CLASSIFICATION_SINGLE_LABEL * TEXT_CLASSIFICATION_MULTI_LABEL * TEXT_EXTRACTION * TEXT_SENTIMENT * VIDEO_CLASSIFICATION * VIDEO_OBJECT_TRACKING */
		problemType: FormControl<string | null | undefined>,

		/** Output only. If the Annotations belonging to the SavedQuery can be used for AutoML training. */
		supportAutomlTraining: FormControl<boolean | null | undefined>,

		/** Output only. Timestamp when SavedQuery was last updated. */
		updateTime: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1SavedQueryFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1SavedQueryFormProperties>({
			annotationFilter: new FormControl<string | null | undefined>(undefined),
			annotationSpecCount: new FormControl<number | null | undefined>(undefined),
			createTime: new FormControl<string | null | undefined>(undefined),
			displayName: new FormControl<string | null | undefined>(undefined),
			etag: new FormControl<string | null | undefined>(undefined),
			metadata: new FormControl<any | null | undefined>(undefined),
			name: new FormControl<string | null | undefined>(undefined),
			problemType: new FormControl<string | null | undefined>(undefined),
			supportAutomlTraining: new FormControl<boolean | null | undefined>(undefined),
			updateTime: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Describes the dataset version. */
	export interface GoogleCloudAiplatformV1beta1DatasetVersion {

		/** Output only. Name of the associated BigQuery dataset. */
		bigQueryDatasetName?: string | null;

		/** Output only. Timestamp when this DatasetVersion was created. */
		createTime?: string | null;

		/** Used to perform consistent read-modify-write updates. If not set, a blind "overwrite" update happens. */
		etag?: string | null;

		/** Output only. The resource name of the DatasetVersion. */
		name?: string | null;

		/** Output only. Timestamp when this DatasetVersion was last updated. */
		updateTime?: string | null;
	}

	/** Describes the dataset version. */
	export interface GoogleCloudAiplatformV1beta1DatasetVersionFormProperties {

		/** Output only. Name of the associated BigQuery dataset. */
		bigQueryDatasetName: FormControl<string | null | undefined>,

		/** Output only. Timestamp when this DatasetVersion was created. */
		createTime: FormControl<string | null | undefined>,

		/** Used to perform consistent read-modify-write updates. If not set, a blind "overwrite" update happens. */
		etag: FormControl<string | null | undefined>,

		/** Output only. The resource name of the DatasetVersion. */
		name: FormControl<string | null | undefined>,

		/** Output only. Timestamp when this DatasetVersion was last updated. */
		updateTime: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1DatasetVersionFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1DatasetVersionFormProperties>({
			bigQueryDatasetName: new FormControl<string | null | undefined>(undefined),
			createTime: new FormControl<string | null | undefined>(undefined),
			etag: new FormControl<string | null | undefined>(undefined),
			name: new FormControl<string | null | undefined>(undefined),
			updateTime: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Details of operations that delete Feature values. */
	export interface GoogleCloudAiplatformV1beta1DeleteFeatureValuesOperationMetadata {

		/** Generic Metadata shared by all operations. */
		genericMetadata?: GoogleCloudAiplatformV1beta1GenericOperationMetadata;
	}

	/** Details of operations that delete Feature values. */
	export interface GoogleCloudAiplatformV1beta1DeleteFeatureValuesOperationMetadataFormProperties {
	}
	export function CreateGoogleCloudAiplatformV1beta1DeleteFeatureValuesOperationMetadataFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1DeleteFeatureValuesOperationMetadataFormProperties>({
		});

	}


	/** Request message for FeaturestoreService.DeleteFeatureValues. */
	export interface GoogleCloudAiplatformV1beta1DeleteFeatureValuesRequest {

		/** Message to select entity. If an entity id is selected, all the feature values corresponding to the entity id will be deleted, including the entityId. */
		selectEntity?: GoogleCloudAiplatformV1beta1DeleteFeatureValuesRequestSelectEntity;

		/** Message to select time range and feature. Values of the selected feature generated within an inclusive time range will be deleted. Using this option permanently deletes the feature values from the specified feature IDs within the specified time range. This might include data from the online storage. If you want to retain any deleted historical data in the online storage, you must re-ingest it. */
		selectTimeRangeAndFeature?: GoogleCloudAiplatformV1beta1DeleteFeatureValuesRequestSelectTimeRangeAndFeature;
	}

	/** Request message for FeaturestoreService.DeleteFeatureValues. */
	export interface GoogleCloudAiplatformV1beta1DeleteFeatureValuesRequestFormProperties {
	}
	export function CreateGoogleCloudAiplatformV1beta1DeleteFeatureValuesRequestFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1DeleteFeatureValuesRequestFormProperties>({
		});

	}


	/** Message to select entity. If an entity id is selected, all the feature values corresponding to the entity id will be deleted, including the entityId. */
	export interface GoogleCloudAiplatformV1beta1DeleteFeatureValuesRequestSelectEntity {

		/** Selector for entityId. Getting ids from the given source. */
		entityIdSelector?: GoogleCloudAiplatformV1beta1EntityIdSelector;
	}

	/** Message to select entity. If an entity id is selected, all the feature values corresponding to the entity id will be deleted, including the entityId. */
	export interface GoogleCloudAiplatformV1beta1DeleteFeatureValuesRequestSelectEntityFormProperties {
	}
	export function CreateGoogleCloudAiplatformV1beta1DeleteFeatureValuesRequestSelectEntityFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1DeleteFeatureValuesRequestSelectEntityFormProperties>({
		});

	}


	/** Selector for entityId. Getting ids from the given source. */
	export interface GoogleCloudAiplatformV1beta1EntityIdSelector {

		/** The storage details for CSV input content. */
		csvSource?: GoogleCloudAiplatformV1beta1CsvSource;

		/** Source column that holds entity IDs. If not provided, entity IDs are extracted from the column named entity_id. */
		entityIdField?: string | null;
	}

	/** Selector for entityId. Getting ids from the given source. */
	export interface GoogleCloudAiplatformV1beta1EntityIdSelectorFormProperties {

		/** Source column that holds entity IDs. If not provided, entity IDs are extracted from the column named entity_id. */
		entityIdField: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1EntityIdSelectorFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1EntityIdSelectorFormProperties>({
			entityIdField: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Message to select time range and feature. Values of the selected feature generated within an inclusive time range will be deleted. Using this option permanently deletes the feature values from the specified feature IDs within the specified time range. This might include data from the online storage. If you want to retain any deleted historical data in the online storage, you must re-ingest it. */
	export interface GoogleCloudAiplatformV1beta1DeleteFeatureValuesRequestSelectTimeRangeAndFeature {

		/** Selector for Features of an EntityType. */
		featureSelector?: GoogleCloudAiplatformV1beta1FeatureSelector;

		/** If set, data will not be deleted from online storage. When time range is older than the data in online storage, setting this to be true will make the deletion have no impact on online serving. */
		skipOnlineStorageDelete?: boolean | null;

		/** Represents a time interval, encoded as a Timestamp start (inclusive) and a Timestamp end (exclusive). The start must be less than or equal to the end. When the start equals the end, the interval is empty (matches no time). When both start and end are unspecified, the interval matches any time. */
		timeRange?: GoogleTypeInterval;
	}

	/** Message to select time range and feature. Values of the selected feature generated within an inclusive time range will be deleted. Using this option permanently deletes the feature values from the specified feature IDs within the specified time range. This might include data from the online storage. If you want to retain any deleted historical data in the online storage, you must re-ingest it. */
	export interface GoogleCloudAiplatformV1beta1DeleteFeatureValuesRequestSelectTimeRangeAndFeatureFormProperties {

		/** If set, data will not be deleted from online storage. When time range is older than the data in online storage, setting this to be true will make the deletion have no impact on online serving. */
		skipOnlineStorageDelete: FormControl<boolean | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1DeleteFeatureValuesRequestSelectTimeRangeAndFeatureFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1DeleteFeatureValuesRequestSelectTimeRangeAndFeatureFormProperties>({
			skipOnlineStorageDelete: new FormControl<boolean | null | undefined>(undefined),
		});

	}


	/** Represents a time interval, encoded as a Timestamp start (inclusive) and a Timestamp end (exclusive). The start must be less than or equal to the end. When the start equals the end, the interval is empty (matches no time). When both start and end are unspecified, the interval matches any time. */
	export interface GoogleTypeInterval {

		/** Optional. Exclusive end of the interval. If specified, a Timestamp matching this interval will have to be before the end. */
		endTime?: string | null;

		/** Optional. Inclusive start of the interval. If specified, a Timestamp matching this interval will have to be the same or after the start. */
		startTime?: string | null;
	}

	/** Represents a time interval, encoded as a Timestamp start (inclusive) and a Timestamp end (exclusive). The start must be less than or equal to the end. When the start equals the end, the interval is empty (matches no time). When both start and end are unspecified, the interval matches any time. */
	export interface GoogleTypeIntervalFormProperties {

		/** Optional. Exclusive end of the interval. If specified, a Timestamp matching this interval will have to be before the end. */
		endTime: FormControl<string | null | undefined>,

		/** Optional. Inclusive start of the interval. If specified, a Timestamp matching this interval will have to be the same or after the start. */
		startTime: FormControl<string | null | undefined>,
	}
	export function CreateGoogleTypeIntervalFormGroup() {
		return new FormGroup<GoogleTypeIntervalFormProperties>({
			endTime: new FormControl<string | null | undefined>(undefined),
			startTime: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Response message for FeaturestoreService.DeleteFeatureValues. */
	export interface GoogleCloudAiplatformV1beta1DeleteFeatureValuesResponse {

		/** Response message if the request uses the SelectEntity option. */
		selectEntity?: GoogleCloudAiplatformV1beta1DeleteFeatureValuesResponseSelectEntity;

		/** Response message if the request uses the SelectTimeRangeAndFeature option. */
		selectTimeRangeAndFeature?: GoogleCloudAiplatformV1beta1DeleteFeatureValuesResponseSelectTimeRangeAndFeature;
	}

	/** Response message for FeaturestoreService.DeleteFeatureValues. */
	export interface GoogleCloudAiplatformV1beta1DeleteFeatureValuesResponseFormProperties {
	}
	export function CreateGoogleCloudAiplatformV1beta1DeleteFeatureValuesResponseFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1DeleteFeatureValuesResponseFormProperties>({
		});

	}


	/** Response message if the request uses the SelectEntity option. */
	export interface GoogleCloudAiplatformV1beta1DeleteFeatureValuesResponseSelectEntity {

		/** The count of deleted entity rows in the offline storage. Each row corresponds to the combination of an entity ID and a timestamp. One entity ID can have multiple rows in the offline storage. */
		offlineStorageDeletedEntityRowCount?: string | null;

		/** The count of deleted entities in the online storage. Each entity ID corresponds to one entity. */
		onlineStorageDeletedEntityCount?: string | null;
	}

	/** Response message if the request uses the SelectEntity option. */
	export interface GoogleCloudAiplatformV1beta1DeleteFeatureValuesResponseSelectEntityFormProperties {

		/** The count of deleted entity rows in the offline storage. Each row corresponds to the combination of an entity ID and a timestamp. One entity ID can have multiple rows in the offline storage. */
		offlineStorageDeletedEntityRowCount: FormControl<string | null | undefined>,

		/** The count of deleted entities in the online storage. Each entity ID corresponds to one entity. */
		onlineStorageDeletedEntityCount: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1DeleteFeatureValuesResponseSelectEntityFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1DeleteFeatureValuesResponseSelectEntityFormProperties>({
			offlineStorageDeletedEntityRowCount: new FormControl<string | null | undefined>(undefined),
			onlineStorageDeletedEntityCount: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Response message if the request uses the SelectTimeRangeAndFeature option. */
	export interface GoogleCloudAiplatformV1beta1DeleteFeatureValuesResponseSelectTimeRangeAndFeature {

		/** The count of the features or columns impacted. This is the same as the feature count in the request. */
		impactedFeatureCount?: string | null;

		/** The count of modified entity rows in the offline storage. Each row corresponds to the combination of an entity ID and a timestamp. One entity ID can have multiple rows in the offline storage. Within each row, only the features specified in the request are deleted. */
		offlineStorageModifiedEntityRowCount?: string | null;

		/** The count of modified entities in the online storage. Each entity ID corresponds to one entity. Within each entity, only the features specified in the request are deleted. */
		onlineStorageModifiedEntityCount?: string | null;
	}

	/** Response message if the request uses the SelectTimeRangeAndFeature option. */
	export interface GoogleCloudAiplatformV1beta1DeleteFeatureValuesResponseSelectTimeRangeAndFeatureFormProperties {

		/** The count of the features or columns impacted. This is the same as the feature count in the request. */
		impactedFeatureCount: FormControl<string | null | undefined>,

		/** The count of modified entity rows in the offline storage. Each row corresponds to the combination of an entity ID and a timestamp. One entity ID can have multiple rows in the offline storage. Within each row, only the features specified in the request are deleted. */
		offlineStorageModifiedEntityRowCount: FormControl<string | null | undefined>,

		/** The count of modified entities in the online storage. Each entity ID corresponds to one entity. Within each entity, only the features specified in the request are deleted. */
		onlineStorageModifiedEntityCount: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1DeleteFeatureValuesResponseSelectTimeRangeAndFeatureFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1DeleteFeatureValuesResponseSelectTimeRangeAndFeatureFormProperties>({
			impactedFeatureCount: new FormControl<string | null | undefined>(undefined),
			offlineStorageModifiedEntityRowCount: new FormControl<string | null | undefined>(undefined),
			onlineStorageModifiedEntityCount: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Details of operations that perform MetadataService.DeleteMetadataStore. */
	export interface GoogleCloudAiplatformV1beta1DeleteMetadataStoreOperationMetadata {

		/** Generic Metadata shared by all operations. */
		genericMetadata?: GoogleCloudAiplatformV1beta1GenericOperationMetadata;
	}

	/** Details of operations that perform MetadataService.DeleteMetadataStore. */
	export interface GoogleCloudAiplatformV1beta1DeleteMetadataStoreOperationMetadataFormProperties {
	}
	export function CreateGoogleCloudAiplatformV1beta1DeleteMetadataStoreOperationMetadataFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1DeleteMetadataStoreOperationMetadataFormProperties>({
		});

	}


	/** Details of operations that perform deletes of any entities. */
	export interface GoogleCloudAiplatformV1beta1DeleteOperationMetadata {

		/** Generic Metadata shared by all operations. */
		genericMetadata?: GoogleCloudAiplatformV1beta1GenericOperationMetadata;
	}

	/** Details of operations that perform deletes of any entities. */
	export interface GoogleCloudAiplatformV1beta1DeleteOperationMetadataFormProperties {
	}
	export function CreateGoogleCloudAiplatformV1beta1DeleteOperationMetadataFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1DeleteOperationMetadataFormProperties>({
		});

	}


	/** Runtime operation information for IndexEndpointService.DeployIndex. */
	export interface GoogleCloudAiplatformV1beta1DeployIndexOperationMetadata {

		/** The unique index id specified by user */
		deployedIndexId?: string | null;

		/** Generic Metadata shared by all operations. */
		genericMetadata?: GoogleCloudAiplatformV1beta1GenericOperationMetadata;
	}

	/** Runtime operation information for IndexEndpointService.DeployIndex. */
	export interface GoogleCloudAiplatformV1beta1DeployIndexOperationMetadataFormProperties {

		/** The unique index id specified by user */
		deployedIndexId: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1DeployIndexOperationMetadataFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1DeployIndexOperationMetadataFormProperties>({
			deployedIndexId: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Request message for IndexEndpointService.DeployIndex. */
	export interface GoogleCloudAiplatformV1beta1DeployIndexRequest {

		/** A deployment of an Index. IndexEndpoints contain one or more DeployedIndexes. */
		deployedIndex?: GoogleCloudAiplatformV1beta1DeployedIndex;
	}

	/** Request message for IndexEndpointService.DeployIndex. */
	export interface GoogleCloudAiplatformV1beta1DeployIndexRequestFormProperties {
	}
	export function CreateGoogleCloudAiplatformV1beta1DeployIndexRequestFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1DeployIndexRequestFormProperties>({
		});

	}


	/** A deployment of an Index. IndexEndpoints contain one or more DeployedIndexes. */
	export interface GoogleCloudAiplatformV1beta1DeployedIndex {

		/** A description of resources that to large degree are decided by Vertex AI, and require only a modest additional configuration. Each Model supporting these resources documents its specific guidelines. */
		automaticResources?: GoogleCloudAiplatformV1beta1AutomaticResources;

		/** Output only. Timestamp when the DeployedIndex was created. */
		createTime?: string | null;

		/** A description of resources that are dedicated to a DeployedModel, and that need a higher degree of manual configuration. */
		dedicatedResources?: GoogleCloudAiplatformV1beta1DedicatedResources;

		/** Used to set up the auth on the DeployedIndex's private endpoint. */
		deployedIndexAuthConfig?: GoogleCloudAiplatformV1beta1DeployedIndexAuthConfig;

		/** Optional. The deployment group can be no longer than 64 characters (eg: 'test', 'prod'). If not set, we will use the 'default' deployment group. Creating `deployment_groups` with `reserved_ip_ranges` is a recommended practice when the peered network has multiple peering ranges. This creates your deployments from predictable IP spaces for easier traffic administration. Also, one deployment_group (except 'default') can only be used with the same reserved_ip_ranges which means if the deployment_group has been used with reserved_ip_ranges: [a, b, c], using it with [a, b] or [d, e] is disallowed. Note: we only support up to 5 deployment groups(not including 'default'). */
		deploymentGroup?: string | null;

		/** The display name of the DeployedIndex. If not provided upon creation, the Index's display_name is used. */
		displayName?: string | null;

		/** Optional. If true, private endpoint's access logs are sent to Cloud Logging. These logs are like standard server access logs, containing information like timestamp and latency for each MatchRequest. Note that logs may incur a cost, especially if the deployed index receives a high queries per second rate (QPS). Estimate your costs before enabling this option. */
		enableAccessLogging?: boolean | null;

		/** Required. The user specified ID of the DeployedIndex. The ID can be up to 128 characters long and must start with a letter and only contain letters, numbers, and underscores. The ID must be unique within the project it is created in. */
		id?: string | null;

		/** Required. The name of the Index this is the deployment of. We may refer to this Index as the DeployedIndex's "original" Index. */
		index?: string | null;

		/** Output only. The DeployedIndex may depend on various data on its original Index. Additionally when certain changes to the original Index are being done (e.g. when what the Index contains is being changed) the DeployedIndex may be asynchronously updated in the background to reflect these changes. If this timestamp's value is at least the Index.update_time of the original Index, it means that this DeployedIndex and the original Index are in sync. If this timestamp is older, then to see which updates this DeployedIndex already contains (and which it does not), one must list the operations that are running on the original Index. Only the successfully completed Operations with update_time equal or before this sync time are contained in this DeployedIndex. */
		indexSyncTime?: string | null;

		/** IndexPrivateEndpoints proto is used to provide paths for users to send requests via private endpoints (e.g. private service access, private service connect). To send request via private service access, use match_grpc_address. To send request via private service connect, use service_attachment. */
		privateEndpoints?: GoogleCloudAiplatformV1beta1IndexPrivateEndpoints;

		/** Optional. A list of reserved ip ranges under the VPC network that can be used for this DeployedIndex. If set, we will deploy the index within the provided ip ranges. Otherwise, the index might be deployed to any ip ranges under the provided VPC network. The value should be the name of the address (https://cloud.google.com/compute/docs/reference/rest/v1/addresses) Example: ['vertex-ai-ip-range']. For more information about subnets and network IP ranges, please see https://cloud.google.com/vpc/docs/subnets#manually_created_subnet_ip_ranges. */
		reservedIpRanges?: Array<string>;
	}

	/** A deployment of an Index. IndexEndpoints contain one or more DeployedIndexes. */
	export interface GoogleCloudAiplatformV1beta1DeployedIndexFormProperties {

		/** Output only. Timestamp when the DeployedIndex was created. */
		createTime: FormControl<string | null | undefined>,

		/** Optional. The deployment group can be no longer than 64 characters (eg: 'test', 'prod'). If not set, we will use the 'default' deployment group. Creating `deployment_groups` with `reserved_ip_ranges` is a recommended practice when the peered network has multiple peering ranges. This creates your deployments from predictable IP spaces for easier traffic administration. Also, one deployment_group (except 'default') can only be used with the same reserved_ip_ranges which means if the deployment_group has been used with reserved_ip_ranges: [a, b, c], using it with [a, b] or [d, e] is disallowed. Note: we only support up to 5 deployment groups(not including 'default'). */
		deploymentGroup: FormControl<string | null | undefined>,

		/** The display name of the DeployedIndex. If not provided upon creation, the Index's display_name is used. */
		displayName: FormControl<string | null | undefined>,

		/** Optional. If true, private endpoint's access logs are sent to Cloud Logging. These logs are like standard server access logs, containing information like timestamp and latency for each MatchRequest. Note that logs may incur a cost, especially if the deployed index receives a high queries per second rate (QPS). Estimate your costs before enabling this option. */
		enableAccessLogging: FormControl<boolean | null | undefined>,

		/** Required. The user specified ID of the DeployedIndex. The ID can be up to 128 characters long and must start with a letter and only contain letters, numbers, and underscores. The ID must be unique within the project it is created in. */
		id: FormControl<string | null | undefined>,

		/** Required. The name of the Index this is the deployment of. We may refer to this Index as the DeployedIndex's "original" Index. */
		index: FormControl<string | null | undefined>,

		/** Output only. The DeployedIndex may depend on various data on its original Index. Additionally when certain changes to the original Index are being done (e.g. when what the Index contains is being changed) the DeployedIndex may be asynchronously updated in the background to reflect these changes. If this timestamp's value is at least the Index.update_time of the original Index, it means that this DeployedIndex and the original Index are in sync. If this timestamp is older, then to see which updates this DeployedIndex already contains (and which it does not), one must list the operations that are running on the original Index. Only the successfully completed Operations with update_time equal or before this sync time are contained in this DeployedIndex. */
		indexSyncTime: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1DeployedIndexFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1DeployedIndexFormProperties>({
			createTime: new FormControl<string | null | undefined>(undefined),
			deploymentGroup: new FormControl<string | null | undefined>(undefined),
			displayName: new FormControl<string | null | undefined>(undefined),
			enableAccessLogging: new FormControl<boolean | null | undefined>(undefined),
			id: new FormControl<string | null | undefined>(undefined),
			index: new FormControl<string | null | undefined>(undefined),
			indexSyncTime: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Used to set up the auth on the DeployedIndex's private endpoint. */
	export interface GoogleCloudAiplatformV1beta1DeployedIndexAuthConfig {

		/** Configuration for an authentication provider, including support for [JSON Web Token (JWT)](https://tools.ietf.org/html/draft-ietf-oauth-json-web-token-32). */
		authProvider?: GoogleCloudAiplatformV1beta1DeployedIndexAuthConfigAuthProvider;
	}

	/** Used to set up the auth on the DeployedIndex's private endpoint. */
	export interface GoogleCloudAiplatformV1beta1DeployedIndexAuthConfigFormProperties {
	}
	export function CreateGoogleCloudAiplatformV1beta1DeployedIndexAuthConfigFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1DeployedIndexAuthConfigFormProperties>({
		});

	}


	/** Configuration for an authentication provider, including support for [JSON Web Token (JWT)](https://tools.ietf.org/html/draft-ietf-oauth-json-web-token-32). */
	export interface GoogleCloudAiplatformV1beta1DeployedIndexAuthConfigAuthProvider {

		/** A list of allowed JWT issuers. Each entry must be a valid Google service account, in the following format: `service-account-name@project-id.iam.gserviceaccount.com` */
		allowedIssuers?: Array<string>;

		/** The list of JWT [audiences](https://tools.ietf.org/html/draft-ietf-oauth-json-web-token-32#section-4.1.3). that are allowed to access. A JWT containing any of these audiences will be accepted. */
		audiences?: Array<string>;
	}

	/** Configuration for an authentication provider, including support for [JSON Web Token (JWT)](https://tools.ietf.org/html/draft-ietf-oauth-json-web-token-32). */
	export interface GoogleCloudAiplatformV1beta1DeployedIndexAuthConfigAuthProviderFormProperties {
	}
	export function CreateGoogleCloudAiplatformV1beta1DeployedIndexAuthConfigAuthProviderFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1DeployedIndexAuthConfigAuthProviderFormProperties>({
		});

	}


	/** IndexPrivateEndpoints proto is used to provide paths for users to send requests via private endpoints (e.g. private service access, private service connect). To send request via private service access, use match_grpc_address. To send request via private service connect, use service_attachment. */
	export interface GoogleCloudAiplatformV1beta1IndexPrivateEndpoints {

		/** Output only. The ip address used to send match gRPC requests. */
		matchGrpcAddress?: string | null;

		/** Output only. The name of the service attachment resource. Populated if private service connect is enabled. */
		serviceAttachment?: string | null;
	}

	/** IndexPrivateEndpoints proto is used to provide paths for users to send requests via private endpoints (e.g. private service access, private service connect). To send request via private service access, use match_grpc_address. To send request via private service connect, use service_attachment. */
	export interface GoogleCloudAiplatformV1beta1IndexPrivateEndpointsFormProperties {

		/** Output only. The ip address used to send match gRPC requests. */
		matchGrpcAddress: FormControl<string | null | undefined>,

		/** Output only. The name of the service attachment resource. Populated if private service connect is enabled. */
		serviceAttachment: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1IndexPrivateEndpointsFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1IndexPrivateEndpointsFormProperties>({
			matchGrpcAddress: new FormControl<string | null | undefined>(undefined),
			serviceAttachment: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Response message for IndexEndpointService.DeployIndex. */
	export interface GoogleCloudAiplatformV1beta1DeployIndexResponse {

		/** A deployment of an Index. IndexEndpoints contain one or more DeployedIndexes. */
		deployedIndex?: GoogleCloudAiplatformV1beta1DeployedIndex;
	}

	/** Response message for IndexEndpointService.DeployIndex. */
	export interface GoogleCloudAiplatformV1beta1DeployIndexResponseFormProperties {
	}
	export function CreateGoogleCloudAiplatformV1beta1DeployIndexResponseFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1DeployIndexResponseFormProperties>({
		});

	}


	/** Runtime operation information for EndpointService.DeployModel. */
	export interface GoogleCloudAiplatformV1beta1DeployModelOperationMetadata {

		/** Generic Metadata shared by all operations. */
		genericMetadata?: GoogleCloudAiplatformV1beta1GenericOperationMetadata;
	}

	/** Runtime operation information for EndpointService.DeployModel. */
	export interface GoogleCloudAiplatformV1beta1DeployModelOperationMetadataFormProperties {
	}
	export function CreateGoogleCloudAiplatformV1beta1DeployModelOperationMetadataFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1DeployModelOperationMetadataFormProperties>({
		});

	}


	/** Request message for EndpointService.DeployModel. */
	export interface GoogleCloudAiplatformV1beta1DeployModelRequest {

		/** A deployment of a Model. Endpoints contain one or more DeployedModels. */
		deployedModel?: GoogleCloudAiplatformV1beta1DeployedModel;

		/** A map from a DeployedModel's ID to the percentage of this Endpoint's traffic that should be forwarded to that DeployedModel. If this field is non-empty, then the Endpoint's traffic_split will be overwritten with it. To refer to the ID of the just being deployed Model, a "0" should be used, and the actual ID of the new DeployedModel will be filled in its place by this method. The traffic percentage values must add up to 100. If this field is empty, then the Endpoint's traffic_split is not updated. */
		trafficSplit?: {[id: string]: number };
	}

	/** Request message for EndpointService.DeployModel. */
	export interface GoogleCloudAiplatformV1beta1DeployModelRequestFormProperties {

		/** A map from a DeployedModel's ID to the percentage of this Endpoint's traffic that should be forwarded to that DeployedModel. If this field is non-empty, then the Endpoint's traffic_split will be overwritten with it. To refer to the ID of the just being deployed Model, a "0" should be used, and the actual ID of the new DeployedModel will be filled in its place by this method. The traffic percentage values must add up to 100. If this field is empty, then the Endpoint's traffic_split is not updated. */
		trafficSplit: FormControl<{[id: string]: number } | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1DeployModelRequestFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1DeployModelRequestFormProperties>({
			trafficSplit: new FormControl<{[id: string]: number } | null | undefined>(undefined),
		});

	}


	/** A deployment of a Model. Endpoints contain one or more DeployedModels. */
	export interface GoogleCloudAiplatformV1beta1DeployedModel {

		/** A description of resources that to large degree are decided by Vertex AI, and require only a modest additional configuration. Each Model supporting these resources documents its specific guidelines. */
		automaticResources?: GoogleCloudAiplatformV1beta1AutomaticResources;

		/** Output only. Timestamp when the DeployedModel was created. */
		createTime?: string | null;

		/** A description of resources that are dedicated to a DeployedModel, and that need a higher degree of manual configuration. */
		dedicatedResources?: GoogleCloudAiplatformV1beta1DedicatedResources;

		/** If true, deploy the model without explainable feature, regardless the existence of Model.explanation_spec or explanation_spec. */
		disableExplanations?: boolean | null;

		/** The display name of the DeployedModel. If not provided upon creation, the Model's display_name is used. */
		displayName?: string | null;

		/** If true, online prediction access logs are sent to Cloud Logging. These logs are like standard server access logs, containing information like timestamp and latency for each prediction request. Note that logs may incur a cost, especially if your project receives prediction requests at a high queries per second rate (QPS). Estimate your costs before enabling this option. */
		enableAccessLogging?: boolean | null;

		/** If true, the container of the DeployedModel instances will send `stderr` and `stdout` streams to Cloud Logging. Only supported for custom-trained Models and AutoML Tabular Models. */
		enableContainerLogging?: boolean | null;

		/** Specification of Model explanation. */
		explanationSpec?: GoogleCloudAiplatformV1beta1ExplanationSpec;

		/** Immutable. The ID of the DeployedModel. If not provided upon deployment, Vertex AI will generate a value for this ID. This value should be 1-10 characters, and valid characters are `/[0-9]/`. */
		id?: string | null;

		/** Required. The resource name of the Model that this is the deployment of. Note that the Model may be in a different location than the DeployedModel's Endpoint. The resource name may contain version id or version alias to specify the version. Example: `projects/{project}/locations/{location}/models/{model}@2` or `projects/{project}/locations/{location}/models/{model}@golden` if no version is specified, the default version will be deployed. */
		model?: string | null;

		/** Output only. The version ID of the model that is deployed. */
		modelVersionId?: string | null;

		/** PrivateEndpoints proto is used to provide paths for users to send requests privately. To send request via private service access, use predict_http_uri, explain_http_uri or health_http_uri. To send request via private service connect, use service_attachment. */
		privateEndpoints?: GoogleCloudAiplatformV1beta1PrivateEndpoints;

		/** The service account that the DeployedModel's container runs as. Specify the email address of the service account. If this service account is not specified, the container runs as a service account that doesn't have access to the resource project. Users deploying the Model must have the `iam.serviceAccounts.actAs` permission on this service account. */
		serviceAccount?: string | null;

		/** The resource name of the shared DeploymentResourcePool to deploy on. Format: `projects/{project}/locations/{location}/deploymentResourcePools/{deployment_resource_pool}` */
		sharedResources?: string | null;
	}

	/** A deployment of a Model. Endpoints contain one or more DeployedModels. */
	export interface GoogleCloudAiplatformV1beta1DeployedModelFormProperties {

		/** Output only. Timestamp when the DeployedModel was created. */
		createTime: FormControl<string | null | undefined>,

		/** If true, deploy the model without explainable feature, regardless the existence of Model.explanation_spec or explanation_spec. */
		disableExplanations: FormControl<boolean | null | undefined>,

		/** The display name of the DeployedModel. If not provided upon creation, the Model's display_name is used. */
		displayName: FormControl<string | null | undefined>,

		/** If true, online prediction access logs are sent to Cloud Logging. These logs are like standard server access logs, containing information like timestamp and latency for each prediction request. Note that logs may incur a cost, especially if your project receives prediction requests at a high queries per second rate (QPS). Estimate your costs before enabling this option. */
		enableAccessLogging: FormControl<boolean | null | undefined>,

		/** If true, the container of the DeployedModel instances will send `stderr` and `stdout` streams to Cloud Logging. Only supported for custom-trained Models and AutoML Tabular Models. */
		enableContainerLogging: FormControl<boolean | null | undefined>,

		/** Immutable. The ID of the DeployedModel. If not provided upon deployment, Vertex AI will generate a value for this ID. This value should be 1-10 characters, and valid characters are `/[0-9]/`. */
		id: FormControl<string | null | undefined>,

		/** Required. The resource name of the Model that this is the deployment of. Note that the Model may be in a different location than the DeployedModel's Endpoint. The resource name may contain version id or version alias to specify the version. Example: `projects/{project}/locations/{location}/models/{model}@2` or `projects/{project}/locations/{location}/models/{model}@golden` if no version is specified, the default version will be deployed. */
		model: FormControl<string | null | undefined>,

		/** Output only. The version ID of the model that is deployed. */
		modelVersionId: FormControl<string | null | undefined>,

		/** The service account that the DeployedModel's container runs as. Specify the email address of the service account. If this service account is not specified, the container runs as a service account that doesn't have access to the resource project. Users deploying the Model must have the `iam.serviceAccounts.actAs` permission on this service account. */
		serviceAccount: FormControl<string | null | undefined>,

		/** The resource name of the shared DeploymentResourcePool to deploy on. Format: `projects/{project}/locations/{location}/deploymentResourcePools/{deployment_resource_pool}` */
		sharedResources: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1DeployedModelFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1DeployedModelFormProperties>({
			createTime: new FormControl<string | null | undefined>(undefined),
			disableExplanations: new FormControl<boolean | null | undefined>(undefined),
			displayName: new FormControl<string | null | undefined>(undefined),
			enableAccessLogging: new FormControl<boolean | null | undefined>(undefined),
			enableContainerLogging: new FormControl<boolean | null | undefined>(undefined),
			id: new FormControl<string | null | undefined>(undefined),
			model: new FormControl<string | null | undefined>(undefined),
			modelVersionId: new FormControl<string | null | undefined>(undefined),
			serviceAccount: new FormControl<string | null | undefined>(undefined),
			sharedResources: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** PrivateEndpoints proto is used to provide paths for users to send requests privately. To send request via private service access, use predict_http_uri, explain_http_uri or health_http_uri. To send request via private service connect, use service_attachment. */
	export interface GoogleCloudAiplatformV1beta1PrivateEndpoints {

		/** Output only. Http(s) path to send explain requests. */
		explainHttpUri?: string | null;

		/** Output only. Http(s) path to send health check requests. */
		healthHttpUri?: string | null;

		/** Output only. Http(s) path to send prediction requests. */
		predictHttpUri?: string | null;

		/** Output only. The name of the service attachment resource. Populated if private service connect is enabled. */
		serviceAttachment?: string | null;
	}

	/** PrivateEndpoints proto is used to provide paths for users to send requests privately. To send request via private service access, use predict_http_uri, explain_http_uri or health_http_uri. To send request via private service connect, use service_attachment. */
	export interface GoogleCloudAiplatformV1beta1PrivateEndpointsFormProperties {

		/** Output only. Http(s) path to send explain requests. */
		explainHttpUri: FormControl<string | null | undefined>,

		/** Output only. Http(s) path to send health check requests. */
		healthHttpUri: FormControl<string | null | undefined>,

		/** Output only. Http(s) path to send prediction requests. */
		predictHttpUri: FormControl<string | null | undefined>,

		/** Output only. The name of the service attachment resource. Populated if private service connect is enabled. */
		serviceAttachment: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1PrivateEndpointsFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1PrivateEndpointsFormProperties>({
			explainHttpUri: new FormControl<string | null | undefined>(undefined),
			healthHttpUri: new FormControl<string | null | undefined>(undefined),
			predictHttpUri: new FormControl<string | null | undefined>(undefined),
			serviceAttachment: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Response message for EndpointService.DeployModel. */
	export interface GoogleCloudAiplatformV1beta1DeployModelResponse {

		/** A deployment of a Model. Endpoints contain one or more DeployedModels. */
		deployedModel?: GoogleCloudAiplatformV1beta1DeployedModel;
	}

	/** Response message for EndpointService.DeployModel. */
	export interface GoogleCloudAiplatformV1beta1DeployModelResponseFormProperties {
	}
	export function CreateGoogleCloudAiplatformV1beta1DeployModelResponseFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1DeployModelResponseFormProperties>({
		});

	}


	/** Runtime operation information for SolverService.DeploySolver. */
	export interface GoogleCloudAiplatformV1beta1DeploySolverOperationMetadata {

		/** Generic Metadata shared by all operations. */
		genericMetadata?: GoogleCloudAiplatformV1beta1GenericOperationMetadata;
	}

	/** Runtime operation information for SolverService.DeploySolver. */
	export interface GoogleCloudAiplatformV1beta1DeploySolverOperationMetadataFormProperties {
	}
	export function CreateGoogleCloudAiplatformV1beta1DeploySolverOperationMetadataFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1DeploySolverOperationMetadataFormProperties>({
		});

	}


	/** Points to a DeployedIndex. */
	export interface GoogleCloudAiplatformV1beta1DeployedIndexRef {

		/** Immutable. The ID of the DeployedIndex in the above IndexEndpoint. */
		deployedIndexId?: string | null;

		/** Output only. The display name of the DeployedIndex. */
		displayName?: string | null;

		/** Immutable. A resource name of the IndexEndpoint. */
		indexEndpoint?: string | null;
	}

	/** Points to a DeployedIndex. */
	export interface GoogleCloudAiplatformV1beta1DeployedIndexRefFormProperties {

		/** Immutable. The ID of the DeployedIndex in the above IndexEndpoint. */
		deployedIndexId: FormControl<string | null | undefined>,

		/** Output only. The display name of the DeployedIndex. */
		displayName: FormControl<string | null | undefined>,

		/** Immutable. A resource name of the IndexEndpoint. */
		indexEndpoint: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1DeployedIndexRefFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1DeployedIndexRefFormProperties>({
			deployedIndexId: new FormControl<string | null | undefined>(undefined),
			displayName: new FormControl<string | null | undefined>(undefined),
			indexEndpoint: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Points to a DeployedModel. */
	export interface GoogleCloudAiplatformV1beta1DeployedModelRef {

		/** Immutable. An ID of a DeployedModel in the above Endpoint. */
		deployedModelId?: string | null;

		/** Immutable. A resource name of an Endpoint. */
		endpoint?: string | null;
	}

	/** Points to a DeployedModel. */
	export interface GoogleCloudAiplatformV1beta1DeployedModelRefFormProperties {

		/** Immutable. An ID of a DeployedModel in the above Endpoint. */
		deployedModelId: FormControl<string | null | undefined>,

		/** Immutable. A resource name of an Endpoint. */
		endpoint: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1DeployedModelRefFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1DeployedModelRefFormProperties>({
			deployedModelId: new FormControl<string | null | undefined>(undefined),
			endpoint: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Request message for PredictionService.DirectPredict. */
	export interface GoogleCloudAiplatformV1beta1DirectPredictRequest {

		/** The prediction input. */
		inputs?: Array<GoogleCloudAiplatformV1beta1Tensor>;

		/** A tensor value type. */
		parameters?: GoogleCloudAiplatformV1beta1Tensor;
	}

	/** Request message for PredictionService.DirectPredict. */
	export interface GoogleCloudAiplatformV1beta1DirectPredictRequestFormProperties {
	}
	export function CreateGoogleCloudAiplatformV1beta1DirectPredictRequestFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1DirectPredictRequestFormProperties>({
		});

	}


	/** A tensor value type. */
	export interface GoogleCloudAiplatformV1beta1Tensor {

		/** Type specific representations that make it easy to create tensor protos in all languages. Only the representation corresponding to "dtype" can be set. The values hold the flattened representation of the tensor in row major order. BOOL */
		boolVal?: Array<boolean>;

		/** STRING */
		bytesVal?: Array<string>;

		/** DOUBLE */
		doubleVal?: Array<number>;

		/** The data type of tensor. */
		dtype?: GoogleCloudAiplatformV1beta1TensorDtype | null;

		/** FLOAT */
		floatVal?: Array<number>;

		/** INT64 */
		int64Val?: Array<string>;

		/** INT_8 INT_16 INT_32 */
		intVal?: Array<number>;

		/** A list of tensor values. */
		listVal?: Array<GoogleCloudAiplatformV1beta1Tensor>;

		/** Shape of the tensor. */
		shape?: Array<string>;

		/** STRING */
		stringVal?: Array<string>;

		/** A map of string to tensor. */
		structVal?: {[id: string]: GoogleCloudAiplatformV1beta1Tensor };

		/** Serialized raw tensor content. */
		tensorVal?: string | null;

		/** UINT64 */
		uint64Val?: Array<string>;

		/** UINT8 UINT16 UINT32 */
		uintVal?: Array<number>;
	}

	/** A tensor value type. */
	export interface GoogleCloudAiplatformV1beta1TensorFormProperties {

		/** The data type of tensor. */
		dtype: FormControl<GoogleCloudAiplatformV1beta1TensorDtype | null | undefined>,

		/** A map of string to tensor. */
		structVal: FormControl<{[id: string]: GoogleCloudAiplatformV1beta1Tensor } | null | undefined>,

		/** Serialized raw tensor content. */
		tensorVal: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1TensorFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1TensorFormProperties>({
			dtype: new FormControl<GoogleCloudAiplatformV1beta1TensorDtype | null | undefined>(undefined),
			structVal: new FormControl<{[id: string]: GoogleCloudAiplatformV1beta1Tensor } | null | undefined>(undefined),
			tensorVal: new FormControl<string | null | undefined>(undefined),
		});

	}

	export enum GoogleCloudAiplatformV1beta1TensorDtype { DATA_TYPE_UNSPECIFIED = 0, BOOL = 1, STRING = 2, FLOAT = 3, DOUBLE = 4, INT8 = 5, INT16 = 6, INT32 = 7, INT64 = 8, UINT8 = 9, UINT16 = 10, UINT32 = 11, UINT64 = 12 }


	/** Response message for PredictionService.DirectPredict. */
	export interface GoogleCloudAiplatformV1beta1DirectPredictResponse {

		/** The prediction output. */
		outputs?: Array<GoogleCloudAiplatformV1beta1Tensor>;

		/** A tensor value type. */
		parameters?: GoogleCloudAiplatformV1beta1Tensor;
	}

	/** Response message for PredictionService.DirectPredict. */
	export interface GoogleCloudAiplatformV1beta1DirectPredictResponseFormProperties {
	}
	export function CreateGoogleCloudAiplatformV1beta1DirectPredictResponseFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1DirectPredictResponseFormProperties>({
		});

	}


	/** Request message for PredictionService.DirectRawPredict. */
	export interface GoogleCloudAiplatformV1beta1DirectRawPredictRequest {

		/** The prediction input. */
		input?: string | null;

		/** Fully qualified name of the API method being invoked to perform predictions. Format: `/namespace.Service/Method/` Example: `/tensorflow.serving.PredictionService/Predict` */
		methodName?: string | null;
	}

	/** Request message for PredictionService.DirectRawPredict. */
	export interface GoogleCloudAiplatformV1beta1DirectRawPredictRequestFormProperties {

		/** The prediction input. */
		input: FormControl<string | null | undefined>,

		/** Fully qualified name of the API method being invoked to perform predictions. Format: `/namespace.Service/Method/` Example: `/tensorflow.serving.PredictionService/Predict` */
		methodName: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1DirectRawPredictRequestFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1DirectRawPredictRequestFormProperties>({
			input: new FormControl<string | null | undefined>(undefined),
			methodName: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Response message for PredictionService.DirectRawPredict. */
	export interface GoogleCloudAiplatformV1beta1DirectRawPredictResponse {

		/** The prediction output. */
		output?: string | null;
	}

	/** Response message for PredictionService.DirectRawPredict. */
	export interface GoogleCloudAiplatformV1beta1DirectRawPredictResponseFormProperties {

		/** The prediction output. */
		output: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1DirectRawPredictResponseFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1DirectRawPredictResponseFormProperties>({
			output: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** A list of double values. */
	export interface GoogleCloudAiplatformV1beta1DoubleArray {

		/** A list of double values. */
		values?: Array<number>;
	}

	/** A list of double values. */
	export interface GoogleCloudAiplatformV1beta1DoubleArrayFormProperties {
	}
	export function CreateGoogleCloudAiplatformV1beta1DoubleArrayFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1DoubleArrayFormProperties>({
		});

	}


	/** Models are deployed into it, and afterwards Endpoint is called to obtain predictions and explanations. */
	export interface GoogleCloudAiplatformV1beta1Endpoint {

		/** Output only. Timestamp when this Endpoint was created. */
		createTime?: string | null;

		/** Output only. The models deployed in this Endpoint. To add or remove DeployedModels use EndpointService.DeployModel and EndpointService.UndeployModel respectively. */
		deployedModels?: Array<GoogleCloudAiplatformV1beta1DeployedModel>;

		/** The description of the Endpoint. */
		description?: string | null;

		/** Required. The display name of the Endpoint. The name can be up to 128 characters long and can consist of any UTF-8 characters. */
		displayName?: string | null;

		/** Deprecated: If true, expose the Endpoint via private service connect. Only one of the fields, network or enable_private_service_connect, can be set. */
		enablePrivateServiceConnect?: boolean | null;

		/** Represents a customer-managed encryption key spec that can be applied to a top-level resource. */
		encryptionSpec?: GoogleCloudAiplatformV1beta1EncryptionSpec;

		/** Used to perform consistent read-modify-write updates. If not set, a blind "overwrite" update happens. */
		etag?: string | null;

		/** The labels with user-defined metadata to organize your Endpoints. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. See https://goo.gl/xmQnxf for more information and examples of labels. */
		labels?: {[id: string]: string };

		/** Output only. Resource name of the Model Monitoring job associated with this Endpoint if monitoring is enabled by JobService.CreateModelDeploymentMonitoringJob. Format: `projects/{project}/locations/{location}/modelDeploymentMonitoringJobs/{model_deployment_monitoring_job}` */
		modelDeploymentMonitoringJob?: string | null;

		/** Output only. The resource name of the Endpoint. */
		name?: string | null;

		/** Optional. The full name of the Google Compute Engine [network](https://cloud.google.com//compute/docs/networks-and-firewalls#networks) to which the Endpoint should be peered. Private services access must already be configured for the network. If left unspecified, the Endpoint is not peered with any network. Only one of the fields, network or enable_private_service_connect, can be set. [Format](https://cloud.google.com/compute/docs/reference/rest/v1/networks/insert): `projects/{project}/global/networks/{network}`. Where `{project}` is a project number, as in `12345`, and `{network}` is network name. */
		network?: string | null;

		/** Configuration for logging request-response to a BigQuery table. */
		predictRequestResponseLoggingConfig?: GoogleCloudAiplatformV1beta1PredictRequestResponseLoggingConfig;

		/** A map from a DeployedModel's ID to the percentage of this Endpoint's traffic that should be forwarded to that DeployedModel. If a DeployedModel's ID is not listed in this map, then it receives no traffic. The traffic percentage values must add up to 100, or map must be empty if the Endpoint is to not accept any traffic at a moment. */
		trafficSplit?: {[id: string]: number };

		/** Output only. Timestamp when this Endpoint was last updated. */
		updateTime?: string | null;
	}

	/** Models are deployed into it, and afterwards Endpoint is called to obtain predictions and explanations. */
	export interface GoogleCloudAiplatformV1beta1EndpointFormProperties {

		/** Output only. Timestamp when this Endpoint was created. */
		createTime: FormControl<string | null | undefined>,

		/** The description of the Endpoint. */
		description: FormControl<string | null | undefined>,

		/** Required. The display name of the Endpoint. The name can be up to 128 characters long and can consist of any UTF-8 characters. */
		displayName: FormControl<string | null | undefined>,

		/** Deprecated: If true, expose the Endpoint via private service connect. Only one of the fields, network or enable_private_service_connect, can be set. */
		enablePrivateServiceConnect: FormControl<boolean | null | undefined>,

		/** Used to perform consistent read-modify-write updates. If not set, a blind "overwrite" update happens. */
		etag: FormControl<string | null | undefined>,

		/** The labels with user-defined metadata to organize your Endpoints. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. See https://goo.gl/xmQnxf for more information and examples of labels. */
		labels: FormControl<{[id: string]: string } | null | undefined>,

		/** Output only. Resource name of the Model Monitoring job associated with this Endpoint if monitoring is enabled by JobService.CreateModelDeploymentMonitoringJob. Format: `projects/{project}/locations/{location}/modelDeploymentMonitoringJobs/{model_deployment_monitoring_job}` */
		modelDeploymentMonitoringJob: FormControl<string | null | undefined>,

		/** Output only. The resource name of the Endpoint. */
		name: FormControl<string | null | undefined>,

		/** Optional. The full name of the Google Compute Engine [network](https://cloud.google.com//compute/docs/networks-and-firewalls#networks) to which the Endpoint should be peered. Private services access must already be configured for the network. If left unspecified, the Endpoint is not peered with any network. Only one of the fields, network or enable_private_service_connect, can be set. [Format](https://cloud.google.com/compute/docs/reference/rest/v1/networks/insert): `projects/{project}/global/networks/{network}`. Where `{project}` is a project number, as in `12345`, and `{network}` is network name. */
		network: FormControl<string | null | undefined>,

		/** A map from a DeployedModel's ID to the percentage of this Endpoint's traffic that should be forwarded to that DeployedModel. If a DeployedModel's ID is not listed in this map, then it receives no traffic. The traffic percentage values must add up to 100, or map must be empty if the Endpoint is to not accept any traffic at a moment. */
		trafficSplit: FormControl<{[id: string]: number } | null | undefined>,

		/** Output only. Timestamp when this Endpoint was last updated. */
		updateTime: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1EndpointFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1EndpointFormProperties>({
			createTime: new FormControl<string | null | undefined>(undefined),
			description: new FormControl<string | null | undefined>(undefined),
			displayName: new FormControl<string | null | undefined>(undefined),
			enablePrivateServiceConnect: new FormControl<boolean | null | undefined>(undefined),
			etag: new FormControl<string | null | undefined>(undefined),
			labels: new FormControl<{[id: string]: string } | null | undefined>(undefined),
			modelDeploymentMonitoringJob: new FormControl<string | null | undefined>(undefined),
			name: new FormControl<string | null | undefined>(undefined),
			network: new FormControl<string | null | undefined>(undefined),
			trafficSplit: new FormControl<{[id: string]: number } | null | undefined>(undefined),
			updateTime: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Configuration for logging request-response to a BigQuery table. */
	export interface GoogleCloudAiplatformV1beta1PredictRequestResponseLoggingConfig {

		/** The BigQuery location for the output content. */
		bigqueryDestination?: GoogleCloudAiplatformV1beta1BigQueryDestination;

		/** If logging is enabled or not. */
		enabled?: boolean | null;

		/** Percentage of requests to be logged, expressed as a fraction in range(0,1]. */
		samplingRate?: number | null;
	}

	/** Configuration for logging request-response to a BigQuery table. */
	export interface GoogleCloudAiplatformV1beta1PredictRequestResponseLoggingConfigFormProperties {

		/** If logging is enabled or not. */
		enabled: FormControl<boolean | null | undefined>,

		/** Percentage of requests to be logged, expressed as a fraction in range(0,1]. */
		samplingRate: FormControl<number | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1PredictRequestResponseLoggingConfigFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1PredictRequestResponseLoggingConfigFormProperties>({
			enabled: new FormControl<boolean | null | undefined>(undefined),
			samplingRate: new FormControl<number | null | undefined>(undefined),
		});

	}


	/** An entity type is a type of object in a system that needs to be modeled and have stored information about. For example, driver is an entity type, and driver0 is an instance of an entity type driver. */
	export interface GoogleCloudAiplatformV1beta1EntityType {

		/** Output only. Timestamp when this EntityType was created. */
		createTime?: string | null;

		/** Optional. Description of the EntityType. */
		description?: string | null;

		/** Optional. Used to perform a consistent read-modify-write updates. If not set, a blind "overwrite" update happens. */
		etag?: string | null;

		/** Optional. The labels with user-defined metadata to organize your EntityTypes. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. See https://goo.gl/xmQnxf for more information on and examples of labels. No more than 64 user labels can be associated with one EntityType (System labels are excluded)." System reserved label keys are prefixed with "aiplatform.googleapis.com/" and are immutable. */
		labels?: {[id: string]: string };

		/** Configuration of how features in Featurestore are monitored. */
		monitoringConfig?: GoogleCloudAiplatformV1beta1FeaturestoreMonitoringConfig;

		/** Immutable. Name of the EntityType. Format: `projects/{project}/locations/{location}/featurestores/{featurestore}/entityTypes/{entity_type}` The last part entity_type is assigned by the client. The entity_type can be up to 64 characters long and can consist only of ASCII Latin letters A-Z and a-z and underscore(_), and ASCII digits 0-9 starting with a letter. The value will be unique given a featurestore. */
		name?: string | null;

		/** Optional. Config for data retention policy in offline storage. TTL in days for feature values that will be stored in offline storage. The Feature Store offline storage periodically removes obsolete feature values older than `offline_storage_ttl_days` since the feature generation time. If unset (or explicitly set to 0), default to 4000 days TTL. */
		offlineStorageTtlDays?: number | null;

		/** Output only. Timestamp when this EntityType was most recently updated. */
		updateTime?: string | null;
	}

	/** An entity type is a type of object in a system that needs to be modeled and have stored information about. For example, driver is an entity type, and driver0 is an instance of an entity type driver. */
	export interface GoogleCloudAiplatformV1beta1EntityTypeFormProperties {

		/** Output only. Timestamp when this EntityType was created. */
		createTime: FormControl<string | null | undefined>,

		/** Optional. Description of the EntityType. */
		description: FormControl<string | null | undefined>,

		/** Optional. Used to perform a consistent read-modify-write updates. If not set, a blind "overwrite" update happens. */
		etag: FormControl<string | null | undefined>,

		/** Optional. The labels with user-defined metadata to organize your EntityTypes. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. See https://goo.gl/xmQnxf for more information on and examples of labels. No more than 64 user labels can be associated with one EntityType (System labels are excluded)." System reserved label keys are prefixed with "aiplatform.googleapis.com/" and are immutable. */
		labels: FormControl<{[id: string]: string } | null | undefined>,

		/** Immutable. Name of the EntityType. Format: `projects/{project}/locations/{location}/featurestores/{featurestore}/entityTypes/{entity_type}` The last part entity_type is assigned by the client. The entity_type can be up to 64 characters long and can consist only of ASCII Latin letters A-Z and a-z and underscore(_), and ASCII digits 0-9 starting with a letter. The value will be unique given a featurestore. */
		name: FormControl<string | null | undefined>,

		/** Optional. Config for data retention policy in offline storage. TTL in days for feature values that will be stored in offline storage. The Feature Store offline storage periodically removes obsolete feature values older than `offline_storage_ttl_days` since the feature generation time. If unset (or explicitly set to 0), default to 4000 days TTL. */
		offlineStorageTtlDays: FormControl<number | null | undefined>,

		/** Output only. Timestamp when this EntityType was most recently updated. */
		updateTime: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1EntityTypeFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1EntityTypeFormProperties>({
			createTime: new FormControl<string | null | undefined>(undefined),
			description: new FormControl<string | null | undefined>(undefined),
			etag: new FormControl<string | null | undefined>(undefined),
			labels: new FormControl<{[id: string]: string } | null | undefined>(undefined),
			name: new FormControl<string | null | undefined>(undefined),
			offlineStorageTtlDays: new FormControl<number | null | undefined>(undefined),
			updateTime: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Overrides for example-based explanations. */
	export interface GoogleCloudAiplatformV1beta1ExamplesOverride {

		/** The number of neighbors to return that have the same crowding tag. */
		crowdingCount?: number | null;

		/** The format of the data being provided with each call. */
		dataFormat?: GoogleCloudAiplatformV1beta1ExamplesOverrideDataFormat | null;

		/** The number of neighbors to return. */
		neighborCount?: number | null;

		/** Restrict the resulting nearest neighbors to respect these constraints. */
		restrictions?: Array<GoogleCloudAiplatformV1beta1ExamplesRestrictionsNamespace>;

		/** If true, return the embeddings instead of neighbors. */
		returnEmbeddings?: boolean | null;
	}

	/** Overrides for example-based explanations. */
	export interface GoogleCloudAiplatformV1beta1ExamplesOverrideFormProperties {

		/** The number of neighbors to return that have the same crowding tag. */
		crowdingCount: FormControl<number | null | undefined>,

		/** The format of the data being provided with each call. */
		dataFormat: FormControl<GoogleCloudAiplatformV1beta1ExamplesOverrideDataFormat | null | undefined>,

		/** The number of neighbors to return. */
		neighborCount: FormControl<number | null | undefined>,

		/** If true, return the embeddings instead of neighbors. */
		returnEmbeddings: FormControl<boolean | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1ExamplesOverrideFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1ExamplesOverrideFormProperties>({
			crowdingCount: new FormControl<number | null | undefined>(undefined),
			dataFormat: new FormControl<GoogleCloudAiplatformV1beta1ExamplesOverrideDataFormat | null | undefined>(undefined),
			neighborCount: new FormControl<number | null | undefined>(undefined),
			returnEmbeddings: new FormControl<boolean | null | undefined>(undefined),
		});

	}

	export enum GoogleCloudAiplatformV1beta1ExamplesOverrideDataFormat { DATA_FORMAT_UNSPECIFIED = 0, INSTANCES = 1, EMBEDDINGS = 2 }


	/** Restrictions namespace for example-based explanations overrides. */
	export interface GoogleCloudAiplatformV1beta1ExamplesRestrictionsNamespace {

		/** The list of allowed tags. */
		allow?: Array<string>;

		/** The list of deny tags. */
		deny?: Array<string>;

		/** The namespace name. */
		namespaceName?: string | null;
	}

	/** Restrictions namespace for example-based explanations overrides. */
	export interface GoogleCloudAiplatformV1beta1ExamplesRestrictionsNamespaceFormProperties {

		/** The namespace name. */
		namespaceName: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1ExamplesRestrictionsNamespaceFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1ExamplesRestrictionsNamespaceFormProperties>({
			namespaceName: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Request message for PredictionService.Explain. */
	export interface GoogleCloudAiplatformV1beta1ExplainRequest {

		/** Optional. This field is the same as the one above, but supports multiple explanations to occur in parallel. The key can be any string. Each override will be run against the model, then its explanations will be grouped together. Note - these explanations are run **In Addition** to the default Explanation in the deployed model. */
		concurrentExplanationSpecOverride?: {[id: string]: GoogleCloudAiplatformV1beta1ExplanationSpecOverride };

		/** If specified, this ExplainRequest will be served by the chosen DeployedModel, overriding Endpoint.traffic_split. */
		deployedModelId?: string | null;

		/** The ExplanationSpec entries that can be overridden at online explanation time. */
		explanationSpecOverride?: GoogleCloudAiplatformV1beta1ExplanationSpecOverride;

		/** Required. The instances that are the input to the explanation call. A DeployedModel may have an upper limit on the number of instances it supports per request, and when it is exceeded the explanation call errors in case of AutoML Models, or, in case of customer created Models, the behaviour is as documented by that Model. The schema of any single instance may be specified via Endpoint's DeployedModels' Model's PredictSchemata's instance_schema_uri. */
		instances?: Array<string>;

		/** The parameters that govern the prediction. The schema of the parameters may be specified via Endpoint's DeployedModels' Model's PredictSchemata's parameters_schema_uri. */
		parameters?: any;
	}

	/** Request message for PredictionService.Explain. */
	export interface GoogleCloudAiplatformV1beta1ExplainRequestFormProperties {

		/** Optional. This field is the same as the one above, but supports multiple explanations to occur in parallel. The key can be any string. Each override will be run against the model, then its explanations will be grouped together. Note - these explanations are run **In Addition** to the default Explanation in the deployed model. */
		concurrentExplanationSpecOverride: FormControl<{[id: string]: GoogleCloudAiplatformV1beta1ExplanationSpecOverride } | null | undefined>,

		/** If specified, this ExplainRequest will be served by the chosen DeployedModel, overriding Endpoint.traffic_split. */
		deployedModelId: FormControl<string | null | undefined>,

		/** The parameters that govern the prediction. The schema of the parameters may be specified via Endpoint's DeployedModels' Model's PredictSchemata's parameters_schema_uri. */
		parameters: FormControl<any | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1ExplainRequestFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1ExplainRequestFormProperties>({
			concurrentExplanationSpecOverride: new FormControl<{[id: string]: GoogleCloudAiplatformV1beta1ExplanationSpecOverride } | null | undefined>(undefined),
			deployedModelId: new FormControl<string | null | undefined>(undefined),
			parameters: new FormControl<any | null | undefined>(undefined),
		});

	}


	/** The ExplanationSpec entries that can be overridden at online explanation time. */
	export interface GoogleCloudAiplatformV1beta1ExplanationSpecOverride {

		/** Overrides for example-based explanations. */
		examplesOverride?: GoogleCloudAiplatformV1beta1ExamplesOverride;

		/** The ExplanationMetadata entries that can be overridden at online explanation time. */
		metadata?: GoogleCloudAiplatformV1beta1ExplanationMetadataOverride;

		/** Parameters to configure explaining for Model's predictions. */
		parameters?: GoogleCloudAiplatformV1beta1ExplanationParameters;
	}

	/** The ExplanationSpec entries that can be overridden at online explanation time. */
	export interface GoogleCloudAiplatformV1beta1ExplanationSpecOverrideFormProperties {
	}
	export function CreateGoogleCloudAiplatformV1beta1ExplanationSpecOverrideFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1ExplanationSpecOverrideFormProperties>({
		});

	}


	/** The ExplanationMetadata entries that can be overridden at online explanation time. */
	export interface GoogleCloudAiplatformV1beta1ExplanationMetadataOverride {

		/** Required. Overrides the input metadata of the features. The key is the name of the feature to be overridden. The keys specified here must exist in the input metadata to be overridden. If a feature is not specified here, the corresponding feature's input metadata is not overridden. */
		inputs?: {[id: string]: GoogleCloudAiplatformV1beta1ExplanationMetadataOverrideInputMetadataOverride };
	}

	/** The ExplanationMetadata entries that can be overridden at online explanation time. */
	export interface GoogleCloudAiplatformV1beta1ExplanationMetadataOverrideFormProperties {

		/** Required. Overrides the input metadata of the features. The key is the name of the feature to be overridden. The keys specified here must exist in the input metadata to be overridden. If a feature is not specified here, the corresponding feature's input metadata is not overridden. */
		inputs: FormControl<{[id: string]: GoogleCloudAiplatformV1beta1ExplanationMetadataOverrideInputMetadataOverride } | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1ExplanationMetadataOverrideFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1ExplanationMetadataOverrideFormProperties>({
			inputs: new FormControl<{[id: string]: GoogleCloudAiplatformV1beta1ExplanationMetadataOverrideInputMetadataOverride } | null | undefined>(undefined),
		});

	}


	/** The input metadata entries to be overridden. */
	export interface GoogleCloudAiplatformV1beta1ExplanationMetadataOverrideInputMetadataOverride {

		/** Baseline inputs for this feature. This overrides the `input_baseline` field of the ExplanationMetadata.InputMetadata object of the corresponding feature's input metadata. If it's not specified, the original baselines are not overridden. */
		inputBaselines?: Array<string>;
	}

	/** The input metadata entries to be overridden. */
	export interface GoogleCloudAiplatformV1beta1ExplanationMetadataOverrideInputMetadataOverrideFormProperties {
	}
	export function CreateGoogleCloudAiplatformV1beta1ExplanationMetadataOverrideInputMetadataOverrideFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1ExplanationMetadataOverrideInputMetadataOverrideFormProperties>({
		});

	}


	/** Response message for PredictionService.Explain. */
	export interface GoogleCloudAiplatformV1beta1ExplainResponse {

		/** This field stores the results of the explanations run in parallel with The default explanation strategy/method. */
		concurrentExplanations?: {[id: string]: GoogleCloudAiplatformV1beta1ExplainResponseConcurrentExplanation };

		/** ID of the Endpoint's DeployedModel that served this explanation. */
		deployedModelId?: string | null;

		/** The explanations of the Model's PredictResponse.predictions. It has the same number of elements as instances to be explained. */
		explanations?: Array<GoogleCloudAiplatformV1beta1Explanation>;

		/** The predictions that are the output of the predictions call. Same as PredictResponse.predictions. */
		predictions?: Array<string>;
	}

	/** Response message for PredictionService.Explain. */
	export interface GoogleCloudAiplatformV1beta1ExplainResponseFormProperties {

		/** This field stores the results of the explanations run in parallel with The default explanation strategy/method. */
		concurrentExplanations: FormControl<{[id: string]: GoogleCloudAiplatformV1beta1ExplainResponseConcurrentExplanation } | null | undefined>,

		/** ID of the Endpoint's DeployedModel that served this explanation. */
		deployedModelId: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1ExplainResponseFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1ExplainResponseFormProperties>({
			concurrentExplanations: new FormControl<{[id: string]: GoogleCloudAiplatformV1beta1ExplainResponseConcurrentExplanation } | null | undefined>(undefined),
			deployedModelId: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** This message is a wrapper grouping Concurrent Explanations. */
	export interface GoogleCloudAiplatformV1beta1ExplainResponseConcurrentExplanation {

		/** The explanations of the Model's PredictResponse.predictions. It has the same number of elements as instances to be explained. */
		explanations?: Array<GoogleCloudAiplatformV1beta1Explanation>;
	}

	/** This message is a wrapper grouping Concurrent Explanations. */
	export interface GoogleCloudAiplatformV1beta1ExplainResponseConcurrentExplanationFormProperties {
	}
	export function CreateGoogleCloudAiplatformV1beta1ExplainResponseConcurrentExplanationFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1ExplainResponseConcurrentExplanationFormProperties>({
		});

	}


	/** Describes what part of the Dataset is to be exported, the destination of the export and how to export. */
	export interface GoogleCloudAiplatformV1beta1ExportDataConfig {

		/** An expression for filtering what part of the Dataset is to be exported. Only Annotations that match this filter will be exported. The filter syntax is the same as in ListAnnotations. */
		annotationsFilter?: string | null;

		/** Assigns the input data to training, validation, and test sets as per the given fractions. Any of `training_fraction`, `validation_fraction` and `test_fraction` may optionally be provided, they must sum to up to 1. If the provided ones sum to less than 1, the remainder is assigned to sets as decided by Vertex AI. If none of the fractions are set, by default roughly 80% of data is used for training, 10% for validation, and 10% for test. */
		fractionSplit?: GoogleCloudAiplatformV1beta1ExportFractionSplit;

		/** The Google Cloud Storage location where the output is to be written to. */
		gcsDestination?: GoogleCloudAiplatformV1beta1GcsDestination;
	}

	/** Describes what part of the Dataset is to be exported, the destination of the export and how to export. */
	export interface GoogleCloudAiplatformV1beta1ExportDataConfigFormProperties {

		/** An expression for filtering what part of the Dataset is to be exported. Only Annotations that match this filter will be exported. The filter syntax is the same as in ListAnnotations. */
		annotationsFilter: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1ExportDataConfigFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1ExportDataConfigFormProperties>({
			annotationsFilter: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Assigns the input data to training, validation, and test sets as per the given fractions. Any of `training_fraction`, `validation_fraction` and `test_fraction` may optionally be provided, they must sum to up to 1. If the provided ones sum to less than 1, the remainder is assigned to sets as decided by Vertex AI. If none of the fractions are set, by default roughly 80% of data is used for training, 10% for validation, and 10% for test. */
	export interface GoogleCloudAiplatformV1beta1ExportFractionSplit {

		/** The fraction of the input data that is to be used to evaluate the Model. */
		testFraction?: number | null;

		/** The fraction of the input data that is to be used to train the Model. */
		trainingFraction?: number | null;

		/** The fraction of the input data that is to be used to validate the Model. */
		validationFraction?: number | null;
	}

	/** Assigns the input data to training, validation, and test sets as per the given fractions. Any of `training_fraction`, `validation_fraction` and `test_fraction` may optionally be provided, they must sum to up to 1. If the provided ones sum to less than 1, the remainder is assigned to sets as decided by Vertex AI. If none of the fractions are set, by default roughly 80% of data is used for training, 10% for validation, and 10% for test. */
	export interface GoogleCloudAiplatformV1beta1ExportFractionSplitFormProperties {

		/** The fraction of the input data that is to be used to evaluate the Model. */
		testFraction: FormControl<number | null | undefined>,

		/** The fraction of the input data that is to be used to train the Model. */
		trainingFraction: FormControl<number | null | undefined>,

		/** The fraction of the input data that is to be used to validate the Model. */
		validationFraction: FormControl<number | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1ExportFractionSplitFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1ExportFractionSplitFormProperties>({
			testFraction: new FormControl<number | null | undefined>(undefined),
			trainingFraction: new FormControl<number | null | undefined>(undefined),
			validationFraction: new FormControl<number | null | undefined>(undefined),
		});

	}


	/** Runtime operation information for DatasetService.ExportData. */
	export interface GoogleCloudAiplatformV1beta1ExportDataOperationMetadata {

		/** A Google Cloud Storage directory which path ends with '/'. The exported data is stored in the directory. */
		gcsOutputDirectory?: string | null;

		/** Generic Metadata shared by all operations. */
		genericMetadata?: GoogleCloudAiplatformV1beta1GenericOperationMetadata;
	}

	/** Runtime operation information for DatasetService.ExportData. */
	export interface GoogleCloudAiplatformV1beta1ExportDataOperationMetadataFormProperties {

		/** A Google Cloud Storage directory which path ends with '/'. The exported data is stored in the directory. */
		gcsOutputDirectory: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1ExportDataOperationMetadataFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1ExportDataOperationMetadataFormProperties>({
			gcsOutputDirectory: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Request message for DatasetService.ExportData. */
	export interface GoogleCloudAiplatformV1beta1ExportDataRequest {

		/** Describes what part of the Dataset is to be exported, the destination of the export and how to export. */
		exportConfig?: GoogleCloudAiplatformV1beta1ExportDataConfig;
	}

	/** Request message for DatasetService.ExportData. */
	export interface GoogleCloudAiplatformV1beta1ExportDataRequestFormProperties {
	}
	export function CreateGoogleCloudAiplatformV1beta1ExportDataRequestFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1ExportDataRequestFormProperties>({
		});

	}


	/** Response message for DatasetService.ExportData. */
	export interface GoogleCloudAiplatformV1beta1ExportDataResponse {

		/** All of the files that are exported in this export operation. For custom code training export, only three (training, validation and test) Cloud Storage paths in wildcard format are populated (for example, gs://.../training-*). */
		exportedFiles?: Array<string>;
	}

	/** Response message for DatasetService.ExportData. */
	export interface GoogleCloudAiplatformV1beta1ExportDataResponseFormProperties {
	}
	export function CreateGoogleCloudAiplatformV1beta1ExportDataResponseFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1ExportDataResponseFormProperties>({
		});

	}


	/** Details of EndpointService.ExportEndpoint operation. */
	export interface GoogleCloudAiplatformV1beta1ExportEndpointOperationMetadata {

		/** Generic Metadata shared by all operations. */
		genericMetadata?: GoogleCloudAiplatformV1beta1GenericOperationMetadata;
	}

	/** Details of EndpointService.ExportEndpoint operation. */
	export interface GoogleCloudAiplatformV1beta1ExportEndpointOperationMetadataFormProperties {
	}
	export function CreateGoogleCloudAiplatformV1beta1ExportEndpointOperationMetadataFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1ExportEndpointOperationMetadataFormProperties>({
		});

	}


	/** Response message of EndpointService.ExportEndpoint operation. */
	export interface GoogleCloudAiplatformV1beta1ExportEndpointResponse {

		/** Describes the output of the ExportEndpoint. */
		outputInfo?: GoogleCloudAiplatformV1beta1ExportEndpointResponseOutputInfo;
	}

	/** Response message of EndpointService.ExportEndpoint operation. */
	export interface GoogleCloudAiplatformV1beta1ExportEndpointResponseFormProperties {
	}
	export function CreateGoogleCloudAiplatformV1beta1ExportEndpointResponseFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1ExportEndpointResponseFormProperties>({
		});

	}


	/** Describes the output of the ExportEndpoint. */
	export interface GoogleCloudAiplatformV1beta1ExportEndpointResponseOutputInfo {

		/** The BigQuery location for the output content. */
		bigQueryDestination?: GoogleCloudAiplatformV1beta1BigQueryDestination;
	}

	/** Describes the output of the ExportEndpoint. */
	export interface GoogleCloudAiplatformV1beta1ExportEndpointResponseOutputInfoFormProperties {
	}
	export function CreateGoogleCloudAiplatformV1beta1ExportEndpointResponseOutputInfoFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1ExportEndpointResponseOutputInfoFormProperties>({
		});

	}


	/** Details of operations that exports Features values. */
	export interface GoogleCloudAiplatformV1beta1ExportFeatureValuesOperationMetadata {

		/** Generic Metadata shared by all operations. */
		genericMetadata?: GoogleCloudAiplatformV1beta1GenericOperationMetadata;
	}

	/** Details of operations that exports Features values. */
	export interface GoogleCloudAiplatformV1beta1ExportFeatureValuesOperationMetadataFormProperties {
	}
	export function CreateGoogleCloudAiplatformV1beta1ExportFeatureValuesOperationMetadataFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1ExportFeatureValuesOperationMetadataFormProperties>({
		});

	}


	/** Request message for FeaturestoreService.ExportFeatureValues. */
	export interface GoogleCloudAiplatformV1beta1ExportFeatureValuesRequest {

		/** A destination location for Feature values and format. */
		destination?: GoogleCloudAiplatformV1beta1FeatureValueDestination;

		/** Selector for Features of an EntityType. */
		featureSelector?: GoogleCloudAiplatformV1beta1FeatureSelector;

		/** Describes exporting all historical Feature values of all entities of the EntityType between [start_time, end_time]. */
		fullExport?: GoogleCloudAiplatformV1beta1ExportFeatureValuesRequestFullExport;

		/** Per-Feature export settings. */
		settings?: Array<GoogleCloudAiplatformV1beta1DestinationFeatureSetting>;

		/** Describes exporting the latest Feature values of all entities of the EntityType between [start_time, snapshot_time]. */
		snapshotExport?: GoogleCloudAiplatformV1beta1ExportFeatureValuesRequestSnapshotExport;
	}

	/** Request message for FeaturestoreService.ExportFeatureValues. */
	export interface GoogleCloudAiplatformV1beta1ExportFeatureValuesRequestFormProperties {
	}
	export function CreateGoogleCloudAiplatformV1beta1ExportFeatureValuesRequestFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1ExportFeatureValuesRequestFormProperties>({
		});

	}


	/** Describes exporting all historical Feature values of all entities of the EntityType between [start_time, end_time]. */
	export interface GoogleCloudAiplatformV1beta1ExportFeatureValuesRequestFullExport {

		/** Exports Feature values as of this timestamp. If not set, retrieve values as of now. Timestamp, if present, must not have higher than millisecond precision. */
		endTime?: string | null;

		/** Excludes Feature values with feature generation timestamp before this timestamp. If not set, retrieve oldest values kept in Feature Store. Timestamp, if present, must not have higher than millisecond precision. */
		startTime?: string | null;
	}

	/** Describes exporting all historical Feature values of all entities of the EntityType between [start_time, end_time]. */
	export interface GoogleCloudAiplatformV1beta1ExportFeatureValuesRequestFullExportFormProperties {

		/** Exports Feature values as of this timestamp. If not set, retrieve values as of now. Timestamp, if present, must not have higher than millisecond precision. */
		endTime: FormControl<string | null | undefined>,

		/** Excludes Feature values with feature generation timestamp before this timestamp. If not set, retrieve oldest values kept in Feature Store. Timestamp, if present, must not have higher than millisecond precision. */
		startTime: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1ExportFeatureValuesRequestFullExportFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1ExportFeatureValuesRequestFullExportFormProperties>({
			endTime: new FormControl<string | null | undefined>(undefined),
			startTime: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Describes exporting the latest Feature values of all entities of the EntityType between [start_time, snapshot_time]. */
	export interface GoogleCloudAiplatformV1beta1ExportFeatureValuesRequestSnapshotExport {

		/** Exports Feature values as of this timestamp. If not set, retrieve values as of now. Timestamp, if present, must not have higher than millisecond precision. */
		snapshotTime?: string | null;

		/** Excludes Feature values with feature generation timestamp before this timestamp. If not set, retrieve oldest values kept in Feature Store. Timestamp, if present, must not have higher than millisecond precision. */
		startTime?: string | null;
	}

	/** Describes exporting the latest Feature values of all entities of the EntityType between [start_time, snapshot_time]. */
	export interface GoogleCloudAiplatformV1beta1ExportFeatureValuesRequestSnapshotExportFormProperties {

		/** Exports Feature values as of this timestamp. If not set, retrieve values as of now. Timestamp, if present, must not have higher than millisecond precision. */
		snapshotTime: FormControl<string | null | undefined>,

		/** Excludes Feature values with feature generation timestamp before this timestamp. If not set, retrieve oldest values kept in Feature Store. Timestamp, if present, must not have higher than millisecond precision. */
		startTime: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1ExportFeatureValuesRequestSnapshotExportFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1ExportFeatureValuesRequestSnapshotExportFormProperties>({
			snapshotTime: new FormControl<string | null | undefined>(undefined),
			startTime: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Response message for FeaturestoreService.ExportFeatureValues. */
	export interface GoogleCloudAiplatformV1beta1ExportFeatureValuesResponse {
	}

	/** Response message for FeaturestoreService.ExportFeatureValues. */
	export interface GoogleCloudAiplatformV1beta1ExportFeatureValuesResponseFormProperties {
	}
	export function CreateGoogleCloudAiplatformV1beta1ExportFeatureValuesResponseFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1ExportFeatureValuesResponseFormProperties>({
		});

	}


	/** Details of ModelService.ExportModel operation. */
	export interface GoogleCloudAiplatformV1beta1ExportModelOperationMetadata {

		/** Generic Metadata shared by all operations. */
		genericMetadata?: GoogleCloudAiplatformV1beta1GenericOperationMetadata;

		/** Further describes the output of the ExportModel. Supplements ExportModelRequest.OutputConfig. */
		outputInfo?: GoogleCloudAiplatformV1beta1ExportModelOperationMetadataOutputInfo;
	}

	/** Details of ModelService.ExportModel operation. */
	export interface GoogleCloudAiplatformV1beta1ExportModelOperationMetadataFormProperties {
	}
	export function CreateGoogleCloudAiplatformV1beta1ExportModelOperationMetadataFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1ExportModelOperationMetadataFormProperties>({
		});

	}


	/** Further describes the output of the ExportModel. Supplements ExportModelRequest.OutputConfig. */
	export interface GoogleCloudAiplatformV1beta1ExportModelOperationMetadataOutputInfo {

		/** Output only. If the Model artifact is being exported to Google Cloud Storage this is the full path of the directory created, into which the Model files are being written to. */
		artifactOutputUri?: string | null;

		/** Output only. If the Model image is being exported to Google Container Registry or Artifact Registry this is the full path of the image created. */
		imageOutputUri?: string | null;
	}

	/** Further describes the output of the ExportModel. Supplements ExportModelRequest.OutputConfig. */
	export interface GoogleCloudAiplatformV1beta1ExportModelOperationMetadataOutputInfoFormProperties {

		/** Output only. If the Model artifact is being exported to Google Cloud Storage this is the full path of the directory created, into which the Model files are being written to. */
		artifactOutputUri: FormControl<string | null | undefined>,

		/** Output only. If the Model image is being exported to Google Container Registry or Artifact Registry this is the full path of the image created. */
		imageOutputUri: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1ExportModelOperationMetadataOutputInfoFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1ExportModelOperationMetadataOutputInfoFormProperties>({
			artifactOutputUri: new FormControl<string | null | undefined>(undefined),
			imageOutputUri: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Request message for ModelService.ExportModel. */
	export interface GoogleCloudAiplatformV1beta1ExportModelRequest {

		/** Output configuration for the Model export. */
		outputConfig?: GoogleCloudAiplatformV1beta1ExportModelRequestOutputConfig;
	}

	/** Request message for ModelService.ExportModel. */
	export interface GoogleCloudAiplatformV1beta1ExportModelRequestFormProperties {
	}
	export function CreateGoogleCloudAiplatformV1beta1ExportModelRequestFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1ExportModelRequestFormProperties>({
		});

	}


	/** Output configuration for the Model export. */
	export interface GoogleCloudAiplatformV1beta1ExportModelRequestOutputConfig {

		/** The Google Cloud Storage location where the output is to be written to. */
		artifactDestination?: GoogleCloudAiplatformV1beta1GcsDestination;

		/** The ID of the format in which the Model must be exported. Each Model lists the export formats it supports. If no value is provided here, then the first from the list of the Model's supported formats is used by default. */
		exportFormatId?: string | null;

		/** The Container Registry location for the container image. */
		imageDestination?: GoogleCloudAiplatformV1beta1ContainerRegistryDestination;
	}

	/** Output configuration for the Model export. */
	export interface GoogleCloudAiplatformV1beta1ExportModelRequestOutputConfigFormProperties {

		/** The ID of the format in which the Model must be exported. Each Model lists the export formats it supports. If no value is provided here, then the first from the list of the Model's supported formats is used by default. */
		exportFormatId: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1ExportModelRequestOutputConfigFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1ExportModelRequestOutputConfigFormProperties>({
			exportFormatId: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Response message of ModelService.ExportModel operation. */
	export interface GoogleCloudAiplatformV1beta1ExportModelResponse {
	}

	/** Response message of ModelService.ExportModel operation. */
	export interface GoogleCloudAiplatformV1beta1ExportModelResponseFormProperties {
	}
	export function CreateGoogleCloudAiplatformV1beta1ExportModelResponseFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1ExportModelResponseFormProperties>({
		});

	}


	/** Request message for TensorboardService.ExportTensorboardTimeSeriesData. */
	export interface GoogleCloudAiplatformV1beta1ExportTensorboardTimeSeriesDataRequest {

		/** Exports the TensorboardTimeSeries' data that match the filter expression. */
		filter?: string | null;

		/** Field to use to sort the TensorboardTimeSeries' data. By default, TensorboardTimeSeries' data is returned in a pseudo random order. */
		orderBy?: string | null;

		/** The maximum number of data points to return per page. The default page_size is 1000. Values must be between 1 and 10000. Values above 10000 are coerced to 10000. */
		pageSize?: number | null;

		/** A page token, received from a previous ExportTensorboardTimeSeriesData call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to ExportTensorboardTimeSeriesData must match the call that provided the page token. */
		pageToken?: string | null;
	}

	/** Request message for TensorboardService.ExportTensorboardTimeSeriesData. */
	export interface GoogleCloudAiplatformV1beta1ExportTensorboardTimeSeriesDataRequestFormProperties {

		/** Exports the TensorboardTimeSeries' data that match the filter expression. */
		filter: FormControl<string | null | undefined>,

		/** Field to use to sort the TensorboardTimeSeries' data. By default, TensorboardTimeSeries' data is returned in a pseudo random order. */
		orderBy: FormControl<string | null | undefined>,

		/** The maximum number of data points to return per page. The default page_size is 1000. Values must be between 1 and 10000. Values above 10000 are coerced to 10000. */
		pageSize: FormControl<number | null | undefined>,

		/** A page token, received from a previous ExportTensorboardTimeSeriesData call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to ExportTensorboardTimeSeriesData must match the call that provided the page token. */
		pageToken: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1ExportTensorboardTimeSeriesDataRequestFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1ExportTensorboardTimeSeriesDataRequestFormProperties>({
			filter: new FormControl<string | null | undefined>(undefined),
			orderBy: new FormControl<string | null | undefined>(undefined),
			pageSize: new FormControl<number | null | undefined>(undefined),
			pageToken: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Response message for TensorboardService.ExportTensorboardTimeSeriesData. */
	export interface GoogleCloudAiplatformV1beta1ExportTensorboardTimeSeriesDataResponse {

		/** A token, which can be sent as page_token to retrieve the next page. If this field is omitted, there are no subsequent pages. */
		nextPageToken?: string | null;

		/** The returned time series data points. */
		timeSeriesDataPoints?: Array<GoogleCloudAiplatformV1beta1TimeSeriesDataPoint>;
	}

	/** Response message for TensorboardService.ExportTensorboardTimeSeriesData. */
	export interface GoogleCloudAiplatformV1beta1ExportTensorboardTimeSeriesDataResponseFormProperties {

		/** A token, which can be sent as page_token to retrieve the next page. If this field is omitted, there are no subsequent pages. */
		nextPageToken: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1ExportTensorboardTimeSeriesDataResponseFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1ExportTensorboardTimeSeriesDataResponseFormProperties>({
			nextPageToken: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Vertex AI Feature Group. */
	export interface GoogleCloudAiplatformV1beta1FeatureGroup {

		/** Input source type for BigQuery Tables and Views. */
		bigQuery?: GoogleCloudAiplatformV1beta1FeatureGroupBigQuery;

		/** Output only. Timestamp when this FeatureGroup was created. */
		createTime?: string | null;

		/** Optional. Description of the FeatureGroup. */
		description?: string | null;

		/** Optional. Used to perform consistent read-modify-write updates. If not set, a blind "overwrite" update happens. */
		etag?: string | null;

		/** Optional. The labels with user-defined metadata to organize your FeatureGroup. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. See https://goo.gl/xmQnxf for more information on and examples of labels. No more than 64 user labels can be associated with one FeatureGroup(System labels are excluded)." System reserved label keys are prefixed with "aiplatform.googleapis.com/" and are immutable. */
		labels?: {[id: string]: string };

		/** Identifier. Name of the FeatureGroup. Format: `projects/{project}/locations/{location}/featureGroups/{featureGroup}` */
		name?: string | null;

		/** Output only. Timestamp when this FeatureGroup was last updated. */
		updateTime?: string | null;
	}

	/** Vertex AI Feature Group. */
	export interface GoogleCloudAiplatformV1beta1FeatureGroupFormProperties {

		/** Output only. Timestamp when this FeatureGroup was created. */
		createTime: FormControl<string | null | undefined>,

		/** Optional. Description of the FeatureGroup. */
		description: FormControl<string | null | undefined>,

		/** Optional. Used to perform consistent read-modify-write updates. If not set, a blind "overwrite" update happens. */
		etag: FormControl<string | null | undefined>,

		/** Optional. The labels with user-defined metadata to organize your FeatureGroup. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. See https://goo.gl/xmQnxf for more information on and examples of labels. No more than 64 user labels can be associated with one FeatureGroup(System labels are excluded)." System reserved label keys are prefixed with "aiplatform.googleapis.com/" and are immutable. */
		labels: FormControl<{[id: string]: string } | null | undefined>,

		/** Identifier. Name of the FeatureGroup. Format: `projects/{project}/locations/{location}/featureGroups/{featureGroup}` */
		name: FormControl<string | null | undefined>,

		/** Output only. Timestamp when this FeatureGroup was last updated. */
		updateTime: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1FeatureGroupFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1FeatureGroupFormProperties>({
			createTime: new FormControl<string | null | undefined>(undefined),
			description: new FormControl<string | null | undefined>(undefined),
			etag: new FormControl<string | null | undefined>(undefined),
			labels: new FormControl<{[id: string]: string } | null | undefined>(undefined),
			name: new FormControl<string | null | undefined>(undefined),
			updateTime: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Input source type for BigQuery Tables and Views. */
	export interface GoogleCloudAiplatformV1beta1FeatureGroupBigQuery {

		/** The BigQuery location for the input content. */
		bigQuerySource?: GoogleCloudAiplatformV1beta1BigQuerySource;

		/** Optional. Columns to construct entity_id / row keys. Currently only supports 1 entity_id_column. If not provided defaults to `entity_id`. */
		entityIdColumns?: Array<string>;
	}

	/** Input source type for BigQuery Tables and Views. */
	export interface GoogleCloudAiplatformV1beta1FeatureGroupBigQueryFormProperties {
	}
	export function CreateGoogleCloudAiplatformV1beta1FeatureGroupBigQueryFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1FeatureGroupBigQueryFormProperties>({
		});

	}


	/** Vertex AI Feature Online Store provides a centralized repository for serving ML features and embedding indexes at low latency. The Feature Online Store is a top-level container. */
	export interface GoogleCloudAiplatformV1beta1FeatureOnlineStore {
		bigtable?: GoogleCloudAiplatformV1beta1FeatureOnlineStoreBigtable;

		/** Output only. Timestamp when this FeatureOnlineStore was created. */
		createTime?: string | null;

		/** The dedicated serving endpoint for this FeatureOnlineStore. Only need to set when you choose Optimized storage type or enable EmbeddingManagement. Will use public endpoint by default. Note, for EmbeddingManagement use case, only [DedicatedServingEndpoint.public_endpoint_domain_name] is available now. */
		dedicatedServingEndpoint?: GoogleCloudAiplatformV1beta1FeatureOnlineStoreDedicatedServingEndpoint;

		/** Contains settings for embedding management. */
		embeddingManagement?: GoogleCloudAiplatformV1beta1FeatureOnlineStoreEmbeddingManagement;

		/** Optional. Used to perform consistent read-modify-write updates. If not set, a blind "overwrite" update happens. */
		etag?: string | null;

		/** Optional. The labels with user-defined metadata to organize your FeatureOnlineStore. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. See https://goo.gl/xmQnxf for more information on and examples of labels. No more than 64 user labels can be associated with one FeatureOnlineStore(System labels are excluded)." System reserved label keys are prefixed with "aiplatform.googleapis.com/" and are immutable. */
		labels?: {[id: string]: string };

		/** Identifier. Name of the FeatureOnlineStore. Format: `projects/{project}/locations/{location}/featureOnlineStores/{featureOnlineStore}` */
		name?: string | null;

		/** Optimized storage type */
		optimized?: GoogleCloudAiplatformV1beta1FeatureOnlineStoreOptimized;

		/** Output only. State of the featureOnlineStore. */
		state?: GoogleCloudAiplatformV1beta1FeatureOnlineStoreState | null;

		/** Output only. Timestamp when this FeatureOnlineStore was last updated. */
		updateTime?: string | null;
	}

	/** Vertex AI Feature Online Store provides a centralized repository for serving ML features and embedding indexes at low latency. The Feature Online Store is a top-level container. */
	export interface GoogleCloudAiplatformV1beta1FeatureOnlineStoreFormProperties {

		/** Output only. Timestamp when this FeatureOnlineStore was created. */
		createTime: FormControl<string | null | undefined>,

		/** Optional. Used to perform consistent read-modify-write updates. If not set, a blind "overwrite" update happens. */
		etag: FormControl<string | null | undefined>,

		/** Optional. The labels with user-defined metadata to organize your FeatureOnlineStore. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. See https://goo.gl/xmQnxf for more information on and examples of labels. No more than 64 user labels can be associated with one FeatureOnlineStore(System labels are excluded)." System reserved label keys are prefixed with "aiplatform.googleapis.com/" and are immutable. */
		labels: FormControl<{[id: string]: string } | null | undefined>,

		/** Identifier. Name of the FeatureOnlineStore. Format: `projects/{project}/locations/{location}/featureOnlineStores/{featureOnlineStore}` */
		name: FormControl<string | null | undefined>,

		/** Output only. State of the featureOnlineStore. */
		state: FormControl<GoogleCloudAiplatformV1beta1FeatureOnlineStoreState | null | undefined>,

		/** Output only. Timestamp when this FeatureOnlineStore was last updated. */
		updateTime: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1FeatureOnlineStoreFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1FeatureOnlineStoreFormProperties>({
			createTime: new FormControl<string | null | undefined>(undefined),
			etag: new FormControl<string | null | undefined>(undefined),
			labels: new FormControl<{[id: string]: string } | null | undefined>(undefined),
			name: new FormControl<string | null | undefined>(undefined),
			state: new FormControl<GoogleCloudAiplatformV1beta1FeatureOnlineStoreState | null | undefined>(undefined),
			updateTime: new FormControl<string | null | undefined>(undefined),
		});

	}

	export interface GoogleCloudAiplatformV1beta1FeatureOnlineStoreBigtable {
		autoScaling?: GoogleCloudAiplatformV1beta1FeatureOnlineStoreBigtableAutoScaling;
	}
	export interface GoogleCloudAiplatformV1beta1FeatureOnlineStoreBigtableFormProperties {
	}
	export function CreateGoogleCloudAiplatformV1beta1FeatureOnlineStoreBigtableFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1FeatureOnlineStoreBigtableFormProperties>({
		});

	}

	export interface GoogleCloudAiplatformV1beta1FeatureOnlineStoreBigtableAutoScaling {

		/** Optional. A percentage of the cluster's CPU capacity. Can be from 10% to 80%. When a cluster's CPU utilization exceeds the target that you have set, Bigtable immediately adds nodes to the cluster. When CPU utilization is substantially lower than the target, Bigtable removes nodes. If not set will default to 50%. */
		cpuUtilizationTarget?: number | null;

		/** Required. The maximum number of nodes to scale up to. Must be greater than or equal to min_node_count, and less than or equal to 10 times of 'min_node_count'. */
		maxNodeCount?: number | null;

		/** Required. The minimum number of nodes to scale down to. Must be greater than or equal to 1. */
		minNodeCount?: number | null;
	}
	export interface GoogleCloudAiplatformV1beta1FeatureOnlineStoreBigtableAutoScalingFormProperties {

		/** Optional. A percentage of the cluster's CPU capacity. Can be from 10% to 80%. When a cluster's CPU utilization exceeds the target that you have set, Bigtable immediately adds nodes to the cluster. When CPU utilization is substantially lower than the target, Bigtable removes nodes. If not set will default to 50%. */
		cpuUtilizationTarget: FormControl<number | null | undefined>,

		/** Required. The maximum number of nodes to scale up to. Must be greater than or equal to min_node_count, and less than or equal to 10 times of 'min_node_count'. */
		maxNodeCount: FormControl<number | null | undefined>,

		/** Required. The minimum number of nodes to scale down to. Must be greater than or equal to 1. */
		minNodeCount: FormControl<number | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1FeatureOnlineStoreBigtableAutoScalingFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1FeatureOnlineStoreBigtableAutoScalingFormProperties>({
			cpuUtilizationTarget: new FormControl<number | null | undefined>(undefined),
			maxNodeCount: new FormControl<number | null | undefined>(undefined),
			minNodeCount: new FormControl<number | null | undefined>(undefined),
		});

	}


	/** The dedicated serving endpoint for this FeatureOnlineStore. Only need to set when you choose Optimized storage type or enable EmbeddingManagement. Will use public endpoint by default. Note, for EmbeddingManagement use case, only [DedicatedServingEndpoint.public_endpoint_domain_name] is available now. */
	export interface GoogleCloudAiplatformV1beta1FeatureOnlineStoreDedicatedServingEndpoint {

		/** Represents configuration for private service connect. */
		privateServiceConnectConfig?: GoogleCloudAiplatformV1beta1PrivateServiceConnectConfig;

		/** Output only. This field will be populated with the domain name to use for this FeatureOnlineStore */
		publicEndpointDomainName?: string | null;

		/** Output only. The name of the service attachment resource. Populated if private service connect is enabled and after FeatureViewSync is created. */
		serviceAttachment?: string | null;
	}

	/** The dedicated serving endpoint for this FeatureOnlineStore. Only need to set when you choose Optimized storage type or enable EmbeddingManagement. Will use public endpoint by default. Note, for EmbeddingManagement use case, only [DedicatedServingEndpoint.public_endpoint_domain_name] is available now. */
	export interface GoogleCloudAiplatformV1beta1FeatureOnlineStoreDedicatedServingEndpointFormProperties {

		/** Output only. This field will be populated with the domain name to use for this FeatureOnlineStore */
		publicEndpointDomainName: FormControl<string | null | undefined>,

		/** Output only. The name of the service attachment resource. Populated if private service connect is enabled and after FeatureViewSync is created. */
		serviceAttachment: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1FeatureOnlineStoreDedicatedServingEndpointFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1FeatureOnlineStoreDedicatedServingEndpointFormProperties>({
			publicEndpointDomainName: new FormControl<string | null | undefined>(undefined),
			serviceAttachment: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Represents configuration for private service connect. */
	export interface GoogleCloudAiplatformV1beta1PrivateServiceConnectConfig {

		/** Required. If true, expose the IndexEndpoint via private service connect. */
		enablePrivateServiceConnect?: boolean | null;

		/** A list of Projects from which the forwarding rule will target the service attachment. */
		projectAllowlist?: Array<string>;
	}

	/** Represents configuration for private service connect. */
	export interface GoogleCloudAiplatformV1beta1PrivateServiceConnectConfigFormProperties {

		/** Required. If true, expose the IndexEndpoint via private service connect. */
		enablePrivateServiceConnect: FormControl<boolean | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1PrivateServiceConnectConfigFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1PrivateServiceConnectConfigFormProperties>({
			enablePrivateServiceConnect: new FormControl<boolean | null | undefined>(undefined),
		});

	}


	/** Contains settings for embedding management. */
	export interface GoogleCloudAiplatformV1beta1FeatureOnlineStoreEmbeddingManagement {

		/** Optional. Immutable. Whether to enable embedding management in this FeatureOnlineStore. It's immutable after creation to ensure the FeatureOnlineStore availability. */
		enabled?: boolean | null;
	}

	/** Contains settings for embedding management. */
	export interface GoogleCloudAiplatformV1beta1FeatureOnlineStoreEmbeddingManagementFormProperties {

		/** Optional. Immutable. Whether to enable embedding management in this FeatureOnlineStore. It's immutable after creation to ensure the FeatureOnlineStore availability. */
		enabled: FormControl<boolean | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1FeatureOnlineStoreEmbeddingManagementFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1FeatureOnlineStoreEmbeddingManagementFormProperties>({
			enabled: new FormControl<boolean | null | undefined>(undefined),
		});

	}


	/** Optimized storage type */
	export interface GoogleCloudAiplatformV1beta1FeatureOnlineStoreOptimized {
	}

	/** Optimized storage type */
	export interface GoogleCloudAiplatformV1beta1FeatureOnlineStoreOptimizedFormProperties {
	}
	export function CreateGoogleCloudAiplatformV1beta1FeatureOnlineStoreOptimizedFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1FeatureOnlineStoreOptimizedFormProperties>({
		});

	}

	export enum GoogleCloudAiplatformV1beta1FeatureOnlineStoreState { STATE_UNSPECIFIED = 0, STABLE = 1, UPDATING = 2 }


	/** Value for a feature. */
	export interface GoogleCloudAiplatformV1beta1FeatureValue {

		/** A list of boolean values. */
		boolArrayValue?: GoogleCloudAiplatformV1beta1BoolArray;

		/** Bool type feature value. */
		boolValue?: boolean | null;

		/** Bytes feature value. */
		bytesValue?: string | null;

		/** A list of double values. */
		doubleArrayValue?: GoogleCloudAiplatformV1beta1DoubleArray;

		/** Double type feature value. */
		doubleValue?: number | null;

		/** A list of int64 values. */
		int64ArrayValue?: GoogleCloudAiplatformV1beta1Int64Array;

		/** Int64 feature value. */
		int64Value?: string | null;

		/** Metadata of feature value. */
		metadata?: GoogleCloudAiplatformV1beta1FeatureValueMetadata;

		/** A list of string values. */
		stringArrayValue?: GoogleCloudAiplatformV1beta1StringArray;

		/** String feature value. */
		stringValue?: string | null;
	}

	/** Value for a feature. */
	export interface GoogleCloudAiplatformV1beta1FeatureValueFormProperties {

		/** Bool type feature value. */
		boolValue: FormControl<boolean | null | undefined>,

		/** Bytes feature value. */
		bytesValue: FormControl<string | null | undefined>,

		/** Double type feature value. */
		doubleValue: FormControl<number | null | undefined>,

		/** Int64 feature value. */
		int64Value: FormControl<string | null | undefined>,

		/** String feature value. */
		stringValue: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1FeatureValueFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1FeatureValueFormProperties>({
			boolValue: new FormControl<boolean | null | undefined>(undefined),
			bytesValue: new FormControl<string | null | undefined>(undefined),
			doubleValue: new FormControl<number | null | undefined>(undefined),
			int64Value: new FormControl<string | null | undefined>(undefined),
			stringValue: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** A list of int64 values. */
	export interface GoogleCloudAiplatformV1beta1Int64Array {

		/** A list of int64 values. */
		values?: Array<string>;
	}

	/** A list of int64 values. */
	export interface GoogleCloudAiplatformV1beta1Int64ArrayFormProperties {
	}
	export function CreateGoogleCloudAiplatformV1beta1Int64ArrayFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1Int64ArrayFormProperties>({
		});

	}


	/** Metadata of feature value. */
	export interface GoogleCloudAiplatformV1beta1FeatureValueMetadata {

		/** Feature generation timestamp. Typically, it is provided by user at feature ingestion time. If not, feature store will use the system timestamp when the data is ingested into feature store. For streaming ingestion, the time, aligned by days, must be no older than five years (1825 days) and no later than one year (366 days) in the future. */
		generateTime?: string | null;
	}

	/** Metadata of feature value. */
	export interface GoogleCloudAiplatformV1beta1FeatureValueMetadataFormProperties {

		/** Feature generation timestamp. Typically, it is provided by user at feature ingestion time. If not, feature store will use the system timestamp when the data is ingested into feature store. For streaming ingestion, the time, aligned by days, must be no older than five years (1825 days) and no later than one year (366 days) in the future. */
		generateTime: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1FeatureValueMetadataFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1FeatureValueMetadataFormProperties>({
			generateTime: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** A list of string values. */
	export interface GoogleCloudAiplatformV1beta1StringArray {

		/** A list of string values. */
		values?: Array<string>;
	}

	/** A list of string values. */
	export interface GoogleCloudAiplatformV1beta1StringArrayFormProperties {
	}
	export function CreateGoogleCloudAiplatformV1beta1StringArrayFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1StringArrayFormProperties>({
		});

	}


	/** Container for list of values. */
	export interface GoogleCloudAiplatformV1beta1FeatureValueList {

		/** A list of feature values. All of them should be the same data type. */
		values?: Array<GoogleCloudAiplatformV1beta1FeatureValue>;
	}

	/** Container for list of values. */
	export interface GoogleCloudAiplatformV1beta1FeatureValueListFormProperties {
	}
	export function CreateGoogleCloudAiplatformV1beta1FeatureValueListFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1FeatureValueListFormProperties>({
		});

	}


	/** FeatureView is representation of values that the FeatureOnlineStore will serve based on its syncConfig. */
	export interface GoogleCloudAiplatformV1beta1FeatureView {
		bigQuerySource?: GoogleCloudAiplatformV1beta1FeatureViewBigQuerySource;

		/** Output only. Timestamp when this FeatureView was created. */
		createTime?: string | null;

		/** Optional. Used to perform consistent read-modify-write updates. If not set, a blind "overwrite" update happens. */
		etag?: string | null;

		/** A Feature Registry source for features that need to be synced to Online Store. */
		featureRegistrySource?: GoogleCloudAiplatformV1beta1FeatureViewFeatureRegistrySource;

		/** Optional. The labels with user-defined metadata to organize your FeatureViews. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. See https://goo.gl/xmQnxf for more information on and examples of labels. No more than 64 user labels can be associated with one FeatureOnlineStore(System labels are excluded)." System reserved label keys are prefixed with "aiplatform.googleapis.com/" and are immutable. */
		labels?: {[id: string]: string };

		/** Identifier. Name of the FeatureView. Format: `projects/{project}/locations/{location}/featureOnlineStores/{feature_online_store}/featureViews/{feature_view}` */
		name?: string | null;

		/** Configuration for Sync. Only one option is set. */
		syncConfig?: GoogleCloudAiplatformV1beta1FeatureViewSyncConfig;

		/** Output only. Timestamp when this FeatureView was last updated. */
		updateTime?: string | null;

		/** Configuration for vector search. */
		vectorSearchConfig?: GoogleCloudAiplatformV1beta1FeatureViewVectorSearchConfig;
	}

	/** FeatureView is representation of values that the FeatureOnlineStore will serve based on its syncConfig. */
	export interface GoogleCloudAiplatformV1beta1FeatureViewFormProperties {

		/** Output only. Timestamp when this FeatureView was created. */
		createTime: FormControl<string | null | undefined>,

		/** Optional. Used to perform consistent read-modify-write updates. If not set, a blind "overwrite" update happens. */
		etag: FormControl<string | null | undefined>,

		/** Optional. The labels with user-defined metadata to organize your FeatureViews. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. See https://goo.gl/xmQnxf for more information on and examples of labels. No more than 64 user labels can be associated with one FeatureOnlineStore(System labels are excluded)." System reserved label keys are prefixed with "aiplatform.googleapis.com/" and are immutable. */
		labels: FormControl<{[id: string]: string } | null | undefined>,

		/** Identifier. Name of the FeatureView. Format: `projects/{project}/locations/{location}/featureOnlineStores/{feature_online_store}/featureViews/{feature_view}` */
		name: FormControl<string | null | undefined>,

		/** Output only. Timestamp when this FeatureView was last updated. */
		updateTime: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1FeatureViewFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1FeatureViewFormProperties>({
			createTime: new FormControl<string | null | undefined>(undefined),
			etag: new FormControl<string | null | undefined>(undefined),
			labels: new FormControl<{[id: string]: string } | null | undefined>(undefined),
			name: new FormControl<string | null | undefined>(undefined),
			updateTime: new FormControl<string | null | undefined>(undefined),
		});

	}

	export interface GoogleCloudAiplatformV1beta1FeatureViewBigQuerySource {

		/** Required. Columns to construct entity_id / row keys. Start by supporting 1 only. */
		entityIdColumns?: Array<string>;

		/** Required. The BigQuery view URI that will be materialized on each sync trigger based on FeatureView.SyncConfig. */
		uri?: string | null;
	}
	export interface GoogleCloudAiplatformV1beta1FeatureViewBigQuerySourceFormProperties {

		/** Required. The BigQuery view URI that will be materialized on each sync trigger based on FeatureView.SyncConfig. */
		uri: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1FeatureViewBigQuerySourceFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1FeatureViewBigQuerySourceFormProperties>({
			uri: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** A Feature Registry source for features that need to be synced to Online Store. */
	export interface GoogleCloudAiplatformV1beta1FeatureViewFeatureRegistrySource {

		/** Required. List of features that need to be synced to Online Store. */
		featureGroups?: Array<GoogleCloudAiplatformV1beta1FeatureViewFeatureRegistrySourceFeatureGroup>;
	}

	/** A Feature Registry source for features that need to be synced to Online Store. */
	export interface GoogleCloudAiplatformV1beta1FeatureViewFeatureRegistrySourceFormProperties {
	}
	export function CreateGoogleCloudAiplatformV1beta1FeatureViewFeatureRegistrySourceFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1FeatureViewFeatureRegistrySourceFormProperties>({
		});

	}


	/** Features belonging to a single feature group that will be synced to Online Store. */
	export interface GoogleCloudAiplatformV1beta1FeatureViewFeatureRegistrySourceFeatureGroup {

		/** Required. Identifier of the feature group. */
		featureGroupId?: string | null;

		/** Required. Identifiers of features under the feature group. */
		featureIds?: Array<string>;
	}

	/** Features belonging to a single feature group that will be synced to Online Store. */
	export interface GoogleCloudAiplatformV1beta1FeatureViewFeatureRegistrySourceFeatureGroupFormProperties {

		/** Required. Identifier of the feature group. */
		featureGroupId: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1FeatureViewFeatureRegistrySourceFeatureGroupFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1FeatureViewFeatureRegistrySourceFeatureGroupFormProperties>({
			featureGroupId: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Configuration for Sync. Only one option is set. */
	export interface GoogleCloudAiplatformV1beta1FeatureViewSyncConfig {

		/** Cron schedule (https://en.wikipedia.org/wiki/Cron) to launch scheduled runs. To explicitly set a timezone to the cron tab, apply a prefix in the cron tab: "CRON_TZ=${IANA_TIME_ZONE}" or "TZ=${IANA_TIME_ZONE}". The ${IANA_TIME_ZONE} may only be a valid string from IANA time zone database. For example, "CRON_TZ=America/New_York 1 * * * *", or "TZ=America/New_York 1 * * * *". */
		cron?: string | null;
	}

	/** Configuration for Sync. Only one option is set. */
	export interface GoogleCloudAiplatformV1beta1FeatureViewSyncConfigFormProperties {

		/** Cron schedule (https://en.wikipedia.org/wiki/Cron) to launch scheduled runs. To explicitly set a timezone to the cron tab, apply a prefix in the cron tab: "CRON_TZ=${IANA_TIME_ZONE}" or "TZ=${IANA_TIME_ZONE}". The ${IANA_TIME_ZONE} may only be a valid string from IANA time zone database. For example, "CRON_TZ=America/New_York 1 * * * *", or "TZ=America/New_York 1 * * * *". */
		cron: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1FeatureViewSyncConfigFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1FeatureViewSyncConfigFormProperties>({
			cron: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Configuration for vector search. */
	export interface GoogleCloudAiplatformV1beta1FeatureViewVectorSearchConfig {
		bruteForceConfig?: GoogleCloudAiplatformV1beta1FeatureViewVectorSearchConfigBruteForceConfig;

		/** Optional. Column of crowding. This column contains crowding attribute which is a constraint on a neighbor list produced by nearest neighbor search requiring that no more than some value k' of the k neighbors returned have the same value of crowding_attribute. */
		crowdingColumn?: string | null;

		/** Optional. The distance measure used in nearest neighbor search. */
		distanceMeasureType?: GoogleCloudAiplatformV1beta1FeatureViewVectorSearchConfigDistanceMeasureType | null;

		/** Optional. Column of embedding. This column contains the source data to create index for vector search. embedding_column must be set when using vector search. */
		embeddingColumn?: string | null;

		/** Optional. The number of dimensions of the input embedding. */
		embeddingDimension?: number | null;

		/** Optional. Columns of features that're used to filter vector search results. */
		filterColumns?: Array<string>;
		treeAhConfig?: GoogleCloudAiplatformV1beta1FeatureViewVectorSearchConfigTreeAHConfig;
	}

	/** Configuration for vector search. */
	export interface GoogleCloudAiplatformV1beta1FeatureViewVectorSearchConfigFormProperties {

		/** Optional. Column of crowding. This column contains crowding attribute which is a constraint on a neighbor list produced by nearest neighbor search requiring that no more than some value k' of the k neighbors returned have the same value of crowding_attribute. */
		crowdingColumn: FormControl<string | null | undefined>,

		/** Optional. The distance measure used in nearest neighbor search. */
		distanceMeasureType: FormControl<GoogleCloudAiplatformV1beta1FeatureViewVectorSearchConfigDistanceMeasureType | null | undefined>,

		/** Optional. Column of embedding. This column contains the source data to create index for vector search. embedding_column must be set when using vector search. */
		embeddingColumn: FormControl<string | null | undefined>,

		/** Optional. The number of dimensions of the input embedding. */
		embeddingDimension: FormControl<number | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1FeatureViewVectorSearchConfigFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1FeatureViewVectorSearchConfigFormProperties>({
			crowdingColumn: new FormControl<string | null | undefined>(undefined),
			distanceMeasureType: new FormControl<GoogleCloudAiplatformV1beta1FeatureViewVectorSearchConfigDistanceMeasureType | null | undefined>(undefined),
			embeddingColumn: new FormControl<string | null | undefined>(undefined),
			embeddingDimension: new FormControl<number | null | undefined>(undefined),
		});

	}

	export interface GoogleCloudAiplatformV1beta1FeatureViewVectorSearchConfigBruteForceConfig {
	}
	export interface GoogleCloudAiplatformV1beta1FeatureViewVectorSearchConfigBruteForceConfigFormProperties {
	}
	export function CreateGoogleCloudAiplatformV1beta1FeatureViewVectorSearchConfigBruteForceConfigFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1FeatureViewVectorSearchConfigBruteForceConfigFormProperties>({
		});

	}

	export enum GoogleCloudAiplatformV1beta1FeatureViewVectorSearchConfigDistanceMeasureType { DISTANCE_MEASURE_TYPE_UNSPECIFIED = 0, SQUARED_L2_DISTANCE = 1, COSINE_DISTANCE = 2, DOT_PRODUCT_DISTANCE = 3 }

	export interface GoogleCloudAiplatformV1beta1FeatureViewVectorSearchConfigTreeAHConfig {

		/** Optional. Number of embeddings on each leaf node. The default value is 1000 if not set. */
		leafNodeEmbeddingCount?: string | null;
	}
	export interface GoogleCloudAiplatformV1beta1FeatureViewVectorSearchConfigTreeAHConfigFormProperties {

		/** Optional. Number of embeddings on each leaf node. The default value is 1000 if not set. */
		leafNodeEmbeddingCount: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1FeatureViewVectorSearchConfigTreeAHConfigFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1FeatureViewVectorSearchConfigTreeAHConfigFormProperties>({
			leafNodeEmbeddingCount: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Lookup key for a feature view. */
	export interface GoogleCloudAiplatformV1beta1FeatureViewDataKey {

		/** String key to use for lookup. */
		key?: string | null;
	}

	/** Lookup key for a feature view. */
	export interface GoogleCloudAiplatformV1beta1FeatureViewDataKeyFormProperties {

		/** String key to use for lookup. */
		key: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1FeatureViewDataKeyFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1FeatureViewDataKeyFormProperties>({
			key: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** FeatureViewSync is a representation of sync operation which copies data from data source to Feature View in Online Store. */
	export interface GoogleCloudAiplatformV1beta1FeatureViewSync {

		/** Output only. Time when this FeatureViewSync is created. Creation of a FeatureViewSync means that the job is pending / waiting for sufficient resources but may not have started the actual data transfer yet. */
		createTime?: string | null;

		/** The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors). */
		finalStatus?: GoogleRpcStatus;

		/** Identifier. Name of the FeatureViewSync. Format: `projects/{project}/locations/{location}/featureOnlineStores/{feature_online_store}/featureViews/{feature_view}/featureViewSyncs/{feature_view_sync}` */
		name?: string | null;

		/** Represents a time interval, encoded as a Timestamp start (inclusive) and a Timestamp end (exclusive). The start must be less than or equal to the end. When the start equals the end, the interval is empty (matches no time). When both start and end are unspecified, the interval matches any time. */
		runTime?: GoogleTypeInterval;
	}

	/** FeatureViewSync is a representation of sync operation which copies data from data source to Feature View in Online Store. */
	export interface GoogleCloudAiplatformV1beta1FeatureViewSyncFormProperties {

		/** Output only. Time when this FeatureViewSync is created. Creation of a FeatureViewSync means that the job is pending / waiting for sufficient resources but may not have started the actual data transfer yet. */
		createTime: FormControl<string | null | undefined>,

		/** Identifier. Name of the FeatureViewSync. Format: `projects/{project}/locations/{location}/featureOnlineStores/{feature_online_store}/featureViews/{feature_view}/featureViewSyncs/{feature_view_sync}` */
		name: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1FeatureViewSyncFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1FeatureViewSyncFormProperties>({
			createTime: new FormControl<string | null | undefined>(undefined),
			name: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Vertex AI Feature Store provides a centralized repository for organizing, storing, and serving ML features. The Featurestore is a top-level container for your features and their values. */
	export interface GoogleCloudAiplatformV1beta1Featurestore {

		/** Output only. Timestamp when this Featurestore was created. */
		createTime?: string | null;

		/** Represents a customer-managed encryption key spec that can be applied to a top-level resource. */
		encryptionSpec?: GoogleCloudAiplatformV1beta1EncryptionSpec;

		/** Optional. Used to perform consistent read-modify-write updates. If not set, a blind "overwrite" update happens. */
		etag?: string | null;

		/** Optional. The labels with user-defined metadata to organize your Featurestore. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. See https://goo.gl/xmQnxf for more information on and examples of labels. No more than 64 user labels can be associated with one Featurestore(System labels are excluded)." System reserved label keys are prefixed with "aiplatform.googleapis.com/" and are immutable. */
		labels?: {[id: string]: string };

		/** Output only. Name of the Featurestore. Format: `projects/{project}/locations/{location}/featurestores/{featurestore}` */
		name?: string | null;

		/** OnlineServingConfig specifies the details for provisioning online serving resources. */
		onlineServingConfig?: GoogleCloudAiplatformV1beta1FeaturestoreOnlineServingConfig;

		/** Optional. TTL in days for feature values that will be stored in online serving storage. The Feature Store online storage periodically removes obsolete feature values older than `online_storage_ttl_days` since the feature generation time. Note that `online_storage_ttl_days` should be less than or equal to `offline_storage_ttl_days` for each EntityType under a featurestore. If not set, default to 4000 days */
		onlineStorageTtlDays?: number | null;

		/** Output only. State of the featurestore. */
		state?: GoogleCloudAiplatformV1beta1FeatureOnlineStoreState | null;

		/** Output only. Timestamp when this Featurestore was last updated. */
		updateTime?: string | null;
	}

	/** Vertex AI Feature Store provides a centralized repository for organizing, storing, and serving ML features. The Featurestore is a top-level container for your features and their values. */
	export interface GoogleCloudAiplatformV1beta1FeaturestoreFormProperties {

		/** Output only. Timestamp when this Featurestore was created. */
		createTime: FormControl<string | null | undefined>,

		/** Optional. Used to perform consistent read-modify-write updates. If not set, a blind "overwrite" update happens. */
		etag: FormControl<string | null | undefined>,

		/** Optional. The labels with user-defined metadata to organize your Featurestore. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. See https://goo.gl/xmQnxf for more information on and examples of labels. No more than 64 user labels can be associated with one Featurestore(System labels are excluded)." System reserved label keys are prefixed with "aiplatform.googleapis.com/" and are immutable. */
		labels: FormControl<{[id: string]: string } | null | undefined>,

		/** Output only. Name of the Featurestore. Format: `projects/{project}/locations/{location}/featurestores/{featurestore}` */
		name: FormControl<string | null | undefined>,

		/** Optional. TTL in days for feature values that will be stored in online serving storage. The Feature Store online storage periodically removes obsolete feature values older than `online_storage_ttl_days` since the feature generation time. Note that `online_storage_ttl_days` should be less than or equal to `offline_storage_ttl_days` for each EntityType under a featurestore. If not set, default to 4000 days */
		onlineStorageTtlDays: FormControl<number | null | undefined>,

		/** Output only. State of the featurestore. */
		state: FormControl<GoogleCloudAiplatformV1beta1FeatureOnlineStoreState | null | undefined>,

		/** Output only. Timestamp when this Featurestore was last updated. */
		updateTime: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1FeaturestoreFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1FeaturestoreFormProperties>({
			createTime: new FormControl<string | null | undefined>(undefined),
			etag: new FormControl<string | null | undefined>(undefined),
			labels: new FormControl<{[id: string]: string } | null | undefined>(undefined),
			name: new FormControl<string | null | undefined>(undefined),
			onlineStorageTtlDays: new FormControl<number | null | undefined>(undefined),
			state: new FormControl<GoogleCloudAiplatformV1beta1FeatureOnlineStoreState | null | undefined>(undefined),
			updateTime: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** OnlineServingConfig specifies the details for provisioning online serving resources. */
	export interface GoogleCloudAiplatformV1beta1FeaturestoreOnlineServingConfig {

		/** The number of nodes for the online store. The number of nodes doesn't scale automatically, but you can manually update the number of nodes. If set to 0, the featurestore will not have an online store and cannot be used for online serving. */
		fixedNodeCount?: number | null;

		/** Online serving scaling configuration. If min_node_count and max_node_count are set to the same value, the cluster will be configured with the fixed number of node (no auto-scaling). */
		scaling?: GoogleCloudAiplatformV1beta1FeaturestoreOnlineServingConfigScaling;
	}

	/** OnlineServingConfig specifies the details for provisioning online serving resources. */
	export interface GoogleCloudAiplatformV1beta1FeaturestoreOnlineServingConfigFormProperties {

		/** The number of nodes for the online store. The number of nodes doesn't scale automatically, but you can manually update the number of nodes. If set to 0, the featurestore will not have an online store and cannot be used for online serving. */
		fixedNodeCount: FormControl<number | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1FeaturestoreOnlineServingConfigFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1FeaturestoreOnlineServingConfigFormProperties>({
			fixedNodeCount: new FormControl<number | null | undefined>(undefined),
		});

	}


	/** Online serving scaling configuration. If min_node_count and max_node_count are set to the same value, the cluster will be configured with the fixed number of node (no auto-scaling). */
	export interface GoogleCloudAiplatformV1beta1FeaturestoreOnlineServingConfigScaling {

		/** Optional. The cpu utilization that the Autoscaler should be trying to achieve. This number is on a scale from 0 (no utilization) to 100 (total utilization), and is limited between 10 and 80. When a cluster's CPU utilization exceeds the target that you have set, Bigtable immediately adds nodes to the cluster. When CPU utilization is substantially lower than the target, Bigtable removes nodes. If not set or set to 0, default to 50. */
		cpuUtilizationTarget?: number | null;

		/** The maximum number of nodes to scale up to. Must be greater than min_node_count, and less than or equal to 10 times of 'min_node_count'. */
		maxNodeCount?: number | null;

		/** Required. The minimum number of nodes to scale down to. Must be greater than or equal to 1. */
		minNodeCount?: number | null;
	}

	/** Online serving scaling configuration. If min_node_count and max_node_count are set to the same value, the cluster will be configured with the fixed number of node (no auto-scaling). */
	export interface GoogleCloudAiplatformV1beta1FeaturestoreOnlineServingConfigScalingFormProperties {

		/** Optional. The cpu utilization that the Autoscaler should be trying to achieve. This number is on a scale from 0 (no utilization) to 100 (total utilization), and is limited between 10 and 80. When a cluster's CPU utilization exceeds the target that you have set, Bigtable immediately adds nodes to the cluster. When CPU utilization is substantially lower than the target, Bigtable removes nodes. If not set or set to 0, default to 50. */
		cpuUtilizationTarget: FormControl<number | null | undefined>,

		/** The maximum number of nodes to scale up to. Must be greater than min_node_count, and less than or equal to 10 times of 'min_node_count'. */
		maxNodeCount: FormControl<number | null | undefined>,

		/** Required. The minimum number of nodes to scale down to. Must be greater than or equal to 1. */
		minNodeCount: FormControl<number | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1FeaturestoreOnlineServingConfigScalingFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1FeaturestoreOnlineServingConfigScalingFormProperties>({
			cpuUtilizationTarget: new FormControl<number | null | undefined>(undefined),
			maxNodeCount: new FormControl<number | null | undefined>(undefined),
			minNodeCount: new FormControl<number | null | undefined>(undefined),
		});

	}


	/** Request message for FeatureOnlineStoreService.FetchFeatureValues. All the features under the requested feature view will be returned. */
	export interface GoogleCloudAiplatformV1beta1FetchFeatureValuesRequest {

		/** Optional. Response data format. If not set, FeatureViewDataFormat.KEY_VALUE will be used. */
		dataFormat?: GoogleCloudAiplatformV1beta1FetchFeatureValuesRequestDataFormat | null;

		/** Lookup key for a feature view. */
		dataKey?: GoogleCloudAiplatformV1beta1FeatureViewDataKey;

		/** Specify response data format. If not set, KeyValue format will be used. Deprecated. Use FetchFeatureValuesRequest.data_format. */
		format?: GoogleCloudAiplatformV1beta1FetchFeatureValuesRequestFormat | null;

		/** Simple ID. The whole string will be used as is to identify Entity to fetch feature values for. */
		id?: string | null;
	}

	/** Request message for FeatureOnlineStoreService.FetchFeatureValues. All the features under the requested feature view will be returned. */
	export interface GoogleCloudAiplatformV1beta1FetchFeatureValuesRequestFormProperties {

		/** Optional. Response data format. If not set, FeatureViewDataFormat.KEY_VALUE will be used. */
		dataFormat: FormControl<GoogleCloudAiplatformV1beta1FetchFeatureValuesRequestDataFormat | null | undefined>,

		/** Specify response data format. If not set, KeyValue format will be used. Deprecated. Use FetchFeatureValuesRequest.data_format. */
		format: FormControl<GoogleCloudAiplatformV1beta1FetchFeatureValuesRequestFormat | null | undefined>,

		/** Simple ID. The whole string will be used as is to identify Entity to fetch feature values for. */
		id: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1FetchFeatureValuesRequestFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1FetchFeatureValuesRequestFormProperties>({
			dataFormat: new FormControl<GoogleCloudAiplatformV1beta1FetchFeatureValuesRequestDataFormat | null | undefined>(undefined),
			format: new FormControl<GoogleCloudAiplatformV1beta1FetchFeatureValuesRequestFormat | null | undefined>(undefined),
			id: new FormControl<string | null | undefined>(undefined),
		});

	}

	export enum GoogleCloudAiplatformV1beta1FetchFeatureValuesRequestDataFormat { FEATURE_VIEW_DATA_FORMAT_UNSPECIFIED = 0, KEY_VALUE = 1, PROTO_STRUCT = 2 }

	export enum GoogleCloudAiplatformV1beta1FetchFeatureValuesRequestFormat { FORMAT_UNSPECIFIED = 0, KEY_VALUE = 1, PROTO_STRUCT = 2 }


	/** Response message for FeatureOnlineStoreService.FetchFeatureValues */
	export interface GoogleCloudAiplatformV1beta1FetchFeatureValuesResponse {

		/** Response structure in the format of key (feature name) and (feature) value pair. */
		keyValues?: GoogleCloudAiplatformV1beta1FetchFeatureValuesResponseFeatureNameValuePairList;

		/** Feature values in proto Struct format. */
		protoStruct?: {[id: string]: any };
	}

	/** Response message for FeatureOnlineStoreService.FetchFeatureValues */
	export interface GoogleCloudAiplatformV1beta1FetchFeatureValuesResponseFormProperties {

		/** Feature values in proto Struct format. */
		protoStruct: FormControl<{[id: string]: any } | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1FetchFeatureValuesResponseFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1FetchFeatureValuesResponseFormProperties>({
			protoStruct: new FormControl<{[id: string]: any } | null | undefined>(undefined),
		});

	}


	/** Response structure in the format of key (feature name) and (feature) value pair. */
	export interface GoogleCloudAiplatformV1beta1FetchFeatureValuesResponseFeatureNameValuePairList {

		/** List of feature names and values. */
		features?: Array<GoogleCloudAiplatformV1beta1FetchFeatureValuesResponseFeatureNameValuePairListFeatureNameValuePair>;
	}

	/** Response structure in the format of key (feature name) and (feature) value pair. */
	export interface GoogleCloudAiplatformV1beta1FetchFeatureValuesResponseFeatureNameValuePairListFormProperties {
	}
	export function CreateGoogleCloudAiplatformV1beta1FetchFeatureValuesResponseFeatureNameValuePairListFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1FetchFeatureValuesResponseFeatureNameValuePairListFormProperties>({
		});

	}


	/** Feature name & value pair. */
	export interface GoogleCloudAiplatformV1beta1FetchFeatureValuesResponseFeatureNameValuePairListFeatureNameValuePair {

		/** Feature short name. */
		name?: string | null;

		/** Value for a feature. */
		value?: GoogleCloudAiplatformV1beta1FeatureValue;
	}

	/** Feature name & value pair. */
	export interface GoogleCloudAiplatformV1beta1FetchFeatureValuesResponseFeatureNameValuePairListFeatureNameValuePairFormProperties {

		/** Feature short name. */
		name: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1FetchFeatureValuesResponseFeatureNameValuePairListFeatureNameValuePairFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1FetchFeatureValuesResponseFeatureNameValuePairListFeatureNameValuePairFormProperties>({
			name: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Assigns input data to training, validation, and test sets based on the given filters, data pieces not matched by any filter are ignored. Currently only supported for Datasets containing DataItems. If any of the filters in this message are to match nothing, then they can be set as '-' (the minus sign). Supported only for unstructured Datasets.  */
	export interface GoogleCloudAiplatformV1beta1FilterSplit {

		/** Required. A filter on DataItems of the Dataset. DataItems that match this filter are used to test the Model. A filter with same syntax as the one used in DatasetService.ListDataItems may be used. If a single DataItem is matched by more than one of the FilterSplit filters, then it is assigned to the first set that applies to it in the training, validation, test order. */
		testFilter?: string | null;

		/** Required. A filter on DataItems of the Dataset. DataItems that match this filter are used to train the Model. A filter with same syntax as the one used in DatasetService.ListDataItems may be used. If a single DataItem is matched by more than one of the FilterSplit filters, then it is assigned to the first set that applies to it in the training, validation, test order. */
		trainingFilter?: string | null;

		/** Required. A filter on DataItems of the Dataset. DataItems that match this filter are used to validate the Model. A filter with same syntax as the one used in DatasetService.ListDataItems may be used. If a single DataItem is matched by more than one of the FilterSplit filters, then it is assigned to the first set that applies to it in the training, validation, test order. */
		validationFilter?: string | null;
	}

	/** Assigns input data to training, validation, and test sets based on the given filters, data pieces not matched by any filter are ignored. Currently only supported for Datasets containing DataItems. If any of the filters in this message are to match nothing, then they can be set as '-' (the minus sign). Supported only for unstructured Datasets.  */
	export interface GoogleCloudAiplatformV1beta1FilterSplitFormProperties {

		/** Required. A filter on DataItems of the Dataset. DataItems that match this filter are used to test the Model. A filter with same syntax as the one used in DatasetService.ListDataItems may be used. If a single DataItem is matched by more than one of the FilterSplit filters, then it is assigned to the first set that applies to it in the training, validation, test order. */
		testFilter: FormControl<string | null | undefined>,

		/** Required. A filter on DataItems of the Dataset. DataItems that match this filter are used to train the Model. A filter with same syntax as the one used in DatasetService.ListDataItems may be used. If a single DataItem is matched by more than one of the FilterSplit filters, then it is assigned to the first set that applies to it in the training, validation, test order. */
		trainingFilter: FormControl<string | null | undefined>,

		/** Required. A filter on DataItems of the Dataset. DataItems that match this filter are used to validate the Model. A filter with same syntax as the one used in DatasetService.ListDataItems may be used. If a single DataItem is matched by more than one of the FilterSplit filters, then it is assigned to the first set that applies to it in the training, validation, test order. */
		validationFilter: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1FilterSplitFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1FilterSplitFormProperties>({
			testFilter: new FormControl<string | null | undefined>(undefined),
			trainingFilter: new FormControl<string | null | undefined>(undefined),
			validationFilter: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** The request message for MatchService.FindNeighbors. */
	export interface GoogleCloudAiplatformV1beta1FindNeighborsRequest {

		/** The ID of the DeployedIndex that will serve the request. This request is sent to a specific IndexEndpoint, as per the IndexEndpoint.network. That IndexEndpoint also has IndexEndpoint.deployed_indexes, and each such index has a DeployedIndex.id field. The value of the field below must equal one of the DeployedIndex.id fields of the IndexEndpoint that is being called for this request. */
		deployedIndexId?: string | null;

		/** The list of queries. */
		queries?: Array<GoogleCloudAiplatformV1beta1FindNeighborsRequestQuery>;

		/** If set to true, the full datapoints (including all vector values and restricts) of the nearest neighbors are returned. Note that returning full datapoint will significantly increase the latency and cost of the query. */
		returnFullDatapoint?: boolean | null;
	}

	/** The request message for MatchService.FindNeighbors. */
	export interface GoogleCloudAiplatformV1beta1FindNeighborsRequestFormProperties {

		/** The ID of the DeployedIndex that will serve the request. This request is sent to a specific IndexEndpoint, as per the IndexEndpoint.network. That IndexEndpoint also has IndexEndpoint.deployed_indexes, and each such index has a DeployedIndex.id field. The value of the field below must equal one of the DeployedIndex.id fields of the IndexEndpoint that is being called for this request. */
		deployedIndexId: FormControl<string | null | undefined>,

		/** If set to true, the full datapoints (including all vector values and restricts) of the nearest neighbors are returned. Note that returning full datapoint will significantly increase the latency and cost of the query. */
		returnFullDatapoint: FormControl<boolean | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1FindNeighborsRequestFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1FindNeighborsRequestFormProperties>({
			deployedIndexId: new FormControl<string | null | undefined>(undefined),
			returnFullDatapoint: new FormControl<boolean | null | undefined>(undefined),
		});

	}


	/** A query to find a number of the nearest neighbors (most similar vectors) of a vector. */
	export interface GoogleCloudAiplatformV1beta1FindNeighborsRequestQuery {

		/** The number of neighbors to find via approximate search before exact reordering is performed. If not set, the default value from scam config is used; if set, this value must be > 0. */
		approximateNeighborCount?: number | null;

		/** A datapoint of Index. */
		datapoint?: GoogleCloudAiplatformV1beta1IndexDatapoint;

		/** The fraction of the number of leaves to search, set at query time allows user to tune search performance. This value increase result in both search accuracy and latency increase. The value should be between 0.0 and 1.0. If not set or set to 0.0, query uses the default value specified in NearestNeighborSearchConfig.TreeAHConfig.fraction_leaf_nodes_to_search. */
		fractionLeafNodesToSearchOverride?: number | null;

		/** The number of nearest neighbors to be retrieved from database for each query. If not set, will use the default from the service configuration (https://cloud.google.com/vertex-ai/docs/matching-engine/configuring-indexes#nearest-neighbor-search-config). */
		neighborCount?: number | null;

		/** Crowding is a constraint on a neighbor list produced by nearest neighbor search requiring that no more than some value k' of the k neighbors returned have the same value of crowding_attribute. It's used for improving result diversity. This field is the maximum number of matches with the same crowding tag. */
		perCrowdingAttributeNeighborCount?: number | null;
	}

	/** A query to find a number of the nearest neighbors (most similar vectors) of a vector. */
	export interface GoogleCloudAiplatformV1beta1FindNeighborsRequestQueryFormProperties {

		/** The number of neighbors to find via approximate search before exact reordering is performed. If not set, the default value from scam config is used; if set, this value must be > 0. */
		approximateNeighborCount: FormControl<number | null | undefined>,

		/** The fraction of the number of leaves to search, set at query time allows user to tune search performance. This value increase result in both search accuracy and latency increase. The value should be between 0.0 and 1.0. If not set or set to 0.0, query uses the default value specified in NearestNeighborSearchConfig.TreeAHConfig.fraction_leaf_nodes_to_search. */
		fractionLeafNodesToSearchOverride: FormControl<number | null | undefined>,

		/** The number of nearest neighbors to be retrieved from database for each query. If not set, will use the default from the service configuration (https://cloud.google.com/vertex-ai/docs/matching-engine/configuring-indexes#nearest-neighbor-search-config). */
		neighborCount: FormControl<number | null | undefined>,

		/** Crowding is a constraint on a neighbor list produced by nearest neighbor search requiring that no more than some value k' of the k neighbors returned have the same value of crowding_attribute. It's used for improving result diversity. This field is the maximum number of matches with the same crowding tag. */
		perCrowdingAttributeNeighborCount: FormControl<number | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1FindNeighborsRequestQueryFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1FindNeighborsRequestQueryFormProperties>({
			approximateNeighborCount: new FormControl<number | null | undefined>(undefined),
			fractionLeafNodesToSearchOverride: new FormControl<number | null | undefined>(undefined),
			neighborCount: new FormControl<number | null | undefined>(undefined),
			perCrowdingAttributeNeighborCount: new FormControl<number | null | undefined>(undefined),
		});

	}


	/** A datapoint of Index. */
	export interface GoogleCloudAiplatformV1beta1IndexDatapoint {

		/** Crowding tag is a constraint on a neighbor list produced by nearest neighbor search requiring that no more than some value k' of the k neighbors returned have the same value of crowding_attribute. */
		crowdingTag?: GoogleCloudAiplatformV1beta1IndexDatapointCrowdingTag;

		/** Required. Unique identifier of the datapoint. */
		datapointId?: string | null;

		/** Required. Feature embedding vector. An array of numbers with the length of [NearestNeighborSearchConfig.dimensions]. */
		featureVector?: Array<number>;

		/** Optional. List of Restrict of the datapoint, used to perform "restricted searches" where boolean rule are used to filter the subset of the database eligible for matching. This uses numeric comparisons. */
		numericRestricts?: Array<GoogleCloudAiplatformV1beta1IndexDatapointNumericRestriction>;

		/** Optional. List of Restrict of the datapoint, used to perform "restricted searches" where boolean rule are used to filter the subset of the database eligible for matching. This uses categorical tokens. See: https://cloud.google.com/vertex-ai/docs/matching-engine/filtering */
		restricts?: Array<GoogleCloudAiplatformV1beta1IndexDatapointRestriction>;
	}

	/** A datapoint of Index. */
	export interface GoogleCloudAiplatformV1beta1IndexDatapointFormProperties {

		/** Required. Unique identifier of the datapoint. */
		datapointId: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1IndexDatapointFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1IndexDatapointFormProperties>({
			datapointId: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Crowding tag is a constraint on a neighbor list produced by nearest neighbor search requiring that no more than some value k' of the k neighbors returned have the same value of crowding_attribute. */
	export interface GoogleCloudAiplatformV1beta1IndexDatapointCrowdingTag {

		/** The attribute value used for crowding. The maximum number of neighbors to return per crowding attribute value (per_crowding_attribute_num_neighbors) is configured per-query. This field is ignored if per_crowding_attribute_num_neighbors is larger than the total number of neighbors to return for a given query. */
		crowdingAttribute?: string | null;
	}

	/** Crowding tag is a constraint on a neighbor list produced by nearest neighbor search requiring that no more than some value k' of the k neighbors returned have the same value of crowding_attribute. */
	export interface GoogleCloudAiplatformV1beta1IndexDatapointCrowdingTagFormProperties {

		/** The attribute value used for crowding. The maximum number of neighbors to return per crowding attribute value (per_crowding_attribute_num_neighbors) is configured per-query. This field is ignored if per_crowding_attribute_num_neighbors is larger than the total number of neighbors to return for a given query. */
		crowdingAttribute: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1IndexDatapointCrowdingTagFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1IndexDatapointCrowdingTagFormProperties>({
			crowdingAttribute: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** This field allows restricts to be based on numeric comparisons rather than categorical tokens. */
	export interface GoogleCloudAiplatformV1beta1IndexDatapointNumericRestriction {

		/** The namespace of this restriction. e.g.: cost. */
		namespace?: string | null;

		/** This MUST be specified for queries and must NOT be specified for datapoints. */
		op?: GoogleCloudAiplatformV1beta1IndexDatapointNumericRestrictionOp | null;

		/** Represents 64 bit float. */
		valueDouble?: number | null;

		/** Represents 32 bit float. */
		valueFloat?: number | null;

		/** Represents 64 bit integer. */
		valueInt?: string | null;
	}

	/** This field allows restricts to be based on numeric comparisons rather than categorical tokens. */
	export interface GoogleCloudAiplatformV1beta1IndexDatapointNumericRestrictionFormProperties {

		/** The namespace of this restriction. e.g.: cost. */
		namespace: FormControl<string | null | undefined>,

		/** This MUST be specified for queries and must NOT be specified for datapoints. */
		op: FormControl<GoogleCloudAiplatformV1beta1IndexDatapointNumericRestrictionOp | null | undefined>,

		/** Represents 64 bit float. */
		valueDouble: FormControl<number | null | undefined>,

		/** Represents 32 bit float. */
		valueFloat: FormControl<number | null | undefined>,

		/** Represents 64 bit integer. */
		valueInt: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1IndexDatapointNumericRestrictionFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1IndexDatapointNumericRestrictionFormProperties>({
			namespace: new FormControl<string | null | undefined>(undefined),
			op: new FormControl<GoogleCloudAiplatformV1beta1IndexDatapointNumericRestrictionOp | null | undefined>(undefined),
			valueDouble: new FormControl<number | null | undefined>(undefined),
			valueFloat: new FormControl<number | null | undefined>(undefined),
			valueInt: new FormControl<string | null | undefined>(undefined),
		});

	}

	export enum GoogleCloudAiplatformV1beta1IndexDatapointNumericRestrictionOp { OPERATOR_UNSPECIFIED = 0, LESS = 1, LESS_EQUAL = 2, EQUAL = 3, GREATER_EQUAL = 4, GREATER = 5 }


	/** Restriction of a datapoint which describe its attributes(tokens) from each of several attribute categories(namespaces). */
	export interface GoogleCloudAiplatformV1beta1IndexDatapointRestriction {

		/** The attributes to allow in this namespace. e.g.: 'red' */
		allowList?: Array<string>;

		/** The attributes to deny in this namespace. e.g.: 'blue' */
		denyList?: Array<string>;

		/** The namespace of this restriction. e.g.: color. */
		namespace?: string | null;
	}

	/** Restriction of a datapoint which describe its attributes(tokens) from each of several attribute categories(namespaces). */
	export interface GoogleCloudAiplatformV1beta1IndexDatapointRestrictionFormProperties {

		/** The namespace of this restriction. e.g.: color. */
		namespace: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1IndexDatapointRestrictionFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1IndexDatapointRestrictionFormProperties>({
			namespace: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** The response message for MatchService.FindNeighbors. */
	export interface GoogleCloudAiplatformV1beta1FindNeighborsResponse {

		/** The nearest neighbors of the query datapoints. */
		nearestNeighbors?: Array<GoogleCloudAiplatformV1beta1FindNeighborsResponseNearestNeighbors>;
	}

	/** The response message for MatchService.FindNeighbors. */
	export interface GoogleCloudAiplatformV1beta1FindNeighborsResponseFormProperties {
	}
	export function CreateGoogleCloudAiplatformV1beta1FindNeighborsResponseFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1FindNeighborsResponseFormProperties>({
		});

	}


	/** Nearest neighbors for one query. */
	export interface GoogleCloudAiplatformV1beta1FindNeighborsResponseNearestNeighbors {

		/** The ID of the query datapoint. */
		id?: string | null;

		/** All its neighbors. */
		neighbors?: Array<GoogleCloudAiplatformV1beta1FindNeighborsResponseNeighbor>;
	}

	/** Nearest neighbors for one query. */
	export interface GoogleCloudAiplatformV1beta1FindNeighborsResponseNearestNeighborsFormProperties {

		/** The ID of the query datapoint. */
		id: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1FindNeighborsResponseNearestNeighborsFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1FindNeighborsResponseNearestNeighborsFormProperties>({
			id: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** A neighbor of the query vector. */
	export interface GoogleCloudAiplatformV1beta1FindNeighborsResponseNeighbor {

		/** A datapoint of Index. */
		datapoint?: GoogleCloudAiplatformV1beta1IndexDatapoint;

		/** The distance between the neighbor and the query vector. */
		distance?: number | null;
	}

	/** A neighbor of the query vector. */
	export interface GoogleCloudAiplatformV1beta1FindNeighborsResponseNeighborFormProperties {

		/** The distance between the neighbor and the query vector. */
		distance: FormControl<number | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1FindNeighborsResponseNeighborFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1FindNeighborsResponseNeighborFormProperties>({
			distance: new FormControl<number | null | undefined>(undefined),
		});

	}


	/** Assigns the input data to training, validation, and test sets as per the given fractions. Any of `training_fraction`, `validation_fraction` and `test_fraction` may optionally be provided, they must sum to up to 1. If the provided ones sum to less than 1, the remainder is assigned to sets as decided by Vertex AI. If none of the fractions are set, by default roughly 80% of data is used for training, 10% for validation, and 10% for test. */
	export interface GoogleCloudAiplatformV1beta1FractionSplit {

		/** The fraction of the input data that is to be used to evaluate the Model. */
		testFraction?: number | null;

		/** The fraction of the input data that is to be used to train the Model. */
		trainingFraction?: number | null;

		/** The fraction of the input data that is to be used to validate the Model. */
		validationFraction?: number | null;
	}

	/** Assigns the input data to training, validation, and test sets as per the given fractions. Any of `training_fraction`, `validation_fraction` and `test_fraction` may optionally be provided, they must sum to up to 1. If the provided ones sum to less than 1, the remainder is assigned to sets as decided by Vertex AI. If none of the fractions are set, by default roughly 80% of data is used for training, 10% for validation, and 10% for test. */
	export interface GoogleCloudAiplatformV1beta1FractionSplitFormProperties {

		/** The fraction of the input data that is to be used to evaluate the Model. */
		testFraction: FormControl<number | null | undefined>,

		/** The fraction of the input data that is to be used to train the Model. */
		trainingFraction: FormControl<number | null | undefined>,

		/** The fraction of the input data that is to be used to validate the Model. */
		validationFraction: FormControl<number | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1FractionSplitFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1FractionSplitFormProperties>({
			testFraction: new FormControl<number | null | undefined>(undefined),
			trainingFraction: new FormControl<number | null | undefined>(undefined),
			validationFraction: new FormControl<number | null | undefined>(undefined),
		});

	}


	/** Structured representation of a function declaration as defined by the [OpenAPI 3.0 specification](https://spec.openapis.org/oas/v3.0.3). Included in this declaration are the function name and parameters. This FunctionDeclaration is a representation of a block of code that can be used as a `Tool` by the model and executed by the client. */
	export interface GoogleCloudAiplatformV1beta1FunctionDeclaration {

		/** Optional. Description and purpose of the function. Model uses it to decide how and whether to call the function. */
		description?: string | null;

		/** Required. The name of the function to call. Must start with a letter or an underscore. Must be a-z, A-Z, 0-9, or contain underscores and dashes, with a maximum length of 64. */
		name?: string | null;

		/** Schema is used to define the format of input/output data. Represents a select subset of an [OpenAPI 3.0 schema object](https://spec.openapis.org/oas/v3.0.3#schema). More fields may be added in the future as needed. */
		parameters?: GoogleCloudAiplatformV1beta1Schema;
	}

	/** Structured representation of a function declaration as defined by the [OpenAPI 3.0 specification](https://spec.openapis.org/oas/v3.0.3). Included in this declaration are the function name and parameters. This FunctionDeclaration is a representation of a block of code that can be used as a `Tool` by the model and executed by the client. */
	export interface GoogleCloudAiplatformV1beta1FunctionDeclarationFormProperties {

		/** Optional. Description and purpose of the function. Model uses it to decide how and whether to call the function. */
		description: FormControl<string | null | undefined>,

		/** Required. The name of the function to call. Must start with a letter or an underscore. Must be a-z, A-Z, 0-9, or contain underscores and dashes, with a maximum length of 64. */
		name: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1FunctionDeclarationFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1FunctionDeclarationFormProperties>({
			description: new FormControl<string | null | undefined>(undefined),
			name: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Schema is used to define the format of input/output data. Represents a select subset of an [OpenAPI 3.0 schema object](https://spec.openapis.org/oas/v3.0.3#schema). More fields may be added in the future as needed. */
	export interface GoogleCloudAiplatformV1beta1Schema {

		/** Optional. The description of the data. */
		description?: string | null;

		/** Optional. Possible values of the element of Type.STRING with enum format. For example we can define an Enum Direction as : {type:STRING, format:enum, enum:["EAST", NORTH", "SOUTH", "WEST"]} */
		enum?: Array<string>;

		/** Optional. Example of the object. Will only populated when the object is the root. */
		example?: any;

		/** Optional. The format of the data. Supported formats: for NUMBER type: float, double for INTEGER type: int32, int64 */
		format?: string | null;

		/** Schema is used to define the format of input/output data. Represents a select subset of an [OpenAPI 3.0 schema object](https://spec.openapis.org/oas/v3.0.3#schema). More fields may be added in the future as needed. */
		items?: GoogleCloudAiplatformV1beta1Schema;

		/** Optional. Indicates if the value may be null. */
		nullable?: boolean | null;

		/** Optional. Properties of Type.OBJECT. */
		properties?: {[id: string]: GoogleCloudAiplatformV1beta1Schema };

		/** Optional. Required properties of Type.OBJECT. */
		required?: Array<string>;

		/** Optional. The type of the data. */
		type?: GoogleCloudAiplatformV1beta1SchemaType | null;
	}

	/** Schema is used to define the format of input/output data. Represents a select subset of an [OpenAPI 3.0 schema object](https://spec.openapis.org/oas/v3.0.3#schema). More fields may be added in the future as needed. */
	export interface GoogleCloudAiplatformV1beta1SchemaFormProperties {

		/** Optional. The description of the data. */
		description: FormControl<string | null | undefined>,

		/** Optional. Example of the object. Will only populated when the object is the root. */
		example: FormControl<any | null | undefined>,

		/** Optional. The format of the data. Supported formats: for NUMBER type: float, double for INTEGER type: int32, int64 */
		format: FormControl<string | null | undefined>,

		/** Optional. Indicates if the value may be null. */
		nullable: FormControl<boolean | null | undefined>,

		/** Optional. Properties of Type.OBJECT. */
		properties: FormControl<{[id: string]: GoogleCloudAiplatformV1beta1Schema } | null | undefined>,

		/** Optional. The type of the data. */
		type: FormControl<GoogleCloudAiplatformV1beta1SchemaType | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1SchemaFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1SchemaFormProperties>({
			description: new FormControl<string | null | undefined>(undefined),
			example: new FormControl<any | null | undefined>(undefined),
			format: new FormControl<string | null | undefined>(undefined),
			nullable: new FormControl<boolean | null | undefined>(undefined),
			properties: new FormControl<{[id: string]: GoogleCloudAiplatformV1beta1Schema } | null | undefined>(undefined),
			type: new FormControl<GoogleCloudAiplatformV1beta1SchemaType | null | undefined>(undefined),
		});

	}

	export enum GoogleCloudAiplatformV1beta1SchemaType { TYPE_UNSPECIFIED = 0, STRING = 1, NUMBER = 2, INTEGER = 3, BOOLEAN = 4, ARRAY = 5, OBJECT = 6 }


	/** Request message for NotebookInternalService.GenerateAccessToken. */
	export interface GoogleCloudAiplatformV1beta1GenerateAccessTokenRequest {

		/** Required. The VM identity token (a JWT) for authenticating the VM. https://cloud.google.com/compute/docs/instances/verifying-instance-identity */
		vmToken?: string | null;
	}

	/** Request message for NotebookInternalService.GenerateAccessToken. */
	export interface GoogleCloudAiplatformV1beta1GenerateAccessTokenRequestFormProperties {

		/** Required. The VM identity token (a JWT) for authenticating the VM. https://cloud.google.com/compute/docs/instances/verifying-instance-identity */
		vmToken: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1GenerateAccessTokenRequestFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1GenerateAccessTokenRequestFormProperties>({
			vmToken: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Response message for NotebookInternalService.GenerateToken. */
	export interface GoogleCloudAiplatformV1beta1GenerateAccessTokenResponse {

		/** Short-lived access token string which may be used to access Google APIs. */
		accessToken?: string | null;

		/** The time in seconds when the access token expires. Typically that's 3600. */
		expiresIn?: number | null;

		/** Space-separated list of scopes contained in the returned token. https://cloud.google.com/docs/authentication/token-types#access-contents */
		scope?: string | null;

		/** Type of the returned access token (e.g. "Bearer"). It specifies how the token must be used. Bearer tokens may be used by any entity without proof of identity. */
		tokenType?: string | null;
	}

	/** Response message for NotebookInternalService.GenerateToken. */
	export interface GoogleCloudAiplatformV1beta1GenerateAccessTokenResponseFormProperties {

		/** Short-lived access token string which may be used to access Google APIs. */
		accessToken: FormControl<string | null | undefined>,

		/** The time in seconds when the access token expires. Typically that's 3600. */
		expiresIn: FormControl<number | null | undefined>,

		/** Space-separated list of scopes contained in the returned token. https://cloud.google.com/docs/authentication/token-types#access-contents */
		scope: FormControl<string | null | undefined>,

		/** Type of the returned access token (e.g. "Bearer"). It specifies how the token must be used. Bearer tokens may be used by any entity without proof of identity. */
		tokenType: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1GenerateAccessTokenResponseFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1GenerateAccessTokenResponseFormProperties>({
			accessToken: new FormControl<string | null | undefined>(undefined),
			expiresIn: new FormControl<number | null | undefined>(undefined),
			scope: new FormControl<string | null | undefined>(undefined),
			tokenType: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Request message for [PredictionService.GenerateContent]. */
	export interface GoogleCloudAiplatformV1beta1GenerateContentRequest {

		/** Required. The content of the current conversation with the model. For single-turn queries, this is a single instance. For multi-turn queries, this is a repeated field that contains conversation history + latest request. */
		contents?: Array<GoogleCloudAiplatformV1beta1Content>;

		/** Generation config. */
		generationConfig?: GoogleCloudAiplatformV1beta1GenerationConfig;

		/** Optional. Per request settings for blocking unsafe content. Enforced on GenerateContentResponse.candidates. */
		safetySettings?: Array<GoogleCloudAiplatformV1beta1SafetySetting>;

		/** Optional. A list of `Tools` the model may use to generate the next response. A `Tool` is a piece of code that enables the system to interact with external systems to perform an action, or set of actions, outside of knowledge and scope of the model. The only supported tool is currently `Function` */
		tools?: Array<GoogleCloudAiplatformV1beta1Tool>;
	}

	/** Request message for [PredictionService.GenerateContent]. */
	export interface GoogleCloudAiplatformV1beta1GenerateContentRequestFormProperties {
	}
	export function CreateGoogleCloudAiplatformV1beta1GenerateContentRequestFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1GenerateContentRequestFormProperties>({
		});

	}


	/** Generation config. */
	export interface GoogleCloudAiplatformV1beta1GenerationConfig {

		/** Optional. Number of candidates to generate. */
		candidateCount?: number | null;

		/** Optional. The maximum number of output tokens to generate per message. */
		maxOutputTokens?: number | null;

		/** Optional. Stop sequences. */
		stopSequences?: Array<string>;

		/** Optional. Controls the randomness of predictions. */
		temperature?: number | null;

		/** Optional. If specified, top-k sampling will be used. */
		topK?: number | null;

		/** Optional. If specified, nucleus sampling will be used. */
		topP?: number | null;
	}

	/** Generation config. */
	export interface GoogleCloudAiplatformV1beta1GenerationConfigFormProperties {

		/** Optional. Number of candidates to generate. */
		candidateCount: FormControl<number | null | undefined>,

		/** Optional. The maximum number of output tokens to generate per message. */
		maxOutputTokens: FormControl<number | null | undefined>,

		/** Optional. Controls the randomness of predictions. */
		temperature: FormControl<number | null | undefined>,

		/** Optional. If specified, top-k sampling will be used. */
		topK: FormControl<number | null | undefined>,

		/** Optional. If specified, nucleus sampling will be used. */
		topP: FormControl<number | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1GenerationConfigFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1GenerationConfigFormProperties>({
			candidateCount: new FormControl<number | null | undefined>(undefined),
			maxOutputTokens: new FormControl<number | null | undefined>(undefined),
			temperature: new FormControl<number | null | undefined>(undefined),
			topK: new FormControl<number | null | undefined>(undefined),
			topP: new FormControl<number | null | undefined>(undefined),
		});

	}


	/** Safety settings. */
	export interface GoogleCloudAiplatformV1beta1SafetySetting {

		/** Required. Harm category. */
		category?: CloudAiNlLlmProtoServiceSafetyRatingCategory | null;

		/** Required. The harm block threshold. */
		threshold?: GoogleCloudAiplatformV1beta1SafetySettingThreshold | null;
	}

	/** Safety settings. */
	export interface GoogleCloudAiplatformV1beta1SafetySettingFormProperties {

		/** Required. Harm category. */
		category: FormControl<CloudAiNlLlmProtoServiceSafetyRatingCategory | null | undefined>,

		/** Required. The harm block threshold. */
		threshold: FormControl<GoogleCloudAiplatformV1beta1SafetySettingThreshold | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1SafetySettingFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1SafetySettingFormProperties>({
			category: new FormControl<CloudAiNlLlmProtoServiceSafetyRatingCategory | null | undefined>(undefined),
			threshold: new FormControl<GoogleCloudAiplatformV1beta1SafetySettingThreshold | null | undefined>(undefined),
		});

	}

	export enum GoogleCloudAiplatformV1beta1SafetySettingThreshold { HARM_BLOCK_THRESHOLD_UNSPECIFIED = 0, BLOCK_LOW_AND_ABOVE = 1, BLOCK_MEDIUM_AND_ABOVE = 2, BLOCK_ONLY_HIGH = 3, BLOCK_NONE = 4 }


	/** Tool details that the model may use to generate response. A `Tool` is a piece of code that enables the system to interact with external systems to perform an action, or set of actions, outside of knowledge and scope of the model. */
	export interface GoogleCloudAiplatformV1beta1Tool {

		/** Optional. One or more function declarations to be passed to the model along with the current user query. Model may decide to call a subset of these functions by populating FunctionCall in the response. User should provide a FunctionResponse for each function call in the next turn. Based on the function responses, Model will generate the final response back to the user. Maximum 64 function declarations can be provided. */
		functionDeclarations?: Array<GoogleCloudAiplatformV1beta1FunctionDeclaration>;
	}

	/** Tool details that the model may use to generate response. A `Tool` is a piece of code that enables the system to interact with external systems to perform an action, or set of actions, outside of knowledge and scope of the model. */
	export interface GoogleCloudAiplatformV1beta1ToolFormProperties {
	}
	export function CreateGoogleCloudAiplatformV1beta1ToolFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1ToolFormProperties>({
		});

	}


	/** Response message for [PredictionService.GenerateContent]. */
	export interface GoogleCloudAiplatformV1beta1GenerateContentResponse {

		/** Output only. Generated candidates. */
		candidates?: Array<GoogleCloudAiplatformV1beta1Candidate>;

		/** Content filter results for a prompt sent in the request. */
		promptFeedback?: GoogleCloudAiplatformV1beta1GenerateContentResponsePromptFeedback;

		/** Usage metadata about response(s). */
		usageMetadata?: GoogleCloudAiplatformV1beta1GenerateContentResponseUsageMetadata;
	}

	/** Response message for [PredictionService.GenerateContent]. */
	export interface GoogleCloudAiplatformV1beta1GenerateContentResponseFormProperties {
	}
	export function CreateGoogleCloudAiplatformV1beta1GenerateContentResponseFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1GenerateContentResponseFormProperties>({
		});

	}


	/** Content filter results for a prompt sent in the request. */
	export interface GoogleCloudAiplatformV1beta1GenerateContentResponsePromptFeedback {

		/** Output only. Blocked reason. */
		blockReason?: CloudAiNlLlmProtoServicePromptFeedbackBlockReason | null;

		/** Output only. A readable block reason message. */
		blockReasonMessage?: string | null;

		/** Output only. Safety ratings. */
		safetyRatings?: Array<GoogleCloudAiplatformV1beta1SafetyRating>;
	}

	/** Content filter results for a prompt sent in the request. */
	export interface GoogleCloudAiplatformV1beta1GenerateContentResponsePromptFeedbackFormProperties {

		/** Output only. Blocked reason. */
		blockReason: FormControl<CloudAiNlLlmProtoServicePromptFeedbackBlockReason | null | undefined>,

		/** Output only. A readable block reason message. */
		blockReasonMessage: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1GenerateContentResponsePromptFeedbackFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1GenerateContentResponsePromptFeedbackFormProperties>({
			blockReason: new FormControl<CloudAiNlLlmProtoServicePromptFeedbackBlockReason | null | undefined>(undefined),
			blockReasonMessage: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Usage metadata about response(s). */
	export interface GoogleCloudAiplatformV1beta1GenerateContentResponseUsageMetadata {

		/** Number of tokens in the response(s). */
		candidatesTokenCount?: number | null;

		/** Number of tokens in the request. */
		promptTokenCount?: number | null;
		totalTokenCount?: number | null;
	}

	/** Usage metadata about response(s). */
	export interface GoogleCloudAiplatformV1beta1GenerateContentResponseUsageMetadataFormProperties {

		/** Number of tokens in the response(s). */
		candidatesTokenCount: FormControl<number | null | undefined>,

		/** Number of tokens in the request. */
		promptTokenCount: FormControl<number | null | undefined>,
		totalTokenCount: FormControl<number | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1GenerateContentResponseUsageMetadataFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1GenerateContentResponseUsageMetadataFormProperties>({
			candidatesTokenCount: new FormControl<number | null | undefined>(undefined),
			promptTokenCount: new FormControl<number | null | undefined>(undefined),
			totalTokenCount: new FormControl<number | null | undefined>(undefined),
		});

	}


	/** Represents a HyperparameterTuningJob. A HyperparameterTuningJob has a Study specification and multiple CustomJobs with identical CustomJob specification. */
	export interface GoogleCloudAiplatformV1beta1HyperparameterTuningJob {

		/** Output only. Time when the HyperparameterTuningJob was created. */
		createTime?: string | null;

		/** Required. The display name of the HyperparameterTuningJob. The name can be up to 128 characters long and can consist of any UTF-8 characters. */
		displayName?: string | null;

		/** Represents a customer-managed encryption key spec that can be applied to a top-level resource. */
		encryptionSpec?: GoogleCloudAiplatformV1beta1EncryptionSpec;

		/** Output only. Time when the HyperparameterTuningJob entered any of the following states: `JOB_STATE_SUCCEEDED`, `JOB_STATE_FAILED`, `JOB_STATE_CANCELLED`. */
		endTime?: string | null;

		/** The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors). */
		error?: GoogleRpcStatus;

		/** The labels with user-defined metadata to organize HyperparameterTuningJobs. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. See https://goo.gl/xmQnxf for more information and examples of labels. */
		labels?: {[id: string]: string };

		/** The number of failed Trials that need to be seen before failing the HyperparameterTuningJob. If set to 0, Vertex AI decides how many Trials must fail before the whole job fails. */
		maxFailedTrialCount?: number | null;

		/** Required. The desired total number of Trials. */
		maxTrialCount?: number | null;

		/** Output only. Resource name of the HyperparameterTuningJob. */
		name?: string | null;

		/** Required. The desired number of Trials to run in parallel. */
		parallelTrialCount?: number | null;

		/** Output only. Time when the HyperparameterTuningJob for the first time entered the `JOB_STATE_RUNNING` state. */
		startTime?: string | null;

		/** Output only. The detailed state of the job. */
		state?: GoogleCloudAiplatformV1beta1BatchPredictionJobState | null;

		/** Represents specification of a Study. */
		studySpec?: GoogleCloudAiplatformV1beta1StudySpec;

		/** Represents the spec of a CustomJob. */
		trialJobSpec?: GoogleCloudAiplatformV1beta1CustomJobSpec;

		/** Output only. Trials of the HyperparameterTuningJob. */
		trials?: Array<GoogleCloudAiplatformV1beta1Trial>;

		/** Output only. Time when the HyperparameterTuningJob was most recently updated. */
		updateTime?: string | null;
	}

	/** Represents a HyperparameterTuningJob. A HyperparameterTuningJob has a Study specification and multiple CustomJobs with identical CustomJob specification. */
	export interface GoogleCloudAiplatformV1beta1HyperparameterTuningJobFormProperties {

		/** Output only. Time when the HyperparameterTuningJob was created. */
		createTime: FormControl<string | null | undefined>,

		/** Required. The display name of the HyperparameterTuningJob. The name can be up to 128 characters long and can consist of any UTF-8 characters. */
		displayName: FormControl<string | null | undefined>,

		/** Output only. Time when the HyperparameterTuningJob entered any of the following states: `JOB_STATE_SUCCEEDED`, `JOB_STATE_FAILED`, `JOB_STATE_CANCELLED`. */
		endTime: FormControl<string | null | undefined>,

		/** The labels with user-defined metadata to organize HyperparameterTuningJobs. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. See https://goo.gl/xmQnxf for more information and examples of labels. */
		labels: FormControl<{[id: string]: string } | null | undefined>,

		/** The number of failed Trials that need to be seen before failing the HyperparameterTuningJob. If set to 0, Vertex AI decides how many Trials must fail before the whole job fails. */
		maxFailedTrialCount: FormControl<number | null | undefined>,

		/** Required. The desired total number of Trials. */
		maxTrialCount: FormControl<number | null | undefined>,

		/** Output only. Resource name of the HyperparameterTuningJob. */
		name: FormControl<string | null | undefined>,

		/** Required. The desired number of Trials to run in parallel. */
		parallelTrialCount: FormControl<number | null | undefined>,

		/** Output only. Time when the HyperparameterTuningJob for the first time entered the `JOB_STATE_RUNNING` state. */
		startTime: FormControl<string | null | undefined>,

		/** Output only. The detailed state of the job. */
		state: FormControl<GoogleCloudAiplatformV1beta1BatchPredictionJobState | null | undefined>,

		/** Output only. Time when the HyperparameterTuningJob was most recently updated. */
		updateTime: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1HyperparameterTuningJobFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1HyperparameterTuningJobFormProperties>({
			createTime: new FormControl<string | null | undefined>(undefined),
			displayName: new FormControl<string | null | undefined>(undefined),
			endTime: new FormControl<string | null | undefined>(undefined),
			labels: new FormControl<{[id: string]: string } | null | undefined>(undefined),
			maxFailedTrialCount: new FormControl<number | null | undefined>(undefined),
			maxTrialCount: new FormControl<number | null | undefined>(undefined),
			name: new FormControl<string | null | undefined>(undefined),
			parallelTrialCount: new FormControl<number | null | undefined>(undefined),
			startTime: new FormControl<string | null | undefined>(undefined),
			state: new FormControl<GoogleCloudAiplatformV1beta1BatchPredictionJobState | null | undefined>(undefined),
			updateTime: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Represents specification of a Study. */
	export interface GoogleCloudAiplatformV1beta1StudySpec {

		/** The search algorithm specified for the Study. */
		algorithm?: GoogleCloudAiplatformV1beta1StudySpecAlgorithm | null;

		/** Configuration for ConvexAutomatedStoppingSpec. When there are enough completed trials (configured by min_measurement_count), for pending trials with enough measurements and steps, the policy first computes an overestimate of the objective value at max_num_steps according to the slope of the incomplete objective value curve. No prediction can be made if the curve is completely flat. If the overestimation is worse than the best objective value of the completed trials, this pending trial will be early-stopped, but a last measurement will be added to the pending trial with max_num_steps and predicted objective value from the autoregression model. */
		convexAutomatedStoppingSpec?: GoogleCloudAiplatformV1beta1StudySpecConvexAutomatedStoppingSpec;

		/** Configuration for ConvexStopPolicy. */
		convexStopConfig?: GoogleCloudAiplatformV1beta1StudySpecConvexStopConfig;

		/** The decay curve automated stopping rule builds a Gaussian Process Regressor to predict the final objective value of a Trial based on the already completed Trials and the intermediate measurements of the current Trial. Early stopping is requested for the current Trial if there is very low probability to exceed the optimal value found so far. */
		decayCurveStoppingSpec?: GoogleCloudAiplatformV1beta1StudySpecDecayCurveAutomatedStoppingSpec;

		/** Describe which measurement selection type will be used */
		measurementSelectionType?: GoogleCloudAiplatformV1beta1StudySpecMeasurementSelectionType | null;

		/** The median automated stopping rule stops a pending Trial if the Trial's best objective_value is strictly below the median 'performance' of all completed Trials reported up to the Trial's last measurement. Currently, 'performance' refers to the running average of the objective values reported by the Trial in each measurement. */
		medianAutomatedStoppingSpec?: GoogleCloudAiplatformV1beta1StudySpecMedianAutomatedStoppingSpec;

		/** Required. Metric specs for the Study. */
		metrics?: Array<GoogleCloudAiplatformV1beta1StudySpecMetricSpec>;

		/** The observation noise level of the study. Currently only supported by the Vertex AI Vizier service. Not supported by HyperparameterTuningJob or TrainingPipeline. */
		observationNoise?: GoogleCloudAiplatformV1beta1StudySpecObservationNoise | null;

		/** Required. The set of parameters to tune. */
		parameters?: Array<GoogleCloudAiplatformV1beta1StudySpecParameterSpec>;

		/** The configuration (stopping conditions) for automated stopping of a Study. Conditions include trial budgets, time budgets, and convergence detection. */
		studyStoppingConfig?: GoogleCloudAiplatformV1beta1StudySpecStudyStoppingConfig;

		/** This contains flag for manually disabling transfer learning for a study. The names of prior studies being used for transfer learning (if any) are also listed here. */
		transferLearningConfig?: GoogleCloudAiplatformV1beta1StudySpecTransferLearningConfig;
	}

	/** Represents specification of a Study. */
	export interface GoogleCloudAiplatformV1beta1StudySpecFormProperties {

		/** The search algorithm specified for the Study. */
		algorithm: FormControl<GoogleCloudAiplatformV1beta1StudySpecAlgorithm | null | undefined>,

		/** Describe which measurement selection type will be used */
		measurementSelectionType: FormControl<GoogleCloudAiplatformV1beta1StudySpecMeasurementSelectionType | null | undefined>,

		/** The observation noise level of the study. Currently only supported by the Vertex AI Vizier service. Not supported by HyperparameterTuningJob or TrainingPipeline. */
		observationNoise: FormControl<GoogleCloudAiplatformV1beta1StudySpecObservationNoise | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1StudySpecFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1StudySpecFormProperties>({
			algorithm: new FormControl<GoogleCloudAiplatformV1beta1StudySpecAlgorithm | null | undefined>(undefined),
			measurementSelectionType: new FormControl<GoogleCloudAiplatformV1beta1StudySpecMeasurementSelectionType | null | undefined>(undefined),
			observationNoise: new FormControl<GoogleCloudAiplatformV1beta1StudySpecObservationNoise | null | undefined>(undefined),
		});

	}

	export enum GoogleCloudAiplatformV1beta1StudySpecAlgorithm { ALGORITHM_UNSPECIFIED = 0, GRID_SEARCH = 1, RANDOM_SEARCH = 2 }


	/** Configuration for ConvexAutomatedStoppingSpec. When there are enough completed trials (configured by min_measurement_count), for pending trials with enough measurements and steps, the policy first computes an overestimate of the objective value at max_num_steps according to the slope of the incomplete objective value curve. No prediction can be made if the curve is completely flat. If the overestimation is worse than the best objective value of the completed trials, this pending trial will be early-stopped, but a last measurement will be added to the pending trial with max_num_steps and predicted objective value from the autoregression model. */
	export interface GoogleCloudAiplatformV1beta1StudySpecConvexAutomatedStoppingSpec {

		/** The hyper-parameter name used in the tuning job that stands for learning rate. Leave it blank if learning rate is not in a parameter in tuning. The learning_rate is used to estimate the objective value of the ongoing trial. */
		learningRateParameterName?: string | null;

		/** Steps used in predicting the final objective for early stopped trials. In general, it's set to be the same as the defined steps in training / tuning. If not defined, it will learn it from the completed trials. When use_steps is false, this field is set to the maximum elapsed seconds. */
		maxStepCount?: string | null;

		/** The minimal number of measurements in a Trial. Early-stopping checks will not trigger if less than min_measurement_count+1 completed trials or pending trials with less than min_measurement_count measurements. If not defined, the default value is 5. */
		minMeasurementCount?: string | null;

		/** Minimum number of steps for a trial to complete. Trials which do not have a measurement with step_count > min_step_count won't be considered for early stopping. It's ok to set it to 0, and a trial can be early stopped at any stage. By default, min_step_count is set to be one-tenth of the max_step_count. When use_elapsed_duration is true, this field is set to the minimum elapsed seconds. */
		minStepCount?: string | null;

		/** ConvexAutomatedStoppingSpec by default only updates the trials that needs to be early stopped using a newly trained auto-regressive model. When this flag is set to True, all stopped trials from the beginning are potentially updated in terms of their `final_measurement`. Also, note that the training logic of autoregressive models is different in this case. Enabling this option has shown better results and this may be the default option in the future. */
		updateAllStoppedTrials?: boolean | null;

		/** This bool determines whether or not the rule is applied based on elapsed_secs or steps. If use_elapsed_duration==false, the early stopping decision is made according to the predicted objective values according to the target steps. If use_elapsed_duration==true, elapsed_secs is used instead of steps. Also, in this case, the parameters max_num_steps and min_num_steps are overloaded to contain max_elapsed_seconds and min_elapsed_seconds. */
		useElapsedDuration?: boolean | null;
	}

	/** Configuration for ConvexAutomatedStoppingSpec. When there are enough completed trials (configured by min_measurement_count), for pending trials with enough measurements and steps, the policy first computes an overestimate of the objective value at max_num_steps according to the slope of the incomplete objective value curve. No prediction can be made if the curve is completely flat. If the overestimation is worse than the best objective value of the completed trials, this pending trial will be early-stopped, but a last measurement will be added to the pending trial with max_num_steps and predicted objective value from the autoregression model. */
	export interface GoogleCloudAiplatformV1beta1StudySpecConvexAutomatedStoppingSpecFormProperties {

		/** The hyper-parameter name used in the tuning job that stands for learning rate. Leave it blank if learning rate is not in a parameter in tuning. The learning_rate is used to estimate the objective value of the ongoing trial. */
		learningRateParameterName: FormControl<string | null | undefined>,

		/** Steps used in predicting the final objective for early stopped trials. In general, it's set to be the same as the defined steps in training / tuning. If not defined, it will learn it from the completed trials. When use_steps is false, this field is set to the maximum elapsed seconds. */
		maxStepCount: FormControl<string | null | undefined>,

		/** The minimal number of measurements in a Trial. Early-stopping checks will not trigger if less than min_measurement_count+1 completed trials or pending trials with less than min_measurement_count measurements. If not defined, the default value is 5. */
		minMeasurementCount: FormControl<string | null | undefined>,

		/** Minimum number of steps for a trial to complete. Trials which do not have a measurement with step_count > min_step_count won't be considered for early stopping. It's ok to set it to 0, and a trial can be early stopped at any stage. By default, min_step_count is set to be one-tenth of the max_step_count. When use_elapsed_duration is true, this field is set to the minimum elapsed seconds. */
		minStepCount: FormControl<string | null | undefined>,

		/** ConvexAutomatedStoppingSpec by default only updates the trials that needs to be early stopped using a newly trained auto-regressive model. When this flag is set to True, all stopped trials from the beginning are potentially updated in terms of their `final_measurement`. Also, note that the training logic of autoregressive models is different in this case. Enabling this option has shown better results and this may be the default option in the future. */
		updateAllStoppedTrials: FormControl<boolean | null | undefined>,

		/** This bool determines whether or not the rule is applied based on elapsed_secs or steps. If use_elapsed_duration==false, the early stopping decision is made according to the predicted objective values according to the target steps. If use_elapsed_duration==true, elapsed_secs is used instead of steps. Also, in this case, the parameters max_num_steps and min_num_steps are overloaded to contain max_elapsed_seconds and min_elapsed_seconds. */
		useElapsedDuration: FormControl<boolean | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1StudySpecConvexAutomatedStoppingSpecFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1StudySpecConvexAutomatedStoppingSpecFormProperties>({
			learningRateParameterName: new FormControl<string | null | undefined>(undefined),
			maxStepCount: new FormControl<string | null | undefined>(undefined),
			minMeasurementCount: new FormControl<string | null | undefined>(undefined),
			minStepCount: new FormControl<string | null | undefined>(undefined),
			updateAllStoppedTrials: new FormControl<boolean | null | undefined>(undefined),
			useElapsedDuration: new FormControl<boolean | null | undefined>(undefined),
		});

	}


	/** Configuration for ConvexStopPolicy. */
	export interface GoogleCloudAiplatformV1beta1StudySpecConvexStopConfig {

		/** The number of Trial measurements used in autoregressive model for value prediction. A trial won't be considered early stopping if has fewer measurement points. */
		autoregressiveOrder?: string | null;

		/** The hyper-parameter name used in the tuning job that stands for learning rate. Leave it blank if learning rate is not in a parameter in tuning. The learning_rate is used to estimate the objective value of the ongoing trial. */
		learningRateParameterName?: string | null;

		/** Steps used in predicting the final objective for early stopped trials. In general, it's set to be the same as the defined steps in training / tuning. When use_steps is false, this field is set to the maximum elapsed seconds. */
		maxNumSteps?: string | null;

		/** Minimum number of steps for a trial to complete. Trials which do not have a measurement with num_steps > min_num_steps won't be considered for early stopping. It's ok to set it to 0, and a trial can be early stopped at any stage. By default, min_num_steps is set to be one-tenth of the max_num_steps. When use_steps is false, this field is set to the minimum elapsed seconds. */
		minNumSteps?: string | null;

		/** This bool determines whether or not the rule is applied based on elapsed_secs or steps. If use_seconds==false, the early stopping decision is made according to the predicted objective values according to the target steps. If use_seconds==true, elapsed_secs is used instead of steps. Also, in this case, the parameters max_num_steps and min_num_steps are overloaded to contain max_elapsed_seconds and min_elapsed_seconds. */
		useSeconds?: boolean | null;
	}

	/** Configuration for ConvexStopPolicy. */
	export interface GoogleCloudAiplatformV1beta1StudySpecConvexStopConfigFormProperties {

		/** The number of Trial measurements used in autoregressive model for value prediction. A trial won't be considered early stopping if has fewer measurement points. */
		autoregressiveOrder: FormControl<string | null | undefined>,

		/** The hyper-parameter name used in the tuning job that stands for learning rate. Leave it blank if learning rate is not in a parameter in tuning. The learning_rate is used to estimate the objective value of the ongoing trial. */
		learningRateParameterName: FormControl<string | null | undefined>,

		/** Steps used in predicting the final objective for early stopped trials. In general, it's set to be the same as the defined steps in training / tuning. When use_steps is false, this field is set to the maximum elapsed seconds. */
		maxNumSteps: FormControl<string | null | undefined>,

		/** Minimum number of steps for a trial to complete. Trials which do not have a measurement with num_steps > min_num_steps won't be considered for early stopping. It's ok to set it to 0, and a trial can be early stopped at any stage. By default, min_num_steps is set to be one-tenth of the max_num_steps. When use_steps is false, this field is set to the minimum elapsed seconds. */
		minNumSteps: FormControl<string | null | undefined>,

		/** This bool determines whether or not the rule is applied based on elapsed_secs or steps. If use_seconds==false, the early stopping decision is made according to the predicted objective values according to the target steps. If use_seconds==true, elapsed_secs is used instead of steps. Also, in this case, the parameters max_num_steps and min_num_steps are overloaded to contain max_elapsed_seconds and min_elapsed_seconds. */
		useSeconds: FormControl<boolean | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1StudySpecConvexStopConfigFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1StudySpecConvexStopConfigFormProperties>({
			autoregressiveOrder: new FormControl<string | null | undefined>(undefined),
			learningRateParameterName: new FormControl<string | null | undefined>(undefined),
			maxNumSteps: new FormControl<string | null | undefined>(undefined),
			minNumSteps: new FormControl<string | null | undefined>(undefined),
			useSeconds: new FormControl<boolean | null | undefined>(undefined),
		});

	}


	/** The decay curve automated stopping rule builds a Gaussian Process Regressor to predict the final objective value of a Trial based on the already completed Trials and the intermediate measurements of the current Trial. Early stopping is requested for the current Trial if there is very low probability to exceed the optimal value found so far. */
	export interface GoogleCloudAiplatformV1beta1StudySpecDecayCurveAutomatedStoppingSpec {

		/** True if Measurement.elapsed_duration is used as the x-axis of each Trials Decay Curve. Otherwise, Measurement.step_count will be used as the x-axis. */
		useElapsedDuration?: boolean | null;
	}

	/** The decay curve automated stopping rule builds a Gaussian Process Regressor to predict the final objective value of a Trial based on the already completed Trials and the intermediate measurements of the current Trial. Early stopping is requested for the current Trial if there is very low probability to exceed the optimal value found so far. */
	export interface GoogleCloudAiplatformV1beta1StudySpecDecayCurveAutomatedStoppingSpecFormProperties {

		/** True if Measurement.elapsed_duration is used as the x-axis of each Trials Decay Curve. Otherwise, Measurement.step_count will be used as the x-axis. */
		useElapsedDuration: FormControl<boolean | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1StudySpecDecayCurveAutomatedStoppingSpecFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1StudySpecDecayCurveAutomatedStoppingSpecFormProperties>({
			useElapsedDuration: new FormControl<boolean | null | undefined>(undefined),
		});

	}

	export enum GoogleCloudAiplatformV1beta1StudySpecMeasurementSelectionType { MEASUREMENT_SELECTION_TYPE_UNSPECIFIED = 0, LAST_MEASUREMENT = 1, BEST_MEASUREMENT = 2 }


	/** The median automated stopping rule stops a pending Trial if the Trial's best objective_value is strictly below the median 'performance' of all completed Trials reported up to the Trial's last measurement. Currently, 'performance' refers to the running average of the objective values reported by the Trial in each measurement. */
	export interface GoogleCloudAiplatformV1beta1StudySpecMedianAutomatedStoppingSpec {

		/** True if median automated stopping rule applies on Measurement.elapsed_duration. It means that elapsed_duration field of latest measurement of current Trial is used to compute median objective value for each completed Trials. */
		useElapsedDuration?: boolean | null;
	}

	/** The median automated stopping rule stops a pending Trial if the Trial's best objective_value is strictly below the median 'performance' of all completed Trials reported up to the Trial's last measurement. Currently, 'performance' refers to the running average of the objective values reported by the Trial in each measurement. */
	export interface GoogleCloudAiplatformV1beta1StudySpecMedianAutomatedStoppingSpecFormProperties {

		/** True if median automated stopping rule applies on Measurement.elapsed_duration. It means that elapsed_duration field of latest measurement of current Trial is used to compute median objective value for each completed Trials. */
		useElapsedDuration: FormControl<boolean | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1StudySpecMedianAutomatedStoppingSpecFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1StudySpecMedianAutomatedStoppingSpecFormProperties>({
			useElapsedDuration: new FormControl<boolean | null | undefined>(undefined),
		});

	}


	/** Represents a metric to optimize. */
	export interface GoogleCloudAiplatformV1beta1StudySpecMetricSpec {

		/** Required. The optimization goal of the metric. */
		goal?: GoogleCloudAiplatformV1beta1StudySpecMetricSpecGoal | null;

		/** Required. The ID of the metric. Must not contain whitespaces and must be unique amongst all MetricSpecs. */
		metricId?: string | null;

		/** Used in safe optimization to specify threshold levels and risk tolerance. */
		safetyConfig?: GoogleCloudAiplatformV1beta1StudySpecMetricSpecSafetyMetricConfig;
	}

	/** Represents a metric to optimize. */
	export interface GoogleCloudAiplatformV1beta1StudySpecMetricSpecFormProperties {

		/** Required. The optimization goal of the metric. */
		goal: FormControl<GoogleCloudAiplatformV1beta1StudySpecMetricSpecGoal | null | undefined>,

		/** Required. The ID of the metric. Must not contain whitespaces and must be unique amongst all MetricSpecs. */
		metricId: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1StudySpecMetricSpecFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1StudySpecMetricSpecFormProperties>({
			goal: new FormControl<GoogleCloudAiplatformV1beta1StudySpecMetricSpecGoal | null | undefined>(undefined),
			metricId: new FormControl<string | null | undefined>(undefined),
		});

	}

	export enum GoogleCloudAiplatformV1beta1StudySpecMetricSpecGoal { GOAL_TYPE_UNSPECIFIED = 0, MAXIMIZE = 1, MINIMIZE = 2 }


	/** Used in safe optimization to specify threshold levels and risk tolerance. */
	export interface GoogleCloudAiplatformV1beta1StudySpecMetricSpecSafetyMetricConfig {

		/** Desired minimum fraction of safe trials (over total number of trials) that should be targeted by the algorithm at any time during the study (best effort). This should be between 0.0 and 1.0 and a value of 0.0 means that there is no minimum and an algorithm proceeds without targeting any specific fraction. A value of 1.0 means that the algorithm attempts to only Suggest safe Trials. */
		desiredMinSafeTrialsFraction?: number | null;

		/** Safety threshold (boundary value between safe and unsafe). NOTE that if you leave SafetyMetricConfig unset, a default value of 0 will be used. */
		safetyThreshold?: number | null;
	}

	/** Used in safe optimization to specify threshold levels and risk tolerance. */
	export interface GoogleCloudAiplatformV1beta1StudySpecMetricSpecSafetyMetricConfigFormProperties {

		/** Desired minimum fraction of safe trials (over total number of trials) that should be targeted by the algorithm at any time during the study (best effort). This should be between 0.0 and 1.0 and a value of 0.0 means that there is no minimum and an algorithm proceeds without targeting any specific fraction. A value of 1.0 means that the algorithm attempts to only Suggest safe Trials. */
		desiredMinSafeTrialsFraction: FormControl<number | null | undefined>,

		/** Safety threshold (boundary value between safe and unsafe). NOTE that if you leave SafetyMetricConfig unset, a default value of 0 will be used. */
		safetyThreshold: FormControl<number | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1StudySpecMetricSpecSafetyMetricConfigFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1StudySpecMetricSpecSafetyMetricConfigFormProperties>({
			desiredMinSafeTrialsFraction: new FormControl<number | null | undefined>(undefined),
			safetyThreshold: new FormControl<number | null | undefined>(undefined),
		});

	}

	export enum GoogleCloudAiplatformV1beta1StudySpecObservationNoise { OBSERVATION_NOISE_UNSPECIFIED = 0, LOW = 1, HIGH = 2 }


	/** Represents a single parameter to optimize. */
	export interface GoogleCloudAiplatformV1beta1StudySpecParameterSpec {

		/** Value specification for a parameter in `CATEGORICAL` type. */
		categoricalValueSpec?: GoogleCloudAiplatformV1beta1StudySpecParameterSpecCategoricalValueSpec;

		/** A conditional parameter node is active if the parameter's value matches the conditional node's parent_value_condition. If two items in conditional_parameter_specs have the same name, they must have disjoint parent_value_condition. */
		conditionalParameterSpecs?: Array<GoogleCloudAiplatformV1beta1StudySpecParameterSpecConditionalParameterSpec>;

		/** Value specification for a parameter in `DISCRETE` type. */
		discreteValueSpec?: GoogleCloudAiplatformV1beta1StudySpecParameterSpecDiscreteValueSpec;

		/** Value specification for a parameter in `DOUBLE` type. */
		doubleValueSpec?: GoogleCloudAiplatformV1beta1StudySpecParameterSpecDoubleValueSpec;

		/** Value specification for a parameter in `INTEGER` type. */
		integerValueSpec?: GoogleCloudAiplatformV1beta1StudySpecParameterSpecIntegerValueSpec;

		/** Required. The ID of the parameter. Must not contain whitespaces and must be unique amongst all ParameterSpecs. */
		parameterId?: string | null;

		/** How the parameter should be scaled. Leave unset for `CATEGORICAL` parameters. */
		scaleType?: GoogleCloudAiplatformV1beta1StudySpecParameterSpecScaleType | null;
	}

	/** Represents a single parameter to optimize. */
	export interface GoogleCloudAiplatformV1beta1StudySpecParameterSpecFormProperties {

		/** Required. The ID of the parameter. Must not contain whitespaces and must be unique amongst all ParameterSpecs. */
		parameterId: FormControl<string | null | undefined>,

		/** How the parameter should be scaled. Leave unset for `CATEGORICAL` parameters. */
		scaleType: FormControl<GoogleCloudAiplatformV1beta1StudySpecParameterSpecScaleType | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1StudySpecParameterSpecFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1StudySpecParameterSpecFormProperties>({
			parameterId: new FormControl<string | null | undefined>(undefined),
			scaleType: new FormControl<GoogleCloudAiplatformV1beta1StudySpecParameterSpecScaleType | null | undefined>(undefined),
		});

	}


	/** Value specification for a parameter in `CATEGORICAL` type. */
	export interface GoogleCloudAiplatformV1beta1StudySpecParameterSpecCategoricalValueSpec {

		/** A default value for a `CATEGORICAL` parameter that is assumed to be a relatively good starting point. Unset value signals that there is no offered starting point. Currently only supported by the Vertex AI Vizier service. Not supported by HyperparameterTuningJob or TrainingPipeline. */
		defaultValue?: string | null;

		/** Required. The list of possible categories. */
		values?: Array<string>;
	}

	/** Value specification for a parameter in `CATEGORICAL` type. */
	export interface GoogleCloudAiplatformV1beta1StudySpecParameterSpecCategoricalValueSpecFormProperties {

		/** A default value for a `CATEGORICAL` parameter that is assumed to be a relatively good starting point. Unset value signals that there is no offered starting point. Currently only supported by the Vertex AI Vizier service. Not supported by HyperparameterTuningJob or TrainingPipeline. */
		defaultValue: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1StudySpecParameterSpecCategoricalValueSpecFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1StudySpecParameterSpecCategoricalValueSpecFormProperties>({
			defaultValue: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Represents a parameter spec with condition from its parent parameter. */
	export interface GoogleCloudAiplatformV1beta1StudySpecParameterSpecConditionalParameterSpec {

		/** Represents a single parameter to optimize. */
		parameterSpec?: GoogleCloudAiplatformV1beta1StudySpecParameterSpec;

		/** Represents the spec to match categorical values from parent parameter. */
		parentCategoricalValues?: GoogleCloudAiplatformV1beta1StudySpecParameterSpecConditionalParameterSpecCategoricalValueCondition;

		/** Represents the spec to match discrete values from parent parameter. */
		parentDiscreteValues?: GoogleCloudAiplatformV1beta1StudySpecParameterSpecConditionalParameterSpecDiscreteValueCondition;

		/** Represents the spec to match integer values from parent parameter. */
		parentIntValues?: GoogleCloudAiplatformV1beta1StudySpecParameterSpecConditionalParameterSpecIntValueCondition;
	}

	/** Represents a parameter spec with condition from its parent parameter. */
	export interface GoogleCloudAiplatformV1beta1StudySpecParameterSpecConditionalParameterSpecFormProperties {
	}
	export function CreateGoogleCloudAiplatformV1beta1StudySpecParameterSpecConditionalParameterSpecFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1StudySpecParameterSpecConditionalParameterSpecFormProperties>({
		});

	}


	/** Represents the spec to match categorical values from parent parameter. */
	export interface GoogleCloudAiplatformV1beta1StudySpecParameterSpecConditionalParameterSpecCategoricalValueCondition {

		/** Required. Matches values of the parent parameter of 'CATEGORICAL' type. All values must exist in `categorical_value_spec` of parent parameter. */
		values?: Array<string>;
	}

	/** Represents the spec to match categorical values from parent parameter. */
	export interface GoogleCloudAiplatformV1beta1StudySpecParameterSpecConditionalParameterSpecCategoricalValueConditionFormProperties {
	}
	export function CreateGoogleCloudAiplatformV1beta1StudySpecParameterSpecConditionalParameterSpecCategoricalValueConditionFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1StudySpecParameterSpecConditionalParameterSpecCategoricalValueConditionFormProperties>({
		});

	}


	/** Represents the spec to match discrete values from parent parameter. */
	export interface GoogleCloudAiplatformV1beta1StudySpecParameterSpecConditionalParameterSpecDiscreteValueCondition {

		/** Required. Matches values of the parent parameter of 'DISCRETE' type. All values must exist in `discrete_value_spec` of parent parameter. The Epsilon of the value matching is 1e-10. */
		values?: Array<number>;
	}

	/** Represents the spec to match discrete values from parent parameter. */
	export interface GoogleCloudAiplatformV1beta1StudySpecParameterSpecConditionalParameterSpecDiscreteValueConditionFormProperties {
	}
	export function CreateGoogleCloudAiplatformV1beta1StudySpecParameterSpecConditionalParameterSpecDiscreteValueConditionFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1StudySpecParameterSpecConditionalParameterSpecDiscreteValueConditionFormProperties>({
		});

	}


	/** Represents the spec to match integer values from parent parameter. */
	export interface GoogleCloudAiplatformV1beta1StudySpecParameterSpecConditionalParameterSpecIntValueCondition {

		/** Required. Matches values of the parent parameter of 'INTEGER' type. All values must lie in `integer_value_spec` of parent parameter. */
		values?: Array<string>;
	}

	/** Represents the spec to match integer values from parent parameter. */
	export interface GoogleCloudAiplatformV1beta1StudySpecParameterSpecConditionalParameterSpecIntValueConditionFormProperties {
	}
	export function CreateGoogleCloudAiplatformV1beta1StudySpecParameterSpecConditionalParameterSpecIntValueConditionFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1StudySpecParameterSpecConditionalParameterSpecIntValueConditionFormProperties>({
		});

	}


	/** Value specification for a parameter in `DISCRETE` type. */
	export interface GoogleCloudAiplatformV1beta1StudySpecParameterSpecDiscreteValueSpec {

		/** A default value for a `DISCRETE` parameter that is assumed to be a relatively good starting point. Unset value signals that there is no offered starting point. It automatically rounds to the nearest feasible discrete point. Currently only supported by the Vertex AI Vizier service. Not supported by HyperparameterTuningJob or TrainingPipeline. */
		defaultValue?: number | null;

		/** Required. A list of possible values. The list should be in increasing order and at least 1e-10 apart. For instance, this parameter might have possible settings of 1.5, 2.5, and 4.0. This list should not contain more than 1,000 values. */
		values?: Array<number>;
	}

	/** Value specification for a parameter in `DISCRETE` type. */
	export interface GoogleCloudAiplatformV1beta1StudySpecParameterSpecDiscreteValueSpecFormProperties {

		/** A default value for a `DISCRETE` parameter that is assumed to be a relatively good starting point. Unset value signals that there is no offered starting point. It automatically rounds to the nearest feasible discrete point. Currently only supported by the Vertex AI Vizier service. Not supported by HyperparameterTuningJob or TrainingPipeline. */
		defaultValue: FormControl<number | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1StudySpecParameterSpecDiscreteValueSpecFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1StudySpecParameterSpecDiscreteValueSpecFormProperties>({
			defaultValue: new FormControl<number | null | undefined>(undefined),
		});

	}


	/** Value specification for a parameter in `DOUBLE` type. */
	export interface GoogleCloudAiplatformV1beta1StudySpecParameterSpecDoubleValueSpec {

		/** A default value for a `DOUBLE` parameter that is assumed to be a relatively good starting point. Unset value signals that there is no offered starting point. Currently only supported by the Vertex AI Vizier service. Not supported by HyperparameterTuningJob or TrainingPipeline. */
		defaultValue?: number | null;

		/** Required. Inclusive maximum value of the parameter. */
		maxValue?: number | null;

		/** Required. Inclusive minimum value of the parameter. */
		minValue?: number | null;
	}

	/** Value specification for a parameter in `DOUBLE` type. */
	export interface GoogleCloudAiplatformV1beta1StudySpecParameterSpecDoubleValueSpecFormProperties {

		/** A default value for a `DOUBLE` parameter that is assumed to be a relatively good starting point. Unset value signals that there is no offered starting point. Currently only supported by the Vertex AI Vizier service. Not supported by HyperparameterTuningJob or TrainingPipeline. */
		defaultValue: FormControl<number | null | undefined>,

		/** Required. Inclusive maximum value of the parameter. */
		maxValue: FormControl<number | null | undefined>,

		/** Required. Inclusive minimum value of the parameter. */
		minValue: FormControl<number | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1StudySpecParameterSpecDoubleValueSpecFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1StudySpecParameterSpecDoubleValueSpecFormProperties>({
			defaultValue: new FormControl<number | null | undefined>(undefined),
			maxValue: new FormControl<number | null | undefined>(undefined),
			minValue: new FormControl<number | null | undefined>(undefined),
		});

	}


	/** Value specification for a parameter in `INTEGER` type. */
	export interface GoogleCloudAiplatformV1beta1StudySpecParameterSpecIntegerValueSpec {

		/** A default value for an `INTEGER` parameter that is assumed to be a relatively good starting point. Unset value signals that there is no offered starting point. Currently only supported by the Vertex AI Vizier service. Not supported by HyperparameterTuningJob or TrainingPipeline. */
		defaultValue?: string | null;

		/** Required. Inclusive maximum value of the parameter. */
		maxValue?: string | null;

		/** Required. Inclusive minimum value of the parameter. */
		minValue?: string | null;
	}

	/** Value specification for a parameter in `INTEGER` type. */
	export interface GoogleCloudAiplatformV1beta1StudySpecParameterSpecIntegerValueSpecFormProperties {

		/** A default value for an `INTEGER` parameter that is assumed to be a relatively good starting point. Unset value signals that there is no offered starting point. Currently only supported by the Vertex AI Vizier service. Not supported by HyperparameterTuningJob or TrainingPipeline. */
		defaultValue: FormControl<string | null | undefined>,

		/** Required. Inclusive maximum value of the parameter. */
		maxValue: FormControl<string | null | undefined>,

		/** Required. Inclusive minimum value of the parameter. */
		minValue: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1StudySpecParameterSpecIntegerValueSpecFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1StudySpecParameterSpecIntegerValueSpecFormProperties>({
			defaultValue: new FormControl<string | null | undefined>(undefined),
			maxValue: new FormControl<string | null | undefined>(undefined),
			minValue: new FormControl<string | null | undefined>(undefined),
		});

	}

	export enum GoogleCloudAiplatformV1beta1StudySpecParameterSpecScaleType { SCALE_TYPE_UNSPECIFIED = 0, UNIT_LINEAR_SCALE = 1, UNIT_LOG_SCALE = 2, UNIT_REVERSE_LOG_SCALE = 3 }


	/** The configuration (stopping conditions) for automated stopping of a Study. Conditions include trial budgets, time budgets, and convergence detection. */
	export interface GoogleCloudAiplatformV1beta1StudySpecStudyStoppingConfig {

		/** If the objective value has not improved for this much time, stop the study. WARNING: Effective only for single-objective studies. */
		maxDurationNoProgress?: string | null;

		/** If there are more than this many trials, stop the study. */
		maxNumTrials?: number | null;

		/** If the objective value has not improved for this many consecutive trials, stop the study. WARNING: Effective only for single-objective studies. */
		maxNumTrialsNoProgress?: number | null;

		/** Time-based Constraint for Study */
		maximumRuntimeConstraint?: GoogleCloudAiplatformV1beta1StudyTimeConstraint;

		/** If there are fewer than this many COMPLETED trials, do not stop the study. */
		minNumTrials?: number | null;

		/** Time-based Constraint for Study */
		minimumRuntimeConstraint?: GoogleCloudAiplatformV1beta1StudyTimeConstraint;

		/** If true, a Study enters STOPPING_ASAP whenever it would normally enters STOPPING state. The bottom line is: set to true if you want to interrupt on-going evaluations of Trials as soon as the study stopping condition is met. (Please see Study.State documentation for the source of truth). */
		shouldStopAsap?: boolean | null;
	}

	/** The configuration (stopping conditions) for automated stopping of a Study. Conditions include trial budgets, time budgets, and convergence detection. */
	export interface GoogleCloudAiplatformV1beta1StudySpecStudyStoppingConfigFormProperties {

		/** If the objective value has not improved for this much time, stop the study. WARNING: Effective only for single-objective studies. */
		maxDurationNoProgress: FormControl<string | null | undefined>,

		/** If there are more than this many trials, stop the study. */
		maxNumTrials: FormControl<number | null | undefined>,

		/** If the objective value has not improved for this many consecutive trials, stop the study. WARNING: Effective only for single-objective studies. */
		maxNumTrialsNoProgress: FormControl<number | null | undefined>,

		/** If there are fewer than this many COMPLETED trials, do not stop the study. */
		minNumTrials: FormControl<number | null | undefined>,

		/** If true, a Study enters STOPPING_ASAP whenever it would normally enters STOPPING state. The bottom line is: set to true if you want to interrupt on-going evaluations of Trials as soon as the study stopping condition is met. (Please see Study.State documentation for the source of truth). */
		shouldStopAsap: FormControl<boolean | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1StudySpecStudyStoppingConfigFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1StudySpecStudyStoppingConfigFormProperties>({
			maxDurationNoProgress: new FormControl<string | null | undefined>(undefined),
			maxNumTrials: new FormControl<number | null | undefined>(undefined),
			maxNumTrialsNoProgress: new FormControl<number | null | undefined>(undefined),
			minNumTrials: new FormControl<number | null | undefined>(undefined),
			shouldStopAsap: new FormControl<boolean | null | undefined>(undefined),
		});

	}


	/** Time-based Constraint for Study */
	export interface GoogleCloudAiplatformV1beta1StudyTimeConstraint {

		/** Compares the wallclock time to this time. Must use UTC timezone. */
		endTime?: string | null;

		/** Counts the wallclock time passed since the creation of this Study. */
		maxDuration?: string | null;
	}

	/** Time-based Constraint for Study */
	export interface GoogleCloudAiplatformV1beta1StudyTimeConstraintFormProperties {

		/** Compares the wallclock time to this time. Must use UTC timezone. */
		endTime: FormControl<string | null | undefined>,

		/** Counts the wallclock time passed since the creation of this Study. */
		maxDuration: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1StudyTimeConstraintFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1StudyTimeConstraintFormProperties>({
			endTime: new FormControl<string | null | undefined>(undefined),
			maxDuration: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** This contains flag for manually disabling transfer learning for a study. The names of prior studies being used for transfer learning (if any) are also listed here. */
	export interface GoogleCloudAiplatformV1beta1StudySpecTransferLearningConfig {

		/** Flag to to manually prevent vizier from using transfer learning on a new study. Otherwise, vizier will automatically determine whether or not to use transfer learning. */
		disableTransferLearning?: boolean | null;

		/** Output only. Names of previously completed studies */
		priorStudyNames?: Array<string>;
	}

	/** This contains flag for manually disabling transfer learning for a study. The names of prior studies being used for transfer learning (if any) are also listed here. */
	export interface GoogleCloudAiplatformV1beta1StudySpecTransferLearningConfigFormProperties {

		/** Flag to to manually prevent vizier from using transfer learning on a new study. Otherwise, vizier will automatically determine whether or not to use transfer learning. */
		disableTransferLearning: FormControl<boolean | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1StudySpecTransferLearningConfigFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1StudySpecTransferLearningConfigFormProperties>({
			disableTransferLearning: new FormControl<boolean | null | undefined>(undefined),
		});

	}


	/** A message representing a Trial. A Trial contains a unique set of Parameters that has been or will be evaluated, along with the objective metrics got by running the Trial. */
	export interface GoogleCloudAiplatformV1beta1Trial {

		/** Output only. The identifier of the client that originally requested this Trial. Each client is identified by a unique client_id. When a client asks for a suggestion, Vertex AI Vizier will assign it a Trial. The client should evaluate the Trial, complete it, and report back to Vertex AI Vizier. If suggestion is asked again by same client_id before the Trial is completed, the same Trial will be returned. Multiple clients with different client_ids can ask for suggestions simultaneously, each of them will get their own Trial. */
		clientId?: string | null;

		/** Output only. The CustomJob name linked to the Trial. It's set for a HyperparameterTuningJob's Trial. */
		customJob?: string | null;

		/** Output only. Time when the Trial's status changed to `SUCCEEDED` or `INFEASIBLE`. */
		endTime?: string | null;

		/** A message representing a Measurement of a Trial. A Measurement contains the Metrics got by executing a Trial using suggested hyperparameter values. */
		finalMeasurement?: GoogleCloudAiplatformV1beta1Measurement;

		/** Output only. The identifier of the Trial assigned by the service. */
		id?: string | null;

		/** Output only. A human readable string describing why the Trial is infeasible. This is set only if Trial state is `INFEASIBLE`. */
		infeasibleReason?: string | null;

		/** Output only. A list of measurements that are strictly lexicographically ordered by their induced tuples (steps, elapsed_duration). These are used for early stopping computations. */
		measurements?: Array<GoogleCloudAiplatformV1beta1Measurement>;

		/** Output only. Resource name of the Trial assigned by the service. */
		name?: string | null;

		/** Output only. The parameters of the Trial. */
		parameters?: Array<GoogleCloudAiplatformV1beta1TrialParameter>;

		/** Output only. Time when the Trial was started. */
		startTime?: string | null;

		/** Output only. The detailed state of the Trial. */
		state?: GoogleCloudAiplatformV1beta1TrialState | null;

		/** Output only. URIs for accessing [interactive shells](https://cloud.google.com/vertex-ai/docs/training/monitor-debug-interactive-shell) (one URI for each training node). Only available if this trial is part of a HyperparameterTuningJob and the job's trial_job_spec.enable_web_access field is `true`. The keys are names of each node used for the trial; for example, `workerpool0-0` for the primary node, `workerpool1-0` for the first node in the second worker pool, and `workerpool1-1` for the second node in the second worker pool. The values are the URIs for each node's interactive shell. */
		webAccessUris?: {[id: string]: string };
	}

	/** A message representing a Trial. A Trial contains a unique set of Parameters that has been or will be evaluated, along with the objective metrics got by running the Trial. */
	export interface GoogleCloudAiplatformV1beta1TrialFormProperties {

		/** Output only. The identifier of the client that originally requested this Trial. Each client is identified by a unique client_id. When a client asks for a suggestion, Vertex AI Vizier will assign it a Trial. The client should evaluate the Trial, complete it, and report back to Vertex AI Vizier. If suggestion is asked again by same client_id before the Trial is completed, the same Trial will be returned. Multiple clients with different client_ids can ask for suggestions simultaneously, each of them will get their own Trial. */
		clientId: FormControl<string | null | undefined>,

		/** Output only. The CustomJob name linked to the Trial. It's set for a HyperparameterTuningJob's Trial. */
		customJob: FormControl<string | null | undefined>,

		/** Output only. Time when the Trial's status changed to `SUCCEEDED` or `INFEASIBLE`. */
		endTime: FormControl<string | null | undefined>,

		/** Output only. The identifier of the Trial assigned by the service. */
		id: FormControl<string | null | undefined>,

		/** Output only. A human readable string describing why the Trial is infeasible. This is set only if Trial state is `INFEASIBLE`. */
		infeasibleReason: FormControl<string | null | undefined>,

		/** Output only. Resource name of the Trial assigned by the service. */
		name: FormControl<string | null | undefined>,

		/** Output only. Time when the Trial was started. */
		startTime: FormControl<string | null | undefined>,

		/** Output only. The detailed state of the Trial. */
		state: FormControl<GoogleCloudAiplatformV1beta1TrialState | null | undefined>,

		/** Output only. URIs for accessing [interactive shells](https://cloud.google.com/vertex-ai/docs/training/monitor-debug-interactive-shell) (one URI for each training node). Only available if this trial is part of a HyperparameterTuningJob and the job's trial_job_spec.enable_web_access field is `true`. The keys are names of each node used for the trial; for example, `workerpool0-0` for the primary node, `workerpool1-0` for the first node in the second worker pool, and `workerpool1-1` for the second node in the second worker pool. The values are the URIs for each node's interactive shell. */
		webAccessUris: FormControl<{[id: string]: string } | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1TrialFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1TrialFormProperties>({
			clientId: new FormControl<string | null | undefined>(undefined),
			customJob: new FormControl<string | null | undefined>(undefined),
			endTime: new FormControl<string | null | undefined>(undefined),
			id: new FormControl<string | null | undefined>(undefined),
			infeasibleReason: new FormControl<string | null | undefined>(undefined),
			name: new FormControl<string | null | undefined>(undefined),
			startTime: new FormControl<string | null | undefined>(undefined),
			state: new FormControl<GoogleCloudAiplatformV1beta1TrialState | null | undefined>(undefined),
			webAccessUris: new FormControl<{[id: string]: string } | null | undefined>(undefined),
		});

	}


	/** A message representing a parameter to be tuned. */
	export interface GoogleCloudAiplatformV1beta1TrialParameter {

		/** Output only. The ID of the parameter. The parameter should be defined in StudySpec's Parameters. */
		parameterId?: string | null;

		/** Output only. The value of the parameter. `number_value` will be set if a parameter defined in StudySpec is in type 'INTEGER', 'DOUBLE' or 'DISCRETE'. `string_value` will be set if a parameter defined in StudySpec is in type 'CATEGORICAL'. */
		value?: any;
	}

	/** A message representing a parameter to be tuned. */
	export interface GoogleCloudAiplatformV1beta1TrialParameterFormProperties {

		/** Output only. The ID of the parameter. The parameter should be defined in StudySpec's Parameters. */
		parameterId: FormControl<string | null | undefined>,

		/** Output only. The value of the parameter. `number_value` will be set if a parameter defined in StudySpec is in type 'INTEGER', 'DOUBLE' or 'DISCRETE'. `string_value` will be set if a parameter defined in StudySpec is in type 'CATEGORICAL'. */
		value: FormControl<any | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1TrialParameterFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1TrialParameterFormProperties>({
			parameterId: new FormControl<string | null | undefined>(undefined),
			value: new FormControl<any | null | undefined>(undefined),
		});

	}

	export enum GoogleCloudAiplatformV1beta1TrialState { STATE_UNSPECIFIED = 0, REQUESTED = 1, ACTIVE = 2, STOPPING = 3, SUCCEEDED = 4, INFEASIBLE = 5 }


	/** Describes the location from where we import data into a Dataset, together with the labels that will be applied to the DataItems and the Annotations. */
	export interface GoogleCloudAiplatformV1beta1ImportDataConfig {

		/** Labels that will be applied to newly imported Annotations. If two Annotations are identical, one of them will be deduped. Two Annotations are considered identical if their payload, payload_schema_uri and all of their labels are the same. These labels will be overridden by Annotation labels specified inside index file referenced by import_schema_uri, e.g. jsonl file. */
		annotationLabels?: {[id: string]: string };

		/** Labels that will be applied to newly imported DataItems. If an identical DataItem as one being imported already exists in the Dataset, then these labels will be appended to these of the already existing one, and if labels with identical key is imported before, the old label value will be overwritten. If two DataItems are identical in the same import data operation, the labels will be combined and if key collision happens in this case, one of the values will be picked randomly. Two DataItems are considered identical if their content bytes are identical (e.g. image bytes or pdf bytes). These labels will be overridden by Annotation labels specified inside index file referenced by import_schema_uri, e.g. jsonl file. */
		dataItemLabels?: {[id: string]: string };

		/** The Google Cloud Storage location for the input content. */
		gcsSource?: GoogleCloudAiplatformV1beta1GcsSource;

		/** Required. Points to a YAML file stored on Google Cloud Storage describing the import format. Validation will be done against the schema. The schema is defined as an [OpenAPI 3.0.2 Schema Object](https://github.com/OAI/OpenAPI-Specification/blob/main/versions/3.0.2.md#schemaObject). */
		importSchemaUri?: string | null;
	}

	/** Describes the location from where we import data into a Dataset, together with the labels that will be applied to the DataItems and the Annotations. */
	export interface GoogleCloudAiplatformV1beta1ImportDataConfigFormProperties {

		/** Labels that will be applied to newly imported Annotations. If two Annotations are identical, one of them will be deduped. Two Annotations are considered identical if their payload, payload_schema_uri and all of their labels are the same. These labels will be overridden by Annotation labels specified inside index file referenced by import_schema_uri, e.g. jsonl file. */
		annotationLabels: FormControl<{[id: string]: string } | null | undefined>,

		/** Labels that will be applied to newly imported DataItems. If an identical DataItem as one being imported already exists in the Dataset, then these labels will be appended to these of the already existing one, and if labels with identical key is imported before, the old label value will be overwritten. If two DataItems are identical in the same import data operation, the labels will be combined and if key collision happens in this case, one of the values will be picked randomly. Two DataItems are considered identical if their content bytes are identical (e.g. image bytes or pdf bytes). These labels will be overridden by Annotation labels specified inside index file referenced by import_schema_uri, e.g. jsonl file. */
		dataItemLabels: FormControl<{[id: string]: string } | null | undefined>,

		/** Required. Points to a YAML file stored on Google Cloud Storage describing the import format. Validation will be done against the schema. The schema is defined as an [OpenAPI 3.0.2 Schema Object](https://github.com/OAI/OpenAPI-Specification/blob/main/versions/3.0.2.md#schemaObject). */
		importSchemaUri: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1ImportDataConfigFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1ImportDataConfigFormProperties>({
			annotationLabels: new FormControl<{[id: string]: string } | null | undefined>(undefined),
			dataItemLabels: new FormControl<{[id: string]: string } | null | undefined>(undefined),
			importSchemaUri: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Runtime operation information for DatasetService.ImportData. */
	export interface GoogleCloudAiplatformV1beta1ImportDataOperationMetadata {

		/** Generic Metadata shared by all operations. */
		genericMetadata?: GoogleCloudAiplatformV1beta1GenericOperationMetadata;
	}

	/** Runtime operation information for DatasetService.ImportData. */
	export interface GoogleCloudAiplatformV1beta1ImportDataOperationMetadataFormProperties {
	}
	export function CreateGoogleCloudAiplatformV1beta1ImportDataOperationMetadataFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1ImportDataOperationMetadataFormProperties>({
		});

	}


	/** Request message for DatasetService.ImportData. */
	export interface GoogleCloudAiplatformV1beta1ImportDataRequest {

		/** Required. The desired input locations. The contents of all input locations will be imported in one batch. */
		importConfigs?: Array<GoogleCloudAiplatformV1beta1ImportDataConfig>;
	}

	/** Request message for DatasetService.ImportData. */
	export interface GoogleCloudAiplatformV1beta1ImportDataRequestFormProperties {
	}
	export function CreateGoogleCloudAiplatformV1beta1ImportDataRequestFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1ImportDataRequestFormProperties>({
		});

	}


	/** Response message for DatasetService.ImportData. */
	export interface GoogleCloudAiplatformV1beta1ImportDataResponse {
	}

	/** Response message for DatasetService.ImportData. */
	export interface GoogleCloudAiplatformV1beta1ImportDataResponseFormProperties {
	}
	export function CreateGoogleCloudAiplatformV1beta1ImportDataResponseFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1ImportDataResponseFormProperties>({
		});

	}


	/** Details of ExtensionRegistryService.ImportExtension operation. */
	export interface GoogleCloudAiplatformV1beta1ImportExtensionOperationMetadata {

		/** Generic Metadata shared by all operations. */
		genericMetadata?: GoogleCloudAiplatformV1beta1GenericOperationMetadata;
	}

	/** Details of ExtensionRegistryService.ImportExtension operation. */
	export interface GoogleCloudAiplatformV1beta1ImportExtensionOperationMetadataFormProperties {
	}
	export function CreateGoogleCloudAiplatformV1beta1ImportExtensionOperationMetadataFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1ImportExtensionOperationMetadataFormProperties>({
		});

	}


	/** Details of operations that perform import Feature values. */
	export interface GoogleCloudAiplatformV1beta1ImportFeatureValuesOperationMetadata {

		/** List of ImportFeatureValues operations running under a single EntityType that are blocking this operation. */
		blockingOperationIds?: Array<string>;

		/** Generic Metadata shared by all operations. */
		genericMetadata?: GoogleCloudAiplatformV1beta1GenericOperationMetadata;

		/** Number of entities that have been imported by the operation. */
		importedEntityCount?: string | null;

		/** Number of Feature values that have been imported by the operation. */
		importedFeatureValueCount?: string | null;

		/** The number of rows in input source that weren't imported due to either * Not having any featureValues. * Having a null entityId. * Having a null timestamp. * Not being parsable (applicable for CSV sources). */
		invalidRowCount?: string | null;

		/** The source URI from where Feature values are imported. */
		sourceUris?: Array<string>;

		/** The number rows that weren't ingested due to having timestamps outside the retention boundary. */
		timestampOutsideRetentionRowsCount?: string | null;
	}

	/** Details of operations that perform import Feature values. */
	export interface GoogleCloudAiplatformV1beta1ImportFeatureValuesOperationMetadataFormProperties {

		/** Number of entities that have been imported by the operation. */
		importedEntityCount: FormControl<string | null | undefined>,

		/** Number of Feature values that have been imported by the operation. */
		importedFeatureValueCount: FormControl<string | null | undefined>,

		/** The number of rows in input source that weren't imported due to either * Not having any featureValues. * Having a null entityId. * Having a null timestamp. * Not being parsable (applicable for CSV sources). */
		invalidRowCount: FormControl<string | null | undefined>,

		/** The number rows that weren't ingested due to having timestamps outside the retention boundary. */
		timestampOutsideRetentionRowsCount: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1ImportFeatureValuesOperationMetadataFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1ImportFeatureValuesOperationMetadataFormProperties>({
			importedEntityCount: new FormControl<string | null | undefined>(undefined),
			importedFeatureValueCount: new FormControl<string | null | undefined>(undefined),
			invalidRowCount: new FormControl<string | null | undefined>(undefined),
			timestampOutsideRetentionRowsCount: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Request message for FeaturestoreService.ImportFeatureValues. */
	export interface GoogleCloudAiplatformV1beta1ImportFeatureValuesRequest {

		/** The storage details for Avro input content. */
		avroSource?: GoogleCloudAiplatformV1beta1AvroSource;

		/** The BigQuery location for the input content. */
		bigquerySource?: GoogleCloudAiplatformV1beta1BigQuerySource;

		/** The storage details for CSV input content. */
		csvSource?: GoogleCloudAiplatformV1beta1CsvSource;

		/** If true, API doesn't start ingestion analysis pipeline. */
		disableIngestionAnalysis?: boolean | null;

		/** If set, data will not be imported for online serving. This is typically used for backfilling, where Feature generation timestamps are not in the timestamp range needed for online serving. */
		disableOnlineServing?: boolean | null;

		/** Source column that holds entity IDs. If not provided, entity IDs are extracted from the column named entity_id. */
		entityIdField?: string | null;

		/** Required. Specifications defining which Feature values to import from the entity. The request fails if no feature_specs are provided, and having multiple feature_specs for one Feature is not allowed. */
		featureSpecs?: Array<GoogleCloudAiplatformV1beta1ImportFeatureValuesRequestFeatureSpec>;

		/** Single Feature timestamp for all entities being imported. The timestamp must not have higher than millisecond precision. */
		featureTime?: string | null;

		/** Source column that holds the Feature timestamp for all Feature values in each entity. */
		featureTimeField?: string | null;

		/** Specifies the number of workers that are used to write data to the Featurestore. Consider the online serving capacity that you require to achieve the desired import throughput without interfering with online serving. The value must be positive, and less than or equal to 100. If not set, defaults to using 1 worker. The low count ensures minimal impact on online serving performance. */
		workerCount?: number | null;
	}

	/** Request message for FeaturestoreService.ImportFeatureValues. */
	export interface GoogleCloudAiplatformV1beta1ImportFeatureValuesRequestFormProperties {

		/** If true, API doesn't start ingestion analysis pipeline. */
		disableIngestionAnalysis: FormControl<boolean | null | undefined>,

		/** If set, data will not be imported for online serving. This is typically used for backfilling, where Feature generation timestamps are not in the timestamp range needed for online serving. */
		disableOnlineServing: FormControl<boolean | null | undefined>,

		/** Source column that holds entity IDs. If not provided, entity IDs are extracted from the column named entity_id. */
		entityIdField: FormControl<string | null | undefined>,

		/** Single Feature timestamp for all entities being imported. The timestamp must not have higher than millisecond precision. */
		featureTime: FormControl<string | null | undefined>,

		/** Source column that holds the Feature timestamp for all Feature values in each entity. */
		featureTimeField: FormControl<string | null | undefined>,

		/** Specifies the number of workers that are used to write data to the Featurestore. Consider the online serving capacity that you require to achieve the desired import throughput without interfering with online serving. The value must be positive, and less than or equal to 100. If not set, defaults to using 1 worker. The low count ensures minimal impact on online serving performance. */
		workerCount: FormControl<number | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1ImportFeatureValuesRequestFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1ImportFeatureValuesRequestFormProperties>({
			disableIngestionAnalysis: new FormControl<boolean | null | undefined>(undefined),
			disableOnlineServing: new FormControl<boolean | null | undefined>(undefined),
			entityIdField: new FormControl<string | null | undefined>(undefined),
			featureTime: new FormControl<string | null | undefined>(undefined),
			featureTimeField: new FormControl<string | null | undefined>(undefined),
			workerCount: new FormControl<number | null | undefined>(undefined),
		});

	}


	/** Defines the Feature value(s) to import. */
	export interface GoogleCloudAiplatformV1beta1ImportFeatureValuesRequestFeatureSpec {

		/** Required. ID of the Feature to import values of. This Feature must exist in the target EntityType, or the request will fail. */
		id?: string | null;

		/** Source column to get the Feature values from. If not set, uses the column with the same name as the Feature ID. */
		sourceField?: string | null;
	}

	/** Defines the Feature value(s) to import. */
	export interface GoogleCloudAiplatformV1beta1ImportFeatureValuesRequestFeatureSpecFormProperties {

		/** Required. ID of the Feature to import values of. This Feature must exist in the target EntityType, or the request will fail. */
		id: FormControl<string | null | undefined>,

		/** Source column to get the Feature values from. If not set, uses the column with the same name as the Feature ID. */
		sourceField: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1ImportFeatureValuesRequestFeatureSpecFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1ImportFeatureValuesRequestFeatureSpecFormProperties>({
			id: new FormControl<string | null | undefined>(undefined),
			sourceField: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Response message for FeaturestoreService.ImportFeatureValues. */
	export interface GoogleCloudAiplatformV1beta1ImportFeatureValuesResponse {

		/** Number of entities that have been imported by the operation. */
		importedEntityCount?: string | null;

		/** Number of Feature values that have been imported by the operation. */
		importedFeatureValueCount?: string | null;

		/** The number of rows in input source that weren't imported due to either * Not having any featureValues. * Having a null entityId. * Having a null timestamp. * Not being parsable (applicable for CSV sources). */
		invalidRowCount?: string | null;

		/** The number rows that weren't ingested due to having feature timestamps outside the retention boundary. */
		timestampOutsideRetentionRowsCount?: string | null;
	}

	/** Response message for FeaturestoreService.ImportFeatureValues. */
	export interface GoogleCloudAiplatformV1beta1ImportFeatureValuesResponseFormProperties {

		/** Number of entities that have been imported by the operation. */
		importedEntityCount: FormControl<string | null | undefined>,

		/** Number of Feature values that have been imported by the operation. */
		importedFeatureValueCount: FormControl<string | null | undefined>,

		/** The number of rows in input source that weren't imported due to either * Not having any featureValues. * Having a null entityId. * Having a null timestamp. * Not being parsable (applicable for CSV sources). */
		invalidRowCount: FormControl<string | null | undefined>,

		/** The number rows that weren't ingested due to having feature timestamps outside the retention boundary. */
		timestampOutsideRetentionRowsCount: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1ImportFeatureValuesResponseFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1ImportFeatureValuesResponseFormProperties>({
			importedEntityCount: new FormControl<string | null | undefined>(undefined),
			importedFeatureValueCount: new FormControl<string | null | undefined>(undefined),
			invalidRowCount: new FormControl<string | null | undefined>(undefined),
			timestampOutsideRetentionRowsCount: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Request message for ModelService.ImportModelEvaluation */
	export interface GoogleCloudAiplatformV1beta1ImportModelEvaluationRequest {

		/** A collection of metrics calculated by comparing Model's predictions on all of the test data against annotations from the test data. */
		modelEvaluation?: GoogleCloudAiplatformV1beta1ModelEvaluation;
	}

	/** Request message for ModelService.ImportModelEvaluation */
	export interface GoogleCloudAiplatformV1beta1ImportModelEvaluationRequestFormProperties {
	}
	export function CreateGoogleCloudAiplatformV1beta1ImportModelEvaluationRequestFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1ImportModelEvaluationRequestFormProperties>({
		});

	}


	/** A collection of metrics calculated by comparing Model's predictions on all of the test data against annotations from the test data. */
	export interface GoogleCloudAiplatformV1beta1ModelEvaluation {

		/** Configuration for bias detection. */
		biasConfigs?: GoogleCloudAiplatformV1beta1ModelEvaluationBiasConfig;

		/** Output only. Timestamp when this ModelEvaluation was created. */
		createTime?: string | null;

		/** The display name of the ModelEvaluation. */
		displayName?: string | null;

		/** Describes the values of ExplanationSpec that are used for explaining the predicted values on the evaluated data. */
		explanationSpecs?: Array<GoogleCloudAiplatformV1beta1ModelEvaluationModelEvaluationExplanationSpec>;

		/** The metadata of the ModelEvaluation. For the ModelEvaluation uploaded from Managed Pipeline, metadata contains a structured value with keys of "pipeline_job_id", "evaluation_dataset_type", "evaluation_dataset_path", "row_based_metrics_path". */
		metadata?: any;

		/** Evaluation metrics of the Model. The schema of the metrics is stored in metrics_schema_uri */
		metrics?: any;

		/** Points to a YAML file stored on Google Cloud Storage describing the metrics of this ModelEvaluation. The schema is defined as an OpenAPI 3.0.2 [Schema Object](https://github.com/OAI/OpenAPI-Specification/blob/main/versions/3.0.2.md#schemaObject). */
		metricsSchemaUri?: string | null;

		/** Aggregated explanation metrics for a Model over a set of instances. */
		modelExplanation?: GoogleCloudAiplatformV1beta1ModelExplanation;

		/** Output only. The resource name of the ModelEvaluation. */
		name?: string | null;

		/** All possible dimensions of ModelEvaluationSlices. The dimensions can be used as the filter of the ModelService.ListModelEvaluationSlices request, in the form of `slice.dimension = `. */
		sliceDimensions?: Array<string>;
	}

	/** A collection of metrics calculated by comparing Model's predictions on all of the test data against annotations from the test data. */
	export interface GoogleCloudAiplatformV1beta1ModelEvaluationFormProperties {

		/** Output only. Timestamp when this ModelEvaluation was created. */
		createTime: FormControl<string | null | undefined>,

		/** The display name of the ModelEvaluation. */
		displayName: FormControl<string | null | undefined>,

		/** The metadata of the ModelEvaluation. For the ModelEvaluation uploaded from Managed Pipeline, metadata contains a structured value with keys of "pipeline_job_id", "evaluation_dataset_type", "evaluation_dataset_path", "row_based_metrics_path". */
		metadata: FormControl<any | null | undefined>,

		/** Evaluation metrics of the Model. The schema of the metrics is stored in metrics_schema_uri */
		metrics: FormControl<any | null | undefined>,

		/** Points to a YAML file stored on Google Cloud Storage describing the metrics of this ModelEvaluation. The schema is defined as an OpenAPI 3.0.2 [Schema Object](https://github.com/OAI/OpenAPI-Specification/blob/main/versions/3.0.2.md#schemaObject). */
		metricsSchemaUri: FormControl<string | null | undefined>,

		/** Output only. The resource name of the ModelEvaluation. */
		name: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1ModelEvaluationFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1ModelEvaluationFormProperties>({
			createTime: new FormControl<string | null | undefined>(undefined),
			displayName: new FormControl<string | null | undefined>(undefined),
			metadata: new FormControl<any | null | undefined>(undefined),
			metrics: new FormControl<any | null | undefined>(undefined),
			metricsSchemaUri: new FormControl<string | null | undefined>(undefined),
			name: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Configuration for bias detection. */
	export interface GoogleCloudAiplatformV1beta1ModelEvaluationBiasConfig {

		/** Specification for how the data should be sliced. */
		biasSlices?: GoogleCloudAiplatformV1beta1ModelEvaluationSliceSliceSliceSpec;

		/** Positive labels selection on the target field. */
		labels?: Array<string>;
	}

	/** Configuration for bias detection. */
	export interface GoogleCloudAiplatformV1beta1ModelEvaluationBiasConfigFormProperties {
	}
	export function CreateGoogleCloudAiplatformV1beta1ModelEvaluationBiasConfigFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1ModelEvaluationBiasConfigFormProperties>({
		});

	}

	export interface GoogleCloudAiplatformV1beta1ModelEvaluationModelEvaluationExplanationSpec {

		/** Specification of Model explanation. */
		explanationSpec?: GoogleCloudAiplatformV1beta1ExplanationSpec;

		/** Explanation type. For AutoML Image Classification models, possible values are: * `image-integrated-gradients` * `image-xrai` */
		explanationType?: string | null;
	}
	export interface GoogleCloudAiplatformV1beta1ModelEvaluationModelEvaluationExplanationSpecFormProperties {

		/** Explanation type. For AutoML Image Classification models, possible values are: * `image-integrated-gradients` * `image-xrai` */
		explanationType: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1ModelEvaluationModelEvaluationExplanationSpecFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1ModelEvaluationModelEvaluationExplanationSpecFormProperties>({
			explanationType: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** A representation of a collection of database items organized in a way that allows for approximate nearest neighbor (a.k.a ANN) algorithms search. */
	export interface GoogleCloudAiplatformV1beta1Index {

		/** Output only. Timestamp when this Index was created. */
		createTime?: string | null;

		/** Output only. The pointers to DeployedIndexes created from this Index. An Index can be only deleted if all its DeployedIndexes had been undeployed first. */
		deployedIndexes?: Array<GoogleCloudAiplatformV1beta1DeployedIndexRef>;

		/** The description of the Index. */
		description?: string | null;

		/** Required. The display name of the Index. The name can be up to 128 characters long and can consist of any UTF-8 characters. */
		displayName?: string | null;

		/** Represents a customer-managed encryption key spec that can be applied to a top-level resource. */
		encryptionSpec?: GoogleCloudAiplatformV1beta1EncryptionSpec;

		/** Used to perform consistent read-modify-write updates. If not set, a blind "overwrite" update happens. */
		etag?: string | null;

		/** Stats of the Index. */
		indexStats?: GoogleCloudAiplatformV1beta1IndexStats;

		/** Immutable. The update method to use with this Index. If not set, BATCH_UPDATE will be used by default. */
		indexUpdateMethod?: GoogleCloudAiplatformV1beta1IndexIndexUpdateMethod | null;

		/** The labels with user-defined metadata to organize your Indexes. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. See https://goo.gl/xmQnxf for more information and examples of labels. */
		labels?: {[id: string]: string };

		/** An additional information about the Index; the schema of the metadata can be found in metadata_schema. */
		metadata?: any;

		/** Immutable. Points to a YAML file stored on Google Cloud Storage describing additional information about the Index, that is specific to it. Unset if the Index does not have any additional information. The schema is defined as an OpenAPI 3.0.2 [Schema Object](https://github.com/OAI/OpenAPI-Specification/blob/main/versions/3.0.2.md#schemaObject). Note: The URI given on output will be immutable and probably different, including the URI scheme, than the one given on input. The output URI will point to a location where the user only has a read access. */
		metadataSchemaUri?: string | null;

		/** Output only. The resource name of the Index. */
		name?: string | null;

		/** Output only. Timestamp when this Index was most recently updated. This also includes any update to the contents of the Index. Note that Operations working on this Index may have their Operations.metadata.generic_metadata.update_time a little after the value of this timestamp, yet that does not mean their results are not already reflected in the Index. Result of any successfully completed Operation on the Index is reflected in it. */
		updateTime?: string | null;
	}

	/** A representation of a collection of database items organized in a way that allows for approximate nearest neighbor (a.k.a ANN) algorithms search. */
	export interface GoogleCloudAiplatformV1beta1IndexFormProperties {

		/** Output only. Timestamp when this Index was created. */
		createTime: FormControl<string | null | undefined>,

		/** The description of the Index. */
		description: FormControl<string | null | undefined>,

		/** Required. The display name of the Index. The name can be up to 128 characters long and can consist of any UTF-8 characters. */
		displayName: FormControl<string | null | undefined>,

		/** Used to perform consistent read-modify-write updates. If not set, a blind "overwrite" update happens. */
		etag: FormControl<string | null | undefined>,

		/** Immutable. The update method to use with this Index. If not set, BATCH_UPDATE will be used by default. */
		indexUpdateMethod: FormControl<GoogleCloudAiplatformV1beta1IndexIndexUpdateMethod | null | undefined>,

		/** The labels with user-defined metadata to organize your Indexes. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. See https://goo.gl/xmQnxf for more information and examples of labels. */
		labels: FormControl<{[id: string]: string } | null | undefined>,

		/** An additional information about the Index; the schema of the metadata can be found in metadata_schema. */
		metadata: FormControl<any | null | undefined>,

		/** Immutable. Points to a YAML file stored on Google Cloud Storage describing additional information about the Index, that is specific to it. Unset if the Index does not have any additional information. The schema is defined as an OpenAPI 3.0.2 [Schema Object](https://github.com/OAI/OpenAPI-Specification/blob/main/versions/3.0.2.md#schemaObject). Note: The URI given on output will be immutable and probably different, including the URI scheme, than the one given on input. The output URI will point to a location where the user only has a read access. */
		metadataSchemaUri: FormControl<string | null | undefined>,

		/** Output only. The resource name of the Index. */
		name: FormControl<string | null | undefined>,

		/** Output only. Timestamp when this Index was most recently updated. This also includes any update to the contents of the Index. Note that Operations working on this Index may have their Operations.metadata.generic_metadata.update_time a little after the value of this timestamp, yet that does not mean their results are not already reflected in the Index. Result of any successfully completed Operation on the Index is reflected in it. */
		updateTime: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1IndexFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1IndexFormProperties>({
			createTime: new FormControl<string | null | undefined>(undefined),
			description: new FormControl<string | null | undefined>(undefined),
			displayName: new FormControl<string | null | undefined>(undefined),
			etag: new FormControl<string | null | undefined>(undefined),
			indexUpdateMethod: new FormControl<GoogleCloudAiplatformV1beta1IndexIndexUpdateMethod | null | undefined>(undefined),
			labels: new FormControl<{[id: string]: string } | null | undefined>(undefined),
			metadata: new FormControl<any | null | undefined>(undefined),
			metadataSchemaUri: new FormControl<string | null | undefined>(undefined),
			name: new FormControl<string | null | undefined>(undefined),
			updateTime: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Stats of the Index. */
	export interface GoogleCloudAiplatformV1beta1IndexStats {

		/** Output only. The number of shards in the Index. */
		shardsCount?: number | null;

		/** Output only. The number of vectors in the Index. */
		vectorsCount?: string | null;
	}

	/** Stats of the Index. */
	export interface GoogleCloudAiplatformV1beta1IndexStatsFormProperties {

		/** Output only. The number of shards in the Index. */
		shardsCount: FormControl<number | null | undefined>,

		/** Output only. The number of vectors in the Index. */
		vectorsCount: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1IndexStatsFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1IndexStatsFormProperties>({
			shardsCount: new FormControl<number | null | undefined>(undefined),
			vectorsCount: new FormControl<string | null | undefined>(undefined),
		});

	}

	export enum GoogleCloudAiplatformV1beta1IndexIndexUpdateMethod { INDEX_UPDATE_METHOD_UNSPECIFIED = 0, BATCH_UPDATE = 1, STREAM_UPDATE = 2 }


	/** Indexes are deployed into it. An IndexEndpoint can have multiple DeployedIndexes. */
	export interface GoogleCloudAiplatformV1beta1IndexEndpoint {

		/** Output only. Timestamp when this IndexEndpoint was created. */
		createTime?: string | null;

		/** Output only. The indexes deployed in this endpoint. */
		deployedIndexes?: Array<GoogleCloudAiplatformV1beta1DeployedIndex>;

		/** The description of the IndexEndpoint. */
		description?: string | null;

		/** Required. The display name of the IndexEndpoint. The name can be up to 128 characters long and can consist of any UTF-8 characters. */
		displayName?: string | null;

		/** Optional. Deprecated: If true, expose the IndexEndpoint via private service connect. Only one of the fields, network or enable_private_service_connect, can be set. */
		enablePrivateServiceConnect?: boolean | null;

		/** Represents a customer-managed encryption key spec that can be applied to a top-level resource. */
		encryptionSpec?: GoogleCloudAiplatformV1beta1EncryptionSpec;

		/** Used to perform consistent read-modify-write updates. If not set, a blind "overwrite" update happens. */
		etag?: string | null;

		/** The labels with user-defined metadata to organize your IndexEndpoints. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. See https://goo.gl/xmQnxf for more information and examples of labels. */
		labels?: {[id: string]: string };

		/** Output only. The resource name of the IndexEndpoint. */
		name?: string | null;

		/** Optional. The full name of the Google Compute Engine [network](https://cloud.google.com/compute/docs/networks-and-firewalls#networks) to which the IndexEndpoint should be peered. Private services access must already be configured for the network. If left unspecified, the Endpoint is not peered with any network. network and private_service_connect_config are mutually exclusive. [Format](https://cloud.google.com/compute/docs/reference/rest/v1/networks/insert): `projects/{project}/global/networks/{network}`. Where {project} is a project number, as in '12345', and {network} is network name. */
		network?: string | null;

		/** Represents configuration for private service connect. */
		privateServiceConnectConfig?: GoogleCloudAiplatformV1beta1PrivateServiceConnectConfig;

		/** Output only. If public_endpoint_enabled is true, this field will be populated with the domain name to use for this index endpoint. */
		publicEndpointDomainName?: string | null;

		/** Optional. If true, the deployed index will be accessible through public endpoint. */
		publicEndpointEnabled?: boolean | null;

		/** Output only. Timestamp when this IndexEndpoint was last updated. This timestamp is not updated when the endpoint's DeployedIndexes are updated, e.g. due to updates of the original Indexes they are the deployments of. */
		updateTime?: string | null;
	}

	/** Indexes are deployed into it. An IndexEndpoint can have multiple DeployedIndexes. */
	export interface GoogleCloudAiplatformV1beta1IndexEndpointFormProperties {

		/** Output only. Timestamp when this IndexEndpoint was created. */
		createTime: FormControl<string | null | undefined>,

		/** The description of the IndexEndpoint. */
		description: FormControl<string | null | undefined>,

		/** Required. The display name of the IndexEndpoint. The name can be up to 128 characters long and can consist of any UTF-8 characters. */
		displayName: FormControl<string | null | undefined>,

		/** Optional. Deprecated: If true, expose the IndexEndpoint via private service connect. Only one of the fields, network or enable_private_service_connect, can be set. */
		enablePrivateServiceConnect: FormControl<boolean | null | undefined>,

		/** Used to perform consistent read-modify-write updates. If not set, a blind "overwrite" update happens. */
		etag: FormControl<string | null | undefined>,

		/** The labels with user-defined metadata to organize your IndexEndpoints. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. See https://goo.gl/xmQnxf for more information and examples of labels. */
		labels: FormControl<{[id: string]: string } | null | undefined>,

		/** Output only. The resource name of the IndexEndpoint. */
		name: FormControl<string | null | undefined>,

		/** Optional. The full name of the Google Compute Engine [network](https://cloud.google.com/compute/docs/networks-and-firewalls#networks) to which the IndexEndpoint should be peered. Private services access must already be configured for the network. If left unspecified, the Endpoint is not peered with any network. network and private_service_connect_config are mutually exclusive. [Format](https://cloud.google.com/compute/docs/reference/rest/v1/networks/insert): `projects/{project}/global/networks/{network}`. Where {project} is a project number, as in '12345', and {network} is network name. */
		network: FormControl<string | null | undefined>,

		/** Output only. If public_endpoint_enabled is true, this field will be populated with the domain name to use for this index endpoint. */
		publicEndpointDomainName: FormControl<string | null | undefined>,

		/** Optional. If true, the deployed index will be accessible through public endpoint. */
		publicEndpointEnabled: FormControl<boolean | null | undefined>,

		/** Output only. Timestamp when this IndexEndpoint was last updated. This timestamp is not updated when the endpoint's DeployedIndexes are updated, e.g. due to updates of the original Indexes they are the deployments of. */
		updateTime: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1IndexEndpointFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1IndexEndpointFormProperties>({
			createTime: new FormControl<string | null | undefined>(undefined),
			description: new FormControl<string | null | undefined>(undefined),
			displayName: new FormControl<string | null | undefined>(undefined),
			enablePrivateServiceConnect: new FormControl<boolean | null | undefined>(undefined),
			etag: new FormControl<string | null | undefined>(undefined),
			labels: new FormControl<{[id: string]: string } | null | undefined>(undefined),
			name: new FormControl<string | null | undefined>(undefined),
			network: new FormControl<string | null | undefined>(undefined),
			publicEndpointDomainName: new FormControl<string | null | undefined>(undefined),
			publicEndpointEnabled: new FormControl<boolean | null | undefined>(undefined),
			updateTime: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Specifies Vertex AI owned input data to be used for training, and possibly evaluating, the Model. */
	export interface GoogleCloudAiplatformV1beta1InputDataConfig {

		/** Applicable only to custom training with Datasets that have DataItems and Annotations. Cloud Storage URI that points to a YAML file describing the annotation schema. The schema is defined as an OpenAPI 3.0.2 [Schema Object](https://github.com/OAI/OpenAPI-Specification/blob/main/versions/3.0.2.md#schemaObject). The schema files that can be used here are found in gs://google-cloud-aiplatform/schema/dataset/annotation/ , note that the chosen schema must be consistent with metadata of the Dataset specified by dataset_id. Only Annotations that both match this schema and belong to DataItems not ignored by the split method are used in respectively training, validation or test role, depending on the role of the DataItem they are on. When used in conjunction with annotations_filter, the Annotations used for training are filtered by both annotations_filter and annotation_schema_uri. */
		annotationSchemaUri?: string | null;

		/** Applicable only to Datasets that have DataItems and Annotations. A filter on Annotations of the Dataset. Only Annotations that both match this filter and belong to DataItems not ignored by the split method are used in respectively training, validation or test role, depending on the role of the DataItem they are on (for the auto-assigned that role is decided by Vertex AI). A filter with same syntax as the one used in ListAnnotations may be used, but note here it filters across all Annotations of the Dataset, and not just within a single DataItem. */
		annotationsFilter?: string | null;

		/** The BigQuery location for the output content. */
		bigqueryDestination?: GoogleCloudAiplatformV1beta1BigQueryDestination;

		/** Required. The ID of the Dataset in the same Project and Location which data will be used to train the Model. The Dataset must use schema compatible with Model being trained, and what is compatible should be described in the used TrainingPipeline's training_task_definition. For tabular Datasets, all their data is exported to training, to pick and choose from. */
		datasetId?: string | null;

		/** Assigns input data to training, validation, and test sets based on the given filters, data pieces not matched by any filter are ignored. Currently only supported for Datasets containing DataItems. If any of the filters in this message are to match nothing, then they can be set as '-' (the minus sign). Supported only for unstructured Datasets. */
		filterSplit?: GoogleCloudAiplatformV1beta1FilterSplit;

		/** Assigns the input data to training, validation, and test sets as per the given fractions. Any of `training_fraction`, `validation_fraction` and `test_fraction` may optionally be provided, they must sum to up to 1. If the provided ones sum to less than 1, the remainder is assigned to sets as decided by Vertex AI. If none of the fractions are set, by default roughly 80% of data is used for training, 10% for validation, and 10% for test. */
		fractionSplit?: GoogleCloudAiplatformV1beta1FractionSplit;

		/** The Google Cloud Storage location where the output is to be written to. */
		gcsDestination?: GoogleCloudAiplatformV1beta1GcsDestination;

		/** Whether to persist the ML use assignment to data item system labels. */
		persistMlUseAssignment?: boolean | null;

		/** Assigns input data to training, validation, and test sets based on the value of a provided key. Supported only for tabular Datasets. */
		predefinedSplit?: GoogleCloudAiplatformV1beta1PredefinedSplit;

		/** Only applicable to Datasets that have SavedQueries. The ID of a SavedQuery (annotation set) under the Dataset specified by dataset_id used for filtering Annotations for training. Only Annotations that are associated with this SavedQuery are used in respectively training. When used in conjunction with annotations_filter, the Annotations used for training are filtered by both saved_query_id and annotations_filter. Only one of saved_query_id and annotation_schema_uri should be specified as both of them represent the same thing: problem type. */
		savedQueryId?: string | null;

		/** Assigns input data to the training, validation, and test sets so that the distribution of values found in the categorical column (as specified by the `key` field) is mirrored within each split. The fraction values determine the relative sizes of the splits. For example, if the specified column has three values, with 50% of the rows having value "A", 25% value "B", and 25% value "C", and the split fractions are specified as 80/10/10, then the training set will constitute 80% of the training data, with about 50% of the training set rows having the value "A" for the specified column, about 25% having the value "B", and about 25% having the value "C". Only the top 500 occurring values are used; any values not in the top 500 values are randomly assigned to a split. If less than three rows contain a specific value, those rows are randomly assigned. Supported only for tabular Datasets. */
		stratifiedSplit?: GoogleCloudAiplatformV1beta1StratifiedSplit;

		/** Assigns input data to training, validation, and test sets based on a provided timestamps. The youngest data pieces are assigned to training set, next to validation set, and the oldest to the test set. Supported only for tabular Datasets. */
		timestampSplit?: GoogleCloudAiplatformV1beta1TimestampSplit;
	}

	/** Specifies Vertex AI owned input data to be used for training, and possibly evaluating, the Model. */
	export interface GoogleCloudAiplatformV1beta1InputDataConfigFormProperties {

		/** Applicable only to custom training with Datasets that have DataItems and Annotations. Cloud Storage URI that points to a YAML file describing the annotation schema. The schema is defined as an OpenAPI 3.0.2 [Schema Object](https://github.com/OAI/OpenAPI-Specification/blob/main/versions/3.0.2.md#schemaObject). The schema files that can be used here are found in gs://google-cloud-aiplatform/schema/dataset/annotation/ , note that the chosen schema must be consistent with metadata of the Dataset specified by dataset_id. Only Annotations that both match this schema and belong to DataItems not ignored by the split method are used in respectively training, validation or test role, depending on the role of the DataItem they are on. When used in conjunction with annotations_filter, the Annotations used for training are filtered by both annotations_filter and annotation_schema_uri. */
		annotationSchemaUri: FormControl<string | null | undefined>,

		/** Applicable only to Datasets that have DataItems and Annotations. A filter on Annotations of the Dataset. Only Annotations that both match this filter and belong to DataItems not ignored by the split method are used in respectively training, validation or test role, depending on the role of the DataItem they are on (for the auto-assigned that role is decided by Vertex AI). A filter with same syntax as the one used in ListAnnotations may be used, but note here it filters across all Annotations of the Dataset, and not just within a single DataItem. */
		annotationsFilter: FormControl<string | null | undefined>,

		/** Required. The ID of the Dataset in the same Project and Location which data will be used to train the Model. The Dataset must use schema compatible with Model being trained, and what is compatible should be described in the used TrainingPipeline's training_task_definition. For tabular Datasets, all their data is exported to training, to pick and choose from. */
		datasetId: FormControl<string | null | undefined>,

		/** Whether to persist the ML use assignment to data item system labels. */
		persistMlUseAssignment: FormControl<boolean | null | undefined>,

		/** Only applicable to Datasets that have SavedQueries. The ID of a SavedQuery (annotation set) under the Dataset specified by dataset_id used for filtering Annotations for training. Only Annotations that are associated with this SavedQuery are used in respectively training. When used in conjunction with annotations_filter, the Annotations used for training are filtered by both saved_query_id and annotations_filter. Only one of saved_query_id and annotation_schema_uri should be specified as both of them represent the same thing: problem type. */
		savedQueryId: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1InputDataConfigFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1InputDataConfigFormProperties>({
			annotationSchemaUri: new FormControl<string | null | undefined>(undefined),
			annotationsFilter: new FormControl<string | null | undefined>(undefined),
			datasetId: new FormControl<string | null | undefined>(undefined),
			persistMlUseAssignment: new FormControl<boolean | null | undefined>(undefined),
			savedQueryId: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Assigns input data to training, validation, and test sets based on the value of a provided key. Supported only for tabular Datasets. */
	export interface GoogleCloudAiplatformV1beta1PredefinedSplit {

		/** Required. The key is a name of one of the Dataset's data columns. The value of the key (either the label's value or value in the column) must be one of {`training`, `validation`, `test`}, and it defines to which set the given piece of data is assigned. If for a piece of data the key is not present or has an invalid value, that piece is ignored by the pipeline. */
		key?: string | null;
	}

	/** Assigns input data to training, validation, and test sets based on the value of a provided key. Supported only for tabular Datasets. */
	export interface GoogleCloudAiplatformV1beta1PredefinedSplitFormProperties {

		/** Required. The key is a name of one of the Dataset's data columns. The value of the key (either the label's value or value in the column) must be one of {`training`, `validation`, `test`}, and it defines to which set the given piece of data is assigned. If for a piece of data the key is not present or has an invalid value, that piece is ignored by the pipeline. */
		key: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1PredefinedSplitFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1PredefinedSplitFormProperties>({
			key: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Assigns input data to the training, validation, and test sets so that the distribution of values found in the categorical column (as specified by the `key` field) is mirrored within each split. The fraction values determine the relative sizes of the splits. For example, if the specified column has three values, with 50% of the rows having value "A", 25% value "B", and 25% value "C", and the split fractions are specified as 80/10/10, then the training set will constitute 80% of the training data, with about 50% of the training set rows having the value "A" for the specified column, about 25% having the value "B", and about 25% having the value "C". Only the top 500 occurring values are used; any values not in the top 500 values are randomly assigned to a split. If less than three rows contain a specific value, those rows are randomly assigned. Supported only for tabular Datasets. */
	export interface GoogleCloudAiplatformV1beta1StratifiedSplit {

		/** Required. The key is a name of one of the Dataset's data columns. The key provided must be for a categorical column. */
		key?: string | null;

		/** The fraction of the input data that is to be used to evaluate the Model. */
		testFraction?: number | null;

		/** The fraction of the input data that is to be used to train the Model. */
		trainingFraction?: number | null;

		/** The fraction of the input data that is to be used to validate the Model. */
		validationFraction?: number | null;
	}

	/** Assigns input data to the training, validation, and test sets so that the distribution of values found in the categorical column (as specified by the `key` field) is mirrored within each split. The fraction values determine the relative sizes of the splits. For example, if the specified column has three values, with 50% of the rows having value "A", 25% value "B", and 25% value "C", and the split fractions are specified as 80/10/10, then the training set will constitute 80% of the training data, with about 50% of the training set rows having the value "A" for the specified column, about 25% having the value "B", and about 25% having the value "C". Only the top 500 occurring values are used; any values not in the top 500 values are randomly assigned to a split. If less than three rows contain a specific value, those rows are randomly assigned. Supported only for tabular Datasets. */
	export interface GoogleCloudAiplatformV1beta1StratifiedSplitFormProperties {

		/** Required. The key is a name of one of the Dataset's data columns. The key provided must be for a categorical column. */
		key: FormControl<string | null | undefined>,

		/** The fraction of the input data that is to be used to evaluate the Model. */
		testFraction: FormControl<number | null | undefined>,

		/** The fraction of the input data that is to be used to train the Model. */
		trainingFraction: FormControl<number | null | undefined>,

		/** The fraction of the input data that is to be used to validate the Model. */
		validationFraction: FormControl<number | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1StratifiedSplitFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1StratifiedSplitFormProperties>({
			key: new FormControl<string | null | undefined>(undefined),
			testFraction: new FormControl<number | null | undefined>(undefined),
			trainingFraction: new FormControl<number | null | undefined>(undefined),
			validationFraction: new FormControl<number | null | undefined>(undefined),
		});

	}


	/** Assigns input data to training, validation, and test sets based on a provided timestamps. The youngest data pieces are assigned to training set, next to validation set, and the oldest to the test set. Supported only for tabular Datasets. */
	export interface GoogleCloudAiplatformV1beta1TimestampSplit {

		/** Required. The key is a name of one of the Dataset's data columns. The values of the key (the values in the column) must be in RFC 3339 `date-time` format, where `time-offset` = `"Z"` (e.g. 1985-04-12T23:20:50.52Z). If for a piece of data the key is not present or has an invalid value, that piece is ignored by the pipeline. */
		key?: string | null;

		/** The fraction of the input data that is to be used to evaluate the Model. */
		testFraction?: number | null;

		/** The fraction of the input data that is to be used to train the Model. */
		trainingFraction?: number | null;

		/** The fraction of the input data that is to be used to validate the Model. */
		validationFraction?: number | null;
	}

	/** Assigns input data to training, validation, and test sets based on a provided timestamps. The youngest data pieces are assigned to training set, next to validation set, and the oldest to the test set. Supported only for tabular Datasets. */
	export interface GoogleCloudAiplatformV1beta1TimestampSplitFormProperties {

		/** Required. The key is a name of one of the Dataset's data columns. The values of the key (the values in the column) must be in RFC 3339 `date-time` format, where `time-offset` = `"Z"` (e.g. 1985-04-12T23:20:50.52Z). If for a piece of data the key is not present or has an invalid value, that piece is ignored by the pipeline. */
		key: FormControl<string | null | undefined>,

		/** The fraction of the input data that is to be used to evaluate the Model. */
		testFraction: FormControl<number | null | undefined>,

		/** The fraction of the input data that is to be used to train the Model. */
		trainingFraction: FormControl<number | null | undefined>,

		/** The fraction of the input data that is to be used to validate the Model. */
		validationFraction: FormControl<number | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1TimestampSplitFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1TimestampSplitFormProperties>({
			key: new FormControl<string | null | undefined>(undefined),
			testFraction: new FormControl<number | null | undefined>(undefined),
			trainingFraction: new FormControl<number | null | undefined>(undefined),
			validationFraction: new FormControl<number | null | undefined>(undefined),
		});

	}


	/** Request message for [InternalOsServiceStateInstance]. */
	export interface GoogleCloudAiplatformV1beta1InternalOsServiceStateInstance {

		/** Required. internal service name. */
		serviceName?: GoogleCloudAiplatformV1beta1InternalOsServiceStateInstanceServiceName | null;

		/** Required. internal service state. */
		serviceState?: GoogleCloudAiplatformV1beta1InternalOsServiceStateInstanceServiceState | null;
	}

	/** Request message for [InternalOsServiceStateInstance]. */
	export interface GoogleCloudAiplatformV1beta1InternalOsServiceStateInstanceFormProperties {

		/** Required. internal service name. */
		serviceName: FormControl<GoogleCloudAiplatformV1beta1InternalOsServiceStateInstanceServiceName | null | undefined>,

		/** Required. internal service state. */
		serviceState: FormControl<GoogleCloudAiplatformV1beta1InternalOsServiceStateInstanceServiceState | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1InternalOsServiceStateInstanceFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1InternalOsServiceStateInstanceFormProperties>({
			serviceName: new FormControl<GoogleCloudAiplatformV1beta1InternalOsServiceStateInstanceServiceName | null | undefined>(undefined),
			serviceState: new FormControl<GoogleCloudAiplatformV1beta1InternalOsServiceStateInstanceServiceState | null | undefined>(undefined),
		});

	}

	export enum GoogleCloudAiplatformV1beta1InternalOsServiceStateInstanceServiceName { INTERNAL_OS_SERVICE_ENUM_UNSPECIFIED = 0, DOCKER_SERVICE_STATE = 1, CONTROL_PLANE_API_DNS_STATE = 2, PROXY_REGISTRATION_DNS_STATE = 3, JUPYTER_STATE = 4, JUPYTER_API_STATE = 5, EUC_METADATA_API_STATE = 6, EUC_AGENT_API_STATE = 7, IDLE_SHUTDOWN_AGENT_STATE = 8, PROXY_AGENT_STATE = 9 }

	export enum GoogleCloudAiplatformV1beta1InternalOsServiceStateInstanceServiceState { UNKNOWN = 0, HEALTHY = 1, UNHEALTHY = 2 }


	/** Contains information about the Large Model. */
	export interface GoogleCloudAiplatformV1beta1LargeModelReference {

		/** Required. The unique name of the large Foundation or pre-built model. Like "chat-bison", "text-bison". Or model name with version ID, like "chat-bison@001", "text-bison@005", etc. */
		name?: string | null;
	}

	/** Contains information about the Large Model. */
	export interface GoogleCloudAiplatformV1beta1LargeModelReferenceFormProperties {

		/** Required. The unique name of the large Foundation or pre-built model. Like "chat-bison", "text-bison". Or model name with version ID, like "chat-bison@001", "text-bison@005", etc. */
		name: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1LargeModelReferenceFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1LargeModelReferenceFormProperties>({
			name: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** A subgraph of the overall lineage graph. Event edges connect Artifact and Execution nodes. */
	export interface GoogleCloudAiplatformV1beta1LineageSubgraph {

		/** The Artifact nodes in the subgraph. */
		artifacts?: Array<GoogleCloudAiplatformV1beta1Artifact>;

		/** The Event edges between Artifacts and Executions in the subgraph. */
		events?: Array<GoogleCloudAiplatformV1beta1Event>;

		/** The Execution nodes in the subgraph. */
		executions?: Array<GoogleCloudAiplatformV1beta1Execution>;
	}

	/** A subgraph of the overall lineage graph. Event edges connect Artifact and Execution nodes. */
	export interface GoogleCloudAiplatformV1beta1LineageSubgraphFormProperties {
	}
	export function CreateGoogleCloudAiplatformV1beta1LineageSubgraphFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1LineageSubgraphFormProperties>({
		});

	}


	/** Response message for DatasetService.ListAnnotations. */
	export interface GoogleCloudAiplatformV1beta1ListAnnotationsResponse {

		/** A list of Annotations that matches the specified filter in the request. */
		annotations?: Array<GoogleCloudAiplatformV1beta1Annotation>;

		/** The standard List next-page token. */
		nextPageToken?: string | null;
	}

	/** Response message for DatasetService.ListAnnotations. */
	export interface GoogleCloudAiplatformV1beta1ListAnnotationsResponseFormProperties {

		/** The standard List next-page token. */
		nextPageToken: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1ListAnnotationsResponseFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1ListAnnotationsResponseFormProperties>({
			nextPageToken: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Response message for MetadataService.ListArtifacts. */
	export interface GoogleCloudAiplatformV1beta1ListArtifactsResponse {

		/** The Artifacts retrieved from the MetadataStore. */
		artifacts?: Array<GoogleCloudAiplatformV1beta1Artifact>;

		/** A token, which can be sent as ListArtifactsRequest.page_token to retrieve the next page. If this field is not populated, there are no subsequent pages. */
		nextPageToken?: string | null;
	}

	/** Response message for MetadataService.ListArtifacts. */
	export interface GoogleCloudAiplatformV1beta1ListArtifactsResponseFormProperties {

		/** A token, which can be sent as ListArtifactsRequest.page_token to retrieve the next page. If this field is not populated, there are no subsequent pages. */
		nextPageToken: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1ListArtifactsResponseFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1ListArtifactsResponseFormProperties>({
			nextPageToken: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Response message for JobService.ListBatchPredictionJobs */
	export interface GoogleCloudAiplatformV1beta1ListBatchPredictionJobsResponse {

		/** List of BatchPredictionJobs in the requested page. */
		batchPredictionJobs?: Array<GoogleCloudAiplatformV1beta1BatchPredictionJob>;

		/** A token to retrieve the next page of results. Pass to ListBatchPredictionJobsRequest.page_token to obtain that page. */
		nextPageToken?: string | null;
	}

	/** Response message for JobService.ListBatchPredictionJobs */
	export interface GoogleCloudAiplatformV1beta1ListBatchPredictionJobsResponseFormProperties {

		/** A token to retrieve the next page of results. Pass to ListBatchPredictionJobsRequest.page_token to obtain that page. */
		nextPageToken: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1ListBatchPredictionJobsResponseFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1ListBatchPredictionJobsResponseFormProperties>({
			nextPageToken: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Response message for MetadataService.ListContexts. */
	export interface GoogleCloudAiplatformV1beta1ListContextsResponse {

		/** The Contexts retrieved from the MetadataStore. */
		contexts?: Array<GoogleCloudAiplatformV1beta1Context>;

		/** A token, which can be sent as ListContextsRequest.page_token to retrieve the next page. If this field is not populated, there are no subsequent pages. */
		nextPageToken?: string | null;
	}

	/** Response message for MetadataService.ListContexts. */
	export interface GoogleCloudAiplatformV1beta1ListContextsResponseFormProperties {

		/** A token, which can be sent as ListContextsRequest.page_token to retrieve the next page. If this field is not populated, there are no subsequent pages. */
		nextPageToken: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1ListContextsResponseFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1ListContextsResponseFormProperties>({
			nextPageToken: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Response message for JobService.ListCustomJobs */
	export interface GoogleCloudAiplatformV1beta1ListCustomJobsResponse {

		/** List of CustomJobs in the requested page. */
		customJobs?: Array<GoogleCloudAiplatformV1beta1CustomJob>;

		/** A token to retrieve the next page of results. Pass to ListCustomJobsRequest.page_token to obtain that page. */
		nextPageToken?: string | null;
	}

	/** Response message for JobService.ListCustomJobs */
	export interface GoogleCloudAiplatformV1beta1ListCustomJobsResponseFormProperties {

		/** A token to retrieve the next page of results. Pass to ListCustomJobsRequest.page_token to obtain that page. */
		nextPageToken: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1ListCustomJobsResponseFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1ListCustomJobsResponseFormProperties>({
			nextPageToken: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Response message for DatasetService.ListDataItems. */
	export interface GoogleCloudAiplatformV1beta1ListDataItemsResponse {

		/** A list of DataItems that matches the specified filter in the request. */
		dataItems?: Array<GoogleCloudAiplatformV1beta1DataItem>;

		/** The standard List next-page token. */
		nextPageToken?: string | null;
	}

	/** Response message for DatasetService.ListDataItems. */
	export interface GoogleCloudAiplatformV1beta1ListDataItemsResponseFormProperties {

		/** The standard List next-page token. */
		nextPageToken: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1ListDataItemsResponseFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1ListDataItemsResponseFormProperties>({
			nextPageToken: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Response message for JobService.ListDataLabelingJobs. */
	export interface GoogleCloudAiplatformV1beta1ListDataLabelingJobsResponse {

		/** A list of DataLabelingJobs that matches the specified filter in the request. */
		dataLabelingJobs?: Array<GoogleCloudAiplatformV1beta1DataLabelingJob>;

		/** The standard List next-page token. */
		nextPageToken?: string | null;
	}

	/** Response message for JobService.ListDataLabelingJobs. */
	export interface GoogleCloudAiplatformV1beta1ListDataLabelingJobsResponseFormProperties {

		/** The standard List next-page token. */
		nextPageToken: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1ListDataLabelingJobsResponseFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1ListDataLabelingJobsResponseFormProperties>({
			nextPageToken: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Response message for DatasetService.ListDatasetVersions. */
	export interface GoogleCloudAiplatformV1beta1ListDatasetVersionsResponse {

		/** A list of DatasetVersions that matches the specified filter in the request. */
		datasetVersions?: Array<GoogleCloudAiplatformV1beta1DatasetVersion>;

		/** The standard List next-page token. */
		nextPageToken?: string | null;
	}

	/** Response message for DatasetService.ListDatasetVersions. */
	export interface GoogleCloudAiplatformV1beta1ListDatasetVersionsResponseFormProperties {

		/** The standard List next-page token. */
		nextPageToken: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1ListDatasetVersionsResponseFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1ListDatasetVersionsResponseFormProperties>({
			nextPageToken: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Response message for DatasetService.ListDatasets. */
	export interface GoogleCloudAiplatformV1beta1ListDatasetsResponse {

		/** A list of Datasets that matches the specified filter in the request. */
		datasets?: Array<GoogleCloudAiplatformV1beta1Dataset>;

		/** The standard List next-page token. */
		nextPageToken?: string | null;
	}

	/** Response message for DatasetService.ListDatasets. */
	export interface GoogleCloudAiplatformV1beta1ListDatasetsResponseFormProperties {

		/** The standard List next-page token. */
		nextPageToken: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1ListDatasetsResponseFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1ListDatasetsResponseFormProperties>({
			nextPageToken: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Response message for ListDeploymentResourcePools method. */
	export interface GoogleCloudAiplatformV1beta1ListDeploymentResourcePoolsResponse {

		/** The DeploymentResourcePools from the specified location. */
		deploymentResourcePools?: Array<GoogleCloudAiplatformV1beta1DeploymentResourcePool>;

		/** A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages. */
		nextPageToken?: string | null;
	}

	/** Response message for ListDeploymentResourcePools method. */
	export interface GoogleCloudAiplatformV1beta1ListDeploymentResourcePoolsResponseFormProperties {

		/** A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages. */
		nextPageToken: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1ListDeploymentResourcePoolsResponseFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1ListDeploymentResourcePoolsResponseFormProperties>({
			nextPageToken: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Response message for EndpointService.ListEndpoints. */
	export interface GoogleCloudAiplatformV1beta1ListEndpointsResponse {

		/** List of Endpoints in the requested page. */
		endpoints?: Array<GoogleCloudAiplatformV1beta1Endpoint>;

		/** A token to retrieve the next page of results. Pass to ListEndpointsRequest.page_token to obtain that page. */
		nextPageToken?: string | null;
	}

	/** Response message for EndpointService.ListEndpoints. */
	export interface GoogleCloudAiplatformV1beta1ListEndpointsResponseFormProperties {

		/** A token to retrieve the next page of results. Pass to ListEndpointsRequest.page_token to obtain that page. */
		nextPageToken: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1ListEndpointsResponseFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1ListEndpointsResponseFormProperties>({
			nextPageToken: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Response message for FeaturestoreService.ListEntityTypes. */
	export interface GoogleCloudAiplatformV1beta1ListEntityTypesResponse {

		/** The EntityTypes matching the request. */
		entityTypes?: Array<GoogleCloudAiplatformV1beta1EntityType>;

		/** A token, which can be sent as ListEntityTypesRequest.page_token to retrieve the next page. If this field is omitted, there are no subsequent pages. */
		nextPageToken?: string | null;
	}

	/** Response message for FeaturestoreService.ListEntityTypes. */
	export interface GoogleCloudAiplatformV1beta1ListEntityTypesResponseFormProperties {

		/** A token, which can be sent as ListEntityTypesRequest.page_token to retrieve the next page. If this field is omitted, there are no subsequent pages. */
		nextPageToken: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1ListEntityTypesResponseFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1ListEntityTypesResponseFormProperties>({
			nextPageToken: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Response message for MetadataService.ListExecutions. */
	export interface GoogleCloudAiplatformV1beta1ListExecutionsResponse {

		/** The Executions retrieved from the MetadataStore. */
		executions?: Array<GoogleCloudAiplatformV1beta1Execution>;

		/** A token, which can be sent as ListExecutionsRequest.page_token to retrieve the next page. If this field is not populated, there are no subsequent pages. */
		nextPageToken?: string | null;
	}

	/** Response message for MetadataService.ListExecutions. */
	export interface GoogleCloudAiplatformV1beta1ListExecutionsResponseFormProperties {

		/** A token, which can be sent as ListExecutionsRequest.page_token to retrieve the next page. If this field is not populated, there are no subsequent pages. */
		nextPageToken: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1ListExecutionsResponseFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1ListExecutionsResponseFormProperties>({
			nextPageToken: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Response message for FeatureRegistryService.ListFeatureGroups. */
	export interface GoogleCloudAiplatformV1beta1ListFeatureGroupsResponse {

		/** The FeatureGroups matching the request. */
		featureGroups?: Array<GoogleCloudAiplatformV1beta1FeatureGroup>;

		/** A token, which can be sent as ListFeatureGroupsRequest.page_token to retrieve the next page. If this field is omitted, there are no subsequent pages. */
		nextPageToken?: string | null;
	}

	/** Response message for FeatureRegistryService.ListFeatureGroups. */
	export interface GoogleCloudAiplatformV1beta1ListFeatureGroupsResponseFormProperties {

		/** A token, which can be sent as ListFeatureGroupsRequest.page_token to retrieve the next page. If this field is omitted, there are no subsequent pages. */
		nextPageToken: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1ListFeatureGroupsResponseFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1ListFeatureGroupsResponseFormProperties>({
			nextPageToken: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Response message for FeatureOnlineStoreAdminService.ListFeatureOnlineStores. */
	export interface GoogleCloudAiplatformV1beta1ListFeatureOnlineStoresResponse {

		/** The FeatureOnlineStores matching the request. */
		featureOnlineStores?: Array<GoogleCloudAiplatformV1beta1FeatureOnlineStore>;

		/** A token, which can be sent as ListFeatureOnlineStoresRequest.page_token to retrieve the next page. If this field is omitted, there are no subsequent pages. */
		nextPageToken?: string | null;
	}

	/** Response message for FeatureOnlineStoreAdminService.ListFeatureOnlineStores. */
	export interface GoogleCloudAiplatformV1beta1ListFeatureOnlineStoresResponseFormProperties {

		/** A token, which can be sent as ListFeatureOnlineStoresRequest.page_token to retrieve the next page. If this field is omitted, there are no subsequent pages. */
		nextPageToken: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1ListFeatureOnlineStoresResponseFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1ListFeatureOnlineStoresResponseFormProperties>({
			nextPageToken: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Response message for FeatureOnlineStoreAdminService.ListFeatureViewSyncs. */
	export interface GoogleCloudAiplatformV1beta1ListFeatureViewSyncsResponse {

		/** The FeatureViewSyncs matching the request. */
		featureViewSyncs?: Array<GoogleCloudAiplatformV1beta1FeatureViewSync>;

		/** A token, which can be sent as ListFeatureViewSyncsRequest.page_token to retrieve the next page. If this field is omitted, there are no subsequent pages. */
		nextPageToken?: string | null;
	}

	/** Response message for FeatureOnlineStoreAdminService.ListFeatureViewSyncs. */
	export interface GoogleCloudAiplatformV1beta1ListFeatureViewSyncsResponseFormProperties {

		/** A token, which can be sent as ListFeatureViewSyncsRequest.page_token to retrieve the next page. If this field is omitted, there are no subsequent pages. */
		nextPageToken: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1ListFeatureViewSyncsResponseFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1ListFeatureViewSyncsResponseFormProperties>({
			nextPageToken: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Response message for FeatureOnlineStoreAdminService.ListFeatureViews. */
	export interface GoogleCloudAiplatformV1beta1ListFeatureViewsResponse {

		/** The FeatureViews matching the request. */
		featureViews?: Array<GoogleCloudAiplatformV1beta1FeatureView>;

		/** A token, which can be sent as ListFeatureViewsRequest.page_token to retrieve the next page. If this field is omitted, there are no subsequent pages. */
		nextPageToken?: string | null;
	}

	/** Response message for FeatureOnlineStoreAdminService.ListFeatureViews. */
	export interface GoogleCloudAiplatformV1beta1ListFeatureViewsResponseFormProperties {

		/** A token, which can be sent as ListFeatureViewsRequest.page_token to retrieve the next page. If this field is omitted, there are no subsequent pages. */
		nextPageToken: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1ListFeatureViewsResponseFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1ListFeatureViewsResponseFormProperties>({
			nextPageToken: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Response message for FeaturestoreService.ListFeatures. Response message for FeatureRegistryService.ListFeatures. */
	export interface GoogleCloudAiplatformV1beta1ListFeaturesResponse {

		/** The Features matching the request. */
		features?: Array<GoogleCloudAiplatformV1beta1Feature>;

		/** A token, which can be sent as ListFeaturesRequest.page_token to retrieve the next page. If this field is omitted, there are no subsequent pages. */
		nextPageToken?: string | null;
	}

	/** Response message for FeaturestoreService.ListFeatures. Response message for FeatureRegistryService.ListFeatures. */
	export interface GoogleCloudAiplatformV1beta1ListFeaturesResponseFormProperties {

		/** A token, which can be sent as ListFeaturesRequest.page_token to retrieve the next page. If this field is omitted, there are no subsequent pages. */
		nextPageToken: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1ListFeaturesResponseFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1ListFeaturesResponseFormProperties>({
			nextPageToken: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Response message for FeaturestoreService.ListFeaturestores. */
	export interface GoogleCloudAiplatformV1beta1ListFeaturestoresResponse {

		/** The Featurestores matching the request. */
		featurestores?: Array<GoogleCloudAiplatformV1beta1Featurestore>;

		/** A token, which can be sent as ListFeaturestoresRequest.page_token to retrieve the next page. If this field is omitted, there are no subsequent pages. */
		nextPageToken?: string | null;
	}

	/** Response message for FeaturestoreService.ListFeaturestores. */
	export interface GoogleCloudAiplatformV1beta1ListFeaturestoresResponseFormProperties {

		/** A token, which can be sent as ListFeaturestoresRequest.page_token to retrieve the next page. If this field is omitted, there are no subsequent pages. */
		nextPageToken: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1ListFeaturestoresResponseFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1ListFeaturestoresResponseFormProperties>({
			nextPageToken: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Response message for JobService.ListHyperparameterTuningJobs */
	export interface GoogleCloudAiplatformV1beta1ListHyperparameterTuningJobsResponse {

		/** List of HyperparameterTuningJobs in the requested page. HyperparameterTuningJob.trials of the jobs will be not be returned. */
		hyperparameterTuningJobs?: Array<GoogleCloudAiplatformV1beta1HyperparameterTuningJob>;

		/** A token to retrieve the next page of results. Pass to ListHyperparameterTuningJobsRequest.page_token to obtain that page. */
		nextPageToken?: string | null;
	}

	/** Response message for JobService.ListHyperparameterTuningJobs */
	export interface GoogleCloudAiplatformV1beta1ListHyperparameterTuningJobsResponseFormProperties {

		/** A token to retrieve the next page of results. Pass to ListHyperparameterTuningJobsRequest.page_token to obtain that page. */
		nextPageToken: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1ListHyperparameterTuningJobsResponseFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1ListHyperparameterTuningJobsResponseFormProperties>({
			nextPageToken: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Response message for IndexEndpointService.ListIndexEndpoints. */
	export interface GoogleCloudAiplatformV1beta1ListIndexEndpointsResponse {

		/** List of IndexEndpoints in the requested page. */
		indexEndpoints?: Array<GoogleCloudAiplatformV1beta1IndexEndpoint>;

		/** A token to retrieve next page of results. Pass to ListIndexEndpointsRequest.page_token to obtain that page. */
		nextPageToken?: string | null;
	}

	/** Response message for IndexEndpointService.ListIndexEndpoints. */
	export interface GoogleCloudAiplatformV1beta1ListIndexEndpointsResponseFormProperties {

		/** A token to retrieve next page of results. Pass to ListIndexEndpointsRequest.page_token to obtain that page. */
		nextPageToken: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1ListIndexEndpointsResponseFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1ListIndexEndpointsResponseFormProperties>({
			nextPageToken: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Response message for IndexService.ListIndexes. */
	export interface GoogleCloudAiplatformV1beta1ListIndexesResponse {

		/** List of indexes in the requested page. */
		indexes?: Array<GoogleCloudAiplatformV1beta1Index>;

		/** A token to retrieve next page of results. Pass to ListIndexesRequest.page_token to obtain that page. */
		nextPageToken?: string | null;
	}

	/** Response message for IndexService.ListIndexes. */
	export interface GoogleCloudAiplatformV1beta1ListIndexesResponseFormProperties {

		/** A token to retrieve next page of results. Pass to ListIndexesRequest.page_token to obtain that page. */
		nextPageToken: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1ListIndexesResponseFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1ListIndexesResponseFormProperties>({
			nextPageToken: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Response message for MetadataService.ListMetadataSchemas. */
	export interface GoogleCloudAiplatformV1beta1ListMetadataSchemasResponse {

		/** The MetadataSchemas found for the MetadataStore. */
		metadataSchemas?: Array<GoogleCloudAiplatformV1beta1MetadataSchema>;

		/** A token, which can be sent as ListMetadataSchemasRequest.page_token to retrieve the next page. If this field is not populated, there are no subsequent pages. */
		nextPageToken?: string | null;
	}

	/** Response message for MetadataService.ListMetadataSchemas. */
	export interface GoogleCloudAiplatformV1beta1ListMetadataSchemasResponseFormProperties {

		/** A token, which can be sent as ListMetadataSchemasRequest.page_token to retrieve the next page. If this field is not populated, there are no subsequent pages. */
		nextPageToken: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1ListMetadataSchemasResponseFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1ListMetadataSchemasResponseFormProperties>({
			nextPageToken: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Instance of a general MetadataSchema. */
	export interface GoogleCloudAiplatformV1beta1MetadataSchema {

		/** Output only. Timestamp when this MetadataSchema was created. */
		createTime?: string | null;

		/** Description of the Metadata Schema */
		description?: string | null;

		/** Output only. The resource name of the MetadataSchema. */
		name?: string | null;

		/** Required. The raw YAML string representation of the MetadataSchema. The combination of [MetadataSchema.version] and the schema name given by `title` in [MetadataSchema.schema] must be unique within a MetadataStore. The schema is defined as an OpenAPI 3.0.2 [MetadataSchema Object](https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.2.md#schemaObject) */
		schema?: string | null;

		/** The type of the MetadataSchema. This is a property that identifies which metadata types will use the MetadataSchema. */
		schemaType?: GoogleCloudAiplatformV1beta1MetadataSchemaSchemaType | null;

		/** The version of the MetadataSchema. The version's format must match the following regular expression: `^[0-9]+.+.+$`, which would allow to order/compare different versions. Example: 1.0.0, 1.0.1, etc. */
		schemaVersion?: string | null;
	}

	/** Instance of a general MetadataSchema. */
	export interface GoogleCloudAiplatformV1beta1MetadataSchemaFormProperties {

		/** Output only. Timestamp when this MetadataSchema was created. */
		createTime: FormControl<string | null | undefined>,

		/** Description of the Metadata Schema */
		description: FormControl<string | null | undefined>,

		/** Output only. The resource name of the MetadataSchema. */
		name: FormControl<string | null | undefined>,

		/** Required. The raw YAML string representation of the MetadataSchema. The combination of [MetadataSchema.version] and the schema name given by `title` in [MetadataSchema.schema] must be unique within a MetadataStore. The schema is defined as an OpenAPI 3.0.2 [MetadataSchema Object](https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.2.md#schemaObject) */
		schema: FormControl<string | null | undefined>,

		/** The type of the MetadataSchema. This is a property that identifies which metadata types will use the MetadataSchema. */
		schemaType: FormControl<GoogleCloudAiplatformV1beta1MetadataSchemaSchemaType | null | undefined>,

		/** The version of the MetadataSchema. The version's format must match the following regular expression: `^[0-9]+.+.+$`, which would allow to order/compare different versions. Example: 1.0.0, 1.0.1, etc. */
		schemaVersion: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1MetadataSchemaFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1MetadataSchemaFormProperties>({
			createTime: new FormControl<string | null | undefined>(undefined),
			description: new FormControl<string | null | undefined>(undefined),
			name: new FormControl<string | null | undefined>(undefined),
			schema: new FormControl<string | null | undefined>(undefined),
			schemaType: new FormControl<GoogleCloudAiplatformV1beta1MetadataSchemaSchemaType | null | undefined>(undefined),
			schemaVersion: new FormControl<string | null | undefined>(undefined),
		});

	}

	export enum GoogleCloudAiplatformV1beta1MetadataSchemaSchemaType { METADATA_SCHEMA_TYPE_UNSPECIFIED = 0, ARTIFACT_TYPE = 1, EXECUTION_TYPE = 2, CONTEXT_TYPE = 3 }


	/** Response message for MetadataService.ListMetadataStores. */
	export interface GoogleCloudAiplatformV1beta1ListMetadataStoresResponse {

		/** The MetadataStores found for the Location. */
		metadataStores?: Array<GoogleCloudAiplatformV1beta1MetadataStore>;

		/** A token, which can be sent as ListMetadataStoresRequest.page_token to retrieve the next page. If this field is not populated, there are no subsequent pages. */
		nextPageToken?: string | null;
	}

	/** Response message for MetadataService.ListMetadataStores. */
	export interface GoogleCloudAiplatformV1beta1ListMetadataStoresResponseFormProperties {

		/** A token, which can be sent as ListMetadataStoresRequest.page_token to retrieve the next page. If this field is not populated, there are no subsequent pages. */
		nextPageToken: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1ListMetadataStoresResponseFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1ListMetadataStoresResponseFormProperties>({
			nextPageToken: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Instance of a metadata store. Contains a set of metadata that can be queried. */
	export interface GoogleCloudAiplatformV1beta1MetadataStore {

		/** Output only. Timestamp when this MetadataStore was created. */
		createTime?: string | null;

		/** Description of the MetadataStore. */
		description?: string | null;

		/** Represents a customer-managed encryption key spec that can be applied to a top-level resource. */
		encryptionSpec?: GoogleCloudAiplatformV1beta1EncryptionSpec;

		/** Output only. The resource name of the MetadataStore instance. */
		name?: string | null;

		/** Represents state information for a MetadataStore. */
		state?: GoogleCloudAiplatformV1beta1MetadataStoreMetadataStoreState;

		/** Output only. Timestamp when this MetadataStore was last updated. */
		updateTime?: string | null;
	}

	/** Instance of a metadata store. Contains a set of metadata that can be queried. */
	export interface GoogleCloudAiplatformV1beta1MetadataStoreFormProperties {

		/** Output only. Timestamp when this MetadataStore was created. */
		createTime: FormControl<string | null | undefined>,

		/** Description of the MetadataStore. */
		description: FormControl<string | null | undefined>,

		/** Output only. The resource name of the MetadataStore instance. */
		name: FormControl<string | null | undefined>,

		/** Output only. Timestamp when this MetadataStore was last updated. */
		updateTime: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1MetadataStoreFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1MetadataStoreFormProperties>({
			createTime: new FormControl<string | null | undefined>(undefined),
			description: new FormControl<string | null | undefined>(undefined),
			name: new FormControl<string | null | undefined>(undefined),
			updateTime: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Represents state information for a MetadataStore. */
	export interface GoogleCloudAiplatformV1beta1MetadataStoreMetadataStoreState {

		/** The disk utilization of the MetadataStore in bytes. */
		diskUtilizationBytes?: string | null;
	}

	/** Represents state information for a MetadataStore. */
	export interface GoogleCloudAiplatformV1beta1MetadataStoreMetadataStoreStateFormProperties {

		/** The disk utilization of the MetadataStore in bytes. */
		diskUtilizationBytes: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1MetadataStoreMetadataStoreStateFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1MetadataStoreMetadataStoreStateFormProperties>({
			diskUtilizationBytes: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Response message for JobService.ListModelDeploymentMonitoringJobs. */
	export interface GoogleCloudAiplatformV1beta1ListModelDeploymentMonitoringJobsResponse {

		/** A list of ModelDeploymentMonitoringJobs that matches the specified filter in the request. */
		modelDeploymentMonitoringJobs?: Array<GoogleCloudAiplatformV1beta1ModelDeploymentMonitoringJob>;

		/** The standard List next-page token. */
		nextPageToken?: string | null;
	}

	/** Response message for JobService.ListModelDeploymentMonitoringJobs. */
	export interface GoogleCloudAiplatformV1beta1ListModelDeploymentMonitoringJobsResponseFormProperties {

		/** The standard List next-page token. */
		nextPageToken: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1ListModelDeploymentMonitoringJobsResponseFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1ListModelDeploymentMonitoringJobsResponseFormProperties>({
			nextPageToken: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Represents a job that runs periodically to monitor the deployed models in an endpoint. It will analyze the logged training & prediction data to detect any abnormal behaviors. */
	export interface GoogleCloudAiplatformV1beta1ModelDeploymentMonitoringJob {

		/** YAML schema file uri describing the format of a single instance that you want Tensorflow Data Validation (TFDV) to analyze. If this field is empty, all the feature data types are inferred from predict_instance_schema_uri, meaning that TFDV will use the data in the exact format(data type) as prediction request/response. If there are any data type differences between predict instance and TFDV instance, this field can be used to override the schema. For models trained with Vertex AI, this field must be set as all the fields in predict instance formatted as string. */
		analysisInstanceSchemaUri?: string | null;

		/** Output only. The created bigquery tables for the job under customer project. Customer could do their own query & analysis. There could be 4 log tables in maximum: 1. Training data logging predict request/response 2. Serving data logging predict request/response */
		bigqueryTables?: Array<GoogleCloudAiplatformV1beta1ModelDeploymentMonitoringBigQueryTable>;

		/** Output only. Timestamp when this ModelDeploymentMonitoringJob was created. */
		createTime?: string | null;

		/** Required. The user-defined name of the ModelDeploymentMonitoringJob. The name can be up to 128 characters long and can consist of any UTF-8 characters. Display name of a ModelDeploymentMonitoringJob. */
		displayName?: string | null;

		/** If true, the scheduled monitoring pipeline logs are sent to Google Cloud Logging, including pipeline status and anomalies detected. Please note the logs incur cost, which are subject to [Cloud Logging pricing](https://cloud.google.com/logging#pricing). */
		enableMonitoringPipelineLogs?: boolean | null;

		/** Represents a customer-managed encryption key spec that can be applied to a top-level resource. */
		encryptionSpec?: GoogleCloudAiplatformV1beta1EncryptionSpec;

		/** Required. Endpoint resource name. Format: `projects/{project}/locations/{location}/endpoints/{endpoint}` */
		endpoint?: string | null;

		/** The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors). */
		error?: GoogleRpcStatus;

		/** The labels with user-defined metadata to organize your ModelDeploymentMonitoringJob. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. See https://goo.gl/xmQnxf for more information and examples of labels. */
		labels?: {[id: string]: string };

		/** All metadata of most recent monitoring pipelines. */
		latestMonitoringPipelineMetadata?: GoogleCloudAiplatformV1beta1ModelDeploymentMonitoringJobLatestMonitoringPipelineMetadata;

		/** The TTL of BigQuery tables in user projects which stores logs. A day is the basic unit of the TTL and we take the ceil of TTL/86400(a day). e.g. { second: 3600} indicates ttl = 1 day. */
		logTtl?: string | null;

		/** Sampling Strategy for logging, can be for both training and prediction dataset. */
		loggingSamplingStrategy?: GoogleCloudAiplatformV1beta1SamplingStrategy;

		/** Required. The config for monitoring objectives. This is a per DeployedModel config. Each DeployedModel needs to be configured separately. */
		modelDeploymentMonitoringObjectiveConfigs?: Array<GoogleCloudAiplatformV1beta1ModelDeploymentMonitoringObjectiveConfig>;

		/** The config for scheduling monitoring job. */
		modelDeploymentMonitoringScheduleConfig?: GoogleCloudAiplatformV1beta1ModelDeploymentMonitoringScheduleConfig;
		modelMonitoringAlertConfig?: GoogleCloudAiplatformV1beta1ModelMonitoringAlertConfig;

		/** Output only. Resource name of a ModelDeploymentMonitoringJob. */
		name?: string | null;

		/** Output only. Timestamp when this monitoring pipeline will be scheduled to run for the next round. */
		nextScheduleTime?: string | null;

		/** YAML schema file uri describing the format of a single instance, which are given to format this Endpoint's prediction (and explanation). If not set, we will generate predict schema from collected predict requests. */
		predictInstanceSchemaUri?: string | null;

		/** Sample Predict instance, same format as PredictRequest.instances, this can be set as a replacement of ModelDeploymentMonitoringJob.predict_instance_schema_uri. If not set, we will generate predict schema from collected predict requests. */
		samplePredictInstance?: any;

		/** Output only. Schedule state when the monitoring job is in Running state. */
		scheduleState?: GoogleCloudAiplatformV1beta1ModelDeploymentMonitoringJobScheduleState | null;

		/** Output only. The detailed state of the monitoring job. When the job is still creating, the state will be 'PENDING'. Once the job is successfully created, the state will be 'RUNNING'. Pause the job, the state will be 'PAUSED'. Resume the job, the state will return to 'RUNNING'. */
		state?: GoogleCloudAiplatformV1beta1BatchPredictionJobState | null;

		/** The Google Cloud Storage location where the output is to be written to. */
		statsAnomaliesBaseDirectory?: GoogleCloudAiplatformV1beta1GcsDestination;

		/** Output only. Timestamp when this ModelDeploymentMonitoringJob was updated most recently. */
		updateTime?: string | null;
	}

	/** Represents a job that runs periodically to monitor the deployed models in an endpoint. It will analyze the logged training & prediction data to detect any abnormal behaviors. */
	export interface GoogleCloudAiplatformV1beta1ModelDeploymentMonitoringJobFormProperties {

		/** YAML schema file uri describing the format of a single instance that you want Tensorflow Data Validation (TFDV) to analyze. If this field is empty, all the feature data types are inferred from predict_instance_schema_uri, meaning that TFDV will use the data in the exact format(data type) as prediction request/response. If there are any data type differences between predict instance and TFDV instance, this field can be used to override the schema. For models trained with Vertex AI, this field must be set as all the fields in predict instance formatted as string. */
		analysisInstanceSchemaUri: FormControl<string | null | undefined>,

		/** Output only. Timestamp when this ModelDeploymentMonitoringJob was created. */
		createTime: FormControl<string | null | undefined>,

		/** Required. The user-defined name of the ModelDeploymentMonitoringJob. The name can be up to 128 characters long and can consist of any UTF-8 characters. Display name of a ModelDeploymentMonitoringJob. */
		displayName: FormControl<string | null | undefined>,

		/** If true, the scheduled monitoring pipeline logs are sent to Google Cloud Logging, including pipeline status and anomalies detected. Please note the logs incur cost, which are subject to [Cloud Logging pricing](https://cloud.google.com/logging#pricing). */
		enableMonitoringPipelineLogs: FormControl<boolean | null | undefined>,

		/** Required. Endpoint resource name. Format: `projects/{project}/locations/{location}/endpoints/{endpoint}` */
		endpoint: FormControl<string | null | undefined>,

		/** The labels with user-defined metadata to organize your ModelDeploymentMonitoringJob. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. See https://goo.gl/xmQnxf for more information and examples of labels. */
		labels: FormControl<{[id: string]: string } | null | undefined>,

		/** The TTL of BigQuery tables in user projects which stores logs. A day is the basic unit of the TTL and we take the ceil of TTL/86400(a day). e.g. { second: 3600} indicates ttl = 1 day. */
		logTtl: FormControl<string | null | undefined>,

		/** Output only. Resource name of a ModelDeploymentMonitoringJob. */
		name: FormControl<string | null | undefined>,

		/** Output only. Timestamp when this monitoring pipeline will be scheduled to run for the next round. */
		nextScheduleTime: FormControl<string | null | undefined>,

		/** YAML schema file uri describing the format of a single instance, which are given to format this Endpoint's prediction (and explanation). If not set, we will generate predict schema from collected predict requests. */
		predictInstanceSchemaUri: FormControl<string | null | undefined>,

		/** Sample Predict instance, same format as PredictRequest.instances, this can be set as a replacement of ModelDeploymentMonitoringJob.predict_instance_schema_uri. If not set, we will generate predict schema from collected predict requests. */
		samplePredictInstance: FormControl<any | null | undefined>,

		/** Output only. Schedule state when the monitoring job is in Running state. */
		scheduleState: FormControl<GoogleCloudAiplatformV1beta1ModelDeploymentMonitoringJobScheduleState | null | undefined>,

		/** Output only. The detailed state of the monitoring job. When the job is still creating, the state will be 'PENDING'. Once the job is successfully created, the state will be 'RUNNING'. Pause the job, the state will be 'PAUSED'. Resume the job, the state will return to 'RUNNING'. */
		state: FormControl<GoogleCloudAiplatformV1beta1BatchPredictionJobState | null | undefined>,

		/** Output only. Timestamp when this ModelDeploymentMonitoringJob was updated most recently. */
		updateTime: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1ModelDeploymentMonitoringJobFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1ModelDeploymentMonitoringJobFormProperties>({
			analysisInstanceSchemaUri: new FormControl<string | null | undefined>(undefined),
			createTime: new FormControl<string | null | undefined>(undefined),
			displayName: new FormControl<string | null | undefined>(undefined),
			enableMonitoringPipelineLogs: new FormControl<boolean | null | undefined>(undefined),
			endpoint: new FormControl<string | null | undefined>(undefined),
			labels: new FormControl<{[id: string]: string } | null | undefined>(undefined),
			logTtl: new FormControl<string | null | undefined>(undefined),
			name: new FormControl<string | null | undefined>(undefined),
			nextScheduleTime: new FormControl<string | null | undefined>(undefined),
			predictInstanceSchemaUri: new FormControl<string | null | undefined>(undefined),
			samplePredictInstance: new FormControl<any | null | undefined>(undefined),
			scheduleState: new FormControl<GoogleCloudAiplatformV1beta1ModelDeploymentMonitoringJobScheduleState | null | undefined>(undefined),
			state: new FormControl<GoogleCloudAiplatformV1beta1BatchPredictionJobState | null | undefined>(undefined),
			updateTime: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** ModelDeploymentMonitoringBigQueryTable specifies the BigQuery table name as well as some information of the logs stored in this table. */
	export interface GoogleCloudAiplatformV1beta1ModelDeploymentMonitoringBigQueryTable {

		/** The created BigQuery table to store logs. Customer could do their own query & analysis. Format: `bq://.model_deployment_monitoring_._` */
		bigqueryTablePath?: string | null;

		/** The source of log. */
		logSource?: GoogleCloudAiplatformV1beta1ModelDeploymentMonitoringBigQueryTableLogSource | null;

		/** The type of log. */
		logType?: GoogleCloudAiplatformV1beta1ModelDeploymentMonitoringBigQueryTableLogType | null;
	}

	/** ModelDeploymentMonitoringBigQueryTable specifies the BigQuery table name as well as some information of the logs stored in this table. */
	export interface GoogleCloudAiplatformV1beta1ModelDeploymentMonitoringBigQueryTableFormProperties {

		/** The created BigQuery table to store logs. Customer could do their own query & analysis. Format: `bq://.model_deployment_monitoring_._` */
		bigqueryTablePath: FormControl<string | null | undefined>,

		/** The source of log. */
		logSource: FormControl<GoogleCloudAiplatformV1beta1ModelDeploymentMonitoringBigQueryTableLogSource | null | undefined>,

		/** The type of log. */
		logType: FormControl<GoogleCloudAiplatformV1beta1ModelDeploymentMonitoringBigQueryTableLogType | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1ModelDeploymentMonitoringBigQueryTableFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1ModelDeploymentMonitoringBigQueryTableFormProperties>({
			bigqueryTablePath: new FormControl<string | null | undefined>(undefined),
			logSource: new FormControl<GoogleCloudAiplatformV1beta1ModelDeploymentMonitoringBigQueryTableLogSource | null | undefined>(undefined),
			logType: new FormControl<GoogleCloudAiplatformV1beta1ModelDeploymentMonitoringBigQueryTableLogType | null | undefined>(undefined),
		});

	}

	export enum GoogleCloudAiplatformV1beta1ModelDeploymentMonitoringBigQueryTableLogSource { LOG_SOURCE_UNSPECIFIED = 0, TRAINING = 1, SERVING = 2 }

	export enum GoogleCloudAiplatformV1beta1ModelDeploymentMonitoringBigQueryTableLogType { LOG_TYPE_UNSPECIFIED = 0, PREDICT = 1, EXPLAIN = 2 }


	/** All metadata of most recent monitoring pipelines. */
	export interface GoogleCloudAiplatformV1beta1ModelDeploymentMonitoringJobLatestMonitoringPipelineMetadata {

		/** The time that most recent monitoring pipelines that is related to this run. */
		runTime?: string | null;

		/** The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors). */
		status?: GoogleRpcStatus;
	}

	/** All metadata of most recent monitoring pipelines. */
	export interface GoogleCloudAiplatformV1beta1ModelDeploymentMonitoringJobLatestMonitoringPipelineMetadataFormProperties {

		/** The time that most recent monitoring pipelines that is related to this run. */
		runTime: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1ModelDeploymentMonitoringJobLatestMonitoringPipelineMetadataFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1ModelDeploymentMonitoringJobLatestMonitoringPipelineMetadataFormProperties>({
			runTime: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** ModelDeploymentMonitoringObjectiveConfig contains the pair of deployed_model_id to ModelMonitoringObjectiveConfig. */
	export interface GoogleCloudAiplatformV1beta1ModelDeploymentMonitoringObjectiveConfig {

		/** The DeployedModel ID of the objective config. */
		deployedModelId?: string | null;

		/** The objective configuration for model monitoring, including the information needed to detect anomalies for one particular model. */
		objectiveConfig?: GoogleCloudAiplatformV1beta1ModelMonitoringObjectiveConfig;
	}

	/** ModelDeploymentMonitoringObjectiveConfig contains the pair of deployed_model_id to ModelMonitoringObjectiveConfig. */
	export interface GoogleCloudAiplatformV1beta1ModelDeploymentMonitoringObjectiveConfigFormProperties {

		/** The DeployedModel ID of the objective config. */
		deployedModelId: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1ModelDeploymentMonitoringObjectiveConfigFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1ModelDeploymentMonitoringObjectiveConfigFormProperties>({
			deployedModelId: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** The config for scheduling monitoring job. */
	export interface GoogleCloudAiplatformV1beta1ModelDeploymentMonitoringScheduleConfig {

		/** Required. The model monitoring job scheduling interval. It will be rounded up to next full hour. This defines how often the monitoring jobs are triggered. */
		monitorInterval?: string | null;

		/** The time window of the prediction data being included in each prediction dataset. This window specifies how long the data should be collected from historical model results for each run. If not set, ModelDeploymentMonitoringScheduleConfig.monitor_interval will be used. e.g. If currently the cutoff time is 2022-01-08 14:30:00 and the monitor_window is set to be 3600, then data from 2022-01-08 13:30:00 to 2022-01-08 14:30:00 will be retrieved and aggregated to calculate the monitoring statistics. */
		monitorWindow?: string | null;
	}

	/** The config for scheduling monitoring job. */
	export interface GoogleCloudAiplatformV1beta1ModelDeploymentMonitoringScheduleConfigFormProperties {

		/** Required. The model monitoring job scheduling interval. It will be rounded up to next full hour. This defines how often the monitoring jobs are triggered. */
		monitorInterval: FormControl<string | null | undefined>,

		/** The time window of the prediction data being included in each prediction dataset. This window specifies how long the data should be collected from historical model results for each run. If not set, ModelDeploymentMonitoringScheduleConfig.monitor_interval will be used. e.g. If currently the cutoff time is 2022-01-08 14:30:00 and the monitor_window is set to be 3600, then data from 2022-01-08 13:30:00 to 2022-01-08 14:30:00 will be retrieved and aggregated to calculate the monitoring statistics. */
		monitorWindow: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1ModelDeploymentMonitoringScheduleConfigFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1ModelDeploymentMonitoringScheduleConfigFormProperties>({
			monitorInterval: new FormControl<string | null | undefined>(undefined),
			monitorWindow: new FormControl<string | null | undefined>(undefined),
		});

	}

	export enum GoogleCloudAiplatformV1beta1ModelDeploymentMonitoringJobScheduleState { MONITORING_SCHEDULE_STATE_UNSPECIFIED = 0, PENDING = 1, OFFLINE = 2, RUNNING = 3 }


	/** Response message for ModelService.ListModelEvaluationSlices. */
	export interface GoogleCloudAiplatformV1beta1ListModelEvaluationSlicesResponse {

		/** List of ModelEvaluations in the requested page. */
		modelEvaluationSlices?: Array<GoogleCloudAiplatformV1beta1ModelEvaluationSlice>;

		/** A token to retrieve next page of results. Pass to ListModelEvaluationSlicesRequest.page_token to obtain that page. */
		nextPageToken?: string | null;
	}

	/** Response message for ModelService.ListModelEvaluationSlices. */
	export interface GoogleCloudAiplatformV1beta1ListModelEvaluationSlicesResponseFormProperties {

		/** A token to retrieve next page of results. Pass to ListModelEvaluationSlicesRequest.page_token to obtain that page. */
		nextPageToken: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1ListModelEvaluationSlicesResponseFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1ListModelEvaluationSlicesResponseFormProperties>({
			nextPageToken: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Response message for ModelService.ListModelEvaluations. */
	export interface GoogleCloudAiplatformV1beta1ListModelEvaluationsResponse {

		/** List of ModelEvaluations in the requested page. */
		modelEvaluations?: Array<GoogleCloudAiplatformV1beta1ModelEvaluation>;

		/** A token to retrieve next page of results. Pass to ListModelEvaluationsRequest.page_token to obtain that page. */
		nextPageToken?: string | null;
	}

	/** Response message for ModelService.ListModelEvaluations. */
	export interface GoogleCloudAiplatformV1beta1ListModelEvaluationsResponseFormProperties {

		/** A token to retrieve next page of results. Pass to ListModelEvaluationsRequest.page_token to obtain that page. */
		nextPageToken: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1ListModelEvaluationsResponseFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1ListModelEvaluationsResponseFormProperties>({
			nextPageToken: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Response message for ModelService.ListModelVersions */
	export interface GoogleCloudAiplatformV1beta1ListModelVersionsResponse {

		/** List of Model versions in the requested page. In the returned Model name field, version ID instead of regvision tag will be included. */
		models?: Array<GoogleCloudAiplatformV1beta1Model>;

		/** A token to retrieve the next page of results. Pass to ListModelVersionsRequest.page_token to obtain that page. */
		nextPageToken?: string | null;
	}

	/** Response message for ModelService.ListModelVersions */
	export interface GoogleCloudAiplatformV1beta1ListModelVersionsResponseFormProperties {

		/** A token to retrieve the next page of results. Pass to ListModelVersionsRequest.page_token to obtain that page. */
		nextPageToken: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1ListModelVersionsResponseFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1ListModelVersionsResponseFormProperties>({
			nextPageToken: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** A trained machine learning Model. */
	export interface GoogleCloudAiplatformV1beta1Model {

		/** Immutable. The path to the directory containing the Model artifact and any of its supporting files. Not present for AutoML Models or Large Models. */
		artifactUri?: string | null;

		/** Specification of a container for serving predictions. Some fields in this message correspond to fields in the [Kubernetes Container v1 core specification](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.23/#container-v1-core). */
		containerSpec?: GoogleCloudAiplatformV1beta1ModelContainerSpec;

		/** Output only. Timestamp when this Model was uploaded into Vertex AI. */
		createTime?: string | null;

		/** Output only. The pointers to DeployedModels created from this Model. Note that Model could have been deployed to Endpoints in different Locations. */
		deployedModels?: Array<GoogleCloudAiplatformV1beta1DeployedModelRef>;

		/** The description of the Model. */
		description?: string | null;

		/** Required. The display name of the Model. The name can be up to 128 characters long and can consist of any UTF-8 characters. */
		displayName?: string | null;

		/** Represents a customer-managed encryption key spec that can be applied to a top-level resource. */
		encryptionSpec?: GoogleCloudAiplatformV1beta1EncryptionSpec;

		/** Used to perform consistent read-modify-write updates. If not set, a blind "overwrite" update happens. */
		etag?: string | null;

		/** Specification of Model explanation. */
		explanationSpec?: GoogleCloudAiplatformV1beta1ExplanationSpec;

		/** The labels with user-defined metadata to organize your Models. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. See https://goo.gl/xmQnxf for more information and examples of labels. */
		labels?: {[id: string]: string };

		/** Immutable. An additional information about the Model; the schema of the metadata can be found in metadata_schema. Unset if the Model does not have any additional information. */
		metadata?: any;

		/** Output only. The resource name of the Artifact that was created in MetadataStore when creating the Model. The Artifact resource name pattern is `projects/{project}/locations/{location}/metadataStores/{metadata_store}/artifacts/{artifact}`. */
		metadataArtifact?: string | null;

		/** Immutable. Points to a YAML file stored on Google Cloud Storage describing additional information about the Model, that is specific to it. Unset if the Model does not have any additional information. The schema is defined as an OpenAPI 3.0.2 [Schema Object](https://github.com/OAI/OpenAPI-Specification/blob/main/versions/3.0.2.md#schemaObject). AutoML Models always have this field populated by Vertex AI, if no additional metadata is needed, this field is set to an empty string. Note: The URI given on output will be immutable and probably different, including the URI scheme, than the one given on input. The output URI will point to a location where the user only has a read access. */
		metadataSchemaUri?: string | null;

		/** Detail description of the source information of the model. */
		modelSourceInfo?: GoogleCloudAiplatformV1beta1ModelSourceInfo;

		/** The resource name of the Model. */
		name?: string | null;

		/** Contains information about the original Model if this Model is a copy. */
		originalModelInfo?: GoogleCloudAiplatformV1beta1ModelOriginalModelInfo;

		/** Contains the schemata used in Model's predictions and explanations via PredictionService.Predict, PredictionService.Explain and BatchPredictionJob. */
		predictSchemata?: GoogleCloudAiplatformV1beta1PredictSchemata;

		/** Output only. When this Model is deployed, its prediction resources are described by the `prediction_resources` field of the Endpoint.deployed_models object. Because not all Models support all resource configuration types, the configuration types this Model supports are listed here. If no configuration types are listed, the Model cannot be deployed to an Endpoint and does not support online predictions (PredictionService.Predict or PredictionService.Explain). Such a Model can serve predictions by using a BatchPredictionJob, if it has at least one entry each in supported_input_storage_formats and supported_output_storage_formats. */
		supportedDeploymentResourcesTypes?: Array<string>;

		/** Output only. The formats in which this Model may be exported. If empty, this Model is not available for export. */
		supportedExportFormats?: Array<GoogleCloudAiplatformV1beta1ModelExportFormat>;

		/** Output only. The formats this Model supports in BatchPredictionJob.input_config. If PredictSchemata.instance_schema_uri exists, the instances should be given as per that schema. The possible formats are: * `jsonl` The JSON Lines format, where each instance is a single line. Uses GcsSource. * `csv` The CSV format, where each instance is a single comma-separated line. The first line in the file is the header, containing comma-separated field names. Uses GcsSource. * `tf-record` The TFRecord format, where each instance is a single record in tfrecord syntax. Uses GcsSource. * `tf-record-gzip` Similar to `tf-record`, but the file is gzipped. Uses GcsSource. * `bigquery` Each instance is a single row in BigQuery. Uses BigQuerySource. * `file-list` Each line of the file is the location of an instance to process, uses `gcs_source` field of the InputConfig object. If this Model doesn't support any of these formats it means it cannot be used with a BatchPredictionJob. However, if it has supported_deployment_resources_types, it could serve online predictions by using PredictionService.Predict or PredictionService.Explain. */
		supportedInputStorageFormats?: Array<string>;

		/** Output only. The formats this Model supports in BatchPredictionJob.output_config. If both PredictSchemata.instance_schema_uri and PredictSchemata.prediction_schema_uri exist, the predictions are returned together with their instances. In other words, the prediction has the original instance data first, followed by the actual prediction content (as per the schema). The possible formats are: * `jsonl` The JSON Lines format, where each prediction is a single line. Uses GcsDestination. * `csv` The CSV format, where each prediction is a single comma-separated line. The first line in the file is the header, containing comma-separated field names. Uses GcsDestination. * `bigquery` Each prediction is a single row in a BigQuery table, uses BigQueryDestination . If this Model doesn't support any of these formats it means it cannot be used with a BatchPredictionJob. However, if it has supported_deployment_resources_types, it could serve online predictions by using PredictionService.Predict or PredictionService.Explain. */
		supportedOutputStorageFormats?: Array<string>;

		/** Output only. The resource name of the TrainingPipeline that uploaded this Model, if any. */
		trainingPipeline?: string | null;

		/** Output only. Timestamp when this Model was most recently updated. */
		updateTime?: string | null;

		/** User provided version aliases so that a model version can be referenced via alias (i.e. `projects/{project}/locations/{location}/models/{model_id}@{version_alias}` instead of auto-generated version id (i.e. `projects/{project}/locations/{location}/models/{model_id}@{version_id})`. The format is a-z{0,126}[a-z0-9] to distinguish from version_id. A default version alias will be created for the first version of the model, and there must be exactly one default version alias for a model. */
		versionAliases?: Array<string>;

		/** Output only. Timestamp when this version was created. */
		versionCreateTime?: string | null;

		/** The description of this version. */
		versionDescription?: string | null;

		/** Output only. Immutable. The version ID of the model. A new version is committed when a new model version is uploaded or trained under an existing model id. It is an auto-incrementing decimal number in string representation. */
		versionId?: string | null;

		/** Output only. Timestamp when this version was most recently updated. */
		versionUpdateTime?: string | null;
	}

	/** A trained machine learning Model. */
	export interface GoogleCloudAiplatformV1beta1ModelFormProperties {

		/** Immutable. The path to the directory containing the Model artifact and any of its supporting files. Not present for AutoML Models or Large Models. */
		artifactUri: FormControl<string | null | undefined>,

		/** Output only. Timestamp when this Model was uploaded into Vertex AI. */
		createTime: FormControl<string | null | undefined>,

		/** The description of the Model. */
		description: FormControl<string | null | undefined>,

		/** Required. The display name of the Model. The name can be up to 128 characters long and can consist of any UTF-8 characters. */
		displayName: FormControl<string | null | undefined>,

		/** Used to perform consistent read-modify-write updates. If not set, a blind "overwrite" update happens. */
		etag: FormControl<string | null | undefined>,

		/** The labels with user-defined metadata to organize your Models. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. See https://goo.gl/xmQnxf for more information and examples of labels. */
		labels: FormControl<{[id: string]: string } | null | undefined>,

		/** Immutable. An additional information about the Model; the schema of the metadata can be found in metadata_schema. Unset if the Model does not have any additional information. */
		metadata: FormControl<any | null | undefined>,

		/** Output only. The resource name of the Artifact that was created in MetadataStore when creating the Model. The Artifact resource name pattern is `projects/{project}/locations/{location}/metadataStores/{metadata_store}/artifacts/{artifact}`. */
		metadataArtifact: FormControl<string | null | undefined>,

		/** Immutable. Points to a YAML file stored on Google Cloud Storage describing additional information about the Model, that is specific to it. Unset if the Model does not have any additional information. The schema is defined as an OpenAPI 3.0.2 [Schema Object](https://github.com/OAI/OpenAPI-Specification/blob/main/versions/3.0.2.md#schemaObject). AutoML Models always have this field populated by Vertex AI, if no additional metadata is needed, this field is set to an empty string. Note: The URI given on output will be immutable and probably different, including the URI scheme, than the one given on input. The output URI will point to a location where the user only has a read access. */
		metadataSchemaUri: FormControl<string | null | undefined>,

		/** The resource name of the Model. */
		name: FormControl<string | null | undefined>,

		/** Output only. The resource name of the TrainingPipeline that uploaded this Model, if any. */
		trainingPipeline: FormControl<string | null | undefined>,

		/** Output only. Timestamp when this Model was most recently updated. */
		updateTime: FormControl<string | null | undefined>,

		/** Output only. Timestamp when this version was created. */
		versionCreateTime: FormControl<string | null | undefined>,

		/** The description of this version. */
		versionDescription: FormControl<string | null | undefined>,

		/** Output only. Immutable. The version ID of the model. A new version is committed when a new model version is uploaded or trained under an existing model id. It is an auto-incrementing decimal number in string representation. */
		versionId: FormControl<string | null | undefined>,

		/** Output only. Timestamp when this version was most recently updated. */
		versionUpdateTime: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1ModelFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1ModelFormProperties>({
			artifactUri: new FormControl<string | null | undefined>(undefined),
			createTime: new FormControl<string | null | undefined>(undefined),
			description: new FormControl<string | null | undefined>(undefined),
			displayName: new FormControl<string | null | undefined>(undefined),
			etag: new FormControl<string | null | undefined>(undefined),
			labels: new FormControl<{[id: string]: string } | null | undefined>(undefined),
			metadata: new FormControl<any | null | undefined>(undefined),
			metadataArtifact: new FormControl<string | null | undefined>(undefined),
			metadataSchemaUri: new FormControl<string | null | undefined>(undefined),
			name: new FormControl<string | null | undefined>(undefined),
			trainingPipeline: new FormControl<string | null | undefined>(undefined),
			updateTime: new FormControl<string | null | undefined>(undefined),
			versionCreateTime: new FormControl<string | null | undefined>(undefined),
			versionDescription: new FormControl<string | null | undefined>(undefined),
			versionId: new FormControl<string | null | undefined>(undefined),
			versionUpdateTime: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Detail description of the source information of the model. */
	export interface GoogleCloudAiplatformV1beta1ModelSourceInfo {

		/** If this Model is copy of another Model. If true then source_type pertains to the original. */
		copy?: boolean | null;

		/** Type of the model source. */
		sourceType?: GoogleCloudAiplatformV1beta1ModelSourceInfoSourceType | null;
	}

	/** Detail description of the source information of the model. */
	export interface GoogleCloudAiplatformV1beta1ModelSourceInfoFormProperties {

		/** If this Model is copy of another Model. If true then source_type pertains to the original. */
		copy: FormControl<boolean | null | undefined>,

		/** Type of the model source. */
		sourceType: FormControl<GoogleCloudAiplatformV1beta1ModelSourceInfoSourceType | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1ModelSourceInfoFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1ModelSourceInfoFormProperties>({
			copy: new FormControl<boolean | null | undefined>(undefined),
			sourceType: new FormControl<GoogleCloudAiplatformV1beta1ModelSourceInfoSourceType | null | undefined>(undefined),
		});

	}

	export enum GoogleCloudAiplatformV1beta1ModelSourceInfoSourceType { MODEL_SOURCE_TYPE_UNSPECIFIED = 0, AUTOML = 1, CUSTOM = 2, BQML = 3, MODEL_GARDEN = 4, GENIE = 5, CUSTOM_TEXT_EMBEDDING = 6 }


	/** Contains information about the original Model if this Model is a copy. */
	export interface GoogleCloudAiplatformV1beta1ModelOriginalModelInfo {

		/** Output only. The resource name of the Model this Model is a copy of, including the revision. Format: `projects/{project}/locations/{location}/models/{model_id}@{version_id}` */
		model?: string | null;
	}

	/** Contains information about the original Model if this Model is a copy. */
	export interface GoogleCloudAiplatformV1beta1ModelOriginalModelInfoFormProperties {

		/** Output only. The resource name of the Model this Model is a copy of, including the revision. Format: `projects/{project}/locations/{location}/models/{model_id}@{version_id}` */
		model: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1ModelOriginalModelInfoFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1ModelOriginalModelInfoFormProperties>({
			model: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Represents export format supported by the Model. All formats export to Google Cloud Storage. */
	export interface GoogleCloudAiplatformV1beta1ModelExportFormat {

		/** Output only. The content of this Model that may be exported. */
		exportableContents?: Array<string>;

		/** Output only. The ID of the export format. The possible format IDs are: * `tflite` Used for Android mobile devices. * `edgetpu-tflite` Used for [Edge TPU](https://cloud.google.com/edge-tpu/) devices. * `tf-saved-model` A tensorflow model in SavedModel format. * `tf-js` A [TensorFlow.js](https://www.tensorflow.org/js) model that can be used in the browser and in Node.js using JavaScript. * `core-ml` Used for iOS mobile devices. * `custom-trained` A Model that was uploaded or trained by custom code. */
		id?: string | null;
	}

	/** Represents export format supported by the Model. All formats export to Google Cloud Storage. */
	export interface GoogleCloudAiplatformV1beta1ModelExportFormatFormProperties {

		/** Output only. The ID of the export format. The possible format IDs are: * `tflite` Used for Android mobile devices. * `edgetpu-tflite` Used for [Edge TPU](https://cloud.google.com/edge-tpu/) devices. * `tf-saved-model` A tensorflow model in SavedModel format. * `tf-js` A [TensorFlow.js](https://www.tensorflow.org/js) model that can be used in the browser and in Node.js using JavaScript. * `core-ml` Used for iOS mobile devices. * `custom-trained` A Model that was uploaded or trained by custom code. */
		id: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1ModelExportFormatFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1ModelExportFormatFormProperties>({
			id: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Response message for ModelService.ListModels */
	export interface GoogleCloudAiplatformV1beta1ListModelsResponse {

		/** List of Models in the requested page. */
		models?: Array<GoogleCloudAiplatformV1beta1Model>;

		/** A token to retrieve next page of results. Pass to ListModelsRequest.page_token to obtain that page. */
		nextPageToken?: string | null;
	}

	/** Response message for ModelService.ListModels */
	export interface GoogleCloudAiplatformV1beta1ListModelsResponseFormProperties {

		/** A token to retrieve next page of results. Pass to ListModelsRequest.page_token to obtain that page. */
		nextPageToken: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1ListModelsResponseFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1ListModelsResponseFormProperties>({
			nextPageToken: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Response message for JobService.ListNasJobs */
	export interface GoogleCloudAiplatformV1beta1ListNasJobsResponse {

		/** List of NasJobs in the requested page. NasJob.nas_job_output of the jobs will not be returned. */
		nasJobs?: Array<GoogleCloudAiplatformV1beta1NasJob>;

		/** A token to retrieve the next page of results. Pass to ListNasJobsRequest.page_token to obtain that page. */
		nextPageToken?: string | null;
	}

	/** Response message for JobService.ListNasJobs */
	export interface GoogleCloudAiplatformV1beta1ListNasJobsResponseFormProperties {

		/** A token to retrieve the next page of results. Pass to ListNasJobsRequest.page_token to obtain that page. */
		nextPageToken: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1ListNasJobsResponseFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1ListNasJobsResponseFormProperties>({
			nextPageToken: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Represents a Neural Architecture Search (NAS) job. */
	export interface GoogleCloudAiplatformV1beta1NasJob {

		/** Output only. Time when the NasJob was created. */
		createTime?: string | null;

		/** Required. The display name of the NasJob. The name can be up to 128 characters long and can consist of any UTF-8 characters. */
		displayName?: string | null;

		/** Optional. Enable a separation of Custom model training and restricted image training for tenant project. */
		enableRestrictedImageTraining?: boolean | null;

		/** Represents a customer-managed encryption key spec that can be applied to a top-level resource. */
		encryptionSpec?: GoogleCloudAiplatformV1beta1EncryptionSpec;

		/** Output only. Time when the NasJob entered any of the following states: `JOB_STATE_SUCCEEDED`, `JOB_STATE_FAILED`, `JOB_STATE_CANCELLED`. */
		endTime?: string | null;

		/** The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors). */
		error?: GoogleRpcStatus;

		/** The labels with user-defined metadata to organize NasJobs. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. See https://goo.gl/xmQnxf for more information and examples of labels. */
		labels?: {[id: string]: string };

		/** Output only. Resource name of the NasJob. */
		name?: string | null;

		/** Represents a uCAIP NasJob output. */
		nasJobOutput?: GoogleCloudAiplatformV1beta1NasJobOutput;

		/** Represents the spec of a NasJob. */
		nasJobSpec?: GoogleCloudAiplatformV1beta1NasJobSpec;

		/** Output only. Time when the NasJob for the first time entered the `JOB_STATE_RUNNING` state. */
		startTime?: string | null;

		/** Output only. The detailed state of the job. */
		state?: GoogleCloudAiplatformV1beta1BatchPredictionJobState | null;

		/** Output only. Time when the NasJob was most recently updated. */
		updateTime?: string | null;
	}

	/** Represents a Neural Architecture Search (NAS) job. */
	export interface GoogleCloudAiplatformV1beta1NasJobFormProperties {

		/** Output only. Time when the NasJob was created. */
		createTime: FormControl<string | null | undefined>,

		/** Required. The display name of the NasJob. The name can be up to 128 characters long and can consist of any UTF-8 characters. */
		displayName: FormControl<string | null | undefined>,

		/** Optional. Enable a separation of Custom model training and restricted image training for tenant project. */
		enableRestrictedImageTraining: FormControl<boolean | null | undefined>,

		/** Output only. Time when the NasJob entered any of the following states: `JOB_STATE_SUCCEEDED`, `JOB_STATE_FAILED`, `JOB_STATE_CANCELLED`. */
		endTime: FormControl<string | null | undefined>,

		/** The labels with user-defined metadata to organize NasJobs. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. See https://goo.gl/xmQnxf for more information and examples of labels. */
		labels: FormControl<{[id: string]: string } | null | undefined>,

		/** Output only. Resource name of the NasJob. */
		name: FormControl<string | null | undefined>,

		/** Output only. Time when the NasJob for the first time entered the `JOB_STATE_RUNNING` state. */
		startTime: FormControl<string | null | undefined>,

		/** Output only. The detailed state of the job. */
		state: FormControl<GoogleCloudAiplatformV1beta1BatchPredictionJobState | null | undefined>,

		/** Output only. Time when the NasJob was most recently updated. */
		updateTime: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1NasJobFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1NasJobFormProperties>({
			createTime: new FormControl<string | null | undefined>(undefined),
			displayName: new FormControl<string | null | undefined>(undefined),
			enableRestrictedImageTraining: new FormControl<boolean | null | undefined>(undefined),
			endTime: new FormControl<string | null | undefined>(undefined),
			labels: new FormControl<{[id: string]: string } | null | undefined>(undefined),
			name: new FormControl<string | null | undefined>(undefined),
			startTime: new FormControl<string | null | undefined>(undefined),
			state: new FormControl<GoogleCloudAiplatformV1beta1BatchPredictionJobState | null | undefined>(undefined),
			updateTime: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Represents a uCAIP NasJob output. */
	export interface GoogleCloudAiplatformV1beta1NasJobOutput {

		/** The output of a multi-trial Neural Architecture Search (NAS) jobs. */
		multiTrialJobOutput?: GoogleCloudAiplatformV1beta1NasJobOutputMultiTrialJobOutput;
	}

	/** Represents a uCAIP NasJob output. */
	export interface GoogleCloudAiplatformV1beta1NasJobOutputFormProperties {
	}
	export function CreateGoogleCloudAiplatformV1beta1NasJobOutputFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1NasJobOutputFormProperties>({
		});

	}


	/** The output of a multi-trial Neural Architecture Search (NAS) jobs. */
	export interface GoogleCloudAiplatformV1beta1NasJobOutputMultiTrialJobOutput {

		/** Output only. List of NasTrials that were started as part of search stage. */
		searchTrials?: Array<GoogleCloudAiplatformV1beta1NasTrial>;

		/** Output only. List of NasTrials that were started as part of train stage. */
		trainTrials?: Array<GoogleCloudAiplatformV1beta1NasTrial>;
	}

	/** The output of a multi-trial Neural Architecture Search (NAS) jobs. */
	export interface GoogleCloudAiplatformV1beta1NasJobOutputMultiTrialJobOutputFormProperties {
	}
	export function CreateGoogleCloudAiplatformV1beta1NasJobOutputMultiTrialJobOutputFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1NasJobOutputMultiTrialJobOutputFormProperties>({
		});

	}


	/** Represents a uCAIP NasJob trial. */
	export interface GoogleCloudAiplatformV1beta1NasTrial {

		/** Output only. Time when the NasTrial's status changed to `SUCCEEDED` or `INFEASIBLE`. */
		endTime?: string | null;

		/** A message representing a Measurement of a Trial. A Measurement contains the Metrics got by executing a Trial using suggested hyperparameter values. */
		finalMeasurement?: GoogleCloudAiplatformV1beta1Measurement;

		/** Output only. The identifier of the NasTrial assigned by the service. */
		id?: string | null;

		/** Output only. Time when the NasTrial was started. */
		startTime?: string | null;

		/** Output only. The detailed state of the NasTrial. */
		state?: GoogleCloudAiplatformV1beta1TrialState | null;
	}

	/** Represents a uCAIP NasJob trial. */
	export interface GoogleCloudAiplatformV1beta1NasTrialFormProperties {

		/** Output only. Time when the NasTrial's status changed to `SUCCEEDED` or `INFEASIBLE`. */
		endTime: FormControl<string | null | undefined>,

		/** Output only. The identifier of the NasTrial assigned by the service. */
		id: FormControl<string | null | undefined>,

		/** Output only. Time when the NasTrial was started. */
		startTime: FormControl<string | null | undefined>,

		/** Output only. The detailed state of the NasTrial. */
		state: FormControl<GoogleCloudAiplatformV1beta1TrialState | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1NasTrialFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1NasTrialFormProperties>({
			endTime: new FormControl<string | null | undefined>(undefined),
			id: new FormControl<string | null | undefined>(undefined),
			startTime: new FormControl<string | null | undefined>(undefined),
			state: new FormControl<GoogleCloudAiplatformV1beta1TrialState | null | undefined>(undefined),
		});

	}


	/** Represents the spec of a NasJob. */
	export interface GoogleCloudAiplatformV1beta1NasJobSpec {

		/** The spec of multi-trial Neural Architecture Search (NAS). */
		multiTrialAlgorithmSpec?: GoogleCloudAiplatformV1beta1NasJobSpecMultiTrialAlgorithmSpec;

		/** The ID of the existing NasJob in the same Project and Location which will be used to resume search. search_space_spec and nas_algorithm_spec are obtained from previous NasJob hence should not provide them again for this NasJob. */
		resumeNasJobId?: string | null;

		/** It defines the search space for Neural Architecture Search (NAS). */
		searchSpaceSpec?: string | null;
	}

	/** Represents the spec of a NasJob. */
	export interface GoogleCloudAiplatformV1beta1NasJobSpecFormProperties {

		/** The ID of the existing NasJob in the same Project and Location which will be used to resume search. search_space_spec and nas_algorithm_spec are obtained from previous NasJob hence should not provide them again for this NasJob. */
		resumeNasJobId: FormControl<string | null | undefined>,

		/** It defines the search space for Neural Architecture Search (NAS). */
		searchSpaceSpec: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1NasJobSpecFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1NasJobSpecFormProperties>({
			resumeNasJobId: new FormControl<string | null | undefined>(undefined),
			searchSpaceSpec: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** The spec of multi-trial Neural Architecture Search (NAS). */
	export interface GoogleCloudAiplatformV1beta1NasJobSpecMultiTrialAlgorithmSpec {

		/** Represents a metric to optimize. */
		metric?: GoogleCloudAiplatformV1beta1NasJobSpecMultiTrialAlgorithmSpecMetricSpec;

		/** The multi-trial Neural Architecture Search (NAS) algorithm type. Defaults to `REINFORCEMENT_LEARNING`. */
		multiTrialAlgorithm?: GoogleCloudAiplatformV1beta1NasJobSpecMultiTrialAlgorithmSpecMultiTrialAlgorithm | null;

		/** Represent spec for search trials. */
		searchTrialSpec?: GoogleCloudAiplatformV1beta1NasJobSpecMultiTrialAlgorithmSpecSearchTrialSpec;

		/** Represent spec for train trials. */
		trainTrialSpec?: GoogleCloudAiplatformV1beta1NasJobSpecMultiTrialAlgorithmSpecTrainTrialSpec;
	}

	/** The spec of multi-trial Neural Architecture Search (NAS). */
	export interface GoogleCloudAiplatformV1beta1NasJobSpecMultiTrialAlgorithmSpecFormProperties {

		/** The multi-trial Neural Architecture Search (NAS) algorithm type. Defaults to `REINFORCEMENT_LEARNING`. */
		multiTrialAlgorithm: FormControl<GoogleCloudAiplatformV1beta1NasJobSpecMultiTrialAlgorithmSpecMultiTrialAlgorithm | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1NasJobSpecMultiTrialAlgorithmSpecFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1NasJobSpecMultiTrialAlgorithmSpecFormProperties>({
			multiTrialAlgorithm: new FormControl<GoogleCloudAiplatformV1beta1NasJobSpecMultiTrialAlgorithmSpecMultiTrialAlgorithm | null | undefined>(undefined),
		});

	}


	/** Represents a metric to optimize. */
	export interface GoogleCloudAiplatformV1beta1NasJobSpecMultiTrialAlgorithmSpecMetricSpec {

		/** Required. The optimization goal of the metric. */
		goal?: GoogleCloudAiplatformV1beta1StudySpecMetricSpecGoal | null;

		/** Required. The ID of the metric. Must not contain whitespaces. */
		metricId?: string | null;
	}

	/** Represents a metric to optimize. */
	export interface GoogleCloudAiplatformV1beta1NasJobSpecMultiTrialAlgorithmSpecMetricSpecFormProperties {

		/** Required. The optimization goal of the metric. */
		goal: FormControl<GoogleCloudAiplatformV1beta1StudySpecMetricSpecGoal | null | undefined>,

		/** Required. The ID of the metric. Must not contain whitespaces. */
		metricId: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1NasJobSpecMultiTrialAlgorithmSpecMetricSpecFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1NasJobSpecMultiTrialAlgorithmSpecMetricSpecFormProperties>({
			goal: new FormControl<GoogleCloudAiplatformV1beta1StudySpecMetricSpecGoal | null | undefined>(undefined),
			metricId: new FormControl<string | null | undefined>(undefined),
		});

	}

	export enum GoogleCloudAiplatformV1beta1NasJobSpecMultiTrialAlgorithmSpecMultiTrialAlgorithm { MULTI_TRIAL_ALGORITHM_UNSPECIFIED = 0, REINFORCEMENT_LEARNING = 1, GRID_SEARCH = 2 }


	/** Represent spec for search trials. */
	export interface GoogleCloudAiplatformV1beta1NasJobSpecMultiTrialAlgorithmSpecSearchTrialSpec {

		/** The number of failed trials that need to be seen before failing the NasJob. If set to 0, Vertex AI decides how many trials must fail before the whole job fails. */
		maxFailedTrialCount?: number | null;

		/** Required. The maximum number of trials to run in parallel. */
		maxParallelTrialCount?: number | null;

		/** Required. The maximum number of Neural Architecture Search (NAS) trials to run. */
		maxTrialCount?: number | null;

		/** Represents the spec of a CustomJob. */
		searchTrialJobSpec?: GoogleCloudAiplatformV1beta1CustomJobSpec;
	}

	/** Represent spec for search trials. */
	export interface GoogleCloudAiplatformV1beta1NasJobSpecMultiTrialAlgorithmSpecSearchTrialSpecFormProperties {

		/** The number of failed trials that need to be seen before failing the NasJob. If set to 0, Vertex AI decides how many trials must fail before the whole job fails. */
		maxFailedTrialCount: FormControl<number | null | undefined>,

		/** Required. The maximum number of trials to run in parallel. */
		maxParallelTrialCount: FormControl<number | null | undefined>,

		/** Required. The maximum number of Neural Architecture Search (NAS) trials to run. */
		maxTrialCount: FormControl<number | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1NasJobSpecMultiTrialAlgorithmSpecSearchTrialSpecFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1NasJobSpecMultiTrialAlgorithmSpecSearchTrialSpecFormProperties>({
			maxFailedTrialCount: new FormControl<number | null | undefined>(undefined),
			maxParallelTrialCount: new FormControl<number | null | undefined>(undefined),
			maxTrialCount: new FormControl<number | null | undefined>(undefined),
		});

	}


	/** Represent spec for train trials. */
	export interface GoogleCloudAiplatformV1beta1NasJobSpecMultiTrialAlgorithmSpecTrainTrialSpec {

		/** Required. Frequency of search trials to start train stage. Top N [TrainTrialSpec.max_parallel_trial_count] search trials will be trained for every M [TrainTrialSpec.frequency] trials searched. */
		frequency?: number | null;

		/** Required. The maximum number of trials to run in parallel. */
		maxParallelTrialCount?: number | null;

		/** Represents the spec of a CustomJob. */
		trainTrialJobSpec?: GoogleCloudAiplatformV1beta1CustomJobSpec;
	}

	/** Represent spec for train trials. */
	export interface GoogleCloudAiplatformV1beta1NasJobSpecMultiTrialAlgorithmSpecTrainTrialSpecFormProperties {

		/** Required. Frequency of search trials to start train stage. Top N [TrainTrialSpec.max_parallel_trial_count] search trials will be trained for every M [TrainTrialSpec.frequency] trials searched. */
		frequency: FormControl<number | null | undefined>,

		/** Required. The maximum number of trials to run in parallel. */
		maxParallelTrialCount: FormControl<number | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1NasJobSpecMultiTrialAlgorithmSpecTrainTrialSpecFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1NasJobSpecMultiTrialAlgorithmSpecTrainTrialSpecFormProperties>({
			frequency: new FormControl<number | null | undefined>(undefined),
			maxParallelTrialCount: new FormControl<number | null | undefined>(undefined),
		});

	}


	/** Response message for JobService.ListNasTrialDetails */
	export interface GoogleCloudAiplatformV1beta1ListNasTrialDetailsResponse {

		/** List of top NasTrials in the requested page. */
		nasTrialDetails?: Array<GoogleCloudAiplatformV1beta1NasTrialDetail>;

		/** A token to retrieve the next page of results. Pass to ListNasTrialDetailsRequest.page_token to obtain that page. */
		nextPageToken?: string | null;
	}

	/** Response message for JobService.ListNasTrialDetails */
	export interface GoogleCloudAiplatformV1beta1ListNasTrialDetailsResponseFormProperties {

		/** A token to retrieve the next page of results. Pass to ListNasTrialDetailsRequest.page_token to obtain that page. */
		nextPageToken: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1ListNasTrialDetailsResponseFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1ListNasTrialDetailsResponseFormProperties>({
			nextPageToken: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Represents a NasTrial details along with its parameters. If there is a corresponding train NasTrial, the train NasTrial is also returned. */
	export interface GoogleCloudAiplatformV1beta1NasTrialDetail {

		/** Output only. Resource name of the NasTrialDetail. */
		name?: string | null;

		/** The parameters for the NasJob NasTrial. */
		parameters?: string | null;

		/** Represents a uCAIP NasJob trial. */
		searchTrial?: GoogleCloudAiplatformV1beta1NasTrial;

		/** Represents a uCAIP NasJob trial. */
		trainTrial?: GoogleCloudAiplatformV1beta1NasTrial;
	}

	/** Represents a NasTrial details along with its parameters. If there is a corresponding train NasTrial, the train NasTrial is also returned. */
	export interface GoogleCloudAiplatformV1beta1NasTrialDetailFormProperties {

		/** Output only. Resource name of the NasTrialDetail. */
		name: FormControl<string | null | undefined>,

		/** The parameters for the NasJob NasTrial. */
		parameters: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1NasTrialDetailFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1NasTrialDetailFormProperties>({
			name: new FormControl<string | null | undefined>(undefined),
			parameters: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Response message for NotebookService.ListNotebookRuntimeTemplates. */
	export interface GoogleCloudAiplatformV1beta1ListNotebookRuntimeTemplatesResponse {

		/** A token to retrieve next page of results. Pass to ListNotebookRuntimeTemplatesRequest.page_token to obtain that page. */
		nextPageToken?: string | null;

		/** List of NotebookRuntimeTemplates in the requested page. */
		notebookRuntimeTemplates?: Array<GoogleCloudAiplatformV1beta1NotebookRuntimeTemplate>;
	}

	/** Response message for NotebookService.ListNotebookRuntimeTemplates. */
	export interface GoogleCloudAiplatformV1beta1ListNotebookRuntimeTemplatesResponseFormProperties {

		/** A token to retrieve next page of results. Pass to ListNotebookRuntimeTemplatesRequest.page_token to obtain that page. */
		nextPageToken: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1ListNotebookRuntimeTemplatesResponseFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1ListNotebookRuntimeTemplatesResponseFormProperties>({
			nextPageToken: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** A template that specifies runtime configurations such as machine type, runtime version, network configurations, etc. Multiple runtimes can be created from a runtime template. */
	export interface GoogleCloudAiplatformV1beta1NotebookRuntimeTemplate {

		/** Output only. Timestamp when this NotebookRuntimeTemplate was created. */
		createTime?: string | null;

		/** Represents the spec of persistent disk options. */
		dataPersistentDiskSpec?: GoogleCloudAiplatformV1beta1PersistentDiskSpec;

		/** The description of the NotebookRuntimeTemplate. */
		description?: string | null;

		/** Required. The display name of the NotebookRuntimeTemplate. The name can be up to 128 characters long and can consist of any UTF-8 characters. */
		displayName?: string | null;

		/** Used to perform consistent read-modify-write updates. If not set, a blind "overwrite" update happens. */
		etag?: string | null;

		/** The euc configuration of NotebookRuntimeTemplate. */
		eucConfig?: GoogleCloudAiplatformV1beta1NotebookEucConfig;

		/** The idle shutdown configuration of NotebookRuntimeTemplate, which contains the idle_timeout as required field. */
		idleShutdownConfig?: GoogleCloudAiplatformV1beta1NotebookIdleShutdownConfig;

		/** Output only. The default template to use if not specified. */
		isDefault?: boolean | null;

		/** The labels with user-defined metadata to organize the NotebookRuntimeTemplates. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. See https://goo.gl/xmQnxf for more information and examples of labels. */
		labels?: {[id: string]: string };

		/** Specification of a single machine. */
		machineSpec?: GoogleCloudAiplatformV1beta1MachineSpec;

		/** Output only. The resource name of the NotebookRuntimeTemplate. */
		name?: string | null;

		/** Network spec. */
		networkSpec?: GoogleCloudAiplatformV1beta1NetworkSpec;

		/** Optional. The Compute Engine tags to add to runtime (see [Tagging instances](https://cloud.google.com/vpc/docs/add-remove-network-tags)). */
		networkTags?: Array<string>;

		/** Optional. Immutable. The type of the notebook runtime template. */
		notebookRuntimeType?: GoogleCloudAiplatformV1beta1NotebookRuntimeNotebookRuntimeType | null;

		/** Notebook Reservation Affinity for consuming Zonal reservation. */
		reservationAffinity?: GoogleCloudAiplatformV1beta1NotebookReservationAffinity;

		/** The service account that the runtime workload runs as. You can use any service account within the same project, but you must have the service account user permission to use the instance. If not specified, the [Compute Engine default service account](https://cloud.google.com/compute/docs/access/service-accounts#default_service_account) is used. */
		serviceAccount?: string | null;

		/** A set of Shielded Instance options. See [Images using supported Shielded VM features](https://cloud.google.com/compute/docs/instances/modifying-shielded-vm). */
		shieldedVmConfig?: GoogleCloudAiplatformV1beta1ShieldedVmConfig;

		/** Output only. Timestamp when this NotebookRuntimeTemplate was most recently updated. */
		updateTime?: string | null;
	}

	/** A template that specifies runtime configurations such as machine type, runtime version, network configurations, etc. Multiple runtimes can be created from a runtime template. */
	export interface GoogleCloudAiplatformV1beta1NotebookRuntimeTemplateFormProperties {

		/** Output only. Timestamp when this NotebookRuntimeTemplate was created. */
		createTime: FormControl<string | null | undefined>,

		/** The description of the NotebookRuntimeTemplate. */
		description: FormControl<string | null | undefined>,

		/** Required. The display name of the NotebookRuntimeTemplate. The name can be up to 128 characters long and can consist of any UTF-8 characters. */
		displayName: FormControl<string | null | undefined>,

		/** Used to perform consistent read-modify-write updates. If not set, a blind "overwrite" update happens. */
		etag: FormControl<string | null | undefined>,

		/** Output only. The default template to use if not specified. */
		isDefault: FormControl<boolean | null | undefined>,

		/** The labels with user-defined metadata to organize the NotebookRuntimeTemplates. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. See https://goo.gl/xmQnxf for more information and examples of labels. */
		labels: FormControl<{[id: string]: string } | null | undefined>,

		/** Output only. The resource name of the NotebookRuntimeTemplate. */
		name: FormControl<string | null | undefined>,

		/** Optional. Immutable. The type of the notebook runtime template. */
		notebookRuntimeType: FormControl<GoogleCloudAiplatformV1beta1NotebookRuntimeNotebookRuntimeType | null | undefined>,

		/** The service account that the runtime workload runs as. You can use any service account within the same project, but you must have the service account user permission to use the instance. If not specified, the [Compute Engine default service account](https://cloud.google.com/compute/docs/access/service-accounts#default_service_account) is used. */
		serviceAccount: FormControl<string | null | undefined>,

		/** Output only. Timestamp when this NotebookRuntimeTemplate was most recently updated. */
		updateTime: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1NotebookRuntimeTemplateFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1NotebookRuntimeTemplateFormProperties>({
			createTime: new FormControl<string | null | undefined>(undefined),
			description: new FormControl<string | null | undefined>(undefined),
			displayName: new FormControl<string | null | undefined>(undefined),
			etag: new FormControl<string | null | undefined>(undefined),
			isDefault: new FormControl<boolean | null | undefined>(undefined),
			labels: new FormControl<{[id: string]: string } | null | undefined>(undefined),
			name: new FormControl<string | null | undefined>(undefined),
			notebookRuntimeType: new FormControl<GoogleCloudAiplatformV1beta1NotebookRuntimeNotebookRuntimeType | null | undefined>(undefined),
			serviceAccount: new FormControl<string | null | undefined>(undefined),
			updateTime: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Represents the spec of persistent disk options. */
	export interface GoogleCloudAiplatformV1beta1PersistentDiskSpec {

		/** Size in GB of the disk (default is 100GB). */
		diskSizeGb?: string | null;

		/** Type of the disk (default is "pd-standard"). Valid values: "pd-ssd" (Persistent Disk Solid State Drive) "pd-standard" (Persistent Disk Hard Disk Drive) "pd-balanced" (Balanced Persistent Disk) "pd-extreme" (Extreme Persistent Disk) */
		diskType?: string | null;
	}

	/** Represents the spec of persistent disk options. */
	export interface GoogleCloudAiplatformV1beta1PersistentDiskSpecFormProperties {

		/** Size in GB of the disk (default is 100GB). */
		diskSizeGb: FormControl<string | null | undefined>,

		/** Type of the disk (default is "pd-standard"). Valid values: "pd-ssd" (Persistent Disk Solid State Drive) "pd-standard" (Persistent Disk Hard Disk Drive) "pd-balanced" (Balanced Persistent Disk) "pd-extreme" (Extreme Persistent Disk) */
		diskType: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1PersistentDiskSpecFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1PersistentDiskSpecFormProperties>({
			diskSizeGb: new FormControl<string | null | undefined>(undefined),
			diskType: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** The euc configuration of NotebookRuntimeTemplate. */
	export interface GoogleCloudAiplatformV1beta1NotebookEucConfig {

		/** Output only. Whether ActAs check is bypassed for service account attached to the VM. If false, we need ActAs check for the default Compute Engine Service account. When a Runtime is created, a VM is allocated using Default Compute Engine Service Account. Any user requesting to use this Runtime requires Service Account User (ActAs) permission over this SA. If true, Runtime owner is using EUC and does not require the above permission as VM no longer use default Compute Engine SA, but a P4SA. */
		bypassActasCheck?: boolean | null;

		/** Input only. Whether EUC is disabled in this NotebookRuntimeTemplate. In proto3, the default value of a boolean is false. In this way, by default EUC will be enabled for NotebookRuntimeTemplate. */
		eucDisabled?: boolean | null;
	}

	/** The euc configuration of NotebookRuntimeTemplate. */
	export interface GoogleCloudAiplatformV1beta1NotebookEucConfigFormProperties {

		/** Output only. Whether ActAs check is bypassed for service account attached to the VM. If false, we need ActAs check for the default Compute Engine Service account. When a Runtime is created, a VM is allocated using Default Compute Engine Service Account. Any user requesting to use this Runtime requires Service Account User (ActAs) permission over this SA. If true, Runtime owner is using EUC and does not require the above permission as VM no longer use default Compute Engine SA, but a P4SA. */
		bypassActasCheck: FormControl<boolean | null | undefined>,

		/** Input only. Whether EUC is disabled in this NotebookRuntimeTemplate. In proto3, the default value of a boolean is false. In this way, by default EUC will be enabled for NotebookRuntimeTemplate. */
		eucDisabled: FormControl<boolean | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1NotebookEucConfigFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1NotebookEucConfigFormProperties>({
			bypassActasCheck: new FormControl<boolean | null | undefined>(undefined),
			eucDisabled: new FormControl<boolean | null | undefined>(undefined),
		});

	}


	/** The idle shutdown configuration of NotebookRuntimeTemplate, which contains the idle_timeout as required field. */
	export interface GoogleCloudAiplatformV1beta1NotebookIdleShutdownConfig {

		/** Whether Idle Shutdown is disabled in this NotebookRuntimeTemplate. */
		idleShutdownDisabled?: boolean | null;

		/** Required. Duration is accurate to the second. In Notebook, Idle Timeout is accurate to minute so the range of idle_timeout (second) is: 10 * 60 ~ 1440 * 60. */
		idleTimeout?: string | null;
	}

	/** The idle shutdown configuration of NotebookRuntimeTemplate, which contains the idle_timeout as required field. */
	export interface GoogleCloudAiplatformV1beta1NotebookIdleShutdownConfigFormProperties {

		/** Whether Idle Shutdown is disabled in this NotebookRuntimeTemplate. */
		idleShutdownDisabled: FormControl<boolean | null | undefined>,

		/** Required. Duration is accurate to the second. In Notebook, Idle Timeout is accurate to minute so the range of idle_timeout (second) is: 10 * 60 ~ 1440 * 60. */
		idleTimeout: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1NotebookIdleShutdownConfigFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1NotebookIdleShutdownConfigFormProperties>({
			idleShutdownDisabled: new FormControl<boolean | null | undefined>(undefined),
			idleTimeout: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Network spec. */
	export interface GoogleCloudAiplatformV1beta1NetworkSpec {

		/** Whether to enable public internet access. Default false. */
		enableInternetAccess?: boolean | null;

		/** The full name of the Google Compute Engine [network](https://cloud.google.com//compute/docs/networks-and-firewalls#networks) */
		network?: string | null;

		/** The name of the subnet that this instance is in. Format: `projects/{project_id_or_number}/regions/{region}/subnetworks/{subnetwork_id}` */
		subnetwork?: string | null;
	}

	/** Network spec. */
	export interface GoogleCloudAiplatformV1beta1NetworkSpecFormProperties {

		/** Whether to enable public internet access. Default false. */
		enableInternetAccess: FormControl<boolean | null | undefined>,

		/** The full name of the Google Compute Engine [network](https://cloud.google.com//compute/docs/networks-and-firewalls#networks) */
		network: FormControl<string | null | undefined>,

		/** The name of the subnet that this instance is in. Format: `projects/{project_id_or_number}/regions/{region}/subnetworks/{subnetwork_id}` */
		subnetwork: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1NetworkSpecFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1NetworkSpecFormProperties>({
			enableInternetAccess: new FormControl<boolean | null | undefined>(undefined),
			network: new FormControl<string | null | undefined>(undefined),
			subnetwork: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** A set of Shielded Instance options. See [Images using supported Shielded VM features](https://cloud.google.com/compute/docs/instances/modifying-shielded-vm). */
	export interface GoogleCloudAiplatformV1beta1ShieldedVmConfig {

		/** Defines whether the instance has [Secure Boot](https://cloud.google.com/compute/shielded-vm/docs/shielded-vm#secure-boot) enabled. Secure Boot helps ensure that the system only runs authentic software by verifying the digital signature of all boot components, and halting the boot process if signature verification fails. */
		enableSecureBoot?: boolean | null;
	}

	/** A set of Shielded Instance options. See [Images using supported Shielded VM features](https://cloud.google.com/compute/docs/instances/modifying-shielded-vm). */
	export interface GoogleCloudAiplatformV1beta1ShieldedVmConfigFormProperties {

		/** Defines whether the instance has [Secure Boot](https://cloud.google.com/compute/shielded-vm/docs/shielded-vm#secure-boot) enabled. Secure Boot helps ensure that the system only runs authentic software by verifying the digital signature of all boot components, and halting the boot process if signature verification fails. */
		enableSecureBoot: FormControl<boolean | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1ShieldedVmConfigFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1ShieldedVmConfigFormProperties>({
			enableSecureBoot: new FormControl<boolean | null | undefined>(undefined),
		});

	}


	/** Response message for NotebookService.ListNotebookRuntimes. */
	export interface GoogleCloudAiplatformV1beta1ListNotebookRuntimesResponse {

		/** A token to retrieve next page of results. Pass to ListNotebookRuntimesRequest.page_token to obtain that page. */
		nextPageToken?: string | null;

		/** List of NotebookRuntimes in the requested page. */
		notebookRuntimes?: Array<GoogleCloudAiplatformV1beta1NotebookRuntime>;
	}

	/** Response message for NotebookService.ListNotebookRuntimes. */
	export interface GoogleCloudAiplatformV1beta1ListNotebookRuntimesResponseFormProperties {

		/** A token to retrieve next page of results. Pass to ListNotebookRuntimesRequest.page_token to obtain that page. */
		nextPageToken: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1ListNotebookRuntimesResponseFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1ListNotebookRuntimesResponseFormProperties>({
			nextPageToken: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Request message for VizierService.ListOptimalTrials. */
	export interface GoogleCloudAiplatformV1beta1ListOptimalTrialsRequest {
	}

	/** Request message for VizierService.ListOptimalTrials. */
	export interface GoogleCloudAiplatformV1beta1ListOptimalTrialsRequestFormProperties {
	}
	export function CreateGoogleCloudAiplatformV1beta1ListOptimalTrialsRequestFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1ListOptimalTrialsRequestFormProperties>({
		});

	}


	/** Response message for VizierService.ListOptimalTrials. */
	export interface GoogleCloudAiplatformV1beta1ListOptimalTrialsResponse {

		/** The pareto-optimal Trials for multiple objective Study or the optimal trial for single objective Study. The definition of pareto-optimal can be checked in wiki page. https://en.wikipedia.org/wiki/Pareto_efficiency */
		optimalTrials?: Array<GoogleCloudAiplatformV1beta1Trial>;
	}

	/** Response message for VizierService.ListOptimalTrials. */
	export interface GoogleCloudAiplatformV1beta1ListOptimalTrialsResponseFormProperties {
	}
	export function CreateGoogleCloudAiplatformV1beta1ListOptimalTrialsResponseFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1ListOptimalTrialsResponseFormProperties>({
		});

	}


	/** Response message for PersistentResourceService.ListPersistentResources */
	export interface GoogleCloudAiplatformV1beta1ListPersistentResourcesResponse {

		/** A token to retrieve next page of results. Pass to ListPersistentResourcesRequest.page_token to obtain that page. */
		nextPageToken?: string | null;
		persistentResources?: Array<GoogleCloudAiplatformV1beta1PersistentResource>;
	}

	/** Response message for PersistentResourceService.ListPersistentResources */
	export interface GoogleCloudAiplatformV1beta1ListPersistentResourcesResponseFormProperties {

		/** A token to retrieve next page of results. Pass to ListPersistentResourcesRequest.page_token to obtain that page. */
		nextPageToken: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1ListPersistentResourcesResponseFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1ListPersistentResourcesResponseFormProperties>({
			nextPageToken: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Represents long-lasting resources that are dedicated to users to runs custom workloads. A PersistentResource can have multiple node pools and each node pool can have its own machine spec. */
	export interface GoogleCloudAiplatformV1beta1PersistentResource {

		/** Output only. Time when the PersistentResource was created. */
		createTime?: string | null;

		/** Optional. The display name of the PersistentResource. The name can be up to 128 characters long and can consist of any UTF-8 characters. */
		displayName?: string | null;

		/** Represents a customer-managed encryption key spec that can be applied to a top-level resource. */
		encryptionSpec?: GoogleCloudAiplatformV1beta1EncryptionSpec;

		/** The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors). */
		error?: GoogleRpcStatus;

		/** Optional. The labels with user-defined metadata to organize PersistentResource. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. See https://goo.gl/xmQnxf for more information and examples of labels. */
		labels?: {[id: string]: string };

		/** Immutable. Resource name of a PersistentResource. */
		name?: string | null;

		/** Optional. The full name of the Compute Engine [network](/compute/docs/networks-and-firewalls#networks) to peered with Vertex AI to host the persistent resources. For example, `projects/12345/global/networks/myVPC`. [Format](/compute/docs/reference/rest/v1/networks/insert) is of the form `projects/{project}/global/networks/{network}`. Where {project} is a project number, as in `12345`, and {network} is a network name. To specify this field, you must have already [configured VPC Network Peering for Vertex AI](https://cloud.google.com/vertex-ai/docs/general/vpc-peering). If this field is left unspecified, the resources aren't peered with any network. */
		network?: string | null;

		/** Optional. A list of names for the reserved IP ranges under the VPC network that can be used for this persistent resource. If set, we will deploy the persistent resource within the provided IP ranges. Otherwise, the persistent resource is deployed to any IP ranges under the provided VPC network. Example: ['vertex-ai-ip-range']. */
		reservedIpRanges?: Array<string>;

		/** Required. The spec of the pools of different resources. */
		resourcePools?: Array<GoogleCloudAiplatformV1beta1ResourcePool>;

		/** Persistent Cluster runtime information as output */
		resourceRuntime?: GoogleCloudAiplatformV1beta1ResourceRuntime;

		/** Configuration for the runtime on a PersistentResource instance, including but not limited to: * Service accounts used to run the workloads. * Whether to make it a dedicated Ray Cluster. */
		resourceRuntimeSpec?: GoogleCloudAiplatformV1beta1ResourceRuntimeSpec;

		/** Output only. Time when the PersistentResource for the first time entered the `RUNNING` state. */
		startTime?: string | null;

		/** Output only. The detailed state of a Study. */
		state?: GoogleCloudAiplatformV1beta1PersistentResourceState | null;

		/** Output only. Time when the PersistentResource was most recently updated. */
		updateTime?: string | null;
	}

	/** Represents long-lasting resources that are dedicated to users to runs custom workloads. A PersistentResource can have multiple node pools and each node pool can have its own machine spec. */
	export interface GoogleCloudAiplatformV1beta1PersistentResourceFormProperties {

		/** Output only. Time when the PersistentResource was created. */
		createTime: FormControl<string | null | undefined>,

		/** Optional. The display name of the PersistentResource. The name can be up to 128 characters long and can consist of any UTF-8 characters. */
		displayName: FormControl<string | null | undefined>,

		/** Optional. The labels with user-defined metadata to organize PersistentResource. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. See https://goo.gl/xmQnxf for more information and examples of labels. */
		labels: FormControl<{[id: string]: string } | null | undefined>,

		/** Immutable. Resource name of a PersistentResource. */
		name: FormControl<string | null | undefined>,

		/** Optional. The full name of the Compute Engine [network](/compute/docs/networks-and-firewalls#networks) to peered with Vertex AI to host the persistent resources. For example, `projects/12345/global/networks/myVPC`. [Format](/compute/docs/reference/rest/v1/networks/insert) is of the form `projects/{project}/global/networks/{network}`. Where {project} is a project number, as in `12345`, and {network} is a network name. To specify this field, you must have already [configured VPC Network Peering for Vertex AI](https://cloud.google.com/vertex-ai/docs/general/vpc-peering). If this field is left unspecified, the resources aren't peered with any network. */
		network: FormControl<string | null | undefined>,

		/** Output only. Time when the PersistentResource for the first time entered the `RUNNING` state. */
		startTime: FormControl<string | null | undefined>,

		/** Output only. The detailed state of a Study. */
		state: FormControl<GoogleCloudAiplatformV1beta1PersistentResourceState | null | undefined>,

		/** Output only. Time when the PersistentResource was most recently updated. */
		updateTime: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1PersistentResourceFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1PersistentResourceFormProperties>({
			createTime: new FormControl<string | null | undefined>(undefined),
			displayName: new FormControl<string | null | undefined>(undefined),
			labels: new FormControl<{[id: string]: string } | null | undefined>(undefined),
			name: new FormControl<string | null | undefined>(undefined),
			network: new FormControl<string | null | undefined>(undefined),
			startTime: new FormControl<string | null | undefined>(undefined),
			state: new FormControl<GoogleCloudAiplatformV1beta1PersistentResourceState | null | undefined>(undefined),
			updateTime: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Represents the spec of a group of resources of the same type, for example machine type, disk, and accelerators, in a PersistentResource. */
	export interface GoogleCloudAiplatformV1beta1ResourcePool {

		/** The min/max number of replicas allowed if enabling autoscaling */
		autoscalingSpec?: GoogleCloudAiplatformV1beta1ResourcePoolAutoscalingSpec;

		/** Represents the spec of disk options. */
		diskSpec?: GoogleCloudAiplatformV1beta1DiskSpec;

		/** Immutable. The unique ID in a PersistentResource for referring to this resource pool. User can specify it if necessary. Otherwise, it's generated automatically. */
		id?: string | null;

		/** Specification of a single machine. */
		machineSpec?: GoogleCloudAiplatformV1beta1MachineSpec;

		/** Optional. The total number of machines to use for this resource pool. */
		replicaCount?: string | null;

		/** Output only. The number of machines currently in use by training jobs for this resource pool. Will replace idle_replica_count. */
		usedReplicaCount?: string | null;
	}

	/** Represents the spec of a group of resources of the same type, for example machine type, disk, and accelerators, in a PersistentResource. */
	export interface GoogleCloudAiplatformV1beta1ResourcePoolFormProperties {

		/** Immutable. The unique ID in a PersistentResource for referring to this resource pool. User can specify it if necessary. Otherwise, it's generated automatically. */
		id: FormControl<string | null | undefined>,

		/** Optional. The total number of machines to use for this resource pool. */
		replicaCount: FormControl<string | null | undefined>,

		/** Output only. The number of machines currently in use by training jobs for this resource pool. Will replace idle_replica_count. */
		usedReplicaCount: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1ResourcePoolFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1ResourcePoolFormProperties>({
			id: new FormControl<string | null | undefined>(undefined),
			replicaCount: new FormControl<string | null | undefined>(undefined),
			usedReplicaCount: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** The min/max number of replicas allowed if enabling autoscaling */
	export interface GoogleCloudAiplatformV1beta1ResourcePoolAutoscalingSpec {

		/** Optional. max replicas in the node pool, must be ≥ replica_count and > min_replica_count or will throw error */
		maxReplicaCount?: string | null;

		/** Optional. min replicas in the node pool, must be ≤ replica_count and < max_replica_count or will throw error */
		minReplicaCount?: string | null;
	}

	/** The min/max number of replicas allowed if enabling autoscaling */
	export interface GoogleCloudAiplatformV1beta1ResourcePoolAutoscalingSpecFormProperties {

		/** Optional. max replicas in the node pool, must be ≥ replica_count and > min_replica_count or will throw error */
		maxReplicaCount: FormControl<string | null | undefined>,

		/** Optional. min replicas in the node pool, must be ≤ replica_count and < max_replica_count or will throw error */
		minReplicaCount: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1ResourcePoolAutoscalingSpecFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1ResourcePoolAutoscalingSpecFormProperties>({
			maxReplicaCount: new FormControl<string | null | undefined>(undefined),
			minReplicaCount: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Persistent Cluster runtime information as output */
	export interface GoogleCloudAiplatformV1beta1ResourceRuntime {

		/** Output only. URIs for user to connect to the Cluster. Example: { "RAY_HEAD_NODE_INTERNAL_IP": "head-node-IP:10001" "RAY_DASHBOARD_URI": "ray-dashboard-address:8888" } */
		accessUris?: {[id: string]: string };

		/** Output only. The resource name of NotebookRuntimeTemplate for the RoV Persistent Cluster The NotebokRuntimeTemplate is created in the same VPC (if set), and with the same Ray and Python version as the Persistent Cluster. Example: "projects/1000/locations/us-central1/notebookRuntimeTemplates/abc123" */
		notebookRuntimeTemplate?: string | null;
	}

	/** Persistent Cluster runtime information as output */
	export interface GoogleCloudAiplatformV1beta1ResourceRuntimeFormProperties {

		/** Output only. URIs for user to connect to the Cluster. Example: { "RAY_HEAD_NODE_INTERNAL_IP": "head-node-IP:10001" "RAY_DASHBOARD_URI": "ray-dashboard-address:8888" } */
		accessUris: FormControl<{[id: string]: string } | null | undefined>,

		/** Output only. The resource name of NotebookRuntimeTemplate for the RoV Persistent Cluster The NotebokRuntimeTemplate is created in the same VPC (if set), and with the same Ray and Python version as the Persistent Cluster. Example: "projects/1000/locations/us-central1/notebookRuntimeTemplates/abc123" */
		notebookRuntimeTemplate: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1ResourceRuntimeFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1ResourceRuntimeFormProperties>({
			accessUris: new FormControl<{[id: string]: string } | null | undefined>(undefined),
			notebookRuntimeTemplate: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Configuration for the runtime on a PersistentResource instance, including but not limited to: * Service accounts used to run the workloads. * Whether to make it a dedicated Ray Cluster. */
	export interface GoogleCloudAiplatformV1beta1ResourceRuntimeSpec {

		/** Configuration information for the Ray cluster. For experimental launch, Ray cluster creation and Persistent cluster creation are 1:1 mapping: We will provision all the nodes within the Persistent cluster as Ray nodes. */
		raySpec?: GoogleCloudAiplatformV1beta1RaySpec;

		/** Configuration for the use of custom service account to run the workloads. */
		serviceAccountSpec?: GoogleCloudAiplatformV1beta1ServiceAccountSpec;
	}

	/** Configuration for the runtime on a PersistentResource instance, including but not limited to: * Service accounts used to run the workloads. * Whether to make it a dedicated Ray Cluster. */
	export interface GoogleCloudAiplatformV1beta1ResourceRuntimeSpecFormProperties {
	}
	export function CreateGoogleCloudAiplatformV1beta1ResourceRuntimeSpecFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1ResourceRuntimeSpecFormProperties>({
		});

	}


	/** Configuration information for the Ray cluster. For experimental launch, Ray cluster creation and Persistent cluster creation are 1:1 mapping: We will provision all the nodes within the Persistent cluster as Ray nodes. */
	export interface GoogleCloudAiplatformV1beta1RaySpec {

		/** Optional. This will be used to indicate which resource pool will serve as the Ray head node(the first node within that pool). Will use the machine from the first workerpool as the head node by default if this field isn't set. */
		headNodeResourcePoolId?: string | null;

		/** Optional. Default image for user to choose a preferred ML framework (for example, TensorFlow or Pytorch) by choosing from [Vertex prebuilt images](https://cloud.google.com/vertex-ai/docs/training/pre-built-containers). Either this or the resource_pool_images is required. Use this field if you need all the resource pools to have the same Ray image. Otherwise, use the {@code resource_pool_images} field. */
		imageUri?: string | null;

		/** Optional. Required if image_uri isn't set. A map of resource_pool_id to prebuild Ray image if user need to use different images for different head/worker pools. This map needs to cover all the resource pool ids. Example: { "ray_head_node_pool": "head image" "ray_worker_node_pool1": "worker image" "ray_worker_node_pool2": "another worker image" } */
		resourcePoolImages?: {[id: string]: string };
	}

	/** Configuration information for the Ray cluster. For experimental launch, Ray cluster creation and Persistent cluster creation are 1:1 mapping: We will provision all the nodes within the Persistent cluster as Ray nodes. */
	export interface GoogleCloudAiplatformV1beta1RaySpecFormProperties {

		/** Optional. This will be used to indicate which resource pool will serve as the Ray head node(the first node within that pool). Will use the machine from the first workerpool as the head node by default if this field isn't set. */
		headNodeResourcePoolId: FormControl<string | null | undefined>,

		/** Optional. Default image for user to choose a preferred ML framework (for example, TensorFlow or Pytorch) by choosing from [Vertex prebuilt images](https://cloud.google.com/vertex-ai/docs/training/pre-built-containers). Either this or the resource_pool_images is required. Use this field if you need all the resource pools to have the same Ray image. Otherwise, use the {@code resource_pool_images} field. */
		imageUri: FormControl<string | null | undefined>,

		/** Optional. Required if image_uri isn't set. A map of resource_pool_id to prebuild Ray image if user need to use different images for different head/worker pools. This map needs to cover all the resource pool ids. Example: { "ray_head_node_pool": "head image" "ray_worker_node_pool1": "worker image" "ray_worker_node_pool2": "another worker image" } */
		resourcePoolImages: FormControl<{[id: string]: string } | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1RaySpecFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1RaySpecFormProperties>({
			headNodeResourcePoolId: new FormControl<string | null | undefined>(undefined),
			imageUri: new FormControl<string | null | undefined>(undefined),
			resourcePoolImages: new FormControl<{[id: string]: string } | null | undefined>(undefined),
		});

	}


	/** Configuration for the use of custom service account to run the workloads. */
	export interface GoogleCloudAiplatformV1beta1ServiceAccountSpec {

		/** Required. If true, custom user-managed service account is enforced to run any workloads (for example, Vertex Jobs) on the resource. Otherwise, uses the [Vertex AI Custom Code Service Agent](https://cloud.google.com/vertex-ai/docs/general/access-control#service-agents). */
		enableCustomServiceAccount?: boolean | null;

		/** Optional. Default service account that this PersistentResource's workloads run as. The workloads include: * Any runtime specified via `ResourceRuntimeSpec` on creation time, for example, Ray. * Jobs submitted to PersistentResource, if no other service account specified in the job specs. Only works when custom service account is enabled and users have the `iam.serviceAccounts.actAs` permission on this service account. Required if any containers are specified in `ResourceRuntimeSpec`. */
		serviceAccount?: string | null;
	}

	/** Configuration for the use of custom service account to run the workloads. */
	export interface GoogleCloudAiplatformV1beta1ServiceAccountSpecFormProperties {

		/** Required. If true, custom user-managed service account is enforced to run any workloads (for example, Vertex Jobs) on the resource. Otherwise, uses the [Vertex AI Custom Code Service Agent](https://cloud.google.com/vertex-ai/docs/general/access-control#service-agents). */
		enableCustomServiceAccount: FormControl<boolean | null | undefined>,

		/** Optional. Default service account that this PersistentResource's workloads run as. The workloads include: * Any runtime specified via `ResourceRuntimeSpec` on creation time, for example, Ray. * Jobs submitted to PersistentResource, if no other service account specified in the job specs. Only works when custom service account is enabled and users have the `iam.serviceAccounts.actAs` permission on this service account. Required if any containers are specified in `ResourceRuntimeSpec`. */
		serviceAccount: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1ServiceAccountSpecFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1ServiceAccountSpecFormProperties>({
			enableCustomServiceAccount: new FormControl<boolean | null | undefined>(undefined),
			serviceAccount: new FormControl<string | null | undefined>(undefined),
		});

	}

	export enum GoogleCloudAiplatformV1beta1PersistentResourceState { STATE_UNSPECIFIED = 0, PROVISIONING = 1, RUNNING = 2, STOPPING = 3, ERROR = 4 }


	/** Response message for PipelineService.ListPipelineJobs */
	export interface GoogleCloudAiplatformV1beta1ListPipelineJobsResponse {

		/** A token to retrieve the next page of results. Pass to ListPipelineJobsRequest.page_token to obtain that page. */
		nextPageToken?: string | null;

		/** List of PipelineJobs in the requested page. */
		pipelineJobs?: Array<GoogleCloudAiplatformV1beta1PipelineJob>;
	}

	/** Response message for PipelineService.ListPipelineJobs */
	export interface GoogleCloudAiplatformV1beta1ListPipelineJobsResponseFormProperties {

		/** A token to retrieve the next page of results. Pass to ListPipelineJobsRequest.page_token to obtain that page. */
		nextPageToken: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1ListPipelineJobsResponseFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1ListPipelineJobsResponseFormProperties>({
			nextPageToken: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Response message for ModelGardenService.ListPublisherModels. */
	export interface GoogleCloudAiplatformV1beta1ListPublisherModelsResponse {

		/** A token to retrieve next page of results. Pass to ListPublisherModels.page_token to obtain that page. */
		nextPageToken?: string | null;

		/** List of PublisherModels in the requested page. */
		publisherModels?: Array<GoogleCloudAiplatformV1beta1PublisherModel>;
	}

	/** Response message for ModelGardenService.ListPublisherModels. */
	export interface GoogleCloudAiplatformV1beta1ListPublisherModelsResponseFormProperties {

		/** A token to retrieve next page of results. Pass to ListPublisherModels.page_token to obtain that page. */
		nextPageToken: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1ListPublisherModelsResponseFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1ListPublisherModelsResponseFormProperties>({
			nextPageToken: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** A Model Garden Publisher Model. */
	export interface GoogleCloudAiplatformV1beta1PublisherModel {

		/** Optional. Additional information about the model's Frameworks. */
		frameworks?: Array<string>;

		/** Optional. Indicates the launch stage of the model. */
		launchStage?: GoogleCloudAiplatformV1beta1PublisherModelLaunchStage | null;

		/** Output only. The resource name of the PublisherModel. */
		name?: string | null;

		/** Required. Indicates the open source category of the publisher model. */
		openSourceCategory?: GoogleCloudAiplatformV1beta1PublisherModelOpenSourceCategory | null;

		/** The information about the parent of a model. */
		parent?: GoogleCloudAiplatformV1beta1PublisherModelParent;

		/** Contains the schemata used in Model's predictions and explanations via PredictionService.Predict, PredictionService.Explain and BatchPredictionJob. */
		predictSchemata?: GoogleCloudAiplatformV1beta1PredictSchemata;

		/** Optional. Output only. Immutable. Used to indicate this model has a publisher model and provide the template of the publisher model resource name. */
		publisherModelTemplate?: string | null;

		/** Actions could take on this Publisher Model. */
		supportedActions?: GoogleCloudAiplatformV1beta1PublisherModelCallToAction;

		/** Output only. Immutable. The version ID of the PublisherModel. A new version is committed when a new model version is uploaded under an existing model id. It is an auto-incrementing decimal number in string representation. */
		versionId?: string | null;

		/** Optional. Indicates the state of the model version. */
		versionState?: GoogleCloudAiplatformV1beta1PublisherModelVersionState | null;
	}

	/** A Model Garden Publisher Model. */
	export interface GoogleCloudAiplatformV1beta1PublisherModelFormProperties {

		/** Optional. Indicates the launch stage of the model. */
		launchStage: FormControl<GoogleCloudAiplatformV1beta1PublisherModelLaunchStage | null | undefined>,

		/** Output only. The resource name of the PublisherModel. */
		name: FormControl<string | null | undefined>,

		/** Required. Indicates the open source category of the publisher model. */
		openSourceCategory: FormControl<GoogleCloudAiplatformV1beta1PublisherModelOpenSourceCategory | null | undefined>,

		/** Optional. Output only. Immutable. Used to indicate this model has a publisher model and provide the template of the publisher model resource name. */
		publisherModelTemplate: FormControl<string | null | undefined>,

		/** Output only. Immutable. The version ID of the PublisherModel. A new version is committed when a new model version is uploaded under an existing model id. It is an auto-incrementing decimal number in string representation. */
		versionId: FormControl<string | null | undefined>,

		/** Optional. Indicates the state of the model version. */
		versionState: FormControl<GoogleCloudAiplatformV1beta1PublisherModelVersionState | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1PublisherModelFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1PublisherModelFormProperties>({
			launchStage: new FormControl<GoogleCloudAiplatformV1beta1PublisherModelLaunchStage | null | undefined>(undefined),
			name: new FormControl<string | null | undefined>(undefined),
			openSourceCategory: new FormControl<GoogleCloudAiplatformV1beta1PublisherModelOpenSourceCategory | null | undefined>(undefined),
			publisherModelTemplate: new FormControl<string | null | undefined>(undefined),
			versionId: new FormControl<string | null | undefined>(undefined),
			versionState: new FormControl<GoogleCloudAiplatformV1beta1PublisherModelVersionState | null | undefined>(undefined),
		});

	}

	export enum GoogleCloudAiplatformV1beta1PublisherModelLaunchStage { LAUNCH_STAGE_UNSPECIFIED = 0, EXPERIMENTAL = 1, PRIVATE_PREVIEW = 2, PUBLIC_PREVIEW = 3, GA = 4 }

	export enum GoogleCloudAiplatformV1beta1PublisherModelOpenSourceCategory { OPEN_SOURCE_CATEGORY_UNSPECIFIED = 0, PROPRIETARY = 1, GOOGLE_OWNED_OSS_WITH_GOOGLE_CHECKPOINT = 2, THIRD_PARTY_OWNED_OSS_WITH_GOOGLE_CHECKPOINT = 3, GOOGLE_OWNED_OSS = 4, THIRD_PARTY_OWNED_OSS = 5 }


	/** The information about the parent of a model. */
	export interface GoogleCloudAiplatformV1beta1PublisherModelParent {

		/** Required. The display name of the parent. E.g., LaMDA, T5, Vision API, Natural Language API. */
		displayName?: string | null;

		/** Reference to a resource. */
		reference?: GoogleCloudAiplatformV1beta1PublisherModelResourceReference;
	}

	/** The information about the parent of a model. */
	export interface GoogleCloudAiplatformV1beta1PublisherModelParentFormProperties {

		/** Required. The display name of the parent. E.g., LaMDA, T5, Vision API, Natural Language API. */
		displayName: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1PublisherModelParentFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1PublisherModelParentFormProperties>({
			displayName: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Reference to a resource. */
	export interface GoogleCloudAiplatformV1beta1PublisherModelResourceReference {

		/** Description of the resource. */
		description?: string | null;

		/** The resource name of the Google Cloud resource. */
		resourceName?: string | null;

		/** The URI of the resource. */
		uri?: string | null;

		/** Use case (CUJ) of the resource. */
		useCase?: string | null;
	}

	/** Reference to a resource. */
	export interface GoogleCloudAiplatformV1beta1PublisherModelResourceReferenceFormProperties {

		/** Description of the resource. */
		description: FormControl<string | null | undefined>,

		/** The resource name of the Google Cloud resource. */
		resourceName: FormControl<string | null | undefined>,

		/** The URI of the resource. */
		uri: FormControl<string | null | undefined>,

		/** Use case (CUJ) of the resource. */
		useCase: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1PublisherModelResourceReferenceFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1PublisherModelResourceReferenceFormProperties>({
			description: new FormControl<string | null | undefined>(undefined),
			resourceName: new FormControl<string | null | undefined>(undefined),
			uri: new FormControl<string | null | undefined>(undefined),
			useCase: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Actions could take on this Publisher Model. */
	export interface GoogleCloudAiplatformV1beta1PublisherModelCallToAction {

		/** The regional resource name or the URI. Key is region, e.g., us-central1, europe-west2, global, etc.. */
		createApplication?: GoogleCloudAiplatformV1beta1PublisherModelCallToActionRegionalResourceReferences;

		/** Model metadata that is needed for UploadModel or DeployModel/CreateEndpoint requests. */
		deploy?: GoogleCloudAiplatformV1beta1PublisherModelCallToActionDeploy;

		/** The regional resource name or the URI. Key is region, e.g., us-central1, europe-west2, global, etc.. */
		openEvaluationPipeline?: GoogleCloudAiplatformV1beta1PublisherModelCallToActionRegionalResourceReferences;

		/** The regional resource name or the URI. Key is region, e.g., us-central1, europe-west2, global, etc.. */
		openFineTuningPipeline?: GoogleCloudAiplatformV1beta1PublisherModelCallToActionRegionalResourceReferences;

		/** Open fine tuning pipelines. */
		openFineTuningPipelines?: GoogleCloudAiplatformV1beta1PublisherModelCallToActionOpenFineTuningPipelines;

		/** The regional resource name or the URI. Key is region, e.g., us-central1, europe-west2, global, etc.. */
		openGenerationAiStudio?: GoogleCloudAiplatformV1beta1PublisherModelCallToActionRegionalResourceReferences;

		/** The regional resource name or the URI. Key is region, e.g., us-central1, europe-west2, global, etc.. */
		openGenie?: GoogleCloudAiplatformV1beta1PublisherModelCallToActionRegionalResourceReferences;

		/** The regional resource name or the URI. Key is region, e.g., us-central1, europe-west2, global, etc.. */
		openNotebook?: GoogleCloudAiplatformV1beta1PublisherModelCallToActionRegionalResourceReferences;

		/** Open notebooks. */
		openNotebooks?: GoogleCloudAiplatformV1beta1PublisherModelCallToActionOpenNotebooks;

		/** The regional resource name or the URI. Key is region, e.g., us-central1, europe-west2, global, etc.. */
		openPromptTuningPipeline?: GoogleCloudAiplatformV1beta1PublisherModelCallToActionRegionalResourceReferences;

		/** The regional resource name or the URI. Key is region, e.g., us-central1, europe-west2, global, etc.. */
		requestAccess?: GoogleCloudAiplatformV1beta1PublisherModelCallToActionRegionalResourceReferences;

		/** Rest API docs. */
		viewRestApi?: GoogleCloudAiplatformV1beta1PublisherModelCallToActionViewRestApi;
	}

	/** Actions could take on this Publisher Model. */
	export interface GoogleCloudAiplatformV1beta1PublisherModelCallToActionFormProperties {
	}
	export function CreateGoogleCloudAiplatformV1beta1PublisherModelCallToActionFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1PublisherModelCallToActionFormProperties>({
		});

	}


	/** The regional resource name or the URI. Key is region, e.g., us-central1, europe-west2, global, etc.. */
	export interface GoogleCloudAiplatformV1beta1PublisherModelCallToActionRegionalResourceReferences {

		/** Required. */
		references?: {[id: string]: GoogleCloudAiplatformV1beta1PublisherModelResourceReference };

		/** Optional. Description of the resource. */
		resourceDescription?: string | null;

		/** Optional. Title of the resource. */
		resourceTitle?: string | null;

		/** Optional. Use case (CUJ) of the resource. */
		resourceUseCase?: string | null;

		/** Required. */
		title?: string | null;
	}

	/** The regional resource name or the URI. Key is region, e.g., us-central1, europe-west2, global, etc.. */
	export interface GoogleCloudAiplatformV1beta1PublisherModelCallToActionRegionalResourceReferencesFormProperties {

		/** Required. */
		references: FormControl<{[id: string]: GoogleCloudAiplatformV1beta1PublisherModelResourceReference } | null | undefined>,

		/** Optional. Description of the resource. */
		resourceDescription: FormControl<string | null | undefined>,

		/** Optional. Title of the resource. */
		resourceTitle: FormControl<string | null | undefined>,

		/** Optional. Use case (CUJ) of the resource. */
		resourceUseCase: FormControl<string | null | undefined>,

		/** Required. */
		title: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1PublisherModelCallToActionRegionalResourceReferencesFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1PublisherModelCallToActionRegionalResourceReferencesFormProperties>({
			references: new FormControl<{[id: string]: GoogleCloudAiplatformV1beta1PublisherModelResourceReference } | null | undefined>(undefined),
			resourceDescription: new FormControl<string | null | undefined>(undefined),
			resourceTitle: new FormControl<string | null | undefined>(undefined),
			resourceUseCase: new FormControl<string | null | undefined>(undefined),
			title: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Model metadata that is needed for UploadModel or DeployModel/CreateEndpoint requests. */
	export interface GoogleCloudAiplatformV1beta1PublisherModelCallToActionDeploy {

		/** Optional. The path to the directory containing the Model artifact and any of its supporting files. */
		artifactUri?: string | null;

		/** A description of resources that to large degree are decided by Vertex AI, and require only a modest additional configuration. Each Model supporting these resources documents its specific guidelines. */
		automaticResources?: GoogleCloudAiplatformV1beta1AutomaticResources;

		/** Specification of a container for serving predictions. Some fields in this message correspond to fields in the [Kubernetes Container v1 core specification](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.23/#container-v1-core). */
		containerSpec?: GoogleCloudAiplatformV1beta1ModelContainerSpec;

		/** A description of resources that are dedicated to a DeployedModel, and that need a higher degree of manual configuration. */
		dedicatedResources?: GoogleCloudAiplatformV1beta1DedicatedResources;

		/** Contains information about the Large Model. */
		largeModelReference?: GoogleCloudAiplatformV1beta1LargeModelReference;

		/** Optional. Default model display name. */
		modelDisplayName?: string | null;

		/** Optional. The signed URI for ephemeral Cloud Storage access to model artifact. */
		publicArtifactUri?: string | null;

		/** The resource name of the shared DeploymentResourcePool to deploy on. Format: `projects/{project}/locations/{location}/deploymentResourcePools/{deployment_resource_pool}` */
		sharedResources?: string | null;

		/** Required. The title of the regional resource reference. */
		title?: string | null;
	}

	/** Model metadata that is needed for UploadModel or DeployModel/CreateEndpoint requests. */
	export interface GoogleCloudAiplatformV1beta1PublisherModelCallToActionDeployFormProperties {

		/** Optional. The path to the directory containing the Model artifact and any of its supporting files. */
		artifactUri: FormControl<string | null | undefined>,

		/** Optional. Default model display name. */
		modelDisplayName: FormControl<string | null | undefined>,

		/** Optional. The signed URI for ephemeral Cloud Storage access to model artifact. */
		publicArtifactUri: FormControl<string | null | undefined>,

		/** The resource name of the shared DeploymentResourcePool to deploy on. Format: `projects/{project}/locations/{location}/deploymentResourcePools/{deployment_resource_pool}` */
		sharedResources: FormControl<string | null | undefined>,

		/** Required. The title of the regional resource reference. */
		title: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1PublisherModelCallToActionDeployFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1PublisherModelCallToActionDeployFormProperties>({
			artifactUri: new FormControl<string | null | undefined>(undefined),
			modelDisplayName: new FormControl<string | null | undefined>(undefined),
			publicArtifactUri: new FormControl<string | null | undefined>(undefined),
			sharedResources: new FormControl<string | null | undefined>(undefined),
			title: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Open fine tuning pipelines. */
	export interface GoogleCloudAiplatformV1beta1PublisherModelCallToActionOpenFineTuningPipelines {

		/** Required. Regional resource references to fine tuning pipelines. */
		fineTuningPipelines?: Array<GoogleCloudAiplatformV1beta1PublisherModelCallToActionRegionalResourceReferences>;
	}

	/** Open fine tuning pipelines. */
	export interface GoogleCloudAiplatformV1beta1PublisherModelCallToActionOpenFineTuningPipelinesFormProperties {
	}
	export function CreateGoogleCloudAiplatformV1beta1PublisherModelCallToActionOpenFineTuningPipelinesFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1PublisherModelCallToActionOpenFineTuningPipelinesFormProperties>({
		});

	}


	/** Open notebooks. */
	export interface GoogleCloudAiplatformV1beta1PublisherModelCallToActionOpenNotebooks {

		/** Required. Regional resource references to notebooks. */
		notebooks?: Array<GoogleCloudAiplatformV1beta1PublisherModelCallToActionRegionalResourceReferences>;
	}

	/** Open notebooks. */
	export interface GoogleCloudAiplatformV1beta1PublisherModelCallToActionOpenNotebooksFormProperties {
	}
	export function CreateGoogleCloudAiplatformV1beta1PublisherModelCallToActionOpenNotebooksFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1PublisherModelCallToActionOpenNotebooksFormProperties>({
		});

	}


	/** Rest API docs. */
	export interface GoogleCloudAiplatformV1beta1PublisherModelCallToActionViewRestApi {

		/** Required. */
		documentations?: Array<GoogleCloudAiplatformV1beta1PublisherModelDocumentation>;

		/** Required. The title of the view rest API. */
		title?: string | null;
	}

	/** Rest API docs. */
	export interface GoogleCloudAiplatformV1beta1PublisherModelCallToActionViewRestApiFormProperties {

		/** Required. The title of the view rest API. */
		title: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1PublisherModelCallToActionViewRestApiFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1PublisherModelCallToActionViewRestApiFormProperties>({
			title: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** A named piece of documentation. */
	export interface GoogleCloudAiplatformV1beta1PublisherModelDocumentation {

		/** Required. Content of this piece of document (in Markdown format). */
		content?: string | null;

		/** Required. E.g., OVERVIEW, USE CASES, DOCUMENTATION, SDK & SAMPLES, JAVA, NODE.JS, etc.. */
		title?: string | null;
	}

	/** A named piece of documentation. */
	export interface GoogleCloudAiplatformV1beta1PublisherModelDocumentationFormProperties {

		/** Required. Content of this piece of document (in Markdown format). */
		content: FormControl<string | null | undefined>,

		/** Required. E.g., OVERVIEW, USE CASES, DOCUMENTATION, SDK & SAMPLES, JAVA, NODE.JS, etc.. */
		title: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1PublisherModelDocumentationFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1PublisherModelDocumentationFormProperties>({
			content: new FormControl<string | null | undefined>(undefined),
			title: new FormControl<string | null | undefined>(undefined),
		});

	}

	export enum GoogleCloudAiplatformV1beta1PublisherModelVersionState { VERSION_STATE_UNSPECIFIED = 0, VERSION_STATE_STABLE = 1, VERSION_STATE_UNSTABLE = 2 }


	/** Response message for DatasetService.ListSavedQueries. */
	export interface GoogleCloudAiplatformV1beta1ListSavedQueriesResponse {

		/** The standard List next-page token. */
		nextPageToken?: string | null;

		/** A list of SavedQueries that match the specified filter in the request. */
		savedQueries?: Array<GoogleCloudAiplatformV1beta1SavedQuery>;
	}

	/** Response message for DatasetService.ListSavedQueries. */
	export interface GoogleCloudAiplatformV1beta1ListSavedQueriesResponseFormProperties {

		/** The standard List next-page token. */
		nextPageToken: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1ListSavedQueriesResponseFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1ListSavedQueriesResponseFormProperties>({
			nextPageToken: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Response message for ScheduleService.ListSchedules */
	export interface GoogleCloudAiplatformV1beta1ListSchedulesResponse {

		/** A token to retrieve the next page of results. Pass to ListSchedulesRequest.page_token to obtain that page. */
		nextPageToken?: string | null;

		/** List of Schedules in the requested page. */
		schedules?: Array<GoogleCloudAiplatformV1beta1Schedule>;
	}

	/** Response message for ScheduleService.ListSchedules */
	export interface GoogleCloudAiplatformV1beta1ListSchedulesResponseFormProperties {

		/** A token to retrieve the next page of results. Pass to ListSchedulesRequest.page_token to obtain that page. */
		nextPageToken: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1ListSchedulesResponseFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1ListSchedulesResponseFormProperties>({
			nextPageToken: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** An instance of a Schedule periodically schedules runs to make API calls based on user specified time specification and API request type. */
	export interface GoogleCloudAiplatformV1beta1Schedule {

		/** Optional. Whether new scheduled runs can be queued when max_concurrent_runs limit is reached. If set to true, new runs will be queued instead of skipped. Default to false. */
		allowQueueing?: boolean | null;

		/** Output only. Whether to backfill missed runs when the schedule is resumed from PAUSED state. If set to true, all missed runs will be scheduled. New runs will be scheduled after the backfill is complete. Default to false. */
		catchUp?: boolean | null;

		/** Request message for PipelineService.CreatePipelineJob. */
		createPipelineJobRequest?: GoogleCloudAiplatformV1beta1CreatePipelineJobRequest;

		/** Output only. Timestamp when this Schedule was created. */
		createTime?: string | null;

		/** Cron schedule (https://en.wikipedia.org/wiki/Cron) to launch scheduled runs. To explicitly set a timezone to the cron tab, apply a prefix in the cron tab: "CRON_TZ=${IANA_TIME_ZONE}" or "TZ=${IANA_TIME_ZONE}". The ${IANA_TIME_ZONE} may only be a valid string from IANA time zone database. For example, "CRON_TZ=America/New_York 1 * * * *", or "TZ=America/New_York 1 * * * *". */
		cron?: string | null;

		/** Required. User provided name of the Schedule. The name can be up to 128 characters long and can consist of any UTF-8 characters. */
		displayName?: string | null;

		/** Optional. Timestamp after which no new runs can be scheduled. If specified, The schedule will be completed when either end_time is reached or when scheduled_run_count >= max_run_count. If not specified, new runs will keep getting scheduled until this Schedule is paused or deleted. Already scheduled runs will be allowed to complete. Unset if not specified. */
		endTime?: string | null;

		/** Output only. Timestamp when this Schedule was last paused. Unset if never paused. */
		lastPauseTime?: string | null;

		/** Output only. Timestamp when this Schedule was last resumed. Unset if never resumed from pause. */
		lastResumeTime?: string | null;

		/** Status of a scheduled run. */
		lastScheduledRunResponse?: GoogleCloudAiplatformV1beta1ScheduleRunResponse;

		/** Required. Maximum number of runs that can be started concurrently for this Schedule. This is the limit for starting the scheduled requests and not the execution of the operations/jobs created by the requests (if applicable). */
		maxConcurrentRunCount?: string | null;

		/** Optional. Maximum run count of the schedule. If specified, The schedule will be completed when either started_run_count >= max_run_count or when end_time is reached. If not specified, new runs will keep getting scheduled until this Schedule is paused or deleted. Already scheduled runs will be allowed to complete. Unset if not specified. */
		maxRunCount?: string | null;

		/** Immutable. The resource name of the Schedule. */
		name?: string | null;

		/** Output only. Timestamp when this Schedule should schedule the next run. Having a next_run_time in the past means the runs are being started behind schedule. */
		nextRunTime?: string | null;

		/** Optional. Timestamp after which the first run can be scheduled. Default to Schedule create time if not specified. */
		startTime?: string | null;

		/** Output only. The number of runs started by this schedule. */
		startedRunCount?: string | null;

		/** Output only. The state of this Schedule. */
		state?: GoogleCloudAiplatformV1beta1ScheduleState | null;

		/** Output only. Timestamp when this Schedule was updated. */
		updateTime?: string | null;
	}

	/** An instance of a Schedule periodically schedules runs to make API calls based on user specified time specification and API request type. */
	export interface GoogleCloudAiplatformV1beta1ScheduleFormProperties {

		/** Optional. Whether new scheduled runs can be queued when max_concurrent_runs limit is reached. If set to true, new runs will be queued instead of skipped. Default to false. */
		allowQueueing: FormControl<boolean | null | undefined>,

		/** Output only. Whether to backfill missed runs when the schedule is resumed from PAUSED state. If set to true, all missed runs will be scheduled. New runs will be scheduled after the backfill is complete. Default to false. */
		catchUp: FormControl<boolean | null | undefined>,

		/** Output only. Timestamp when this Schedule was created. */
		createTime: FormControl<string | null | undefined>,

		/** Cron schedule (https://en.wikipedia.org/wiki/Cron) to launch scheduled runs. To explicitly set a timezone to the cron tab, apply a prefix in the cron tab: "CRON_TZ=${IANA_TIME_ZONE}" or "TZ=${IANA_TIME_ZONE}". The ${IANA_TIME_ZONE} may only be a valid string from IANA time zone database. For example, "CRON_TZ=America/New_York 1 * * * *", or "TZ=America/New_York 1 * * * *". */
		cron: FormControl<string | null | undefined>,

		/** Required. User provided name of the Schedule. The name can be up to 128 characters long and can consist of any UTF-8 characters. */
		displayName: FormControl<string | null | undefined>,

		/** Optional. Timestamp after which no new runs can be scheduled. If specified, The schedule will be completed when either end_time is reached or when scheduled_run_count >= max_run_count. If not specified, new runs will keep getting scheduled until this Schedule is paused or deleted. Already scheduled runs will be allowed to complete. Unset if not specified. */
		endTime: FormControl<string | null | undefined>,

		/** Output only. Timestamp when this Schedule was last paused. Unset if never paused. */
		lastPauseTime: FormControl<string | null | undefined>,

		/** Output only. Timestamp when this Schedule was last resumed. Unset if never resumed from pause. */
		lastResumeTime: FormControl<string | null | undefined>,

		/** Required. Maximum number of runs that can be started concurrently for this Schedule. This is the limit for starting the scheduled requests and not the execution of the operations/jobs created by the requests (if applicable). */
		maxConcurrentRunCount: FormControl<string | null | undefined>,

		/** Optional. Maximum run count of the schedule. If specified, The schedule will be completed when either started_run_count >= max_run_count or when end_time is reached. If not specified, new runs will keep getting scheduled until this Schedule is paused or deleted. Already scheduled runs will be allowed to complete. Unset if not specified. */
		maxRunCount: FormControl<string | null | undefined>,

		/** Immutable. The resource name of the Schedule. */
		name: FormControl<string | null | undefined>,

		/** Output only. Timestamp when this Schedule should schedule the next run. Having a next_run_time in the past means the runs are being started behind schedule. */
		nextRunTime: FormControl<string | null | undefined>,

		/** Optional. Timestamp after which the first run can be scheduled. Default to Schedule create time if not specified. */
		startTime: FormControl<string | null | undefined>,

		/** Output only. The number of runs started by this schedule. */
		startedRunCount: FormControl<string | null | undefined>,

		/** Output only. The state of this Schedule. */
		state: FormControl<GoogleCloudAiplatformV1beta1ScheduleState | null | undefined>,

		/** Output only. Timestamp when this Schedule was updated. */
		updateTime: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1ScheduleFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1ScheduleFormProperties>({
			allowQueueing: new FormControl<boolean | null | undefined>(undefined),
			catchUp: new FormControl<boolean | null | undefined>(undefined),
			createTime: new FormControl<string | null | undefined>(undefined),
			cron: new FormControl<string | null | undefined>(undefined),
			displayName: new FormControl<string | null | undefined>(undefined),
			endTime: new FormControl<string | null | undefined>(undefined),
			lastPauseTime: new FormControl<string | null | undefined>(undefined),
			lastResumeTime: new FormControl<string | null | undefined>(undefined),
			maxConcurrentRunCount: new FormControl<string | null | undefined>(undefined),
			maxRunCount: new FormControl<string | null | undefined>(undefined),
			name: new FormControl<string | null | undefined>(undefined),
			nextRunTime: new FormControl<string | null | undefined>(undefined),
			startTime: new FormControl<string | null | undefined>(undefined),
			startedRunCount: new FormControl<string | null | undefined>(undefined),
			state: new FormControl<GoogleCloudAiplatformV1beta1ScheduleState | null | undefined>(undefined),
			updateTime: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Status of a scheduled run. */
	export interface GoogleCloudAiplatformV1beta1ScheduleRunResponse {

		/** The response of the scheduled run. */
		runResponse?: string | null;

		/** The scheduled run time based on the user-specified schedule. */
		scheduledRunTime?: string | null;
	}

	/** Status of a scheduled run. */
	export interface GoogleCloudAiplatformV1beta1ScheduleRunResponseFormProperties {

		/** The response of the scheduled run. */
		runResponse: FormControl<string | null | undefined>,

		/** The scheduled run time based on the user-specified schedule. */
		scheduledRunTime: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1ScheduleRunResponseFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1ScheduleRunResponseFormProperties>({
			runResponse: new FormControl<string | null | undefined>(undefined),
			scheduledRunTime: new FormControl<string | null | undefined>(undefined),
		});

	}

	export enum GoogleCloudAiplatformV1beta1ScheduleState { STATE_UNSPECIFIED = 0, ACTIVE = 1, PAUSED = 2, COMPLETED = 3 }


	/** Response message for SpecialistPoolService.ListSpecialistPools. */
	export interface GoogleCloudAiplatformV1beta1ListSpecialistPoolsResponse {

		/** The standard List next-page token. */
		nextPageToken?: string | null;

		/** A list of SpecialistPools that matches the specified filter in the request. */
		specialistPools?: Array<GoogleCloudAiplatformV1beta1SpecialistPool>;
	}

	/** Response message for SpecialistPoolService.ListSpecialistPools. */
	export interface GoogleCloudAiplatformV1beta1ListSpecialistPoolsResponseFormProperties {

		/** The standard List next-page token. */
		nextPageToken: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1ListSpecialistPoolsResponseFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1ListSpecialistPoolsResponseFormProperties>({
			nextPageToken: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** SpecialistPool represents customers' own workforce to work on their data labeling jobs. It includes a group of specialist managers and workers. Managers are responsible for managing the workers in this pool as well as customers' data labeling jobs associated with this pool. Customers create specialist pool as well as start data labeling jobs on Cloud, managers and workers handle the jobs using CrowdCompute console. */
	export interface GoogleCloudAiplatformV1beta1SpecialistPool {

		/** Required. The user-defined name of the SpecialistPool. The name can be up to 128 characters long and can consist of any UTF-8 characters. This field should be unique on project-level. */
		displayName?: string | null;

		/** Required. The resource name of the SpecialistPool. */
		name?: string | null;

		/** Output only. The resource name of the pending data labeling jobs. */
		pendingDataLabelingJobs?: Array<string>;

		/** The email addresses of the managers in the SpecialistPool. */
		specialistManagerEmails?: Array<string>;

		/** Output only. The number of managers in this SpecialistPool. */
		specialistManagersCount?: number | null;

		/** The email addresses of workers in the SpecialistPool. */
		specialistWorkerEmails?: Array<string>;
	}

	/** SpecialistPool represents customers' own workforce to work on their data labeling jobs. It includes a group of specialist managers and workers. Managers are responsible for managing the workers in this pool as well as customers' data labeling jobs associated with this pool. Customers create specialist pool as well as start data labeling jobs on Cloud, managers and workers handle the jobs using CrowdCompute console. */
	export interface GoogleCloudAiplatformV1beta1SpecialistPoolFormProperties {

		/** Required. The user-defined name of the SpecialistPool. The name can be up to 128 characters long and can consist of any UTF-8 characters. This field should be unique on project-level. */
		displayName: FormControl<string | null | undefined>,

		/** Required. The resource name of the SpecialistPool. */
		name: FormControl<string | null | undefined>,

		/** Output only. The number of managers in this SpecialistPool. */
		specialistManagersCount: FormControl<number | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1SpecialistPoolFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1SpecialistPoolFormProperties>({
			displayName: new FormControl<string | null | undefined>(undefined),
			name: new FormControl<string | null | undefined>(undefined),
			specialistManagersCount: new FormControl<number | null | undefined>(undefined),
		});

	}


	/** Response message for VizierService.ListStudies. */
	export interface GoogleCloudAiplatformV1beta1ListStudiesResponse {

		/** Passes this token as the `page_token` field of the request for a subsequent call. If this field is omitted, there are no subsequent pages. */
		nextPageToken?: string | null;

		/** The studies associated with the project. */
		studies?: Array<GoogleCloudAiplatformV1beta1Study>;
	}

	/** Response message for VizierService.ListStudies. */
	export interface GoogleCloudAiplatformV1beta1ListStudiesResponseFormProperties {

		/** Passes this token as the `page_token` field of the request for a subsequent call. If this field is omitted, there are no subsequent pages. */
		nextPageToken: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1ListStudiesResponseFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1ListStudiesResponseFormProperties>({
			nextPageToken: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** A message representing a Study. */
	export interface GoogleCloudAiplatformV1beta1Study {

		/** Output only. Time at which the study was created. */
		createTime?: string | null;

		/** Required. Describes the Study, default value is empty string. */
		displayName?: string | null;

		/** Output only. A human readable reason why the Study is inactive. This should be empty if a study is ACTIVE or COMPLETED. */
		inactiveReason?: string | null;

		/** Output only. The name of a study. The study's globally unique identifier. Format: `projects/{project}/locations/{location}/studies/{study}` */
		name?: string | null;

		/** Output only. The detailed state of a Study. */
		state?: GoogleCloudAiplatformV1beta1StudyState | null;

		/** Represents specification of a Study. */
		studySpec?: GoogleCloudAiplatformV1beta1StudySpec;
	}

	/** A message representing a Study. */
	export interface GoogleCloudAiplatformV1beta1StudyFormProperties {

		/** Output only. Time at which the study was created. */
		createTime: FormControl<string | null | undefined>,

		/** Required. Describes the Study, default value is empty string. */
		displayName: FormControl<string | null | undefined>,

		/** Output only. A human readable reason why the Study is inactive. This should be empty if a study is ACTIVE or COMPLETED. */
		inactiveReason: FormControl<string | null | undefined>,

		/** Output only. The name of a study. The study's globally unique identifier. Format: `projects/{project}/locations/{location}/studies/{study}` */
		name: FormControl<string | null | undefined>,

		/** Output only. The detailed state of a Study. */
		state: FormControl<GoogleCloudAiplatformV1beta1StudyState | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1StudyFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1StudyFormProperties>({
			createTime: new FormControl<string | null | undefined>(undefined),
			displayName: new FormControl<string | null | undefined>(undefined),
			inactiveReason: new FormControl<string | null | undefined>(undefined),
			name: new FormControl<string | null | undefined>(undefined),
			state: new FormControl<GoogleCloudAiplatformV1beta1StudyState | null | undefined>(undefined),
		});

	}

	export enum GoogleCloudAiplatformV1beta1StudyState { STATE_UNSPECIFIED = 0, ACTIVE = 1, INACTIVE = 2, COMPLETED = 3 }


	/** Response message for TensorboardService.ListTensorboardExperiments. */
	export interface GoogleCloudAiplatformV1beta1ListTensorboardExperimentsResponse {

		/** A token, which can be sent as ListTensorboardExperimentsRequest.page_token to retrieve the next page. If this field is omitted, there are no subsequent pages. */
		nextPageToken?: string | null;

		/** The TensorboardExperiments mathching the request. */
		tensorboardExperiments?: Array<GoogleCloudAiplatformV1beta1TensorboardExperiment>;
	}

	/** Response message for TensorboardService.ListTensorboardExperiments. */
	export interface GoogleCloudAiplatformV1beta1ListTensorboardExperimentsResponseFormProperties {

		/** A token, which can be sent as ListTensorboardExperimentsRequest.page_token to retrieve the next page. If this field is omitted, there are no subsequent pages. */
		nextPageToken: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1ListTensorboardExperimentsResponseFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1ListTensorboardExperimentsResponseFormProperties>({
			nextPageToken: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** A TensorboardExperiment is a group of TensorboardRuns, that are typically the results of a training job run, in a Tensorboard. */
	export interface GoogleCloudAiplatformV1beta1TensorboardExperiment {

		/** Output only. Timestamp when this TensorboardExperiment was created. */
		createTime?: string | null;

		/** Description of this TensorboardExperiment. */
		description?: string | null;

		/** User provided name of this TensorboardExperiment. */
		displayName?: string | null;

		/** Used to perform consistent read-modify-write updates. If not set, a blind "overwrite" update happens. */
		etag?: string | null;

		/** The labels with user-defined metadata to organize your TensorboardExperiment. Label keys and values cannot be longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. No more than 64 user labels can be associated with one Dataset (System labels are excluded). See https://goo.gl/xmQnxf for more information and examples of labels. System reserved label keys are prefixed with `aiplatform.googleapis.com/` and are immutable. The following system labels exist for each Dataset: * `aiplatform.googleapis.com/dataset_metadata_schema`: output only. Its value is the metadata_schema's title. */
		labels?: {[id: string]: string };

		/** Output only. Name of the TensorboardExperiment. Format: `projects/{project}/locations/{location}/tensorboards/{tensorboard}/experiments/{experiment}` */
		name?: string | null;

		/** Immutable. Source of the TensorboardExperiment. Example: a custom training job. */
		source?: string | null;

		/** Output only. Timestamp when this TensorboardExperiment was last updated. */
		updateTime?: string | null;
	}

	/** A TensorboardExperiment is a group of TensorboardRuns, that are typically the results of a training job run, in a Tensorboard. */
	export interface GoogleCloudAiplatformV1beta1TensorboardExperimentFormProperties {

		/** Output only. Timestamp when this TensorboardExperiment was created. */
		createTime: FormControl<string | null | undefined>,

		/** Description of this TensorboardExperiment. */
		description: FormControl<string | null | undefined>,

		/** User provided name of this TensorboardExperiment. */
		displayName: FormControl<string | null | undefined>,

		/** Used to perform consistent read-modify-write updates. If not set, a blind "overwrite" update happens. */
		etag: FormControl<string | null | undefined>,

		/** The labels with user-defined metadata to organize your TensorboardExperiment. Label keys and values cannot be longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. No more than 64 user labels can be associated with one Dataset (System labels are excluded). See https://goo.gl/xmQnxf for more information and examples of labels. System reserved label keys are prefixed with `aiplatform.googleapis.com/` and are immutable. The following system labels exist for each Dataset: * `aiplatform.googleapis.com/dataset_metadata_schema`: output only. Its value is the metadata_schema's title. */
		labels: FormControl<{[id: string]: string } | null | undefined>,

		/** Output only. Name of the TensorboardExperiment. Format: `projects/{project}/locations/{location}/tensorboards/{tensorboard}/experiments/{experiment}` */
		name: FormControl<string | null | undefined>,

		/** Immutable. Source of the TensorboardExperiment. Example: a custom training job. */
		source: FormControl<string | null | undefined>,

		/** Output only. Timestamp when this TensorboardExperiment was last updated. */
		updateTime: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1TensorboardExperimentFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1TensorboardExperimentFormProperties>({
			createTime: new FormControl<string | null | undefined>(undefined),
			description: new FormControl<string | null | undefined>(undefined),
			displayName: new FormControl<string | null | undefined>(undefined),
			etag: new FormControl<string | null | undefined>(undefined),
			labels: new FormControl<{[id: string]: string } | null | undefined>(undefined),
			name: new FormControl<string | null | undefined>(undefined),
			source: new FormControl<string | null | undefined>(undefined),
			updateTime: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Response message for TensorboardService.ListTensorboardRuns. */
	export interface GoogleCloudAiplatformV1beta1ListTensorboardRunsResponse {

		/** A token, which can be sent as ListTensorboardRunsRequest.page_token to retrieve the next page. If this field is omitted, there are no subsequent pages. */
		nextPageToken?: string | null;

		/** The TensorboardRuns mathching the request. */
		tensorboardRuns?: Array<GoogleCloudAiplatformV1beta1TensorboardRun>;
	}

	/** Response message for TensorboardService.ListTensorboardRuns. */
	export interface GoogleCloudAiplatformV1beta1ListTensorboardRunsResponseFormProperties {

		/** A token, which can be sent as ListTensorboardRunsRequest.page_token to retrieve the next page. If this field is omitted, there are no subsequent pages. */
		nextPageToken: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1ListTensorboardRunsResponseFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1ListTensorboardRunsResponseFormProperties>({
			nextPageToken: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Response message for TensorboardService.ListTensorboardTimeSeries. */
	export interface GoogleCloudAiplatformV1beta1ListTensorboardTimeSeriesResponse {

		/** A token, which can be sent as ListTensorboardTimeSeriesRequest.page_token to retrieve the next page. If this field is omitted, there are no subsequent pages. */
		nextPageToken?: string | null;

		/** The TensorboardTimeSeries mathching the request. */
		tensorboardTimeSeries?: Array<GoogleCloudAiplatformV1beta1TensorboardTimeSeries>;
	}

	/** Response message for TensorboardService.ListTensorboardTimeSeries. */
	export interface GoogleCloudAiplatformV1beta1ListTensorboardTimeSeriesResponseFormProperties {

		/** A token, which can be sent as ListTensorboardTimeSeriesRequest.page_token to retrieve the next page. If this field is omitted, there are no subsequent pages. */
		nextPageToken: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1ListTensorboardTimeSeriesResponseFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1ListTensorboardTimeSeriesResponseFormProperties>({
			nextPageToken: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Response message for TensorboardService.ListTensorboards. */
	export interface GoogleCloudAiplatformV1beta1ListTensorboardsResponse {

		/** A token, which can be sent as ListTensorboardsRequest.page_token to retrieve the next page. If this field is omitted, there are no subsequent pages. */
		nextPageToken?: string | null;

		/** The Tensorboards mathching the request. */
		tensorboards?: Array<GoogleCloudAiplatformV1beta1Tensorboard>;
	}

	/** Response message for TensorboardService.ListTensorboards. */
	export interface GoogleCloudAiplatformV1beta1ListTensorboardsResponseFormProperties {

		/** A token, which can be sent as ListTensorboardsRequest.page_token to retrieve the next page. If this field is omitted, there are no subsequent pages. */
		nextPageToken: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1ListTensorboardsResponseFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1ListTensorboardsResponseFormProperties>({
			nextPageToken: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Tensorboard is a physical database that stores users' training metrics. A default Tensorboard is provided in each region of a Google Cloud project. If needed users can also create extra Tensorboards in their projects. */
	export interface GoogleCloudAiplatformV1beta1Tensorboard {

		/** Output only. Consumer project Cloud Storage path prefix used to store blob data, which can either be a bucket or directory. Does not end with a '/'. */
		blobStoragePathPrefix?: string | null;

		/** Output only. Timestamp when this Tensorboard was created. */
		createTime?: string | null;

		/** Description of this Tensorboard. */
		description?: string | null;

		/** Required. User provided name of this Tensorboard. */
		displayName?: string | null;

		/** Represents a customer-managed encryption key spec that can be applied to a top-level resource. */
		encryptionSpec?: GoogleCloudAiplatformV1beta1EncryptionSpec;

		/** Used to perform a consistent read-modify-write updates. If not set, a blind "overwrite" update happens. */
		etag?: string | null;

		/** Used to indicate if the TensorBoard instance is the default one. Each project & region can have at most one default TensorBoard instance. Creation of a default TensorBoard instance and updating an existing TensorBoard instance to be default will mark all other TensorBoard instances (if any) as non default. */
		isDefault?: boolean | null;

		/** The labels with user-defined metadata to organize your Tensorboards. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. No more than 64 user labels can be associated with one Tensorboard (System labels are excluded). See https://goo.gl/xmQnxf for more information and examples of labels. System reserved label keys are prefixed with "aiplatform.googleapis.com/" and are immutable. */
		labels?: {[id: string]: string };

		/** Output only. Name of the Tensorboard. Format: `projects/{project}/locations/{location}/tensorboards/{tensorboard}` */
		name?: string | null;

		/** Output only. The number of Runs stored in this Tensorboard. */
		runCount?: number | null;

		/** Output only. Timestamp when this Tensorboard was last updated. */
		updateTime?: string | null;
	}

	/** Tensorboard is a physical database that stores users' training metrics. A default Tensorboard is provided in each region of a Google Cloud project. If needed users can also create extra Tensorboards in their projects. */
	export interface GoogleCloudAiplatformV1beta1TensorboardFormProperties {

		/** Output only. Consumer project Cloud Storage path prefix used to store blob data, which can either be a bucket or directory. Does not end with a '/'. */
		blobStoragePathPrefix: FormControl<string | null | undefined>,

		/** Output only. Timestamp when this Tensorboard was created. */
		createTime: FormControl<string | null | undefined>,

		/** Description of this Tensorboard. */
		description: FormControl<string | null | undefined>,

		/** Required. User provided name of this Tensorboard. */
		displayName: FormControl<string | null | undefined>,

		/** Used to perform a consistent read-modify-write updates. If not set, a blind "overwrite" update happens. */
		etag: FormControl<string | null | undefined>,

		/** Used to indicate if the TensorBoard instance is the default one. Each project & region can have at most one default TensorBoard instance. Creation of a default TensorBoard instance and updating an existing TensorBoard instance to be default will mark all other TensorBoard instances (if any) as non default. */
		isDefault: FormControl<boolean | null | undefined>,

		/** The labels with user-defined metadata to organize your Tensorboards. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. No more than 64 user labels can be associated with one Tensorboard (System labels are excluded). See https://goo.gl/xmQnxf for more information and examples of labels. System reserved label keys are prefixed with "aiplatform.googleapis.com/" and are immutable. */
		labels: FormControl<{[id: string]: string } | null | undefined>,

		/** Output only. Name of the Tensorboard. Format: `projects/{project}/locations/{location}/tensorboards/{tensorboard}` */
		name: FormControl<string | null | undefined>,

		/** Output only. The number of Runs stored in this Tensorboard. */
		runCount: FormControl<number | null | undefined>,

		/** Output only. Timestamp when this Tensorboard was last updated. */
		updateTime: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1TensorboardFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1TensorboardFormProperties>({
			blobStoragePathPrefix: new FormControl<string | null | undefined>(undefined),
			createTime: new FormControl<string | null | undefined>(undefined),
			description: new FormControl<string | null | undefined>(undefined),
			displayName: new FormControl<string | null | undefined>(undefined),
			etag: new FormControl<string | null | undefined>(undefined),
			isDefault: new FormControl<boolean | null | undefined>(undefined),
			labels: new FormControl<{[id: string]: string } | null | undefined>(undefined),
			name: new FormControl<string | null | undefined>(undefined),
			runCount: new FormControl<number | null | undefined>(undefined),
			updateTime: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Response message for PipelineService.ListTrainingPipelines */
	export interface GoogleCloudAiplatformV1beta1ListTrainingPipelinesResponse {

		/** A token to retrieve the next page of results. Pass to ListTrainingPipelinesRequest.page_token to obtain that page. */
		nextPageToken?: string | null;

		/** List of TrainingPipelines in the requested page. */
		trainingPipelines?: Array<GoogleCloudAiplatformV1beta1TrainingPipeline>;
	}

	/** Response message for PipelineService.ListTrainingPipelines */
	export interface GoogleCloudAiplatformV1beta1ListTrainingPipelinesResponseFormProperties {

		/** A token to retrieve the next page of results. Pass to ListTrainingPipelinesRequest.page_token to obtain that page. */
		nextPageToken: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1ListTrainingPipelinesResponseFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1ListTrainingPipelinesResponseFormProperties>({
			nextPageToken: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** The TrainingPipeline orchestrates tasks associated with training a Model. It always executes the training task, and optionally may also export data from Vertex AI's Dataset which becomes the training input, upload the Model to Vertex AI, and evaluate the Model. */
	export interface GoogleCloudAiplatformV1beta1TrainingPipeline {

		/** Output only. Time when the TrainingPipeline was created. */
		createTime?: string | null;

		/** Required. The user-defined name of this TrainingPipeline. */
		displayName?: string | null;

		/** Represents a customer-managed encryption key spec that can be applied to a top-level resource. */
		encryptionSpec?: GoogleCloudAiplatformV1beta1EncryptionSpec;

		/** Output only. Time when the TrainingPipeline entered any of the following states: `PIPELINE_STATE_SUCCEEDED`, `PIPELINE_STATE_FAILED`, `PIPELINE_STATE_CANCELLED`. */
		endTime?: string | null;

		/** The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors). */
		error?: GoogleRpcStatus;

		/** Specifies Vertex AI owned input data to be used for training, and possibly evaluating, the Model. */
		inputDataConfig?: GoogleCloudAiplatformV1beta1InputDataConfig;

		/** The labels with user-defined metadata to organize TrainingPipelines. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. See https://goo.gl/xmQnxf for more information and examples of labels. */
		labels?: {[id: string]: string };

		/** Optional. The ID to use for the uploaded Model, which will become the final component of the model resource name. This value may be up to 63 characters, and valid characters are `[a-z0-9_-]`. The first character cannot be a number or hyphen. */
		modelId?: string | null;

		/** A trained machine learning Model. */
		modelToUpload?: GoogleCloudAiplatformV1beta1Model;

		/** Output only. Resource name of the TrainingPipeline. */
		name?: string | null;

		/** Optional. When specify this field, the `model_to_upload` will not be uploaded as a new model, instead, it will become a new version of this `parent_model`. */
		parentModel?: string | null;

		/** Output only. Time when the TrainingPipeline for the first time entered the `PIPELINE_STATE_RUNNING` state. */
		startTime?: string | null;

		/** Output only. The detailed state of the pipeline. */
		state?: GoogleCloudAiplatformV1beta1PipelineJobState | null;

		/** Required. A Google Cloud Storage path to the YAML file that defines the training task which is responsible for producing the model artifact, and may also include additional auxiliary work. The definition files that can be used here are found in gs://google-cloud-aiplatform/schema/trainingjob/definition/. Note: The URI given on output will be immutable and probably different, including the URI scheme, than the one given on input. The output URI will point to a location where the user only has a read access. */
		trainingTaskDefinition?: string | null;

		/** Required. The training task's parameter(s), as specified in the training_task_definition's `inputs`. */
		trainingTaskInputs?: any;

		/** Output only. The metadata information as specified in the training_task_definition's `metadata`. This metadata is an auxiliary runtime and final information about the training task. While the pipeline is running this information is populated only at a best effort basis. Only present if the pipeline's training_task_definition contains `metadata` object. */
		trainingTaskMetadata?: any;

		/** Output only. Time when the TrainingPipeline was most recently updated. */
		updateTime?: string | null;
	}

	/** The TrainingPipeline orchestrates tasks associated with training a Model. It always executes the training task, and optionally may also export data from Vertex AI's Dataset which becomes the training input, upload the Model to Vertex AI, and evaluate the Model. */
	export interface GoogleCloudAiplatformV1beta1TrainingPipelineFormProperties {

		/** Output only. Time when the TrainingPipeline was created. */
		createTime: FormControl<string | null | undefined>,

		/** Required. The user-defined name of this TrainingPipeline. */
		displayName: FormControl<string | null | undefined>,

		/** Output only. Time when the TrainingPipeline entered any of the following states: `PIPELINE_STATE_SUCCEEDED`, `PIPELINE_STATE_FAILED`, `PIPELINE_STATE_CANCELLED`. */
		endTime: FormControl<string | null | undefined>,

		/** The labels with user-defined metadata to organize TrainingPipelines. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. See https://goo.gl/xmQnxf for more information and examples of labels. */
		labels: FormControl<{[id: string]: string } | null | undefined>,

		/** Optional. The ID to use for the uploaded Model, which will become the final component of the model resource name. This value may be up to 63 characters, and valid characters are `[a-z0-9_-]`. The first character cannot be a number or hyphen. */
		modelId: FormControl<string | null | undefined>,

		/** Output only. Resource name of the TrainingPipeline. */
		name: FormControl<string | null | undefined>,

		/** Optional. When specify this field, the `model_to_upload` will not be uploaded as a new model, instead, it will become a new version of this `parent_model`. */
		parentModel: FormControl<string | null | undefined>,

		/** Output only. Time when the TrainingPipeline for the first time entered the `PIPELINE_STATE_RUNNING` state. */
		startTime: FormControl<string | null | undefined>,

		/** Output only. The detailed state of the pipeline. */
		state: FormControl<GoogleCloudAiplatformV1beta1PipelineJobState | null | undefined>,

		/** Required. A Google Cloud Storage path to the YAML file that defines the training task which is responsible for producing the model artifact, and may also include additional auxiliary work. The definition files that can be used here are found in gs://google-cloud-aiplatform/schema/trainingjob/definition/. Note: The URI given on output will be immutable and probably different, including the URI scheme, than the one given on input. The output URI will point to a location where the user only has a read access. */
		trainingTaskDefinition: FormControl<string | null | undefined>,

		/** Required. The training task's parameter(s), as specified in the training_task_definition's `inputs`. */
		trainingTaskInputs: FormControl<any | null | undefined>,

		/** Output only. The metadata information as specified in the training_task_definition's `metadata`. This metadata is an auxiliary runtime and final information about the training task. While the pipeline is running this information is populated only at a best effort basis. Only present if the pipeline's training_task_definition contains `metadata` object. */
		trainingTaskMetadata: FormControl<any | null | undefined>,

		/** Output only. Time when the TrainingPipeline was most recently updated. */
		updateTime: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1TrainingPipelineFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1TrainingPipelineFormProperties>({
			createTime: new FormControl<string | null | undefined>(undefined),
			displayName: new FormControl<string | null | undefined>(undefined),
			endTime: new FormControl<string | null | undefined>(undefined),
			labels: new FormControl<{[id: string]: string } | null | undefined>(undefined),
			modelId: new FormControl<string | null | undefined>(undefined),
			name: new FormControl<string | null | undefined>(undefined),
			parentModel: new FormControl<string | null | undefined>(undefined),
			startTime: new FormControl<string | null | undefined>(undefined),
			state: new FormControl<GoogleCloudAiplatformV1beta1PipelineJobState | null | undefined>(undefined),
			trainingTaskDefinition: new FormControl<string | null | undefined>(undefined),
			trainingTaskInputs: new FormControl<any | null | undefined>(undefined),
			trainingTaskMetadata: new FormControl<any | null | undefined>(undefined),
			updateTime: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Response message for VizierService.ListTrials. */
	export interface GoogleCloudAiplatformV1beta1ListTrialsResponse {

		/** Pass this token as the `page_token` field of the request for a subsequent call. If this field is omitted, there are no subsequent pages. */
		nextPageToken?: string | null;

		/** The Trials associated with the Study. */
		trials?: Array<GoogleCloudAiplatformV1beta1Trial>;
	}

	/** Response message for VizierService.ListTrials. */
	export interface GoogleCloudAiplatformV1beta1ListTrialsResponseFormProperties {

		/** Pass this token as the `page_token` field of the request for a subsequent call. If this field is omitted, there are no subsequent pages. */
		nextPageToken: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1ListTrialsResponseFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1ListTrialsResponseFormProperties>({
			nextPageToken: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Request message for VizierService.LookupStudy. */
	export interface GoogleCloudAiplatformV1beta1LookupStudyRequest {

		/** Required. The user-defined display name of the Study */
		displayName?: string | null;
	}

	/** Request message for VizierService.LookupStudy. */
	export interface GoogleCloudAiplatformV1beta1LookupStudyRequestFormProperties {

		/** Required. The user-defined display name of the Study */
		displayName: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1LookupStudyRequestFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1LookupStudyRequestFormProperties>({
			displayName: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Request message for ModelService.MergeVersionAliases. */
	export interface GoogleCloudAiplatformV1beta1MergeVersionAliasesRequest {

		/** Required. The set of version aliases to merge. The alias should be at most 128 characters, and match `a-z{0,126}[a-z-0-9]`. Add the `-` prefix to an alias means removing that alias from the version. `-` is NOT counted in the 128 characters. Example: `-golden` means removing the `golden` alias from the version. There is NO ordering in aliases, which means 1) The aliases returned from GetModel API might not have the exactly same order from this MergeVersionAliases API. 2) Adding and deleting the same alias in the request is not recommended, and the 2 operations will be cancelled out. */
		versionAliases?: Array<string>;
	}

	/** Request message for ModelService.MergeVersionAliases. */
	export interface GoogleCloudAiplatformV1beta1MergeVersionAliasesRequestFormProperties {
	}
	export function CreateGoogleCloudAiplatformV1beta1MergeVersionAliasesRequestFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1MergeVersionAliasesRequestFormProperties>({
		});

	}


	/** Runtime operation information for IndexEndpointService.MutateDeployedIndex. */
	export interface GoogleCloudAiplatformV1beta1MutateDeployedIndexOperationMetadata {

		/** The unique index id specified by user */
		deployedIndexId?: string | null;

		/** Generic Metadata shared by all operations. */
		genericMetadata?: GoogleCloudAiplatformV1beta1GenericOperationMetadata;
	}

	/** Runtime operation information for IndexEndpointService.MutateDeployedIndex. */
	export interface GoogleCloudAiplatformV1beta1MutateDeployedIndexOperationMetadataFormProperties {

		/** The unique index id specified by user */
		deployedIndexId: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1MutateDeployedIndexOperationMetadataFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1MutateDeployedIndexOperationMetadataFormProperties>({
			deployedIndexId: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Response message for IndexEndpointService.MutateDeployedIndex. */
	export interface GoogleCloudAiplatformV1beta1MutateDeployedIndexResponse {

		/** A deployment of an Index. IndexEndpoints contain one or more DeployedIndexes. */
		deployedIndex?: GoogleCloudAiplatformV1beta1DeployedIndex;
	}

	/** Response message for IndexEndpointService.MutateDeployedIndex. */
	export interface GoogleCloudAiplatformV1beta1MutateDeployedIndexResponseFormProperties {
	}
	export function CreateGoogleCloudAiplatformV1beta1MutateDeployedIndexResponseFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1MutateDeployedIndexResponseFormProperties>({
		});

	}


	/** Runtime operation information for EndpointService.MutateDeployedModel. */
	export interface GoogleCloudAiplatformV1beta1MutateDeployedModelOperationMetadata {

		/** Generic Metadata shared by all operations. */
		genericMetadata?: GoogleCloudAiplatformV1beta1GenericOperationMetadata;
	}

	/** Runtime operation information for EndpointService.MutateDeployedModel. */
	export interface GoogleCloudAiplatformV1beta1MutateDeployedModelOperationMetadataFormProperties {
	}
	export function CreateGoogleCloudAiplatformV1beta1MutateDeployedModelOperationMetadataFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1MutateDeployedModelOperationMetadataFormProperties>({
		});

	}


	/** Request message for EndpointService.MutateDeployedModel. */
	export interface GoogleCloudAiplatformV1beta1MutateDeployedModelRequest {

		/** A deployment of a Model. Endpoints contain one or more DeployedModels. */
		deployedModel?: GoogleCloudAiplatformV1beta1DeployedModel;

		/** Required. The update mask applies to the resource. See google.protobuf.FieldMask. */
		updateMask?: string | null;
	}

	/** Request message for EndpointService.MutateDeployedModel. */
	export interface GoogleCloudAiplatformV1beta1MutateDeployedModelRequestFormProperties {

		/** Required. The update mask applies to the resource. See google.protobuf.FieldMask. */
		updateMask: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1MutateDeployedModelRequestFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1MutateDeployedModelRequestFormProperties>({
			updateMask: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Response message for EndpointService.MutateDeployedModel. */
	export interface GoogleCloudAiplatformV1beta1MutateDeployedModelResponse {

		/** A deployment of a Model. Endpoints contain one or more DeployedModels. */
		deployedModel?: GoogleCloudAiplatformV1beta1DeployedModel;
	}

	/** Response message for EndpointService.MutateDeployedModel. */
	export interface GoogleCloudAiplatformV1beta1MutateDeployedModelResponseFormProperties {
	}
	export function CreateGoogleCloudAiplatformV1beta1MutateDeployedModelResponseFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1MutateDeployedModelResponseFormProperties>({
		});

	}


	/** A query to find a number of similar entities. */
	export interface GoogleCloudAiplatformV1beta1NearestNeighborQuery {

		/** The embedding vector. */
		embedding?: GoogleCloudAiplatformV1beta1NearestNeighborQueryEmbedding;

		/** Optional. The entity id whose similar entities should be searched for. If embedding is set, search will use embedding instead of entity_id. */
		entityId?: string | null;

		/** Optional. The number of similar entities to be retrieved from feature view for each query. */
		neighborCount?: number | null;

		/** Parameters that can be overrided in each query to tune query latency and recall. */
		parameters?: GoogleCloudAiplatformV1beta1NearestNeighborQueryParameters;

		/** Optional. Crowding is a constraint on a neighbor list produced by nearest neighbor search requiring that no more than sper_crowding_attribute_neighbor_count of the k neighbors returned have the same value of crowding_attribute. It's used for improving result diversity. */
		perCrowdingAttributeNeighborCount?: number | null;

		/** Optional. The list of string filters. */
		stringFilters?: Array<GoogleCloudAiplatformV1beta1NearestNeighborQueryStringFilter>;
	}

	/** A query to find a number of similar entities. */
	export interface GoogleCloudAiplatformV1beta1NearestNeighborQueryFormProperties {

		/** Optional. The entity id whose similar entities should be searched for. If embedding is set, search will use embedding instead of entity_id. */
		entityId: FormControl<string | null | undefined>,

		/** Optional. The number of similar entities to be retrieved from feature view for each query. */
		neighborCount: FormControl<number | null | undefined>,

		/** Optional. Crowding is a constraint on a neighbor list produced by nearest neighbor search requiring that no more than sper_crowding_attribute_neighbor_count of the k neighbors returned have the same value of crowding_attribute. It's used for improving result diversity. */
		perCrowdingAttributeNeighborCount: FormControl<number | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1NearestNeighborQueryFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1NearestNeighborQueryFormProperties>({
			entityId: new FormControl<string | null | undefined>(undefined),
			neighborCount: new FormControl<number | null | undefined>(undefined),
			perCrowdingAttributeNeighborCount: new FormControl<number | null | undefined>(undefined),
		});

	}


	/** The embedding vector. */
	export interface GoogleCloudAiplatformV1beta1NearestNeighborQueryEmbedding {

		/** Optional. Individual value in the embedding. */
		value?: Array<number>;
	}

	/** The embedding vector. */
	export interface GoogleCloudAiplatformV1beta1NearestNeighborQueryEmbeddingFormProperties {
	}
	export function CreateGoogleCloudAiplatformV1beta1NearestNeighborQueryEmbeddingFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1NearestNeighborQueryEmbeddingFormProperties>({
		});

	}


	/** Parameters that can be overrided in each query to tune query latency and recall. */
	export interface GoogleCloudAiplatformV1beta1NearestNeighborQueryParameters {

		/** Optional. The number of neighbors to find via approximate search before exact reordering is performed; if set, this value must be > neighbor_count. */
		approximateNeighborCandidates?: number | null;

		/** Optional. The fraction of the number of leaves to search, set at query time allows user to tune search performance. This value increase result in both search accuracy and latency increase. The value should be between 0.0 and 1.0. */
		leafNodesSearchFraction?: number | null;
	}

	/** Parameters that can be overrided in each query to tune query latency and recall. */
	export interface GoogleCloudAiplatformV1beta1NearestNeighborQueryParametersFormProperties {

		/** Optional. The number of neighbors to find via approximate search before exact reordering is performed; if set, this value must be > neighbor_count. */
		approximateNeighborCandidates: FormControl<number | null | undefined>,

		/** Optional. The fraction of the number of leaves to search, set at query time allows user to tune search performance. This value increase result in both search accuracy and latency increase. The value should be between 0.0 and 1.0. */
		leafNodesSearchFraction: FormControl<number | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1NearestNeighborQueryParametersFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1NearestNeighborQueryParametersFormProperties>({
			approximateNeighborCandidates: new FormControl<number | null | undefined>(undefined),
			leafNodesSearchFraction: new FormControl<number | null | undefined>(undefined),
		});

	}


	/** String filter is used to search a subset of the entities by using boolean rules. For example: if a query specifies string filter with 'name = color, allow_tokens = {red, blue}, deny_tokens = {purple}',' then that query will match entities that are red or blue, but if those points are also purple, then they will be excluded even if they are red/blue. Only string filter is supported for now, numeric filter will be supported in the near future. */
	export interface GoogleCloudAiplatformV1beta1NearestNeighborQueryStringFilter {

		/** Optional. The allowed tokens. */
		allowTokens?: Array<string>;

		/** Optional. The denied tokens. */
		denyTokens?: Array<string>;

		/** Required. Column names in BigQuery that used as filters. */
		name?: string | null;
	}

	/** String filter is used to search a subset of the entities by using boolean rules. For example: if a query specifies string filter with 'name = color, allow_tokens = {red, blue}, deny_tokens = {purple}',' then that query will match entities that are red or blue, but if those points are also purple, then they will be excluded even if they are red/blue. Only string filter is supported for now, numeric filter will be supported in the near future. */
	export interface GoogleCloudAiplatformV1beta1NearestNeighborQueryStringFilterFormProperties {

		/** Required. Column names in BigQuery that used as filters. */
		name: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1NearestNeighborQueryStringFilterFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1NearestNeighborQueryStringFilterFormProperties>({
			name: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Nearest neighbors for one query. */
	export interface GoogleCloudAiplatformV1beta1NearestNeighbors {

		/** All its neighbors. */
		neighbors?: Array<GoogleCloudAiplatformV1beta1NearestNeighborsNeighbor>;
	}

	/** Nearest neighbors for one query. */
	export interface GoogleCloudAiplatformV1beta1NearestNeighborsFormProperties {
	}
	export function CreateGoogleCloudAiplatformV1beta1NearestNeighborsFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1NearestNeighborsFormProperties>({
		});

	}


	/** A neighbor of the query vector. */
	export interface GoogleCloudAiplatformV1beta1NearestNeighborsNeighbor {

		/** The distance between the neighbor and the query vector. */
		distance?: number | null;

		/** The id of the similar entity. */
		entityId?: string | null;

		/** Response message for FeatureOnlineStoreService.FetchFeatureValues */
		entityKeyValues?: GoogleCloudAiplatformV1beta1FetchFeatureValuesResponse;
	}

	/** A neighbor of the query vector. */
	export interface GoogleCloudAiplatformV1beta1NearestNeighborsNeighborFormProperties {

		/** The distance between the neighbor and the query vector. */
		distance: FormControl<number | null | undefined>,

		/** The id of the similar entity. */
		entityId: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1NearestNeighborsNeighborFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1NearestNeighborsNeighborFormProperties>({
			distance: new FormControl<number | null | undefined>(undefined),
			entityId: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Request message for JobService.PauseModelDeploymentMonitoringJob. */
	export interface GoogleCloudAiplatformV1beta1PauseModelDeploymentMonitoringJobRequest {
	}

	/** Request message for JobService.PauseModelDeploymentMonitoringJob. */
	export interface GoogleCloudAiplatformV1beta1PauseModelDeploymentMonitoringJobRequestFormProperties {
	}
	export function CreateGoogleCloudAiplatformV1beta1PauseModelDeploymentMonitoringJobRequestFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1PauseModelDeploymentMonitoringJobRequestFormProperties>({
		});

	}


	/** Request message for ScheduleService.PauseSchedule. */
	export interface GoogleCloudAiplatformV1beta1PauseScheduleRequest {
	}

	/** Request message for ScheduleService.PauseSchedule. */
	export interface GoogleCloudAiplatformV1beta1PauseScheduleRequestFormProperties {
	}
	export function CreateGoogleCloudAiplatformV1beta1PauseScheduleRequestFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1PauseScheduleRequestFormProperties>({
		});

	}


	/** Request message for PredictionService.Predict. */
	export interface GoogleCloudAiplatformV1beta1PredictRequest {

		/** Required. The instances that are the input to the prediction call. A DeployedModel may have an upper limit on the number of instances it supports per request, and when it is exceeded the prediction call errors in case of AutoML Models, or, in case of customer created Models, the behaviour is as documented by that Model. The schema of any single instance may be specified via Endpoint's DeployedModels' Model's PredictSchemata's instance_schema_uri. */
		instances?: Array<string>;

		/** The parameters that govern the prediction. The schema of the parameters may be specified via Endpoint's DeployedModels' Model's PredictSchemata's parameters_schema_uri. */
		parameters?: any;
	}

	/** Request message for PredictionService.Predict. */
	export interface GoogleCloudAiplatformV1beta1PredictRequestFormProperties {

		/** The parameters that govern the prediction. The schema of the parameters may be specified via Endpoint's DeployedModels' Model's PredictSchemata's parameters_schema_uri. */
		parameters: FormControl<any | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1PredictRequestFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1PredictRequestFormProperties>({
			parameters: new FormControl<any | null | undefined>(undefined),
		});

	}


	/** Response message for PredictionService.Predict. */
	export interface GoogleCloudAiplatformV1beta1PredictResponse {

		/** ID of the Endpoint's DeployedModel that served this prediction. */
		deployedModelId?: string | null;

		/** Output only. Request-level metadata returned by the model. The metadata type will be dependent upon the model implementation. */
		metadata?: any;

		/** Output only. The resource name of the Model which is deployed as the DeployedModel that this prediction hits. */
		model?: string | null;

		/** Output only. The display name of the Model which is deployed as the DeployedModel that this prediction hits. */
		modelDisplayName?: string | null;

		/** Output only. The version ID of the Model which is deployed as the DeployedModel that this prediction hits. */
		modelVersionId?: string | null;

		/** The predictions that are the output of the predictions call. The schema of any single prediction may be specified via Endpoint's DeployedModels' Model's PredictSchemata's prediction_schema_uri. */
		predictions?: Array<string>;
	}

	/** Response message for PredictionService.Predict. */
	export interface GoogleCloudAiplatformV1beta1PredictResponseFormProperties {

		/** ID of the Endpoint's DeployedModel that served this prediction. */
		deployedModelId: FormControl<string | null | undefined>,

		/** Output only. Request-level metadata returned by the model. The metadata type will be dependent upon the model implementation. */
		metadata: FormControl<any | null | undefined>,

		/** Output only. The resource name of the Model which is deployed as the DeployedModel that this prediction hits. */
		model: FormControl<string | null | undefined>,

		/** Output only. The display name of the Model which is deployed as the DeployedModel that this prediction hits. */
		modelDisplayName: FormControl<string | null | undefined>,

		/** Output only. The version ID of the Model which is deployed as the DeployedModel that this prediction hits. */
		modelVersionId: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1PredictResponseFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1PredictResponseFormProperties>({
			deployedModelId: new FormControl<string | null | undefined>(undefined),
			metadata: new FormControl<any | null | undefined>(undefined),
			model: new FormControl<string | null | undefined>(undefined),
			modelDisplayName: new FormControl<string | null | undefined>(undefined),
			modelVersionId: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Details of operations that perform MetadataService.PurgeArtifacts. */
	export interface GoogleCloudAiplatformV1beta1PurgeArtifactsMetadata {

		/** Generic Metadata shared by all operations. */
		genericMetadata?: GoogleCloudAiplatformV1beta1GenericOperationMetadata;
	}

	/** Details of operations that perform MetadataService.PurgeArtifacts. */
	export interface GoogleCloudAiplatformV1beta1PurgeArtifactsMetadataFormProperties {
	}
	export function CreateGoogleCloudAiplatformV1beta1PurgeArtifactsMetadataFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1PurgeArtifactsMetadataFormProperties>({
		});

	}


	/** Request message for MetadataService.PurgeArtifacts. */
	export interface GoogleCloudAiplatformV1beta1PurgeArtifactsRequest {

		/** Required. A required filter matching the Artifacts to be purged. E.g., `update_time <= 2020-11-19T11:30:00-04:00`. */
		filter?: string | null;

		/** Optional. Flag to indicate to actually perform the purge. If `force` is set to false, the method will return a sample of Artifact names that would be deleted. */
		force?: boolean | null;
	}

	/** Request message for MetadataService.PurgeArtifacts. */
	export interface GoogleCloudAiplatformV1beta1PurgeArtifactsRequestFormProperties {

		/** Required. A required filter matching the Artifacts to be purged. E.g., `update_time <= 2020-11-19T11:30:00-04:00`. */
		filter: FormControl<string | null | undefined>,

		/** Optional. Flag to indicate to actually perform the purge. If `force` is set to false, the method will return a sample of Artifact names that would be deleted. */
		force: FormControl<boolean | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1PurgeArtifactsRequestFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1PurgeArtifactsRequestFormProperties>({
			filter: new FormControl<string | null | undefined>(undefined),
			force: new FormControl<boolean | null | undefined>(undefined),
		});

	}


	/** Response message for MetadataService.PurgeArtifacts. */
	export interface GoogleCloudAiplatformV1beta1PurgeArtifactsResponse {

		/** The number of Artifacts that this request deleted (or, if `force` is false, the number of Artifacts that will be deleted). This can be an estimate. */
		purgeCount?: string | null;

		/** A sample of the Artifact names that will be deleted. Only populated if `force` is set to false. The maximum number of samples is 100 (it is possible to return fewer). */
		purgeSample?: Array<string>;
	}

	/** Response message for MetadataService.PurgeArtifacts. */
	export interface GoogleCloudAiplatformV1beta1PurgeArtifactsResponseFormProperties {

		/** The number of Artifacts that this request deleted (or, if `force` is false, the number of Artifacts that will be deleted). This can be an estimate. */
		purgeCount: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1PurgeArtifactsResponseFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1PurgeArtifactsResponseFormProperties>({
			purgeCount: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Details of operations that perform MetadataService.PurgeContexts. */
	export interface GoogleCloudAiplatformV1beta1PurgeContextsMetadata {

		/** Generic Metadata shared by all operations. */
		genericMetadata?: GoogleCloudAiplatformV1beta1GenericOperationMetadata;
	}

	/** Details of operations that perform MetadataService.PurgeContexts. */
	export interface GoogleCloudAiplatformV1beta1PurgeContextsMetadataFormProperties {
	}
	export function CreateGoogleCloudAiplatformV1beta1PurgeContextsMetadataFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1PurgeContextsMetadataFormProperties>({
		});

	}


	/** Request message for MetadataService.PurgeContexts. */
	export interface GoogleCloudAiplatformV1beta1PurgeContextsRequest {

		/** Required. A required filter matching the Contexts to be purged. E.g., `update_time <= 2020-11-19T11:30:00-04:00`. */
		filter?: string | null;

		/** Optional. Flag to indicate to actually perform the purge. If `force` is set to false, the method will return a sample of Context names that would be deleted. */
		force?: boolean | null;
	}

	/** Request message for MetadataService.PurgeContexts. */
	export interface GoogleCloudAiplatformV1beta1PurgeContextsRequestFormProperties {

		/** Required. A required filter matching the Contexts to be purged. E.g., `update_time <= 2020-11-19T11:30:00-04:00`. */
		filter: FormControl<string | null | undefined>,

		/** Optional. Flag to indicate to actually perform the purge. If `force` is set to false, the method will return a sample of Context names that would be deleted. */
		force: FormControl<boolean | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1PurgeContextsRequestFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1PurgeContextsRequestFormProperties>({
			filter: new FormControl<string | null | undefined>(undefined),
			force: new FormControl<boolean | null | undefined>(undefined),
		});

	}


	/** Response message for MetadataService.PurgeContexts. */
	export interface GoogleCloudAiplatformV1beta1PurgeContextsResponse {

		/** The number of Contexts that this request deleted (or, if `force` is false, the number of Contexts that will be deleted). This can be an estimate. */
		purgeCount?: string | null;

		/** A sample of the Context names that will be deleted. Only populated if `force` is set to false. The maximum number of samples is 100 (it is possible to return fewer). */
		purgeSample?: Array<string>;
	}

	/** Response message for MetadataService.PurgeContexts. */
	export interface GoogleCloudAiplatformV1beta1PurgeContextsResponseFormProperties {

		/** The number of Contexts that this request deleted (or, if `force` is false, the number of Contexts that will be deleted). This can be an estimate. */
		purgeCount: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1PurgeContextsResponseFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1PurgeContextsResponseFormProperties>({
			purgeCount: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Details of operations that perform MetadataService.PurgeExecutions. */
	export interface GoogleCloudAiplatformV1beta1PurgeExecutionsMetadata {

		/** Generic Metadata shared by all operations. */
		genericMetadata?: GoogleCloudAiplatformV1beta1GenericOperationMetadata;
	}

	/** Details of operations that perform MetadataService.PurgeExecutions. */
	export interface GoogleCloudAiplatformV1beta1PurgeExecutionsMetadataFormProperties {
	}
	export function CreateGoogleCloudAiplatformV1beta1PurgeExecutionsMetadataFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1PurgeExecutionsMetadataFormProperties>({
		});

	}


	/** Request message for MetadataService.PurgeExecutions. */
	export interface GoogleCloudAiplatformV1beta1PurgeExecutionsRequest {

		/** Required. A required filter matching the Executions to be purged. E.g., `update_time <= 2020-11-19T11:30:00-04:00`. */
		filter?: string | null;

		/** Optional. Flag to indicate to actually perform the purge. If `force` is set to false, the method will return a sample of Execution names that would be deleted. */
		force?: boolean | null;
	}

	/** Request message for MetadataService.PurgeExecutions. */
	export interface GoogleCloudAiplatformV1beta1PurgeExecutionsRequestFormProperties {

		/** Required. A required filter matching the Executions to be purged. E.g., `update_time <= 2020-11-19T11:30:00-04:00`. */
		filter: FormControl<string | null | undefined>,

		/** Optional. Flag to indicate to actually perform the purge. If `force` is set to false, the method will return a sample of Execution names that would be deleted. */
		force: FormControl<boolean | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1PurgeExecutionsRequestFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1PurgeExecutionsRequestFormProperties>({
			filter: new FormControl<string | null | undefined>(undefined),
			force: new FormControl<boolean | null | undefined>(undefined),
		});

	}


	/** Response message for MetadataService.PurgeExecutions. */
	export interface GoogleCloudAiplatformV1beta1PurgeExecutionsResponse {

		/** The number of Executions that this request deleted (or, if `force` is false, the number of Executions that will be deleted). This can be an estimate. */
		purgeCount?: string | null;

		/** A sample of the Execution names that will be deleted. Only populated if `force` is set to false. The maximum number of samples is 100 (it is possible to return fewer). */
		purgeSample?: Array<string>;
	}

	/** Response message for MetadataService.PurgeExecutions. */
	export interface GoogleCloudAiplatformV1beta1PurgeExecutionsResponseFormProperties {

		/** The number of Executions that this request deleted (or, if `force` is false, the number of Executions that will be deleted). This can be an estimate. */
		purgeCount: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1PurgeExecutionsResponseFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1PurgeExecutionsResponseFormProperties>({
			purgeCount: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Response message for QueryDeployedModels method. */
	export interface GoogleCloudAiplatformV1beta1QueryDeployedModelsResponse {

		/** References to the DeployedModels that share the specified deploymentResourcePool. */
		deployedModelRefs?: Array<GoogleCloudAiplatformV1beta1DeployedModelRef>;

		/** DEPRECATED Use deployed_model_refs instead. */
		deployedModels?: Array<GoogleCloudAiplatformV1beta1DeployedModel>;

		/** A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages. */
		nextPageToken?: string | null;

		/** The total number of DeployedModels on this DeploymentResourcePool. */
		totalDeployedModelCount?: number | null;

		/** The total number of Endpoints that have DeployedModels on this DeploymentResourcePool. */
		totalEndpointCount?: number | null;
	}

	/** Response message for QueryDeployedModels method. */
	export interface GoogleCloudAiplatformV1beta1QueryDeployedModelsResponseFormProperties {

		/** A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages. */
		nextPageToken: FormControl<string | null | undefined>,

		/** The total number of DeployedModels on this DeploymentResourcePool. */
		totalDeployedModelCount: FormControl<number | null | undefined>,

		/** The total number of Endpoints that have DeployedModels on this DeploymentResourcePool. */
		totalEndpointCount: FormControl<number | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1QueryDeployedModelsResponseFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1QueryDeployedModelsResponseFormProperties>({
			nextPageToken: new FormControl<string | null | undefined>(undefined),
			totalDeployedModelCount: new FormControl<number | null | undefined>(undefined),
			totalEndpointCount: new FormControl<number | null | undefined>(undefined),
		});

	}


	/** Request message for PredictionService.RawPredict. */
	export interface GoogleCloudAiplatformV1beta1RawPredictRequest {

		/** Message that represents an arbitrary HTTP body. It should only be used for payload formats that can't be represented as JSON, such as raw binary or an HTML page. This message can be used both in streaming and non-streaming API methods in the request as well as the response. It can be used as a top-level request field, which is convenient if one wants to extract parameters from either the URL or HTTP template into the request fields and also want access to the raw HTTP body. Example: message GetResourceRequest { // A unique request id. string request_id = 1; // The raw HTTP body is bound to this field. google.api.HttpBody http_body = 2; } service ResourceService { rpc GetResource(GetResourceRequest) returns (google.api.HttpBody); rpc UpdateResource(google.api.HttpBody) returns (google.protobuf.Empty); } Example with streaming methods: service CaldavService { rpc GetCalendar(stream google.api.HttpBody) returns (stream google.api.HttpBody); rpc UpdateCalendar(stream google.api.HttpBody) returns (stream google.api.HttpBody); } Use of this type only changes how the request and response bodies are handled, all other features will continue to work unchanged. */
		httpBody?: GoogleApiHttpBody;
	}

	/** Request message for PredictionService.RawPredict. */
	export interface GoogleCloudAiplatformV1beta1RawPredictRequestFormProperties {
	}
	export function CreateGoogleCloudAiplatformV1beta1RawPredictRequestFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1RawPredictRequestFormProperties>({
		});

	}


	/** Request message for FeaturestoreOnlineServingService.ReadFeatureValues. */
	export interface GoogleCloudAiplatformV1beta1ReadFeatureValuesRequest {

		/** Required. ID for a specific entity. For example, for a machine learning model predicting user clicks on a website, an entity ID could be `user_123`. */
		entityId?: string | null;

		/** Selector for Features of an EntityType. */
		featureSelector?: GoogleCloudAiplatformV1beta1FeatureSelector;
	}

	/** Request message for FeaturestoreOnlineServingService.ReadFeatureValues. */
	export interface GoogleCloudAiplatformV1beta1ReadFeatureValuesRequestFormProperties {

		/** Required. ID for a specific entity. For example, for a machine learning model predicting user clicks on a website, an entity ID could be `user_123`. */
		entityId: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1ReadFeatureValuesRequestFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1ReadFeatureValuesRequestFormProperties>({
			entityId: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Response message for FeaturestoreOnlineServingService.ReadFeatureValues. */
	export interface GoogleCloudAiplatformV1beta1ReadFeatureValuesResponse {

		/** Entity view with Feature values. */
		entityView?: GoogleCloudAiplatformV1beta1ReadFeatureValuesResponseEntityView;

		/** Response header with metadata for the requested ReadFeatureValuesRequest.entity_type and Features. */
		header?: GoogleCloudAiplatformV1beta1ReadFeatureValuesResponseHeader;
	}

	/** Response message for FeaturestoreOnlineServingService.ReadFeatureValues. */
	export interface GoogleCloudAiplatformV1beta1ReadFeatureValuesResponseFormProperties {
	}
	export function CreateGoogleCloudAiplatformV1beta1ReadFeatureValuesResponseFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1ReadFeatureValuesResponseFormProperties>({
		});

	}


	/** Entity view with Feature values. */
	export interface GoogleCloudAiplatformV1beta1ReadFeatureValuesResponseEntityView {

		/** Each piece of data holds the k requested values for one requested Feature. If no values for the requested Feature exist, the corresponding cell will be empty. This has the same size and is in the same order as the features from the header ReadFeatureValuesResponse.header. */
		data?: Array<GoogleCloudAiplatformV1beta1ReadFeatureValuesResponseEntityViewData>;

		/** ID of the requested entity. */
		entityId?: string | null;
	}

	/** Entity view with Feature values. */
	export interface GoogleCloudAiplatformV1beta1ReadFeatureValuesResponseEntityViewFormProperties {

		/** ID of the requested entity. */
		entityId: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1ReadFeatureValuesResponseEntityViewFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1ReadFeatureValuesResponseEntityViewFormProperties>({
			entityId: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Container to hold value(s), successive in time, for one Feature from the request. */
	export interface GoogleCloudAiplatformV1beta1ReadFeatureValuesResponseEntityViewData {

		/** Value for a feature. */
		value?: GoogleCloudAiplatformV1beta1FeatureValue;

		/** Container for list of values. */
		values?: GoogleCloudAiplatformV1beta1FeatureValueList;
	}

	/** Container to hold value(s), successive in time, for one Feature from the request. */
	export interface GoogleCloudAiplatformV1beta1ReadFeatureValuesResponseEntityViewDataFormProperties {
	}
	export function CreateGoogleCloudAiplatformV1beta1ReadFeatureValuesResponseEntityViewDataFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1ReadFeatureValuesResponseEntityViewDataFormProperties>({
		});

	}


	/** Response header with metadata for the requested ReadFeatureValuesRequest.entity_type and Features. */
	export interface GoogleCloudAiplatformV1beta1ReadFeatureValuesResponseHeader {

		/** The resource name of the EntityType from the ReadFeatureValuesRequest. Value format: `projects/{project}/locations/{location}/featurestores/{featurestore}/entityTypes/{entityType}`. */
		entityType?: string | null;

		/** List of Feature metadata corresponding to each piece of ReadFeatureValuesResponse.EntityView.data. */
		featureDescriptors?: Array<GoogleCloudAiplatformV1beta1ReadFeatureValuesResponseFeatureDescriptor>;
	}

	/** Response header with metadata for the requested ReadFeatureValuesRequest.entity_type and Features. */
	export interface GoogleCloudAiplatformV1beta1ReadFeatureValuesResponseHeaderFormProperties {

		/** The resource name of the EntityType from the ReadFeatureValuesRequest. Value format: `projects/{project}/locations/{location}/featurestores/{featurestore}/entityTypes/{entityType}`. */
		entityType: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1ReadFeatureValuesResponseHeaderFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1ReadFeatureValuesResponseHeaderFormProperties>({
			entityType: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Metadata for requested Features. */
	export interface GoogleCloudAiplatformV1beta1ReadFeatureValuesResponseFeatureDescriptor {

		/** Feature ID. */
		id?: string | null;
	}

	/** Metadata for requested Features. */
	export interface GoogleCloudAiplatformV1beta1ReadFeatureValuesResponseFeatureDescriptorFormProperties {

		/** Feature ID. */
		id: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1ReadFeatureValuesResponseFeatureDescriptorFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1ReadFeatureValuesResponseFeatureDescriptorFormProperties>({
			id: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** The request message for MatchService.ReadIndexDatapoints. */
	export interface GoogleCloudAiplatformV1beta1ReadIndexDatapointsRequest {

		/** The ID of the DeployedIndex that will serve the request. */
		deployedIndexId?: string | null;

		/** IDs of the datapoints to be searched for. */
		ids?: Array<string>;
	}

	/** The request message for MatchService.ReadIndexDatapoints. */
	export interface GoogleCloudAiplatformV1beta1ReadIndexDatapointsRequestFormProperties {

		/** The ID of the DeployedIndex that will serve the request. */
		deployedIndexId: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1ReadIndexDatapointsRequestFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1ReadIndexDatapointsRequestFormProperties>({
			deployedIndexId: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** The response message for MatchService.ReadIndexDatapoints. */
	export interface GoogleCloudAiplatformV1beta1ReadIndexDatapointsResponse {

		/** The result list of datapoints. */
		datapoints?: Array<GoogleCloudAiplatformV1beta1IndexDatapoint>;
	}

	/** The response message for MatchService.ReadIndexDatapoints. */
	export interface GoogleCloudAiplatformV1beta1ReadIndexDatapointsResponseFormProperties {
	}
	export function CreateGoogleCloudAiplatformV1beta1ReadIndexDatapointsResponseFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1ReadIndexDatapointsResponseFormProperties>({
		});

	}


	/** Response message for TensorboardService.ReadTensorboardBlobData. */
	export interface GoogleCloudAiplatformV1beta1ReadTensorboardBlobDataResponse {

		/** Blob messages containing blob bytes. */
		blobs?: Array<GoogleCloudAiplatformV1beta1TensorboardBlob>;
	}

	/** Response message for TensorboardService.ReadTensorboardBlobData. */
	export interface GoogleCloudAiplatformV1beta1ReadTensorboardBlobDataResponseFormProperties {
	}
	export function CreateGoogleCloudAiplatformV1beta1ReadTensorboardBlobDataResponseFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1ReadTensorboardBlobDataResponseFormProperties>({
		});

	}


	/** Response message for TensorboardService.ReadTensorboardSize. */
	export interface GoogleCloudAiplatformV1beta1ReadTensorboardSizeResponse {

		/** Payload storage size for the TensorBoard */
		storageSizeByte?: string | null;
	}

	/** Response message for TensorboardService.ReadTensorboardSize. */
	export interface GoogleCloudAiplatformV1beta1ReadTensorboardSizeResponseFormProperties {

		/** Payload storage size for the TensorBoard */
		storageSizeByte: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1ReadTensorboardSizeResponseFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1ReadTensorboardSizeResponseFormProperties>({
			storageSizeByte: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Response message for TensorboardService.ReadTensorboardTimeSeriesData. */
	export interface GoogleCloudAiplatformV1beta1ReadTensorboardTimeSeriesDataResponse {

		/** All the data stored in a TensorboardTimeSeries. */
		timeSeriesData?: GoogleCloudAiplatformV1beta1TimeSeriesData;
	}

	/** Response message for TensorboardService.ReadTensorboardTimeSeriesData. */
	export interface GoogleCloudAiplatformV1beta1ReadTensorboardTimeSeriesDataResponseFormProperties {
	}
	export function CreateGoogleCloudAiplatformV1beta1ReadTensorboardTimeSeriesDataResponseFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1ReadTensorboardTimeSeriesDataResponseFormProperties>({
		});

	}


	/** Response message for TensorboardService.ReadTensorboardUsage. */
	export interface GoogleCloudAiplatformV1beta1ReadTensorboardUsageResponse {

		/** Maps year-month (YYYYMM) string to per month usage data. */
		monthlyUsageData?: {[id: string]: GoogleCloudAiplatformV1beta1ReadTensorboardUsageResponsePerMonthUsageData };
	}

	/** Response message for TensorboardService.ReadTensorboardUsage. */
	export interface GoogleCloudAiplatformV1beta1ReadTensorboardUsageResponseFormProperties {

		/** Maps year-month (YYYYMM) string to per month usage data. */
		monthlyUsageData: FormControl<{[id: string]: GoogleCloudAiplatformV1beta1ReadTensorboardUsageResponsePerMonthUsageData } | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1ReadTensorboardUsageResponseFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1ReadTensorboardUsageResponseFormProperties>({
			monthlyUsageData: new FormControl<{[id: string]: GoogleCloudAiplatformV1beta1ReadTensorboardUsageResponsePerMonthUsageData } | null | undefined>(undefined),
		});

	}


	/** Per month usage data */
	export interface GoogleCloudAiplatformV1beta1ReadTensorboardUsageResponsePerMonthUsageData {

		/** Usage data for each user in the given month. */
		userUsageData?: Array<GoogleCloudAiplatformV1beta1ReadTensorboardUsageResponsePerUserUsageData>;
	}

	/** Per month usage data */
	export interface GoogleCloudAiplatformV1beta1ReadTensorboardUsageResponsePerMonthUsageDataFormProperties {
	}
	export function CreateGoogleCloudAiplatformV1beta1ReadTensorboardUsageResponsePerMonthUsageDataFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1ReadTensorboardUsageResponsePerMonthUsageDataFormProperties>({
		});

	}


	/** Per user usage data. */
	export interface GoogleCloudAiplatformV1beta1ReadTensorboardUsageResponsePerUserUsageData {

		/** User's username */
		username?: string | null;

		/** Number of times the user has read data within the Tensorboard. */
		viewCount?: string | null;
	}

	/** Per user usage data. */
	export interface GoogleCloudAiplatformV1beta1ReadTensorboardUsageResponsePerUserUsageDataFormProperties {

		/** User's username */
		username: FormControl<string | null | undefined>,

		/** Number of times the user has read data within the Tensorboard. */
		viewCount: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1ReadTensorboardUsageResponsePerUserUsageDataFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1ReadTensorboardUsageResponsePerUserUsageDataFormProperties>({
			username: new FormControl<string | null | undefined>(undefined),
			viewCount: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Details of operations that perform reboot PersistentResource. */
	export interface GoogleCloudAiplatformV1beta1RebootPersistentResourceOperationMetadata {

		/** Generic Metadata shared by all operations. */
		genericMetadata?: GoogleCloudAiplatformV1beta1GenericOperationMetadata;
	}

	/** Details of operations that perform reboot PersistentResource. */
	export interface GoogleCloudAiplatformV1beta1RebootPersistentResourceOperationMetadataFormProperties {
	}
	export function CreateGoogleCloudAiplatformV1beta1RebootPersistentResourceOperationMetadataFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1RebootPersistentResourceOperationMetadataFormProperties>({
		});

	}


	/** Request message for MetadataService.DeleteContextChildrenRequest. */
	export interface GoogleCloudAiplatformV1beta1RemoveContextChildrenRequest {

		/** The resource names of the child Contexts. */
		childContexts?: Array<string>;
	}

	/** Request message for MetadataService.DeleteContextChildrenRequest. */
	export interface GoogleCloudAiplatformV1beta1RemoveContextChildrenRequestFormProperties {
	}
	export function CreateGoogleCloudAiplatformV1beta1RemoveContextChildrenRequestFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1RemoveContextChildrenRequestFormProperties>({
		});

	}


	/** Response message for MetadataService.RemoveContextChildren. */
	export interface GoogleCloudAiplatformV1beta1RemoveContextChildrenResponse {
	}

	/** Response message for MetadataService.RemoveContextChildren. */
	export interface GoogleCloudAiplatformV1beta1RemoveContextChildrenResponseFormProperties {
	}
	export function CreateGoogleCloudAiplatformV1beta1RemoveContextChildrenResponseFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1RemoveContextChildrenResponseFormProperties>({
		});

	}


	/** Request message for IndexService.RemoveDatapoints */
	export interface GoogleCloudAiplatformV1beta1RemoveDatapointsRequest {

		/** A list of datapoint ids to be deleted. */
		datapointIds?: Array<string>;
	}

	/** Request message for IndexService.RemoveDatapoints */
	export interface GoogleCloudAiplatformV1beta1RemoveDatapointsRequestFormProperties {
	}
	export function CreateGoogleCloudAiplatformV1beta1RemoveDatapointsRequestFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1RemoveDatapointsRequestFormProperties>({
		});

	}


	/** Response message for IndexService.RemoveDatapoints */
	export interface GoogleCloudAiplatformV1beta1RemoveDatapointsResponse {
	}

	/** Response message for IndexService.RemoveDatapoints */
	export interface GoogleCloudAiplatformV1beta1RemoveDatapointsResponseFormProperties {
	}
	export function CreateGoogleCloudAiplatformV1beta1RemoveDatapointsResponseFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1RemoveDatapointsResponseFormProperties>({
		});

	}


	/** Request message for NotebookInternalService.ReportExecutionEvent. */
	export interface GoogleCloudAiplatformV1beta1ReportExecutionEventRequest {

		/** Required. The type of the event. */
		eventType?: GoogleCloudAiplatformV1beta1ReportExecutionEventRequestEventType | null;

		/** The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors). */
		status?: GoogleRpcStatus;

		/** Required. The VM identity token (a JWT) for authenticating the VM. https://cloud.google.com/compute/docs/instances/verifying-instance-identity */
		vmToken?: string | null;
	}

	/** Request message for NotebookInternalService.ReportExecutionEvent. */
	export interface GoogleCloudAiplatformV1beta1ReportExecutionEventRequestFormProperties {

		/** Required. The type of the event. */
		eventType: FormControl<GoogleCloudAiplatformV1beta1ReportExecutionEventRequestEventType | null | undefined>,

		/** Required. The VM identity token (a JWT) for authenticating the VM. https://cloud.google.com/compute/docs/instances/verifying-instance-identity */
		vmToken: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1ReportExecutionEventRequestFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1ReportExecutionEventRequestFormProperties>({
			eventType: new FormControl<GoogleCloudAiplatformV1beta1ReportExecutionEventRequestEventType | null | undefined>(undefined),
			vmToken: new FormControl<string | null | undefined>(undefined),
		});

	}

	export enum GoogleCloudAiplatformV1beta1ReportExecutionEventRequestEventType { EVENT_TYPE_UNSPECIFIED = 0, ACTIVE = 1, DONE = 2, FAILED = 3 }


	/** Response message for NotebookInternalService.ReportExecutionEvent. */
	export interface GoogleCloudAiplatformV1beta1ReportExecutionEventResponse {
	}

	/** Response message for NotebookInternalService.ReportExecutionEvent. */
	export interface GoogleCloudAiplatformV1beta1ReportExecutionEventResponseFormProperties {
	}
	export function CreateGoogleCloudAiplatformV1beta1ReportExecutionEventResponseFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1ReportExecutionEventResponseFormProperties>({
		});

	}


	/** LINT.IfChange(report_event_message_types) Request message for NotebookInternalService.ReportRuntimeEvent. */
	export interface GoogleCloudAiplatformV1beta1ReportRuntimeEventRequest {

		/** Optional. The details of the request for debug. */
		eventDetails?: {[id: string]: string };

		/** Required. The type of the event. */
		eventType?: GoogleCloudAiplatformV1beta1ReportRuntimeEventRequestEventType | null;

		/** The details of the internal os service states. */
		internalOsServiceStateInstance?: Array<GoogleCloudAiplatformV1beta1InternalOsServiceStateInstance>;

		/** Optional. The details of the internal os service states. */
		internalOsServiceStateInstances?: Array<GoogleCloudAiplatformV1beta1InternalOsServiceStateInstance>;

		/** Required. The VM identity token (a JWT) for authenticating the VM. https://cloud.google.com/compute/docs/instances/verifying-instance-identity */
		vmToken?: string | null;
	}

	/** LINT.IfChange(report_event_message_types) Request message for NotebookInternalService.ReportRuntimeEvent. */
	export interface GoogleCloudAiplatformV1beta1ReportRuntimeEventRequestFormProperties {

		/** Optional. The details of the request for debug. */
		eventDetails: FormControl<{[id: string]: string } | null | undefined>,

		/** Required. The type of the event. */
		eventType: FormControl<GoogleCloudAiplatformV1beta1ReportRuntimeEventRequestEventType | null | undefined>,

		/** Required. The VM identity token (a JWT) for authenticating the VM. https://cloud.google.com/compute/docs/instances/verifying-instance-identity */
		vmToken: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1ReportRuntimeEventRequestFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1ReportRuntimeEventRequestFormProperties>({
			eventDetails: new FormControl<{[id: string]: string } | null | undefined>(undefined),
			eventType: new FormControl<GoogleCloudAiplatformV1beta1ReportRuntimeEventRequestEventType | null | undefined>(undefined),
			vmToken: new FormControl<string | null | undefined>(undefined),
		});

	}

	export enum GoogleCloudAiplatformV1beta1ReportRuntimeEventRequestEventType { EVENT_TYPE_UNSPECIFIED = 0, HEARTBEAT = 1, IDLE = 2 }


	/** Response message for NotebookInternalService.ReportRuntimeEvent. */
	export interface GoogleCloudAiplatformV1beta1ReportRuntimeEventResponse {

		/** If the idle shutdown is blocked by CP, CP will send the block message. Otherwise, this field is not set. */
		idleShutdownMessage?: string | null;
	}

	/** Response message for NotebookInternalService.ReportRuntimeEvent. */
	export interface GoogleCloudAiplatformV1beta1ReportRuntimeEventResponseFormProperties {

		/** If the idle shutdown is blocked by CP, CP will send the block message. Otherwise, this field is not set. */
		idleShutdownMessage: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1ReportRuntimeEventResponseFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1ReportRuntimeEventResponseFormProperties>({
			idleShutdownMessage: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Runtime operation information for DatasetService.RestoreDatasetVersion. */
	export interface GoogleCloudAiplatformV1beta1RestoreDatasetVersionOperationMetadata {

		/** Generic Metadata shared by all operations. */
		genericMetadata?: GoogleCloudAiplatformV1beta1GenericOperationMetadata;
	}

	/** Runtime operation information for DatasetService.RestoreDatasetVersion. */
	export interface GoogleCloudAiplatformV1beta1RestoreDatasetVersionOperationMetadataFormProperties {
	}
	export function CreateGoogleCloudAiplatformV1beta1RestoreDatasetVersionOperationMetadataFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1RestoreDatasetVersionOperationMetadataFormProperties>({
		});

	}


	/** Request message for JobService.ResumeModelDeploymentMonitoringJob. */
	export interface GoogleCloudAiplatformV1beta1ResumeModelDeploymentMonitoringJobRequest {
	}

	/** Request message for JobService.ResumeModelDeploymentMonitoringJob. */
	export interface GoogleCloudAiplatformV1beta1ResumeModelDeploymentMonitoringJobRequestFormProperties {
	}
	export function CreateGoogleCloudAiplatformV1beta1ResumeModelDeploymentMonitoringJobRequestFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1ResumeModelDeploymentMonitoringJobRequestFormProperties>({
		});

	}


	/** Request message for ScheduleService.ResumeSchedule. */
	export interface GoogleCloudAiplatformV1beta1ResumeScheduleRequest {

		/** Optional. Whether to backfill missed runs when the schedule is resumed from PAUSED state. If set to true, all missed runs will be scheduled. New runs will be scheduled after the backfill is complete. This will also update Schedule.catch_up field. Default to false. */
		catchUp?: boolean | null;
	}

	/** Request message for ScheduleService.ResumeSchedule. */
	export interface GoogleCloudAiplatformV1beta1ResumeScheduleRequestFormProperties {

		/** Optional. Whether to backfill missed runs when the schedule is resumed from PAUSED state. If set to true, all missed runs will be scheduled. New runs will be scheduled after the backfill is complete. This will also update Schedule.catch_up field. Default to false. */
		catchUp: FormControl<boolean | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1ResumeScheduleRequestFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1ResumeScheduleRequestFormProperties>({
			catchUp: new FormControl<boolean | null | undefined>(undefined),
		});

	}


	/** An entry of mapping between color and AnnotationSpec. The mapping is used in segmentation mask. */
	export interface GoogleCloudAiplatformV1beta1SchemaAnnotationSpecColor {

		/** Represents a color in the RGBA color space. This representation is designed for simplicity of conversion to and from color representations in various languages over compactness. For example, the fields of this representation can be trivially provided to the constructor of `java.awt.Color` in Java; it can also be trivially provided to UIColor's `+colorWithRed:green:blue:alpha` method in iOS; and, with just a little work, it can be easily formatted into a CSS `rgba()` string in JavaScript. This reference page doesn't have information about the absolute color space that should be used to interpret the RGB value—for example, sRGB, Adobe RGB, DCI-P3, and BT.2020. By default, applications should assume the sRGB color space. When color equality needs to be decided, implementations, unless documented otherwise, treat two colors as equal if all their red, green, blue, and alpha values each differ by at most `1e-5`. Example (Java): import com.google.type.Color; // ... public static java.awt.Color fromProto(Color protocolor) { float alpha = protocolor.hasAlpha() ? protocolor.getAlpha().getValue() : 1.0; return new java.awt.Color( protocolor.getRed(), protocolor.getGreen(), protocolor.getBlue(), alpha); } public static Color toProto(java.awt.Color color) { float red = (float) color.getRed(); float green = (float) color.getGreen(); float blue = (float) color.getBlue(); float denominator = 255.0; Color.Builder resultBuilder = Color .newBuilder() .setRed(red / denominator) .setGreen(green / denominator) .setBlue(blue / denominator); int alpha = color.getAlpha(); if (alpha != 255) { result.setAlpha( FloatValue .newBuilder() .setValue(((float) alpha) / denominator) .build()); } return resultBuilder.build(); } // ... Example (iOS / Obj-C): // ... static UIColor* fromProto(Color* protocolor) { float red = [protocolor red]; float green = [protocolor green]; float blue = [protocolor blue]; FloatValue* alpha_wrapper = [protocolor alpha]; float alpha = 1.0; if (alpha_wrapper != nil) { alpha = [alpha_wrapper value]; } return [UIColor colorWithRed:red green:green blue:blue alpha:alpha]; } static Color* toProto(UIColor* color) { CGFloat red, green, blue, alpha; if (![color getRed:&red green:&green blue:&blue alpha:&alpha]) { return nil; } Color* result = [[Color alloc] init]; [result setRed:red]; [result setGreen:green]; [result setBlue:blue]; if (alpha <= 0.9999) { [result setAlpha:floatWrapperWithValue(alpha)]; } [result autorelease]; return result; } // ... Example (JavaScript): // ... var protoToCssColor = function(rgb_color) { var redFrac = rgb_color.red || 0.0; var greenFrac = rgb_color.green || 0.0; var blueFrac = rgb_color.blue || 0.0; var red = Math.floor(redFrac * 255); var green = Math.floor(greenFrac * 255); var blue = Math.floor(blueFrac * 255); if (!('alpha' in rgb_color)) { return rgbToCssColor(red, green, blue); } var alphaFrac = rgb_color.alpha.value || 0.0; var rgbParams = [red, green, blue].join(','); return ['rgba(', rgbParams, ',', alphaFrac, ')'].join(''); }; var rgbToCssColor = function(red, green, blue) { var rgbNumber = new Number((red << 16) | (green << 8) | blue); var hexString = rgbNumber.toString(16); var missingZeros = 6 - hexString.length; var resultBuilder = ['#']; for (var i = 0; i < missingZeros; i++) { resultBuilder.push('0'); } resultBuilder.push(hexString); return resultBuilder.join(''); }; // ... */
		color?: GoogleTypeColor;

		/** The display name of the AnnotationSpec represented by the color in the segmentation mask. */
		displayName?: string | null;

		/** The ID of the AnnotationSpec represented by the color in the segmentation mask. */
		id?: string | null;
	}

	/** An entry of mapping between color and AnnotationSpec. The mapping is used in segmentation mask. */
	export interface GoogleCloudAiplatformV1beta1SchemaAnnotationSpecColorFormProperties {

		/** The display name of the AnnotationSpec represented by the color in the segmentation mask. */
		displayName: FormControl<string | null | undefined>,

		/** The ID of the AnnotationSpec represented by the color in the segmentation mask. */
		id: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1SchemaAnnotationSpecColorFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1SchemaAnnotationSpecColorFormProperties>({
			displayName: new FormControl<string | null | undefined>(undefined),
			id: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Represents a color in the RGBA color space. This representation is designed for simplicity of conversion to and from color representations in various languages over compactness. For example, the fields of this representation can be trivially provided to the constructor of `java.awt.Color` in Java; it can also be trivially provided to UIColor's `+colorWithRed:green:blue:alpha` method in iOS; and, with just a little work, it can be easily formatted into a CSS `rgba()` string in JavaScript. This reference page doesn't have information about the absolute color space that should be used to interpret the RGB value—for example, sRGB, Adobe RGB, DCI-P3, and BT.2020. By default, applications should assume the sRGB color space. When color equality needs to be decided, implementations, unless documented otherwise, treat two colors as equal if all their red, green, blue, and alpha values each differ by at most `1e-5`. Example (Java): import com.google.type.Color; // ... public static java.awt.Color fromProto(Color protocolor) { float alpha = protocolor.hasAlpha() ? protocolor.getAlpha().getValue() : 1.0; return new java.awt.Color( protocolor.getRed(), protocolor.getGreen(), protocolor.getBlue(), alpha); } public static Color toProto(java.awt.Color color) { float red = (float) color.getRed(); float green = (float) color.getGreen(); float blue = (float) color.getBlue(); float denominator = 255.0; Color.Builder resultBuilder = Color .newBuilder() .setRed(red / denominator) .setGreen(green / denominator) .setBlue(blue / denominator); int alpha = color.getAlpha(); if (alpha != 255) { result.setAlpha( FloatValue .newBuilder() .setValue(((float) alpha) / denominator) .build()); } return resultBuilder.build(); } // ... Example (iOS / Obj-C): // ... static UIColor* fromProto(Color* protocolor) { float red = [protocolor red]; float green = [protocolor green]; float blue = [protocolor blue]; FloatValue* alpha_wrapper = [protocolor alpha]; float alpha = 1.0; if (alpha_wrapper != nil) { alpha = [alpha_wrapper value]; } return [UIColor colorWithRed:red green:green blue:blue alpha:alpha]; } static Color* toProto(UIColor* color) { CGFloat red, green, blue, alpha; if (![color getRed:&red green:&green blue:&blue alpha:&alpha]) { return nil; } Color* result = [[Color alloc] init]; [result setRed:red]; [result setGreen:green]; [result setBlue:blue]; if (alpha <= 0.9999) { [result setAlpha:floatWrapperWithValue(alpha)]; } [result autorelease]; return result; } // ... Example (JavaScript): // ... var protoToCssColor = function(rgb_color) { var redFrac = rgb_color.red || 0.0; var greenFrac = rgb_color.green || 0.0; var blueFrac = rgb_color.blue || 0.0; var red = Math.floor(redFrac * 255); var green = Math.floor(greenFrac * 255); var blue = Math.floor(blueFrac * 255); if (!('alpha' in rgb_color)) { return rgbToCssColor(red, green, blue); } var alphaFrac = rgb_color.alpha.value || 0.0; var rgbParams = [red, green, blue].join(','); return ['rgba(', rgbParams, ',', alphaFrac, ')'].join(''); }; var rgbToCssColor = function(red, green, blue) { var rgbNumber = new Number((red << 16) | (green << 8) | blue); var hexString = rgbNumber.toString(16); var missingZeros = 6 - hexString.length; var resultBuilder = ['#']; for (var i = 0; i < missingZeros; i++) { resultBuilder.push('0'); } resultBuilder.push(hexString); return resultBuilder.join(''); }; // ... */
	export interface GoogleTypeColor {

		/** The fraction of this color that should be applied to the pixel. That is, the final pixel color is defined by the equation: `pixel color = alpha * (this color) + (1.0 - alpha) * (background color)` This means that a value of 1.0 corresponds to a solid color, whereas a value of 0.0 corresponds to a completely transparent color. This uses a wrapper message rather than a simple float scalar so that it is possible to distinguish between a default value and the value being unset. If omitted, this color object is rendered as a solid color (as if the alpha value had been explicitly given a value of 1.0). */
		alpha?: number | null;

		/** The amount of blue in the color as a value in the interval [0, 1]. */
		blue?: number | null;

		/** The amount of green in the color as a value in the interval [0, 1]. */
		green?: number | null;

		/** The amount of red in the color as a value in the interval [0, 1]. */
		red?: number | null;
	}

	/** Represents a color in the RGBA color space. This representation is designed for simplicity of conversion to and from color representations in various languages over compactness. For example, the fields of this representation can be trivially provided to the constructor of `java.awt.Color` in Java; it can also be trivially provided to UIColor's `+colorWithRed:green:blue:alpha` method in iOS; and, with just a little work, it can be easily formatted into a CSS `rgba()` string in JavaScript. This reference page doesn't have information about the absolute color space that should be used to interpret the RGB value—for example, sRGB, Adobe RGB, DCI-P3, and BT.2020. By default, applications should assume the sRGB color space. When color equality needs to be decided, implementations, unless documented otherwise, treat two colors as equal if all their red, green, blue, and alpha values each differ by at most `1e-5`. Example (Java): import com.google.type.Color; // ... public static java.awt.Color fromProto(Color protocolor) { float alpha = protocolor.hasAlpha() ? protocolor.getAlpha().getValue() : 1.0; return new java.awt.Color( protocolor.getRed(), protocolor.getGreen(), protocolor.getBlue(), alpha); } public static Color toProto(java.awt.Color color) { float red = (float) color.getRed(); float green = (float) color.getGreen(); float blue = (float) color.getBlue(); float denominator = 255.0; Color.Builder resultBuilder = Color .newBuilder() .setRed(red / denominator) .setGreen(green / denominator) .setBlue(blue / denominator); int alpha = color.getAlpha(); if (alpha != 255) { result.setAlpha( FloatValue .newBuilder() .setValue(((float) alpha) / denominator) .build()); } return resultBuilder.build(); } // ... Example (iOS / Obj-C): // ... static UIColor* fromProto(Color* protocolor) { float red = [protocolor red]; float green = [protocolor green]; float blue = [protocolor blue]; FloatValue* alpha_wrapper = [protocolor alpha]; float alpha = 1.0; if (alpha_wrapper != nil) { alpha = [alpha_wrapper value]; } return [UIColor colorWithRed:red green:green blue:blue alpha:alpha]; } static Color* toProto(UIColor* color) { CGFloat red, green, blue, alpha; if (![color getRed:&red green:&green blue:&blue alpha:&alpha]) { return nil; } Color* result = [[Color alloc] init]; [result setRed:red]; [result setGreen:green]; [result setBlue:blue]; if (alpha <= 0.9999) { [result setAlpha:floatWrapperWithValue(alpha)]; } [result autorelease]; return result; } // ... Example (JavaScript): // ... var protoToCssColor = function(rgb_color) { var redFrac = rgb_color.red || 0.0; var greenFrac = rgb_color.green || 0.0; var blueFrac = rgb_color.blue || 0.0; var red = Math.floor(redFrac * 255); var green = Math.floor(greenFrac * 255); var blue = Math.floor(blueFrac * 255); if (!('alpha' in rgb_color)) { return rgbToCssColor(red, green, blue); } var alphaFrac = rgb_color.alpha.value || 0.0; var rgbParams = [red, green, blue].join(','); return ['rgba(', rgbParams, ',', alphaFrac, ')'].join(''); }; var rgbToCssColor = function(red, green, blue) { var rgbNumber = new Number((red << 16) | (green << 8) | blue); var hexString = rgbNumber.toString(16); var missingZeros = 6 - hexString.length; var resultBuilder = ['#']; for (var i = 0; i < missingZeros; i++) { resultBuilder.push('0'); } resultBuilder.push(hexString); return resultBuilder.join(''); }; // ... */
	export interface GoogleTypeColorFormProperties {

		/** The fraction of this color that should be applied to the pixel. That is, the final pixel color is defined by the equation: `pixel color = alpha * (this color) + (1.0 - alpha) * (background color)` This means that a value of 1.0 corresponds to a solid color, whereas a value of 0.0 corresponds to a completely transparent color. This uses a wrapper message rather than a simple float scalar so that it is possible to distinguish between a default value and the value being unset. If omitted, this color object is rendered as a solid color (as if the alpha value had been explicitly given a value of 1.0). */
		alpha: FormControl<number | null | undefined>,

		/** The amount of blue in the color as a value in the interval [0, 1]. */
		blue: FormControl<number | null | undefined>,

		/** The amount of green in the color as a value in the interval [0, 1]. */
		green: FormControl<number | null | undefined>,

		/** The amount of red in the color as a value in the interval [0, 1]. */
		red: FormControl<number | null | undefined>,
	}
	export function CreateGoogleTypeColorFormGroup() {
		return new FormGroup<GoogleTypeColorFormProperties>({
			alpha: new FormControl<number | null | undefined>(undefined),
			blue: new FormControl<number | null | undefined>(undefined),
			green: new FormControl<number | null | undefined>(undefined),
			red: new FormControl<number | null | undefined>(undefined),
		});

	}


	/** Annotation details specific to image object detection. */
	export interface GoogleCloudAiplatformV1beta1SchemaImageBoundingBoxAnnotation {

		/** The resource Id of the AnnotationSpec that this Annotation pertains to. */
		annotationSpecId?: string | null;

		/** The display name of the AnnotationSpec that this Annotation pertains to. */
		displayName?: string | null;

		/** The rightmost coordinate of the bounding box. */
		xMax?: number | null;

		/** The leftmost coordinate of the bounding box. */
		xMin?: number | null;

		/** The bottommost coordinate of the bounding box. */
		yMax?: number | null;

		/** The topmost coordinate of the bounding box. */
		yMin?: number | null;
	}

	/** Annotation details specific to image object detection. */
	export interface GoogleCloudAiplatformV1beta1SchemaImageBoundingBoxAnnotationFormProperties {

		/** The resource Id of the AnnotationSpec that this Annotation pertains to. */
		annotationSpecId: FormControl<string | null | undefined>,

		/** The display name of the AnnotationSpec that this Annotation pertains to. */
		displayName: FormControl<string | null | undefined>,

		/** The rightmost coordinate of the bounding box. */
		xMax: FormControl<number | null | undefined>,

		/** The leftmost coordinate of the bounding box. */
		xMin: FormControl<number | null | undefined>,

		/** The bottommost coordinate of the bounding box. */
		yMax: FormControl<number | null | undefined>,

		/** The topmost coordinate of the bounding box. */
		yMin: FormControl<number | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1SchemaImageBoundingBoxAnnotationFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1SchemaImageBoundingBoxAnnotationFormProperties>({
			annotationSpecId: new FormControl<string | null | undefined>(undefined),
			displayName: new FormControl<string | null | undefined>(undefined),
			xMax: new FormControl<number | null | undefined>(undefined),
			xMin: new FormControl<number | null | undefined>(undefined),
			yMax: new FormControl<number | null | undefined>(undefined),
			yMin: new FormControl<number | null | undefined>(undefined),
		});

	}


	/** Annotation details specific to image classification. */
	export interface GoogleCloudAiplatformV1beta1SchemaImageClassificationAnnotation {

		/** The resource Id of the AnnotationSpec that this Annotation pertains to. */
		annotationSpecId?: string | null;

		/** The display name of the AnnotationSpec that this Annotation pertains to. */
		displayName?: string | null;
	}

	/** Annotation details specific to image classification. */
	export interface GoogleCloudAiplatformV1beta1SchemaImageClassificationAnnotationFormProperties {

		/** The resource Id of the AnnotationSpec that this Annotation pertains to. */
		annotationSpecId: FormControl<string | null | undefined>,

		/** The display name of the AnnotationSpec that this Annotation pertains to. */
		displayName: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1SchemaImageClassificationAnnotationFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1SchemaImageClassificationAnnotationFormProperties>({
			annotationSpecId: new FormControl<string | null | undefined>(undefined),
			displayName: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Payload of Image DataItem. */
	export interface GoogleCloudAiplatformV1beta1SchemaImageDataItem {

		/** Required. Google Cloud Storage URI points to the original image in user's bucket. The image is up to 30MB in size. */
		gcsUri?: string | null;

		/** Output only. The mime type of the content of the image. Only the images in below listed mime types are supported. - image/jpeg - image/gif - image/png - image/webp - image/bmp - image/tiff - image/vnd.microsoft.icon */
		mimeType?: string | null;
	}

	/** Payload of Image DataItem. */
	export interface GoogleCloudAiplatformV1beta1SchemaImageDataItemFormProperties {

		/** Required. Google Cloud Storage URI points to the original image in user's bucket. The image is up to 30MB in size. */
		gcsUri: FormControl<string | null | undefined>,

		/** Output only. The mime type of the content of the image. Only the images in below listed mime types are supported. - image/jpeg - image/gif - image/png - image/webp - image/bmp - image/tiff - image/vnd.microsoft.icon */
		mimeType: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1SchemaImageDataItemFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1SchemaImageDataItemFormProperties>({
			gcsUri: new FormControl<string | null | undefined>(undefined),
			mimeType: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** The metadata of Datasets that contain Image DataItems. */
	export interface GoogleCloudAiplatformV1beta1SchemaImageDatasetMetadata {

		/** Points to a YAML file stored on Google Cloud Storage describing payload of the Image DataItems that belong to this Dataset. */
		dataItemSchemaUri?: string | null;

		/** Google Cloud Storage Bucket name that contains the blob data of this Dataset. */
		gcsBucket?: string | null;
	}

	/** The metadata of Datasets that contain Image DataItems. */
	export interface GoogleCloudAiplatformV1beta1SchemaImageDatasetMetadataFormProperties {

		/** Points to a YAML file stored on Google Cloud Storage describing payload of the Image DataItems that belong to this Dataset. */
		dataItemSchemaUri: FormControl<string | null | undefined>,

		/** Google Cloud Storage Bucket name that contains the blob data of this Dataset. */
		gcsBucket: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1SchemaImageDatasetMetadataFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1SchemaImageDatasetMetadataFormProperties>({
			dataItemSchemaUri: new FormControl<string | null | undefined>(undefined),
			gcsBucket: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Annotation details specific to image segmentation. */
	export interface GoogleCloudAiplatformV1beta1SchemaImageSegmentationAnnotation {

		/** The mask based segmentation annotation. */
		maskAnnotation?: GoogleCloudAiplatformV1beta1SchemaImageSegmentationAnnotationMaskAnnotation;

		/** Represents a polygon in image. */
		polygonAnnotation?: GoogleCloudAiplatformV1beta1SchemaImageSegmentationAnnotationPolygonAnnotation;

		/** Represents a polyline in image. */
		polylineAnnotation?: GoogleCloudAiplatformV1beta1SchemaImageSegmentationAnnotationPolylineAnnotation;
	}

	/** Annotation details specific to image segmentation. */
	export interface GoogleCloudAiplatformV1beta1SchemaImageSegmentationAnnotationFormProperties {
	}
	export function CreateGoogleCloudAiplatformV1beta1SchemaImageSegmentationAnnotationFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1SchemaImageSegmentationAnnotationFormProperties>({
		});

	}


	/** The mask based segmentation annotation. */
	export interface GoogleCloudAiplatformV1beta1SchemaImageSegmentationAnnotationMaskAnnotation {

		/** The mapping between color and AnnotationSpec for this Annotation. */
		annotationSpecColors?: Array<GoogleCloudAiplatformV1beta1SchemaAnnotationSpecColor>;

		/** Google Cloud Storage URI that points to the mask image. The image must be in PNG format. It must have the same size as the DataItem's image. Each pixel in the image mask represents the AnnotationSpec which the pixel in the image DataItem belong to. Each color is mapped to one AnnotationSpec based on annotation_spec_colors. */
		maskGcsUri?: string | null;
	}

	/** The mask based segmentation annotation. */
	export interface GoogleCloudAiplatformV1beta1SchemaImageSegmentationAnnotationMaskAnnotationFormProperties {

		/** Google Cloud Storage URI that points to the mask image. The image must be in PNG format. It must have the same size as the DataItem's image. Each pixel in the image mask represents the AnnotationSpec which the pixel in the image DataItem belong to. Each color is mapped to one AnnotationSpec based on annotation_spec_colors. */
		maskGcsUri: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1SchemaImageSegmentationAnnotationMaskAnnotationFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1SchemaImageSegmentationAnnotationMaskAnnotationFormProperties>({
			maskGcsUri: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Represents a polygon in image. */
	export interface GoogleCloudAiplatformV1beta1SchemaImageSegmentationAnnotationPolygonAnnotation {

		/** The resource Id of the AnnotationSpec that this Annotation pertains to. */
		annotationSpecId?: string | null;

		/** The display name of the AnnotationSpec that this Annotation pertains to. */
		displayName?: string | null;

		/** The vertexes are connected one by one and the last vertex is connected to the first one to represent a polygon. */
		vertexes?: Array<GoogleCloudAiplatformV1beta1SchemaVertex>;
	}

	/** Represents a polygon in image. */
	export interface GoogleCloudAiplatformV1beta1SchemaImageSegmentationAnnotationPolygonAnnotationFormProperties {

		/** The resource Id of the AnnotationSpec that this Annotation pertains to. */
		annotationSpecId: FormControl<string | null | undefined>,

		/** The display name of the AnnotationSpec that this Annotation pertains to. */
		displayName: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1SchemaImageSegmentationAnnotationPolygonAnnotationFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1SchemaImageSegmentationAnnotationPolygonAnnotationFormProperties>({
			annotationSpecId: new FormControl<string | null | undefined>(undefined),
			displayName: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** A vertex represents a 2D point in the image. NOTE: the normalized vertex coordinates are relative to the original image and range from 0 to 1. */
	export interface GoogleCloudAiplatformV1beta1SchemaVertex {

		/** X coordinate. */
		x?: number | null;

		/** Y coordinate. */
		y?: number | null;
	}

	/** A vertex represents a 2D point in the image. NOTE: the normalized vertex coordinates are relative to the original image and range from 0 to 1. */
	export interface GoogleCloudAiplatformV1beta1SchemaVertexFormProperties {

		/** X coordinate. */
		x: FormControl<number | null | undefined>,

		/** Y coordinate. */
		y: FormControl<number | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1SchemaVertexFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1SchemaVertexFormProperties>({
			x: new FormControl<number | null | undefined>(undefined),
			y: new FormControl<number | null | undefined>(undefined),
		});

	}


	/** Represents a polyline in image. */
	export interface GoogleCloudAiplatformV1beta1SchemaImageSegmentationAnnotationPolylineAnnotation {

		/** The resource Id of the AnnotationSpec that this Annotation pertains to. */
		annotationSpecId?: string | null;

		/** The display name of the AnnotationSpec that this Annotation pertains to. */
		displayName?: string | null;

		/** The vertexes are connected one by one and the last vertex in not connected to the first one. */
		vertexes?: Array<GoogleCloudAiplatformV1beta1SchemaVertex>;
	}

	/** Represents a polyline in image. */
	export interface GoogleCloudAiplatformV1beta1SchemaImageSegmentationAnnotationPolylineAnnotationFormProperties {

		/** The resource Id of the AnnotationSpec that this Annotation pertains to. */
		annotationSpecId: FormControl<string | null | undefined>,

		/** The display name of the AnnotationSpec that this Annotation pertains to. */
		displayName: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1SchemaImageSegmentationAnnotationPolylineAnnotationFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1SchemaImageSegmentationAnnotationPolylineAnnotationFormProperties>({
			annotationSpecId: new FormControl<string | null | undefined>(undefined),
			displayName: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Bounding box matching model metrics for a single intersection-over-union threshold and multiple label match confidence thresholds. */
	export interface GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsBoundingBoxMetrics {

		/** Metrics for each label-match confidence_threshold from 0.05,0.10,...,0.95,0.96,0.97,0.98,0.99. Precision-recall curve is derived from them. */
		confidenceMetrics?: Array<GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsBoundingBoxMetricsConfidenceMetrics>;

		/** The intersection-over-union threshold value used to compute this metrics entry. */
		iouThreshold?: number | null;

		/** The mean average precision, most often close to `auPrc`. */
		meanAveragePrecision?: number | null;
	}

	/** Bounding box matching model metrics for a single intersection-over-union threshold and multiple label match confidence thresholds. */
	export interface GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsBoundingBoxMetricsFormProperties {

		/** The intersection-over-union threshold value used to compute this metrics entry. */
		iouThreshold: FormControl<number | null | undefined>,

		/** The mean average precision, most often close to `auPrc`. */
		meanAveragePrecision: FormControl<number | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsBoundingBoxMetricsFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsBoundingBoxMetricsFormProperties>({
			iouThreshold: new FormControl<number | null | undefined>(undefined),
			meanAveragePrecision: new FormControl<number | null | undefined>(undefined),
		});

	}


	/** Metrics for a single confidence threshold. */
	export interface GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsBoundingBoxMetricsConfidenceMetrics {

		/** The confidence threshold value used to compute the metrics. */
		confidenceThreshold?: number | null;

		/** The harmonic mean of recall and precision. */
		f1Score?: number | null;

		/** Precision under the given confidence threshold. */
		precision?: number | null;

		/** Recall under the given confidence threshold. */
		recall?: number | null;
	}

	/** Metrics for a single confidence threshold. */
	export interface GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsBoundingBoxMetricsConfidenceMetricsFormProperties {

		/** The confidence threshold value used to compute the metrics. */
		confidenceThreshold: FormControl<number | null | undefined>,

		/** The harmonic mean of recall and precision. */
		f1Score: FormControl<number | null | undefined>,

		/** Precision under the given confidence threshold. */
		precision: FormControl<number | null | undefined>,

		/** Recall under the given confidence threshold. */
		recall: FormControl<number | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsBoundingBoxMetricsConfidenceMetricsFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsBoundingBoxMetricsConfidenceMetricsFormProperties>({
			confidenceThreshold: new FormControl<number | null | undefined>(undefined),
			f1Score: new FormControl<number | null | undefined>(undefined),
			precision: new FormControl<number | null | undefined>(undefined),
			recall: new FormControl<number | null | undefined>(undefined),
		});

	}


	/** Metrics for classification evaluation results. */
	export interface GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsClassificationEvaluationMetrics {

		/** The Area Under Precision-Recall Curve metric. Micro-averaged for the overall evaluation. */
		auPrc?: number | null;

		/** The Area Under Receiver Operating Characteristic curve metric. Micro-averaged for the overall evaluation. */
		auRoc?: number | null;

		/** Metrics for each `confidenceThreshold` in 0.00,0.05,0.10,...,0.95,0.96,0.97,0.98,0.99 and `positionThreshold` = INT32_MAX_VALUE. ROC and precision-recall curves, and other aggregated metrics are derived from them. The confidence metrics entries may also be supplied for additional values of `positionThreshold`, but from these no aggregated metrics are computed. */
		confidenceMetrics?: Array<GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsClassificationEvaluationMetricsConfidenceMetrics>;
		confusionMatrix?: GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsConfusionMatrix;

		/** The Log Loss metric. */
		logLoss?: number | null;
	}

	/** Metrics for classification evaluation results. */
	export interface GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsClassificationEvaluationMetricsFormProperties {

		/** The Area Under Precision-Recall Curve metric. Micro-averaged for the overall evaluation. */
		auPrc: FormControl<number | null | undefined>,

		/** The Area Under Receiver Operating Characteristic curve metric. Micro-averaged for the overall evaluation. */
		auRoc: FormControl<number | null | undefined>,

		/** The Log Loss metric. */
		logLoss: FormControl<number | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsClassificationEvaluationMetricsFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsClassificationEvaluationMetricsFormProperties>({
			auPrc: new FormControl<number | null | undefined>(undefined),
			auRoc: new FormControl<number | null | undefined>(undefined),
			logLoss: new FormControl<number | null | undefined>(undefined),
		});

	}

	export interface GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsClassificationEvaluationMetricsConfidenceMetrics {

		/** Metrics are computed with an assumption that the Model never returns predictions with score lower than this value. */
		confidenceThreshold?: number | null;
		confusionMatrix?: GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsConfusionMatrix;

		/** The harmonic mean of recall and precision. For summary metrics, it computes the micro-averaged F1 score. */
		f1Score?: number | null;

		/** The harmonic mean of recallAt1 and precisionAt1. */
		f1ScoreAt1?: number | null;

		/** Macro-averaged F1 Score. */
		f1ScoreMacro?: number | null;

		/** Micro-averaged F1 Score. */
		f1ScoreMicro?: number | null;

		/** The number of ground truth labels that are not matched by a Model created label. */
		falseNegativeCount?: string | null;

		/** The number of Model created labels that do not match a ground truth label. */
		falsePositiveCount?: string | null;

		/** False Positive Rate for the given confidence threshold. */
		falsePositiveRate?: number | null;

		/** The False Positive Rate when only considering the label that has the highest prediction score and not below the confidence threshold for each DataItem. */
		falsePositiveRateAt1?: number | null;

		/** Metrics are computed with an assumption that the Model always returns at most this many predictions (ordered by their score, descendingly), but they all still need to meet the `confidenceThreshold`. */
		maxPredictions?: number | null;

		/** Precision for the given confidence threshold. */
		precision?: number | null;

		/** The precision when only considering the label that has the highest prediction score and not below the confidence threshold for each DataItem. */
		precisionAt1?: number | null;

		/** Recall (True Positive Rate) for the given confidence threshold. */
		recall?: number | null;

		/** The Recall (True Positive Rate) when only considering the label that has the highest prediction score and not below the confidence threshold for each DataItem. */
		recallAt1?: number | null;

		/** The number of labels that were not created by the Model, but if they would, they would not match a ground truth label. */
		trueNegativeCount?: string | null;

		/** The number of Model created labels that match a ground truth label. */
		truePositiveCount?: string | null;
	}
	export interface GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsClassificationEvaluationMetricsConfidenceMetricsFormProperties {

		/** Metrics are computed with an assumption that the Model never returns predictions with score lower than this value. */
		confidenceThreshold: FormControl<number | null | undefined>,

		/** The harmonic mean of recall and precision. For summary metrics, it computes the micro-averaged F1 score. */
		f1Score: FormControl<number | null | undefined>,

		/** The harmonic mean of recallAt1 and precisionAt1. */
		f1ScoreAt1: FormControl<number | null | undefined>,

		/** Macro-averaged F1 Score. */
		f1ScoreMacro: FormControl<number | null | undefined>,

		/** Micro-averaged F1 Score. */
		f1ScoreMicro: FormControl<number | null | undefined>,

		/** The number of ground truth labels that are not matched by a Model created label. */
		falseNegativeCount: FormControl<string | null | undefined>,

		/** The number of Model created labels that do not match a ground truth label. */
		falsePositiveCount: FormControl<string | null | undefined>,

		/** False Positive Rate for the given confidence threshold. */
		falsePositiveRate: FormControl<number | null | undefined>,

		/** The False Positive Rate when only considering the label that has the highest prediction score and not below the confidence threshold for each DataItem. */
		falsePositiveRateAt1: FormControl<number | null | undefined>,

		/** Metrics are computed with an assumption that the Model always returns at most this many predictions (ordered by their score, descendingly), but they all still need to meet the `confidenceThreshold`. */
		maxPredictions: FormControl<number | null | undefined>,

		/** Precision for the given confidence threshold. */
		precision: FormControl<number | null | undefined>,

		/** The precision when only considering the label that has the highest prediction score and not below the confidence threshold for each DataItem. */
		precisionAt1: FormControl<number | null | undefined>,

		/** Recall (True Positive Rate) for the given confidence threshold. */
		recall: FormControl<number | null | undefined>,

		/** The Recall (True Positive Rate) when only considering the label that has the highest prediction score and not below the confidence threshold for each DataItem. */
		recallAt1: FormControl<number | null | undefined>,

		/** The number of labels that were not created by the Model, but if they would, they would not match a ground truth label. */
		trueNegativeCount: FormControl<string | null | undefined>,

		/** The number of Model created labels that match a ground truth label. */
		truePositiveCount: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsClassificationEvaluationMetricsConfidenceMetricsFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsClassificationEvaluationMetricsConfidenceMetricsFormProperties>({
			confidenceThreshold: new FormControl<number | null | undefined>(undefined),
			f1Score: new FormControl<number | null | undefined>(undefined),
			f1ScoreAt1: new FormControl<number | null | undefined>(undefined),
			f1ScoreMacro: new FormControl<number | null | undefined>(undefined),
			f1ScoreMicro: new FormControl<number | null | undefined>(undefined),
			falseNegativeCount: new FormControl<string | null | undefined>(undefined),
			falsePositiveCount: new FormControl<string | null | undefined>(undefined),
			falsePositiveRate: new FormControl<number | null | undefined>(undefined),
			falsePositiveRateAt1: new FormControl<number | null | undefined>(undefined),
			maxPredictions: new FormControl<number | null | undefined>(undefined),
			precision: new FormControl<number | null | undefined>(undefined),
			precisionAt1: new FormControl<number | null | undefined>(undefined),
			recall: new FormControl<number | null | undefined>(undefined),
			recallAt1: new FormControl<number | null | undefined>(undefined),
			trueNegativeCount: new FormControl<string | null | undefined>(undefined),
			truePositiveCount: new FormControl<string | null | undefined>(undefined),
		});

	}

	export interface GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsConfusionMatrix {

		/** AnnotationSpecs used in the confusion matrix. For AutoML Text Extraction, a special negative AnnotationSpec with empty `id` and `displayName` of "NULL" will be added as the last element. */
		annotationSpecs?: Array<GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsConfusionMatrixAnnotationSpecRef>;

		/** Rows in the confusion matrix. The number of rows is equal to the size of `annotationSpecs`. `rowsi` is the number of DataItems that have ground truth of the `annotationSpecs[i]` and are predicted as `annotationSpecs[j]` by the Model being evaluated. For Text Extraction, when `annotationSpecs[i]` is the last element in `annotationSpecs`, i.e. the special negative AnnotationSpec, `rowsi` is the number of predicted entities of `annoatationSpec[j]` that are not labeled as any of the ground truth AnnotationSpec. When annotationSpecs[j] is the special negative AnnotationSpec, `rowsi` is the number of entities have ground truth of `annotationSpec[i]` that are not predicted as an entity by the Model. The value of the last cell, i.e. `rowi` where i == j and `annotationSpec[i]` is the special negative AnnotationSpec, is always 0. */
		rows?: Array<string>;
	}
	export interface GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsConfusionMatrixFormProperties {
	}
	export function CreateGoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsConfusionMatrixFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsConfusionMatrixFormProperties>({
		});

	}

	export interface GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsConfusionMatrixAnnotationSpecRef {

		/** Display name of the AnnotationSpec. */
		displayName?: string | null;

		/** ID of the AnnotationSpec. */
		id?: string | null;
	}
	export interface GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsConfusionMatrixAnnotationSpecRefFormProperties {

		/** Display name of the AnnotationSpec. */
		displayName: FormControl<string | null | undefined>,

		/** ID of the AnnotationSpec. */
		id: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsConfusionMatrixAnnotationSpecRefFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsConfusionMatrixAnnotationSpecRefFormProperties>({
			displayName: new FormControl<string | null | undefined>(undefined),
			id: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Metrics for forecasting evaluation results. */
	export interface GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsForecastingEvaluationMetrics {

		/** Mean Absolute Error (MAE). */
		meanAbsoluteError?: number | null;

		/** Mean absolute percentage error. Infinity when there are zeros in the ground truth. */
		meanAbsolutePercentageError?: number | null;

		/** The quantile metrics entries for each quantile. */
		quantileMetrics?: Array<GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsForecastingEvaluationMetricsQuantileMetricsEntry>;

		/** Coefficient of determination as Pearson correlation coefficient. Undefined when ground truth or predictions are constant or near constant. */
		rSquared?: number | null;

		/** Root Mean Squared Error (RMSE). */
		rootMeanSquaredError?: number | null;

		/** Root mean squared log error. Undefined when there are negative ground truth values or predictions. */
		rootMeanSquaredLogError?: number | null;

		/** Root Mean Square Percentage Error. Square root of MSPE. Undefined/imaginary when MSPE is negative. */
		rootMeanSquaredPercentageError?: number | null;

		/** Weighted Absolute Percentage Error. Does not use weights, this is just what the metric is called. Undefined if actual values sum to zero. Will be very large if actual values sum to a very small number. */
		weightedAbsolutePercentageError?: number | null;
	}

	/** Metrics for forecasting evaluation results. */
	export interface GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsForecastingEvaluationMetricsFormProperties {

		/** Mean Absolute Error (MAE). */
		meanAbsoluteError: FormControl<number | null | undefined>,

		/** Mean absolute percentage error. Infinity when there are zeros in the ground truth. */
		meanAbsolutePercentageError: FormControl<number | null | undefined>,

		/** Coefficient of determination as Pearson correlation coefficient. Undefined when ground truth or predictions are constant or near constant. */
		rSquared: FormControl<number | null | undefined>,

		/** Root Mean Squared Error (RMSE). */
		rootMeanSquaredError: FormControl<number | null | undefined>,

		/** Root mean squared log error. Undefined when there are negative ground truth values or predictions. */
		rootMeanSquaredLogError: FormControl<number | null | undefined>,

		/** Root Mean Square Percentage Error. Square root of MSPE. Undefined/imaginary when MSPE is negative. */
		rootMeanSquaredPercentageError: FormControl<number | null | undefined>,

		/** Weighted Absolute Percentage Error. Does not use weights, this is just what the metric is called. Undefined if actual values sum to zero. Will be very large if actual values sum to a very small number. */
		weightedAbsolutePercentageError: FormControl<number | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsForecastingEvaluationMetricsFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsForecastingEvaluationMetricsFormProperties>({
			meanAbsoluteError: new FormControl<number | null | undefined>(undefined),
			meanAbsolutePercentageError: new FormControl<number | null | undefined>(undefined),
			rSquared: new FormControl<number | null | undefined>(undefined),
			rootMeanSquaredError: new FormControl<number | null | undefined>(undefined),
			rootMeanSquaredLogError: new FormControl<number | null | undefined>(undefined),
			rootMeanSquaredPercentageError: new FormControl<number | null | undefined>(undefined),
			weightedAbsolutePercentageError: new FormControl<number | null | undefined>(undefined),
		});

	}


	/** Entry for the Quantiles loss type optimization objective. */
	export interface GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsForecastingEvaluationMetricsQuantileMetricsEntry {

		/** This is a custom metric that calculates the percentage of true values that were less than the predicted value for that quantile. Only populated when optimization_objective is minimize-quantile-loss and each entry corresponds to an entry in quantiles The percent value can be used to compare with the quantile value, which is the target value. */
		observedQuantile?: number | null;

		/** The quantile for this entry. */
		quantile?: number | null;

		/** The scaled pinball loss of this quantile. */
		scaledPinballLoss?: number | null;
	}

	/** Entry for the Quantiles loss type optimization objective. */
	export interface GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsForecastingEvaluationMetricsQuantileMetricsEntryFormProperties {

		/** This is a custom metric that calculates the percentage of true values that were less than the predicted value for that quantile. Only populated when optimization_objective is minimize-quantile-loss and each entry corresponds to an entry in quantiles The percent value can be used to compare with the quantile value, which is the target value. */
		observedQuantile: FormControl<number | null | undefined>,

		/** The quantile for this entry. */
		quantile: FormControl<number | null | undefined>,

		/** The scaled pinball loss of this quantile. */
		scaledPinballLoss: FormControl<number | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsForecastingEvaluationMetricsQuantileMetricsEntryFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsForecastingEvaluationMetricsQuantileMetricsEntryFormProperties>({
			observedQuantile: new FormControl<number | null | undefined>(undefined),
			quantile: new FormControl<number | null | undefined>(undefined),
			scaledPinballLoss: new FormControl<number | null | undefined>(undefined),
		});

	}

	export interface GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsGeneralTextGenerationEvaluationMetrics {

		/** BLEU (bilingual evaluation understudy) scores based on sacrebleu implementation. */
		bleu?: number | null;

		/** ROUGE-L (Longest Common Subsequence) scoring at summary level. */
		rougeLSum?: number | null;
	}
	export interface GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsGeneralTextGenerationEvaluationMetricsFormProperties {

		/** BLEU (bilingual evaluation understudy) scores based on sacrebleu implementation. */
		bleu: FormControl<number | null | undefined>,

		/** ROUGE-L (Longest Common Subsequence) scoring at summary level. */
		rougeLSum: FormControl<number | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsGeneralTextGenerationEvaluationMetricsFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsGeneralTextGenerationEvaluationMetricsFormProperties>({
			bleu: new FormControl<number | null | undefined>(undefined),
			rougeLSum: new FormControl<number | null | undefined>(undefined),
		});

	}


	/** Metrics for image object detection evaluation results. */
	export interface GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsImageObjectDetectionEvaluationMetrics {

		/** The single metric for bounding boxes evaluation: the `meanAveragePrecision` averaged over all `boundingBoxMetricsEntries`. */
		boundingBoxMeanAveragePrecision?: number | null;

		/** The bounding boxes match metrics for each intersection-over-union threshold 0.05,0.10,...,0.95,0.96,0.97,0.98,0.99 and each label confidence threshold 0.05,0.10,...,0.95,0.96,0.97,0.98,0.99 pair. */
		boundingBoxMetrics?: Array<GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsBoundingBoxMetrics>;

		/** The total number of bounding boxes (i.e. summed over all images) the ground truth used to create this evaluation had. */
		evaluatedBoundingBoxCount?: number | null;
	}

	/** Metrics for image object detection evaluation results. */
	export interface GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsImageObjectDetectionEvaluationMetricsFormProperties {

		/** The single metric for bounding boxes evaluation: the `meanAveragePrecision` averaged over all `boundingBoxMetricsEntries`. */
		boundingBoxMeanAveragePrecision: FormControl<number | null | undefined>,

		/** The total number of bounding boxes (i.e. summed over all images) the ground truth used to create this evaluation had. */
		evaluatedBoundingBoxCount: FormControl<number | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsImageObjectDetectionEvaluationMetricsFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsImageObjectDetectionEvaluationMetricsFormProperties>({
			boundingBoxMeanAveragePrecision: new FormControl<number | null | undefined>(undefined),
			evaluatedBoundingBoxCount: new FormControl<number | null | undefined>(undefined),
		});

	}


	/** Metrics for image segmentation evaluation results. */
	export interface GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsImageSegmentationEvaluationMetrics {

		/** Metrics for each confidenceThreshold in 0.00,0.05,0.10,...,0.95,0.96,0.97,0.98,0.99 Precision-recall curve can be derived from it. */
		confidenceMetricsEntries?: Array<GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsImageSegmentationEvaluationMetricsConfidenceMetricsEntry>;
	}

	/** Metrics for image segmentation evaluation results. */
	export interface GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsImageSegmentationEvaluationMetricsFormProperties {
	}
	export function CreateGoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsImageSegmentationEvaluationMetricsFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsImageSegmentationEvaluationMetricsFormProperties>({
		});

	}

	export interface GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsImageSegmentationEvaluationMetricsConfidenceMetricsEntry {

		/** Metrics are computed with an assumption that the model never returns predictions with score lower than this value. */
		confidenceThreshold?: number | null;
		confusionMatrix?: GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsConfusionMatrix;

		/** DSC or the F1 score, The harmonic mean of recall and precision. */
		diceScoreCoefficient?: number | null;

		/** The intersection-over-union score. The measure of overlap of the annotation's category mask with ground truth category mask on the DataItem. */
		iouScore?: number | null;

		/** Precision for the given confidence threshold. */
		precision?: number | null;

		/** Recall (True Positive Rate) for the given confidence threshold. */
		recall?: number | null;
	}
	export interface GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsImageSegmentationEvaluationMetricsConfidenceMetricsEntryFormProperties {

		/** Metrics are computed with an assumption that the model never returns predictions with score lower than this value. */
		confidenceThreshold: FormControl<number | null | undefined>,

		/** DSC or the F1 score, The harmonic mean of recall and precision. */
		diceScoreCoefficient: FormControl<number | null | undefined>,

		/** The intersection-over-union score. The measure of overlap of the annotation's category mask with ground truth category mask on the DataItem. */
		iouScore: FormControl<number | null | undefined>,

		/** Precision for the given confidence threshold. */
		precision: FormControl<number | null | undefined>,

		/** Recall (True Positive Rate) for the given confidence threshold. */
		recall: FormControl<number | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsImageSegmentationEvaluationMetricsConfidenceMetricsEntryFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsImageSegmentationEvaluationMetricsConfidenceMetricsEntryFormProperties>({
			confidenceThreshold: new FormControl<number | null | undefined>(undefined),
			diceScoreCoefficient: new FormControl<number | null | undefined>(undefined),
			iouScore: new FormControl<number | null | undefined>(undefined),
			precision: new FormControl<number | null | undefined>(undefined),
			recall: new FormControl<number | null | undefined>(undefined),
		});

	}

	export interface GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsQuestionAnsweringEvaluationMetrics {

		/** The rate at which the input predicted strings exactly match their references. */
		exactMatch?: number | null;
	}
	export interface GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsQuestionAnsweringEvaluationMetricsFormProperties {

		/** The rate at which the input predicted strings exactly match their references. */
		exactMatch: FormControl<number | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsQuestionAnsweringEvaluationMetricsFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsQuestionAnsweringEvaluationMetricsFormProperties>({
			exactMatch: new FormControl<number | null | undefined>(undefined),
		});

	}


	/** Metrics for regression evaluation results. */
	export interface GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsRegressionEvaluationMetrics {

		/** Mean Absolute Error (MAE). */
		meanAbsoluteError?: number | null;

		/** Mean absolute percentage error. Infinity when there are zeros in the ground truth. */
		meanAbsolutePercentageError?: number | null;

		/** Coefficient of determination as Pearson correlation coefficient. Undefined when ground truth or predictions are constant or near constant. */
		rSquared?: number | null;

		/** Root Mean Squared Error (RMSE). */
		rootMeanSquaredError?: number | null;

		/** Root mean squared log error. Undefined when there are negative ground truth values or predictions. */
		rootMeanSquaredLogError?: number | null;
	}

	/** Metrics for regression evaluation results. */
	export interface GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsRegressionEvaluationMetricsFormProperties {

		/** Mean Absolute Error (MAE). */
		meanAbsoluteError: FormControl<number | null | undefined>,

		/** Mean absolute percentage error. Infinity when there are zeros in the ground truth. */
		meanAbsolutePercentageError: FormControl<number | null | undefined>,

		/** Coefficient of determination as Pearson correlation coefficient. Undefined when ground truth or predictions are constant or near constant. */
		rSquared: FormControl<number | null | undefined>,

		/** Root Mean Squared Error (RMSE). */
		rootMeanSquaredError: FormControl<number | null | undefined>,

		/** Root mean squared log error. Undefined when there are negative ground truth values or predictions. */
		rootMeanSquaredLogError: FormControl<number | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsRegressionEvaluationMetricsFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsRegressionEvaluationMetricsFormProperties>({
			meanAbsoluteError: new FormControl<number | null | undefined>(undefined),
			meanAbsolutePercentageError: new FormControl<number | null | undefined>(undefined),
			rSquared: new FormControl<number | null | undefined>(undefined),
			rootMeanSquaredError: new FormControl<number | null | undefined>(undefined),
			rootMeanSquaredLogError: new FormControl<number | null | undefined>(undefined),
		});

	}

	export interface GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsSummarizationEvaluationMetrics {

		/** ROUGE-L (Longest Common Subsequence) scoring at summary level. */
		rougeLSum?: number | null;
	}
	export interface GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsSummarizationEvaluationMetricsFormProperties {

		/** ROUGE-L (Longest Common Subsequence) scoring at summary level. */
		rougeLSum: FormControl<number | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsSummarizationEvaluationMetricsFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsSummarizationEvaluationMetricsFormProperties>({
			rougeLSum: new FormControl<number | null | undefined>(undefined),
		});

	}


	/** Metrics for text extraction evaluation results. */
	export interface GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsTextExtractionEvaluationMetrics {

		/** Metrics that have confidence thresholds. Precision-recall curve can be derived from them. */
		confidenceMetrics?: Array<GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsTextExtractionEvaluationMetricsConfidenceMetrics>;
		confusionMatrix?: GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsConfusionMatrix;
	}

	/** Metrics for text extraction evaluation results. */
	export interface GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsTextExtractionEvaluationMetricsFormProperties {
	}
	export function CreateGoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsTextExtractionEvaluationMetricsFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsTextExtractionEvaluationMetricsFormProperties>({
		});

	}

	export interface GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsTextExtractionEvaluationMetricsConfidenceMetrics {

		/** Metrics are computed with an assumption that the Model never returns predictions with score lower than this value. */
		confidenceThreshold?: number | null;

		/** The harmonic mean of recall and precision. */
		f1Score?: number | null;

		/** Precision for the given confidence threshold. */
		precision?: number | null;

		/** Recall (True Positive Rate) for the given confidence threshold. */
		recall?: number | null;
	}
	export interface GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsTextExtractionEvaluationMetricsConfidenceMetricsFormProperties {

		/** Metrics are computed with an assumption that the Model never returns predictions with score lower than this value. */
		confidenceThreshold: FormControl<number | null | undefined>,

		/** The harmonic mean of recall and precision. */
		f1Score: FormControl<number | null | undefined>,

		/** Precision for the given confidence threshold. */
		precision: FormControl<number | null | undefined>,

		/** Recall (True Positive Rate) for the given confidence threshold. */
		recall: FormControl<number | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsTextExtractionEvaluationMetricsConfidenceMetricsFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsTextExtractionEvaluationMetricsConfidenceMetricsFormProperties>({
			confidenceThreshold: new FormControl<number | null | undefined>(undefined),
			f1Score: new FormControl<number | null | undefined>(undefined),
			precision: new FormControl<number | null | undefined>(undefined),
			recall: new FormControl<number | null | undefined>(undefined),
		});

	}


	/** Model evaluation metrics for text sentiment problems. */
	export interface GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsTextSentimentEvaluationMetrics {
		confusionMatrix?: GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsConfusionMatrix;

		/** The harmonic mean of recall and precision. */
		f1Score?: number | null;

		/** Linear weighted kappa. Only set for ModelEvaluations, not for ModelEvaluationSlices. */
		linearKappa?: number | null;

		/** Mean absolute error. Only set for ModelEvaluations, not for ModelEvaluationSlices. */
		meanAbsoluteError?: number | null;

		/** Mean squared error. Only set for ModelEvaluations, not for ModelEvaluationSlices. */
		meanSquaredError?: number | null;

		/** Precision. */
		precision?: number | null;

		/** Quadratic weighted kappa. Only set for ModelEvaluations, not for ModelEvaluationSlices. */
		quadraticKappa?: number | null;

		/** Recall. */
		recall?: number | null;
	}

	/** Model evaluation metrics for text sentiment problems. */
	export interface GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsTextSentimentEvaluationMetricsFormProperties {

		/** The harmonic mean of recall and precision. */
		f1Score: FormControl<number | null | undefined>,

		/** Linear weighted kappa. Only set for ModelEvaluations, not for ModelEvaluationSlices. */
		linearKappa: FormControl<number | null | undefined>,

		/** Mean absolute error. Only set for ModelEvaluations, not for ModelEvaluationSlices. */
		meanAbsoluteError: FormControl<number | null | undefined>,

		/** Mean squared error. Only set for ModelEvaluations, not for ModelEvaluationSlices. */
		meanSquaredError: FormControl<number | null | undefined>,

		/** Precision. */
		precision: FormControl<number | null | undefined>,

		/** Quadratic weighted kappa. Only set for ModelEvaluations, not for ModelEvaluationSlices. */
		quadraticKappa: FormControl<number | null | undefined>,

		/** Recall. */
		recall: FormControl<number | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsTextSentimentEvaluationMetricsFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsTextSentimentEvaluationMetricsFormProperties>({
			f1Score: new FormControl<number | null | undefined>(undefined),
			linearKappa: new FormControl<number | null | undefined>(undefined),
			meanAbsoluteError: new FormControl<number | null | undefined>(undefined),
			meanSquaredError: new FormControl<number | null | undefined>(undefined),
			precision: new FormControl<number | null | undefined>(undefined),
			quadraticKappa: new FormControl<number | null | undefined>(undefined),
			recall: new FormControl<number | null | undefined>(undefined),
		});

	}


	/** UNIMPLEMENTED. Track matching model metrics for a single track match threshold and multiple label match confidence thresholds. */
	export interface GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsTrackMetrics {

		/** Metrics for each label-match `confidenceThreshold` from 0.05,0.10,...,0.95,0.96,0.97,0.98,0.99. Precision-recall curve is derived from them. */
		confidenceMetrics?: Array<GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsTrackMetricsConfidenceMetrics>;

		/** The intersection-over-union threshold value between bounding boxes across frames used to compute this metric entry. */
		iouThreshold?: number | null;

		/** The mean bounding box iou over all confidence thresholds. */
		meanBoundingBoxIou?: number | null;

		/** The mean mismatch rate over all confidence thresholds. */
		meanMismatchRate?: number | null;

		/** The mean average precision over all confidence thresholds. */
		meanTrackingAveragePrecision?: number | null;
	}

	/** UNIMPLEMENTED. Track matching model metrics for a single track match threshold and multiple label match confidence thresholds. */
	export interface GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsTrackMetricsFormProperties {

		/** The intersection-over-union threshold value between bounding boxes across frames used to compute this metric entry. */
		iouThreshold: FormControl<number | null | undefined>,

		/** The mean bounding box iou over all confidence thresholds. */
		meanBoundingBoxIou: FormControl<number | null | undefined>,

		/** The mean mismatch rate over all confidence thresholds. */
		meanMismatchRate: FormControl<number | null | undefined>,

		/** The mean average precision over all confidence thresholds. */
		meanTrackingAveragePrecision: FormControl<number | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsTrackMetricsFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsTrackMetricsFormProperties>({
			iouThreshold: new FormControl<number | null | undefined>(undefined),
			meanBoundingBoxIou: new FormControl<number | null | undefined>(undefined),
			meanMismatchRate: new FormControl<number | null | undefined>(undefined),
			meanTrackingAveragePrecision: new FormControl<number | null | undefined>(undefined),
		});

	}


	/** Metrics for a single confidence threshold. */
	export interface GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsTrackMetricsConfidenceMetrics {

		/** Bounding box intersection-over-union precision. Measures how well the bounding boxes overlap between each other (e.g. complete overlap or just barely above iou_threshold). */
		boundingBoxIou?: number | null;

		/** The confidence threshold value used to compute the metrics. */
		confidenceThreshold?: number | null;

		/** Mismatch rate, which measures the tracking consistency, i.e. correctness of instance ID continuity. */
		mismatchRate?: number | null;

		/** Tracking precision. */
		trackingPrecision?: number | null;

		/** Tracking recall. */
		trackingRecall?: number | null;
	}

	/** Metrics for a single confidence threshold. */
	export interface GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsTrackMetricsConfidenceMetricsFormProperties {

		/** Bounding box intersection-over-union precision. Measures how well the bounding boxes overlap between each other (e.g. complete overlap or just barely above iou_threshold). */
		boundingBoxIou: FormControl<number | null | undefined>,

		/** The confidence threshold value used to compute the metrics. */
		confidenceThreshold: FormControl<number | null | undefined>,

		/** Mismatch rate, which measures the tracking consistency, i.e. correctness of instance ID continuity. */
		mismatchRate: FormControl<number | null | undefined>,

		/** Tracking precision. */
		trackingPrecision: FormControl<number | null | undefined>,

		/** Tracking recall. */
		trackingRecall: FormControl<number | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsTrackMetricsConfidenceMetricsFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsTrackMetricsConfidenceMetricsFormProperties>({
			boundingBoxIou: new FormControl<number | null | undefined>(undefined),
			confidenceThreshold: new FormControl<number | null | undefined>(undefined),
			mismatchRate: new FormControl<number | null | undefined>(undefined),
			trackingPrecision: new FormControl<number | null | undefined>(undefined),
			trackingRecall: new FormControl<number | null | undefined>(undefined),
		});

	}


	/** The Evaluation metrics given a specific precision_window_length. */
	export interface GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsVideoActionMetrics {

		/** Metrics for each label-match confidence_threshold from 0.05,0.10,...,0.95,0.96,0.97,0.98,0.99. */
		confidenceMetrics?: Array<GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsVideoActionMetricsConfidenceMetrics>;

		/** The mean average precision. */
		meanAveragePrecision?: number | null;

		/** This VideoActionMetrics is calculated based on this prediction window length. If the predicted action's timestamp is inside the time window whose center is the ground truth action's timestamp with this specific length, the prediction result is treated as a true positive. */
		precisionWindowLength?: string | null;
	}

	/** The Evaluation metrics given a specific precision_window_length. */
	export interface GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsVideoActionMetricsFormProperties {

		/** The mean average precision. */
		meanAveragePrecision: FormControl<number | null | undefined>,

		/** This VideoActionMetrics is calculated based on this prediction window length. If the predicted action's timestamp is inside the time window whose center is the ground truth action's timestamp with this specific length, the prediction result is treated as a true positive. */
		precisionWindowLength: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsVideoActionMetricsFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsVideoActionMetricsFormProperties>({
			meanAveragePrecision: new FormControl<number | null | undefined>(undefined),
			precisionWindowLength: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Metrics for a single confidence threshold. */
	export interface GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsVideoActionMetricsConfidenceMetrics {

		/** Output only. The confidence threshold value used to compute the metrics. */
		confidenceThreshold?: number | null;

		/** Output only. The harmonic mean of recall and precision. */
		f1Score?: number | null;

		/** Output only. Precision for the given confidence threshold. */
		precision?: number | null;

		/** Output only. Recall for the given confidence threshold. */
		recall?: number | null;
	}

	/** Metrics for a single confidence threshold. */
	export interface GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsVideoActionMetricsConfidenceMetricsFormProperties {

		/** Output only. The confidence threshold value used to compute the metrics. */
		confidenceThreshold: FormControl<number | null | undefined>,

		/** Output only. The harmonic mean of recall and precision. */
		f1Score: FormControl<number | null | undefined>,

		/** Output only. Precision for the given confidence threshold. */
		precision: FormControl<number | null | undefined>,

		/** Output only. Recall for the given confidence threshold. */
		recall: FormControl<number | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsVideoActionMetricsConfidenceMetricsFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsVideoActionMetricsConfidenceMetricsFormProperties>({
			confidenceThreshold: new FormControl<number | null | undefined>(undefined),
			f1Score: new FormControl<number | null | undefined>(undefined),
			precision: new FormControl<number | null | undefined>(undefined),
			recall: new FormControl<number | null | undefined>(undefined),
		});

	}


	/** Model evaluation metrics for video action recognition. */
	export interface GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsVideoActionRecognitionMetrics {

		/** The number of ground truth actions used to create this evaluation. */
		evaluatedActionCount?: number | null;

		/** The metric entries for precision window lengths: 1s,2s,3s. */
		videoActionMetrics?: Array<GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsVideoActionMetrics>;
	}

	/** Model evaluation metrics for video action recognition. */
	export interface GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsVideoActionRecognitionMetricsFormProperties {

		/** The number of ground truth actions used to create this evaluation. */
		evaluatedActionCount: FormControl<number | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsVideoActionRecognitionMetricsFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsVideoActionRecognitionMetricsFormProperties>({
			evaluatedActionCount: new FormControl<number | null | undefined>(undefined),
		});

	}


	/** Model evaluation metrics for video object tracking problems. Evaluates prediction quality of both labeled bounding boxes and labeled tracks (i.e. series of bounding boxes sharing same label and instance ID). */
	export interface GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsVideoObjectTrackingMetrics {

		/** The single metric for bounding boxes evaluation: the `meanAveragePrecision` averaged over all `boundingBoxMetrics`. */
		boundingBoxMeanAveragePrecision?: number | null;

		/** The bounding boxes match metrics for each intersection-over-union threshold 0.05,0.10,...,0.95,0.96,0.97,0.98,0.99 and each label confidence threshold 0.05,0.10,...,0.95,0.96,0.97,0.98,0.99 pair. */
		boundingBoxMetrics?: Array<GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsBoundingBoxMetrics>;

		/** UNIMPLEMENTED. The total number of bounding boxes (i.e. summed over all frames) the ground truth used to create this evaluation had. */
		evaluatedBoundingBoxCount?: number | null;

		/** UNIMPLEMENTED. The number of video frames used to create this evaluation. */
		evaluatedFrameCount?: number | null;

		/** UNIMPLEMENTED. The total number of tracks (i.e. as seen across all frames) the ground truth used to create this evaluation had. */
		evaluatedTrackCount?: number | null;

		/** UNIMPLEMENTED. The single metric for tracks accuracy evaluation: the `meanAveragePrecision` averaged over all `trackMetrics`. */
		trackMeanAveragePrecision?: number | null;

		/** UNIMPLEMENTED. The single metric for tracks bounding box iou evaluation: the `meanBoundingBoxIou` averaged over all `trackMetrics`. */
		trackMeanBoundingBoxIou?: number | null;

		/** UNIMPLEMENTED. The single metric for tracking consistency evaluation: the `meanMismatchRate` averaged over all `trackMetrics`. */
		trackMeanMismatchRate?: number | null;

		/** UNIMPLEMENTED. The tracks match metrics for each intersection-over-union threshold 0.05,0.10,...,0.95,0.96,0.97,0.98,0.99 and each label confidence threshold 0.05,0.10,...,0.95,0.96,0.97,0.98,0.99 pair. */
		trackMetrics?: Array<GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsTrackMetrics>;
	}

	/** Model evaluation metrics for video object tracking problems. Evaluates prediction quality of both labeled bounding boxes and labeled tracks (i.e. series of bounding boxes sharing same label and instance ID). */
	export interface GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsVideoObjectTrackingMetricsFormProperties {

		/** The single metric for bounding boxes evaluation: the `meanAveragePrecision` averaged over all `boundingBoxMetrics`. */
		boundingBoxMeanAveragePrecision: FormControl<number | null | undefined>,

		/** UNIMPLEMENTED. The total number of bounding boxes (i.e. summed over all frames) the ground truth used to create this evaluation had. */
		evaluatedBoundingBoxCount: FormControl<number | null | undefined>,

		/** UNIMPLEMENTED. The number of video frames used to create this evaluation. */
		evaluatedFrameCount: FormControl<number | null | undefined>,

		/** UNIMPLEMENTED. The total number of tracks (i.e. as seen across all frames) the ground truth used to create this evaluation had. */
		evaluatedTrackCount: FormControl<number | null | undefined>,

		/** UNIMPLEMENTED. The single metric for tracks accuracy evaluation: the `meanAveragePrecision` averaged over all `trackMetrics`. */
		trackMeanAveragePrecision: FormControl<number | null | undefined>,

		/** UNIMPLEMENTED. The single metric for tracks bounding box iou evaluation: the `meanBoundingBoxIou` averaged over all `trackMetrics`. */
		trackMeanBoundingBoxIou: FormControl<number | null | undefined>,

		/** UNIMPLEMENTED. The single metric for tracking consistency evaluation: the `meanMismatchRate` averaged over all `trackMetrics`. */
		trackMeanMismatchRate: FormControl<number | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsVideoObjectTrackingMetricsFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsVideoObjectTrackingMetricsFormProperties>({
			boundingBoxMeanAveragePrecision: new FormControl<number | null | undefined>(undefined),
			evaluatedBoundingBoxCount: new FormControl<number | null | undefined>(undefined),
			evaluatedFrameCount: new FormControl<number | null | undefined>(undefined),
			evaluatedTrackCount: new FormControl<number | null | undefined>(undefined),
			trackMeanAveragePrecision: new FormControl<number | null | undefined>(undefined),
			trackMeanBoundingBoxIou: new FormControl<number | null | undefined>(undefined),
			trackMeanMismatchRate: new FormControl<number | null | undefined>(undefined),
		});

	}


	/** Prediction input format for Image Classification. */
	export interface GoogleCloudAiplatformV1beta1SchemaPredictInstanceImageClassificationPredictionInstance {

		/** The image bytes or Cloud Storage URI to make the prediction on. */
		content?: string | null;

		/** The MIME type of the content of the image. Only the images in below listed MIME types are supported. - image/jpeg - image/gif - image/png - image/webp - image/bmp - image/tiff - image/vnd.microsoft.icon */
		mimeType?: string | null;
	}

	/** Prediction input format for Image Classification. */
	export interface GoogleCloudAiplatformV1beta1SchemaPredictInstanceImageClassificationPredictionInstanceFormProperties {

		/** The image bytes or Cloud Storage URI to make the prediction on. */
		content: FormControl<string | null | undefined>,

		/** The MIME type of the content of the image. Only the images in below listed MIME types are supported. - image/jpeg - image/gif - image/png - image/webp - image/bmp - image/tiff - image/vnd.microsoft.icon */
		mimeType: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1SchemaPredictInstanceImageClassificationPredictionInstanceFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1SchemaPredictInstanceImageClassificationPredictionInstanceFormProperties>({
			content: new FormControl<string | null | undefined>(undefined),
			mimeType: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Prediction input format for Image Object Detection. */
	export interface GoogleCloudAiplatformV1beta1SchemaPredictInstanceImageObjectDetectionPredictionInstance {

		/** The image bytes or Cloud Storage URI to make the prediction on. */
		content?: string | null;

		/** The MIME type of the content of the image. Only the images in below listed MIME types are supported. - image/jpeg - image/gif - image/png - image/webp - image/bmp - image/tiff - image/vnd.microsoft.icon */
		mimeType?: string | null;
	}

	/** Prediction input format for Image Object Detection. */
	export interface GoogleCloudAiplatformV1beta1SchemaPredictInstanceImageObjectDetectionPredictionInstanceFormProperties {

		/** The image bytes or Cloud Storage URI to make the prediction on. */
		content: FormControl<string | null | undefined>,

		/** The MIME type of the content of the image. Only the images in below listed MIME types are supported. - image/jpeg - image/gif - image/png - image/webp - image/bmp - image/tiff - image/vnd.microsoft.icon */
		mimeType: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1SchemaPredictInstanceImageObjectDetectionPredictionInstanceFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1SchemaPredictInstanceImageObjectDetectionPredictionInstanceFormProperties>({
			content: new FormControl<string | null | undefined>(undefined),
			mimeType: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Prediction input format for Image Segmentation. */
	export interface GoogleCloudAiplatformV1beta1SchemaPredictInstanceImageSegmentationPredictionInstance {

		/** The image bytes to make the predictions on. */
		content?: string | null;

		/** The MIME type of the content of the image. Only the images in below listed MIME types are supported. - image/jpeg - image/png */
		mimeType?: string | null;
	}

	/** Prediction input format for Image Segmentation. */
	export interface GoogleCloudAiplatformV1beta1SchemaPredictInstanceImageSegmentationPredictionInstanceFormProperties {

		/** The image bytes to make the predictions on. */
		content: FormControl<string | null | undefined>,

		/** The MIME type of the content of the image. Only the images in below listed MIME types are supported. - image/jpeg - image/png */
		mimeType: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1SchemaPredictInstanceImageSegmentationPredictionInstanceFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1SchemaPredictInstanceImageSegmentationPredictionInstanceFormProperties>({
			content: new FormControl<string | null | undefined>(undefined),
			mimeType: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Prediction input format for Text Classification. */
	export interface GoogleCloudAiplatformV1beta1SchemaPredictInstanceTextClassificationPredictionInstance {

		/** The text snippet to make the predictions on. */
		content?: string | null;

		/** The MIME type of the text snippet. The supported MIME types are listed below. - text/plain */
		mimeType?: string | null;
	}

	/** Prediction input format for Text Classification. */
	export interface GoogleCloudAiplatformV1beta1SchemaPredictInstanceTextClassificationPredictionInstanceFormProperties {

		/** The text snippet to make the predictions on. */
		content: FormControl<string | null | undefined>,

		/** The MIME type of the text snippet. The supported MIME types are listed below. - text/plain */
		mimeType: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1SchemaPredictInstanceTextClassificationPredictionInstanceFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1SchemaPredictInstanceTextClassificationPredictionInstanceFormProperties>({
			content: new FormControl<string | null | undefined>(undefined),
			mimeType: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Prediction input format for Text Extraction. */
	export interface GoogleCloudAiplatformV1beta1SchemaPredictInstanceTextExtractionPredictionInstance {

		/** The text snippet to make the predictions on. */
		content?: string | null;

		/** This field is only used for batch prediction. If a key is provided, the batch prediction result will by mapped to this key. If omitted, then the batch prediction result will contain the entire input instance. Vertex AI will not check if keys in the request are duplicates, so it is up to the caller to ensure the keys are unique. */
		key?: string | null;

		/** The MIME type of the text snippet. The supported MIME types are listed below. - text/plain */
		mimeType?: string | null;
	}

	/** Prediction input format for Text Extraction. */
	export interface GoogleCloudAiplatformV1beta1SchemaPredictInstanceTextExtractionPredictionInstanceFormProperties {

		/** The text snippet to make the predictions on. */
		content: FormControl<string | null | undefined>,

		/** This field is only used for batch prediction. If a key is provided, the batch prediction result will by mapped to this key. If omitted, then the batch prediction result will contain the entire input instance. Vertex AI will not check if keys in the request are duplicates, so it is up to the caller to ensure the keys are unique. */
		key: FormControl<string | null | undefined>,

		/** The MIME type of the text snippet. The supported MIME types are listed below. - text/plain */
		mimeType: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1SchemaPredictInstanceTextExtractionPredictionInstanceFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1SchemaPredictInstanceTextExtractionPredictionInstanceFormProperties>({
			content: new FormControl<string | null | undefined>(undefined),
			key: new FormControl<string | null | undefined>(undefined),
			mimeType: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Prediction input format for Text Sentiment. */
	export interface GoogleCloudAiplatformV1beta1SchemaPredictInstanceTextSentimentPredictionInstance {

		/** The text snippet to make the predictions on. */
		content?: string | null;

		/** The MIME type of the text snippet. The supported MIME types are listed below. - text/plain */
		mimeType?: string | null;
	}

	/** Prediction input format for Text Sentiment. */
	export interface GoogleCloudAiplatformV1beta1SchemaPredictInstanceTextSentimentPredictionInstanceFormProperties {

		/** The text snippet to make the predictions on. */
		content: FormControl<string | null | undefined>,

		/** The MIME type of the text snippet. The supported MIME types are listed below. - text/plain */
		mimeType: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1SchemaPredictInstanceTextSentimentPredictionInstanceFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1SchemaPredictInstanceTextSentimentPredictionInstanceFormProperties>({
			content: new FormControl<string | null | undefined>(undefined),
			mimeType: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Prediction input format for Video Action Recognition. */
	export interface GoogleCloudAiplatformV1beta1SchemaPredictInstanceVideoActionRecognitionPredictionInstance {

		/** The Google Cloud Storage location of the video on which to perform the prediction. */
		content?: string | null;

		/** The MIME type of the content of the video. Only the following are supported: video/mp4 video/avi video/quicktime */
		mimeType?: string | null;

		/** The end, exclusive, of the video's time segment on which to perform the prediction. Expressed as a number of seconds as measured from the start of the video, with "s" appended at the end. Fractions are allowed, up to a microsecond precision, and "inf" or "Infinity" is allowed, which means the end of the video. */
		timeSegmentEnd?: string | null;

		/** The beginning, inclusive, of the video's time segment on which to perform the prediction. Expressed as a number of seconds as measured from the start of the video, with "s" appended at the end. Fractions are allowed, up to a microsecond precision. */
		timeSegmentStart?: string | null;
	}

	/** Prediction input format for Video Action Recognition. */
	export interface GoogleCloudAiplatformV1beta1SchemaPredictInstanceVideoActionRecognitionPredictionInstanceFormProperties {

		/** The Google Cloud Storage location of the video on which to perform the prediction. */
		content: FormControl<string | null | undefined>,

		/** The MIME type of the content of the video. Only the following are supported: video/mp4 video/avi video/quicktime */
		mimeType: FormControl<string | null | undefined>,

		/** The end, exclusive, of the video's time segment on which to perform the prediction. Expressed as a number of seconds as measured from the start of the video, with "s" appended at the end. Fractions are allowed, up to a microsecond precision, and "inf" or "Infinity" is allowed, which means the end of the video. */
		timeSegmentEnd: FormControl<string | null | undefined>,

		/** The beginning, inclusive, of the video's time segment on which to perform the prediction. Expressed as a number of seconds as measured from the start of the video, with "s" appended at the end. Fractions are allowed, up to a microsecond precision. */
		timeSegmentStart: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1SchemaPredictInstanceVideoActionRecognitionPredictionInstanceFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1SchemaPredictInstanceVideoActionRecognitionPredictionInstanceFormProperties>({
			content: new FormControl<string | null | undefined>(undefined),
			mimeType: new FormControl<string | null | undefined>(undefined),
			timeSegmentEnd: new FormControl<string | null | undefined>(undefined),
			timeSegmentStart: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Prediction input format for Video Classification. */
	export interface GoogleCloudAiplatformV1beta1SchemaPredictInstanceVideoClassificationPredictionInstance {

		/** The Google Cloud Storage location of the video on which to perform the prediction. */
		content?: string | null;

		/** The MIME type of the content of the video. Only the following are supported: video/mp4 video/avi video/quicktime */
		mimeType?: string | null;

		/** The end, exclusive, of the video's time segment on which to perform the prediction. Expressed as a number of seconds as measured from the start of the video, with "s" appended at the end. Fractions are allowed, up to a microsecond precision, and "inf" or "Infinity" is allowed, which means the end of the video. */
		timeSegmentEnd?: string | null;

		/** The beginning, inclusive, of the video's time segment on which to perform the prediction. Expressed as a number of seconds as measured from the start of the video, with "s" appended at the end. Fractions are allowed, up to a microsecond precision. */
		timeSegmentStart?: string | null;
	}

	/** Prediction input format for Video Classification. */
	export interface GoogleCloudAiplatformV1beta1SchemaPredictInstanceVideoClassificationPredictionInstanceFormProperties {

		/** The Google Cloud Storage location of the video on which to perform the prediction. */
		content: FormControl<string | null | undefined>,

		/** The MIME type of the content of the video. Only the following are supported: video/mp4 video/avi video/quicktime */
		mimeType: FormControl<string | null | undefined>,

		/** The end, exclusive, of the video's time segment on which to perform the prediction. Expressed as a number of seconds as measured from the start of the video, with "s" appended at the end. Fractions are allowed, up to a microsecond precision, and "inf" or "Infinity" is allowed, which means the end of the video. */
		timeSegmentEnd: FormControl<string | null | undefined>,

		/** The beginning, inclusive, of the video's time segment on which to perform the prediction. Expressed as a number of seconds as measured from the start of the video, with "s" appended at the end. Fractions are allowed, up to a microsecond precision. */
		timeSegmentStart: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1SchemaPredictInstanceVideoClassificationPredictionInstanceFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1SchemaPredictInstanceVideoClassificationPredictionInstanceFormProperties>({
			content: new FormControl<string | null | undefined>(undefined),
			mimeType: new FormControl<string | null | undefined>(undefined),
			timeSegmentEnd: new FormControl<string | null | undefined>(undefined),
			timeSegmentStart: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Prediction input format for Video Object Tracking. */
	export interface GoogleCloudAiplatformV1beta1SchemaPredictInstanceVideoObjectTrackingPredictionInstance {

		/** The Google Cloud Storage location of the video on which to perform the prediction. */
		content?: string | null;

		/** The MIME type of the content of the video. Only the following are supported: video/mp4 video/avi video/quicktime */
		mimeType?: string | null;

		/** The end, exclusive, of the video's time segment on which to perform the prediction. Expressed as a number of seconds as measured from the start of the video, with "s" appended at the end. Fractions are allowed, up to a microsecond precision, and "inf" or "Infinity" is allowed, which means the end of the video. */
		timeSegmentEnd?: string | null;

		/** The beginning, inclusive, of the video's time segment on which to perform the prediction. Expressed as a number of seconds as measured from the start of the video, with "s" appended at the end. Fractions are allowed, up to a microsecond precision. */
		timeSegmentStart?: string | null;
	}

	/** Prediction input format for Video Object Tracking. */
	export interface GoogleCloudAiplatformV1beta1SchemaPredictInstanceVideoObjectTrackingPredictionInstanceFormProperties {

		/** The Google Cloud Storage location of the video on which to perform the prediction. */
		content: FormControl<string | null | undefined>,

		/** The MIME type of the content of the video. Only the following are supported: video/mp4 video/avi video/quicktime */
		mimeType: FormControl<string | null | undefined>,

		/** The end, exclusive, of the video's time segment on which to perform the prediction. Expressed as a number of seconds as measured from the start of the video, with "s" appended at the end. Fractions are allowed, up to a microsecond precision, and "inf" or "Infinity" is allowed, which means the end of the video. */
		timeSegmentEnd: FormControl<string | null | undefined>,

		/** The beginning, inclusive, of the video's time segment on which to perform the prediction. Expressed as a number of seconds as measured from the start of the video, with "s" appended at the end. Fractions are allowed, up to a microsecond precision. */
		timeSegmentStart: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1SchemaPredictInstanceVideoObjectTrackingPredictionInstanceFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1SchemaPredictInstanceVideoObjectTrackingPredictionInstanceFormProperties>({
			content: new FormControl<string | null | undefined>(undefined),
			mimeType: new FormControl<string | null | undefined>(undefined),
			timeSegmentEnd: new FormControl<string | null | undefined>(undefined),
			timeSegmentStart: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Prediction model parameters for Image Classification. */
	export interface GoogleCloudAiplatformV1beta1SchemaPredictParamsImageClassificationPredictionParams {

		/** The Model only returns predictions with at least this confidence score. Default value is 0.0 */
		confidenceThreshold?: number | null;

		/** The Model only returns up to that many top, by confidence score, predictions per instance. If this number is very high, the Model may return fewer predictions. Default value is 10. */
		maxPredictions?: number | null;
	}

	/** Prediction model parameters for Image Classification. */
	export interface GoogleCloudAiplatformV1beta1SchemaPredictParamsImageClassificationPredictionParamsFormProperties {

		/** The Model only returns predictions with at least this confidence score. Default value is 0.0 */
		confidenceThreshold: FormControl<number | null | undefined>,

		/** The Model only returns up to that many top, by confidence score, predictions per instance. If this number is very high, the Model may return fewer predictions. Default value is 10. */
		maxPredictions: FormControl<number | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1SchemaPredictParamsImageClassificationPredictionParamsFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1SchemaPredictParamsImageClassificationPredictionParamsFormProperties>({
			confidenceThreshold: new FormControl<number | null | undefined>(undefined),
			maxPredictions: new FormControl<number | null | undefined>(undefined),
		});

	}


	/** Prediction model parameters for Image Object Detection. */
	export interface GoogleCloudAiplatformV1beta1SchemaPredictParamsImageObjectDetectionPredictionParams {

		/** The Model only returns predictions with at least this confidence score. Default value is 0.0 */
		confidenceThreshold?: number | null;

		/** The Model only returns up to that many top, by confidence score, predictions per instance. Note that number of returned predictions is also limited by metadata's predictionsLimit. Default value is 10. */
		maxPredictions?: number | null;
	}

	/** Prediction model parameters for Image Object Detection. */
	export interface GoogleCloudAiplatformV1beta1SchemaPredictParamsImageObjectDetectionPredictionParamsFormProperties {

		/** The Model only returns predictions with at least this confidence score. Default value is 0.0 */
		confidenceThreshold: FormControl<number | null | undefined>,

		/** The Model only returns up to that many top, by confidence score, predictions per instance. Note that number of returned predictions is also limited by metadata's predictionsLimit. Default value is 10. */
		maxPredictions: FormControl<number | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1SchemaPredictParamsImageObjectDetectionPredictionParamsFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1SchemaPredictParamsImageObjectDetectionPredictionParamsFormProperties>({
			confidenceThreshold: new FormControl<number | null | undefined>(undefined),
			maxPredictions: new FormControl<number | null | undefined>(undefined),
		});

	}


	/** Prediction model parameters for Image Segmentation. */
	export interface GoogleCloudAiplatformV1beta1SchemaPredictParamsImageSegmentationPredictionParams {

		/** When the model predicts category of pixels of the image, it will only provide predictions for pixels that it is at least this much confident about. All other pixels will be classified as background. Default value is 0.5. */
		confidenceThreshold?: number | null;
	}

	/** Prediction model parameters for Image Segmentation. */
	export interface GoogleCloudAiplatformV1beta1SchemaPredictParamsImageSegmentationPredictionParamsFormProperties {

		/** When the model predicts category of pixels of the image, it will only provide predictions for pixels that it is at least this much confident about. All other pixels will be classified as background. Default value is 0.5. */
		confidenceThreshold: FormControl<number | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1SchemaPredictParamsImageSegmentationPredictionParamsFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1SchemaPredictParamsImageSegmentationPredictionParamsFormProperties>({
			confidenceThreshold: new FormControl<number | null | undefined>(undefined),
		});

	}


	/** Prediction model parameters for Video Action Recognition. */
	export interface GoogleCloudAiplatformV1beta1SchemaPredictParamsVideoActionRecognitionPredictionParams {

		/** The Model only returns predictions with at least this confidence score. Default value is 0.0 */
		confidenceThreshold?: number | null;

		/** The model only returns up to that many top, by confidence score, predictions per frame of the video. If this number is very high, the Model may return fewer predictions per frame. Default value is 50. */
		maxPredictions?: number | null;
	}

	/** Prediction model parameters for Video Action Recognition. */
	export interface GoogleCloudAiplatformV1beta1SchemaPredictParamsVideoActionRecognitionPredictionParamsFormProperties {

		/** The Model only returns predictions with at least this confidence score. Default value is 0.0 */
		confidenceThreshold: FormControl<number | null | undefined>,

		/** The model only returns up to that many top, by confidence score, predictions per frame of the video. If this number is very high, the Model may return fewer predictions per frame. Default value is 50. */
		maxPredictions: FormControl<number | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1SchemaPredictParamsVideoActionRecognitionPredictionParamsFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1SchemaPredictParamsVideoActionRecognitionPredictionParamsFormProperties>({
			confidenceThreshold: new FormControl<number | null | undefined>(undefined),
			maxPredictions: new FormControl<number | null | undefined>(undefined),
		});

	}


	/** Prediction model parameters for Video Classification. */
	export interface GoogleCloudAiplatformV1beta1SchemaPredictParamsVideoClassificationPredictionParams {

		/** The Model only returns predictions with at least this confidence score. Default value is 0.0 */
		confidenceThreshold?: number | null;

		/** The Model only returns up to that many top, by confidence score, predictions per instance. If this number is very high, the Model may return fewer predictions. Default value is 10,000. */
		maxPredictions?: number | null;

		/** Set to true to request classification for a video at one-second intervals. Vertex AI returns labels and their confidence scores for each second of the entire time segment of the video that user specified in the input WARNING: Model evaluation is not done for this classification type, the quality of it depends on the training data, but there are no metrics provided to describe that quality. Default value is false */
		oneSecIntervalClassification?: boolean | null;

		/** Set to true to request segment-level classification. Vertex AI returns labels and their confidence scores for the entire time segment of the video that user specified in the input instance. Default value is true */
		segmentClassification?: boolean | null;

		/** Set to true to request shot-level classification. Vertex AI determines the boundaries for each camera shot in the entire time segment of the video that user specified in the input instance. Vertex AI then returns labels and their confidence scores for each detected shot, along with the start and end time of the shot. WARNING: Model evaluation is not done for this classification type, the quality of it depends on the training data, but there are no metrics provided to describe that quality. Default value is false */
		shotClassification?: boolean | null;
	}

	/** Prediction model parameters for Video Classification. */
	export interface GoogleCloudAiplatformV1beta1SchemaPredictParamsVideoClassificationPredictionParamsFormProperties {

		/** The Model only returns predictions with at least this confidence score. Default value is 0.0 */
		confidenceThreshold: FormControl<number | null | undefined>,

		/** The Model only returns up to that many top, by confidence score, predictions per instance. If this number is very high, the Model may return fewer predictions. Default value is 10,000. */
		maxPredictions: FormControl<number | null | undefined>,

		/** Set to true to request classification for a video at one-second intervals. Vertex AI returns labels and their confidence scores for each second of the entire time segment of the video that user specified in the input WARNING: Model evaluation is not done for this classification type, the quality of it depends on the training data, but there are no metrics provided to describe that quality. Default value is false */
		oneSecIntervalClassification: FormControl<boolean | null | undefined>,

		/** Set to true to request segment-level classification. Vertex AI returns labels and their confidence scores for the entire time segment of the video that user specified in the input instance. Default value is true */
		segmentClassification: FormControl<boolean | null | undefined>,

		/** Set to true to request shot-level classification. Vertex AI determines the boundaries for each camera shot in the entire time segment of the video that user specified in the input instance. Vertex AI then returns labels and their confidence scores for each detected shot, along with the start and end time of the shot. WARNING: Model evaluation is not done for this classification type, the quality of it depends on the training data, but there are no metrics provided to describe that quality. Default value is false */
		shotClassification: FormControl<boolean | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1SchemaPredictParamsVideoClassificationPredictionParamsFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1SchemaPredictParamsVideoClassificationPredictionParamsFormProperties>({
			confidenceThreshold: new FormControl<number | null | undefined>(undefined),
			maxPredictions: new FormControl<number | null | undefined>(undefined),
			oneSecIntervalClassification: new FormControl<boolean | null | undefined>(undefined),
			segmentClassification: new FormControl<boolean | null | undefined>(undefined),
			shotClassification: new FormControl<boolean | null | undefined>(undefined),
		});

	}


	/** Prediction model parameters for Video Object Tracking. */
	export interface GoogleCloudAiplatformV1beta1SchemaPredictParamsVideoObjectTrackingPredictionParams {

		/** The Model only returns predictions with at least this confidence score. Default value is 0.0 */
		confidenceThreshold?: number | null;

		/** The model only returns up to that many top, by confidence score, predictions per frame of the video. If this number is very high, the Model may return fewer predictions per frame. Default value is 50. */
		maxPredictions?: number | null;

		/** Only bounding boxes with shortest edge at least that long as a relative value of video frame size are returned. Default value is 0.0. */
		minBoundingBoxSize?: number | null;
	}

	/** Prediction model parameters for Video Object Tracking. */
	export interface GoogleCloudAiplatformV1beta1SchemaPredictParamsVideoObjectTrackingPredictionParamsFormProperties {

		/** The Model only returns predictions with at least this confidence score. Default value is 0.0 */
		confidenceThreshold: FormControl<number | null | undefined>,

		/** The model only returns up to that many top, by confidence score, predictions per frame of the video. If this number is very high, the Model may return fewer predictions per frame. Default value is 50. */
		maxPredictions: FormControl<number | null | undefined>,

		/** Only bounding boxes with shortest edge at least that long as a relative value of video frame size are returned. Default value is 0.0. */
		minBoundingBoxSize: FormControl<number | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1SchemaPredictParamsVideoObjectTrackingPredictionParamsFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1SchemaPredictParamsVideoObjectTrackingPredictionParamsFormProperties>({
			confidenceThreshold: new FormControl<number | null | undefined>(undefined),
			maxPredictions: new FormControl<number | null | undefined>(undefined),
			minBoundingBoxSize: new FormControl<number | null | undefined>(undefined),
		});

	}


	/** Prediction output format for Image and Text Classification. */
	export interface GoogleCloudAiplatformV1beta1SchemaPredictPredictionClassificationPredictionResult {

		/** The Model's confidences in correctness of the predicted IDs, higher value means higher confidence. Order matches the Ids. */
		confidences?: Array<number>;

		/** The display names of the AnnotationSpecs that had been identified, order matches the IDs. */
		displayNames?: Array<string>;

		/** The resource IDs of the AnnotationSpecs that had been identified. */
		ids?: Array<string>;
	}

	/** Prediction output format for Image and Text Classification. */
	export interface GoogleCloudAiplatformV1beta1SchemaPredictPredictionClassificationPredictionResultFormProperties {
	}
	export function CreateGoogleCloudAiplatformV1beta1SchemaPredictPredictionClassificationPredictionResultFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1SchemaPredictPredictionClassificationPredictionResultFormProperties>({
		});

	}


	/** Prediction output format for Image Object Detection. */
	export interface GoogleCloudAiplatformV1beta1SchemaPredictPredictionImageObjectDetectionPredictionResult {

		/** Bounding boxes, i.e. the rectangles over the image, that pinpoint the found AnnotationSpecs. Given in order that matches the IDs. Each bounding box is an array of 4 numbers `xMin`, `xMax`, `yMin`, and `yMax`, which represent the extremal coordinates of the box. They are relative to the image size, and the point 0,0 is in the top left of the image. */
		bboxes?: Array<string>;

		/** The Model's confidences in correctness of the predicted IDs, higher value means higher confidence. Order matches the Ids. */
		confidences?: Array<number>;

		/** The display names of the AnnotationSpecs that had been identified, order matches the IDs. */
		displayNames?: Array<string>;

		/** The resource IDs of the AnnotationSpecs that had been identified, ordered by the confidence score descendingly. */
		ids?: Array<string>;
	}

	/** Prediction output format for Image Object Detection. */
	export interface GoogleCloudAiplatformV1beta1SchemaPredictPredictionImageObjectDetectionPredictionResultFormProperties {
	}
	export function CreateGoogleCloudAiplatformV1beta1SchemaPredictPredictionImageObjectDetectionPredictionResultFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1SchemaPredictPredictionImageObjectDetectionPredictionResultFormProperties>({
		});

	}


	/** Prediction output format for Image Segmentation. */
	export interface GoogleCloudAiplatformV1beta1SchemaPredictPredictionImageSegmentationPredictionResult {

		/** A PNG image where each pixel in the mask represents the category in which the pixel in the original image was predicted to belong to. The size of this image will be the same as the original image. The mapping between the AnntoationSpec and the color can be found in model's metadata. The model will choose the most likely category and if none of the categories reach the confidence threshold, the pixel will be marked as background. */
		categoryMask?: string | null;

		/** A one channel image which is encoded as an 8bit lossless PNG. The size of the image will be the same as the original image. For a specific pixel, darker color means less confidence in correctness of the cateogry in the categoryMask for the corresponding pixel. Black means no confidence and white means complete confidence. */
		confidenceMask?: string | null;
	}

	/** Prediction output format for Image Segmentation. */
	export interface GoogleCloudAiplatformV1beta1SchemaPredictPredictionImageSegmentationPredictionResultFormProperties {

		/** A PNG image where each pixel in the mask represents the category in which the pixel in the original image was predicted to belong to. The size of this image will be the same as the original image. The mapping between the AnntoationSpec and the color can be found in model's metadata. The model will choose the most likely category and if none of the categories reach the confidence threshold, the pixel will be marked as background. */
		categoryMask: FormControl<string | null | undefined>,

		/** A one channel image which is encoded as an 8bit lossless PNG. The size of the image will be the same as the original image. For a specific pixel, darker color means less confidence in correctness of the cateogry in the categoryMask for the corresponding pixel. Black means no confidence and white means complete confidence. */
		confidenceMask: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1SchemaPredictPredictionImageSegmentationPredictionResultFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1SchemaPredictPredictionImageSegmentationPredictionResultFormProperties>({
			categoryMask: new FormControl<string | null | undefined>(undefined),
			confidenceMask: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Prediction output format for Tabular Classification. */
	export interface GoogleCloudAiplatformV1beta1SchemaPredictPredictionTabularClassificationPredictionResult {

		/** The name of the classes being classified, contains all possible values of the target column. */
		classes?: Array<string>;

		/** The model's confidence in each class being correct, higher value means higher confidence. The N-th score corresponds to the N-th class in classes. */
		scores?: Array<number>;
	}

	/** Prediction output format for Tabular Classification. */
	export interface GoogleCloudAiplatformV1beta1SchemaPredictPredictionTabularClassificationPredictionResultFormProperties {
	}
	export function CreateGoogleCloudAiplatformV1beta1SchemaPredictPredictionTabularClassificationPredictionResultFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1SchemaPredictPredictionTabularClassificationPredictionResultFormProperties>({
		});

	}


	/** Prediction output format for Tabular Regression. */
	export interface GoogleCloudAiplatformV1beta1SchemaPredictPredictionTabularRegressionPredictionResult {

		/** The lower bound of the prediction interval. */
		lowerBound?: number | null;

		/** Quantile predictions, in 1-1 correspondence with quantile_values. */
		quantilePredictions?: Array<number>;

		/** Quantile values. */
		quantileValues?: Array<number>;

		/** The upper bound of the prediction interval. */
		upperBound?: number | null;

		/** The regression value. */
		value?: number | null;
	}

	/** Prediction output format for Tabular Regression. */
	export interface GoogleCloudAiplatformV1beta1SchemaPredictPredictionTabularRegressionPredictionResultFormProperties {

		/** The lower bound of the prediction interval. */
		lowerBound: FormControl<number | null | undefined>,

		/** The upper bound of the prediction interval. */
		upperBound: FormControl<number | null | undefined>,

		/** The regression value. */
		value: FormControl<number | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1SchemaPredictPredictionTabularRegressionPredictionResultFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1SchemaPredictPredictionTabularRegressionPredictionResultFormProperties>({
			lowerBound: new FormControl<number | null | undefined>(undefined),
			upperBound: new FormControl<number | null | undefined>(undefined),
			value: new FormControl<number | null | undefined>(undefined),
		});

	}


	/** Prediction output format for Text Extraction. */
	export interface GoogleCloudAiplatformV1beta1SchemaPredictPredictionTextExtractionPredictionResult {

		/** The Model's confidences in correctness of the predicted IDs, higher value means higher confidence. Order matches the Ids. */
		confidences?: Array<number>;

		/** The display names of the AnnotationSpecs that had been identified, order matches the IDs. */
		displayNames?: Array<string>;

		/** The resource IDs of the AnnotationSpecs that had been identified, ordered by the confidence score descendingly. */
		ids?: Array<string>;

		/** The end offsets, inclusive, of the text segment in which the AnnotationSpec has been identified. Expressed as a zero-based number of characters as measured from the start of the text snippet. */
		textSegmentEndOffsets?: Array<string>;

		/** The start offsets, inclusive, of the text segment in which the AnnotationSpec has been identified. Expressed as a zero-based number of characters as measured from the start of the text snippet. */
		textSegmentStartOffsets?: Array<string>;
	}

	/** Prediction output format for Text Extraction. */
	export interface GoogleCloudAiplatformV1beta1SchemaPredictPredictionTextExtractionPredictionResultFormProperties {
	}
	export function CreateGoogleCloudAiplatformV1beta1SchemaPredictPredictionTextExtractionPredictionResultFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1SchemaPredictPredictionTextExtractionPredictionResultFormProperties>({
		});

	}


	/** Prediction output format for Text Sentiment */
	export interface GoogleCloudAiplatformV1beta1SchemaPredictPredictionTextSentimentPredictionResult {

		/** The integer sentiment labels between 0 (inclusive) and sentimentMax label (inclusive), while 0 maps to the least positive sentiment and sentimentMax maps to the most positive one. The higher the score is, the more positive the sentiment in the text snippet is. Note: sentimentMax is an integer value between 1 (inclusive) and 10 (inclusive). */
		sentiment?: number | null;
	}

	/** Prediction output format for Text Sentiment */
	export interface GoogleCloudAiplatformV1beta1SchemaPredictPredictionTextSentimentPredictionResultFormProperties {

		/** The integer sentiment labels between 0 (inclusive) and sentimentMax label (inclusive), while 0 maps to the least positive sentiment and sentimentMax maps to the most positive one. The higher the score is, the more positive the sentiment in the text snippet is. Note: sentimentMax is an integer value between 1 (inclusive) and 10 (inclusive). */
		sentiment: FormControl<number | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1SchemaPredictPredictionTextSentimentPredictionResultFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1SchemaPredictPredictionTextSentimentPredictionResultFormProperties>({
			sentiment: new FormControl<number | null | undefined>(undefined),
		});

	}

	export interface GoogleCloudAiplatformV1beta1SchemaPredictPredictionTftFeatureImportance {
		attributeColumns?: Array<string>;
		attributeWeights?: Array<number>;
		contextColumns?: Array<string>;

		/** TFT feature importance values. Each pair for {context/horizon/attribute} should have the same shape since the weight corresponds to the column names. */
		contextWeights?: Array<number>;
		horizonColumns?: Array<string>;
		horizonWeights?: Array<number>;
	}
	export interface GoogleCloudAiplatformV1beta1SchemaPredictPredictionTftFeatureImportanceFormProperties {
	}
	export function CreateGoogleCloudAiplatformV1beta1SchemaPredictPredictionTftFeatureImportanceFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1SchemaPredictPredictionTftFeatureImportanceFormProperties>({
		});

	}


	/** Prediction output format for Time Series Forecasting. */
	export interface GoogleCloudAiplatformV1beta1SchemaPredictPredictionTimeSeriesForecastingPredictionResult {

		/** Quantile predictions, in 1-1 correspondence with quantile_values. */
		quantilePredictions?: Array<number>;

		/** Quantile values. */
		quantileValues?: Array<number>;
		tftFeatureImportance?: GoogleCloudAiplatformV1beta1SchemaPredictPredictionTftFeatureImportance;

		/** The regression value. */
		value?: number | null;
	}

	/** Prediction output format for Time Series Forecasting. */
	export interface GoogleCloudAiplatformV1beta1SchemaPredictPredictionTimeSeriesForecastingPredictionResultFormProperties {

		/** The regression value. */
		value: FormControl<number | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1SchemaPredictPredictionTimeSeriesForecastingPredictionResultFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1SchemaPredictPredictionTimeSeriesForecastingPredictionResultFormProperties>({
			value: new FormControl<number | null | undefined>(undefined),
		});

	}


	/** Prediction output format for Video Action Recognition. */
	export interface GoogleCloudAiplatformV1beta1SchemaPredictPredictionVideoActionRecognitionPredictionResult {

		/** The Model's confidence in correction of this prediction, higher value means higher confidence. */
		confidence?: number | null;

		/** The display name of the AnnotationSpec that had been identified. */
		displayName?: string | null;

		/** The resource ID of the AnnotationSpec that had been identified. */
		id?: string | null;

		/** The end, exclusive, of the video's time segment in which the AnnotationSpec has been identified. Expressed as a number of seconds as measured from the start of the video, with fractions up to a microsecond precision, and with "s" appended at the end. */
		timeSegmentEnd?: string | null;

		/** The beginning, inclusive, of the video's time segment in which the AnnotationSpec has been identified. Expressed as a number of seconds as measured from the start of the video, with fractions up to a microsecond precision, and with "s" appended at the end. */
		timeSegmentStart?: string | null;
	}

	/** Prediction output format for Video Action Recognition. */
	export interface GoogleCloudAiplatformV1beta1SchemaPredictPredictionVideoActionRecognitionPredictionResultFormProperties {

		/** The Model's confidence in correction of this prediction, higher value means higher confidence. */
		confidence: FormControl<number | null | undefined>,

		/** The display name of the AnnotationSpec that had been identified. */
		displayName: FormControl<string | null | undefined>,

		/** The resource ID of the AnnotationSpec that had been identified. */
		id: FormControl<string | null | undefined>,

		/** The end, exclusive, of the video's time segment in which the AnnotationSpec has been identified. Expressed as a number of seconds as measured from the start of the video, with fractions up to a microsecond precision, and with "s" appended at the end. */
		timeSegmentEnd: FormControl<string | null | undefined>,

		/** The beginning, inclusive, of the video's time segment in which the AnnotationSpec has been identified. Expressed as a number of seconds as measured from the start of the video, with fractions up to a microsecond precision, and with "s" appended at the end. */
		timeSegmentStart: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1SchemaPredictPredictionVideoActionRecognitionPredictionResultFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1SchemaPredictPredictionVideoActionRecognitionPredictionResultFormProperties>({
			confidence: new FormControl<number | null | undefined>(undefined),
			displayName: new FormControl<string | null | undefined>(undefined),
			id: new FormControl<string | null | undefined>(undefined),
			timeSegmentEnd: new FormControl<string | null | undefined>(undefined),
			timeSegmentStart: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Prediction output format for Video Classification. */
	export interface GoogleCloudAiplatformV1beta1SchemaPredictPredictionVideoClassificationPredictionResult {

		/** The Model's confidence in correction of this prediction, higher value means higher confidence. */
		confidence?: number | null;

		/** The display name of the AnnotationSpec that had been identified. */
		displayName?: string | null;

		/** The resource ID of the AnnotationSpec that had been identified. */
		id?: string | null;

		/** The end, exclusive, of the video's time segment in which the AnnotationSpec has been identified. Expressed as a number of seconds as measured from the start of the video, with fractions up to a microsecond precision, and with "s" appended at the end. Note that for 'segment-classification' prediction type, this equals the original 'timeSegmentEnd' from the input instance, for other types it is the end of a shot or a 1 second interval respectively. */
		timeSegmentEnd?: string | null;

		/** The beginning, inclusive, of the video's time segment in which the AnnotationSpec has been identified. Expressed as a number of seconds as measured from the start of the video, with fractions up to a microsecond precision, and with "s" appended at the end. Note that for 'segment-classification' prediction type, this equals the original 'timeSegmentStart' from the input instance, for other types it is the start of a shot or a 1 second interval respectively. */
		timeSegmentStart?: string | null;

		/** The type of the prediction. The requested types can be configured via parameters. This will be one of - segment-classification - shot-classification - one-sec-interval-classification */
		type?: string | null;
	}

	/** Prediction output format for Video Classification. */
	export interface GoogleCloudAiplatformV1beta1SchemaPredictPredictionVideoClassificationPredictionResultFormProperties {

		/** The Model's confidence in correction of this prediction, higher value means higher confidence. */
		confidence: FormControl<number | null | undefined>,

		/** The display name of the AnnotationSpec that had been identified. */
		displayName: FormControl<string | null | undefined>,

		/** The resource ID of the AnnotationSpec that had been identified. */
		id: FormControl<string | null | undefined>,

		/** The end, exclusive, of the video's time segment in which the AnnotationSpec has been identified. Expressed as a number of seconds as measured from the start of the video, with fractions up to a microsecond precision, and with "s" appended at the end. Note that for 'segment-classification' prediction type, this equals the original 'timeSegmentEnd' from the input instance, for other types it is the end of a shot or a 1 second interval respectively. */
		timeSegmentEnd: FormControl<string | null | undefined>,

		/** The beginning, inclusive, of the video's time segment in which the AnnotationSpec has been identified. Expressed as a number of seconds as measured from the start of the video, with fractions up to a microsecond precision, and with "s" appended at the end. Note that for 'segment-classification' prediction type, this equals the original 'timeSegmentStart' from the input instance, for other types it is the start of a shot or a 1 second interval respectively. */
		timeSegmentStart: FormControl<string | null | undefined>,

		/** The type of the prediction. The requested types can be configured via parameters. This will be one of - segment-classification - shot-classification - one-sec-interval-classification */
		type: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1SchemaPredictPredictionVideoClassificationPredictionResultFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1SchemaPredictPredictionVideoClassificationPredictionResultFormProperties>({
			confidence: new FormControl<number | null | undefined>(undefined),
			displayName: new FormControl<string | null | undefined>(undefined),
			id: new FormControl<string | null | undefined>(undefined),
			timeSegmentEnd: new FormControl<string | null | undefined>(undefined),
			timeSegmentStart: new FormControl<string | null | undefined>(undefined),
			type: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Prediction output format for Video Object Tracking. */
	export interface GoogleCloudAiplatformV1beta1SchemaPredictPredictionVideoObjectTrackingPredictionResult {

		/** The Model's confidence in correction of this prediction, higher value means higher confidence. */
		confidence?: number | null;

		/** The display name of the AnnotationSpec that had been identified. */
		displayName?: string | null;

		/** All of the frames of the video in which a single object instance has been detected. The bounding boxes in the frames identify the same object. */
		frames?: Array<GoogleCloudAiplatformV1beta1SchemaPredictPredictionVideoObjectTrackingPredictionResultFrame>;

		/** The resource ID of the AnnotationSpec that had been identified. */
		id?: string | null;

		/** The end, inclusive, of the video's time segment in which the object instance has been detected. Expressed as a number of seconds as measured from the start of the video, with fractions up to a microsecond precision, and with "s" appended at the end. */
		timeSegmentEnd?: string | null;

		/** The beginning, inclusive, of the video's time segment in which the object instance has been detected. Expressed as a number of seconds as measured from the start of the video, with fractions up to a microsecond precision, and with "s" appended at the end. */
		timeSegmentStart?: string | null;
	}

	/** Prediction output format for Video Object Tracking. */
	export interface GoogleCloudAiplatformV1beta1SchemaPredictPredictionVideoObjectTrackingPredictionResultFormProperties {

		/** The Model's confidence in correction of this prediction, higher value means higher confidence. */
		confidence: FormControl<number | null | undefined>,

		/** The display name of the AnnotationSpec that had been identified. */
		displayName: FormControl<string | null | undefined>,

		/** The resource ID of the AnnotationSpec that had been identified. */
		id: FormControl<string | null | undefined>,

		/** The end, inclusive, of the video's time segment in which the object instance has been detected. Expressed as a number of seconds as measured from the start of the video, with fractions up to a microsecond precision, and with "s" appended at the end. */
		timeSegmentEnd: FormControl<string | null | undefined>,

		/** The beginning, inclusive, of the video's time segment in which the object instance has been detected. Expressed as a number of seconds as measured from the start of the video, with fractions up to a microsecond precision, and with "s" appended at the end. */
		timeSegmentStart: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1SchemaPredictPredictionVideoObjectTrackingPredictionResultFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1SchemaPredictPredictionVideoObjectTrackingPredictionResultFormProperties>({
			confidence: new FormControl<number | null | undefined>(undefined),
			displayName: new FormControl<string | null | undefined>(undefined),
			id: new FormControl<string | null | undefined>(undefined),
			timeSegmentEnd: new FormControl<string | null | undefined>(undefined),
			timeSegmentStart: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** The fields `xMin`, `xMax`, `yMin`, and `yMax` refer to a bounding box, i.e. the rectangle over the video frame pinpointing the found AnnotationSpec. The coordinates are relative to the frame size, and the point 0,0 is in the top left of the frame. */
	export interface GoogleCloudAiplatformV1beta1SchemaPredictPredictionVideoObjectTrackingPredictionResultFrame {

		/** A time (frame) of a video in which the object has been detected. Expressed as a number of seconds as measured from the start of the video, with fractions up to a microsecond precision, and with "s" appended at the end. */
		timeOffset?: string | null;

		/** The rightmost coordinate of the bounding box. */
		xMax?: number | null;

		/** The leftmost coordinate of the bounding box. */
		xMin?: number | null;

		/** The bottommost coordinate of the bounding box. */
		yMax?: number | null;

		/** The topmost coordinate of the bounding box. */
		yMin?: number | null;
	}

	/** The fields `xMin`, `xMax`, `yMin`, and `yMax` refer to a bounding box, i.e. the rectangle over the video frame pinpointing the found AnnotationSpec. The coordinates are relative to the frame size, and the point 0,0 is in the top left of the frame. */
	export interface GoogleCloudAiplatformV1beta1SchemaPredictPredictionVideoObjectTrackingPredictionResultFrameFormProperties {

		/** A time (frame) of a video in which the object has been detected. Expressed as a number of seconds as measured from the start of the video, with fractions up to a microsecond precision, and with "s" appended at the end. */
		timeOffset: FormControl<string | null | undefined>,

		/** The rightmost coordinate of the bounding box. */
		xMax: FormControl<number | null | undefined>,

		/** The leftmost coordinate of the bounding box. */
		xMin: FormControl<number | null | undefined>,

		/** The bottommost coordinate of the bounding box. */
		yMax: FormControl<number | null | undefined>,

		/** The topmost coordinate of the bounding box. */
		yMin: FormControl<number | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1SchemaPredictPredictionVideoObjectTrackingPredictionResultFrameFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1SchemaPredictPredictionVideoObjectTrackingPredictionResultFrameFormProperties>({
			timeOffset: new FormControl<string | null | undefined>(undefined),
			xMax: new FormControl<number | null | undefined>(undefined),
			xMin: new FormControl<number | null | undefined>(undefined),
			yMax: new FormControl<number | null | undefined>(undefined),
			yMin: new FormControl<number | null | undefined>(undefined),
		});

	}


	/** Represents a line of JSONL in the batch prediction output file. */
	export interface GoogleCloudAiplatformV1beta1SchemaPredictionResult {
		error?: GoogleCloudAiplatformV1beta1SchemaPredictionResultError;

		/** User's input instance. Struct is used here instead of Any so that JsonFormat does not append an extra "@type" field when we convert the proto to JSON. */
		instance?: {[id: string]: any };

		/** Optional user-provided key from the input instance. */
		key?: string | null;

		/** The prediction result. Value is used here instead of Any so that JsonFormat does not append an extra "@type" field when we convert the proto to JSON and so we can represent array of objects. Do not set error if this is set. */
		prediction?: any;
	}

	/** Represents a line of JSONL in the batch prediction output file. */
	export interface GoogleCloudAiplatformV1beta1SchemaPredictionResultFormProperties {

		/** User's input instance. Struct is used here instead of Any so that JsonFormat does not append an extra "@type" field when we convert the proto to JSON. */
		instance: FormControl<{[id: string]: any } | null | undefined>,

		/** Optional user-provided key from the input instance. */
		key: FormControl<string | null | undefined>,

		/** The prediction result. Value is used here instead of Any so that JsonFormat does not append an extra "@type" field when we convert the proto to JSON and so we can represent array of objects. Do not set error if this is set. */
		prediction: FormControl<any | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1SchemaPredictionResultFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1SchemaPredictionResultFormProperties>({
			instance: new FormControl<{[id: string]: any } | null | undefined>(undefined),
			key: new FormControl<string | null | undefined>(undefined),
			prediction: new FormControl<any | null | undefined>(undefined),
		});

	}

	export interface GoogleCloudAiplatformV1beta1SchemaPredictionResultError {

		/** Error message with additional details. */
		message?: string | null;

		/** Error status. This will be serialized into the enum name e.g. "NOT_FOUND". */
		status?: GoogleCloudAiplatformV1beta1SchemaPredictionResultErrorStatus | null;
	}
	export interface GoogleCloudAiplatformV1beta1SchemaPredictionResultErrorFormProperties {

		/** Error message with additional details. */
		message: FormControl<string | null | undefined>,

		/** Error status. This will be serialized into the enum name e.g. "NOT_FOUND". */
		status: FormControl<GoogleCloudAiplatformV1beta1SchemaPredictionResultErrorStatus | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1SchemaPredictionResultErrorFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1SchemaPredictionResultErrorFormProperties>({
			message: new FormControl<string | null | undefined>(undefined),
			status: new FormControl<GoogleCloudAiplatformV1beta1SchemaPredictionResultErrorStatus | null | undefined>(undefined),
		});

	}

	export enum GoogleCloudAiplatformV1beta1SchemaPredictionResultErrorStatus { OK = 0, CANCELLED = 1, UNKNOWN = 2, INVALID_ARGUMENT = 3, DEADLINE_EXCEEDED = 4, NOT_FOUND = 5, ALREADY_EXISTS = 6, PERMISSION_DENIED = 7, UNAUTHENTICATED = 8, RESOURCE_EXHAUSTED = 9, FAILED_PRECONDITION = 10, ABORTED = 11, OUT_OF_RANGE = 12, UNIMPLEMENTED = 13, INTERNAL = 14, UNAVAILABLE = 15, DATA_LOSS = 16 }


	/** The metadata of Datasets that contain tables data. */
	export interface GoogleCloudAiplatformV1beta1SchemaTablesDatasetMetadata {

		/** The tables Dataset's data source. The Dataset doesn't store the data directly, but only pointer(s) to its data. */
		inputConfig?: GoogleCloudAiplatformV1beta1SchemaTablesDatasetMetadataInputConfig;
	}

	/** The metadata of Datasets that contain tables data. */
	export interface GoogleCloudAiplatformV1beta1SchemaTablesDatasetMetadataFormProperties {
	}
	export function CreateGoogleCloudAiplatformV1beta1SchemaTablesDatasetMetadataFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1SchemaTablesDatasetMetadataFormProperties>({
		});

	}


	/** The tables Dataset's data source. The Dataset doesn't store the data directly, but only pointer(s) to its data. */
	export interface GoogleCloudAiplatformV1beta1SchemaTablesDatasetMetadataInputConfig {
		bigquerySource?: GoogleCloudAiplatformV1beta1SchemaTablesDatasetMetadataBigQuerySource;
		gcsSource?: GoogleCloudAiplatformV1beta1SchemaTablesDatasetMetadataGcsSource;
	}

	/** The tables Dataset's data source. The Dataset doesn't store the data directly, but only pointer(s) to its data. */
	export interface GoogleCloudAiplatformV1beta1SchemaTablesDatasetMetadataInputConfigFormProperties {
	}
	export function CreateGoogleCloudAiplatformV1beta1SchemaTablesDatasetMetadataInputConfigFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1SchemaTablesDatasetMetadataInputConfigFormProperties>({
		});

	}

	export interface GoogleCloudAiplatformV1beta1SchemaTablesDatasetMetadataBigQuerySource {

		/** The URI of a BigQuery table. e.g. bq://projectId.bqDatasetId.bqTableId */
		uri?: string | null;
	}
	export interface GoogleCloudAiplatformV1beta1SchemaTablesDatasetMetadataBigQuerySourceFormProperties {

		/** The URI of a BigQuery table. e.g. bq://projectId.bqDatasetId.bqTableId */
		uri: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1SchemaTablesDatasetMetadataBigQuerySourceFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1SchemaTablesDatasetMetadataBigQuerySourceFormProperties>({
			uri: new FormControl<string | null | undefined>(undefined),
		});

	}

	export interface GoogleCloudAiplatformV1beta1SchemaTablesDatasetMetadataGcsSource {

		/** Cloud Storage URI of one or more files. Only CSV files are supported. The first line of the CSV file is used as the header. If there are multiple files, the header is the first line of the lexicographically first file, the other files must either contain the exact same header or omit the header. */
		uri?: Array<string>;
	}
	export interface GoogleCloudAiplatformV1beta1SchemaTablesDatasetMetadataGcsSourceFormProperties {
	}
	export function CreateGoogleCloudAiplatformV1beta1SchemaTablesDatasetMetadataGcsSourceFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1SchemaTablesDatasetMetadataGcsSourceFormProperties>({
		});

	}


	/** Annotation details specific to text classification. */
	export interface GoogleCloudAiplatformV1beta1SchemaTextClassificationAnnotation {

		/** The resource Id of the AnnotationSpec that this Annotation pertains to. */
		annotationSpecId?: string | null;

		/** The display name of the AnnotationSpec that this Annotation pertains to. */
		displayName?: string | null;
	}

	/** Annotation details specific to text classification. */
	export interface GoogleCloudAiplatformV1beta1SchemaTextClassificationAnnotationFormProperties {

		/** The resource Id of the AnnotationSpec that this Annotation pertains to. */
		annotationSpecId: FormControl<string | null | undefined>,

		/** The display name of the AnnotationSpec that this Annotation pertains to. */
		displayName: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1SchemaTextClassificationAnnotationFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1SchemaTextClassificationAnnotationFormProperties>({
			annotationSpecId: new FormControl<string | null | undefined>(undefined),
			displayName: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Payload of Text DataItem. */
	export interface GoogleCloudAiplatformV1beta1SchemaTextDataItem {

		/** Output only. Google Cloud Storage URI points to the original text in user's bucket. The text file is up to 10MB in size. */
		gcsUri?: string | null;
	}

	/** Payload of Text DataItem. */
	export interface GoogleCloudAiplatformV1beta1SchemaTextDataItemFormProperties {

		/** Output only. Google Cloud Storage URI points to the original text in user's bucket. The text file is up to 10MB in size. */
		gcsUri: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1SchemaTextDataItemFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1SchemaTextDataItemFormProperties>({
			gcsUri: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** The metadata of Datasets that contain Text DataItems. */
	export interface GoogleCloudAiplatformV1beta1SchemaTextDatasetMetadata {

		/** Points to a YAML file stored on Google Cloud Storage describing payload of the Text DataItems that belong to this Dataset. */
		dataItemSchemaUri?: string | null;

		/** Google Cloud Storage Bucket name that contains the blob data of this Dataset. */
		gcsBucket?: string | null;
	}

	/** The metadata of Datasets that contain Text DataItems. */
	export interface GoogleCloudAiplatformV1beta1SchemaTextDatasetMetadataFormProperties {

		/** Points to a YAML file stored on Google Cloud Storage describing payload of the Text DataItems that belong to this Dataset. */
		dataItemSchemaUri: FormControl<string | null | undefined>,

		/** Google Cloud Storage Bucket name that contains the blob data of this Dataset. */
		gcsBucket: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1SchemaTextDatasetMetadataFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1SchemaTextDatasetMetadataFormProperties>({
			dataItemSchemaUri: new FormControl<string | null | undefined>(undefined),
			gcsBucket: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Annotation details specific to text extraction. */
	export interface GoogleCloudAiplatformV1beta1SchemaTextExtractionAnnotation {

		/** The resource Id of the AnnotationSpec that this Annotation pertains to. */
		annotationSpecId?: string | null;

		/** The display name of the AnnotationSpec that this Annotation pertains to. */
		displayName?: string | null;

		/** The text segment inside of DataItem. */
		textSegment?: GoogleCloudAiplatformV1beta1SchemaTextSegment;
	}

	/** Annotation details specific to text extraction. */
	export interface GoogleCloudAiplatformV1beta1SchemaTextExtractionAnnotationFormProperties {

		/** The resource Id of the AnnotationSpec that this Annotation pertains to. */
		annotationSpecId: FormControl<string | null | undefined>,

		/** The display name of the AnnotationSpec that this Annotation pertains to. */
		displayName: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1SchemaTextExtractionAnnotationFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1SchemaTextExtractionAnnotationFormProperties>({
			annotationSpecId: new FormControl<string | null | undefined>(undefined),
			displayName: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** The text segment inside of DataItem. */
	export interface GoogleCloudAiplatformV1beta1SchemaTextSegment {

		/** The text content in the segment for output only. */
		content?: string | null;

		/** Zero-based character index of the first character past the end of the text segment (counting character from the beginning of the text). The character at the end_offset is NOT included in the text segment. */
		endOffset?: string | null;

		/** Zero-based character index of the first character of the text segment (counting characters from the beginning of the text). */
		startOffset?: string | null;
	}

	/** The text segment inside of DataItem. */
	export interface GoogleCloudAiplatformV1beta1SchemaTextSegmentFormProperties {

		/** The text content in the segment for output only. */
		content: FormControl<string | null | undefined>,

		/** Zero-based character index of the first character past the end of the text segment (counting character from the beginning of the text). The character at the end_offset is NOT included in the text segment. */
		endOffset: FormControl<string | null | undefined>,

		/** Zero-based character index of the first character of the text segment (counting characters from the beginning of the text). */
		startOffset: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1SchemaTextSegmentFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1SchemaTextSegmentFormProperties>({
			content: new FormControl<string | null | undefined>(undefined),
			endOffset: new FormControl<string | null | undefined>(undefined),
			startOffset: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Annotation details specific to text sentiment. */
	export interface GoogleCloudAiplatformV1beta1SchemaTextSentimentAnnotation {

		/** The resource Id of the AnnotationSpec that this Annotation pertains to. */
		annotationSpecId?: string | null;

		/** The display name of the AnnotationSpec that this Annotation pertains to. */
		displayName?: string | null;

		/** The sentiment score for text. */
		sentiment?: number | null;

		/** The sentiment max score for text. */
		sentimentMax?: number | null;
	}

	/** Annotation details specific to text sentiment. */
	export interface GoogleCloudAiplatformV1beta1SchemaTextSentimentAnnotationFormProperties {

		/** The resource Id of the AnnotationSpec that this Annotation pertains to. */
		annotationSpecId: FormControl<string | null | undefined>,

		/** The display name of the AnnotationSpec that this Annotation pertains to. */
		displayName: FormControl<string | null | undefined>,

		/** The sentiment score for text. */
		sentiment: FormControl<number | null | undefined>,

		/** The sentiment max score for text. */
		sentimentMax: FormControl<number | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1SchemaTextSentimentAnnotationFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1SchemaTextSentimentAnnotationFormProperties>({
			annotationSpecId: new FormControl<string | null | undefined>(undefined),
			displayName: new FormControl<string | null | undefined>(undefined),
			sentiment: new FormControl<number | null | undefined>(undefined),
			sentimentMax: new FormControl<number | null | undefined>(undefined),
		});

	}


	/** The metadata of SavedQuery contains TextSentiment Annotations. */
	export interface GoogleCloudAiplatformV1beta1SchemaTextSentimentSavedQueryMetadata {

		/** The maximum sentiment of sentiment Anntoation in this SavedQuery. */
		sentimentMax?: number | null;
	}

	/** The metadata of SavedQuery contains TextSentiment Annotations. */
	export interface GoogleCloudAiplatformV1beta1SchemaTextSentimentSavedQueryMetadataFormProperties {

		/** The maximum sentiment of sentiment Anntoation in this SavedQuery. */
		sentimentMax: FormControl<number | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1SchemaTextSentimentSavedQueryMetadataFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1SchemaTextSentimentSavedQueryMetadataFormProperties>({
			sentimentMax: new FormControl<number | null | undefined>(undefined),
		});

	}


	/** A time period inside of a DataItem that has a time dimension (e.g. video). */
	export interface GoogleCloudAiplatformV1beta1SchemaTimeSegment {

		/** End of the time segment (exclusive), represented as the duration since the start of the DataItem. */
		endTimeOffset?: string | null;

		/** Start of the time segment (inclusive), represented as the duration since the start of the DataItem. */
		startTimeOffset?: string | null;
	}

	/** A time period inside of a DataItem that has a time dimension (e.g. video). */
	export interface GoogleCloudAiplatformV1beta1SchemaTimeSegmentFormProperties {

		/** End of the time segment (exclusive), represented as the duration since the start of the DataItem. */
		endTimeOffset: FormControl<string | null | undefined>,

		/** Start of the time segment (inclusive), represented as the duration since the start of the DataItem. */
		startTimeOffset: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1SchemaTimeSegmentFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1SchemaTimeSegmentFormProperties>({
			endTimeOffset: new FormControl<string | null | undefined>(undefined),
			startTimeOffset: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** The metadata of Datasets that contain time series data. */
	export interface GoogleCloudAiplatformV1beta1SchemaTimeSeriesDatasetMetadata {

		/** The time series Dataset's data source. The Dataset doesn't store the data directly, but only pointer(s) to its data. */
		inputConfig?: GoogleCloudAiplatformV1beta1SchemaTimeSeriesDatasetMetadataInputConfig;

		/** The column name of the time column that identifies time order in the time series. */
		timeColumn?: string | null;

		/** The column name of the time series identifier column that identifies the time series. */
		timeSeriesIdentifierColumn?: string | null;
	}

	/** The metadata of Datasets that contain time series data. */
	export interface GoogleCloudAiplatformV1beta1SchemaTimeSeriesDatasetMetadataFormProperties {

		/** The column name of the time column that identifies time order in the time series. */
		timeColumn: FormControl<string | null | undefined>,

		/** The column name of the time series identifier column that identifies the time series. */
		timeSeriesIdentifierColumn: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1SchemaTimeSeriesDatasetMetadataFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1SchemaTimeSeriesDatasetMetadataFormProperties>({
			timeColumn: new FormControl<string | null | undefined>(undefined),
			timeSeriesIdentifierColumn: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** The time series Dataset's data source. The Dataset doesn't store the data directly, but only pointer(s) to its data. */
	export interface GoogleCloudAiplatformV1beta1SchemaTimeSeriesDatasetMetadataInputConfig {
		bigquerySource?: GoogleCloudAiplatformV1beta1SchemaTimeSeriesDatasetMetadataBigQuerySource;
		gcsSource?: GoogleCloudAiplatformV1beta1SchemaTimeSeriesDatasetMetadataGcsSource;
	}

	/** The time series Dataset's data source. The Dataset doesn't store the data directly, but only pointer(s) to its data. */
	export interface GoogleCloudAiplatformV1beta1SchemaTimeSeriesDatasetMetadataInputConfigFormProperties {
	}
	export function CreateGoogleCloudAiplatformV1beta1SchemaTimeSeriesDatasetMetadataInputConfigFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1SchemaTimeSeriesDatasetMetadataInputConfigFormProperties>({
		});

	}

	export interface GoogleCloudAiplatformV1beta1SchemaTimeSeriesDatasetMetadataBigQuerySource {

		/** The URI of a BigQuery table. */
		uri?: string | null;
	}
	export interface GoogleCloudAiplatformV1beta1SchemaTimeSeriesDatasetMetadataBigQuerySourceFormProperties {

		/** The URI of a BigQuery table. */
		uri: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1SchemaTimeSeriesDatasetMetadataBigQuerySourceFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1SchemaTimeSeriesDatasetMetadataBigQuerySourceFormProperties>({
			uri: new FormControl<string | null | undefined>(undefined),
		});

	}

	export interface GoogleCloudAiplatformV1beta1SchemaTimeSeriesDatasetMetadataGcsSource {

		/** Cloud Storage URI of one or more files. Only CSV files are supported. The first line of the CSV file is used as the header. If there are multiple files, the header is the first line of the lexicographically first file, the other files must either contain the exact same header or omit the header. */
		uri?: Array<string>;
	}
	export interface GoogleCloudAiplatformV1beta1SchemaTimeSeriesDatasetMetadataGcsSourceFormProperties {
	}
	export function CreateGoogleCloudAiplatformV1beta1SchemaTimeSeriesDatasetMetadataGcsSourceFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1SchemaTimeSeriesDatasetMetadataGcsSourceFormProperties>({
		});

	}


	/** A TrainingJob that trains and uploads an AutoML Forecasting Model. */
	export interface GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlForecasting {
		inputs?: GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlForecastingInputs;

		/** Model metadata specific to AutoML Forecasting. */
		metadata?: GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlForecastingMetadata;
	}

	/** A TrainingJob that trains and uploads an AutoML Forecasting Model. */
	export interface GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlForecastingFormProperties {
	}
	export function CreateGoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlForecastingFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlForecastingFormProperties>({
		});

	}

	export interface GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlForecastingInputs {

		/** Additional experiment flags for the time series forcasting training. */
		additionalExperiments?: Array<string>;

		/** Names of columns that are available and provided when a forecast is requested. These columns contain information for the given entity (identified by the time_series_identifier_column column) that is known at forecast. For example, predicted weather for a specific day. */
		availableAtForecastColumns?: Array<string>;

		/** The amount of time into the past training and prediction data is used for model training and prediction respectively. Expressed in number of units defined by the `data_granularity` field. */
		contextWindow?: string | null;

		/** A duration of time expressed in time granularity units. */
		dataGranularity?: GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlForecastingInputsGranularity;

		/** If probabilistic inference is enabled, the model will fit a distribution that captures the uncertainty of a prediction. At inference time, the predictive distribution is used to make a point prediction that minimizes the optimization objective. For example, the mean of a predictive distribution is the point prediction that minimizes RMSE loss. If quantiles are specified, then the quantiles of the distribution are also returned. The optimization objective cannot be minimize-quantile-loss. */
		enableProbabilisticInference?: boolean | null;

		/** Configuration for exporting test set predictions to a BigQuery table. */
		exportEvaluatedDataItemsConfig?: GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionExportEvaluatedDataItemsConfig;

		/** The amount of time into the future for which forecasted values for the target are returned. Expressed in number of units defined by the `data_granularity` field. */
		forecastHorizon?: string | null;

		/** Configuration that defines the hierarchical relationship of time series and parameters for hierarchical forecasting strategies. */
		hierarchyConfig?: GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionHierarchyConfig;

		/** The geographical region based on which the holiday effect is applied in modeling by adding holiday categorical array feature that include all holidays matching the date. This option only allowed when data_granularity is day. By default, holiday effect modeling is disabled. To turn it on, specify the holiday region using this option. */
		holidayRegions?: Array<string>;

		/** Objective function the model is optimizing towards. The training process creates a model that optimizes the value of the objective function over the validation set. The supported optimization objectives: * "minimize-rmse" (default) - Minimize root-mean-squared error (RMSE). * "minimize-mae" - Minimize mean-absolute error (MAE). * "minimize-rmsle" - Minimize root-mean-squared log error (RMSLE). * "minimize-rmspe" - Minimize root-mean-squared percentage error (RMSPE). * "minimize-wape-mae" - Minimize the combination of weighted absolute percentage error (WAPE) and mean-absolute-error (MAE). * "minimize-quantile-loss" - Minimize the quantile loss at the quantiles defined in `quantiles`. * "minimize-mape" - Minimize the mean absolute percentage error. */
		optimizationObjective?: string | null;

		/** Quantiles to use for minimize-quantile-loss `optimization_objective`, or for probabilistic inference. Up to 5 quantiles are allowed of values between 0 and 1, exclusive. Required if the value of optimization_objective is minimize-quantile-loss. Represents the percent quantiles to use for that objective. Quantiles must be unique. */
		quantiles?: Array<number>;

		/** The name of the column that the Model is to predict values for. This column must be unavailable at forecast. */
		targetColumn?: string | null;

		/** The name of the column that identifies time order in the time series. This column must be available at forecast. */
		timeColumn?: string | null;

		/** Column names that should be used as attribute columns. The value of these columns does not vary as a function of time. For example, store ID or item color. */
		timeSeriesAttributeColumns?: Array<string>;

		/** The name of the column that identifies the time series. */
		timeSeriesIdentifierColumn?: string | null;

		/** Required. The train budget of creating this model, expressed in milli node hours i.e. 1,000 value in this field means 1 node hour. The training cost of the model will not exceed this budget. The final cost will be attempted to be close to the budget, though may end up being (even) noticeably smaller - at the backend's discretion. This especially may happen when further model training ceases to provide any improvements. If the budget is set to a value known to be insufficient to train a model for the given dataset, the training won't be attempted and will error. The train budget must be between 1,000 and 72,000 milli node hours, inclusive. */
		trainBudgetMilliNodeHours?: string | null;

		/** Each transformation will apply transform function to given input column. And the result will be used for training. When creating transformation for BigQuery Struct column, the column should be flattened using "." as the delimiter. */
		transformations?: Array<GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlForecastingInputsTransformation>;

		/** Names of columns that are unavailable when a forecast is requested. This column contains information for the given entity (identified by the time_series_identifier_column) that is unknown before the forecast For example, actual weather on a given day. */
		unavailableAtForecastColumns?: Array<string>;

		/** Validation options for the data validation component. The available options are: * "fail-pipeline" - default, will validate against the validation and fail the pipeline if it fails. * "ignore-validation" - ignore the results of the validation and continue */
		validationOptions?: string | null;

		/** Column name that should be used as the weight column. Higher values in this column give more importance to the row during model training. The column must have numeric values between 0 and 10000 inclusively; 0 means the row is ignored for training. If weight column field is not set, then all rows are assumed to have equal weight of 1. */
		weightColumn?: string | null;

		/** Config that contains the strategy used to generate sliding windows in time series training. A window is a series of rows that comprise the context up to the time of prediction, and the horizon following. The corresponding row for each window marks the start of the forecast horizon. Each window is used as an input example for training/evaluation. */
		windowConfig?: GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionWindowConfig;
	}
	export interface GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlForecastingInputsFormProperties {

		/** The amount of time into the past training and prediction data is used for model training and prediction respectively. Expressed in number of units defined by the `data_granularity` field. */
		contextWindow: FormControl<string | null | undefined>,

		/** If probabilistic inference is enabled, the model will fit a distribution that captures the uncertainty of a prediction. At inference time, the predictive distribution is used to make a point prediction that minimizes the optimization objective. For example, the mean of a predictive distribution is the point prediction that minimizes RMSE loss. If quantiles are specified, then the quantiles of the distribution are also returned. The optimization objective cannot be minimize-quantile-loss. */
		enableProbabilisticInference: FormControl<boolean | null | undefined>,

		/** The amount of time into the future for which forecasted values for the target are returned. Expressed in number of units defined by the `data_granularity` field. */
		forecastHorizon: FormControl<string | null | undefined>,

		/** Objective function the model is optimizing towards. The training process creates a model that optimizes the value of the objective function over the validation set. The supported optimization objectives: * "minimize-rmse" (default) - Minimize root-mean-squared error (RMSE). * "minimize-mae" - Minimize mean-absolute error (MAE). * "minimize-rmsle" - Minimize root-mean-squared log error (RMSLE). * "minimize-rmspe" - Minimize root-mean-squared percentage error (RMSPE). * "minimize-wape-mae" - Minimize the combination of weighted absolute percentage error (WAPE) and mean-absolute-error (MAE). * "minimize-quantile-loss" - Minimize the quantile loss at the quantiles defined in `quantiles`. * "minimize-mape" - Minimize the mean absolute percentage error. */
		optimizationObjective: FormControl<string | null | undefined>,

		/** The name of the column that the Model is to predict values for. This column must be unavailable at forecast. */
		targetColumn: FormControl<string | null | undefined>,

		/** The name of the column that identifies time order in the time series. This column must be available at forecast. */
		timeColumn: FormControl<string | null | undefined>,

		/** The name of the column that identifies the time series. */
		timeSeriesIdentifierColumn: FormControl<string | null | undefined>,

		/** Required. The train budget of creating this model, expressed in milli node hours i.e. 1,000 value in this field means 1 node hour. The training cost of the model will not exceed this budget. The final cost will be attempted to be close to the budget, though may end up being (even) noticeably smaller - at the backend's discretion. This especially may happen when further model training ceases to provide any improvements. If the budget is set to a value known to be insufficient to train a model for the given dataset, the training won't be attempted and will error. The train budget must be between 1,000 and 72,000 milli node hours, inclusive. */
		trainBudgetMilliNodeHours: FormControl<string | null | undefined>,

		/** Validation options for the data validation component. The available options are: * "fail-pipeline" - default, will validate against the validation and fail the pipeline if it fails. * "ignore-validation" - ignore the results of the validation and continue */
		validationOptions: FormControl<string | null | undefined>,

		/** Column name that should be used as the weight column. Higher values in this column give more importance to the row during model training. The column must have numeric values between 0 and 10000 inclusively; 0 means the row is ignored for training. If weight column field is not set, then all rows are assumed to have equal weight of 1. */
		weightColumn: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlForecastingInputsFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlForecastingInputsFormProperties>({
			contextWindow: new FormControl<string | null | undefined>(undefined),
			enableProbabilisticInference: new FormControl<boolean | null | undefined>(undefined),
			forecastHorizon: new FormControl<string | null | undefined>(undefined),
			optimizationObjective: new FormControl<string | null | undefined>(undefined),
			targetColumn: new FormControl<string | null | undefined>(undefined),
			timeColumn: new FormControl<string | null | undefined>(undefined),
			timeSeriesIdentifierColumn: new FormControl<string | null | undefined>(undefined),
			trainBudgetMilliNodeHours: new FormControl<string | null | undefined>(undefined),
			validationOptions: new FormControl<string | null | undefined>(undefined),
			weightColumn: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** A duration of time expressed in time granularity units. */
	export interface GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlForecastingInputsGranularity {

		/** The number of granularity_units between data points in the training data. If `granularity_unit` is `minute`, can be 1, 5, 10, 15, or 30. For all other values of `granularity_unit`, must be 1. */
		quantity?: string | null;

		/** The time granularity unit of this time period. The supported units are: * "minute" * "hour" * "day" * "week" * "month" * "year" */
		unit?: string | null;
	}

	/** A duration of time expressed in time granularity units. */
	export interface GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlForecastingInputsGranularityFormProperties {

		/** The number of granularity_units between data points in the training data. If `granularity_unit` is `minute`, can be 1, 5, 10, 15, or 30. For all other values of `granularity_unit`, must be 1. */
		quantity: FormControl<string | null | undefined>,

		/** The time granularity unit of this time period. The supported units are: * "minute" * "hour" * "day" * "week" * "month" * "year" */
		unit: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlForecastingInputsGranularityFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlForecastingInputsGranularityFormProperties>({
			quantity: new FormControl<string | null | undefined>(undefined),
			unit: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Configuration for exporting test set predictions to a BigQuery table. */
	export interface GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionExportEvaluatedDataItemsConfig {

		/** URI of desired destination BigQuery table. Expected format: `bq://{project_id}:{dataset_id}:{table}` If not specified, then results are exported to the following auto-created BigQuery table: `{project_id}:export_evaluated_examples_{model_name}_{yyyy_MM_dd'T'HH_mm_ss_SSS'Z'}.evaluated_examples` */
		destinationBigqueryUri?: string | null;

		/** If true and an export destination is specified, then the contents of the destination are overwritten. Otherwise, if the export destination already exists, then the export operation fails. */
		overrideExistingTable?: boolean | null;
	}

	/** Configuration for exporting test set predictions to a BigQuery table. */
	export interface GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionExportEvaluatedDataItemsConfigFormProperties {

		/** URI of desired destination BigQuery table. Expected format: `bq://{project_id}:{dataset_id}:{table}` If not specified, then results are exported to the following auto-created BigQuery table: `{project_id}:export_evaluated_examples_{model_name}_{yyyy_MM_dd'T'HH_mm_ss_SSS'Z'}.evaluated_examples` */
		destinationBigqueryUri: FormControl<string | null | undefined>,

		/** If true and an export destination is specified, then the contents of the destination are overwritten. Otherwise, if the export destination already exists, then the export operation fails. */
		overrideExistingTable: FormControl<boolean | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionExportEvaluatedDataItemsConfigFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionExportEvaluatedDataItemsConfigFormProperties>({
			destinationBigqueryUri: new FormControl<string | null | undefined>(undefined),
			overrideExistingTable: new FormControl<boolean | null | undefined>(undefined),
		});

	}


	/** Configuration that defines the hierarchical relationship of time series and parameters for hierarchical forecasting strategies. */
	export interface GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionHierarchyConfig {

		/** A list of time series attribute column names that define the time series hierarchy. Only one level of hierarchy is supported, ex. 'region' for a hierarchy of stores or 'department' for a hierarchy of products. If multiple columns are specified, time series will be grouped by their combined values, ex. ('blue', 'large') for 'color' and 'size', up to 5 columns are accepted. If no group columns are specified, all time series are considered to be part of the same group. */
		groupColumns?: Array<string>;

		/** The weight of the loss for predictions aggregated over both the horizon and time series in the same hierarchy group. */
		groupTemporalTotalWeight?: number | null;

		/** The weight of the loss for predictions aggregated over time series in the same group. */
		groupTotalWeight?: number | null;

		/** The weight of the loss for predictions aggregated over the horizon for a single time series. */
		temporalTotalWeight?: number | null;
	}

	/** Configuration that defines the hierarchical relationship of time series and parameters for hierarchical forecasting strategies. */
	export interface GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionHierarchyConfigFormProperties {

		/** The weight of the loss for predictions aggregated over both the horizon and time series in the same hierarchy group. */
		groupTemporalTotalWeight: FormControl<number | null | undefined>,

		/** The weight of the loss for predictions aggregated over time series in the same group. */
		groupTotalWeight: FormControl<number | null | undefined>,

		/** The weight of the loss for predictions aggregated over the horizon for a single time series. */
		temporalTotalWeight: FormControl<number | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionHierarchyConfigFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionHierarchyConfigFormProperties>({
			groupTemporalTotalWeight: new FormControl<number | null | undefined>(undefined),
			groupTotalWeight: new FormControl<number | null | undefined>(undefined),
			temporalTotalWeight: new FormControl<number | null | undefined>(undefined),
		});

	}

	export interface GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlForecastingInputsTransformation {

		/** Training pipeline will infer the proper transformation based on the statistic of dataset. */
		auto?: GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlForecastingInputsTransformationAutoTransformation;

		/** Training pipeline will perform following transformation functions. * The categorical string as is--no change to case, punctuation, spelling, tense, and so on. * Convert the category name to a dictionary lookup index and generate an embedding for each index. * Categories that appear less than 5 times in the training dataset are treated as the "unknown" category. The "unknown" category gets its own special lookup index and resulting embedding. */
		categorical?: GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlForecastingInputsTransformationCategoricalTransformation;

		/** Training pipeline will perform following transformation functions. * The value converted to float32. * The z_score of the value. * log(value+1) when the value is greater than or equal to 0. Otherwise, this transformation is not applied and the value is considered a missing value. * z_score of log(value+1) when the value is greater than or equal to 0. Otherwise, this transformation is not applied and the value is considered a missing value. * A boolean value that indicates whether the value is valid. */
		numeric?: GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlForecastingInputsTransformationNumericTransformation;

		/** Training pipeline will perform following transformation functions. * The text as is--no change to case, punctuation, spelling, tense, and so on. * Convert the category name to a dictionary lookup index and generate an embedding for each index. */
		text?: GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlForecastingInputsTransformationTextTransformation;

		/** Training pipeline will perform following transformation functions. * Apply the transformation functions for Numerical columns. * Determine the year, month, day,and weekday. Treat each value from the timestamp as a Categorical column. * Invalid numerical values (for example, values that fall outside of a typical timestamp range, or are extreme values) receive no special treatment and are not removed. */
		timestamp?: GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlForecastingInputsTransformationTimestampTransformation;
	}
	export interface GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlForecastingInputsTransformationFormProperties {
	}
	export function CreateGoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlForecastingInputsTransformationFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlForecastingInputsTransformationFormProperties>({
		});

	}


	/** Training pipeline will infer the proper transformation based on the statistic of dataset. */
	export interface GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlForecastingInputsTransformationAutoTransformation {
		columnName?: string | null;
	}

	/** Training pipeline will infer the proper transformation based on the statistic of dataset. */
	export interface GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlForecastingInputsTransformationAutoTransformationFormProperties {
		columnName: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlForecastingInputsTransformationAutoTransformationFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlForecastingInputsTransformationAutoTransformationFormProperties>({
			columnName: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Training pipeline will perform following transformation functions. * The categorical string as is--no change to case, punctuation, spelling, tense, and so on. * Convert the category name to a dictionary lookup index and generate an embedding for each index. * Categories that appear less than 5 times in the training dataset are treated as the "unknown" category. The "unknown" category gets its own special lookup index and resulting embedding. */
	export interface GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlForecastingInputsTransformationCategoricalTransformation {
		columnName?: string | null;
	}

	/** Training pipeline will perform following transformation functions. * The categorical string as is--no change to case, punctuation, spelling, tense, and so on. * Convert the category name to a dictionary lookup index and generate an embedding for each index. * Categories that appear less than 5 times in the training dataset are treated as the "unknown" category. The "unknown" category gets its own special lookup index and resulting embedding. */
	export interface GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlForecastingInputsTransformationCategoricalTransformationFormProperties {
		columnName: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlForecastingInputsTransformationCategoricalTransformationFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlForecastingInputsTransformationCategoricalTransformationFormProperties>({
			columnName: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Training pipeline will perform following transformation functions. * The value converted to float32. * The z_score of the value. * log(value+1) when the value is greater than or equal to 0. Otherwise, this transformation is not applied and the value is considered a missing value. * z_score of log(value+1) when the value is greater than or equal to 0. Otherwise, this transformation is not applied and the value is considered a missing value. * A boolean value that indicates whether the value is valid. */
	export interface GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlForecastingInputsTransformationNumericTransformation {
		columnName?: string | null;
	}

	/** Training pipeline will perform following transformation functions. * The value converted to float32. * The z_score of the value. * log(value+1) when the value is greater than or equal to 0. Otherwise, this transformation is not applied and the value is considered a missing value. * z_score of log(value+1) when the value is greater than or equal to 0. Otherwise, this transformation is not applied and the value is considered a missing value. * A boolean value that indicates whether the value is valid. */
	export interface GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlForecastingInputsTransformationNumericTransformationFormProperties {
		columnName: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlForecastingInputsTransformationNumericTransformationFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlForecastingInputsTransformationNumericTransformationFormProperties>({
			columnName: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Training pipeline will perform following transformation functions. * The text as is--no change to case, punctuation, spelling, tense, and so on. * Convert the category name to a dictionary lookup index and generate an embedding for each index. */
	export interface GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlForecastingInputsTransformationTextTransformation {
		columnName?: string | null;
	}

	/** Training pipeline will perform following transformation functions. * The text as is--no change to case, punctuation, spelling, tense, and so on. * Convert the category name to a dictionary lookup index and generate an embedding for each index. */
	export interface GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlForecastingInputsTransformationTextTransformationFormProperties {
		columnName: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlForecastingInputsTransformationTextTransformationFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlForecastingInputsTransformationTextTransformationFormProperties>({
			columnName: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Training pipeline will perform following transformation functions. * Apply the transformation functions for Numerical columns. * Determine the year, month, day,and weekday. Treat each value from the timestamp as a Categorical column. * Invalid numerical values (for example, values that fall outside of a typical timestamp range, or are extreme values) receive no special treatment and are not removed. */
	export interface GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlForecastingInputsTransformationTimestampTransformation {
		columnName?: string | null;

		/** The format in which that time field is expressed. The time_format must either be one of: * `unix-seconds` * `unix-milliseconds` * `unix-microseconds` * `unix-nanoseconds` (for respectively number of seconds, milliseconds, microseconds and nanoseconds since start of the Unix epoch); or be written in `strftime` syntax. If time_format is not set, then the default format is RFC 3339 `date-time` format, where `time-offset` = `"Z"` (e.g. 1985-04-12T23:20:50.52Z) */
		timeFormat?: string | null;
	}

	/** Training pipeline will perform following transformation functions. * Apply the transformation functions for Numerical columns. * Determine the year, month, day,and weekday. Treat each value from the timestamp as a Categorical column. * Invalid numerical values (for example, values that fall outside of a typical timestamp range, or are extreme values) receive no special treatment and are not removed. */
	export interface GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlForecastingInputsTransformationTimestampTransformationFormProperties {
		columnName: FormControl<string | null | undefined>,

		/** The format in which that time field is expressed. The time_format must either be one of: * `unix-seconds` * `unix-milliseconds` * `unix-microseconds` * `unix-nanoseconds` (for respectively number of seconds, milliseconds, microseconds and nanoseconds since start of the Unix epoch); or be written in `strftime` syntax. If time_format is not set, then the default format is RFC 3339 `date-time` format, where `time-offset` = `"Z"` (e.g. 1985-04-12T23:20:50.52Z) */
		timeFormat: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlForecastingInputsTransformationTimestampTransformationFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlForecastingInputsTransformationTimestampTransformationFormProperties>({
			columnName: new FormControl<string | null | undefined>(undefined),
			timeFormat: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Config that contains the strategy used to generate sliding windows in time series training. A window is a series of rows that comprise the context up to the time of prediction, and the horizon following. The corresponding row for each window marks the start of the forecast horizon. Each window is used as an input example for training/evaluation. */
	export interface GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionWindowConfig {

		/** Name of the column that should be used to generate sliding windows. The column should contain either booleans or string booleans; if the value of the row is True, generate a sliding window with the horizon starting at that row. The column will not be used as a feature in training. */
		column?: string | null;

		/** Maximum number of windows that should be generated across all time series. */
		maxCount?: string | null;

		/** Stride length used to generate input examples. Within one time series, every {$STRIDE_LENGTH} rows will be used to generate a sliding window. */
		strideLength?: string | null;
	}

	/** Config that contains the strategy used to generate sliding windows in time series training. A window is a series of rows that comprise the context up to the time of prediction, and the horizon following. The corresponding row for each window marks the start of the forecast horizon. Each window is used as an input example for training/evaluation. */
	export interface GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionWindowConfigFormProperties {

		/** Name of the column that should be used to generate sliding windows. The column should contain either booleans or string booleans; if the value of the row is True, generate a sliding window with the horizon starting at that row. The column will not be used as a feature in training. */
		column: FormControl<string | null | undefined>,

		/** Maximum number of windows that should be generated across all time series. */
		maxCount: FormControl<string | null | undefined>,

		/** Stride length used to generate input examples. Within one time series, every {$STRIDE_LENGTH} rows will be used to generate a sliding window. */
		strideLength: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionWindowConfigFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionWindowConfigFormProperties>({
			column: new FormControl<string | null | undefined>(undefined),
			maxCount: new FormControl<string | null | undefined>(undefined),
			strideLength: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Model metadata specific to AutoML Forecasting. */
	export interface GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlForecastingMetadata {

		/** BigQuery destination uri for exported evaluated examples. */
		evaluatedDataItemsBigqueryUri?: string | null;

		/** Output only. The actual training cost of the model, expressed in milli node hours, i.e. 1,000 value in this field means 1 node hour. Guaranteed to not exceed the train budget. */
		trainCostMilliNodeHours?: string | null;
	}

	/** Model metadata specific to AutoML Forecasting. */
	export interface GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlForecastingMetadataFormProperties {

		/** BigQuery destination uri for exported evaluated examples. */
		evaluatedDataItemsBigqueryUri: FormControl<string | null | undefined>,

		/** Output only. The actual training cost of the model, expressed in milli node hours, i.e. 1,000 value in this field means 1 node hour. Guaranteed to not exceed the train budget. */
		trainCostMilliNodeHours: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlForecastingMetadataFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlForecastingMetadataFormProperties>({
			evaluatedDataItemsBigqueryUri: new FormControl<string | null | undefined>(undefined),
			trainCostMilliNodeHours: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** A TrainingJob that trains and uploads an AutoML Image Classification Model. */
	export interface GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlImageClassification {
		inputs?: GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlImageClassificationInputs;
		metadata?: GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlImageClassificationMetadata;
	}

	/** A TrainingJob that trains and uploads an AutoML Image Classification Model. */
	export interface GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlImageClassificationFormProperties {
	}
	export function CreateGoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlImageClassificationFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlImageClassificationFormProperties>({
		});

	}

	export interface GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlImageClassificationInputs {

		/** The ID of the `base` model. If it is specified, the new model will be trained based on the `base` model. Otherwise, the new model will be trained from scratch. The `base` model must be in the same Project and Location as the new Model to train, and have the same modelType. */
		baseModelId?: string | null;

		/** The training budget of creating this model, expressed in milli node hours i.e. 1,000 value in this field means 1 node hour. The actual metadata.costMilliNodeHours will be equal or less than this value. If further model training ceases to provide any improvements, it will stop without using the full budget and the metadata.successfulStopReason will be `model-converged`. Note, node_hour = actual_hour * number_of_nodes_involved. For modelType `cloud`(default), the budget must be between 8,000 and 800,000 milli node hours, inclusive. The default value is 192,000 which represents one day in wall time, considering 8 nodes are used. For model types `mobile-tf-low-latency-1`, `mobile-tf-versatile-1`, `mobile-tf-high-accuracy-1`, the training budget must be between 1,000 and 100,000 milli node hours, inclusive. The default value is 24,000 which represents one day in wall time on a single node that is used. */
		budgetMilliNodeHours?: string | null;

		/** Use the entire training budget. This disables the early stopping feature. When false the early stopping feature is enabled, which means that AutoML Image Classification might stop training before the entire training budget has been used. */
		disableEarlyStopping?: boolean | null;
		modelType?: GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlImageClassificationInputsModelType | null;

		/** If false, a single-label (multi-class) Model will be trained (i.e. assuming that for each image just up to one annotation may be applicable). If true, a multi-label Model will be trained (i.e. assuming that for each image multiple annotations may be applicable). */
		multiLabel?: boolean | null;

		/** A wrapper class which contains the tunable parameters in an AutoML Image training job. */
		tunableParameter?: GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutomlImageTrainingTunableParameter;

		/** The ID of `base` model for upTraining. If it is specified, the new model will be upTrained based on the `base` model for upTraining. Otherwise, the new model will be trained from scratch. The `base` model for upTraining must be in the same Project and Location as the new Model to train, and have the same modelType. */
		uptrainBaseModelId?: string | null;
	}
	export interface GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlImageClassificationInputsFormProperties {

		/** The ID of the `base` model. If it is specified, the new model will be trained based on the `base` model. Otherwise, the new model will be trained from scratch. The `base` model must be in the same Project and Location as the new Model to train, and have the same modelType. */
		baseModelId: FormControl<string | null | undefined>,

		/** The training budget of creating this model, expressed in milli node hours i.e. 1,000 value in this field means 1 node hour. The actual metadata.costMilliNodeHours will be equal or less than this value. If further model training ceases to provide any improvements, it will stop without using the full budget and the metadata.successfulStopReason will be `model-converged`. Note, node_hour = actual_hour * number_of_nodes_involved. For modelType `cloud`(default), the budget must be between 8,000 and 800,000 milli node hours, inclusive. The default value is 192,000 which represents one day in wall time, considering 8 nodes are used. For model types `mobile-tf-low-latency-1`, `mobile-tf-versatile-1`, `mobile-tf-high-accuracy-1`, the training budget must be between 1,000 and 100,000 milli node hours, inclusive. The default value is 24,000 which represents one day in wall time on a single node that is used. */
		budgetMilliNodeHours: FormControl<string | null | undefined>,

		/** Use the entire training budget. This disables the early stopping feature. When false the early stopping feature is enabled, which means that AutoML Image Classification might stop training before the entire training budget has been used. */
		disableEarlyStopping: FormControl<boolean | null | undefined>,
		modelType: FormControl<GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlImageClassificationInputsModelType | null | undefined>,

		/** If false, a single-label (multi-class) Model will be trained (i.e. assuming that for each image just up to one annotation may be applicable). If true, a multi-label Model will be trained (i.e. assuming that for each image multiple annotations may be applicable). */
		multiLabel: FormControl<boolean | null | undefined>,

		/** The ID of `base` model for upTraining. If it is specified, the new model will be upTrained based on the `base` model for upTraining. Otherwise, the new model will be trained from scratch. The `base` model for upTraining must be in the same Project and Location as the new Model to train, and have the same modelType. */
		uptrainBaseModelId: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlImageClassificationInputsFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlImageClassificationInputsFormProperties>({
			baseModelId: new FormControl<string | null | undefined>(undefined),
			budgetMilliNodeHours: new FormControl<string | null | undefined>(undefined),
			disableEarlyStopping: new FormControl<boolean | null | undefined>(undefined),
			modelType: new FormControl<GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlImageClassificationInputsModelType | null | undefined>(undefined),
			multiLabel: new FormControl<boolean | null | undefined>(undefined),
			uptrainBaseModelId: new FormControl<string | null | undefined>(undefined),
		});

	}

	export enum GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlImageClassificationInputsModelType { MODEL_TYPE_UNSPECIFIED = 0, CLOUD = 1, CLOUD_1 = 2, MOBILE_TF_LOW_LATENCY_1 = 3, MOBILE_TF_VERSATILE_1 = 4, MOBILE_TF_HIGH_ACCURACY_1 = 5, EFFICIENTNET = 6, MAXVIT = 7, VIT = 8, COCA = 9 }


	/** A wrapper class which contains the tunable parameters in an AutoML Image training job. */
	export interface GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutomlImageTrainingTunableParameter {

		/** Optional. An unique name of pretrained model checkpoint provided in model garden, it will be mapped to a GCS location internally. */
		checkpointName?: string | null;

		/** Customizable dataset settings, used in the `model_garden_trainer`. */
		datasetConfig?: {[id: string]: string };

		/** Represents specification of a Study. */
		studySpec?: GoogleCloudAiplatformV1beta1StudySpec;

		/** Customizable trainer settings, used in the `model_garden_trainer`. */
		trainerConfig?: {[id: string]: string };
		trainerType?: GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutomlImageTrainingTunableParameterTrainerType | null;
	}

	/** A wrapper class which contains the tunable parameters in an AutoML Image training job. */
	export interface GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutomlImageTrainingTunableParameterFormProperties {

		/** Optional. An unique name of pretrained model checkpoint provided in model garden, it will be mapped to a GCS location internally. */
		checkpointName: FormControl<string | null | undefined>,

		/** Customizable dataset settings, used in the `model_garden_trainer`. */
		datasetConfig: FormControl<{[id: string]: string } | null | undefined>,

		/** Customizable trainer settings, used in the `model_garden_trainer`. */
		trainerConfig: FormControl<{[id: string]: string } | null | undefined>,
		trainerType: FormControl<GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutomlImageTrainingTunableParameterTrainerType | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutomlImageTrainingTunableParameterFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutomlImageTrainingTunableParameterFormProperties>({
			checkpointName: new FormControl<string | null | undefined>(undefined),
			datasetConfig: new FormControl<{[id: string]: string } | null | undefined>(undefined),
			trainerConfig: new FormControl<{[id: string]: string } | null | undefined>(undefined),
			trainerType: new FormControl<GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutomlImageTrainingTunableParameterTrainerType | null | undefined>(undefined),
		});

	}

	export enum GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutomlImageTrainingTunableParameterTrainerType { TRAINER_TYPE_UNSPECIFIED = 0, AUTOML_TRAINER = 1, MODEL_GARDEN_TRAINER = 2 }

	export interface GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlImageClassificationMetadata {

		/** The actual training cost of creating this model, expressed in milli node hours, i.e. 1,000 value in this field means 1 node hour. Guaranteed to not exceed inputs.budgetMilliNodeHours. */
		costMilliNodeHours?: string | null;

		/** For successful job completions, this is the reason why the job has finished. */
		successfulStopReason?: GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlImageClassificationMetadataSuccessfulStopReason | null;
	}
	export interface GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlImageClassificationMetadataFormProperties {

		/** The actual training cost of creating this model, expressed in milli node hours, i.e. 1,000 value in this field means 1 node hour. Guaranteed to not exceed inputs.budgetMilliNodeHours. */
		costMilliNodeHours: FormControl<string | null | undefined>,

		/** For successful job completions, this is the reason why the job has finished. */
		successfulStopReason: FormControl<GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlImageClassificationMetadataSuccessfulStopReason | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlImageClassificationMetadataFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlImageClassificationMetadataFormProperties>({
			costMilliNodeHours: new FormControl<string | null | undefined>(undefined),
			successfulStopReason: new FormControl<GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlImageClassificationMetadataSuccessfulStopReason | null | undefined>(undefined),
		});

	}

	export enum GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlImageClassificationMetadataSuccessfulStopReason { SUCCESSFUL_STOP_REASON_UNSPECIFIED = 0, BUDGET_REACHED = 1, MODEL_CONVERGED = 2 }


	/** A TrainingJob that trains and uploads an AutoML Image Object Detection Model. */
	export interface GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlImageObjectDetection {
		inputs?: GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlImageObjectDetectionInputs;
		metadata?: GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlImageObjectDetectionMetadata;
	}

	/** A TrainingJob that trains and uploads an AutoML Image Object Detection Model. */
	export interface GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlImageObjectDetectionFormProperties {
	}
	export function CreateGoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlImageObjectDetectionFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlImageObjectDetectionFormProperties>({
		});

	}

	export interface GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlImageObjectDetectionInputs {

		/** The training budget of creating this model, expressed in milli node hours i.e. 1,000 value in this field means 1 node hour. The actual metadata.costMilliNodeHours will be equal or less than this value. If further model training ceases to provide any improvements, it will stop without using the full budget and the metadata.successfulStopReason will be `model-converged`. Note, node_hour = actual_hour * number_of_nodes_involved. For modelType `cloud`(default), the budget must be between 20,000 and 900,000 milli node hours, inclusive. The default value is 216,000 which represents one day in wall time, considering 9 nodes are used. For model types `mobile-tf-low-latency-1`, `mobile-tf-versatile-1`, `mobile-tf-high-accuracy-1` the training budget must be between 1,000 and 100,000 milli node hours, inclusive. The default value is 24,000 which represents one day in wall time on a single node that is used. */
		budgetMilliNodeHours?: string | null;

		/** Use the entire training budget. This disables the early stopping feature. When false the early stopping feature is enabled, which means that AutoML Image Object Detection might stop training before the entire training budget has been used. */
		disableEarlyStopping?: boolean | null;
		modelType?: GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlImageObjectDetectionInputsModelType | null;

		/** A wrapper class which contains the tunable parameters in an AutoML Image training job. */
		tunableParameter?: GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutomlImageTrainingTunableParameter;

		/** The ID of `base` model for upTraining. If it is specified, the new model will be upTrained based on the `base` model for upTraining. Otherwise, the new model will be trained from scratch. The `base` model for upTraining must be in the same Project and Location as the new Model to train, and have the same modelType. */
		uptrainBaseModelId?: string | null;
	}
	export interface GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlImageObjectDetectionInputsFormProperties {

		/** The training budget of creating this model, expressed in milli node hours i.e. 1,000 value in this field means 1 node hour. The actual metadata.costMilliNodeHours will be equal or less than this value. If further model training ceases to provide any improvements, it will stop without using the full budget and the metadata.successfulStopReason will be `model-converged`. Note, node_hour = actual_hour * number_of_nodes_involved. For modelType `cloud`(default), the budget must be between 20,000 and 900,000 milli node hours, inclusive. The default value is 216,000 which represents one day in wall time, considering 9 nodes are used. For model types `mobile-tf-low-latency-1`, `mobile-tf-versatile-1`, `mobile-tf-high-accuracy-1` the training budget must be between 1,000 and 100,000 milli node hours, inclusive. The default value is 24,000 which represents one day in wall time on a single node that is used. */
		budgetMilliNodeHours: FormControl<string | null | undefined>,

		/** Use the entire training budget. This disables the early stopping feature. When false the early stopping feature is enabled, which means that AutoML Image Object Detection might stop training before the entire training budget has been used. */
		disableEarlyStopping: FormControl<boolean | null | undefined>,
		modelType: FormControl<GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlImageObjectDetectionInputsModelType | null | undefined>,

		/** The ID of `base` model for upTraining. If it is specified, the new model will be upTrained based on the `base` model for upTraining. Otherwise, the new model will be trained from scratch. The `base` model for upTraining must be in the same Project and Location as the new Model to train, and have the same modelType. */
		uptrainBaseModelId: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlImageObjectDetectionInputsFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlImageObjectDetectionInputsFormProperties>({
			budgetMilliNodeHours: new FormControl<string | null | undefined>(undefined),
			disableEarlyStopping: new FormControl<boolean | null | undefined>(undefined),
			modelType: new FormControl<GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlImageObjectDetectionInputsModelType | null | undefined>(undefined),
			uptrainBaseModelId: new FormControl<string | null | undefined>(undefined),
		});

	}

	export enum GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlImageObjectDetectionInputsModelType { MODEL_TYPE_UNSPECIFIED = 0, CLOUD_HIGH_ACCURACY_1 = 1, CLOUD_LOW_LATENCY_1 = 2, CLOUD_1 = 3, MOBILE_TF_LOW_LATENCY_1 = 4, MOBILE_TF_VERSATILE_1 = 5, MOBILE_TF_HIGH_ACCURACY_1 = 6, CLOUD_STREAMING_1 = 7, SPINENET = 8, YOLO = 9 }

	export interface GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlImageObjectDetectionMetadata {

		/** The actual training cost of creating this model, expressed in milli node hours, i.e. 1,000 value in this field means 1 node hour. Guaranteed to not exceed inputs.budgetMilliNodeHours. */
		costMilliNodeHours?: string | null;

		/** For successful job completions, this is the reason why the job has finished. */
		successfulStopReason?: GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlImageClassificationMetadataSuccessfulStopReason | null;
	}
	export interface GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlImageObjectDetectionMetadataFormProperties {

		/** The actual training cost of creating this model, expressed in milli node hours, i.e. 1,000 value in this field means 1 node hour. Guaranteed to not exceed inputs.budgetMilliNodeHours. */
		costMilliNodeHours: FormControl<string | null | undefined>,

		/** For successful job completions, this is the reason why the job has finished. */
		successfulStopReason: FormControl<GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlImageClassificationMetadataSuccessfulStopReason | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlImageObjectDetectionMetadataFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlImageObjectDetectionMetadataFormProperties>({
			costMilliNodeHours: new FormControl<string | null | undefined>(undefined),
			successfulStopReason: new FormControl<GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlImageClassificationMetadataSuccessfulStopReason | null | undefined>(undefined),
		});

	}


	/** A TrainingJob that trains and uploads an AutoML Image Segmentation Model. */
	export interface GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlImageSegmentation {
		inputs?: GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlImageSegmentationInputs;
		metadata?: GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlImageSegmentationMetadata;
	}

	/** A TrainingJob that trains and uploads an AutoML Image Segmentation Model. */
	export interface GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlImageSegmentationFormProperties {
	}
	export function CreateGoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlImageSegmentationFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlImageSegmentationFormProperties>({
		});

	}

	export interface GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlImageSegmentationInputs {

		/** The ID of the `base` model. If it is specified, the new model will be trained based on the `base` model. Otherwise, the new model will be trained from scratch. The `base` model must be in the same Project and Location as the new Model to train, and have the same modelType. */
		baseModelId?: string | null;

		/** The training budget of creating this model, expressed in milli node hours i.e. 1,000 value in this field means 1 node hour. The actual metadata.costMilliNodeHours will be equal or less than this value. If further model training ceases to provide any improvements, it will stop without using the full budget and the metadata.successfulStopReason will be `model-converged`. Note, node_hour = actual_hour * number_of_nodes_involved. Or actual_wall_clock_hours = train_budget_milli_node_hours / (number_of_nodes_involved * 1000) For modelType `cloud-high-accuracy-1`(default), the budget must be between 20,000 and 2,000,000 milli node hours, inclusive. The default value is 192,000 which represents one day in wall time (1000 milli * 24 hours * 8 nodes). */
		budgetMilliNodeHours?: string | null;
		modelType?: GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlImageSegmentationInputsModelType | null;
	}
	export interface GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlImageSegmentationInputsFormProperties {

		/** The ID of the `base` model. If it is specified, the new model will be trained based on the `base` model. Otherwise, the new model will be trained from scratch. The `base` model must be in the same Project and Location as the new Model to train, and have the same modelType. */
		baseModelId: FormControl<string | null | undefined>,

		/** The training budget of creating this model, expressed in milli node hours i.e. 1,000 value in this field means 1 node hour. The actual metadata.costMilliNodeHours will be equal or less than this value. If further model training ceases to provide any improvements, it will stop without using the full budget and the metadata.successfulStopReason will be `model-converged`. Note, node_hour = actual_hour * number_of_nodes_involved. Or actual_wall_clock_hours = train_budget_milli_node_hours / (number_of_nodes_involved * 1000) For modelType `cloud-high-accuracy-1`(default), the budget must be between 20,000 and 2,000,000 milli node hours, inclusive. The default value is 192,000 which represents one day in wall time (1000 milli * 24 hours * 8 nodes). */
		budgetMilliNodeHours: FormControl<string | null | undefined>,
		modelType: FormControl<GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlImageSegmentationInputsModelType | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlImageSegmentationInputsFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlImageSegmentationInputsFormProperties>({
			baseModelId: new FormControl<string | null | undefined>(undefined),
			budgetMilliNodeHours: new FormControl<string | null | undefined>(undefined),
			modelType: new FormControl<GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlImageSegmentationInputsModelType | null | undefined>(undefined),
		});

	}

	export enum GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlImageSegmentationInputsModelType { MODEL_TYPE_UNSPECIFIED = 0, CLOUD_HIGH_ACCURACY_1 = 1, CLOUD_LOW_ACCURACY_1 = 2, MOBILE_TF_LOW_LATENCY_1 = 3 }

	export interface GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlImageSegmentationMetadata {

		/** The actual training cost of creating this model, expressed in milli node hours, i.e. 1,000 value in this field means 1 node hour. Guaranteed to not exceed inputs.budgetMilliNodeHours. */
		costMilliNodeHours?: string | null;

		/** For successful job completions, this is the reason why the job has finished. */
		successfulStopReason?: GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlImageClassificationMetadataSuccessfulStopReason | null;
	}
	export interface GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlImageSegmentationMetadataFormProperties {

		/** The actual training cost of creating this model, expressed in milli node hours, i.e. 1,000 value in this field means 1 node hour. Guaranteed to not exceed inputs.budgetMilliNodeHours. */
		costMilliNodeHours: FormControl<string | null | undefined>,

		/** For successful job completions, this is the reason why the job has finished. */
		successfulStopReason: FormControl<GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlImageClassificationMetadataSuccessfulStopReason | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlImageSegmentationMetadataFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlImageSegmentationMetadataFormProperties>({
			costMilliNodeHours: new FormControl<string | null | undefined>(undefined),
			successfulStopReason: new FormControl<GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlImageClassificationMetadataSuccessfulStopReason | null | undefined>(undefined),
		});

	}


	/** A TrainingJob that trains and uploads an AutoML Tables Model. */
	export interface GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlTables {
		inputs?: GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlTablesInputs;

		/** Model metadata specific to AutoML Tables. */
		metadata?: GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlTablesMetadata;
	}

	/** A TrainingJob that trains and uploads an AutoML Tables Model. */
	export interface GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlTablesFormProperties {
	}
	export function CreateGoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlTablesFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlTablesFormProperties>({
		});

	}

	export interface GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlTablesInputs {

		/** Additional experiment flags for the Tables training pipeline. */
		additionalExperiments?: Array<string>;

		/** Use the entire training budget. This disables the early stopping feature. By default, the early stopping feature is enabled, which means that AutoML Tables might stop training before the entire training budget has been used. */
		disableEarlyStopping?: boolean | null;

		/** Configuration for exporting test set predictions to a BigQuery table. */
		exportEvaluatedDataItemsConfig?: GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionExportEvaluatedDataItemsConfig;

		/** Objective function the model is optimizing towards. The training process creates a model that maximizes/minimizes the value of the objective function over the validation set. The supported optimization objectives depend on the prediction type. If the field is not set, a default objective function is used. classification (binary): "maximize-au-roc" (default) - Maximize the area under the receiver operating characteristic (ROC) curve. "minimize-log-loss" - Minimize log loss. "maximize-au-prc" - Maximize the area under the precision-recall curve. "maximize-precision-at-recall" - Maximize precision for a specified recall value. "maximize-recall-at-precision" - Maximize recall for a specified precision value. classification (multi-class): "minimize-log-loss" (default) - Minimize log loss. regression: "minimize-rmse" (default) - Minimize root-mean-squared error (RMSE). "minimize-mae" - Minimize mean-absolute error (MAE). "minimize-rmsle" - Minimize root-mean-squared log error (RMSLE). */
		optimizationObjective?: string | null;

		/** Required when optimization_objective is "maximize-recall-at-precision". Must be between 0 and 1, inclusive. */
		optimizationObjectivePrecisionValue?: number | null;

		/** Required when optimization_objective is "maximize-precision-at-recall". Must be between 0 and 1, inclusive. */
		optimizationObjectiveRecallValue?: number | null;

		/** The type of prediction the Model is to produce. "classification" - Predict one out of multiple target values is picked for each row. "regression" - Predict a value based on its relation to other values. This type is available only to columns that contain semantically numeric values, i.e. integers or floating point number, even if stored as e.g. strings. */
		predictionType?: string | null;

		/** The column name of the target column that the model is to predict. */
		targetColumn?: string | null;

		/** Required. The train budget of creating this model, expressed in milli node hours i.e. 1,000 value in this field means 1 node hour. The training cost of the model will not exceed this budget. The final cost will be attempted to be close to the budget, though may end up being (even) noticeably smaller - at the backend's discretion. This especially may happen when further model training ceases to provide any improvements. If the budget is set to a value known to be insufficient to train a model for the given dataset, the training won't be attempted and will error. The train budget must be between 1,000 and 72,000 milli node hours, inclusive. */
		trainBudgetMilliNodeHours?: string | null;

		/** Each transformation will apply transform function to given input column. And the result will be used for training. When creating transformation for BigQuery Struct column, the column should be flattened using "." as the delimiter. */
		transformations?: Array<GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlTablesInputsTransformation>;

		/** Column name that should be used as the weight column. Higher values in this column give more importance to the row during model training. The column must have numeric values between 0 and 10000 inclusively; 0 means the row is ignored for training. If weight column field is not set, then all rows are assumed to have equal weight of 1. */
		weightColumnName?: string | null;
	}
	export interface GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlTablesInputsFormProperties {

		/** Use the entire training budget. This disables the early stopping feature. By default, the early stopping feature is enabled, which means that AutoML Tables might stop training before the entire training budget has been used. */
		disableEarlyStopping: FormControl<boolean | null | undefined>,

		/** Objective function the model is optimizing towards. The training process creates a model that maximizes/minimizes the value of the objective function over the validation set. The supported optimization objectives depend on the prediction type. If the field is not set, a default objective function is used. classification (binary): "maximize-au-roc" (default) - Maximize the area under the receiver operating characteristic (ROC) curve. "minimize-log-loss" - Minimize log loss. "maximize-au-prc" - Maximize the area under the precision-recall curve. "maximize-precision-at-recall" - Maximize precision for a specified recall value. "maximize-recall-at-precision" - Maximize recall for a specified precision value. classification (multi-class): "minimize-log-loss" (default) - Minimize log loss. regression: "minimize-rmse" (default) - Minimize root-mean-squared error (RMSE). "minimize-mae" - Minimize mean-absolute error (MAE). "minimize-rmsle" - Minimize root-mean-squared log error (RMSLE). */
		optimizationObjective: FormControl<string | null | undefined>,

		/** Required when optimization_objective is "maximize-recall-at-precision". Must be between 0 and 1, inclusive. */
		optimizationObjectivePrecisionValue: FormControl<number | null | undefined>,

		/** Required when optimization_objective is "maximize-precision-at-recall". Must be between 0 and 1, inclusive. */
		optimizationObjectiveRecallValue: FormControl<number | null | undefined>,

		/** The type of prediction the Model is to produce. "classification" - Predict one out of multiple target values is picked for each row. "regression" - Predict a value based on its relation to other values. This type is available only to columns that contain semantically numeric values, i.e. integers or floating point number, even if stored as e.g. strings. */
		predictionType: FormControl<string | null | undefined>,

		/** The column name of the target column that the model is to predict. */
		targetColumn: FormControl<string | null | undefined>,

		/** Required. The train budget of creating this model, expressed in milli node hours i.e. 1,000 value in this field means 1 node hour. The training cost of the model will not exceed this budget. The final cost will be attempted to be close to the budget, though may end up being (even) noticeably smaller - at the backend's discretion. This especially may happen when further model training ceases to provide any improvements. If the budget is set to a value known to be insufficient to train a model for the given dataset, the training won't be attempted and will error. The train budget must be between 1,000 and 72,000 milli node hours, inclusive. */
		trainBudgetMilliNodeHours: FormControl<string | null | undefined>,

		/** Column name that should be used as the weight column. Higher values in this column give more importance to the row during model training. The column must have numeric values between 0 and 10000 inclusively; 0 means the row is ignored for training. If weight column field is not set, then all rows are assumed to have equal weight of 1. */
		weightColumnName: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlTablesInputsFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlTablesInputsFormProperties>({
			disableEarlyStopping: new FormControl<boolean | null | undefined>(undefined),
			optimizationObjective: new FormControl<string | null | undefined>(undefined),
			optimizationObjectivePrecisionValue: new FormControl<number | null | undefined>(undefined),
			optimizationObjectiveRecallValue: new FormControl<number | null | undefined>(undefined),
			predictionType: new FormControl<string | null | undefined>(undefined),
			targetColumn: new FormControl<string | null | undefined>(undefined),
			trainBudgetMilliNodeHours: new FormControl<string | null | undefined>(undefined),
			weightColumnName: new FormControl<string | null | undefined>(undefined),
		});

	}

	export interface GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlTablesInputsTransformation {

		/** Training pipeline will infer the proper transformation based on the statistic of dataset. */
		auto?: GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlTablesInputsTransformationAutoTransformation;

		/** Training pipeline will perform following transformation functions. * The categorical string as is--no change to case, punctuation, spelling, tense, and so on. * Convert the category name to a dictionary lookup index and generate an embedding for each index. * Categories that appear less than 5 times in the training dataset are treated as the "unknown" category. The "unknown" category gets its own special lookup index and resulting embedding. */
		categorical?: GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlTablesInputsTransformationCategoricalTransformation;

		/** Training pipeline will perform following transformation functions. * The value converted to float32. * The z_score of the value. * log(value+1) when the value is greater than or equal to 0. Otherwise, this transformation is not applied and the value is considered a missing value. * z_score of log(value+1) when the value is greater than or equal to 0. Otherwise, this transformation is not applied and the value is considered a missing value. * A boolean value that indicates whether the value is valid. */
		numeric?: GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlTablesInputsTransformationNumericTransformation;

		/** Treats the column as categorical array and performs following transformation functions. * For each element in the array, convert the category name to a dictionary lookup index and generate an embedding for each index. Combine the embedding of all elements into a single embedding using the mean. * Empty arrays treated as an embedding of zeroes. */
		repeatedCategorical?: GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlTablesInputsTransformationCategoricalArrayTransformation;

		/** Treats the column as numerical array and performs following transformation functions. * All transformations for Numerical types applied to the average of the all elements. * The average of empty arrays is treated as zero. */
		repeatedNumeric?: GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlTablesInputsTransformationNumericArrayTransformation;

		/** Treats the column as text array and performs following transformation functions. * Concatenate all text values in the array into a single text value using a space (" ") as a delimiter, and then treat the result as a single text value. Apply the transformations for Text columns. * Empty arrays treated as an empty text. */
		repeatedText?: GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlTablesInputsTransformationTextArrayTransformation;

		/** Training pipeline will perform following transformation functions. * The text as is--no change to case, punctuation, spelling, tense, and so on. * Tokenize text to words. Convert each words to a dictionary lookup index and generate an embedding for each index. Combine the embedding of all elements into a single embedding using the mean. * Tokenization is based on unicode script boundaries. * Missing values get their own lookup index and resulting embedding. * Stop-words receive no special treatment and are not removed. */
		text?: GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlTablesInputsTransformationTextTransformation;

		/** Training pipeline will perform following transformation functions. * Apply the transformation functions for Numerical columns. * Determine the year, month, day,and weekday. Treat each value from the * timestamp as a Categorical column. * Invalid numerical values (for example, values that fall outside of a typical timestamp range, or are extreme values) receive no special treatment and are not removed. */
		timestamp?: GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlTablesInputsTransformationTimestampTransformation;
	}
	export interface GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlTablesInputsTransformationFormProperties {
	}
	export function CreateGoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlTablesInputsTransformationFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlTablesInputsTransformationFormProperties>({
		});

	}


	/** Training pipeline will infer the proper transformation based on the statistic of dataset. */
	export interface GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlTablesInputsTransformationAutoTransformation {
		columnName?: string | null;
	}

	/** Training pipeline will infer the proper transformation based on the statistic of dataset. */
	export interface GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlTablesInputsTransformationAutoTransformationFormProperties {
		columnName: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlTablesInputsTransformationAutoTransformationFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlTablesInputsTransformationAutoTransformationFormProperties>({
			columnName: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Training pipeline will perform following transformation functions. * The categorical string as is--no change to case, punctuation, spelling, tense, and so on. * Convert the category name to a dictionary lookup index and generate an embedding for each index. * Categories that appear less than 5 times in the training dataset are treated as the "unknown" category. The "unknown" category gets its own special lookup index and resulting embedding. */
	export interface GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlTablesInputsTransformationCategoricalTransformation {
		columnName?: string | null;
	}

	/** Training pipeline will perform following transformation functions. * The categorical string as is--no change to case, punctuation, spelling, tense, and so on. * Convert the category name to a dictionary lookup index and generate an embedding for each index. * Categories that appear less than 5 times in the training dataset are treated as the "unknown" category. The "unknown" category gets its own special lookup index and resulting embedding. */
	export interface GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlTablesInputsTransformationCategoricalTransformationFormProperties {
		columnName: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlTablesInputsTransformationCategoricalTransformationFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlTablesInputsTransformationCategoricalTransformationFormProperties>({
			columnName: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Training pipeline will perform following transformation functions. * The value converted to float32. * The z_score of the value. * log(value+1) when the value is greater than or equal to 0. Otherwise, this transformation is not applied and the value is considered a missing value. * z_score of log(value+1) when the value is greater than or equal to 0. Otherwise, this transformation is not applied and the value is considered a missing value. * A boolean value that indicates whether the value is valid. */
	export interface GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlTablesInputsTransformationNumericTransformation {
		columnName?: string | null;

		/** If invalid values is allowed, the training pipeline will create a boolean feature that indicated whether the value is valid. Otherwise, the training pipeline will discard the input row from trainining data. */
		invalidValuesAllowed?: boolean | null;
	}

	/** Training pipeline will perform following transformation functions. * The value converted to float32. * The z_score of the value. * log(value+1) when the value is greater than or equal to 0. Otherwise, this transformation is not applied and the value is considered a missing value. * z_score of log(value+1) when the value is greater than or equal to 0. Otherwise, this transformation is not applied and the value is considered a missing value. * A boolean value that indicates whether the value is valid. */
	export interface GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlTablesInputsTransformationNumericTransformationFormProperties {
		columnName: FormControl<string | null | undefined>,

		/** If invalid values is allowed, the training pipeline will create a boolean feature that indicated whether the value is valid. Otherwise, the training pipeline will discard the input row from trainining data. */
		invalidValuesAllowed: FormControl<boolean | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlTablesInputsTransformationNumericTransformationFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlTablesInputsTransformationNumericTransformationFormProperties>({
			columnName: new FormControl<string | null | undefined>(undefined),
			invalidValuesAllowed: new FormControl<boolean | null | undefined>(undefined),
		});

	}


	/** Treats the column as categorical array and performs following transformation functions. * For each element in the array, convert the category name to a dictionary lookup index and generate an embedding for each index. Combine the embedding of all elements into a single embedding using the mean. * Empty arrays treated as an embedding of zeroes. */
	export interface GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlTablesInputsTransformationCategoricalArrayTransformation {
		columnName?: string | null;
	}

	/** Treats the column as categorical array and performs following transformation functions. * For each element in the array, convert the category name to a dictionary lookup index and generate an embedding for each index. Combine the embedding of all elements into a single embedding using the mean. * Empty arrays treated as an embedding of zeroes. */
	export interface GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlTablesInputsTransformationCategoricalArrayTransformationFormProperties {
		columnName: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlTablesInputsTransformationCategoricalArrayTransformationFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlTablesInputsTransformationCategoricalArrayTransformationFormProperties>({
			columnName: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Treats the column as numerical array and performs following transformation functions. * All transformations for Numerical types applied to the average of the all elements. * The average of empty arrays is treated as zero. */
	export interface GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlTablesInputsTransformationNumericArrayTransformation {
		columnName?: string | null;

		/** If invalid values is allowed, the training pipeline will create a boolean feature that indicated whether the value is valid. Otherwise, the training pipeline will discard the input row from trainining data. */
		invalidValuesAllowed?: boolean | null;
	}

	/** Treats the column as numerical array and performs following transformation functions. * All transformations for Numerical types applied to the average of the all elements. * The average of empty arrays is treated as zero. */
	export interface GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlTablesInputsTransformationNumericArrayTransformationFormProperties {
		columnName: FormControl<string | null | undefined>,

		/** If invalid values is allowed, the training pipeline will create a boolean feature that indicated whether the value is valid. Otherwise, the training pipeline will discard the input row from trainining data. */
		invalidValuesAllowed: FormControl<boolean | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlTablesInputsTransformationNumericArrayTransformationFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlTablesInputsTransformationNumericArrayTransformationFormProperties>({
			columnName: new FormControl<string | null | undefined>(undefined),
			invalidValuesAllowed: new FormControl<boolean | null | undefined>(undefined),
		});

	}


	/** Treats the column as text array and performs following transformation functions. * Concatenate all text values in the array into a single text value using a space (" ") as a delimiter, and then treat the result as a single text value. Apply the transformations for Text columns. * Empty arrays treated as an empty text. */
	export interface GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlTablesInputsTransformationTextArrayTransformation {
		columnName?: string | null;
	}

	/** Treats the column as text array and performs following transformation functions. * Concatenate all text values in the array into a single text value using a space (" ") as a delimiter, and then treat the result as a single text value. Apply the transformations for Text columns. * Empty arrays treated as an empty text. */
	export interface GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlTablesInputsTransformationTextArrayTransformationFormProperties {
		columnName: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlTablesInputsTransformationTextArrayTransformationFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlTablesInputsTransformationTextArrayTransformationFormProperties>({
			columnName: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Training pipeline will perform following transformation functions. * The text as is--no change to case, punctuation, spelling, tense, and so on. * Tokenize text to words. Convert each words to a dictionary lookup index and generate an embedding for each index. Combine the embedding of all elements into a single embedding using the mean. * Tokenization is based on unicode script boundaries. * Missing values get their own lookup index and resulting embedding. * Stop-words receive no special treatment and are not removed. */
	export interface GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlTablesInputsTransformationTextTransformation {
		columnName?: string | null;
	}

	/** Training pipeline will perform following transformation functions. * The text as is--no change to case, punctuation, spelling, tense, and so on. * Tokenize text to words. Convert each words to a dictionary lookup index and generate an embedding for each index. Combine the embedding of all elements into a single embedding using the mean. * Tokenization is based on unicode script boundaries. * Missing values get their own lookup index and resulting embedding. * Stop-words receive no special treatment and are not removed. */
	export interface GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlTablesInputsTransformationTextTransformationFormProperties {
		columnName: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlTablesInputsTransformationTextTransformationFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlTablesInputsTransformationTextTransformationFormProperties>({
			columnName: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Training pipeline will perform following transformation functions. * Apply the transformation functions for Numerical columns. * Determine the year, month, day,and weekday. Treat each value from the * timestamp as a Categorical column. * Invalid numerical values (for example, values that fall outside of a typical timestamp range, or are extreme values) receive no special treatment and are not removed. */
	export interface GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlTablesInputsTransformationTimestampTransformation {
		columnName?: string | null;

		/** If invalid values is allowed, the training pipeline will create a boolean feature that indicated whether the value is valid. Otherwise, the training pipeline will discard the input row from trainining data. */
		invalidValuesAllowed?: boolean | null;

		/** The format in which that time field is expressed. The time_format must either be one of: * `unix-seconds` * `unix-milliseconds` * `unix-microseconds` * `unix-nanoseconds` (for respectively number of seconds, milliseconds, microseconds and nanoseconds since start of the Unix epoch); or be written in `strftime` syntax. If time_format is not set, then the default format is RFC 3339 `date-time` format, where `time-offset` = `"Z"` (e.g. 1985-04-12T23:20:50.52Z) */
		timeFormat?: string | null;
	}

	/** Training pipeline will perform following transformation functions. * Apply the transformation functions for Numerical columns. * Determine the year, month, day,and weekday. Treat each value from the * timestamp as a Categorical column. * Invalid numerical values (for example, values that fall outside of a typical timestamp range, or are extreme values) receive no special treatment and are not removed. */
	export interface GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlTablesInputsTransformationTimestampTransformationFormProperties {
		columnName: FormControl<string | null | undefined>,

		/** If invalid values is allowed, the training pipeline will create a boolean feature that indicated whether the value is valid. Otherwise, the training pipeline will discard the input row from trainining data. */
		invalidValuesAllowed: FormControl<boolean | null | undefined>,

		/** The format in which that time field is expressed. The time_format must either be one of: * `unix-seconds` * `unix-milliseconds` * `unix-microseconds` * `unix-nanoseconds` (for respectively number of seconds, milliseconds, microseconds and nanoseconds since start of the Unix epoch); or be written in `strftime` syntax. If time_format is not set, then the default format is RFC 3339 `date-time` format, where `time-offset` = `"Z"` (e.g. 1985-04-12T23:20:50.52Z) */
		timeFormat: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlTablesInputsTransformationTimestampTransformationFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlTablesInputsTransformationTimestampTransformationFormProperties>({
			columnName: new FormControl<string | null | undefined>(undefined),
			invalidValuesAllowed: new FormControl<boolean | null | undefined>(undefined),
			timeFormat: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Model metadata specific to AutoML Tables. */
	export interface GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlTablesMetadata {

		/** BigQuery destination uri for exported evaluated examples. */
		evaluatedDataItemsBigqueryUri?: string | null;

		/** Output only. The actual training cost of the model, expressed in milli node hours, i.e. 1,000 value in this field means 1 node hour. Guaranteed to not exceed the train budget. */
		trainCostMilliNodeHours?: string | null;
	}

	/** Model metadata specific to AutoML Tables. */
	export interface GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlTablesMetadataFormProperties {

		/** BigQuery destination uri for exported evaluated examples. */
		evaluatedDataItemsBigqueryUri: FormControl<string | null | undefined>,

		/** Output only. The actual training cost of the model, expressed in milli node hours, i.e. 1,000 value in this field means 1 node hour. Guaranteed to not exceed the train budget. */
		trainCostMilliNodeHours: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlTablesMetadataFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlTablesMetadataFormProperties>({
			evaluatedDataItemsBigqueryUri: new FormControl<string | null | undefined>(undefined),
			trainCostMilliNodeHours: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** A TrainingJob that trains and uploads an AutoML Text Classification Model. */
	export interface GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlTextClassification {
		inputs?: GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlTextClassificationInputs;
	}

	/** A TrainingJob that trains and uploads an AutoML Text Classification Model. */
	export interface GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlTextClassificationFormProperties {
	}
	export function CreateGoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlTextClassificationFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlTextClassificationFormProperties>({
		});

	}

	export interface GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlTextClassificationInputs {
		multiLabel?: boolean | null;
	}
	export interface GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlTextClassificationInputsFormProperties {
		multiLabel: FormControl<boolean | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlTextClassificationInputsFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlTextClassificationInputsFormProperties>({
			multiLabel: new FormControl<boolean | null | undefined>(undefined),
		});

	}


	/** A TrainingJob that trains and uploads an AutoML Text Extraction Model. */
	export interface GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlTextExtraction {
		inputs?: GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlTextExtractionInputs;
	}

	/** A TrainingJob that trains and uploads an AutoML Text Extraction Model. */
	export interface GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlTextExtractionFormProperties {
	}
	export function CreateGoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlTextExtractionFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlTextExtractionFormProperties>({
		});

	}

	export interface GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlTextExtractionInputs {
	}
	export interface GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlTextExtractionInputsFormProperties {
	}
	export function CreateGoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlTextExtractionInputsFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlTextExtractionInputsFormProperties>({
		});

	}


	/** A TrainingJob that trains and uploads an AutoML Text Sentiment Model. */
	export interface GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlTextSentiment {
		inputs?: GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlTextSentimentInputs;
	}

	/** A TrainingJob that trains and uploads an AutoML Text Sentiment Model. */
	export interface GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlTextSentimentFormProperties {
	}
	export function CreateGoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlTextSentimentFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlTextSentimentFormProperties>({
		});

	}

	export interface GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlTextSentimentInputs {

		/** A sentiment is expressed as an integer ordinal, where higher value means a more positive sentiment. The range of sentiments that will be used is between 0 and sentimentMax (inclusive on both ends), and all the values in the range must be represented in the dataset before a model can be created. Only the Annotations with this sentimentMax will be used for training. sentimentMax value must be between 1 and 10 (inclusive). */
		sentimentMax?: number | null;
	}
	export interface GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlTextSentimentInputsFormProperties {

		/** A sentiment is expressed as an integer ordinal, where higher value means a more positive sentiment. The range of sentiments that will be used is between 0 and sentimentMax (inclusive on both ends), and all the values in the range must be represented in the dataset before a model can be created. Only the Annotations with this sentimentMax will be used for training. sentimentMax value must be between 1 and 10 (inclusive). */
		sentimentMax: FormControl<number | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlTextSentimentInputsFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlTextSentimentInputsFormProperties>({
			sentimentMax: new FormControl<number | null | undefined>(undefined),
		});

	}


	/** A TrainingJob that trains and uploads an AutoML Video Action Recognition Model. */
	export interface GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlVideoActionRecognition {
		inputs?: GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlVideoActionRecognitionInputs;
	}

	/** A TrainingJob that trains and uploads an AutoML Video Action Recognition Model. */
	export interface GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlVideoActionRecognitionFormProperties {
	}
	export function CreateGoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlVideoActionRecognitionFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlVideoActionRecognitionFormProperties>({
		});

	}

	export interface GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlVideoActionRecognitionInputs {
		modelType?: GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlVideoActionRecognitionInputsModelType | null;
	}
	export interface GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlVideoActionRecognitionInputsFormProperties {
		modelType: FormControl<GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlVideoActionRecognitionInputsModelType | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlVideoActionRecognitionInputsFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlVideoActionRecognitionInputsFormProperties>({
			modelType: new FormControl<GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlVideoActionRecognitionInputsModelType | null | undefined>(undefined),
		});

	}

	export enum GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlVideoActionRecognitionInputsModelType { MODEL_TYPE_UNSPECIFIED = 0, CLOUD = 1, MOBILE_VERSATILE_1 = 2, MOBILE_JETSON_VERSATILE_1 = 3, MOBILE_CORAL_VERSATILE_1 = 4 }


	/** A TrainingJob that trains and uploads an AutoML Video Classification Model. */
	export interface GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlVideoClassification {
		inputs?: GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlVideoClassificationInputs;
	}

	/** A TrainingJob that trains and uploads an AutoML Video Classification Model. */
	export interface GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlVideoClassificationFormProperties {
	}
	export function CreateGoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlVideoClassificationFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlVideoClassificationFormProperties>({
		});

	}

	export interface GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlVideoClassificationInputs {
		modelType?: GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlVideoClassificationInputsModelType | null;
	}
	export interface GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlVideoClassificationInputsFormProperties {
		modelType: FormControl<GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlVideoClassificationInputsModelType | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlVideoClassificationInputsFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlVideoClassificationInputsFormProperties>({
			modelType: new FormControl<GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlVideoClassificationInputsModelType | null | undefined>(undefined),
		});

	}

	export enum GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlVideoClassificationInputsModelType { MODEL_TYPE_UNSPECIFIED = 0, CLOUD = 1, MOBILE_VERSATILE_1 = 2, MOBILE_JETSON_VERSATILE_1 = 3 }


	/** A TrainingJob that trains and uploads an AutoML Video ObjectTracking Model. */
	export interface GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlVideoObjectTracking {
		inputs?: GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlVideoObjectTrackingInputs;
	}

	/** A TrainingJob that trains and uploads an AutoML Video ObjectTracking Model. */
	export interface GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlVideoObjectTrackingFormProperties {
	}
	export function CreateGoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlVideoObjectTrackingFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlVideoObjectTrackingFormProperties>({
		});

	}

	export interface GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlVideoObjectTrackingInputs {
		modelType?: GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlVideoObjectTrackingInputsModelType | null;
	}
	export interface GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlVideoObjectTrackingInputsFormProperties {
		modelType: FormControl<GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlVideoObjectTrackingInputsModelType | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlVideoObjectTrackingInputsFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlVideoObjectTrackingInputsFormProperties>({
			modelType: new FormControl<GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlVideoObjectTrackingInputsModelType | null | undefined>(undefined),
		});

	}

	export enum GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlVideoObjectTrackingInputsModelType { MODEL_TYPE_UNSPECIFIED = 0, CLOUD = 1, MOBILE_VERSATILE_1 = 2, MOBILE_CORAL_VERSATILE_1 = 3, MOBILE_CORAL_LOW_LATENCY_1 = 4, MOBILE_JETSON_VERSATILE_1 = 5, MOBILE_JETSON_LOW_LATENCY_1 = 6 }

	export interface GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionCustomJobMetadata {

		/** The resource name of the CustomJob that has been created to carry out this custom task. */
		backingCustomJob?: string | null;
	}
	export interface GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionCustomJobMetadataFormProperties {

		/** The resource name of the CustomJob that has been created to carry out this custom task. */
		backingCustomJob: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionCustomJobMetadataFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionCustomJobMetadataFormProperties>({
			backingCustomJob: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** A TrainingJob that trains a custom code Model. */
	export interface GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionCustomTask {

		/** Represents the spec of a CustomJob. */
		inputs?: GoogleCloudAiplatformV1beta1CustomJobSpec;
		metadata?: GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionCustomJobMetadata;
	}

	/** A TrainingJob that trains a custom code Model. */
	export interface GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionCustomTaskFormProperties {
	}
	export function CreateGoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionCustomTaskFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionCustomTaskFormProperties>({
		});

	}

	export interface GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionHyperparameterTuningJobMetadata {

		/** The resource name of the HyperparameterTuningJob that has been created to carry out this HyperparameterTuning task. */
		backingHyperparameterTuningJob?: string | null;

		/** The resource name of the CustomJob that has been created to run the best Trial of this HyperparameterTuning task. */
		bestTrialBackingCustomJob?: string | null;
	}
	export interface GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionHyperparameterTuningJobMetadataFormProperties {

		/** The resource name of the HyperparameterTuningJob that has been created to carry out this HyperparameterTuning task. */
		backingHyperparameterTuningJob: FormControl<string | null | undefined>,

		/** The resource name of the CustomJob that has been created to run the best Trial of this HyperparameterTuning task. */
		bestTrialBackingCustomJob: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionHyperparameterTuningJobMetadataFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionHyperparameterTuningJobMetadataFormProperties>({
			backingHyperparameterTuningJob: new FormControl<string | null | undefined>(undefined),
			bestTrialBackingCustomJob: new FormControl<string | null | undefined>(undefined),
		});

	}

	export interface GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionHyperparameterTuningJobSpec {

		/** The number of failed Trials that need to be seen before failing the HyperparameterTuningJob. If set to 0, Vertex AI decides how many Trials must fail before the whole job fails. */
		maxFailedTrialCount?: number | null;

		/** The desired total number of Trials. */
		maxTrialCount?: number | null;

		/** The desired number of Trials to run in parallel. */
		parallelTrialCount?: number | null;

		/** Represents specification of a Study. */
		studySpec?: GoogleCloudAiplatformV1beta1StudySpec;

		/** Represents the spec of a CustomJob. */
		trialJobSpec?: GoogleCloudAiplatformV1beta1CustomJobSpec;
	}
	export interface GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionHyperparameterTuningJobSpecFormProperties {

		/** The number of failed Trials that need to be seen before failing the HyperparameterTuningJob. If set to 0, Vertex AI decides how many Trials must fail before the whole job fails. */
		maxFailedTrialCount: FormControl<number | null | undefined>,

		/** The desired total number of Trials. */
		maxTrialCount: FormControl<number | null | undefined>,

		/** The desired number of Trials to run in parallel. */
		parallelTrialCount: FormControl<number | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionHyperparameterTuningJobSpecFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionHyperparameterTuningJobSpecFormProperties>({
			maxFailedTrialCount: new FormControl<number | null | undefined>(undefined),
			maxTrialCount: new FormControl<number | null | undefined>(undefined),
			parallelTrialCount: new FormControl<number | null | undefined>(undefined),
		});

	}


	/** A TrainingJob that tunes Hypererparameters of a custom code Model. */
	export interface GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionHyperparameterTuningTask {
		inputs?: GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionHyperparameterTuningJobSpec;
		metadata?: GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionHyperparameterTuningJobMetadata;
	}

	/** A TrainingJob that tunes Hypererparameters of a custom code Model. */
	export interface GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionHyperparameterTuningTaskFormProperties {
	}
	export function CreateGoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionHyperparameterTuningTaskFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionHyperparameterTuningTaskFormProperties>({
		});

	}


	/** A TrainingJob that trains and uploads an AutoML Forecasting Model. */
	export interface GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionSeq2SeqPlusForecasting {
		inputs?: GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionSeq2SeqPlusForecastingInputs;

		/** Model metadata specific to Seq2Seq Plus Forecasting. */
		metadata?: GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionSeq2SeqPlusForecastingMetadata;
	}

	/** A TrainingJob that trains and uploads an AutoML Forecasting Model. */
	export interface GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionSeq2SeqPlusForecastingFormProperties {
	}
	export function CreateGoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionSeq2SeqPlusForecastingFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionSeq2SeqPlusForecastingFormProperties>({
		});

	}

	export interface GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionSeq2SeqPlusForecastingInputs {

		/** Additional experiment flags for the time series forcasting training. */
		additionalExperiments?: Array<string>;

		/** Names of columns that are available and provided when a forecast is requested. These columns contain information for the given entity (identified by the time_series_identifier_column column) that is known at forecast. For example, predicted weather for a specific day. */
		availableAtForecastColumns?: Array<string>;

		/** The amount of time into the past training and prediction data is used for model training and prediction respectively. Expressed in number of units defined by the `data_granularity` field. */
		contextWindow?: string | null;

		/** A duration of time expressed in time granularity units. */
		dataGranularity?: GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionSeq2SeqPlusForecastingInputsGranularity;

		/** Configuration for exporting test set predictions to a BigQuery table. */
		exportEvaluatedDataItemsConfig?: GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionExportEvaluatedDataItemsConfig;

		/** The amount of time into the future for which forecasted values for the target are returned. Expressed in number of units defined by the `data_granularity` field. */
		forecastHorizon?: string | null;

		/** Configuration that defines the hierarchical relationship of time series and parameters for hierarchical forecasting strategies. */
		hierarchyConfig?: GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionHierarchyConfig;

		/** The geographical region based on which the holiday effect is applied in modeling by adding holiday categorical array feature that include all holidays matching the date. This option only allowed when data_granularity is day. By default, holiday effect modeling is disabled. To turn it on, specify the holiday region using this option. */
		holidayRegions?: Array<string>;

		/** Objective function the model is optimizing towards. The training process creates a model that optimizes the value of the objective function over the validation set. The supported optimization objectives: * "minimize-rmse" (default) - Minimize root-mean-squared error (RMSE). * "minimize-mae" - Minimize mean-absolute error (MAE). * "minimize-rmsle" - Minimize root-mean-squared log error (RMSLE). * "minimize-rmspe" - Minimize root-mean-squared percentage error (RMSPE). * "minimize-wape-mae" - Minimize the combination of weighted absolute percentage error (WAPE) and mean-absolute-error (MAE). * "minimize-quantile-loss" - Minimize the quantile loss at the quantiles defined in `quantiles`. * "minimize-mape" - Minimize the mean absolute percentage error. */
		optimizationObjective?: string | null;

		/** Quantiles to use for minimize-quantile-loss `optimization_objective`. Up to 5 quantiles are allowed of values between 0 and 1, exclusive. Required if the value of optimization_objective is minimize-quantile-loss. Represents the percent quantiles to use for that objective. Quantiles must be unique. */
		quantiles?: Array<number>;

		/** The name of the column that the Model is to predict values for. This column must be unavailable at forecast. */
		targetColumn?: string | null;

		/** The name of the column that identifies time order in the time series. This column must be available at forecast. */
		timeColumn?: string | null;

		/** Column names that should be used as attribute columns. The value of these columns does not vary as a function of time. For example, store ID or item color. */
		timeSeriesAttributeColumns?: Array<string>;

		/** The name of the column that identifies the time series. */
		timeSeriesIdentifierColumn?: string | null;

		/** Required. The train budget of creating this model, expressed in milli node hours i.e. 1,000 value in this field means 1 node hour. The training cost of the model will not exceed this budget. The final cost will be attempted to be close to the budget, though may end up being (even) noticeably smaller - at the backend's discretion. This especially may happen when further model training ceases to provide any improvements. If the budget is set to a value known to be insufficient to train a model for the given dataset, the training won't be attempted and will error. The train budget must be between 1,000 and 72,000 milli node hours, inclusive. */
		trainBudgetMilliNodeHours?: string | null;

		/** Each transformation will apply transform function to given input column. And the result will be used for training. When creating transformation for BigQuery Struct column, the column should be flattened using "." as the delimiter. */
		transformations?: Array<GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionSeq2SeqPlusForecastingInputsTransformation>;

		/** Names of columns that are unavailable when a forecast is requested. This column contains information for the given entity (identified by the time_series_identifier_column) that is unknown before the forecast For example, actual weather on a given day. */
		unavailableAtForecastColumns?: Array<string>;

		/** Validation options for the data validation component. The available options are: * "fail-pipeline" - default, will validate against the validation and fail the pipeline if it fails. * "ignore-validation" - ignore the results of the validation and continue */
		validationOptions?: string | null;

		/** Column name that should be used as the weight column. Higher values in this column give more importance to the row during model training. The column must have numeric values between 0 and 10000 inclusively; 0 means the row is ignored for training. If weight column field is not set, then all rows are assumed to have equal weight of 1. This column must be available at forecast. */
		weightColumn?: string | null;

		/** Config that contains the strategy used to generate sliding windows in time series training. A window is a series of rows that comprise the context up to the time of prediction, and the horizon following. The corresponding row for each window marks the start of the forecast horizon. Each window is used as an input example for training/evaluation. */
		windowConfig?: GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionWindowConfig;
	}
	export interface GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionSeq2SeqPlusForecastingInputsFormProperties {

		/** The amount of time into the past training and prediction data is used for model training and prediction respectively. Expressed in number of units defined by the `data_granularity` field. */
		contextWindow: FormControl<string | null | undefined>,

		/** The amount of time into the future for which forecasted values for the target are returned. Expressed in number of units defined by the `data_granularity` field. */
		forecastHorizon: FormControl<string | null | undefined>,

		/** Objective function the model is optimizing towards. The training process creates a model that optimizes the value of the objective function over the validation set. The supported optimization objectives: * "minimize-rmse" (default) - Minimize root-mean-squared error (RMSE). * "minimize-mae" - Minimize mean-absolute error (MAE). * "minimize-rmsle" - Minimize root-mean-squared log error (RMSLE). * "minimize-rmspe" - Minimize root-mean-squared percentage error (RMSPE). * "minimize-wape-mae" - Minimize the combination of weighted absolute percentage error (WAPE) and mean-absolute-error (MAE). * "minimize-quantile-loss" - Minimize the quantile loss at the quantiles defined in `quantiles`. * "minimize-mape" - Minimize the mean absolute percentage error. */
		optimizationObjective: FormControl<string | null | undefined>,

		/** The name of the column that the Model is to predict values for. This column must be unavailable at forecast. */
		targetColumn: FormControl<string | null | undefined>,

		/** The name of the column that identifies time order in the time series. This column must be available at forecast. */
		timeColumn: FormControl<string | null | undefined>,

		/** The name of the column that identifies the time series. */
		timeSeriesIdentifierColumn: FormControl<string | null | undefined>,

		/** Required. The train budget of creating this model, expressed in milli node hours i.e. 1,000 value in this field means 1 node hour. The training cost of the model will not exceed this budget. The final cost will be attempted to be close to the budget, though may end up being (even) noticeably smaller - at the backend's discretion. This especially may happen when further model training ceases to provide any improvements. If the budget is set to a value known to be insufficient to train a model for the given dataset, the training won't be attempted and will error. The train budget must be between 1,000 and 72,000 milli node hours, inclusive. */
		trainBudgetMilliNodeHours: FormControl<string | null | undefined>,

		/** Validation options for the data validation component. The available options are: * "fail-pipeline" - default, will validate against the validation and fail the pipeline if it fails. * "ignore-validation" - ignore the results of the validation and continue */
		validationOptions: FormControl<string | null | undefined>,

		/** Column name that should be used as the weight column. Higher values in this column give more importance to the row during model training. The column must have numeric values between 0 and 10000 inclusively; 0 means the row is ignored for training. If weight column field is not set, then all rows are assumed to have equal weight of 1. This column must be available at forecast. */
		weightColumn: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionSeq2SeqPlusForecastingInputsFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionSeq2SeqPlusForecastingInputsFormProperties>({
			contextWindow: new FormControl<string | null | undefined>(undefined),
			forecastHorizon: new FormControl<string | null | undefined>(undefined),
			optimizationObjective: new FormControl<string | null | undefined>(undefined),
			targetColumn: new FormControl<string | null | undefined>(undefined),
			timeColumn: new FormControl<string | null | undefined>(undefined),
			timeSeriesIdentifierColumn: new FormControl<string | null | undefined>(undefined),
			trainBudgetMilliNodeHours: new FormControl<string | null | undefined>(undefined),
			validationOptions: new FormControl<string | null | undefined>(undefined),
			weightColumn: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** A duration of time expressed in time granularity units. */
	export interface GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionSeq2SeqPlusForecastingInputsGranularity {

		/** The number of granularity_units between data points in the training data. If `granularity_unit` is `minute`, can be 1, 5, 10, 15, or 30. For all other values of `granularity_unit`, must be 1. */
		quantity?: string | null;

		/** The time granularity unit of this time period. The supported units are: * "minute" * "hour" * "day" * "week" * "month" * "year" */
		unit?: string | null;
	}

	/** A duration of time expressed in time granularity units. */
	export interface GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionSeq2SeqPlusForecastingInputsGranularityFormProperties {

		/** The number of granularity_units between data points in the training data. If `granularity_unit` is `minute`, can be 1, 5, 10, 15, or 30. For all other values of `granularity_unit`, must be 1. */
		quantity: FormControl<string | null | undefined>,

		/** The time granularity unit of this time period. The supported units are: * "minute" * "hour" * "day" * "week" * "month" * "year" */
		unit: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionSeq2SeqPlusForecastingInputsGranularityFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionSeq2SeqPlusForecastingInputsGranularityFormProperties>({
			quantity: new FormControl<string | null | undefined>(undefined),
			unit: new FormControl<string | null | undefined>(undefined),
		});

	}

	export interface GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionSeq2SeqPlusForecastingInputsTransformation {

		/** Training pipeline will infer the proper transformation based on the statistic of dataset. */
		auto?: GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionSeq2SeqPlusForecastingInputsTransformationAutoTransformation;

		/** Training pipeline will perform following transformation functions. * The categorical string as is--no change to case, punctuation, spelling, tense, and so on. * Convert the category name to a dictionary lookup index and generate an embedding for each index. * Categories that appear less than 5 times in the training dataset are treated as the "unknown" category. The "unknown" category gets its own special lookup index and resulting embedding. */
		categorical?: GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionSeq2SeqPlusForecastingInputsTransformationCategoricalTransformation;

		/** Training pipeline will perform following transformation functions. * The value converted to float32. * The z_score of the value. * log(value+1) when the value is greater than or equal to 0. Otherwise, this transformation is not applied and the value is considered a missing value. * z_score of log(value+1) when the value is greater than or equal to 0. Otherwise, this transformation is not applied and the value is considered a missing value. */
		numeric?: GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionSeq2SeqPlusForecastingInputsTransformationNumericTransformation;

		/** Training pipeline will perform following transformation functions. * The text as is--no change to case, punctuation, spelling, tense, and so on. * Convert the category name to a dictionary lookup index and generate an embedding for each index. */
		text?: GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionSeq2SeqPlusForecastingInputsTransformationTextTransformation;

		/** Training pipeline will perform following transformation functions. * Apply the transformation functions for Numerical columns. * Determine the year, month, day,and weekday. Treat each value from the timestamp as a Categorical column. * Invalid numerical values (for example, values that fall outside of a typical timestamp range, or are extreme values) receive no special treatment and are not removed. */
		timestamp?: GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionSeq2SeqPlusForecastingInputsTransformationTimestampTransformation;
	}
	export interface GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionSeq2SeqPlusForecastingInputsTransformationFormProperties {
	}
	export function CreateGoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionSeq2SeqPlusForecastingInputsTransformationFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionSeq2SeqPlusForecastingInputsTransformationFormProperties>({
		});

	}


	/** Training pipeline will infer the proper transformation based on the statistic of dataset. */
	export interface GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionSeq2SeqPlusForecastingInputsTransformationAutoTransformation {
		columnName?: string | null;
	}

	/** Training pipeline will infer the proper transformation based on the statistic of dataset. */
	export interface GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionSeq2SeqPlusForecastingInputsTransformationAutoTransformationFormProperties {
		columnName: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionSeq2SeqPlusForecastingInputsTransformationAutoTransformationFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionSeq2SeqPlusForecastingInputsTransformationAutoTransformationFormProperties>({
			columnName: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Training pipeline will perform following transformation functions. * The categorical string as is--no change to case, punctuation, spelling, tense, and so on. * Convert the category name to a dictionary lookup index and generate an embedding for each index. * Categories that appear less than 5 times in the training dataset are treated as the "unknown" category. The "unknown" category gets its own special lookup index and resulting embedding. */
	export interface GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionSeq2SeqPlusForecastingInputsTransformationCategoricalTransformation {
		columnName?: string | null;
	}

	/** Training pipeline will perform following transformation functions. * The categorical string as is--no change to case, punctuation, spelling, tense, and so on. * Convert the category name to a dictionary lookup index and generate an embedding for each index. * Categories that appear less than 5 times in the training dataset are treated as the "unknown" category. The "unknown" category gets its own special lookup index and resulting embedding. */
	export interface GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionSeq2SeqPlusForecastingInputsTransformationCategoricalTransformationFormProperties {
		columnName: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionSeq2SeqPlusForecastingInputsTransformationCategoricalTransformationFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionSeq2SeqPlusForecastingInputsTransformationCategoricalTransformationFormProperties>({
			columnName: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Training pipeline will perform following transformation functions. * The value converted to float32. * The z_score of the value. * log(value+1) when the value is greater than or equal to 0. Otherwise, this transformation is not applied and the value is considered a missing value. * z_score of log(value+1) when the value is greater than or equal to 0. Otherwise, this transformation is not applied and the value is considered a missing value. */
	export interface GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionSeq2SeqPlusForecastingInputsTransformationNumericTransformation {
		columnName?: string | null;
	}

	/** Training pipeline will perform following transformation functions. * The value converted to float32. * The z_score of the value. * log(value+1) when the value is greater than or equal to 0. Otherwise, this transformation is not applied and the value is considered a missing value. * z_score of log(value+1) when the value is greater than or equal to 0. Otherwise, this transformation is not applied and the value is considered a missing value. */
	export interface GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionSeq2SeqPlusForecastingInputsTransformationNumericTransformationFormProperties {
		columnName: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionSeq2SeqPlusForecastingInputsTransformationNumericTransformationFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionSeq2SeqPlusForecastingInputsTransformationNumericTransformationFormProperties>({
			columnName: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Training pipeline will perform following transformation functions. * The text as is--no change to case, punctuation, spelling, tense, and so on. * Convert the category name to a dictionary lookup index and generate an embedding for each index. */
	export interface GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionSeq2SeqPlusForecastingInputsTransformationTextTransformation {
		columnName?: string | null;
	}

	/** Training pipeline will perform following transformation functions. * The text as is--no change to case, punctuation, spelling, tense, and so on. * Convert the category name to a dictionary lookup index and generate an embedding for each index. */
	export interface GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionSeq2SeqPlusForecastingInputsTransformationTextTransformationFormProperties {
		columnName: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionSeq2SeqPlusForecastingInputsTransformationTextTransformationFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionSeq2SeqPlusForecastingInputsTransformationTextTransformationFormProperties>({
			columnName: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Training pipeline will perform following transformation functions. * Apply the transformation functions for Numerical columns. * Determine the year, month, day,and weekday. Treat each value from the timestamp as a Categorical column. * Invalid numerical values (for example, values that fall outside of a typical timestamp range, or are extreme values) receive no special treatment and are not removed. */
	export interface GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionSeq2SeqPlusForecastingInputsTransformationTimestampTransformation {
		columnName?: string | null;

		/** The format in which that time field is expressed. The time_format must either be one of: * `unix-seconds` * `unix-milliseconds` * `unix-microseconds` * `unix-nanoseconds` (for respectively number of seconds, milliseconds, microseconds and nanoseconds since start of the Unix epoch); or be written in `strftime` syntax. If time_format is not set, then the default format is RFC 3339 `date-time` format, where `time-offset` = `"Z"` (e.g. 1985-04-12T23:20:50.52Z) */
		timeFormat?: string | null;
	}

	/** Training pipeline will perform following transformation functions. * Apply the transformation functions for Numerical columns. * Determine the year, month, day,and weekday. Treat each value from the timestamp as a Categorical column. * Invalid numerical values (for example, values that fall outside of a typical timestamp range, or are extreme values) receive no special treatment and are not removed. */
	export interface GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionSeq2SeqPlusForecastingInputsTransformationTimestampTransformationFormProperties {
		columnName: FormControl<string | null | undefined>,

		/** The format in which that time field is expressed. The time_format must either be one of: * `unix-seconds` * `unix-milliseconds` * `unix-microseconds` * `unix-nanoseconds` (for respectively number of seconds, milliseconds, microseconds and nanoseconds since start of the Unix epoch); or be written in `strftime` syntax. If time_format is not set, then the default format is RFC 3339 `date-time` format, where `time-offset` = `"Z"` (e.g. 1985-04-12T23:20:50.52Z) */
		timeFormat: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionSeq2SeqPlusForecastingInputsTransformationTimestampTransformationFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionSeq2SeqPlusForecastingInputsTransformationTimestampTransformationFormProperties>({
			columnName: new FormControl<string | null | undefined>(undefined),
			timeFormat: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Model metadata specific to Seq2Seq Plus Forecasting. */
	export interface GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionSeq2SeqPlusForecastingMetadata {

		/** BigQuery destination uri for exported evaluated examples. */
		evaluatedDataItemsBigqueryUri?: string | null;

		/** Output only. The actual training cost of the model, expressed in milli node hours, i.e. 1,000 value in this field means 1 node hour. Guaranteed to not exceed the train budget. */
		trainCostMilliNodeHours?: string | null;
	}

	/** Model metadata specific to Seq2Seq Plus Forecasting. */
	export interface GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionSeq2SeqPlusForecastingMetadataFormProperties {

		/** BigQuery destination uri for exported evaluated examples. */
		evaluatedDataItemsBigqueryUri: FormControl<string | null | undefined>,

		/** Output only. The actual training cost of the model, expressed in milli node hours, i.e. 1,000 value in this field means 1 node hour. Guaranteed to not exceed the train budget. */
		trainCostMilliNodeHours: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionSeq2SeqPlusForecastingMetadataFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionSeq2SeqPlusForecastingMetadataFormProperties>({
			evaluatedDataItemsBigqueryUri: new FormControl<string | null | undefined>(undefined),
			trainCostMilliNodeHours: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** A TrainingJob that trains and uploads an AutoML Forecasting Model. */
	export interface GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionTftForecasting {
		inputs?: GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionTftForecastingInputs;

		/** Model metadata specific to TFT Forecasting. */
		metadata?: GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionTftForecastingMetadata;
	}

	/** A TrainingJob that trains and uploads an AutoML Forecasting Model. */
	export interface GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionTftForecastingFormProperties {
	}
	export function CreateGoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionTftForecastingFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionTftForecastingFormProperties>({
		});

	}

	export interface GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionTftForecastingInputs {

		/** Additional experiment flags for the time series forcasting training. */
		additionalExperiments?: Array<string>;

		/** Names of columns that are available and provided when a forecast is requested. These columns contain information for the given entity (identified by the time_series_identifier_column column) that is known at forecast. For example, predicted weather for a specific day. */
		availableAtForecastColumns?: Array<string>;

		/** The amount of time into the past training and prediction data is used for model training and prediction respectively. Expressed in number of units defined by the `data_granularity` field. */
		contextWindow?: string | null;

		/** A duration of time expressed in time granularity units. */
		dataGranularity?: GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionTftForecastingInputsGranularity;

		/** Configuration for exporting test set predictions to a BigQuery table. */
		exportEvaluatedDataItemsConfig?: GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionExportEvaluatedDataItemsConfig;

		/** The amount of time into the future for which forecasted values for the target are returned. Expressed in number of units defined by the `data_granularity` field. */
		forecastHorizon?: string | null;

		/** Configuration that defines the hierarchical relationship of time series and parameters for hierarchical forecasting strategies. */
		hierarchyConfig?: GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionHierarchyConfig;

		/** The geographical region based on which the holiday effect is applied in modeling by adding holiday categorical array feature that include all holidays matching the date. This option only allowed when data_granularity is day. By default, holiday effect modeling is disabled. To turn it on, specify the holiday region using this option. */
		holidayRegions?: Array<string>;

		/** Objective function the model is optimizing towards. The training process creates a model that optimizes the value of the objective function over the validation set. The supported optimization objectives: * "minimize-rmse" (default) - Minimize root-mean-squared error (RMSE). * "minimize-mae" - Minimize mean-absolute error (MAE). * "minimize-rmsle" - Minimize root-mean-squared log error (RMSLE). * "minimize-rmspe" - Minimize root-mean-squared percentage error (RMSPE). * "minimize-wape-mae" - Minimize the combination of weighted absolute percentage error (WAPE) and mean-absolute-error (MAE). * "minimize-quantile-loss" - Minimize the quantile loss at the quantiles defined in `quantiles`. * "minimize-mape" - Minimize the mean absolute percentage error. */
		optimizationObjective?: string | null;

		/** Quantiles to use for minimize-quantile-loss `optimization_objective`. Up to 5 quantiles are allowed of values between 0 and 1, exclusive. Required if the value of optimization_objective is minimize-quantile-loss. Represents the percent quantiles to use for that objective. Quantiles must be unique. */
		quantiles?: Array<number>;

		/** The name of the column that the Model is to predict values for. This column must be unavailable at forecast. */
		targetColumn?: string | null;

		/** The name of the column that identifies time order in the time series. This column must be available at forecast. */
		timeColumn?: string | null;

		/** Column names that should be used as attribute columns. The value of these columns does not vary as a function of time. For example, store ID or item color. */
		timeSeriesAttributeColumns?: Array<string>;

		/** The name of the column that identifies the time series. */
		timeSeriesIdentifierColumn?: string | null;

		/** Required. The train budget of creating this model, expressed in milli node hours i.e. 1,000 value in this field means 1 node hour. The training cost of the model will not exceed this budget. The final cost will be attempted to be close to the budget, though may end up being (even) noticeably smaller - at the backend's discretion. This especially may happen when further model training ceases to provide any improvements. If the budget is set to a value known to be insufficient to train a model for the given dataset, the training won't be attempted and will error. The train budget must be between 1,000 and 72,000 milli node hours, inclusive. */
		trainBudgetMilliNodeHours?: string | null;

		/** Each transformation will apply transform function to given input column. And the result will be used for training. When creating transformation for BigQuery Struct column, the column should be flattened using "." as the delimiter. */
		transformations?: Array<GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionTftForecastingInputsTransformation>;

		/** Names of columns that are unavailable when a forecast is requested. This column contains information for the given entity (identified by the time_series_identifier_column) that is unknown before the forecast For example, actual weather on a given day. */
		unavailableAtForecastColumns?: Array<string>;

		/** Validation options for the data validation component. The available options are: * "fail-pipeline" - default, will validate against the validation and fail the pipeline if it fails. * "ignore-validation" - ignore the results of the validation and continue */
		validationOptions?: string | null;

		/** Column name that should be used as the weight column. Higher values in this column give more importance to the row during model training. The column must have numeric values between 0 and 10000 inclusively; 0 means the row is ignored for training. If weight column field is not set, then all rows are assumed to have equal weight of 1. This column must be available at forecast. */
		weightColumn?: string | null;

		/** Config that contains the strategy used to generate sliding windows in time series training. A window is a series of rows that comprise the context up to the time of prediction, and the horizon following. The corresponding row for each window marks the start of the forecast horizon. Each window is used as an input example for training/evaluation. */
		windowConfig?: GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionWindowConfig;
	}
	export interface GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionTftForecastingInputsFormProperties {

		/** The amount of time into the past training and prediction data is used for model training and prediction respectively. Expressed in number of units defined by the `data_granularity` field. */
		contextWindow: FormControl<string | null | undefined>,

		/** The amount of time into the future for which forecasted values for the target are returned. Expressed in number of units defined by the `data_granularity` field. */
		forecastHorizon: FormControl<string | null | undefined>,

		/** Objective function the model is optimizing towards. The training process creates a model that optimizes the value of the objective function over the validation set. The supported optimization objectives: * "minimize-rmse" (default) - Minimize root-mean-squared error (RMSE). * "minimize-mae" - Minimize mean-absolute error (MAE). * "minimize-rmsle" - Minimize root-mean-squared log error (RMSLE). * "minimize-rmspe" - Minimize root-mean-squared percentage error (RMSPE). * "minimize-wape-mae" - Minimize the combination of weighted absolute percentage error (WAPE) and mean-absolute-error (MAE). * "minimize-quantile-loss" - Minimize the quantile loss at the quantiles defined in `quantiles`. * "minimize-mape" - Minimize the mean absolute percentage error. */
		optimizationObjective: FormControl<string | null | undefined>,

		/** The name of the column that the Model is to predict values for. This column must be unavailable at forecast. */
		targetColumn: FormControl<string | null | undefined>,

		/** The name of the column that identifies time order in the time series. This column must be available at forecast. */
		timeColumn: FormControl<string | null | undefined>,

		/** The name of the column that identifies the time series. */
		timeSeriesIdentifierColumn: FormControl<string | null | undefined>,

		/** Required. The train budget of creating this model, expressed in milli node hours i.e. 1,000 value in this field means 1 node hour. The training cost of the model will not exceed this budget. The final cost will be attempted to be close to the budget, though may end up being (even) noticeably smaller - at the backend's discretion. This especially may happen when further model training ceases to provide any improvements. If the budget is set to a value known to be insufficient to train a model for the given dataset, the training won't be attempted and will error. The train budget must be between 1,000 and 72,000 milli node hours, inclusive. */
		trainBudgetMilliNodeHours: FormControl<string | null | undefined>,

		/** Validation options for the data validation component. The available options are: * "fail-pipeline" - default, will validate against the validation and fail the pipeline if it fails. * "ignore-validation" - ignore the results of the validation and continue */
		validationOptions: FormControl<string | null | undefined>,

		/** Column name that should be used as the weight column. Higher values in this column give more importance to the row during model training. The column must have numeric values between 0 and 10000 inclusively; 0 means the row is ignored for training. If weight column field is not set, then all rows are assumed to have equal weight of 1. This column must be available at forecast. */
		weightColumn: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionTftForecastingInputsFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionTftForecastingInputsFormProperties>({
			contextWindow: new FormControl<string | null | undefined>(undefined),
			forecastHorizon: new FormControl<string | null | undefined>(undefined),
			optimizationObjective: new FormControl<string | null | undefined>(undefined),
			targetColumn: new FormControl<string | null | undefined>(undefined),
			timeColumn: new FormControl<string | null | undefined>(undefined),
			timeSeriesIdentifierColumn: new FormControl<string | null | undefined>(undefined),
			trainBudgetMilliNodeHours: new FormControl<string | null | undefined>(undefined),
			validationOptions: new FormControl<string | null | undefined>(undefined),
			weightColumn: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** A duration of time expressed in time granularity units. */
	export interface GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionTftForecastingInputsGranularity {

		/** The number of granularity_units between data points in the training data. If `granularity_unit` is `minute`, can be 1, 5, 10, 15, or 30. For all other values of `granularity_unit`, must be 1. */
		quantity?: string | null;

		/** The time granularity unit of this time period. The supported units are: * "minute" * "hour" * "day" * "week" * "month" * "year" */
		unit?: string | null;
	}

	/** A duration of time expressed in time granularity units. */
	export interface GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionTftForecastingInputsGranularityFormProperties {

		/** The number of granularity_units between data points in the training data. If `granularity_unit` is `minute`, can be 1, 5, 10, 15, or 30. For all other values of `granularity_unit`, must be 1. */
		quantity: FormControl<string | null | undefined>,

		/** The time granularity unit of this time period. The supported units are: * "minute" * "hour" * "day" * "week" * "month" * "year" */
		unit: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionTftForecastingInputsGranularityFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionTftForecastingInputsGranularityFormProperties>({
			quantity: new FormControl<string | null | undefined>(undefined),
			unit: new FormControl<string | null | undefined>(undefined),
		});

	}

	export interface GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionTftForecastingInputsTransformation {

		/** Training pipeline will infer the proper transformation based on the statistic of dataset. */
		auto?: GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionTftForecastingInputsTransformationAutoTransformation;

		/** Training pipeline will perform following transformation functions. * The categorical string as is--no change to case, punctuation, spelling, tense, and so on. * Convert the category name to a dictionary lookup index and generate an embedding for each index. * Categories that appear less than 5 times in the training dataset are treated as the "unknown" category. The "unknown" category gets its own special lookup index and resulting embedding. */
		categorical?: GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionTftForecastingInputsTransformationCategoricalTransformation;

		/** Training pipeline will perform following transformation functions. * The value converted to float32. * The z_score of the value. * log(value+1) when the value is greater than or equal to 0. Otherwise, this transformation is not applied and the value is considered a missing value. * z_score of log(value+1) when the value is greater than or equal to 0. Otherwise, this transformation is not applied and the value is considered a missing value. */
		numeric?: GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionTftForecastingInputsTransformationNumericTransformation;

		/** Training pipeline will perform following transformation functions. * The text as is--no change to case, punctuation, spelling, tense, and so on. * Convert the category name to a dictionary lookup index and generate an embedding for each index. */
		text?: GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionTftForecastingInputsTransformationTextTransformation;

		/** Training pipeline will perform following transformation functions. * Apply the transformation functions for Numerical columns. * Determine the year, month, day,and weekday. Treat each value from the timestamp as a Categorical column. * Invalid numerical values (for example, values that fall outside of a typical timestamp range, or are extreme values) receive no special treatment and are not removed. */
		timestamp?: GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionTftForecastingInputsTransformationTimestampTransformation;
	}
	export interface GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionTftForecastingInputsTransformationFormProperties {
	}
	export function CreateGoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionTftForecastingInputsTransformationFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionTftForecastingInputsTransformationFormProperties>({
		});

	}


	/** Training pipeline will infer the proper transformation based on the statistic of dataset. */
	export interface GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionTftForecastingInputsTransformationAutoTransformation {
		columnName?: string | null;
	}

	/** Training pipeline will infer the proper transformation based on the statistic of dataset. */
	export interface GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionTftForecastingInputsTransformationAutoTransformationFormProperties {
		columnName: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionTftForecastingInputsTransformationAutoTransformationFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionTftForecastingInputsTransformationAutoTransformationFormProperties>({
			columnName: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Training pipeline will perform following transformation functions. * The categorical string as is--no change to case, punctuation, spelling, tense, and so on. * Convert the category name to a dictionary lookup index and generate an embedding for each index. * Categories that appear less than 5 times in the training dataset are treated as the "unknown" category. The "unknown" category gets its own special lookup index and resulting embedding. */
	export interface GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionTftForecastingInputsTransformationCategoricalTransformation {
		columnName?: string | null;
	}

	/** Training pipeline will perform following transformation functions. * The categorical string as is--no change to case, punctuation, spelling, tense, and so on. * Convert the category name to a dictionary lookup index and generate an embedding for each index. * Categories that appear less than 5 times in the training dataset are treated as the "unknown" category. The "unknown" category gets its own special lookup index and resulting embedding. */
	export interface GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionTftForecastingInputsTransformationCategoricalTransformationFormProperties {
		columnName: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionTftForecastingInputsTransformationCategoricalTransformationFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionTftForecastingInputsTransformationCategoricalTransformationFormProperties>({
			columnName: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Training pipeline will perform following transformation functions. * The value converted to float32. * The z_score of the value. * log(value+1) when the value is greater than or equal to 0. Otherwise, this transformation is not applied and the value is considered a missing value. * z_score of log(value+1) when the value is greater than or equal to 0. Otherwise, this transformation is not applied and the value is considered a missing value. */
	export interface GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionTftForecastingInputsTransformationNumericTransformation {
		columnName?: string | null;
	}

	/** Training pipeline will perform following transformation functions. * The value converted to float32. * The z_score of the value. * log(value+1) when the value is greater than or equal to 0. Otherwise, this transformation is not applied and the value is considered a missing value. * z_score of log(value+1) when the value is greater than or equal to 0. Otherwise, this transformation is not applied and the value is considered a missing value. */
	export interface GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionTftForecastingInputsTransformationNumericTransformationFormProperties {
		columnName: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionTftForecastingInputsTransformationNumericTransformationFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionTftForecastingInputsTransformationNumericTransformationFormProperties>({
			columnName: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Training pipeline will perform following transformation functions. * The text as is--no change to case, punctuation, spelling, tense, and so on. * Convert the category name to a dictionary lookup index and generate an embedding for each index. */
	export interface GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionTftForecastingInputsTransformationTextTransformation {
		columnName?: string | null;
	}

	/** Training pipeline will perform following transformation functions. * The text as is--no change to case, punctuation, spelling, tense, and so on. * Convert the category name to a dictionary lookup index and generate an embedding for each index. */
	export interface GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionTftForecastingInputsTransformationTextTransformationFormProperties {
		columnName: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionTftForecastingInputsTransformationTextTransformationFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionTftForecastingInputsTransformationTextTransformationFormProperties>({
			columnName: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Training pipeline will perform following transformation functions. * Apply the transformation functions for Numerical columns. * Determine the year, month, day,and weekday. Treat each value from the timestamp as a Categorical column. * Invalid numerical values (for example, values that fall outside of a typical timestamp range, or are extreme values) receive no special treatment and are not removed. */
	export interface GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionTftForecastingInputsTransformationTimestampTransformation {
		columnName?: string | null;

		/** The format in which that time field is expressed. The time_format must either be one of: * `unix-seconds` * `unix-milliseconds` * `unix-microseconds` * `unix-nanoseconds` (for respectively number of seconds, milliseconds, microseconds and nanoseconds since start of the Unix epoch); or be written in `strftime` syntax. If time_format is not set, then the default format is RFC 3339 `date-time` format, where `time-offset` = `"Z"` (e.g. 1985-04-12T23:20:50.52Z) */
		timeFormat?: string | null;
	}

	/** Training pipeline will perform following transformation functions. * Apply the transformation functions for Numerical columns. * Determine the year, month, day,and weekday. Treat each value from the timestamp as a Categorical column. * Invalid numerical values (for example, values that fall outside of a typical timestamp range, or are extreme values) receive no special treatment and are not removed. */
	export interface GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionTftForecastingInputsTransformationTimestampTransformationFormProperties {
		columnName: FormControl<string | null | undefined>,

		/** The format in which that time field is expressed. The time_format must either be one of: * `unix-seconds` * `unix-milliseconds` * `unix-microseconds` * `unix-nanoseconds` (for respectively number of seconds, milliseconds, microseconds and nanoseconds since start of the Unix epoch); or be written in `strftime` syntax. If time_format is not set, then the default format is RFC 3339 `date-time` format, where `time-offset` = `"Z"` (e.g. 1985-04-12T23:20:50.52Z) */
		timeFormat: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionTftForecastingInputsTransformationTimestampTransformationFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionTftForecastingInputsTransformationTimestampTransformationFormProperties>({
			columnName: new FormControl<string | null | undefined>(undefined),
			timeFormat: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Model metadata specific to TFT Forecasting. */
	export interface GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionTftForecastingMetadata {

		/** BigQuery destination uri for exported evaluated examples. */
		evaluatedDataItemsBigqueryUri?: string | null;

		/** Output only. The actual training cost of the model, expressed in milli node hours, i.e. 1,000 value in this field means 1 node hour. Guaranteed to not exceed the train budget. */
		trainCostMilliNodeHours?: string | null;
	}

	/** Model metadata specific to TFT Forecasting. */
	export interface GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionTftForecastingMetadataFormProperties {

		/** BigQuery destination uri for exported evaluated examples. */
		evaluatedDataItemsBigqueryUri: FormControl<string | null | undefined>,

		/** Output only. The actual training cost of the model, expressed in milli node hours, i.e. 1,000 value in this field means 1 node hour. Guaranteed to not exceed the train budget. */
		trainCostMilliNodeHours: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionTftForecastingMetadataFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionTftForecastingMetadataFormProperties>({
			evaluatedDataItemsBigqueryUri: new FormControl<string | null | undefined>(undefined),
			trainCostMilliNodeHours: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Annotation details specific to video action recognition. */
	export interface GoogleCloudAiplatformV1beta1SchemaVideoActionRecognitionAnnotation {

		/** The resource Id of the AnnotationSpec that this Annotation pertains to. */
		annotationSpecId?: string | null;

		/** The display name of the AnnotationSpec that this Annotation pertains to. */
		displayName?: string | null;

		/** A time period inside of a DataItem that has a time dimension (e.g. video). */
		timeSegment?: GoogleCloudAiplatformV1beta1SchemaTimeSegment;
	}

	/** Annotation details specific to video action recognition. */
	export interface GoogleCloudAiplatformV1beta1SchemaVideoActionRecognitionAnnotationFormProperties {

		/** The resource Id of the AnnotationSpec that this Annotation pertains to. */
		annotationSpecId: FormControl<string | null | undefined>,

		/** The display name of the AnnotationSpec that this Annotation pertains to. */
		displayName: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1SchemaVideoActionRecognitionAnnotationFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1SchemaVideoActionRecognitionAnnotationFormProperties>({
			annotationSpecId: new FormControl<string | null | undefined>(undefined),
			displayName: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Annotation details specific to video classification. */
	export interface GoogleCloudAiplatformV1beta1SchemaVideoClassificationAnnotation {

		/** The resource Id of the AnnotationSpec that this Annotation pertains to. */
		annotationSpecId?: string | null;

		/** The display name of the AnnotationSpec that this Annotation pertains to. */
		displayName?: string | null;

		/** A time period inside of a DataItem that has a time dimension (e.g. video). */
		timeSegment?: GoogleCloudAiplatformV1beta1SchemaTimeSegment;
	}

	/** Annotation details specific to video classification. */
	export interface GoogleCloudAiplatformV1beta1SchemaVideoClassificationAnnotationFormProperties {

		/** The resource Id of the AnnotationSpec that this Annotation pertains to. */
		annotationSpecId: FormControl<string | null | undefined>,

		/** The display name of the AnnotationSpec that this Annotation pertains to. */
		displayName: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1SchemaVideoClassificationAnnotationFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1SchemaVideoClassificationAnnotationFormProperties>({
			annotationSpecId: new FormControl<string | null | undefined>(undefined),
			displayName: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Payload of Video DataItem. */
	export interface GoogleCloudAiplatformV1beta1SchemaVideoDataItem {

		/** Required. Google Cloud Storage URI points to the original video in user's bucket. The video is up to 50 GB in size and up to 3 hour in duration. */
		gcsUri?: string | null;

		/** Output only. The mime type of the content of the video. Only the videos in below listed mime types are supported. Supported mime_type: - video/mp4 - video/avi - video/quicktime */
		mimeType?: string | null;
	}

	/** Payload of Video DataItem. */
	export interface GoogleCloudAiplatformV1beta1SchemaVideoDataItemFormProperties {

		/** Required. Google Cloud Storage URI points to the original video in user's bucket. The video is up to 50 GB in size and up to 3 hour in duration. */
		gcsUri: FormControl<string | null | undefined>,

		/** Output only. The mime type of the content of the video. Only the videos in below listed mime types are supported. Supported mime_type: - video/mp4 - video/avi - video/quicktime */
		mimeType: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1SchemaVideoDataItemFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1SchemaVideoDataItemFormProperties>({
			gcsUri: new FormControl<string | null | undefined>(undefined),
			mimeType: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** The metadata of Datasets that contain Video DataItems. */
	export interface GoogleCloudAiplatformV1beta1SchemaVideoDatasetMetadata {

		/** Points to a YAML file stored on Google Cloud Storage describing payload of the Video DataItems that belong to this Dataset. */
		dataItemSchemaUri?: string | null;

		/** Google Cloud Storage Bucket name that contains the blob data of this Dataset. */
		gcsBucket?: string | null;
	}

	/** The metadata of Datasets that contain Video DataItems. */
	export interface GoogleCloudAiplatformV1beta1SchemaVideoDatasetMetadataFormProperties {

		/** Points to a YAML file stored on Google Cloud Storage describing payload of the Video DataItems that belong to this Dataset. */
		dataItemSchemaUri: FormControl<string | null | undefined>,

		/** Google Cloud Storage Bucket name that contains the blob data of this Dataset. */
		gcsBucket: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1SchemaVideoDatasetMetadataFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1SchemaVideoDatasetMetadataFormProperties>({
			dataItemSchemaUri: new FormControl<string | null | undefined>(undefined),
			gcsBucket: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Annotation details specific to video object tracking. */
	export interface GoogleCloudAiplatformV1beta1SchemaVideoObjectTrackingAnnotation {

		/** The resource Id of the AnnotationSpec that this Annotation pertains to. */
		annotationSpecId?: string | null;

		/** The display name of the AnnotationSpec that this Annotation pertains to. */
		displayName?: string | null;

		/** The instance of the object, expressed as a positive integer. Used to track the same object across different frames. */
		instanceId?: string | null;

		/** A time (frame) of a video to which this annotation pertains. Represented as the duration since the video's start. */
		timeOffset?: string | null;

		/** The rightmost coordinate of the bounding box. */
		xMax?: number | null;

		/** The leftmost coordinate of the bounding box. */
		xMin?: number | null;

		/** The bottommost coordinate of the bounding box. */
		yMax?: number | null;

		/** The topmost coordinate of the bounding box. */
		yMin?: number | null;
	}

	/** Annotation details specific to video object tracking. */
	export interface GoogleCloudAiplatformV1beta1SchemaVideoObjectTrackingAnnotationFormProperties {

		/** The resource Id of the AnnotationSpec that this Annotation pertains to. */
		annotationSpecId: FormControl<string | null | undefined>,

		/** The display name of the AnnotationSpec that this Annotation pertains to. */
		displayName: FormControl<string | null | undefined>,

		/** The instance of the object, expressed as a positive integer. Used to track the same object across different frames. */
		instanceId: FormControl<string | null | undefined>,

		/** A time (frame) of a video to which this annotation pertains. Represented as the duration since the video's start. */
		timeOffset: FormControl<string | null | undefined>,

		/** The rightmost coordinate of the bounding box. */
		xMax: FormControl<number | null | undefined>,

		/** The leftmost coordinate of the bounding box. */
		xMin: FormControl<number | null | undefined>,

		/** The bottommost coordinate of the bounding box. */
		yMax: FormControl<number | null | undefined>,

		/** The topmost coordinate of the bounding box. */
		yMin: FormControl<number | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1SchemaVideoObjectTrackingAnnotationFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1SchemaVideoObjectTrackingAnnotationFormProperties>({
			annotationSpecId: new FormControl<string | null | undefined>(undefined),
			displayName: new FormControl<string | null | undefined>(undefined),
			instanceId: new FormControl<string | null | undefined>(undefined),
			timeOffset: new FormControl<string | null | undefined>(undefined),
			xMax: new FormControl<number | null | undefined>(undefined),
			xMin: new FormControl<number | null | undefined>(undefined),
			yMax: new FormControl<number | null | undefined>(undefined),
			yMin: new FormControl<number | null | undefined>(undefined),
		});

	}

	export interface GoogleCloudAiplatformV1beta1SchemaVisualInspectionClassificationLabelSavedQueryMetadata {

		/** Whether or not the classification label is multi_label. */
		multiLabel?: boolean | null;
	}
	export interface GoogleCloudAiplatformV1beta1SchemaVisualInspectionClassificationLabelSavedQueryMetadataFormProperties {

		/** Whether or not the classification label is multi_label. */
		multiLabel: FormControl<boolean | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1SchemaVisualInspectionClassificationLabelSavedQueryMetadataFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1SchemaVisualInspectionClassificationLabelSavedQueryMetadataFormProperties>({
			multiLabel: new FormControl<boolean | null | undefined>(undefined),
		});

	}

	export interface GoogleCloudAiplatformV1beta1SchemaVisualInspectionMaskSavedQueryMetadata {
	}
	export interface GoogleCloudAiplatformV1beta1SchemaVisualInspectionMaskSavedQueryMetadataFormProperties {
	}
	export function CreateGoogleCloudAiplatformV1beta1SchemaVisualInspectionMaskSavedQueryMetadataFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1SchemaVisualInspectionMaskSavedQueryMetadataFormProperties>({
		});

	}


	/** Response message for DatasetService.SearchDataItems. */
	export interface GoogleCloudAiplatformV1beta1SearchDataItemsResponse {

		/** The DataItemViews read. */
		dataItemViews?: Array<GoogleCloudAiplatformV1beta1DataItemView>;

		/** A token to retrieve next page of results. Pass to SearchDataItemsRequest.page_token to obtain that page. */
		nextPageToken?: string | null;
	}

	/** Response message for DatasetService.SearchDataItems. */
	export interface GoogleCloudAiplatformV1beta1SearchDataItemsResponseFormProperties {

		/** A token to retrieve next page of results. Pass to SearchDataItemsRequest.page_token to obtain that page. */
		nextPageToken: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1SearchDataItemsResponseFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1SearchDataItemsResponseFormProperties>({
			nextPageToken: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Response message for FeaturestoreService.SearchFeatures. */
	export interface GoogleCloudAiplatformV1beta1SearchFeaturesResponse {

		/** The Features matching the request. Fields returned: * `name` * `description` * `labels` * `create_time` * `update_time` */
		features?: Array<GoogleCloudAiplatformV1beta1Feature>;

		/** A token, which can be sent as SearchFeaturesRequest.page_token to retrieve the next page. If this field is omitted, there are no subsequent pages. */
		nextPageToken?: string | null;
	}

	/** Response message for FeaturestoreService.SearchFeatures. */
	export interface GoogleCloudAiplatformV1beta1SearchFeaturesResponseFormProperties {

		/** A token, which can be sent as SearchFeaturesRequest.page_token to retrieve the next page. If this field is omitted, there are no subsequent pages. */
		nextPageToken: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1SearchFeaturesResponseFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1SearchFeaturesResponseFormProperties>({
			nextPageToken: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Request message for MigrationService.SearchMigratableResources. */
	export interface GoogleCloudAiplatformV1beta1SearchMigratableResourcesRequest {

		/** A filter for your search. You can use the following types of filters: * Resource type filters. The following strings filter for a specific type of MigratableResource: * `ml_engine_model_version:*` * `automl_model:*` * `automl_dataset:*` * `data_labeling_dataset:*` * "Migrated or not" filters. The following strings filter for resources that either have or have not already been migrated: * `last_migrate_time:*` filters for migrated resources. * `NOT last_migrate_time:*` filters for not yet migrated resources. */
		filter?: string | null;

		/** The standard page size. The default and maximum value is 100. */
		pageSize?: number | null;

		/** The standard page token. */
		pageToken?: string | null;
	}

	/** Request message for MigrationService.SearchMigratableResources. */
	export interface GoogleCloudAiplatformV1beta1SearchMigratableResourcesRequestFormProperties {

		/** A filter for your search. You can use the following types of filters: * Resource type filters. The following strings filter for a specific type of MigratableResource: * `ml_engine_model_version:*` * `automl_model:*` * `automl_dataset:*` * `data_labeling_dataset:*` * "Migrated or not" filters. The following strings filter for resources that either have or have not already been migrated: * `last_migrate_time:*` filters for migrated resources. * `NOT last_migrate_time:*` filters for not yet migrated resources. */
		filter: FormControl<string | null | undefined>,

		/** The standard page size. The default and maximum value is 100. */
		pageSize: FormControl<number | null | undefined>,

		/** The standard page token. */
		pageToken: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1SearchMigratableResourcesRequestFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1SearchMigratableResourcesRequestFormProperties>({
			filter: new FormControl<string | null | undefined>(undefined),
			pageSize: new FormControl<number | null | undefined>(undefined),
			pageToken: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Response message for MigrationService.SearchMigratableResources. */
	export interface GoogleCloudAiplatformV1beta1SearchMigratableResourcesResponse {

		/** All migratable resources that can be migrated to the location specified in the request. */
		migratableResources?: Array<GoogleCloudAiplatformV1beta1MigratableResource>;

		/** The standard next-page token. The migratable_resources may not fill page_size in SearchMigratableResourcesRequest even when there are subsequent pages. */
		nextPageToken?: string | null;
	}

	/** Response message for MigrationService.SearchMigratableResources. */
	export interface GoogleCloudAiplatformV1beta1SearchMigratableResourcesResponseFormProperties {

		/** The standard next-page token. The migratable_resources may not fill page_size in SearchMigratableResourcesRequest even when there are subsequent pages. */
		nextPageToken: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1SearchMigratableResourcesResponseFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1SearchMigratableResourcesResponseFormProperties>({
			nextPageToken: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Request message for JobService.SearchModelDeploymentMonitoringStatsAnomalies. */
	export interface GoogleCloudAiplatformV1beta1SearchModelDeploymentMonitoringStatsAnomaliesRequest {

		/** Required. The DeployedModel ID of the [ModelDeploymentMonitoringObjectiveConfig.deployed_model_id]. */
		deployedModelId?: string | null;

		/** The latest timestamp of stats being generated. If not set, indicates feching stats till the latest possible one. */
		endTime?: string | null;

		/** The feature display name. If specified, only return the stats belonging to this feature. Format: ModelMonitoringStatsAnomalies.FeatureHistoricStatsAnomalies.feature_display_name, example: "user_destination". */
		featureDisplayName?: string | null;

		/** Required. Objectives of the stats to retrieve. */
		objectives?: Array<GoogleCloudAiplatformV1beta1SearchModelDeploymentMonitoringStatsAnomaliesRequestStatsAnomaliesObjective>;

		/** The standard list page size. */
		pageSize?: number | null;

		/** A page token received from a previous JobService.SearchModelDeploymentMonitoringStatsAnomalies call. */
		pageToken?: string | null;

		/** The earliest timestamp of stats being generated. If not set, indicates fetching stats till the earliest possible one. */
		startTime?: string | null;
	}

	/** Request message for JobService.SearchModelDeploymentMonitoringStatsAnomalies. */
	export interface GoogleCloudAiplatformV1beta1SearchModelDeploymentMonitoringStatsAnomaliesRequestFormProperties {

		/** Required. The DeployedModel ID of the [ModelDeploymentMonitoringObjectiveConfig.deployed_model_id]. */
		deployedModelId: FormControl<string | null | undefined>,

		/** The latest timestamp of stats being generated. If not set, indicates feching stats till the latest possible one. */
		endTime: FormControl<string | null | undefined>,

		/** The feature display name. If specified, only return the stats belonging to this feature. Format: ModelMonitoringStatsAnomalies.FeatureHistoricStatsAnomalies.feature_display_name, example: "user_destination". */
		featureDisplayName: FormControl<string | null | undefined>,

		/** The standard list page size. */
		pageSize: FormControl<number | null | undefined>,

		/** A page token received from a previous JobService.SearchModelDeploymentMonitoringStatsAnomalies call. */
		pageToken: FormControl<string | null | undefined>,

		/** The earliest timestamp of stats being generated. If not set, indicates fetching stats till the earliest possible one. */
		startTime: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1SearchModelDeploymentMonitoringStatsAnomaliesRequestFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1SearchModelDeploymentMonitoringStatsAnomaliesRequestFormProperties>({
			deployedModelId: new FormControl<string | null | undefined>(undefined),
			endTime: new FormControl<string | null | undefined>(undefined),
			featureDisplayName: new FormControl<string | null | undefined>(undefined),
			pageSize: new FormControl<number | null | undefined>(undefined),
			pageToken: new FormControl<string | null | undefined>(undefined),
			startTime: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Stats requested for specific objective. */
	export interface GoogleCloudAiplatformV1beta1SearchModelDeploymentMonitoringStatsAnomaliesRequestStatsAnomaliesObjective {

		/** If set, all attribution scores between SearchModelDeploymentMonitoringStatsAnomaliesRequest.start_time and SearchModelDeploymentMonitoringStatsAnomaliesRequest.end_time are fetched, and page token doesn't take effect in this case. Only used to retrieve attribution score for the top Features which has the highest attribution score in the latest monitoring run. */
		topFeatureCount?: number | null;
		type?: GoogleCloudAiplatformV1beta1ModelMonitoringStatsAnomaliesObjective | null;
	}

	/** Stats requested for specific objective. */
	export interface GoogleCloudAiplatformV1beta1SearchModelDeploymentMonitoringStatsAnomaliesRequestStatsAnomaliesObjectiveFormProperties {

		/** If set, all attribution scores between SearchModelDeploymentMonitoringStatsAnomaliesRequest.start_time and SearchModelDeploymentMonitoringStatsAnomaliesRequest.end_time are fetched, and page token doesn't take effect in this case. Only used to retrieve attribution score for the top Features which has the highest attribution score in the latest monitoring run. */
		topFeatureCount: FormControl<number | null | undefined>,
		type: FormControl<GoogleCloudAiplatformV1beta1ModelMonitoringStatsAnomaliesObjective | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1SearchModelDeploymentMonitoringStatsAnomaliesRequestStatsAnomaliesObjectiveFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1SearchModelDeploymentMonitoringStatsAnomaliesRequestStatsAnomaliesObjectiveFormProperties>({
			topFeatureCount: new FormControl<number | null | undefined>(undefined),
			type: new FormControl<GoogleCloudAiplatformV1beta1ModelMonitoringStatsAnomaliesObjective | null | undefined>(undefined),
		});

	}


	/** Response message for JobService.SearchModelDeploymentMonitoringStatsAnomalies. */
	export interface GoogleCloudAiplatformV1beta1SearchModelDeploymentMonitoringStatsAnomaliesResponse {

		/** Stats retrieved for requested objectives. There are at most 1000 ModelMonitoringStatsAnomalies.FeatureHistoricStatsAnomalies.prediction_stats in the response. */
		monitoringStats?: Array<GoogleCloudAiplatformV1beta1ModelMonitoringStatsAnomalies>;

		/** The page token that can be used by the next JobService.SearchModelDeploymentMonitoringStatsAnomalies call. */
		nextPageToken?: string | null;
	}

	/** Response message for JobService.SearchModelDeploymentMonitoringStatsAnomalies. */
	export interface GoogleCloudAiplatformV1beta1SearchModelDeploymentMonitoringStatsAnomaliesResponseFormProperties {

		/** The page token that can be used by the next JobService.SearchModelDeploymentMonitoringStatsAnomalies call. */
		nextPageToken: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1SearchModelDeploymentMonitoringStatsAnomaliesResponseFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1SearchModelDeploymentMonitoringStatsAnomaliesResponseFormProperties>({
			nextPageToken: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** The request message for FeatureOnlineStoreService.SearchNearestEntities. */
	export interface GoogleCloudAiplatformV1beta1SearchNearestEntitiesRequest {

		/** A query to find a number of similar entities. */
		query?: GoogleCloudAiplatformV1beta1NearestNeighborQuery;

		/** Optional. If set to true, the full entities (including all vector values and metadata) of the nearest neighbors are returned; otherwise only entity id of the nearest neighbors will be returned. Note that returning full entities will significantly increase the latency and cost of the query. */
		returnFullEntity?: boolean | null;
	}

	/** The request message for FeatureOnlineStoreService.SearchNearestEntities. */
	export interface GoogleCloudAiplatformV1beta1SearchNearestEntitiesRequestFormProperties {

		/** Optional. If set to true, the full entities (including all vector values and metadata) of the nearest neighbors are returned; otherwise only entity id of the nearest neighbors will be returned. Note that returning full entities will significantly increase the latency and cost of the query. */
		returnFullEntity: FormControl<boolean | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1SearchNearestEntitiesRequestFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1SearchNearestEntitiesRequestFormProperties>({
			returnFullEntity: new FormControl<boolean | null | undefined>(undefined),
		});

	}


	/** Response message for FeatureOnlineStoreService.SearchNearestEntities */
	export interface GoogleCloudAiplatformV1beta1SearchNearestEntitiesResponse {

		/** Nearest neighbors for one query. */
		nearestNeighbors?: GoogleCloudAiplatformV1beta1NearestNeighbors;
	}

	/** Response message for FeatureOnlineStoreService.SearchNearestEntities */
	export interface GoogleCloudAiplatformV1beta1SearchNearestEntitiesResponseFormProperties {
	}
	export function CreateGoogleCloudAiplatformV1beta1SearchNearestEntitiesResponseFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1SearchNearestEntitiesResponseFormProperties>({
		});

	}


	/** Metadata information for NotebookService.StartNotebookRuntime. */
	export interface GoogleCloudAiplatformV1beta1StartNotebookRuntimeOperationMetadata {

		/** Generic Metadata shared by all operations. */
		genericMetadata?: GoogleCloudAiplatformV1beta1GenericOperationMetadata;

		/** A human-readable message that shows the intermediate progress details of NotebookRuntime. */
		progressMessage?: string | null;
	}

	/** Metadata information for NotebookService.StartNotebookRuntime. */
	export interface GoogleCloudAiplatformV1beta1StartNotebookRuntimeOperationMetadataFormProperties {

		/** A human-readable message that shows the intermediate progress details of NotebookRuntime. */
		progressMessage: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1StartNotebookRuntimeOperationMetadataFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1StartNotebookRuntimeOperationMetadataFormProperties>({
			progressMessage: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Request message for NotebookService.StartNotebookRuntime. */
	export interface GoogleCloudAiplatformV1beta1StartNotebookRuntimeRequest {
	}

	/** Request message for NotebookService.StartNotebookRuntime. */
	export interface GoogleCloudAiplatformV1beta1StartNotebookRuntimeRequestFormProperties {
	}
	export function CreateGoogleCloudAiplatformV1beta1StartNotebookRuntimeRequestFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1StartNotebookRuntimeRequestFormProperties>({
		});

	}


	/** Request message for VizierService.StopTrial. */
	export interface GoogleCloudAiplatformV1beta1StopTrialRequest {
	}

	/** Request message for VizierService.StopTrial. */
	export interface GoogleCloudAiplatformV1beta1StopTrialRequestFormProperties {
	}
	export function CreateGoogleCloudAiplatformV1beta1StopTrialRequestFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1StopTrialRequestFormProperties>({
		});

	}


	/** Request message for PredictionService.StreamingPredict. The first message must contain endpoint field and optionally input. The subsequent messages must contain input. */
	export interface GoogleCloudAiplatformV1beta1StreamingPredictRequest {

		/** The prediction input. */
		inputs?: Array<GoogleCloudAiplatformV1beta1Tensor>;

		/** A tensor value type. */
		parameters?: GoogleCloudAiplatformV1beta1Tensor;
	}

	/** Request message for PredictionService.StreamingPredict. The first message must contain endpoint field and optionally input. The subsequent messages must contain input. */
	export interface GoogleCloudAiplatformV1beta1StreamingPredictRequestFormProperties {
	}
	export function CreateGoogleCloudAiplatformV1beta1StreamingPredictRequestFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1StreamingPredictRequestFormProperties>({
		});

	}


	/** Response message for PredictionService.StreamingPredict. */
	export interface GoogleCloudAiplatformV1beta1StreamingPredictResponse {

		/** The prediction output. */
		outputs?: Array<GoogleCloudAiplatformV1beta1Tensor>;

		/** A tensor value type. */
		parameters?: GoogleCloudAiplatformV1beta1Tensor;
	}

	/** Response message for PredictionService.StreamingPredict. */
	export interface GoogleCloudAiplatformV1beta1StreamingPredictResponseFormProperties {
	}
	export function CreateGoogleCloudAiplatformV1beta1StreamingPredictResponseFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1StreamingPredictResponseFormProperties>({
		});

	}


	/** Request message for FeaturestoreOnlineServingService.StreamingFeatureValuesRead. */
	export interface GoogleCloudAiplatformV1beta1StreamingReadFeatureValuesRequest {

		/** Required. IDs of entities to read Feature values of. The maximum number of IDs is 100. For example, for a machine learning model predicting user clicks on a website, an entity ID could be `user_123`. */
		entityIds?: Array<string>;

		/** Selector for Features of an EntityType. */
		featureSelector?: GoogleCloudAiplatformV1beta1FeatureSelector;
	}

	/** Request message for FeaturestoreOnlineServingService.StreamingFeatureValuesRead. */
	export interface GoogleCloudAiplatformV1beta1StreamingReadFeatureValuesRequestFormProperties {
	}
	export function CreateGoogleCloudAiplatformV1beta1StreamingReadFeatureValuesRequestFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1StreamingReadFeatureValuesRequestFormProperties>({
		});

	}


	/** Details of operations that perform Trials suggestion. */
	export interface GoogleCloudAiplatformV1beta1SuggestTrialsMetadata {

		/** The identifier of the client that is requesting the suggestion. If multiple SuggestTrialsRequests have the same `client_id`, the service will return the identical suggested Trial if the Trial is pending, and provide a new Trial if the last suggested Trial was completed. */
		clientId?: string | null;

		/** Generic Metadata shared by all operations. */
		genericMetadata?: GoogleCloudAiplatformV1beta1GenericOperationMetadata;
	}

	/** Details of operations that perform Trials suggestion. */
	export interface GoogleCloudAiplatformV1beta1SuggestTrialsMetadataFormProperties {

		/** The identifier of the client that is requesting the suggestion. If multiple SuggestTrialsRequests have the same `client_id`, the service will return the identical suggested Trial if the Trial is pending, and provide a new Trial if the last suggested Trial was completed. */
		clientId: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1SuggestTrialsMetadataFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1SuggestTrialsMetadataFormProperties>({
			clientId: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Request message for VizierService.SuggestTrials. */
	export interface GoogleCloudAiplatformV1beta1SuggestTrialsRequest {

		/** Required. The identifier of the client that is requesting the suggestion. If multiple SuggestTrialsRequests have the same `client_id`, the service will return the identical suggested Trial if the Trial is pending, and provide a new Trial if the last suggested Trial was completed. */
		clientId?: string | null;

		/** Optional. This allows you to specify the "context" for a Trial; a context is a slice (a subspace) of the search space. Typical uses for contexts: 1) You are using Vizier to tune a server for best performance, but there's a strong weekly cycle. The context specifies the day-of-week. This allows Tuesday to generalize from Wednesday without assuming that everything is identical. 2) Imagine you're optimizing some medical treatment for people. As they walk in the door, you know certain facts about them (e.g. sex, weight, height, blood-pressure). Put that information in the context, and Vizier will adapt its suggestions to the patient. 3) You want to do a fair A/B test efficiently. Specify the "A" and "B" conditions as contexts, and Vizier will generalize between "A" and "B" conditions. If they are similar, this will allow Vizier to converge to the optimum faster than if "A" and "B" were separate Studies. NOTE: You can also enter contexts as REQUESTED Trials, e.g. via the CreateTrial() RPC; that's the asynchronous option where you don't need a close association between contexts and suggestions. NOTE: All the Parameters you set in a context MUST be defined in the Study. NOTE: You must supply 0 or $suggestion_count contexts. If you don't supply any contexts, Vizier will make suggestions from the full search space specified in the StudySpec; if you supply a full set of context, each suggestion will match the corresponding context. NOTE: A Context with no features set matches anything, and allows suggestions from the full search space. NOTE: Contexts MUST lie within the search space specified in the StudySpec. It's an error if they don't. NOTE: Contexts preferentially match ACTIVE then REQUESTED trials before new suggestions are generated. NOTE: Generation of suggestions involves a match between a Context and (optionally) a REQUESTED trial; if that match is not fully specified, a suggestion will be geneated in the merged subspace. */
		contexts?: Array<GoogleCloudAiplatformV1beta1TrialContext>;

		/** Required. The number of suggestions requested. It must be positive. */
		suggestionCount?: number | null;
	}

	/** Request message for VizierService.SuggestTrials. */
	export interface GoogleCloudAiplatformV1beta1SuggestTrialsRequestFormProperties {

		/** Required. The identifier of the client that is requesting the suggestion. If multiple SuggestTrialsRequests have the same `client_id`, the service will return the identical suggested Trial if the Trial is pending, and provide a new Trial if the last suggested Trial was completed. */
		clientId: FormControl<string | null | undefined>,

		/** Required. The number of suggestions requested. It must be positive. */
		suggestionCount: FormControl<number | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1SuggestTrialsRequestFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1SuggestTrialsRequestFormProperties>({
			clientId: new FormControl<string | null | undefined>(undefined),
			suggestionCount: new FormControl<number | null | undefined>(undefined),
		});

	}


	/** Next ID: 3 */
	export interface GoogleCloudAiplatformV1beta1TrialContext {

		/** A human-readable field which can store a description of this context. This will become part of the resulting Trial's description field. */
		description?: string | null;

		/** If/when a Trial is generated or selected from this Context, its Parameters will match any parameters specified here. (I.e. if this context specifies parameter name:'a' int_value:3, then a resulting Trial will have int_value:3 for its parameter named 'a'.) Note that we first attempt to match existing REQUESTED Trials with contexts, and if there are no matches, we generate suggestions in the subspace defined by the parameters specified here. NOTE: a Context without any Parameters matches the entire feasible search space. */
		parameters?: Array<GoogleCloudAiplatformV1beta1TrialParameter>;
	}

	/** Next ID: 3 */
	export interface GoogleCloudAiplatformV1beta1TrialContextFormProperties {

		/** A human-readable field which can store a description of this context. This will become part of the resulting Trial's description field. */
		description: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1TrialContextFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1TrialContextFormProperties>({
			description: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Response message for VizierService.SuggestTrials. */
	export interface GoogleCloudAiplatformV1beta1SuggestTrialsResponse {

		/** The time at which operation processing completed. */
		endTime?: string | null;

		/** The time at which the operation was started. */
		startTime?: string | null;

		/** The state of the Study. */
		studyState?: GoogleCloudAiplatformV1beta1StudyState | null;

		/** A list of Trials. */
		trials?: Array<GoogleCloudAiplatformV1beta1Trial>;
	}

	/** Response message for VizierService.SuggestTrials. */
	export interface GoogleCloudAiplatformV1beta1SuggestTrialsResponseFormProperties {

		/** The time at which operation processing completed. */
		endTime: FormControl<string | null | undefined>,

		/** The time at which the operation was started. */
		startTime: FormControl<string | null | undefined>,

		/** The state of the Study. */
		studyState: FormControl<GoogleCloudAiplatformV1beta1StudyState | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1SuggestTrialsResponseFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1SuggestTrialsResponseFormProperties>({
			endTime: new FormControl<string | null | undefined>(undefined),
			startTime: new FormControl<string | null | undefined>(undefined),
			studyState: new FormControl<GoogleCloudAiplatformV1beta1StudyState | null | undefined>(undefined),
		});

	}


	/** Request message for FeatureOnlineStoreAdminService.SyncFeatureView. */
	export interface GoogleCloudAiplatformV1beta1SyncFeatureViewRequest {
	}

	/** Request message for FeatureOnlineStoreAdminService.SyncFeatureView. */
	export interface GoogleCloudAiplatformV1beta1SyncFeatureViewRequestFormProperties {
	}
	export function CreateGoogleCloudAiplatformV1beta1SyncFeatureViewRequestFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1SyncFeatureViewRequestFormProperties>({
		});

	}


	/** Respose message for FeatureOnlineStoreAdminService.SyncFeatureView. */
	export interface GoogleCloudAiplatformV1beta1SyncFeatureViewResponse {

		/** Format: `projects/{project}/locations/{location}/featureOnlineStores/{feature_online_store}/featureViews/{feature_view}/featureViewSyncs/{feature_view_sync}` */
		featureViewSync?: string | null;
	}

	/** Respose message for FeatureOnlineStoreAdminService.SyncFeatureView. */
	export interface GoogleCloudAiplatformV1beta1SyncFeatureViewResponseFormProperties {

		/** Format: `projects/{project}/locations/{location}/featureOnlineStores/{feature_online_store}/featureViews/{feature_view}/featureViewSyncs/{feature_view_sync}` */
		featureViewSync: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1SyncFeatureViewResponseFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1SyncFeatureViewResponseFormProperties>({
			featureViewSync: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Runtime operation information for IndexEndpointService.UndeployIndex. */
	export interface GoogleCloudAiplatformV1beta1UndeployIndexOperationMetadata {

		/** Generic Metadata shared by all operations. */
		genericMetadata?: GoogleCloudAiplatformV1beta1GenericOperationMetadata;
	}

	/** Runtime operation information for IndexEndpointService.UndeployIndex. */
	export interface GoogleCloudAiplatformV1beta1UndeployIndexOperationMetadataFormProperties {
	}
	export function CreateGoogleCloudAiplatformV1beta1UndeployIndexOperationMetadataFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1UndeployIndexOperationMetadataFormProperties>({
		});

	}


	/** Request message for IndexEndpointService.UndeployIndex. */
	export interface GoogleCloudAiplatformV1beta1UndeployIndexRequest {

		/** Required. The ID of the DeployedIndex to be undeployed from the IndexEndpoint. */
		deployedIndexId?: string | null;
	}

	/** Request message for IndexEndpointService.UndeployIndex. */
	export interface GoogleCloudAiplatformV1beta1UndeployIndexRequestFormProperties {

		/** Required. The ID of the DeployedIndex to be undeployed from the IndexEndpoint. */
		deployedIndexId: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1UndeployIndexRequestFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1UndeployIndexRequestFormProperties>({
			deployedIndexId: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Response message for IndexEndpointService.UndeployIndex. */
	export interface GoogleCloudAiplatformV1beta1UndeployIndexResponse {
	}

	/** Response message for IndexEndpointService.UndeployIndex. */
	export interface GoogleCloudAiplatformV1beta1UndeployIndexResponseFormProperties {
	}
	export function CreateGoogleCloudAiplatformV1beta1UndeployIndexResponseFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1UndeployIndexResponseFormProperties>({
		});

	}


	/** Runtime operation information for EndpointService.UndeployModel. */
	export interface GoogleCloudAiplatformV1beta1UndeployModelOperationMetadata {

		/** Generic Metadata shared by all operations. */
		genericMetadata?: GoogleCloudAiplatformV1beta1GenericOperationMetadata;
	}

	/** Runtime operation information for EndpointService.UndeployModel. */
	export interface GoogleCloudAiplatformV1beta1UndeployModelOperationMetadataFormProperties {
	}
	export function CreateGoogleCloudAiplatformV1beta1UndeployModelOperationMetadataFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1UndeployModelOperationMetadataFormProperties>({
		});

	}


	/** Request message for EndpointService.UndeployModel. */
	export interface GoogleCloudAiplatformV1beta1UndeployModelRequest {

		/** Required. The ID of the DeployedModel to be undeployed from the Endpoint. */
		deployedModelId?: string | null;

		/** If this field is provided, then the Endpoint's traffic_split will be overwritten with it. If last DeployedModel is being undeployed from the Endpoint, the [Endpoint.traffic_split] will always end up empty when this call returns. A DeployedModel will be successfully undeployed only if it doesn't have any traffic assigned to it when this method executes, or if this field unassigns any traffic to it. */
		trafficSplit?: {[id: string]: number };
	}

	/** Request message for EndpointService.UndeployModel. */
	export interface GoogleCloudAiplatformV1beta1UndeployModelRequestFormProperties {

		/** Required. The ID of the DeployedModel to be undeployed from the Endpoint. */
		deployedModelId: FormControl<string | null | undefined>,

		/** If this field is provided, then the Endpoint's traffic_split will be overwritten with it. If last DeployedModel is being undeployed from the Endpoint, the [Endpoint.traffic_split] will always end up empty when this call returns. A DeployedModel will be successfully undeployed only if it doesn't have any traffic assigned to it when this method executes, or if this field unassigns any traffic to it. */
		trafficSplit: FormControl<{[id: string]: number } | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1UndeployModelRequestFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1UndeployModelRequestFormProperties>({
			deployedModelId: new FormControl<string | null | undefined>(undefined),
			trafficSplit: new FormControl<{[id: string]: number } | null | undefined>(undefined),
		});

	}


	/** Response message for EndpointService.UndeployModel. */
	export interface GoogleCloudAiplatformV1beta1UndeployModelResponse {
	}

	/** Response message for EndpointService.UndeployModel. */
	export interface GoogleCloudAiplatformV1beta1UndeployModelResponseFormProperties {
	}
	export function CreateGoogleCloudAiplatformV1beta1UndeployModelResponseFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1UndeployModelResponseFormProperties>({
		});

	}


	/** Runtime operation information for SolverService.UndeploySolver. */
	export interface GoogleCloudAiplatformV1beta1UndeploySolverOperationMetadata {

		/** Generic Metadata shared by all operations. */
		genericMetadata?: GoogleCloudAiplatformV1beta1GenericOperationMetadata;
	}

	/** Runtime operation information for SolverService.UndeploySolver. */
	export interface GoogleCloudAiplatformV1beta1UndeploySolverOperationMetadataFormProperties {
	}
	export function CreateGoogleCloudAiplatformV1beta1UndeploySolverOperationMetadataFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1UndeploySolverOperationMetadataFormProperties>({
		});

	}


	/** Runtime operation information for UpdateDeploymentResourcePool method. */
	export interface GoogleCloudAiplatformV1beta1UpdateDeploymentResourcePoolOperationMetadata {

		/** Generic Metadata shared by all operations. */
		genericMetadata?: GoogleCloudAiplatformV1beta1GenericOperationMetadata;
	}

	/** Runtime operation information for UpdateDeploymentResourcePool method. */
	export interface GoogleCloudAiplatformV1beta1UpdateDeploymentResourcePoolOperationMetadataFormProperties {
	}
	export function CreateGoogleCloudAiplatformV1beta1UpdateDeploymentResourcePoolOperationMetadataFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1UpdateDeploymentResourcePoolOperationMetadataFormProperties>({
		});

	}


	/** Runtime operation information for ModelService.UpdateExplanationDataset. */
	export interface GoogleCloudAiplatformV1beta1UpdateExplanationDatasetOperationMetadata {

		/** Generic Metadata shared by all operations. */
		genericMetadata?: GoogleCloudAiplatformV1beta1GenericOperationMetadata;
	}

	/** Runtime operation information for ModelService.UpdateExplanationDataset. */
	export interface GoogleCloudAiplatformV1beta1UpdateExplanationDatasetOperationMetadataFormProperties {
	}
	export function CreateGoogleCloudAiplatformV1beta1UpdateExplanationDatasetOperationMetadataFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1UpdateExplanationDatasetOperationMetadataFormProperties>({
		});

	}


	/** Request message for ModelService.UpdateExplanationDataset. */
	export interface GoogleCloudAiplatformV1beta1UpdateExplanationDatasetRequest {

		/** Example-based explainability that returns the nearest neighbors from the provided dataset. */
		examples?: GoogleCloudAiplatformV1beta1Examples;
	}

	/** Request message for ModelService.UpdateExplanationDataset. */
	export interface GoogleCloudAiplatformV1beta1UpdateExplanationDatasetRequestFormProperties {
	}
	export function CreateGoogleCloudAiplatformV1beta1UpdateExplanationDatasetRequestFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1UpdateExplanationDatasetRequestFormProperties>({
		});

	}


	/** Response message of ModelService.UpdateExplanationDataset operation. */
	export interface GoogleCloudAiplatformV1beta1UpdateExplanationDatasetResponse {
	}

	/** Response message of ModelService.UpdateExplanationDataset operation. */
	export interface GoogleCloudAiplatformV1beta1UpdateExplanationDatasetResponseFormProperties {
	}
	export function CreateGoogleCloudAiplatformV1beta1UpdateExplanationDatasetResponseFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1UpdateExplanationDatasetResponseFormProperties>({
		});

	}


	/** Details of operations that perform update FeatureGroup. */
	export interface GoogleCloudAiplatformV1beta1UpdateFeatureGroupOperationMetadata {

		/** Generic Metadata shared by all operations. */
		genericMetadata?: GoogleCloudAiplatformV1beta1GenericOperationMetadata;
	}

	/** Details of operations that perform update FeatureGroup. */
	export interface GoogleCloudAiplatformV1beta1UpdateFeatureGroupOperationMetadataFormProperties {
	}
	export function CreateGoogleCloudAiplatformV1beta1UpdateFeatureGroupOperationMetadataFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1UpdateFeatureGroupOperationMetadataFormProperties>({
		});

	}


	/** Details of operations that perform update FeatureOnlineStore. */
	export interface GoogleCloudAiplatformV1beta1UpdateFeatureOnlineStoreOperationMetadata {

		/** Generic Metadata shared by all operations. */
		genericMetadata?: GoogleCloudAiplatformV1beta1GenericOperationMetadata;
	}

	/** Details of operations that perform update FeatureOnlineStore. */
	export interface GoogleCloudAiplatformV1beta1UpdateFeatureOnlineStoreOperationMetadataFormProperties {
	}
	export function CreateGoogleCloudAiplatformV1beta1UpdateFeatureOnlineStoreOperationMetadataFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1UpdateFeatureOnlineStoreOperationMetadataFormProperties>({
		});

	}


	/** Details of operations that perform update Feature. */
	export interface GoogleCloudAiplatformV1beta1UpdateFeatureOperationMetadata {

		/** Generic Metadata shared by all operations. */
		genericMetadata?: GoogleCloudAiplatformV1beta1GenericOperationMetadata;
	}

	/** Details of operations that perform update Feature. */
	export interface GoogleCloudAiplatformV1beta1UpdateFeatureOperationMetadataFormProperties {
	}
	export function CreateGoogleCloudAiplatformV1beta1UpdateFeatureOperationMetadataFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1UpdateFeatureOperationMetadataFormProperties>({
		});

	}


	/** Details of operations that perform update FeatureView. */
	export interface GoogleCloudAiplatformV1beta1UpdateFeatureViewOperationMetadata {

		/** Generic Metadata shared by all operations. */
		genericMetadata?: GoogleCloudAiplatformV1beta1GenericOperationMetadata;
	}

	/** Details of operations that perform update FeatureView. */
	export interface GoogleCloudAiplatformV1beta1UpdateFeatureViewOperationMetadataFormProperties {
	}
	export function CreateGoogleCloudAiplatformV1beta1UpdateFeatureViewOperationMetadataFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1UpdateFeatureViewOperationMetadataFormProperties>({
		});

	}


	/** Details of operations that perform update Featurestore. */
	export interface GoogleCloudAiplatformV1beta1UpdateFeaturestoreOperationMetadata {

		/** Generic Metadata shared by all operations. */
		genericMetadata?: GoogleCloudAiplatformV1beta1GenericOperationMetadata;
	}

	/** Details of operations that perform update Featurestore. */
	export interface GoogleCloudAiplatformV1beta1UpdateFeaturestoreOperationMetadataFormProperties {
	}
	export function CreateGoogleCloudAiplatformV1beta1UpdateFeaturestoreOperationMetadataFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1UpdateFeaturestoreOperationMetadataFormProperties>({
		});

	}


	/** Runtime operation information for IndexService.UpdateIndex. */
	export interface GoogleCloudAiplatformV1beta1UpdateIndexOperationMetadata {

		/** Generic Metadata shared by all operations. */
		genericMetadata?: GoogleCloudAiplatformV1beta1GenericOperationMetadata;

		/** Runtime operation metadata with regard to Matching Engine Index. */
		nearestNeighborSearchOperationMetadata?: GoogleCloudAiplatformV1beta1NearestNeighborSearchOperationMetadata;
	}

	/** Runtime operation information for IndexService.UpdateIndex. */
	export interface GoogleCloudAiplatformV1beta1UpdateIndexOperationMetadataFormProperties {
	}
	export function CreateGoogleCloudAiplatformV1beta1UpdateIndexOperationMetadataFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1UpdateIndexOperationMetadataFormProperties>({
		});

	}


	/** Runtime operation information for JobService.UpdateModelDeploymentMonitoringJob. */
	export interface GoogleCloudAiplatformV1beta1UpdateModelDeploymentMonitoringJobOperationMetadata {

		/** Generic Metadata shared by all operations. */
		genericMetadata?: GoogleCloudAiplatformV1beta1GenericOperationMetadata;
	}

	/** Runtime operation information for JobService.UpdateModelDeploymentMonitoringJob. */
	export interface GoogleCloudAiplatformV1beta1UpdateModelDeploymentMonitoringJobOperationMetadataFormProperties {
	}
	export function CreateGoogleCloudAiplatformV1beta1UpdateModelDeploymentMonitoringJobOperationMetadataFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1UpdateModelDeploymentMonitoringJobOperationMetadataFormProperties>({
		});

	}


	/** Details of operations that perform update PersistentResource. */
	export interface GoogleCloudAiplatformV1beta1UpdatePersistentResourceOperationMetadata {

		/** Generic Metadata shared by all operations. */
		genericMetadata?: GoogleCloudAiplatformV1beta1GenericOperationMetadata;
	}

	/** Details of operations that perform update PersistentResource. */
	export interface GoogleCloudAiplatformV1beta1UpdatePersistentResourceOperationMetadataFormProperties {
	}
	export function CreateGoogleCloudAiplatformV1beta1UpdatePersistentResourceOperationMetadataFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1UpdatePersistentResourceOperationMetadataFormProperties>({
		});

	}


	/** Runtime operation metadata for SpecialistPoolService.UpdateSpecialistPool. */
	export interface GoogleCloudAiplatformV1beta1UpdateSpecialistPoolOperationMetadata {

		/** Generic Metadata shared by all operations. */
		genericMetadata?: GoogleCloudAiplatformV1beta1GenericOperationMetadata;

		/** Output only. The name of the SpecialistPool to which the specialists are being added. Format: `projects/{project_id}/locations/{location_id}/specialistPools/{specialist_pool}` */
		specialistPool?: string | null;
	}

	/** Runtime operation metadata for SpecialistPoolService.UpdateSpecialistPool. */
	export interface GoogleCloudAiplatformV1beta1UpdateSpecialistPoolOperationMetadataFormProperties {

		/** Output only. The name of the SpecialistPool to which the specialists are being added. Format: `projects/{project_id}/locations/{location_id}/specialistPools/{specialist_pool}` */
		specialistPool: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1UpdateSpecialistPoolOperationMetadataFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1UpdateSpecialistPoolOperationMetadataFormProperties>({
			specialistPool: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Details of operations that perform update Tensorboard. */
	export interface GoogleCloudAiplatformV1beta1UpdateTensorboardOperationMetadata {

		/** Generic Metadata shared by all operations. */
		genericMetadata?: GoogleCloudAiplatformV1beta1GenericOperationMetadata;
	}

	/** Details of operations that perform update Tensorboard. */
	export interface GoogleCloudAiplatformV1beta1UpdateTensorboardOperationMetadataFormProperties {
	}
	export function CreateGoogleCloudAiplatformV1beta1UpdateTensorboardOperationMetadataFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1UpdateTensorboardOperationMetadataFormProperties>({
		});

	}


	/** Metadata information for NotebookService.UpgradeNotebookRuntime. */
	export interface GoogleCloudAiplatformV1beta1UpgradeNotebookRuntimeOperationMetadata {

		/** Generic Metadata shared by all operations. */
		genericMetadata?: GoogleCloudAiplatformV1beta1GenericOperationMetadata;

		/** A human-readable message that shows the intermediate progress details of NotebookRuntime. */
		progressMessage?: string | null;
	}

	/** Metadata information for NotebookService.UpgradeNotebookRuntime. */
	export interface GoogleCloudAiplatformV1beta1UpgradeNotebookRuntimeOperationMetadataFormProperties {

		/** A human-readable message that shows the intermediate progress details of NotebookRuntime. */
		progressMessage: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1UpgradeNotebookRuntimeOperationMetadataFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1UpgradeNotebookRuntimeOperationMetadataFormProperties>({
			progressMessage: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Request message for NotebookService.UpgradeNotebookRuntime. */
	export interface GoogleCloudAiplatformV1beta1UpgradeNotebookRuntimeRequest {
	}

	/** Request message for NotebookService.UpgradeNotebookRuntime. */
	export interface GoogleCloudAiplatformV1beta1UpgradeNotebookRuntimeRequestFormProperties {
	}
	export function CreateGoogleCloudAiplatformV1beta1UpgradeNotebookRuntimeRequestFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1UpgradeNotebookRuntimeRequestFormProperties>({
		});

	}


	/** Details of ModelService.UploadModel operation. */
	export interface GoogleCloudAiplatformV1beta1UploadModelOperationMetadata {

		/** Generic Metadata shared by all operations. */
		genericMetadata?: GoogleCloudAiplatformV1beta1GenericOperationMetadata;
	}

	/** Details of ModelService.UploadModel operation. */
	export interface GoogleCloudAiplatformV1beta1UploadModelOperationMetadataFormProperties {
	}
	export function CreateGoogleCloudAiplatformV1beta1UploadModelOperationMetadataFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1UploadModelOperationMetadataFormProperties>({
		});

	}


	/** Request message for ModelService.UploadModel. */
	export interface GoogleCloudAiplatformV1beta1UploadModelRequest {

		/** A trained machine learning Model. */
		model?: GoogleCloudAiplatformV1beta1Model;

		/** Optional. The ID to use for the uploaded Model, which will become the final component of the model resource name. This value may be up to 63 characters, and valid characters are `[a-z0-9_-]`. The first character cannot be a number or hyphen. */
		modelId?: string | null;

		/** Optional. The resource name of the model into which to upload the version. Only specify this field when uploading a new version. */
		parentModel?: string | null;

		/** Optional. The user-provided custom service account to use to do the model upload. If empty, [Vertex AI Service Agent](https://cloud.google.com/vertex-ai/docs/general/access-control#service-agents) will be used to access resources needed to upload the model. This account must belong to the target project where the model is uploaded to, i.e., the project specified in the `parent` field of this request and have necessary read permissions (to Google Cloud Storage, Artifact Registry, etc.). */
		serviceAccount?: string | null;
	}

	/** Request message for ModelService.UploadModel. */
	export interface GoogleCloudAiplatformV1beta1UploadModelRequestFormProperties {

		/** Optional. The ID to use for the uploaded Model, which will become the final component of the model resource name. This value may be up to 63 characters, and valid characters are `[a-z0-9_-]`. The first character cannot be a number or hyphen. */
		modelId: FormControl<string | null | undefined>,

		/** Optional. The resource name of the model into which to upload the version. Only specify this field when uploading a new version. */
		parentModel: FormControl<string | null | undefined>,

		/** Optional. The user-provided custom service account to use to do the model upload. If empty, [Vertex AI Service Agent](https://cloud.google.com/vertex-ai/docs/general/access-control#service-agents) will be used to access resources needed to upload the model. This account must belong to the target project where the model is uploaded to, i.e., the project specified in the `parent` field of this request and have necessary read permissions (to Google Cloud Storage, Artifact Registry, etc.). */
		serviceAccount: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1UploadModelRequestFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1UploadModelRequestFormProperties>({
			modelId: new FormControl<string | null | undefined>(undefined),
			parentModel: new FormControl<string | null | undefined>(undefined),
			serviceAccount: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Response message of ModelService.UploadModel operation. */
	export interface GoogleCloudAiplatformV1beta1UploadModelResponse {

		/** The name of the uploaded Model resource. Format: `projects/{project}/locations/{location}/models/{model}` */
		model?: string | null;

		/** Output only. The version ID of the model that is uploaded. */
		modelVersionId?: string | null;
	}

	/** Response message of ModelService.UploadModel operation. */
	export interface GoogleCloudAiplatformV1beta1UploadModelResponseFormProperties {

		/** The name of the uploaded Model resource. Format: `projects/{project}/locations/{location}/models/{model}` */
		model: FormControl<string | null | undefined>,

		/** Output only. The version ID of the model that is uploaded. */
		modelVersionId: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1UploadModelResponseFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1UploadModelResponseFormProperties>({
			model: new FormControl<string | null | undefined>(undefined),
			modelVersionId: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Request message for IndexService.UpsertDatapoints */
	export interface GoogleCloudAiplatformV1beta1UpsertDatapointsRequest {

		/** A list of datapoints to be created/updated. */
		datapoints?: Array<GoogleCloudAiplatformV1beta1IndexDatapoint>;
	}

	/** Request message for IndexService.UpsertDatapoints */
	export interface GoogleCloudAiplatformV1beta1UpsertDatapointsRequestFormProperties {
	}
	export function CreateGoogleCloudAiplatformV1beta1UpsertDatapointsRequestFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1UpsertDatapointsRequestFormProperties>({
		});

	}


	/** Response message for IndexService.UpsertDatapoints */
	export interface GoogleCloudAiplatformV1beta1UpsertDatapointsResponse {
	}

	/** Response message for IndexService.UpsertDatapoints */
	export interface GoogleCloudAiplatformV1beta1UpsertDatapointsResponseFormProperties {
	}
	export function CreateGoogleCloudAiplatformV1beta1UpsertDatapointsResponseFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1UpsertDatapointsResponseFormProperties>({
		});

	}


	/** Contains Feature values to be written for a specific entity. */
	export interface GoogleCloudAiplatformV1beta1WriteFeatureValuesPayload {

		/** Required. The ID of the entity. */
		entityId?: string | null;

		/** Required. Feature values to be written, mapping from Feature ID to value. Up to 100,000 `feature_values` entries may be written across all payloads. The feature generation time, aligned by days, must be no older than five years (1825 days) and no later than one year (366 days) in the future. */
		featureValues?: {[id: string]: GoogleCloudAiplatformV1beta1FeatureValue };
	}

	/** Contains Feature values to be written for a specific entity. */
	export interface GoogleCloudAiplatformV1beta1WriteFeatureValuesPayloadFormProperties {

		/** Required. The ID of the entity. */
		entityId: FormControl<string | null | undefined>,

		/** Required. Feature values to be written, mapping from Feature ID to value. Up to 100,000 `feature_values` entries may be written across all payloads. The feature generation time, aligned by days, must be no older than five years (1825 days) and no later than one year (366 days) in the future. */
		featureValues: FormControl<{[id: string]: GoogleCloudAiplatformV1beta1FeatureValue } | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1WriteFeatureValuesPayloadFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1WriteFeatureValuesPayloadFormProperties>({
			entityId: new FormControl<string | null | undefined>(undefined),
			featureValues: new FormControl<{[id: string]: GoogleCloudAiplatformV1beta1FeatureValue } | null | undefined>(undefined),
		});

	}


	/** Request message for FeaturestoreOnlineServingService.WriteFeatureValues. */
	export interface GoogleCloudAiplatformV1beta1WriteFeatureValuesRequest {

		/** Required. The entities to be written. Up to 100,000 feature values can be written across all `payloads`. */
		payloads?: Array<GoogleCloudAiplatformV1beta1WriteFeatureValuesPayload>;
	}

	/** Request message for FeaturestoreOnlineServingService.WriteFeatureValues. */
	export interface GoogleCloudAiplatformV1beta1WriteFeatureValuesRequestFormProperties {
	}
	export function CreateGoogleCloudAiplatformV1beta1WriteFeatureValuesRequestFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1WriteFeatureValuesRequestFormProperties>({
		});

	}


	/** Response message for FeaturestoreOnlineServingService.WriteFeatureValues. */
	export interface GoogleCloudAiplatformV1beta1WriteFeatureValuesResponse {
	}

	/** Response message for FeaturestoreOnlineServingService.WriteFeatureValues. */
	export interface GoogleCloudAiplatformV1beta1WriteFeatureValuesResponseFormProperties {
	}
	export function CreateGoogleCloudAiplatformV1beta1WriteFeatureValuesResponseFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1WriteFeatureValuesResponseFormProperties>({
		});

	}


	/** Request message for TensorboardService.WriteTensorboardExperimentData. */
	export interface GoogleCloudAiplatformV1beta1WriteTensorboardExperimentDataRequest {

		/** Required. Requests containing per-run TensorboardTimeSeries data to write. */
		writeRunDataRequests?: Array<GoogleCloudAiplatformV1beta1WriteTensorboardRunDataRequest>;
	}

	/** Request message for TensorboardService.WriteTensorboardExperimentData. */
	export interface GoogleCloudAiplatformV1beta1WriteTensorboardExperimentDataRequestFormProperties {
	}
	export function CreateGoogleCloudAiplatformV1beta1WriteTensorboardExperimentDataRequestFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1WriteTensorboardExperimentDataRequestFormProperties>({
		});

	}


	/** Request message for TensorboardService.WriteTensorboardRunData. */
	export interface GoogleCloudAiplatformV1beta1WriteTensorboardRunDataRequest {

		/** Required. The resource name of the TensorboardRun to write data to. Format: `projects/{project}/locations/{location}/tensorboards/{tensorboard}/experiments/{experiment}/runs/{run}` */
		tensorboardRun?: string | null;

		/** Required. The TensorboardTimeSeries data to write. Values with in a time series are indexed by their step value. Repeated writes to the same step will overwrite the existing value for that step. The upper limit of data points per write request is 5000. */
		timeSeriesData?: Array<GoogleCloudAiplatformV1beta1TimeSeriesData>;
	}

	/** Request message for TensorboardService.WriteTensorboardRunData. */
	export interface GoogleCloudAiplatformV1beta1WriteTensorboardRunDataRequestFormProperties {

		/** Required. The resource name of the TensorboardRun to write data to. Format: `projects/{project}/locations/{location}/tensorboards/{tensorboard}/experiments/{experiment}/runs/{run}` */
		tensorboardRun: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudAiplatformV1beta1WriteTensorboardRunDataRequestFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1WriteTensorboardRunDataRequestFormProperties>({
			tensorboardRun: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Response message for TensorboardService.WriteTensorboardExperimentData. */
	export interface GoogleCloudAiplatformV1beta1WriteTensorboardExperimentDataResponse {
	}

	/** Response message for TensorboardService.WriteTensorboardExperimentData. */
	export interface GoogleCloudAiplatformV1beta1WriteTensorboardExperimentDataResponseFormProperties {
	}
	export function CreateGoogleCloudAiplatformV1beta1WriteTensorboardExperimentDataResponseFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1WriteTensorboardExperimentDataResponseFormProperties>({
		});

	}


	/** Response message for TensorboardService.WriteTensorboardRunData. */
	export interface GoogleCloudAiplatformV1beta1WriteTensorboardRunDataResponse {
	}

	/** Response message for TensorboardService.WriteTensorboardRunData. */
	export interface GoogleCloudAiplatformV1beta1WriteTensorboardRunDataResponseFormProperties {
	}
	export function CreateGoogleCloudAiplatformV1beta1WriteTensorboardRunDataResponseFormGroup() {
		return new FormGroup<GoogleCloudAiplatformV1beta1WriteTensorboardRunDataResponseFormProperties>({
		});

	}


	/** The response message for Locations.ListLocations. */
	export interface GoogleCloudLocationListLocationsResponse {

		/** A list of locations that matches the specified filter in the request. */
		locations?: Array<GoogleCloudLocationLocation>;

		/** The standard List next-page token. */
		nextPageToken?: string | null;
	}

	/** The response message for Locations.ListLocations. */
	export interface GoogleCloudLocationListLocationsResponseFormProperties {

		/** The standard List next-page token. */
		nextPageToken: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudLocationListLocationsResponseFormGroup() {
		return new FormGroup<GoogleCloudLocationListLocationsResponseFormProperties>({
			nextPageToken: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** A resource that represents a Google Cloud location. */
	export interface GoogleCloudLocationLocation {

		/** The friendly name for this location, typically a nearby city name. For example, "Tokyo". */
		displayName?: string | null;

		/** Cross-service attributes for the location. For example {"cloud.googleapis.com/region": "us-east1"} */
		labels?: {[id: string]: string };

		/** The canonical id for this location. For example: `"us-east1"`. */
		locationId?: string | null;

		/** Service-specific metadata. For example the available capacity at the given location. */
		metadata?: {[id: string]: any };

		/** Resource name for the location, which may vary between implementations. For example: `"projects/example-project/locations/us-east1"` */
		name?: string | null;
	}

	/** A resource that represents a Google Cloud location. */
	export interface GoogleCloudLocationLocationFormProperties {

		/** The friendly name for this location, typically a nearby city name. For example, "Tokyo". */
		displayName: FormControl<string | null | undefined>,

		/** Cross-service attributes for the location. For example {"cloud.googleapis.com/region": "us-east1"} */
		labels: FormControl<{[id: string]: string } | null | undefined>,

		/** The canonical id for this location. For example: `"us-east1"`. */
		locationId: FormControl<string | null | undefined>,

		/** Service-specific metadata. For example the available capacity at the given location. */
		metadata: FormControl<{[id: string]: any } | null | undefined>,

		/** Resource name for the location, which may vary between implementations. For example: `"projects/example-project/locations/us-east1"` */
		name: FormControl<string | null | undefined>,
	}
	export function CreateGoogleCloudLocationLocationFormGroup() {
		return new FormGroup<GoogleCloudLocationLocationFormProperties>({
			displayName: new FormControl<string | null | undefined>(undefined),
			labels: new FormControl<{[id: string]: string } | null | undefined>(undefined),
			locationId: new FormControl<string | null | undefined>(undefined),
			metadata: new FormControl<{[id: string]: any } | null | undefined>(undefined),
			name: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Associates `members`, or principals, with a `role`. */
	export interface GoogleIamV1Binding {

		/** Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language. The syntax and semantics of CEL are documented at https://github.com/google/cel-spec. Example (Comparison): title: "Summary size limit" description: "Determines if a summary is less than 100 chars" expression: "document.summary.size() < 100" Example (Equality): title: "Requestor is owner" description: "Determines if requestor is the document owner" expression: "document.owner == request.auth.claims.email" Example (Logic): title: "Public documents" description: "Determine whether the document should be publicly visible" expression: "document.type != 'private' && document.type != 'internal'" Example (Data Manipulation): title: "Notification string" description: "Create a notification string with a timestamp." expression: "'New message received at ' + string(document.create_time)" The exact variables and functions that may be referenced within an expression are determined by the service that evaluates it. See the service documentation for additional information. */
		condition?: GoogleTypeExpr;

		/** Specifies the principals requesting access for a Google Cloud resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. Does not include identities that come from external identity providers (IdPs) through identity federation. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that represents a Google service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `serviceAccount:{projectid}.svc.id.goog[{namespace}/{kubernetes-sa}]`: An identifier for a [Kubernetes service account](https://cloud.google.com/kubernetes-engine/docs/how-to/kubernetes-service-accounts). For example, `my-project.svc.id.goog[my-namespace/my-kubernetes-sa]`. * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`. * `principal://iam.googleapis.com/locations/global/workforcePools/{pool_id}/subject/{subject_attribute_value}`: A single identity in a workforce identity pool. * `principalSet://iam.googleapis.com/locations/global/workforcePools/{pool_id}/group/{group_id}`: All workforce identities in a group. * `principalSet://iam.googleapis.com/locations/global/workforcePools/{pool_id}/attribute.{attribute_name}/{attribute_value}`: All workforce identities with a specific attribute value. * `principalSet://iam.googleapis.com/locations/global/workforcePools/{pool_id}/*`: All identities in a workforce identity pool. * `principal://iam.googleapis.com/projects/{project_number}/locations/global/workloadIdentityPools/{pool_id}/subject/{subject_attribute_value}`: A single identity in a workload identity pool. * `principalSet://iam.googleapis.com/projects/{project_number}/locations/global/workloadIdentityPools/{pool_id}/group/{group_id}`: A workload identity pool group. * `principalSet://iam.googleapis.com/projects/{project_number}/locations/global/workloadIdentityPools/{pool_id}/attribute.{attribute_name}/{attribute_value}`: All identities in a workload identity pool with a certain attribute. * `principalSet://iam.googleapis.com/projects/{project_number}/locations/global/workloadIdentityPools/{pool_id}/*`: All identities in a workload identity pool. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in the binding. * `deleted:principal://iam.googleapis.com/locations/global/workforcePools/{pool_id}/subject/{subject_attribute_value}`: Deleted single identity in a workforce identity pool. For example, `deleted:principal://iam.googleapis.com/locations/global/workforcePools/my-pool-id/subject/my-subject-attribute-value`. */
		members?: Array<string>;

		/** Role that is assigned to the list of `members`, or principals. For example, `roles/viewer`, `roles/editor`, or `roles/owner`. */
		role?: string | null;
	}

	/** Associates `members`, or principals, with a `role`. */
	export interface GoogleIamV1BindingFormProperties {

		/** Role that is assigned to the list of `members`, or principals. For example, `roles/viewer`, `roles/editor`, or `roles/owner`. */
		role: FormControl<string | null | undefined>,
	}
	export function CreateGoogleIamV1BindingFormGroup() {
		return new FormGroup<GoogleIamV1BindingFormProperties>({
			role: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language. The syntax and semantics of CEL are documented at https://github.com/google/cel-spec. Example (Comparison): title: "Summary size limit" description: "Determines if a summary is less than 100 chars" expression: "document.summary.size() < 100" Example (Equality): title: "Requestor is owner" description: "Determines if requestor is the document owner" expression: "document.owner == request.auth.claims.email" Example (Logic): title: "Public documents" description: "Determine whether the document should be publicly visible" expression: "document.type != 'private' && document.type != 'internal'" Example (Data Manipulation): title: "Notification string" description: "Create a notification string with a timestamp." expression: "'New message received at ' + string(document.create_time)" The exact variables and functions that may be referenced within an expression are determined by the service that evaluates it. See the service documentation for additional information. */
	export interface GoogleTypeExpr {

		/** Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI. */
		description?: string | null;

		/** Textual representation of an expression in Common Expression Language syntax. */
		expression?: string | null;

		/** Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file. */
		location?: string | null;

		/** Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression. */
		title?: string | null;
	}

	/** Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language. The syntax and semantics of CEL are documented at https://github.com/google/cel-spec. Example (Comparison): title: "Summary size limit" description: "Determines if a summary is less than 100 chars" expression: "document.summary.size() < 100" Example (Equality): title: "Requestor is owner" description: "Determines if requestor is the document owner" expression: "document.owner == request.auth.claims.email" Example (Logic): title: "Public documents" description: "Determine whether the document should be publicly visible" expression: "document.type != 'private' && document.type != 'internal'" Example (Data Manipulation): title: "Notification string" description: "Create a notification string with a timestamp." expression: "'New message received at ' + string(document.create_time)" The exact variables and functions that may be referenced within an expression are determined by the service that evaluates it. See the service documentation for additional information. */
	export interface GoogleTypeExprFormProperties {

		/** Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI. */
		description: FormControl<string | null | undefined>,

		/** Textual representation of an expression in Common Expression Language syntax. */
		expression: FormControl<string | null | undefined>,

		/** Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file. */
		location: FormControl<string | null | undefined>,

		/** Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression. */
		title: FormControl<string | null | undefined>,
	}
	export function CreateGoogleTypeExprFormGroup() {
		return new FormGroup<GoogleTypeExprFormProperties>({
			description: new FormControl<string | null | undefined>(undefined),
			expression: new FormControl<string | null | undefined>(undefined),
			location: new FormControl<string | null | undefined>(undefined),
			title: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Request message for `GetIamPolicy` method. */
	export interface GoogleIamV1GetIamPolicyRequest {

		/** Encapsulates settings provided to GetIamPolicy. */
		options?: GoogleIamV1GetPolicyOptions;
	}

	/** Request message for `GetIamPolicy` method. */
	export interface GoogleIamV1GetIamPolicyRequestFormProperties {
	}
	export function CreateGoogleIamV1GetIamPolicyRequestFormGroup() {
		return new FormGroup<GoogleIamV1GetIamPolicyRequestFormProperties>({
		});

	}


	/** Encapsulates settings provided to GetIamPolicy. */
	export interface GoogleIamV1GetPolicyOptions {

		/** Optional. The maximum policy version that will be used to format the policy. Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests for policies with any conditional role bindings must specify version 3. Policies with no conditional role bindings may specify any valid value or leave the field unset. The policy in the response might use the policy version that you specified, or it might use a lower policy version. For example, if you specify version 3, but the policy has no conditional role bindings, the response uses version 1. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). */
		requestedPolicyVersion?: number | null;
	}

	/** Encapsulates settings provided to GetIamPolicy. */
	export interface GoogleIamV1GetPolicyOptionsFormProperties {

		/** Optional. The maximum policy version that will be used to format the policy. Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests for policies with any conditional role bindings must specify version 3. Policies with no conditional role bindings may specify any valid value or leave the field unset. The policy in the response might use the policy version that you specified, or it might use a lower policy version. For example, if you specify version 3, but the policy has no conditional role bindings, the response uses version 1. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). */
		requestedPolicyVersion: FormControl<number | null | undefined>,
	}
	export function CreateGoogleIamV1GetPolicyOptionsFormGroup() {
		return new FormGroup<GoogleIamV1GetPolicyOptionsFormProperties>({
			requestedPolicyVersion: new FormControl<number | null | undefined>(undefined),
		});

	}


	/** An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members`, or principals, to a single `role`. Principals can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** ``` { "bindings": [ { "role": "roles/resourcemanager.organizationAdmin", "members": [ "user:mike@example.com", "group:admins@example.com", "domain:google.com", "serviceAccount:my-project-id@appspot.gserviceaccount.com" ] }, { "role": "roles/resourcemanager.organizationViewer", "members": [ "user:eve@example.com" ], "condition": { "title": "expirable access", "description": "Does not grant access after Sep 2020", "expression": "request.time < timestamp('2020-10-01T00:00:00.000Z')", } } ], "etag": "BwWWja0YfJA=", "version": 3 } ``` **YAML example:** ``` bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp('2020-10-01T00:00:00.000Z') etag: BwWWja0YfJA= version: 3 ``` For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/). */
	export interface GoogleIamV1Policy {

		/** Associates a list of `members`, or principals, with a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one principal. The `bindings` in a `Policy` can refer to up to 1,500 principals; up to 250 of these principals can be Google groups. Each occurrence of a principal counts towards these limits. For example, if the `bindings` grant 50 different roles to `user:alice@example.com`, and not to any other principal, then you can add another 1,450 principals to the `bindings` in the `Policy`. */
		bindings?: Array<GoogleIamV1Binding>;

		/** `etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. */
		etag?: string | null;

		/** Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). */
		version?: number | null;
	}

	/** An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members`, or principals, to a single `role`. Principals can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** ``` { "bindings": [ { "role": "roles/resourcemanager.organizationAdmin", "members": [ "user:mike@example.com", "group:admins@example.com", "domain:google.com", "serviceAccount:my-project-id@appspot.gserviceaccount.com" ] }, { "role": "roles/resourcemanager.organizationViewer", "members": [ "user:eve@example.com" ], "condition": { "title": "expirable access", "description": "Does not grant access after Sep 2020", "expression": "request.time < timestamp('2020-10-01T00:00:00.000Z')", } } ], "etag": "BwWWja0YfJA=", "version": 3 } ``` **YAML example:** ``` bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp('2020-10-01T00:00:00.000Z') etag: BwWWja0YfJA= version: 3 ``` For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/). */
	export interface GoogleIamV1PolicyFormProperties {

		/** `etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. */
		etag: FormControl<string | null | undefined>,

		/** Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). */
		version: FormControl<number | null | undefined>,
	}
	export function CreateGoogleIamV1PolicyFormGroup() {
		return new FormGroup<GoogleIamV1PolicyFormProperties>({
			etag: new FormControl<string | null | undefined>(undefined),
			version: new FormControl<number | null | undefined>(undefined),
		});

	}


	/** Request message for `SetIamPolicy` method. */
	export interface GoogleIamV1SetIamPolicyRequest {

		/** An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members`, or principals, to a single `role`. Principals can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** ``` { "bindings": [ { "role": "roles/resourcemanager.organizationAdmin", "members": [ "user:mike@example.com", "group:admins@example.com", "domain:google.com", "serviceAccount:my-project-id@appspot.gserviceaccount.com" ] }, { "role": "roles/resourcemanager.organizationViewer", "members": [ "user:eve@example.com" ], "condition": { "title": "expirable access", "description": "Does not grant access after Sep 2020", "expression": "request.time < timestamp('2020-10-01T00:00:00.000Z')", } } ], "etag": "BwWWja0YfJA=", "version": 3 } ``` **YAML example:** ``` bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp('2020-10-01T00:00:00.000Z') etag: BwWWja0YfJA= version: 3 ``` For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/). */
		policy?: GoogleIamV1Policy;
	}

	/** Request message for `SetIamPolicy` method. */
	export interface GoogleIamV1SetIamPolicyRequestFormProperties {
	}
	export function CreateGoogleIamV1SetIamPolicyRequestFormGroup() {
		return new FormGroup<GoogleIamV1SetIamPolicyRequestFormProperties>({
		});

	}


	/** Request message for `TestIamPermissions` method. */
	export interface GoogleIamV1TestIamPermissionsRequest {

		/** The set of permissions to check for the `resource`. Permissions with wildcards (such as `*` or `storage.*`) are not allowed. For more information see [IAM Overview](https://cloud.google.com/iam/docs/overview#permissions). */
		permissions?: Array<string>;
	}

	/** Request message for `TestIamPermissions` method. */
	export interface GoogleIamV1TestIamPermissionsRequestFormProperties {
	}
	export function CreateGoogleIamV1TestIamPermissionsRequestFormGroup() {
		return new FormGroup<GoogleIamV1TestIamPermissionsRequestFormProperties>({
		});

	}


	/** Response message for `TestIamPermissions` method. */
	export interface GoogleIamV1TestIamPermissionsResponse {

		/** A subset of `TestPermissionsRequest.permissions` that the caller is allowed. */
		permissions?: Array<string>;
	}

	/** Response message for `TestIamPermissions` method. */
	export interface GoogleIamV1TestIamPermissionsResponseFormProperties {
	}
	export function CreateGoogleIamV1TestIamPermissionsResponseFormGroup() {
		return new FormGroup<GoogleIamV1TestIamPermissionsResponseFormProperties>({
		});

	}


	/** The response message for Operations.ListOperations. */
	export interface GoogleLongrunningListOperationsResponse {

		/** The standard List next-page token. */
		nextPageToken?: string | null;

		/** A list of operations that matches the specified filter in the request. */
		operations?: Array<GoogleLongrunningOperation>;
	}

	/** The response message for Operations.ListOperations. */
	export interface GoogleLongrunningListOperationsResponseFormProperties {

		/** The standard List next-page token. */
		nextPageToken: FormControl<string | null | undefined>,
	}
	export function CreateGoogleLongrunningListOperationsResponseFormGroup() {
		return new FormGroup<GoogleLongrunningListOperationsResponseFormProperties>({
			nextPageToken: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** This resource represents a long-running operation that is the result of a network API call. */
	export interface GoogleLongrunningOperation {

		/** If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available. */
		done?: boolean | null;

		/** The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors). */
		error?: GoogleRpcStatus;

		/** Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any. */
		metadata?: {[id: string]: any };

		/** The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`. */
		name?: string | null;

		/** The normal, successful response of the operation. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`. */
		response?: {[id: string]: any };
	}

	/** This resource represents a long-running operation that is the result of a network API call. */
	export interface GoogleLongrunningOperationFormProperties {

		/** If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available. */
		done: FormControl<boolean | null | undefined>,

		/** Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any. */
		metadata: FormControl<{[id: string]: any } | null | undefined>,

		/** The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`. */
		name: FormControl<string | null | undefined>,

		/** The normal, successful response of the operation. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`. */
		response: FormControl<{[id: string]: any } | null | undefined>,
	}
	export function CreateGoogleLongrunningOperationFormGroup() {
		return new FormGroup<GoogleLongrunningOperationFormProperties>({
			done: new FormControl<boolean | null | undefined>(undefined),
			metadata: new FormControl<{[id: string]: any } | null | undefined>(undefined),
			name: new FormControl<string | null | undefined>(undefined),
			response: new FormControl<{[id: string]: any } | null | undefined>(undefined),
		});

	}


	/** A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } */
	export interface GoogleProtobufEmpty {
	}

	/** A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } */
	export interface GoogleProtobufEmptyFormProperties {
	}
	export function CreateGoogleProtobufEmptyFormGroup() {
		return new FormGroup<GoogleProtobufEmptyFormProperties>({
		});

	}

	@Injectable()
	export class MyClient {
		constructor(@Inject('baseUri') private baseUri: string = location.protocol + '//' + location.hostname + (location.port ? ':' + location.port : '') + '/', private http: HttpClient) {
		}

		/**
		 * Retrieves lineage of an Artifact represented through Artifacts and Executions connected by Event edges and returned as a LineageSubgraph.
		 * Get v1beta1/{artifact}:queryArtifactLineageSubgraph
		 * @param {string} artifact Required. The resource name of the Artifact whose Lineage needs to be retrieved as a LineageSubgraph. Format: `projects/{project}/locations/{location}/metadataStores/{metadatastore}/artifacts/{artifact}` The request may error with FAILED_PRECONDITION if the number of Artifacts, the number of Executions, or the number of Events that would be returned for the Context exceeds 1000.
		 * @param {string} filter Filter specifying the boolean condition for the Artifacts to satisfy in order to be part of the Lineage Subgraph. The syntax to define filter query is based on https://google.aip.dev/160. The supported set of filters include the following: * **Attribute filtering**: For example: `display_name = "test"` Supported fields include: `name`, `display_name`, `uri`, `state`, `schema_title`, `create_time`, and `update_time`. Time fields, such as `create_time` and `update_time`, require values specified in RFC-3339 format. For example: `create_time = "2020-11-19T11:30:00-04:00"` * **Metadata field**: To filter on metadata fields use traversal operation as follows: `metadata..`. For example: `metadata.field_1.number_value = 10.0` In case the field name contains special characters (such as colon), one can embed it inside double quote. For example: `metadata."field:1".number_value = 10.0` Each of the above supported filter types can be combined together using logical operators (`AND` & `OR`). Maximum nested expression depth allowed is 5. For example: `display_name = "test" AND metadata.field1.bool_value = true`.
		 * @param {number} maxHops Specifies the size of the lineage graph in terms of number of hops from the specified artifact. Negative Value: INVALID_ARGUMENT error is returned 0: Only input artifact is returned. No value: Transitive closure is performed to return the complete graph.
		 * @return {GoogleCloudAiplatformV1beta1LineageSubgraph} Successful response
		 */
		Aiplatform_projects_locations_metadataStores_artifacts_queryArtifactLineageSubgraph(artifact: string, filter: string | null | undefined, maxHops: number | null | undefined): Observable<GoogleCloudAiplatformV1beta1LineageSubgraph> {
			return this.http.get<GoogleCloudAiplatformV1beta1LineageSubgraph>(this.baseUri + 'v1beta1/' + (artifact == null ? '' : encodeURIComponent(artifact)) + ':queryArtifactLineageSubgraph&filter=' + (filter == null ? '' : encodeURIComponent(filter)) + '&maxHops=' + maxHops, {});
		}

		/**
		 * Adds a set of Artifacts and Executions to a Context. If any of the Artifacts or Executions have already been added to a Context, they are simply skipped.
		 * Post v1beta1/{context}:addContextArtifactsAndExecutions
		 * @param {string} context Required. The resource name of the Context that the Artifacts and Executions belong to. Format: `projects/{project}/locations/{location}/metadataStores/{metadatastore}/contexts/{context}`
		 * @return {GoogleCloudAiplatformV1beta1AddContextArtifactsAndExecutionsResponse} Successful response
		 */
		Aiplatform_projects_locations_metadataStores_contexts_addContextArtifactsAndExecutions(context: string, requestBody: GoogleCloudAiplatformV1beta1AddContextArtifactsAndExecutionsRequest): Observable<GoogleCloudAiplatformV1beta1AddContextArtifactsAndExecutionsResponse> {
			return this.http.post<GoogleCloudAiplatformV1beta1AddContextArtifactsAndExecutionsResponse>(this.baseUri + 'v1beta1/' + (context == null ? '' : encodeURIComponent(context)) + ':addContextArtifactsAndExecutions', JSON.stringify(requestBody), { headers: { 'Content-Type': 'application/json;charset=UTF-8' } });
		}

		/**
		 * Adds a set of Contexts as children to a parent Context. If any of the child Contexts have already been added to the parent Context, they are simply skipped. If this call would create a cycle or cause any Context to have more than 10 parents, the request will fail with an INVALID_ARGUMENT error.
		 * Post v1beta1/{context}:addContextChildren
		 * @param {string} context Required. The resource name of the parent Context. Format: `projects/{project}/locations/{location}/metadataStores/{metadatastore}/contexts/{context}`
		 * @return {GoogleCloudAiplatformV1beta1AddContextChildrenResponse} Successful response
		 */
		Aiplatform_projects_locations_metadataStores_contexts_addContextChildren(context: string, requestBody: GoogleCloudAiplatformV1beta1AddContextChildrenRequest): Observable<GoogleCloudAiplatformV1beta1AddContextChildrenResponse> {
			return this.http.post<GoogleCloudAiplatformV1beta1AddContextChildrenResponse>(this.baseUri + 'v1beta1/' + (context == null ? '' : encodeURIComponent(context)) + ':addContextChildren', JSON.stringify(requestBody), { headers: { 'Content-Type': 'application/json;charset=UTF-8' } });
		}

		/**
		 * Retrieves Artifacts and Executions within the specified Context, connected by Event edges and returned as a LineageSubgraph.
		 * Get v1beta1/{context}:queryContextLineageSubgraph
		 * @param {string} context Required. The resource name of the Context whose Artifacts and Executions should be retrieved as a LineageSubgraph. Format: `projects/{project}/locations/{location}/metadataStores/{metadatastore}/contexts/{context}` The request may error with FAILED_PRECONDITION if the number of Artifacts, the number of Executions, or the number of Events that would be returned for the Context exceeds 1000.
		 * @return {GoogleCloudAiplatformV1beta1LineageSubgraph} Successful response
		 */
		Aiplatform_projects_locations_metadataStores_contexts_queryContextLineageSubgraph(context: string): Observable<GoogleCloudAiplatformV1beta1LineageSubgraph> {
			return this.http.get<GoogleCloudAiplatformV1beta1LineageSubgraph>(this.baseUri + 'v1beta1/' + (context == null ? '' : encodeURIComponent(context)) + ':queryContextLineageSubgraph', {});
		}

		/**
		 * Remove a set of children contexts from a parent Context. If any of the child Contexts were NOT added to the parent Context, they are simply skipped.
		 * Post v1beta1/{context}:removeContextChildren
		 * @param {string} context Required. The resource name of the parent Context. Format: `projects/{project}/locations/{location}/metadataStores/{metadatastore}/contexts/{context}`
		 * @return {GoogleCloudAiplatformV1beta1RemoveContextChildrenResponse} Successful response
		 */
		Aiplatform_projects_locations_metadataStores_contexts_removeContextChildren(context: string, requestBody: GoogleCloudAiplatformV1beta1RemoveContextChildrenRequest): Observable<GoogleCloudAiplatformV1beta1RemoveContextChildrenResponse> {
			return this.http.post<GoogleCloudAiplatformV1beta1RemoveContextChildrenResponse>(this.baseUri + 'v1beta1/' + (context == null ? '' : encodeURIComponent(context)) + ':removeContextChildren', JSON.stringify(requestBody), { headers: { 'Content-Type': 'application/json;charset=UTF-8' } });
		}

		/**
		 * Searches DataItems in a Dataset.
		 * Get v1beta1/{dataset}:searchDataItems
		 * @param {string} dataset Required. The resource name of the Dataset from which to search DataItems. Format: `projects/{project}/locations/{location}/datasets/{dataset}`
		 * @param {Array<string>} annotationFilters An expression that specifies what Annotations will be returned per DataItem. Annotations satisfied either of the conditions will be returned. * `annotation_spec_id` - for = or !=. Must specify `saved_query_id=` - saved query id that annotations should belong to.
		 * @param {string} annotationsFilter An expression for filtering the Annotations that will be returned per DataItem. * `annotation_spec_id` - for = or !=.
		 * @param {number} annotationsLimit If set, only up to this many of Annotations will be returned per DataItemView. The maximum value is 1000. If not set, the maximum value will be used.
		 * @param {string} dataItemFilter An expression for filtering the DataItem that will be returned. * `data_item_id` - for = or !=. * `labeled` - for = or !=. * `has_annotation(ANNOTATION_SPEC_ID)` - true only for DataItem that have at least one annotation with annotation_spec_id = `ANNOTATION_SPEC_ID` in the context of SavedQuery or DataLabelingJob. For example: * `data_item=1` * `has_annotation(5)`
		 * @param {string} dataLabelingJob The resource name of a DataLabelingJob. Format: `projects/{project}/locations/{location}/dataLabelingJobs/{data_labeling_job}` If this field is set, all of the search will be done in the context of this DataLabelingJob.
		 * @param {string} fieldMask Mask specifying which fields of DataItemView to read.
		 * @param {string} orderBy A comma-separated list of fields to order by, sorted in ascending order. Use "desc" after a field name for descending.
		 * @param {string} orderByAnnotation_orderBy A comma-separated list of annotation fields to order by, sorted in ascending order. Use "desc" after a field name for descending. Must also specify saved_query.
		 * @param {string} orderByAnnotation_savedQuery Required. Saved query of the Annotation. Only Annotations belong to this saved query will be considered for ordering.
		 * @param {string} orderByDataItem A comma-separated list of data item fields to order by, sorted in ascending order. Use "desc" after a field name for descending.
		 * @param {number} pageSize Requested page size. Server may return fewer results than requested. Default and maximum page size is 100.
		 * @param {string} pageToken A token identifying a page of results for the server to return Typically obtained via SearchDataItemsResponse.next_page_token of the previous DatasetService.SearchDataItems call.
		 * @param {string} savedQuery The resource name of a SavedQuery(annotation set in UI). Format: `projects/{project}/locations/{location}/datasets/{dataset}/savedQueries/{saved_query}` All of the search will be done in the context of this SavedQuery.
		 * @return {GoogleCloudAiplatformV1beta1SearchDataItemsResponse} Successful response
		 */
		Aiplatform_projects_locations_datasets_searchDataItems(dataset: string, annotationFilters: Array<string> | null | undefined, annotationsFilter: string | null | undefined, annotationsLimit: number | null | undefined, dataItemFilter: string | null | undefined, dataLabelingJob: string | null | undefined, fieldMask: string | null | undefined, orderBy: string | null | undefined, orderByAnnotation_orderBy: string | null | undefined, orderByAnnotation_savedQuery: string | null | undefined, orderByDataItem: string | null | undefined, pageSize: number | null | undefined, pageToken: string | null | undefined, savedQuery: string | null | undefined): Observable<GoogleCloudAiplatformV1beta1SearchDataItemsResponse> {
			return this.http.get<GoogleCloudAiplatformV1beta1SearchDataItemsResponse>(this.baseUri + 'v1beta1/' + (dataset == null ? '' : encodeURIComponent(dataset)) + ':searchDataItems&' + annotationFilters?.map(z => `annotationFilters=${encodeURIComponent(z)}`).join('&') + '&annotationsFilter=' + (annotationsFilter == null ? '' : encodeURIComponent(annotationsFilter)) + '&annotationsLimit=' + annotationsLimit + '&dataItemFilter=' + (dataItemFilter == null ? '' : encodeURIComponent(dataItemFilter)) + '&dataLabelingJob=' + (dataLabelingJob == null ? '' : encodeURIComponent(dataLabelingJob)) + '&fieldMask=' + (fieldMask == null ? '' : encodeURIComponent(fieldMask)) + '&orderBy=' + (orderBy == null ? '' : encodeURIComponent(orderBy)) + '&orderByAnnotation_orderBy=' + (orderByAnnotation_orderBy == null ? '' : encodeURIComponent(orderByAnnotation_orderBy)) + '&orderByAnnotation_savedQuery=' + (orderByAnnotation_savedQuery == null ? '' : encodeURIComponent(orderByAnnotation_savedQuery)) + '&orderByDataItem=' + (orderByDataItem == null ? '' : encodeURIComponent(orderByDataItem)) + '&pageSize=' + pageSize + '&pageToken=' + (pageToken == null ? '' : encodeURIComponent(pageToken)) + '&savedQuery=' + (savedQuery == null ? '' : encodeURIComponent(savedQuery)), {});
		}

		/**
		 * List DeployedModels that have been deployed on this DeploymentResourcePool.
		 * Get v1beta1/{deploymentResourcePool}:queryDeployedModels
		 * @param {string} deploymentResourcePool Required. The name of the target DeploymentResourcePool to query. Format: `projects/{project}/locations/{location}/deploymentResourcePools/{deployment_resource_pool}`
		 * @param {number} pageSize The maximum number of DeployedModels to return. The service may return fewer than this value.
		 * @param {string} pageToken A page token, received from a previous `QueryDeployedModels` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `QueryDeployedModels` must match the call that provided the page token.
		 * @return {GoogleCloudAiplatformV1beta1QueryDeployedModelsResponse} Successful response
		 */
		Aiplatform_projects_locations_deploymentResourcePools_queryDeployedModels(deploymentResourcePool: string, pageSize: number | null | undefined, pageToken: string | null | undefined): Observable<GoogleCloudAiplatformV1beta1QueryDeployedModelsResponse> {
			return this.http.get<GoogleCloudAiplatformV1beta1QueryDeployedModelsResponse>(this.baseUri + 'v1beta1/' + (deploymentResourcePool == null ? '' : encodeURIComponent(deploymentResourcePool)) + ':queryDeployedModels&pageSize=' + pageSize + '&pageToken=' + (pageToken == null ? '' : encodeURIComponent(pageToken)), {});
		}

		/**
		 * Return a list of tokens based on the input text.
		 * Post v1beta1/{endpoint}:computeTokens
		 * @param {string} endpoint Required. The name of the Endpoint requested to get lists of tokens and token ids.
		 * @return {GoogleCloudAiplatformV1beta1ComputeTokensResponse} Successful response
		 */
		Aiplatform_projects_locations_publishers_models_computeTokens(endpoint: string, requestBody: GoogleCloudAiplatformV1beta1ComputeTokensRequest): Observable<GoogleCloudAiplatformV1beta1ComputeTokensResponse> {
			return this.http.post<GoogleCloudAiplatformV1beta1ComputeTokensResponse>(this.baseUri + 'v1beta1/' + (endpoint == null ? '' : encodeURIComponent(endpoint)) + ':computeTokens', JSON.stringify(requestBody), { headers: { 'Content-Type': 'application/json;charset=UTF-8' } });
		}

		/**
		 * Perform a token counting.
		 * Post v1beta1/{endpoint}:countTokens
		 * @param {string} endpoint Required. The name of the Endpoint requested to perform token counting. Format: `projects/{project}/locations/{location}/endpoints/{endpoint}`
		 * @return {GoogleCloudAiplatformV1beta1CountTokensResponse} Successful response
		 */
		Aiplatform_projects_locations_publishers_models_countTokens(endpoint: string, requestBody: GoogleCloudAiplatformV1beta1CountTokensRequest): Observable<GoogleCloudAiplatformV1beta1CountTokensResponse> {
			return this.http.post<GoogleCloudAiplatformV1beta1CountTokensResponse>(this.baseUri + 'v1beta1/' + (endpoint == null ? '' : encodeURIComponent(endpoint)) + ':countTokens', JSON.stringify(requestBody), { headers: { 'Content-Type': 'application/json;charset=UTF-8' } });
		}

		/**
		 * Deploys a Model into this Endpoint, creating a DeployedModel within it.
		 * Post v1beta1/{endpoint}:deployModel
		 * @param {string} endpoint Required. The name of the Endpoint resource into which to deploy a Model. Format: `projects/{project}/locations/{location}/endpoints/{endpoint}`
		 * @return {GoogleLongrunningOperation} Successful response
		 */
		Aiplatform_projects_locations_endpoints_deployModel(endpoint: string, requestBody: GoogleCloudAiplatformV1beta1DeployModelRequest): Observable<GoogleLongrunningOperation> {
			return this.http.post<GoogleLongrunningOperation>(this.baseUri + 'v1beta1/' + (endpoint == null ? '' : encodeURIComponent(endpoint)) + ':deployModel', JSON.stringify(requestBody), { headers: { 'Content-Type': 'application/json;charset=UTF-8' } });
		}

		/**
		 * Perform an unary online prediction request for Vertex first-party products and frameworks.
		 * Post v1beta1/{endpoint}:directPredict
		 * @param {string} endpoint Required. The name of the Endpoint requested to serve the prediction. Format: `projects/{project}/locations/{location}/endpoints/{endpoint}`
		 * @return {GoogleCloudAiplatformV1beta1DirectPredictResponse} Successful response
		 */
		Aiplatform_projects_locations_endpoints_directPredict(endpoint: string, requestBody: GoogleCloudAiplatformV1beta1DirectPredictRequest): Observable<GoogleCloudAiplatformV1beta1DirectPredictResponse> {
			return this.http.post<GoogleCloudAiplatformV1beta1DirectPredictResponse>(this.baseUri + 'v1beta1/' + (endpoint == null ? '' : encodeURIComponent(endpoint)) + ':directPredict', JSON.stringify(requestBody), { headers: { 'Content-Type': 'application/json;charset=UTF-8' } });
		}

		/**
		 * Perform an online prediction request through gRPC.
		 * Post v1beta1/{endpoint}:directRawPredict
		 * @param {string} endpoint Required. The name of the Endpoint requested to serve the prediction. Format: `projects/{project}/locations/{location}/endpoints/{endpoint}`
		 * @return {GoogleCloudAiplatformV1beta1DirectRawPredictResponse} Successful response
		 */
		Aiplatform_projects_locations_endpoints_directRawPredict(endpoint: string, requestBody: GoogleCloudAiplatformV1beta1DirectRawPredictRequest): Observable<GoogleCloudAiplatformV1beta1DirectRawPredictResponse> {
			return this.http.post<GoogleCloudAiplatformV1beta1DirectRawPredictResponse>(this.baseUri + 'v1beta1/' + (endpoint == null ? '' : encodeURIComponent(endpoint)) + ':directRawPredict', JSON.stringify(requestBody), { headers: { 'Content-Type': 'application/json;charset=UTF-8' } });
		}

		/**
		 * Perform an online explanation. If deployed_model_id is specified, the corresponding DeployModel must have explanation_spec populated. If deployed_model_id is not specified, all DeployedModels must have explanation_spec populated.
		 * Post v1beta1/{endpoint}:explain
		 * @param {string} endpoint Required. The name of the Endpoint requested to serve the explanation. Format: `projects/{project}/locations/{location}/endpoints/{endpoint}`
		 * @return {GoogleCloudAiplatformV1beta1ExplainResponse} Successful response
		 */
		Aiplatform_projects_locations_endpoints_explain(endpoint: string, requestBody: GoogleCloudAiplatformV1beta1ExplainRequest): Observable<GoogleCloudAiplatformV1beta1ExplainResponse> {
			return this.http.post<GoogleCloudAiplatformV1beta1ExplainResponse>(this.baseUri + 'v1beta1/' + (endpoint == null ? '' : encodeURIComponent(endpoint)) + ':explain', JSON.stringify(requestBody), { headers: { 'Content-Type': 'application/json;charset=UTF-8' } });
		}

		/**
		 * Updates an existing deployed model. Updatable fields include `min_replica_count`, `max_replica_count`, `autoscaling_metric_specs`, `disable_container_logging` (v1 only), and `enable_container_logging` (v1beta1 only).
		 * Post v1beta1/{endpoint}:mutateDeployedModel
		 * @param {string} endpoint Required. The name of the Endpoint resource into which to mutate a DeployedModel. Format: `projects/{project}/locations/{location}/endpoints/{endpoint}`
		 * @return {GoogleLongrunningOperation} Successful response
		 */
		Aiplatform_projects_locations_endpoints_mutateDeployedModel(endpoint: string, requestBody: GoogleCloudAiplatformV1beta1MutateDeployedModelRequest): Observable<GoogleLongrunningOperation> {
			return this.http.post<GoogleLongrunningOperation>(this.baseUri + 'v1beta1/' + (endpoint == null ? '' : encodeURIComponent(endpoint)) + ':mutateDeployedModel', JSON.stringify(requestBody), { headers: { 'Content-Type': 'application/json;charset=UTF-8' } });
		}

		/**
		 * Perform an online prediction.
		 * Post v1beta1/{endpoint}:predict
		 * @param {string} endpoint Required. The name of the Endpoint requested to serve the prediction. Format: `projects/{project}/locations/{location}/endpoints/{endpoint}`
		 * @return {GoogleCloudAiplatformV1beta1PredictResponse} Successful response
		 */
		Aiplatform_projects_locations_publishers_models_predict(endpoint: string, requestBody: GoogleCloudAiplatformV1beta1PredictRequest): Observable<GoogleCloudAiplatformV1beta1PredictResponse> {
			return this.http.post<GoogleCloudAiplatformV1beta1PredictResponse>(this.baseUri + 'v1beta1/' + (endpoint == null ? '' : encodeURIComponent(endpoint)) + ':predict', JSON.stringify(requestBody), { headers: { 'Content-Type': 'application/json;charset=UTF-8' } });
		}

		/**
		 * Perform an online prediction with an arbitrary HTTP payload. The response includes the following HTTP headers: * `X-Vertex-AI-Endpoint-Id`: ID of the Endpoint that served this prediction. * `X-Vertex-AI-Deployed-Model-Id`: ID of the Endpoint's DeployedModel that served this prediction.
		 * Post v1beta1/{endpoint}:rawPredict
		 * @param {string} endpoint Required. The name of the Endpoint requested to serve the prediction. Format: `projects/{project}/locations/{location}/endpoints/{endpoint}`
		 * @return {GoogleApiHttpBody} Successful response
		 */
		Aiplatform_projects_locations_publishers_models_rawPredict(endpoint: string, requestBody: GoogleCloudAiplatformV1beta1RawPredictRequest): Observable<GoogleApiHttpBody> {
			return this.http.post<GoogleApiHttpBody>(this.baseUri + 'v1beta1/' + (endpoint == null ? '' : encodeURIComponent(endpoint)) + ':rawPredict', JSON.stringify(requestBody), { headers: { 'Content-Type': 'application/json;charset=UTF-8' } });
		}

		/**
		 * Perform a server-side streaming online prediction request for Vertex LLM streaming.
		 * Post v1beta1/{endpoint}:serverStreamingPredict
		 * @param {string} endpoint Required. The name of the Endpoint requested to serve the prediction. Format: `projects/{project}/locations/{location}/endpoints/{endpoint}`
		 * @return {GoogleCloudAiplatformV1beta1StreamingPredictResponse} Successful response
		 */
		Aiplatform_projects_locations_publishers_models_serverStreamingPredict(endpoint: string, requestBody: GoogleCloudAiplatformV1beta1StreamingPredictRequest): Observable<GoogleCloudAiplatformV1beta1StreamingPredictResponse> {
			return this.http.post<GoogleCloudAiplatformV1beta1StreamingPredictResponse>(this.baseUri + 'v1beta1/' + (endpoint == null ? '' : encodeURIComponent(endpoint)) + ':serverStreamingPredict', JSON.stringify(requestBody), { headers: { 'Content-Type': 'application/json;charset=UTF-8' } });
		}

		/**
		 * Undeploys a Model from an Endpoint, removing a DeployedModel from it, and freeing all resources it's using.
		 * Post v1beta1/{endpoint}:undeployModel
		 * @param {string} endpoint Required. The name of the Endpoint resource from which to undeploy a Model. Format: `projects/{project}/locations/{location}/endpoints/{endpoint}`
		 * @return {GoogleLongrunningOperation} Successful response
		 */
		Aiplatform_projects_locations_endpoints_undeployModel(endpoint: string, requestBody: GoogleCloudAiplatformV1beta1UndeployModelRequest): Observable<GoogleLongrunningOperation> {
			return this.http.post<GoogleLongrunningOperation>(this.baseUri + 'v1beta1/' + (endpoint == null ? '' : encodeURIComponent(endpoint)) + ':undeployModel', JSON.stringify(requestBody), { headers: { 'Content-Type': 'application/json;charset=UTF-8' } });
		}

		/**
		 * Delete Feature values from Featurestore. The progress of the deletion is tracked by the returned operation. The deleted feature values are guaranteed to be invisible to subsequent read operations after the operation is marked as successfully done. If a delete feature values operation fails, the feature values returned from reads and exports may be inconsistent. If consistency is required, the caller must retry the same delete request again and wait till the new operation returned is marked as successfully done.
		 * Post v1beta1/{entityType}:deleteFeatureValues
		 * @param {string} entityType Required. The resource name of the EntityType grouping the Features for which values are being deleted from. Format: `projects/{project}/locations/{location}/featurestores/{featurestore}/entityTypes/{entityType}`
		 * @return {GoogleLongrunningOperation} Successful response
		 */
		Aiplatform_projects_locations_featurestores_entityTypes_deleteFeatureValues(entityType: string, requestBody: GoogleCloudAiplatformV1beta1DeleteFeatureValuesRequest): Observable<GoogleLongrunningOperation> {
			return this.http.post<GoogleLongrunningOperation>(this.baseUri + 'v1beta1/' + (entityType == null ? '' : encodeURIComponent(entityType)) + ':deleteFeatureValues', JSON.stringify(requestBody), { headers: { 'Content-Type': 'application/json;charset=UTF-8' } });
		}

		/**
		 * Exports Feature values from all the entities of a target EntityType.
		 * Post v1beta1/{entityType}:exportFeatureValues
		 * @param {string} entityType Required. The resource name of the EntityType from which to export Feature values. Format: `projects/{project}/locations/{location}/featurestores/{featurestore}/entityTypes/{entity_type}`
		 * @return {GoogleLongrunningOperation} Successful response
		 */
		Aiplatform_projects_locations_featurestores_entityTypes_exportFeatureValues(entityType: string, requestBody: GoogleCloudAiplatformV1beta1ExportFeatureValuesRequest): Observable<GoogleLongrunningOperation> {
			return this.http.post<GoogleLongrunningOperation>(this.baseUri + 'v1beta1/' + (entityType == null ? '' : encodeURIComponent(entityType)) + ':exportFeatureValues', JSON.stringify(requestBody), { headers: { 'Content-Type': 'application/json;charset=UTF-8' } });
		}

		/**
		 * Imports Feature values into the Featurestore from a source storage. The progress of the import is tracked by the returned operation. The imported features are guaranteed to be visible to subsequent read operations after the operation is marked as successfully done. If an import operation fails, the Feature values returned from reads and exports may be inconsistent. If consistency is required, the caller must retry the same import request again and wait till the new operation returned is marked as successfully done. There are also scenarios where the caller can cause inconsistency. - Source data for import contains multiple distinct Feature values for the same entity ID and timestamp. - Source is modified during an import. This includes adding, updating, or removing source data and/or metadata. Examples of updating metadata include but are not limited to changing storage location, storage class, or retention policy. - Online serving cluster is under-provisioned.
		 * Post v1beta1/{entityType}:importFeatureValues
		 * @param {string} entityType Required. The resource name of the EntityType grouping the Features for which values are being imported. Format: `projects/{project}/locations/{location}/featurestores/{featurestore}/entityTypes/{entityType}`
		 * @return {GoogleLongrunningOperation} Successful response
		 */
		Aiplatform_projects_locations_featurestores_entityTypes_importFeatureValues(entityType: string, requestBody: GoogleCloudAiplatformV1beta1ImportFeatureValuesRequest): Observable<GoogleLongrunningOperation> {
			return this.http.post<GoogleLongrunningOperation>(this.baseUri + 'v1beta1/' + (entityType == null ? '' : encodeURIComponent(entityType)) + ':importFeatureValues', JSON.stringify(requestBody), { headers: { 'Content-Type': 'application/json;charset=UTF-8' } });
		}

		/**
		 * Reads Feature values of a specific entity of an EntityType. For reading feature values of multiple entities of an EntityType, please use StreamingReadFeatureValues.
		 * Post v1beta1/{entityType}:readFeatureValues
		 * @param {string} entityType Required. The resource name of the EntityType for the entity being read. Value format: `projects/{project}/locations/{location}/featurestores/{featurestore}/entityTypes/{entityType}`. For example, for a machine learning model predicting user clicks on a website, an EntityType ID could be `user`.
		 * @return {GoogleCloudAiplatformV1beta1ReadFeatureValuesResponse} Successful response
		 */
		Aiplatform_projects_locations_featurestores_entityTypes_readFeatureValues(entityType: string, requestBody: GoogleCloudAiplatformV1beta1ReadFeatureValuesRequest): Observable<GoogleCloudAiplatformV1beta1ReadFeatureValuesResponse> {
			return this.http.post<GoogleCloudAiplatformV1beta1ReadFeatureValuesResponse>(this.baseUri + 'v1beta1/' + (entityType == null ? '' : encodeURIComponent(entityType)) + ':readFeatureValues', JSON.stringify(requestBody), { headers: { 'Content-Type': 'application/json;charset=UTF-8' } });
		}

		/**
		 * Reads Feature values for multiple entities. Depending on their size, data for different entities may be broken up across multiple responses.
		 * Post v1beta1/{entityType}:streamingReadFeatureValues
		 * @param {string} entityType Required. The resource name of the entities' type. Value format: `projects/{project}/locations/{location}/featurestores/{featurestore}/entityTypes/{entityType}`. For example, for a machine learning model predicting user clicks on a website, an EntityType ID could be `user`.
		 * @return {GoogleCloudAiplatformV1beta1ReadFeatureValuesResponse} Successful response
		 */
		Aiplatform_projects_locations_featurestores_entityTypes_streamingReadFeatureValues(entityType: string, requestBody: GoogleCloudAiplatformV1beta1StreamingReadFeatureValuesRequest): Observable<GoogleCloudAiplatformV1beta1ReadFeatureValuesResponse> {
			return this.http.post<GoogleCloudAiplatformV1beta1ReadFeatureValuesResponse>(this.baseUri + 'v1beta1/' + (entityType == null ? '' : encodeURIComponent(entityType)) + ':streamingReadFeatureValues', JSON.stringify(requestBody), { headers: { 'Content-Type': 'application/json;charset=UTF-8' } });
		}

		/**
		 * Writes Feature values of one or more entities of an EntityType. The Feature values are merged into existing entities if any. The Feature values to be written must have timestamp within the online storage retention.
		 * Post v1beta1/{entityType}:writeFeatureValues
		 * @param {string} entityType Required. The resource name of the EntityType for the entities being written. Value format: `projects/{project}/locations/{location}/featurestores/ {featurestore}/entityTypes/{entityType}`. For example, for a machine learning model predicting user clicks on a website, an EntityType ID could be `user`.
		 * @return {GoogleCloudAiplatformV1beta1WriteFeatureValuesResponse} Successful response
		 */
		Aiplatform_projects_locations_featurestores_entityTypes_writeFeatureValues(entityType: string, requestBody: GoogleCloudAiplatformV1beta1WriteFeatureValuesRequest): Observable<GoogleCloudAiplatformV1beta1WriteFeatureValuesResponse> {
			return this.http.post<GoogleCloudAiplatformV1beta1WriteFeatureValuesResponse>(this.baseUri + 'v1beta1/' + (entityType == null ? '' : encodeURIComponent(entityType)) + ':writeFeatureValues', JSON.stringify(requestBody), { headers: { 'Content-Type': 'application/json;charset=UTF-8' } });
		}

		/**
		 * Adds Events to the specified Execution. An Event indicates whether an Artifact was used as an input or output for an Execution. If an Event already exists between the Execution and the Artifact, the Event is skipped.
		 * Post v1beta1/{execution}:addExecutionEvents
		 * @param {string} execution Required. The resource name of the Execution that the Events connect Artifacts with. Format: `projects/{project}/locations/{location}/metadataStores/{metadatastore}/executions/{execution}`
		 * @return {GoogleCloudAiplatformV1beta1AddExecutionEventsResponse} Successful response
		 */
		Aiplatform_projects_locations_metadataStores_executions_addExecutionEvents(execution: string, requestBody: GoogleCloudAiplatformV1beta1AddExecutionEventsRequest): Observable<GoogleCloudAiplatformV1beta1AddExecutionEventsResponse> {
			return this.http.post<GoogleCloudAiplatformV1beta1AddExecutionEventsResponse>(this.baseUri + 'v1beta1/' + (execution == null ? '' : encodeURIComponent(execution)) + ':addExecutionEvents', JSON.stringify(requestBody), { headers: { 'Content-Type': 'application/json;charset=UTF-8' } });
		}

		/**
		 * Obtains the set of input and output Artifacts for this Execution, in the form of LineageSubgraph that also contains the Execution and connecting Events.
		 * Get v1beta1/{execution}:queryExecutionInputsAndOutputs
		 * @param {string} execution Required. The resource name of the Execution whose input and output Artifacts should be retrieved as a LineageSubgraph. Format: `projects/{project}/locations/{location}/metadataStores/{metadatastore}/executions/{execution}`
		 * @return {GoogleCloudAiplatformV1beta1LineageSubgraph} Successful response
		 */
		Aiplatform_projects_locations_metadataStores_executions_queryExecutionInputsAndOutputs(execution: string): Observable<GoogleCloudAiplatformV1beta1LineageSubgraph> {
			return this.http.get<GoogleCloudAiplatformV1beta1LineageSubgraph>(this.baseUri + 'v1beta1/' + (execution == null ? '' : encodeURIComponent(execution)) + ':queryExecutionInputsAndOutputs', {});
		}

		/**
		 * Fetch feature values under a FeatureView.
		 * Post v1beta1/{featureView}:fetchFeatureValues
		 * @param {string} featureView Required. FeatureView resource format `projects/{project}/locations/{location}/featureOnlineStores/{featureOnlineStore}/featureViews/{featureView}`
		 * @return {GoogleCloudAiplatformV1beta1FetchFeatureValuesResponse} Successful response
		 */
		Aiplatform_projects_locations_featureOnlineStores_featureViews_fetchFeatureValues(featureView: string, requestBody: GoogleCloudAiplatformV1beta1FetchFeatureValuesRequest): Observable<GoogleCloudAiplatformV1beta1FetchFeatureValuesResponse> {
			return this.http.post<GoogleCloudAiplatformV1beta1FetchFeatureValuesResponse>(this.baseUri + 'v1beta1/' + (featureView == null ? '' : encodeURIComponent(featureView)) + ':fetchFeatureValues', JSON.stringify(requestBody), { headers: { 'Content-Type': 'application/json;charset=UTF-8' } });
		}

		/**
		 * Search the nearest entities under a FeatureView. Search only works for indexable feature view; if a feature view isn't indexable, returns Invalid argument response.
		 * Post v1beta1/{featureView}:searchNearestEntities
		 * @param {string} featureView Required. FeatureView resource format `projects/{project}/locations/{location}/featureOnlineStores/{featureOnlineStore}/featureViews/{featureView}`
		 * @return {GoogleCloudAiplatformV1beta1SearchNearestEntitiesResponse} Successful response
		 */
		Aiplatform_projects_locations_featureOnlineStores_featureViews_searchNearestEntities(featureView: string, requestBody: GoogleCloudAiplatformV1beta1SearchNearestEntitiesRequest): Observable<GoogleCloudAiplatformV1beta1SearchNearestEntitiesResponse> {
			return this.http.post<GoogleCloudAiplatformV1beta1SearchNearestEntitiesResponse>(this.baseUri + 'v1beta1/' + (featureView == null ? '' : encodeURIComponent(featureView)) + ':searchNearestEntities', JSON.stringify(requestBody), { headers: { 'Content-Type': 'application/json;charset=UTF-8' } });
		}

		/**
		 * Triggers on-demand sync for the FeatureView.
		 * Post v1beta1/{featureView}:sync
		 * @param {string} featureView Required. Format: `projects/{project}/locations/{location}/featureOnlineStores/{feature_online_store}/featureViews/{feature_view}`
		 * @return {GoogleCloudAiplatformV1beta1SyncFeatureViewResponse} Successful response
		 */
		Aiplatform_projects_locations_featureOnlineStores_featureViews_sync(featureView: string, requestBody: GoogleCloudAiplatformV1beta1SyncFeatureViewRequest): Observable<GoogleCloudAiplatformV1beta1SyncFeatureViewResponse> {
			return this.http.post<GoogleCloudAiplatformV1beta1SyncFeatureViewResponse>(this.baseUri + 'v1beta1/' + (featureView == null ? '' : encodeURIComponent(featureView)) + ':sync', JSON.stringify(requestBody), { headers: { 'Content-Type': 'application/json;charset=UTF-8' } });
		}

		/**
		 * Batch reads Feature values from a Featurestore. This API enables batch reading Feature values, where each read instance in the batch may read Feature values of entities from one or more EntityTypes. Point-in-time correctness is guaranteed for Feature values of each read instance as of each instance's read timestamp.
		 * Post v1beta1/{featurestore}:batchReadFeatureValues
		 * @param {string} featurestore Required. The resource name of the Featurestore from which to query Feature values. Format: `projects/{project}/locations/{location}/featurestores/{featurestore}`
		 * @return {GoogleLongrunningOperation} Successful response
		 */
		Aiplatform_projects_locations_featurestores_batchReadFeatureValues(featurestore: string, requestBody: GoogleCloudAiplatformV1beta1BatchReadFeatureValuesRequest): Observable<GoogleLongrunningOperation> {
			return this.http.post<GoogleLongrunningOperation>(this.baseUri + 'v1beta1/' + (featurestore == null ? '' : encodeURIComponent(featurestore)) + ':batchReadFeatureValues', JSON.stringify(requestBody), { headers: { 'Content-Type': 'application/json;charset=UTF-8' } });
		}

		/**
		 * Deploys an Index into this IndexEndpoint, creating a DeployedIndex within it. Only non-empty Indexes can be deployed.
		 * Post v1beta1/{indexEndpoint}:deployIndex
		 * @param {string} indexEndpoint Required. The name of the IndexEndpoint resource into which to deploy an Index. Format: `projects/{project}/locations/{location}/indexEndpoints/{index_endpoint}`
		 * @return {GoogleLongrunningOperation} Successful response
		 */
		Aiplatform_projects_locations_indexEndpoints_deployIndex(indexEndpoint: string, requestBody: GoogleCloudAiplatformV1beta1DeployIndexRequest): Observable<GoogleLongrunningOperation> {
			return this.http.post<GoogleLongrunningOperation>(this.baseUri + 'v1beta1/' + (indexEndpoint == null ? '' : encodeURIComponent(indexEndpoint)) + ':deployIndex', JSON.stringify(requestBody), { headers: { 'Content-Type': 'application/json;charset=UTF-8' } });
		}

		/**
		 * Finds the nearest neighbors of each vector within the request.
		 * Post v1beta1/{indexEndpoint}:findNeighbors
		 * @param {string} indexEndpoint Required. The name of the index endpoint. Format: `projects/{project}/locations/{location}/indexEndpoints/{index_endpoint}`
		 * @return {GoogleCloudAiplatformV1beta1FindNeighborsResponse} Successful response
		 */
		Aiplatform_projects_locations_indexEndpoints_findNeighbors(indexEndpoint: string, requestBody: GoogleCloudAiplatformV1beta1FindNeighborsRequest): Observable<GoogleCloudAiplatformV1beta1FindNeighborsResponse> {
			return this.http.post<GoogleCloudAiplatformV1beta1FindNeighborsResponse>(this.baseUri + 'v1beta1/' + (indexEndpoint == null ? '' : encodeURIComponent(indexEndpoint)) + ':findNeighbors', JSON.stringify(requestBody), { headers: { 'Content-Type': 'application/json;charset=UTF-8' } });
		}

		/**
		 * Update an existing DeployedIndex under an IndexEndpoint.
		 * Post v1beta1/{indexEndpoint}:mutateDeployedIndex
		 * @param {string} indexEndpoint Required. The name of the IndexEndpoint resource into which to deploy an Index. Format: `projects/{project}/locations/{location}/indexEndpoints/{index_endpoint}`
		 * @return {GoogleLongrunningOperation} Successful response
		 */
		Aiplatform_projects_locations_indexEndpoints_mutateDeployedIndex(indexEndpoint: string, requestBody: GoogleCloudAiplatformV1beta1DeployedIndex): Observable<GoogleLongrunningOperation> {
			return this.http.post<GoogleLongrunningOperation>(this.baseUri + 'v1beta1/' + (indexEndpoint == null ? '' : encodeURIComponent(indexEndpoint)) + ':mutateDeployedIndex', JSON.stringify(requestBody), { headers: { 'Content-Type': 'application/json;charset=UTF-8' } });
		}

		/**
		 * Reads the datapoints/vectors of the given IDs. A maximum of 1000 datapoints can be retrieved in a batch.
		 * Post v1beta1/{indexEndpoint}:readIndexDatapoints
		 * @param {string} indexEndpoint Required. The name of the index endpoint. Format: `projects/{project}/locations/{location}/indexEndpoints/{index_endpoint}`
		 * @return {GoogleCloudAiplatformV1beta1ReadIndexDatapointsResponse} Successful response
		 */
		Aiplatform_projects_locations_indexEndpoints_readIndexDatapoints(indexEndpoint: string, requestBody: GoogleCloudAiplatformV1beta1ReadIndexDatapointsRequest): Observable<GoogleCloudAiplatformV1beta1ReadIndexDatapointsResponse> {
			return this.http.post<GoogleCloudAiplatformV1beta1ReadIndexDatapointsResponse>(this.baseUri + 'v1beta1/' + (indexEndpoint == null ? '' : encodeURIComponent(indexEndpoint)) + ':readIndexDatapoints', JSON.stringify(requestBody), { headers: { 'Content-Type': 'application/json;charset=UTF-8' } });
		}

		/**
		 * Undeploys an Index from an IndexEndpoint, removing a DeployedIndex from it, and freeing all resources it's using.
		 * Post v1beta1/{indexEndpoint}:undeployIndex
		 * @param {string} indexEndpoint Required. The name of the IndexEndpoint resource from which to undeploy an Index. Format: `projects/{project}/locations/{location}/indexEndpoints/{index_endpoint}`
		 * @return {GoogleLongrunningOperation} Successful response
		 */
		Aiplatform_projects_locations_indexEndpoints_undeployIndex(indexEndpoint: string, requestBody: GoogleCloudAiplatformV1beta1UndeployIndexRequest): Observable<GoogleLongrunningOperation> {
			return this.http.post<GoogleLongrunningOperation>(this.baseUri + 'v1beta1/' + (indexEndpoint == null ? '' : encodeURIComponent(indexEndpoint)) + ':undeployIndex', JSON.stringify(requestBody), { headers: { 'Content-Type': 'application/json;charset=UTF-8' } });
		}

		/**
		 * Remove Datapoints from an Index.
		 * Post v1beta1/{index}:removeDatapoints
		 * @param {string} index Required. The name of the Index resource to be updated. Format: `projects/{project}/locations/{location}/indexes/{index}`
		 * @return {GoogleCloudAiplatformV1beta1RemoveDatapointsResponse} Successful response
		 */
		Aiplatform_projects_locations_indexes_removeDatapoints(index: string, requestBody: GoogleCloudAiplatformV1beta1RemoveDatapointsRequest): Observable<GoogleCloudAiplatformV1beta1RemoveDatapointsResponse> {
			return this.http.post<GoogleCloudAiplatformV1beta1RemoveDatapointsResponse>(this.baseUri + 'v1beta1/' + (index == null ? '' : encodeURIComponent(index)) + ':removeDatapoints', JSON.stringify(requestBody), { headers: { 'Content-Type': 'application/json;charset=UTF-8' } });
		}

		/**
		 * Add/update Datapoints into an Index.
		 * Post v1beta1/{index}:upsertDatapoints
		 * @param {string} index Required. The name of the Index resource to be updated. Format: `projects/{project}/locations/{location}/indexes/{index}`
		 * @return {GoogleCloudAiplatformV1beta1UpsertDatapointsResponse} Successful response
		 */
		Aiplatform_projects_locations_indexes_upsertDatapoints(index: string, requestBody: GoogleCloudAiplatformV1beta1UpsertDatapointsRequest): Observable<GoogleCloudAiplatformV1beta1UpsertDatapointsResponse> {
			return this.http.post<GoogleCloudAiplatformV1beta1UpsertDatapointsResponse>(this.baseUri + 'v1beta1/' + (index == null ? '' : encodeURIComponent(index)) + ':upsertDatapoints', JSON.stringify(requestBody), { headers: { 'Content-Type': 'application/json;charset=UTF-8' } });
		}

		/**
		 * Searches Features matching a query in a given project.
		 * Get v1beta1/{location}/featurestores:searchFeatures
		 * @param {string} location Required. The resource name of the Location to search Features. Format: `projects/{project}/locations/{location}`
		 * @param {number} pageSize The maximum number of Features to return. The service may return fewer than this value. If unspecified, at most 100 Features will be returned. The maximum value is 100; any value greater than 100 will be coerced to 100.
		 * @param {string} pageToken A page token, received from a previous FeaturestoreService.SearchFeatures call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to FeaturestoreService.SearchFeatures, except `page_size`, must match the call that provided the page token.
		 * @param {string} query Query string that is a conjunction of field-restricted queries and/or field-restricted filters. Field-restricted queries and filters can be combined using `AND` to form a conjunction. A field query is in the form FIELD:QUERY. This implicitly checks if QUERY exists as a substring within Feature's FIELD. The QUERY and the FIELD are converted to a sequence of words (i.e. tokens) for comparison. This is done by: * Removing leading/trailing whitespace and tokenizing the search value. Characters that are not one of alphanumeric `[a-zA-Z0-9]`, underscore `_`, or asterisk `*` are treated as delimiters for tokens. `*` is treated as a wildcard that matches characters within a token. * Ignoring case. * Prepending an asterisk to the first and appending an asterisk to the last token in QUERY. A QUERY must be either a singular token or a phrase. A phrase is one or multiple words enclosed in double quotation marks ("). With phrases, the order of the words is important. Words in the phrase must be matching in order and consecutively. Supported FIELDs for field-restricted queries: * `feature_id` * `description` * `entity_type_id` Examples: * `feature_id: foo` --> Matches a Feature with ID containing the substring `foo` (eg. `foo`, `foofeature`, `barfoo`). * `feature_id: foo*feature` --> Matches a Feature with ID containing the substring `foo*feature` (eg. `foobarfeature`). * `feature_id: foo AND description: bar` --> Matches a Feature with ID containing the substring `foo` and description containing the substring `bar`. Besides field queries, the following exact-match filters are supported. The exact-match filters do not support wildcards. Unlike field-restricted queries, exact-match filters are case-sensitive. * `feature_id`: Supports = comparisons. * `description`: Supports = comparisons. Multi-token filters should be enclosed in quotes. * `entity_type_id`: Supports = comparisons. * `value_type`: Supports = and != comparisons. * `labels`: Supports key-value equality as well as key presence. * `featurestore_id`: Supports = comparisons. Examples: * `description = "foo bar"` --> Any Feature with description exactly equal to `foo bar` * `value_type = DOUBLE` --> Features whose type is DOUBLE. * `labels.active = yes AND labels.env = prod` --> Features having both (active: yes) and (env: prod) labels. * `labels.env: *` --> Any Feature which has a label with `env` as the key.
		 * @return {GoogleCloudAiplatformV1beta1SearchFeaturesResponse} Successful response
		 */
		Aiplatform_projects_locations_featurestores_searchFeatures(location: string, pageSize: number | null | undefined, pageToken: string | null | undefined, query: string | null | undefined): Observable<GoogleCloudAiplatformV1beta1SearchFeaturesResponse> {
			return this.http.get<GoogleCloudAiplatformV1beta1SearchFeaturesResponse>(this.baseUri + 'v1beta1/' + (location == null ? '' : encodeURIComponent(location)) + '/featurestores:searchFeatures&pageSize=' + pageSize + '&pageToken=' + (pageToken == null ? '' : encodeURIComponent(pageToken)) + '&query=' + (query == null ? '' : encodeURIComponent(query)), {});
		}

		/**
		 * Searches Model Monitoring Statistics generated within a given time window.
		 * Post v1beta1/{modelDeploymentMonitoringJob}:searchModelDeploymentMonitoringStatsAnomalies
		 * @param {string} modelDeploymentMonitoringJob Required. ModelDeploymentMonitoring Job resource name. Format: `projects/{project}/locations/{location}/modelDeploymentMonitoringJobs/{model_deployment_monitoring_job}`
		 * @return {GoogleCloudAiplatformV1beta1SearchModelDeploymentMonitoringStatsAnomaliesResponse} Successful response
		 */
		Aiplatform_projects_locations_modelDeploymentMonitoringJobs_searchModelDeploymentMonitoringStatsAnomalies(modelDeploymentMonitoringJob: string, requestBody: GoogleCloudAiplatformV1beta1SearchModelDeploymentMonitoringStatsAnomaliesRequest): Observable<GoogleCloudAiplatformV1beta1SearchModelDeploymentMonitoringStatsAnomaliesResponse> {
			return this.http.post<GoogleCloudAiplatformV1beta1SearchModelDeploymentMonitoringStatsAnomaliesResponse>(this.baseUri + 'v1beta1/' + (modelDeploymentMonitoringJob == null ? '' : encodeURIComponent(modelDeploymentMonitoringJob)) + ':searchModelDeploymentMonitoringStatsAnomalies', JSON.stringify(requestBody), { headers: { 'Content-Type': 'application/json;charset=UTF-8' } });
		}

		/**
		 * Generate content with multimodal inputs with streaming support.
		 * Post v1beta1/{model}:streamGenerateContent
		 * @param {string} model Required. The name of the publisher model requested to serve the prediction. Format: `projects/{project}/locations/{location}/publishers/models/*`
		 * @return {GoogleCloudAiplatformV1beta1GenerateContentResponse} Successful response
		 */
		Aiplatform_projects_locations_publishers_models_streamGenerateContent(model: string, requestBody: GoogleCloudAiplatformV1beta1GenerateContentRequest): Observable<GoogleCloudAiplatformV1beta1GenerateContentResponse> {
			return this.http.post<GoogleCloudAiplatformV1beta1GenerateContentResponse>(this.baseUri + 'v1beta1/' + (model == null ? '' : encodeURIComponent(model)) + ':streamGenerateContent', JSON.stringify(requestBody), { headers: { 'Content-Type': 'application/json;charset=UTF-8' } });
		}

		/**
		 * Incrementally update the dataset used for an examples model.
		 * Post v1beta1/{model}:updateExplanationDataset
		 * @param {string} model Required. The resource name of the Model to update. Format: `projects/{project}/locations/{location}/models/{model}`
		 * @return {GoogleLongrunningOperation} Successful response
		 */
		Aiplatform_projects_locations_models_updateExplanationDataset(model: string, requestBody: GoogleCloudAiplatformV1beta1UpdateExplanationDatasetRequest): Observable<GoogleLongrunningOperation> {
			return this.http.post<GoogleLongrunningOperation>(this.baseUri + 'v1beta1/' + (model == null ? '' : encodeURIComponent(model)) + ':updateExplanationDataset', JSON.stringify(requestBody), { headers: { 'Content-Type': 'application/json;charset=UTF-8' } });
		}

		/**
		 * Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.
		 * Delete v1beta1/{name}
		 * @param {string} name The name of the operation resource to be deleted.
		 * @param {boolean} force If set to true, any specialist managers in this SpecialistPool will also be deleted. (Otherwise, the request will only work if the SpecialistPool has no specialist managers.)
		 * @return {GoogleProtobufEmpty} Successful response
		 */
		Aiplatform_projects_locations_trainingPipelines_operations_delete(name: string, force: boolean | null | undefined): Observable<GoogleProtobufEmpty> {
			return this.http.delete<GoogleProtobufEmpty>(this.baseUri + 'v1beta1/' + (name == null ? '' : encodeURIComponent(name)) + '&force=' + force, {});
		}

		/**
		 * Gets a Model Garden publisher model.
		 * Get v1beta1/{name}
		 * @param {string} name Required. The name of the PublisherModel resource. Format: `publishers/{publisher}/models/{publisher_model}`
		 * @param {string} languageCode Optional. The IETF BCP-47 language code representing the language in which the publisher model's text information should be written in (see go/bcp47).
		 * @param {Aiplatform_publishers_models_getView} view Optional. PublisherModel view specifying which fields to read.
		 * @return {GoogleCloudAiplatformV1beta1PublisherModel} Successful response
		 */
		Aiplatform_publishers_models_get(name: string, languageCode: string | null | undefined, view: Aiplatform_publishers_models_getView | null | undefined): Observable<GoogleCloudAiplatformV1beta1PublisherModel> {
			return this.http.get<GoogleCloudAiplatformV1beta1PublisherModel>(this.baseUri + 'v1beta1/' + (name == null ? '' : encodeURIComponent(name)) + '&languageCode=' + (languageCode == null ? '' : encodeURIComponent(languageCode)) + '&view=' + view, {});
		}

		/**
		 * Updates a TensorboardTimeSeries.
		 * Patch v1beta1/{name}
		 * @param {string} name Output only. Name of the TensorboardTimeSeries.
		 * @param {string} updateMask Required. Field mask is used to specify the fields to be overwritten in the TensorboardTimeSeries resource by the update. The fields specified in the update_mask are relative to the resource, not the full request. A field is overwritten if it's in the mask. If the user does not provide a mask then all fields are overwritten if new values are specified.
		 * @return {GoogleCloudAiplatformV1beta1TensorboardTimeSeries} Successful response
		 */
		Aiplatform_projects_locations_tensorboards_experiments_runs_timeSeries_patch(name: string, updateMask: string | null | undefined, requestBody: GoogleCloudAiplatformV1beta1TensorboardTimeSeries): Observable<GoogleCloudAiplatformV1beta1TensorboardTimeSeries> {
			return this.http.patch<GoogleCloudAiplatformV1beta1TensorboardTimeSeries>(this.baseUri + 'v1beta1/' + (name == null ? '' : encodeURIComponent(name)) + '&updateMask=' + (updateMask == null ? '' : encodeURIComponent(updateMask)), JSON.stringify(requestBody), { headers: { 'Content-Type': 'application/json;charset=UTF-8' } });
		}

		/**
		 * Lists information about the supported locations for this service.
		 * Get v1beta1/{name}/locations
		 * @param {string} name The resource that owns the locations collection, if applicable.
		 * @param {string} filter A filter to narrow down results to a preferred subset. The filtering language accepts strings like `"displayName=tokyo"`, and is documented in more detail in [AIP-160](https://google.aip.dev/160).
		 * @param {number} pageSize The maximum number of results to return. If not set, the service selects a default.
		 * @param {string} pageToken A page token received from the `next_page_token` field in the response. Send that page token to receive the subsequent page.
		 * @return {GoogleCloudLocationListLocationsResponse} Successful response
		 */
		Aiplatform_projects_locations_list(name: string, filter: string | null | undefined, pageSize: number | null | undefined, pageToken: string | null | undefined): Observable<GoogleCloudLocationListLocationsResponse> {
			return this.http.get<GoogleCloudLocationListLocationsResponse>(this.baseUri + 'v1beta1/' + (name == null ? '' : encodeURIComponent(name)) + '/locations&filter=' + (filter == null ? '' : encodeURIComponent(filter)) + '&pageSize=' + pageSize + '&pageToken=' + (pageToken == null ? '' : encodeURIComponent(pageToken)), {});
		}

		/**
		 * Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`.
		 * Get v1beta1/{name}/operations
		 * @param {string} name The name of the operation's parent resource.
		 * @param {string} filter The standard list filter.
		 * @param {number} pageSize The standard list page size.
		 * @param {string} pageToken The standard list page token.
		 * @return {GoogleLongrunningListOperationsResponse} Successful response
		 */
		Aiplatform_projects_locations_trainingPipelines_operations_list(name: string, filter: string | null | undefined, pageSize: number | null | undefined, pageToken: string | null | undefined): Observable<GoogleLongrunningListOperationsResponse> {
			return this.http.get<GoogleLongrunningListOperationsResponse>(this.baseUri + 'v1beta1/' + (name == null ? '' : encodeURIComponent(name)) + '/operations&filter=' + (filter == null ? '' : encodeURIComponent(filter)) + '&pageSize=' + pageSize + '&pageToken=' + (pageToken == null ? '' : encodeURIComponent(pageToken)), {});
		}

		/**
		 * Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.
		 * Post v1beta1/{name}:cancel
		 * @param {string} name The name of the operation resource to be cancelled.
		 * @return {GoogleProtobufEmpty} Successful response
		 */
		Aiplatform_projects_locations_trainingPipelines_operations_cancel(name: string, requestBody: GoogleCloudAiplatformV1beta1CancelTrainingPipelineRequest): Observable<GoogleProtobufEmpty> {
			return this.http.post<GoogleProtobufEmpty>(this.baseUri + 'v1beta1/' + (name == null ? '' : encodeURIComponent(name)) + ':cancel', JSON.stringify(requestBody), { headers: { 'Content-Type': 'application/json;charset=UTF-8' } });
		}

		/**
		 * Marks a Trial as complete.
		 * Post v1beta1/{name}:complete
		 * @param {string} name Required. The Trial's name. Format: `projects/{project}/locations/{location}/studies/{study}/trials/{trial}`
		 * @return {GoogleCloudAiplatformV1beta1Trial} Successful response
		 */
		Aiplatform_projects_locations_studies_trials_complete(name: string, requestBody: GoogleCloudAiplatformV1beta1CompleteTrialRequest): Observable<GoogleCloudAiplatformV1beta1Trial> {
			return this.http.post<GoogleCloudAiplatformV1beta1Trial>(this.baseUri + 'v1beta1/' + (name == null ? '' : encodeURIComponent(name)) + ':complete', JSON.stringify(requestBody), { headers: { 'Content-Type': 'application/json;charset=UTF-8' } });
		}

		/**
		 * Deletes a Model version. Model version can only be deleted if there are no DeployedModels created from it. Deleting the only version in the Model is not allowed. Use DeleteModel for deleting the Model instead.
		 * Delete v1beta1/{name}:deleteVersion
		 * @param {string} name Required. The name of the model version to be deleted, with a version ID explicitly included. Example: `projects/{project}/locations/{location}/models/{model}@1234`
		 * @return {GoogleLongrunningOperation} Successful response
		 */
		Aiplatform_projects_locations_models_deleteVersion(name: string): Observable<GoogleLongrunningOperation> {
			return this.http.delete<GoogleLongrunningOperation>(this.baseUri + 'v1beta1/' + (name == null ? '' : encodeURIComponent(name)) + ':deleteVersion', {});
		}

		/**
		 * Exports a trained, exportable Model to a location specified by the user. A Model is considered to be exportable if it has at least one supported export format.
		 * Post v1beta1/{name}:export
		 * @param {string} name Required. The resource name of the Model to export. The resource name may contain version id or version alias to specify the version, if no version is specified, the default version will be exported.
		 * @return {GoogleLongrunningOperation} Successful response
		 */
		Aiplatform_projects_locations_models_export(name: string, requestBody: GoogleCloudAiplatformV1beta1ExportModelRequest): Observable<GoogleLongrunningOperation> {
			return this.http.post<GoogleLongrunningOperation>(this.baseUri + 'v1beta1/' + (name == null ? '' : encodeURIComponent(name)) + ':export', JSON.stringify(requestBody), { headers: { 'Content-Type': 'application/json;charset=UTF-8' } });
		}

		/**
		 * Internal only: Called from Compute Engine instance to obtain EUC for owner Anonymous access: authenticates caller using VM identity JWT. Design doc: go/colab-on-vertex-euc-dd
		 * Post v1beta1/{name}:generateAccessToken
		 * @param {string} name Required. The name of the resource requesting the OAuth2 token. Format: `projects/{project}/locations/{location}/notebookRuntimes/{notebook_runtime}` `projects/{project}/locations/{location}/notebookExecutionJobs/{notebook_execution_job}`
		 * @return {GoogleCloudAiplatformV1beta1GenerateAccessTokenResponse} Successful response
		 */
		Aiplatform_projects_locations_notebookRuntimes_generateAccessToken(name: string, requestBody: GoogleCloudAiplatformV1beta1GenerateAccessTokenRequest): Observable<GoogleCloudAiplatformV1beta1GenerateAccessTokenResponse> {
			return this.http.post<GoogleCloudAiplatformV1beta1GenerateAccessTokenResponse>(this.baseUri + 'v1beta1/' + (name == null ? '' : encodeURIComponent(name)) + ':generateAccessToken', JSON.stringify(requestBody), { headers: { 'Content-Type': 'application/json;charset=UTF-8' } });
		}

		/**
		 * Imports data into a Dataset.
		 * Post v1beta1/{name}:import
		 * @param {string} name Required. The name of the Dataset resource. Format: `projects/{project}/locations/{location}/datasets/{dataset}`
		 * @return {GoogleLongrunningOperation} Successful response
		 */
		Aiplatform_projects_locations_datasets_import(name: string, requestBody: GoogleCloudAiplatformV1beta1ImportDataRequest): Observable<GoogleLongrunningOperation> {
			return this.http.post<GoogleLongrunningOperation>(this.baseUri + 'v1beta1/' + (name == null ? '' : encodeURIComponent(name)) + ':import', JSON.stringify(requestBody), { headers: { 'Content-Type': 'application/json;charset=UTF-8' } });
		}

		/**
		 * Lists versions of the specified model.
		 * Get v1beta1/{name}:listVersions
		 * @param {string} name Required. The name of the model to list versions for.
		 * @param {string} filter An expression for filtering the results of the request. For field names both snake_case and camelCase are supported. * `labels` supports general map functions that is: * `labels.key=value` - key:value equality * `labels.key:* or labels:key - key existence * A key including a space must be quoted. `labels."a key"`. Some examples: * `labels.myKey="myValue"`
		 * @param {string} orderBy A comma-separated list of fields to order by, sorted in ascending order. Use "desc" after a field name for descending. Supported fields: * `create_time` * `update_time` Example: `update_time asc, create_time desc`.
		 * @param {number} pageSize The standard list page size.
		 * @param {string} pageToken The standard list page token. Typically obtained via next_page_token of the previous ListModelVersions call.
		 * @param {string} readMask Mask specifying which fields to read.
		 * @return {GoogleCloudAiplatformV1beta1ListModelVersionsResponse} Successful response
		 */
		Aiplatform_projects_locations_models_listVersions(name: string, filter: string | null | undefined, orderBy: string | null | undefined, pageSize: number | null | undefined, pageToken: string | null | undefined, readMask: string | null | undefined): Observable<GoogleCloudAiplatformV1beta1ListModelVersionsResponse> {
			return this.http.get<GoogleCloudAiplatformV1beta1ListModelVersionsResponse>(this.baseUri + 'v1beta1/' + (name == null ? '' : encodeURIComponent(name)) + ':listVersions&filter=' + (filter == null ? '' : encodeURIComponent(filter)) + '&orderBy=' + (orderBy == null ? '' : encodeURIComponent(orderBy)) + '&pageSize=' + pageSize + '&pageToken=' + (pageToken == null ? '' : encodeURIComponent(pageToken)) + '&readMask=' + (readMask == null ? '' : encodeURIComponent(readMask)), {});
		}

		/**
		 * Merges a set of aliases for a Model version.
		 * Post v1beta1/{name}:mergeVersionAliases
		 * @param {string} name Required. The name of the model version to merge aliases, with a version ID explicitly included. Example: `projects/{project}/locations/{location}/models/{model}@1234`
		 * @return {GoogleCloudAiplatformV1beta1Model} Successful response
		 */
		Aiplatform_projects_locations_models_mergeVersionAliases(name: string, requestBody: GoogleCloudAiplatformV1beta1MergeVersionAliasesRequest): Observable<GoogleCloudAiplatformV1beta1Model> {
			return this.http.post<GoogleCloudAiplatformV1beta1Model>(this.baseUri + 'v1beta1/' + (name == null ? '' : encodeURIComponent(name)) + ':mergeVersionAliases', JSON.stringify(requestBody), { headers: { 'Content-Type': 'application/json;charset=UTF-8' } });
		}

		/**
		 * Pauses a Schedule. Will mark Schedule.state to 'PAUSED'. If the schedule is paused, no new runs will be created. Already created runs will NOT be paused or canceled.
		 * Post v1beta1/{name}:pause
		 * @param {string} name Required. The name of the Schedule resource to be paused. Format: `projects/{project}/locations/{location}/schedules/{schedule}`
		 * @return {GoogleProtobufEmpty} Successful response
		 */
		Aiplatform_projects_locations_schedules_pause(name: string, requestBody: GoogleCloudAiplatformV1beta1PauseScheduleRequest): Observable<GoogleProtobufEmpty> {
			return this.http.post<GoogleProtobufEmpty>(this.baseUri + 'v1beta1/' + (name == null ? '' : encodeURIComponent(name)) + ':pause', JSON.stringify(requestBody), { headers: { 'Content-Type': 'application/json;charset=UTF-8' } });
		}

		/**
		 * Post v1beta1/{name}:reportEvent
		 * @param {string} name Required. The name of the NotebookRuntime resource. Format: `projects/{project}/locations/{location}/notebookRuntimes/{notebook_runtime}`
		 * @return {GoogleCloudAiplatformV1beta1ReportRuntimeEventResponse} Successful response
		 */
		Aiplatform_projects_locations_notebookRuntimes_reportEvent(name: string, requestBody: GoogleCloudAiplatformV1beta1ReportRuntimeEventRequest): Observable<GoogleCloudAiplatformV1beta1ReportRuntimeEventResponse> {
			return this.http.post<GoogleCloudAiplatformV1beta1ReportRuntimeEventResponse>(this.baseUri + 'v1beta1/' + (name == null ? '' : encodeURIComponent(name)) + ':reportEvent', JSON.stringify(requestBody), { headers: { 'Content-Type': 'application/json;charset=UTF-8' } });
		}

		/**
		 * Restores a dataset version.
		 * Get v1beta1/{name}:restore
		 * @param {string} name Required. The name of the DatasetVersion resource. Format: `projects/{project}/locations/{location}/datasets/{dataset}/datasetVersions/{dataset_version}`
		 * @return {GoogleLongrunningOperation} Successful response
		 */
		Aiplatform_projects_locations_datasets_datasetVersions_restore(name: string): Observable<GoogleLongrunningOperation> {
			return this.http.get<GoogleLongrunningOperation>(this.baseUri + 'v1beta1/' + (name == null ? '' : encodeURIComponent(name)) + ':restore', {});
		}

		/**
		 * Resumes a paused Schedule to start scheduling new runs. Will mark Schedule.state to 'ACTIVE'. Only paused Schedule can be resumed. When the Schedule is resumed, new runs will be scheduled starting from the next execution time after the current time based on the time_specification in the Schedule. If Schedule.catchUp is set up true, all missed runs will be scheduled for backfill first.
		 * Post v1beta1/{name}:resume
		 * @param {string} name Required. The name of the Schedule resource to be resumed. Format: `projects/{project}/locations/{location}/schedules/{schedule}`
		 * @return {GoogleProtobufEmpty} Successful response
		 */
		Aiplatform_projects_locations_schedules_resume(name: string, requestBody: GoogleCloudAiplatformV1beta1ResumeScheduleRequest): Observable<GoogleProtobufEmpty> {
			return this.http.post<GoogleProtobufEmpty>(this.baseUri + 'v1beta1/' + (name == null ? '' : encodeURIComponent(name)) + ':resume', JSON.stringify(requestBody), { headers: { 'Content-Type': 'application/json;charset=UTF-8' } });
		}

		/**
		 * Starts a NotebookRuntime.
		 * Post v1beta1/{name}:start
		 * @param {string} name Required. The name of the NotebookRuntime resource to be started. Instead of checking whether the name is in valid NotebookRuntime resource name format, directly throw NotFound exception if there is no such NotebookRuntime in spanner.
		 * @return {GoogleLongrunningOperation} Successful response
		 */
		Aiplatform_projects_locations_notebookRuntimes_start(name: string, requestBody: GoogleCloudAiplatformV1beta1StartNotebookRuntimeRequest): Observable<GoogleLongrunningOperation> {
			return this.http.post<GoogleLongrunningOperation>(this.baseUri + 'v1beta1/' + (name == null ? '' : encodeURIComponent(name)) + ':start', JSON.stringify(requestBody), { headers: { 'Content-Type': 'application/json;charset=UTF-8' } });
		}

		/**
		 * Stops a Trial.
		 * Post v1beta1/{name}:stop
		 * @param {string} name Required. The Trial's name. Format: `projects/{project}/locations/{location}/studies/{study}/trials/{trial}`
		 * @return {GoogleCloudAiplatformV1beta1Trial} Successful response
		 */
		Aiplatform_projects_locations_studies_trials_stop(name: string, requestBody: GoogleCloudAiplatformV1beta1StopTrialRequest): Observable<GoogleCloudAiplatformV1beta1Trial> {
			return this.http.post<GoogleCloudAiplatformV1beta1Trial>(this.baseUri + 'v1beta1/' + (name == null ? '' : encodeURIComponent(name)) + ':stop', JSON.stringify(requestBody), { headers: { 'Content-Type': 'application/json;charset=UTF-8' } });
		}

		/**
		 * Upgrades a NotebookRuntime.
		 * Post v1beta1/{name}:upgrade
		 * @param {string} name Required. The name of the NotebookRuntime resource to be upgrade. Instead of checking whether the name is in valid NotebookRuntime resource name format, directly throw NotFound exception if there is no such NotebookRuntime in spanner.
		 * @return {GoogleLongrunningOperation} Successful response
		 */
		Aiplatform_projects_locations_notebookRuntimes_upgrade(name: string, requestBody: GoogleCloudAiplatformV1beta1UpgradeNotebookRuntimeRequest): Observable<GoogleLongrunningOperation> {
			return this.http.post<GoogleLongrunningOperation>(this.baseUri + 'v1beta1/' + (name == null ? '' : encodeURIComponent(name)) + ':upgrade', JSON.stringify(requestBody), { headers: { 'Content-Type': 'application/json;charset=UTF-8' } });
		}

		/**
		 * Waits until the specified long-running operation is done or reaches at most a specified timeout, returning the latest state. If the operation is already done, the latest state is immediately returned. If the timeout specified is greater than the default HTTP/RPC timeout, the HTTP/RPC timeout is used. If the server does not support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a best-effort basis. It may return the latest state before the specified timeout (including immediately), meaning even an immediate response is no guarantee that the operation is done.
		 * Post v1beta1/{name}:wait
		 * @param {string} name The name of the operation resource to wait on.
		 * @param {string} timeout The maximum duration to wait before timing out. If left blank, the wait will be at most the time permitted by the underlying HTTP/RPC protocol. If RPC context deadline is also specified, the shorter one will be used.
		 * @return {GoogleLongrunningOperation} Successful response
		 */
		Aiplatform_projects_locations_trainingPipelines_operations_wait(name: string, timeout: string | null | undefined): Observable<GoogleLongrunningOperation> {
			return this.http.post<GoogleLongrunningOperation>(this.baseUri + 'v1beta1/' + (name == null ? '' : encodeURIComponent(name)) + ':wait&timeout=' + (timeout == null ? '' : encodeURIComponent(timeout)), null, {});
		}

		/**
		 * Lists Annotations belongs to a dataitem
		 * Get v1beta1/{parent}/annotations
		 * @param {string} parent Required. The resource name of the DataItem to list Annotations from. Format: `projects/{project}/locations/{location}/datasets/{dataset}/dataItems/{data_item}`
		 * @param {string} filter The standard list filter.
		 * @param {string} orderBy A comma-separated list of fields to order by, sorted in ascending order. Use "desc" after a field name for descending.
		 * @param {number} pageSize The standard list page size.
		 * @param {string} pageToken The standard list page token.
		 * @param {string} readMask Mask specifying which fields to read.
		 * @return {GoogleCloudAiplatformV1beta1ListAnnotationsResponse} Successful response
		 */
		Aiplatform_projects_locations_datasets_dataItems_annotations_list(parent: string, filter: string | null | undefined, orderBy: string | null | undefined, pageSize: number | null | undefined, pageToken: string | null | undefined, readMask: string | null | undefined): Observable<GoogleCloudAiplatformV1beta1ListAnnotationsResponse> {
			return this.http.get<GoogleCloudAiplatformV1beta1ListAnnotationsResponse>(this.baseUri + 'v1beta1/' + (parent == null ? '' : encodeURIComponent(parent)) + '/annotations&filter=' + (filter == null ? '' : encodeURIComponent(filter)) + '&orderBy=' + (orderBy == null ? '' : encodeURIComponent(orderBy)) + '&pageSize=' + pageSize + '&pageToken=' + (pageToken == null ? '' : encodeURIComponent(pageToken)) + '&readMask=' + (readMask == null ? '' : encodeURIComponent(readMask)), {});
		}

		/**
		 * Lists Artifacts in the MetadataStore.
		 * Get v1beta1/{parent}/artifacts
		 * @param {string} parent Required. The MetadataStore whose Artifacts should be listed. Format: `projects/{project}/locations/{location}/metadataStores/{metadatastore}`
		 * @param {string} filter Filter specifying the boolean condition for the Artifacts to satisfy in order to be part of the result set. The syntax to define filter query is based on https://google.aip.dev/160. The supported set of filters include the following: * **Attribute filtering**: For example: `display_name = "test"`. Supported fields include: `name`, `display_name`, `uri`, `state`, `schema_title`, `create_time`, and `update_time`. Time fields, such as `create_time` and `update_time`, require values specified in RFC-3339 format. For example: `create_time = "2020-11-19T11:30:00-04:00"` * **Metadata field**: To filter on metadata fields use traversal operation as follows: `metadata..`. For example: `metadata.field_1.number_value = 10.0` In case the field name contains special characters (such as colon), one can embed it inside double quote. For example: `metadata."field:1".number_value = 10.0` * **Context based filtering**: To filter Artifacts based on the contexts to which they belong, use the function operator with the full resource name `in_context()`. For example: `in_context("projects//locations//metadataStores//contexts/")` Each of the above supported filter types can be combined together using logical operators (`AND` & `OR`). Maximum nested expression depth allowed is 5. For example: `display_name = "test" AND metadata.field1.bool_value = true`.
		 * @param {string} orderBy How the list of messages is ordered. Specify the values to order by and an ordering operation. The default sorting order is ascending. To specify descending order for a field, users append a " desc" suffix; for example: "foo desc, bar". Subfields are specified with a `.` character, such as foo.bar. see https://google.aip.dev/132#ordering for more details.
		 * @param {number} pageSize The maximum number of Artifacts to return. The service may return fewer. Must be in range 1-1000, inclusive. Defaults to 100.
		 * @param {string} pageToken A page token, received from a previous MetadataService.ListArtifacts call. Provide this to retrieve the subsequent page. When paginating, all other provided parameters must match the call that provided the page token. (Otherwise the request will fail with INVALID_ARGUMENT error.)
		 * @return {GoogleCloudAiplatformV1beta1ListArtifactsResponse} Successful response
		 */
		Aiplatform_projects_locations_metadataStores_artifacts_list(parent: string, filter: string | null | undefined, orderBy: string | null | undefined, pageSize: number | null | undefined, pageToken: string | null | undefined): Observable<GoogleCloudAiplatformV1beta1ListArtifactsResponse> {
			return this.http.get<GoogleCloudAiplatformV1beta1ListArtifactsResponse>(this.baseUri + 'v1beta1/' + (parent == null ? '' : encodeURIComponent(parent)) + '/artifacts&filter=' + (filter == null ? '' : encodeURIComponent(filter)) + '&orderBy=' + (orderBy == null ? '' : encodeURIComponent(orderBy)) + '&pageSize=' + pageSize + '&pageToken=' + (pageToken == null ? '' : encodeURIComponent(pageToken)), {});
		}

		/**
		 * Creates an Artifact associated with a MetadataStore.
		 * Post v1beta1/{parent}/artifacts
		 * @param {string} parent Required. The resource name of the MetadataStore where the Artifact should be created. Format: `projects/{project}/locations/{location}/metadataStores/{metadatastore}`
		 * @param {string} artifactId The {artifact} portion of the resource name with the format: `projects/{project}/locations/{location}/metadataStores/{metadatastore}/artifacts/{artifact}` If not provided, the Artifact's ID will be a UUID generated by the service. Must be 4-128 characters in length. Valid characters are `/a-z-/`. Must be unique across all Artifacts in the parent MetadataStore. (Otherwise the request will fail with ALREADY_EXISTS, or PERMISSION_DENIED if the caller can't view the preexisting Artifact.)
		 * @return {GoogleCloudAiplatformV1beta1Artifact} Successful response
		 */
		Aiplatform_projects_locations_metadataStores_artifacts_create(parent: string, artifactId: string | null | undefined, requestBody: GoogleCloudAiplatformV1beta1Artifact): Observable<GoogleCloudAiplatformV1beta1Artifact> {
			return this.http.post<GoogleCloudAiplatformV1beta1Artifact>(this.baseUri + 'v1beta1/' + (parent == null ? '' : encodeURIComponent(parent)) + '/artifacts&artifactId=' + (artifactId == null ? '' : encodeURIComponent(artifactId)), JSON.stringify(requestBody), { headers: { 'Content-Type': 'application/json;charset=UTF-8' } });
		}

		/**
		 * Purges Artifacts.
		 * Post v1beta1/{parent}/artifacts:purge
		 * @param {string} parent Required. The metadata store to purge Artifacts from. Format: `projects/{project}/locations/{location}/metadataStores/{metadatastore}`
		 * @return {GoogleLongrunningOperation} Successful response
		 */
		Aiplatform_projects_locations_metadataStores_artifacts_purge(parent: string, requestBody: GoogleCloudAiplatformV1beta1PurgeArtifactsRequest): Observable<GoogleLongrunningOperation> {
			return this.http.post<GoogleLongrunningOperation>(this.baseUri + 'v1beta1/' + (parent == null ? '' : encodeURIComponent(parent)) + '/artifacts:purge', JSON.stringify(requestBody), { headers: { 'Content-Type': 'application/json;charset=UTF-8' } });
		}

		/**
		 * Lists BatchPredictionJobs in a Location.
		 * Get v1beta1/{parent}/batchPredictionJobs
		 * @param {string} parent Required. The resource name of the Location to list the BatchPredictionJobs from. Format: `projects/{project}/locations/{location}`
		 * @param {string} filter The standard list filter. Supported fields: * `display_name` supports `=`, `!=` comparisons, and `:` wildcard. * `model_display_name` supports `=`, `!=` comparisons. * `state` supports `=`, `!=` comparisons. * `create_time` supports `=`, `!=`,`<`, `<=`,`>`, `>=` comparisons. `create_time` must be in RFC 3339 format. * `labels` supports general map functions that is: `labels.key=value` - key:value equality `labels.key:* - key existence Some examples of using the filter are: * `state="JOB_STATE_SUCCEEDED" AND display_name:"my_job_*"` * `state!="JOB_STATE_FAILED" OR display_name="my_job"` * `NOT display_name="my_job"` * `create_time>"2021-05-18T00:00:00Z"` * `labels.keyA=valueA` * `labels.keyB:*`
		 * @param {number} pageSize The standard list page size.
		 * @param {string} pageToken The standard list page token. Typically obtained via ListBatchPredictionJobsResponse.next_page_token of the previous JobService.ListBatchPredictionJobs call.
		 * @param {string} readMask Mask specifying which fields to read.
		 * @return {GoogleCloudAiplatformV1beta1ListBatchPredictionJobsResponse} Successful response
		 */
		Aiplatform_projects_locations_batchPredictionJobs_list(parent: string, filter: string | null | undefined, pageSize: number | null | undefined, pageToken: string | null | undefined, readMask: string | null | undefined): Observable<GoogleCloudAiplatformV1beta1ListBatchPredictionJobsResponse> {
			return this.http.get<GoogleCloudAiplatformV1beta1ListBatchPredictionJobsResponse>(this.baseUri + 'v1beta1/' + (parent == null ? '' : encodeURIComponent(parent)) + '/batchPredictionJobs&filter=' + (filter == null ? '' : encodeURIComponent(filter)) + '&pageSize=' + pageSize + '&pageToken=' + (pageToken == null ? '' : encodeURIComponent(pageToken)) + '&readMask=' + (readMask == null ? '' : encodeURIComponent(readMask)), {});
		}

		/**
		 * Creates a BatchPredictionJob. A BatchPredictionJob once created will right away be attempted to start.
		 * Post v1beta1/{parent}/batchPredictionJobs
		 * @param {string} parent Required. The resource name of the Location to create the BatchPredictionJob in. Format: `projects/{project}/locations/{location}`
		 * @return {GoogleCloudAiplatformV1beta1BatchPredictionJob} Successful response
		 */
		Aiplatform_projects_locations_batchPredictionJobs_create(parent: string, requestBody: GoogleCloudAiplatformV1beta1BatchPredictionJob): Observable<GoogleCloudAiplatformV1beta1BatchPredictionJob> {
			return this.http.post<GoogleCloudAiplatformV1beta1BatchPredictionJob>(this.baseUri + 'v1beta1/' + (parent == null ? '' : encodeURIComponent(parent)) + '/batchPredictionJobs', JSON.stringify(requestBody), { headers: { 'Content-Type': 'application/json;charset=UTF-8' } });
		}

		/**
		 * Lists Contexts on the MetadataStore.
		 * Get v1beta1/{parent}/contexts
		 * @param {string} parent Required. The MetadataStore whose Contexts should be listed. Format: `projects/{project}/locations/{location}/metadataStores/{metadatastore}`
		 * @param {string} filter Filter specifying the boolean condition for the Contexts to satisfy in order to be part of the result set. The syntax to define filter query is based on https://google.aip.dev/160. Following are the supported set of filters: * **Attribute filtering**: For example: `display_name = "test"`. Supported fields include: `name`, `display_name`, `schema_title`, `create_time`, and `update_time`. Time fields, such as `create_time` and `update_time`, require values specified in RFC-3339 format. For example: `create_time = "2020-11-19T11:30:00-04:00"`. * **Metadata field**: To filter on metadata fields use traversal operation as follows: `metadata..`. For example: `metadata.field_1.number_value = 10.0`. In case the field name contains special characters (such as colon), one can embed it inside double quote. For example: `metadata."field:1".number_value = 10.0` * **Parent Child filtering**: To filter Contexts based on parent-child relationship use the HAS operator as follows: ``` parent_contexts: "projects//locations//metadataStores//contexts/" child_contexts: "projects//locations//metadataStores//contexts/" ``` Each of the above supported filters can be combined together using logical operators (`AND` & `OR`). Maximum nested expression depth allowed is 5. For example: `display_name = "test" AND metadata.field1.bool_value = true`.
		 * @param {string} orderBy How the list of messages is ordered. Specify the values to order by and an ordering operation. The default sorting order is ascending. To specify descending order for a field, users append a " desc" suffix; for example: "foo desc, bar". Subfields are specified with a `.` character, such as foo.bar. see https://google.aip.dev/132#ordering for more details.
		 * @param {number} pageSize The maximum number of Contexts to return. The service may return fewer. Must be in range 1-1000, inclusive. Defaults to 100.
		 * @param {string} pageToken A page token, received from a previous MetadataService.ListContexts call. Provide this to retrieve the subsequent page. When paginating, all other provided parameters must match the call that provided the page token. (Otherwise the request will fail with INVALID_ARGUMENT error.)
		 * @return {GoogleCloudAiplatformV1beta1ListContextsResponse} Successful response
		 */
		Aiplatform_projects_locations_metadataStores_contexts_list(parent: string, filter: string | null | undefined, orderBy: string | null | undefined, pageSize: number | null | undefined, pageToken: string | null | undefined): Observable<GoogleCloudAiplatformV1beta1ListContextsResponse> {
			return this.http.get<GoogleCloudAiplatformV1beta1ListContextsResponse>(this.baseUri + 'v1beta1/' + (parent == null ? '' : encodeURIComponent(parent)) + '/contexts&filter=' + (filter == null ? '' : encodeURIComponent(filter)) + '&orderBy=' + (orderBy == null ? '' : encodeURIComponent(orderBy)) + '&pageSize=' + pageSize + '&pageToken=' + (pageToken == null ? '' : encodeURIComponent(pageToken)), {});
		}

		/**
		 * Creates a Context associated with a MetadataStore.
		 * Post v1beta1/{parent}/contexts
		 * @param {string} parent Required. The resource name of the MetadataStore where the Context should be created. Format: `projects/{project}/locations/{location}/metadataStores/{metadatastore}`
		 * @param {string} contextId The {context} portion of the resource name with the format: `projects/{project}/locations/{location}/metadataStores/{metadatastore}/contexts/{context}`. If not provided, the Context's ID will be a UUID generated by the service. Must be 4-128 characters in length. Valid characters are `/a-z-/`. Must be unique across all Contexts in the parent MetadataStore. (Otherwise the request will fail with ALREADY_EXISTS, or PERMISSION_DENIED if the caller can't view the preexisting Context.)
		 * @return {GoogleCloudAiplatformV1beta1Context} Successful response
		 */
		Aiplatform_projects_locations_metadataStores_contexts_create(parent: string, contextId: string | null | undefined, requestBody: GoogleCloudAiplatformV1beta1Context): Observable<GoogleCloudAiplatformV1beta1Context> {
			return this.http.post<GoogleCloudAiplatformV1beta1Context>(this.baseUri + 'v1beta1/' + (parent == null ? '' : encodeURIComponent(parent)) + '/contexts&contextId=' + (contextId == null ? '' : encodeURIComponent(contextId)), JSON.stringify(requestBody), { headers: { 'Content-Type': 'application/json;charset=UTF-8' } });
		}

		/**
		 * Purges Contexts.
		 * Post v1beta1/{parent}/contexts:purge
		 * @param {string} parent Required. The metadata store to purge Contexts from. Format: `projects/{project}/locations/{location}/metadataStores/{metadatastore}`
		 * @return {GoogleLongrunningOperation} Successful response
		 */
		Aiplatform_projects_locations_metadataStores_contexts_purge(parent: string, requestBody: GoogleCloudAiplatformV1beta1PurgeContextsRequest): Observable<GoogleLongrunningOperation> {
			return this.http.post<GoogleLongrunningOperation>(this.baseUri + 'v1beta1/' + (parent == null ? '' : encodeURIComponent(parent)) + '/contexts:purge', JSON.stringify(requestBody), { headers: { 'Content-Type': 'application/json;charset=UTF-8' } });
		}

		/**
		 * Lists CustomJobs in a Location.
		 * Get v1beta1/{parent}/customJobs
		 * @param {string} parent Required. The resource name of the Location to list the CustomJobs from. Format: `projects/{project}/locations/{location}`
		 * @param {string} filter The standard list filter. Supported fields: * `display_name` supports `=`, `!=` comparisons, and `:` wildcard. * `state` supports `=`, `!=` comparisons. * `create_time` supports `=`, `!=`,`<`, `<=`,`>`, `>=` comparisons. `create_time` must be in RFC 3339 format. * `labels` supports general map functions that is: `labels.key=value` - key:value equality `labels.key:* - key existence Some examples of using the filter are: * `state="JOB_STATE_SUCCEEDED" AND display_name:"my_job_*"` * `state!="JOB_STATE_FAILED" OR display_name="my_job"` * `NOT display_name="my_job"` * `create_time>"2021-05-18T00:00:00Z"` * `labels.keyA=valueA` * `labels.keyB:*`
		 * @param {number} pageSize The standard list page size.
		 * @param {string} pageToken The standard list page token. Typically obtained via ListCustomJobsResponse.next_page_token of the previous JobService.ListCustomJobs call.
		 * @param {string} readMask Mask specifying which fields to read.
		 * @return {GoogleCloudAiplatformV1beta1ListCustomJobsResponse} Successful response
		 */
		Aiplatform_projects_locations_customJobs_list(parent: string, filter: string | null | undefined, pageSize: number | null | undefined, pageToken: string | null | undefined, readMask: string | null | undefined): Observable<GoogleCloudAiplatformV1beta1ListCustomJobsResponse> {
			return this.http.get<GoogleCloudAiplatformV1beta1ListCustomJobsResponse>(this.baseUri + 'v1beta1/' + (parent == null ? '' : encodeURIComponent(parent)) + '/customJobs&filter=' + (filter == null ? '' : encodeURIComponent(filter)) + '&pageSize=' + pageSize + '&pageToken=' + (pageToken == null ? '' : encodeURIComponent(pageToken)) + '&readMask=' + (readMask == null ? '' : encodeURIComponent(readMask)), {});
		}

		/**
		 * Creates a CustomJob. A created CustomJob right away will be attempted to be run.
		 * Post v1beta1/{parent}/customJobs
		 * @param {string} parent Required. The resource name of the Location to create the CustomJob in. Format: `projects/{project}/locations/{location}`
		 * @return {GoogleCloudAiplatformV1beta1CustomJob} Successful response
		 */
		Aiplatform_projects_locations_customJobs_create(parent: string, requestBody: GoogleCloudAiplatformV1beta1CustomJob): Observable<GoogleCloudAiplatformV1beta1CustomJob> {
			return this.http.post<GoogleCloudAiplatformV1beta1CustomJob>(this.baseUri + 'v1beta1/' + (parent == null ? '' : encodeURIComponent(parent)) + '/customJobs', JSON.stringify(requestBody), { headers: { 'Content-Type': 'application/json;charset=UTF-8' } });
		}

		/**
		 * Lists DataItems in a Dataset.
		 * Get v1beta1/{parent}/dataItems
		 * @param {string} parent Required. The resource name of the Dataset to list DataItems from. Format: `projects/{project}/locations/{location}/datasets/{dataset}`
		 * @param {string} filter The standard list filter.
		 * @param {string} orderBy A comma-separated list of fields to order by, sorted in ascending order. Use "desc" after a field name for descending.
		 * @param {number} pageSize The standard list page size.
		 * @param {string} pageToken The standard list page token.
		 * @param {string} readMask Mask specifying which fields to read.
		 * @return {GoogleCloudAiplatformV1beta1ListDataItemsResponse} Successful response
		 */
		Aiplatform_projects_locations_datasets_dataItems_list(parent: string, filter: string | null | undefined, orderBy: string | null | undefined, pageSize: number | null | undefined, pageToken: string | null | undefined, readMask: string | null | undefined): Observable<GoogleCloudAiplatformV1beta1ListDataItemsResponse> {
			return this.http.get<GoogleCloudAiplatformV1beta1ListDataItemsResponse>(this.baseUri + 'v1beta1/' + (parent == null ? '' : encodeURIComponent(parent)) + '/dataItems&filter=' + (filter == null ? '' : encodeURIComponent(filter)) + '&orderBy=' + (orderBy == null ? '' : encodeURIComponent(orderBy)) + '&pageSize=' + pageSize + '&pageToken=' + (pageToken == null ? '' : encodeURIComponent(pageToken)) + '&readMask=' + (readMask == null ? '' : encodeURIComponent(readMask)), {});
		}

		/**
		 * Lists DataLabelingJobs in a Location.
		 * Get v1beta1/{parent}/dataLabelingJobs
		 * @param {string} parent Required. The parent of the DataLabelingJob. Format: `projects/{project}/locations/{location}`
		 * @param {string} filter The standard list filter. Supported fields: * `display_name` supports `=`, `!=` comparisons, and `:` wildcard. * `state` supports `=`, `!=` comparisons. * `create_time` supports `=`, `!=`,`<`, `<=`,`>`, `>=` comparisons. `create_time` must be in RFC 3339 format. * `labels` supports general map functions that is: `labels.key=value` - key:value equality `labels.key:* - key existence Some examples of using the filter are: * `state="JOB_STATE_SUCCEEDED" AND display_name:"my_job_*"` * `state!="JOB_STATE_FAILED" OR display_name="my_job"` * `NOT display_name="my_job"` * `create_time>"2021-05-18T00:00:00Z"` * `labels.keyA=valueA` * `labels.keyB:*`
		 * @param {string} orderBy A comma-separated list of fields to order by, sorted in ascending order by default. Use `desc` after a field name for descending.
		 * @param {number} pageSize The standard list page size.
		 * @param {string} pageToken The standard list page token.
		 * @param {string} readMask Mask specifying which fields to read. FieldMask represents a set of symbolic field paths. For example, the mask can be `paths: "name"`. The "name" here is a field in DataLabelingJob. If this field is not set, all fields of the DataLabelingJob are returned.
		 * @return {GoogleCloudAiplatformV1beta1ListDataLabelingJobsResponse} Successful response
		 */
		Aiplatform_projects_locations_dataLabelingJobs_list(parent: string, filter: string | null | undefined, orderBy: string | null | undefined, pageSize: number | null | undefined, pageToken: string | null | undefined, readMask: string | null | undefined): Observable<GoogleCloudAiplatformV1beta1ListDataLabelingJobsResponse> {
			return this.http.get<GoogleCloudAiplatformV1beta1ListDataLabelingJobsResponse>(this.baseUri + 'v1beta1/' + (parent == null ? '' : encodeURIComponent(parent)) + '/dataLabelingJobs&filter=' + (filter == null ? '' : encodeURIComponent(filter)) + '&orderBy=' + (orderBy == null ? '' : encodeURIComponent(orderBy)) + '&pageSize=' + pageSize + '&pageToken=' + (pageToken == null ? '' : encodeURIComponent(pageToken)) + '&readMask=' + (readMask == null ? '' : encodeURIComponent(readMask)), {});
		}

		/**
		 * Creates a DataLabelingJob.
		 * Post v1beta1/{parent}/dataLabelingJobs
		 * @param {string} parent Required. The parent of the DataLabelingJob. Format: `projects/{project}/locations/{location}`
		 * @return {GoogleCloudAiplatformV1beta1DataLabelingJob} Successful response
		 */
		Aiplatform_projects_locations_dataLabelingJobs_create(parent: string, requestBody: GoogleCloudAiplatformV1beta1DataLabelingJob): Observable<GoogleCloudAiplatformV1beta1DataLabelingJob> {
			return this.http.post<GoogleCloudAiplatformV1beta1DataLabelingJob>(this.baseUri + 'v1beta1/' + (parent == null ? '' : encodeURIComponent(parent)) + '/dataLabelingJobs', JSON.stringify(requestBody), { headers: { 'Content-Type': 'application/json;charset=UTF-8' } });
		}

		/**
		 * Lists DatasetVersions in a Dataset.
		 * Get v1beta1/{parent}/datasetVersions
		 * @param {string} parent Required. The resource name of the Dataset to list DatasetVersions from. Format: `projects/{project}/locations/{location}/datasets/{dataset}`
		 * @param {string} filter Optional. The standard list filter.
		 * @param {string} orderBy Optional. A comma-separated list of fields to order by, sorted in ascending order. Use "desc" after a field name for descending.
		 * @param {number} pageSize Optional. The standard list page size.
		 * @param {string} pageToken Optional. The standard list page token.
		 * @param {string} readMask Optional. Mask specifying which fields to read.
		 * @return {GoogleCloudAiplatformV1beta1ListDatasetVersionsResponse} Successful response
		 */
		Aiplatform_projects_locations_datasets_datasetVersions_list(parent: string, filter: string | null | undefined, orderBy: string | null | undefined, pageSize: number | null | undefined, pageToken: string | null | undefined, readMask: string | null | undefined): Observable<GoogleCloudAiplatformV1beta1ListDatasetVersionsResponse> {
			return this.http.get<GoogleCloudAiplatformV1beta1ListDatasetVersionsResponse>(this.baseUri + 'v1beta1/' + (parent == null ? '' : encodeURIComponent(parent)) + '/datasetVersions&filter=' + (filter == null ? '' : encodeURIComponent(filter)) + '&orderBy=' + (orderBy == null ? '' : encodeURIComponent(orderBy)) + '&pageSize=' + pageSize + '&pageToken=' + (pageToken == null ? '' : encodeURIComponent(pageToken)) + '&readMask=' + (readMask == null ? '' : encodeURIComponent(readMask)), {});
		}

		/**
		 * Create a version from a Dataset.
		 * Post v1beta1/{parent}/datasetVersions
		 * @param {string} parent Required. The name of the Dataset resource. Format: `projects/{project}/locations/{location}/datasets/{dataset}`
		 * @return {GoogleLongrunningOperation} Successful response
		 */
		Aiplatform_projects_locations_datasets_datasetVersions_create(parent: string, requestBody: GoogleCloudAiplatformV1beta1DatasetVersion): Observable<GoogleLongrunningOperation> {
			return this.http.post<GoogleLongrunningOperation>(this.baseUri + 'v1beta1/' + (parent == null ? '' : encodeURIComponent(parent)) + '/datasetVersions', JSON.stringify(requestBody), { headers: { 'Content-Type': 'application/json;charset=UTF-8' } });
		}

		/**
		 * Lists Datasets in a Location.
		 * Get v1beta1/{parent}/datasets
		 * @param {string} parent Required. The name of the Dataset's parent resource. Format: `projects/{project}/locations/{location}`
		 * @param {string} filter An expression for filtering the results of the request. For field names both snake_case and camelCase are supported. * `display_name`: supports = and != * `metadata_schema_uri`: supports = and != * `labels` supports general map functions that is: * `labels.key=value` - key:value equality * `labels.key:* or labels:key - key existence * A key including a space must be quoted. `labels."a key"`. Some examples: * `displayName="myDisplayName"` * `labels.myKey="myValue"`
		 * @param {string} orderBy A comma-separated list of fields to order by, sorted in ascending order. Use "desc" after a field name for descending. Supported fields: * `display_name` * `create_time` * `update_time`
		 * @param {number} pageSize The standard list page size.
		 * @param {string} pageToken The standard list page token.
		 * @param {string} readMask Mask specifying which fields to read.
		 * @return {GoogleCloudAiplatformV1beta1ListDatasetsResponse} Successful response
		 */
		Aiplatform_projects_locations_datasets_list(parent: string, filter: string | null | undefined, orderBy: string | null | undefined, pageSize: number | null | undefined, pageToken: string | null | undefined, readMask: string | null | undefined): Observable<GoogleCloudAiplatformV1beta1ListDatasetsResponse> {
			return this.http.get<GoogleCloudAiplatformV1beta1ListDatasetsResponse>(this.baseUri + 'v1beta1/' + (parent == null ? '' : encodeURIComponent(parent)) + '/datasets&filter=' + (filter == null ? '' : encodeURIComponent(filter)) + '&orderBy=' + (orderBy == null ? '' : encodeURIComponent(orderBy)) + '&pageSize=' + pageSize + '&pageToken=' + (pageToken == null ? '' : encodeURIComponent(pageToken)) + '&readMask=' + (readMask == null ? '' : encodeURIComponent(readMask)), {});
		}

		/**
		 * Creates a Dataset.
		 * Post v1beta1/{parent}/datasets
		 * @param {string} parent Required. The resource name of the Location to create the Dataset in. Format: `projects/{project}/locations/{location}`
		 * @return {GoogleLongrunningOperation} Successful response
		 */
		Aiplatform_projects_locations_datasets_create(parent: string, requestBody: GoogleCloudAiplatformV1beta1Dataset): Observable<GoogleLongrunningOperation> {
			return this.http.post<GoogleLongrunningOperation>(this.baseUri + 'v1beta1/' + (parent == null ? '' : encodeURIComponent(parent)) + '/datasets', JSON.stringify(requestBody), { headers: { 'Content-Type': 'application/json;charset=UTF-8' } });
		}

		/**
		 * List DeploymentResourcePools in a location.
		 * Get v1beta1/{parent}/deploymentResourcePools
		 * @param {string} parent Required. The parent Location which owns this collection of DeploymentResourcePools. Format: `projects/{project}/locations/{location}`
		 * @param {number} pageSize The maximum number of DeploymentResourcePools to return. The service may return fewer than this value.
		 * @param {string} pageToken A page token, received from a previous `ListDeploymentResourcePools` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `ListDeploymentResourcePools` must match the call that provided the page token.
		 * @return {GoogleCloudAiplatformV1beta1ListDeploymentResourcePoolsResponse} Successful response
		 */
		Aiplatform_projects_locations_deploymentResourcePools_list(parent: string, pageSize: number | null | undefined, pageToken: string | null | undefined): Observable<GoogleCloudAiplatformV1beta1ListDeploymentResourcePoolsResponse> {
			return this.http.get<GoogleCloudAiplatformV1beta1ListDeploymentResourcePoolsResponse>(this.baseUri + 'v1beta1/' + (parent == null ? '' : encodeURIComponent(parent)) + '/deploymentResourcePools&pageSize=' + pageSize + '&pageToken=' + (pageToken == null ? '' : encodeURIComponent(pageToken)), {});
		}

		/**
		 * Create a DeploymentResourcePool.
		 * Post v1beta1/{parent}/deploymentResourcePools
		 * @param {string} parent Required. The parent location resource where this DeploymentResourcePool will be created. Format: `projects/{project}/locations/{location}`
		 * @return {GoogleLongrunningOperation} Successful response
		 */
		Aiplatform_projects_locations_deploymentResourcePools_create(parent: string, requestBody: GoogleCloudAiplatformV1beta1CreateDeploymentResourcePoolRequest): Observable<GoogleLongrunningOperation> {
			return this.http.post<GoogleLongrunningOperation>(this.baseUri + 'v1beta1/' + (parent == null ? '' : encodeURIComponent(parent)) + '/deploymentResourcePools', JSON.stringify(requestBody), { headers: { 'Content-Type': 'application/json;charset=UTF-8' } });
		}

		/**
		 * Lists Endpoints in a Location.
		 * Get v1beta1/{parent}/endpoints
		 * @param {string} parent Required. The resource name of the Location from which to list the Endpoints. Format: `projects/{project}/locations/{location}`
		 * @param {string} filter Optional. An expression for filtering the results of the request. For field names both snake_case and camelCase are supported. * `endpoint` supports = and !=. `endpoint` represents the Endpoint ID, i.e. the last segment of the Endpoint's resource name. * `display_name` supports = and, != * `labels` supports general map functions that is: * `labels.key=value` - key:value equality * `labels.key:* or labels:key - key existence * A key including a space must be quoted. `labels."a key"`. Some examples: * `endpoint=1` * `displayName="myDisplayName"` * `labels.myKey="myValue"`
		 * @param {number} pageSize Optional. The standard list page size.
		 * @param {string} pageToken Optional. The standard list page token. Typically obtained via ListEndpointsResponse.next_page_token of the previous EndpointService.ListEndpoints call.
		 * @param {string} readMask Optional. Mask specifying which fields to read.
		 * @return {GoogleCloudAiplatformV1beta1ListEndpointsResponse} Successful response
		 */
		Aiplatform_projects_locations_endpoints_list(parent: string, filter: string | null | undefined, pageSize: number | null | undefined, pageToken: string | null | undefined, readMask: string | null | undefined): Observable<GoogleCloudAiplatformV1beta1ListEndpointsResponse> {
			return this.http.get<GoogleCloudAiplatformV1beta1ListEndpointsResponse>(this.baseUri + 'v1beta1/' + (parent == null ? '' : encodeURIComponent(parent)) + '/endpoints&filter=' + (filter == null ? '' : encodeURIComponent(filter)) + '&pageSize=' + pageSize + '&pageToken=' + (pageToken == null ? '' : encodeURIComponent(pageToken)) + '&readMask=' + (readMask == null ? '' : encodeURIComponent(readMask)), {});
		}

		/**
		 * Creates an Endpoint.
		 * Post v1beta1/{parent}/endpoints
		 * @param {string} parent Required. The resource name of the Location to create the Endpoint in. Format: `projects/{project}/locations/{location}`
		 * @param {string} endpointId Immutable. The ID to use for endpoint, which will become the final component of the endpoint resource name. If not provided, Vertex AI will generate a value for this ID. If the first character is a letter, this value may be up to 63 characters, and valid characters are `[a-z0-9-]`. The last character must be a letter or number. If the first character is a number, this value may be up to 9 characters, and valid characters are `[0-9]` with no leading zeros. When using HTTP/JSON, this field is populated based on a query string argument, such as `?endpoint_id=12345`. This is the fallback for fields that are not included in either the URI or the body.
		 * @return {GoogleLongrunningOperation} Successful response
		 */
		Aiplatform_projects_locations_endpoints_create(parent: string, endpointId: string | null | undefined, requestBody: GoogleCloudAiplatformV1beta1Endpoint): Observable<GoogleLongrunningOperation> {
			return this.http.post<GoogleLongrunningOperation>(this.baseUri + 'v1beta1/' + (parent == null ? '' : encodeURIComponent(parent)) + '/endpoints&endpointId=' + (endpointId == null ? '' : encodeURIComponent(endpointId)), JSON.stringify(requestBody), { headers: { 'Content-Type': 'application/json;charset=UTF-8' } });
		}

		/**
		 * Lists EntityTypes in a given Featurestore.
		 * Get v1beta1/{parent}/entityTypes
		 * @param {string} parent Required. The resource name of the Featurestore to list EntityTypes. Format: `projects/{project}/locations/{location}/featurestores/{featurestore}`
		 * @param {string} filter Lists the EntityTypes that match the filter expression. The following filters are supported: * `create_time`: Supports `=`, `!=`, `<`, `>`, `>=`, and `<=` comparisons. Values must be in RFC 3339 format. * `update_time`: Supports `=`, `!=`, `<`, `>`, `>=`, and `<=` comparisons. Values must be in RFC 3339 format. * `labels`: Supports key-value equality as well as key presence. Examples: * `create_time > \"2020-01-31T15:30:00.000000Z\" OR update_time > \"2020-01-31T15:30:00.000000Z\"` --> EntityTypes created or updated after 2020-01-31T15:30:00.000000Z. * `labels.active = yes AND labels.env = prod` --> EntityTypes having both (active: yes) and (env: prod) labels. * `labels.env: *` --> Any EntityType which has a label with 'env' as the key.
		 * @param {string} orderBy A comma-separated list of fields to order by, sorted in ascending order. Use "desc" after a field name for descending. Supported fields: * `entity_type_id` * `create_time` * `update_time`
		 * @param {number} pageSize The maximum number of EntityTypes to return. The service may return fewer than this value. If unspecified, at most 1000 EntityTypes will be returned. The maximum value is 1000; any value greater than 1000 will be coerced to 1000.
		 * @param {string} pageToken A page token, received from a previous FeaturestoreService.ListEntityTypes call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to FeaturestoreService.ListEntityTypes must match the call that provided the page token.
		 * @param {string} readMask Mask specifying which fields to read.
		 * @return {GoogleCloudAiplatformV1beta1ListEntityTypesResponse} Successful response
		 */
		Aiplatform_projects_locations_featurestores_entityTypes_list(parent: string, filter: string | null | undefined, orderBy: string | null | undefined, pageSize: number | null | undefined, pageToken: string | null | undefined, readMask: string | null | undefined): Observable<GoogleCloudAiplatformV1beta1ListEntityTypesResponse> {
			return this.http.get<GoogleCloudAiplatformV1beta1ListEntityTypesResponse>(this.baseUri + 'v1beta1/' + (parent == null ? '' : encodeURIComponent(parent)) + '/entityTypes&filter=' + (filter == null ? '' : encodeURIComponent(filter)) + '&orderBy=' + (orderBy == null ? '' : encodeURIComponent(orderBy)) + '&pageSize=' + pageSize + '&pageToken=' + (pageToken == null ? '' : encodeURIComponent(pageToken)) + '&readMask=' + (readMask == null ? '' : encodeURIComponent(readMask)), {});
		}

		/**
		 * Creates a new EntityType in a given Featurestore.
		 * Post v1beta1/{parent}/entityTypes
		 * @param {string} parent Required. The resource name of the Featurestore to create EntityTypes. Format: `projects/{project}/locations/{location}/featurestores/{featurestore}`
		 * @param {string} entityTypeId Required. The ID to use for the EntityType, which will become the final component of the EntityType's resource name. This value may be up to 60 characters, and valid characters are `[a-z0-9_]`. The first character cannot be a number. The value must be unique within a featurestore.
		 * @return {GoogleLongrunningOperation} Successful response
		 */
		Aiplatform_projects_locations_featurestores_entityTypes_create(parent: string, entityTypeId: string | null | undefined, requestBody: GoogleCloudAiplatformV1beta1EntityType): Observable<GoogleLongrunningOperation> {
			return this.http.post<GoogleLongrunningOperation>(this.baseUri + 'v1beta1/' + (parent == null ? '' : encodeURIComponent(parent)) + '/entityTypes&entityTypeId=' + (entityTypeId == null ? '' : encodeURIComponent(entityTypeId)), JSON.stringify(requestBody), { headers: { 'Content-Type': 'application/json;charset=UTF-8' } });
		}

		/**
		 * Lists ModelEvaluations in a Model.
		 * Get v1beta1/{parent}/evaluations
		 * @param {string} parent Required. The resource name of the Model to list the ModelEvaluations from. Format: `projects/{project}/locations/{location}/models/{model}`
		 * @param {string} filter The standard list filter.
		 * @param {number} pageSize The standard list page size.
		 * @param {string} pageToken The standard list page token. Typically obtained via ListModelEvaluationsResponse.next_page_token of the previous ModelService.ListModelEvaluations call.
		 * @param {string} readMask Mask specifying which fields to read.
		 * @return {GoogleCloudAiplatformV1beta1ListModelEvaluationsResponse} Successful response
		 */
		Aiplatform_projects_locations_models_evaluations_list(parent: string, filter: string | null | undefined, pageSize: number | null | undefined, pageToken: string | null | undefined, readMask: string | null | undefined): Observable<GoogleCloudAiplatformV1beta1ListModelEvaluationsResponse> {
			return this.http.get<GoogleCloudAiplatformV1beta1ListModelEvaluationsResponse>(this.baseUri + 'v1beta1/' + (parent == null ? '' : encodeURIComponent(parent)) + '/evaluations&filter=' + (filter == null ? '' : encodeURIComponent(filter)) + '&pageSize=' + pageSize + '&pageToken=' + (pageToken == null ? '' : encodeURIComponent(pageToken)) + '&readMask=' + (readMask == null ? '' : encodeURIComponent(readMask)), {});
		}

		/**
		 * Imports an externally generated ModelEvaluation.
		 * Post v1beta1/{parent}/evaluations:import
		 * @param {string} parent Required. The name of the parent model resource. Format: `projects/{project}/locations/{location}/models/{model}`
		 * @return {GoogleCloudAiplatformV1beta1ModelEvaluation} Successful response
		 */
		Aiplatform_projects_locations_models_evaluations_import(parent: string, requestBody: GoogleCloudAiplatformV1beta1ImportModelEvaluationRequest): Observable<GoogleCloudAiplatformV1beta1ModelEvaluation> {
			return this.http.post<GoogleCloudAiplatformV1beta1ModelEvaluation>(this.baseUri + 'v1beta1/' + (parent == null ? '' : encodeURIComponent(parent)) + '/evaluations:import', JSON.stringify(requestBody), { headers: { 'Content-Type': 'application/json;charset=UTF-8' } });
		}

		/**
		 * Lists Executions in the MetadataStore.
		 * Get v1beta1/{parent}/executions
		 * @param {string} parent Required. The MetadataStore whose Executions should be listed. Format: `projects/{project}/locations/{location}/metadataStores/{metadatastore}`
		 * @param {string} filter Filter specifying the boolean condition for the Executions to satisfy in order to be part of the result set. The syntax to define filter query is based on https://google.aip.dev/160. Following are the supported set of filters: * **Attribute filtering**: For example: `display_name = "test"`. Supported fields include: `name`, `display_name`, `state`, `schema_title`, `create_time`, and `update_time`. Time fields, such as `create_time` and `update_time`, require values specified in RFC-3339 format. For example: `create_time = "2020-11-19T11:30:00-04:00"`. * **Metadata field**: To filter on metadata fields use traversal operation as follows: `metadata..` For example: `metadata.field_1.number_value = 10.0` In case the field name contains special characters (such as colon), one can embed it inside double quote. For example: `metadata."field:1".number_value = 10.0` * **Context based filtering**: To filter Executions based on the contexts to which they belong use the function operator with the full resource name: `in_context()`. For example: `in_context("projects//locations//metadataStores//contexts/")` Each of the above supported filters can be combined together using logical operators (`AND` & `OR`). Maximum nested expression depth allowed is 5. For example: `display_name = "test" AND metadata.field1.bool_value = true`.
		 * @param {string} orderBy How the list of messages is ordered. Specify the values to order by and an ordering operation. The default sorting order is ascending. To specify descending order for a field, users append a " desc" suffix; for example: "foo desc, bar". Subfields are specified with a `.` character, such as foo.bar. see https://google.aip.dev/132#ordering for more details.
		 * @param {number} pageSize The maximum number of Executions to return. The service may return fewer. Must be in range 1-1000, inclusive. Defaults to 100.
		 * @param {string} pageToken A page token, received from a previous MetadataService.ListExecutions call. Provide this to retrieve the subsequent page. When paginating, all other provided parameters must match the call that provided the page token. (Otherwise the request will fail with an INVALID_ARGUMENT error.)
		 * @return {GoogleCloudAiplatformV1beta1ListExecutionsResponse} Successful response
		 */
		Aiplatform_projects_locations_metadataStores_executions_list(parent: string, filter: string | null | undefined, orderBy: string | null | undefined, pageSize: number | null | undefined, pageToken: string | null | undefined): Observable<GoogleCloudAiplatformV1beta1ListExecutionsResponse> {
			return this.http.get<GoogleCloudAiplatformV1beta1ListExecutionsResponse>(this.baseUri + 'v1beta1/' + (parent == null ? '' : encodeURIComponent(parent)) + '/executions&filter=' + (filter == null ? '' : encodeURIComponent(filter)) + '&orderBy=' + (orderBy == null ? '' : encodeURIComponent(orderBy)) + '&pageSize=' + pageSize + '&pageToken=' + (pageToken == null ? '' : encodeURIComponent(pageToken)), {});
		}

		/**
		 * Creates an Execution associated with a MetadataStore.
		 * Post v1beta1/{parent}/executions
		 * @param {string} parent Required. The resource name of the MetadataStore where the Execution should be created. Format: `projects/{project}/locations/{location}/metadataStores/{metadatastore}`
		 * @param {string} executionId The {execution} portion of the resource name with the format: `projects/{project}/locations/{location}/metadataStores/{metadatastore}/executions/{execution}` If not provided, the Execution's ID will be a UUID generated by the service. Must be 4-128 characters in length. Valid characters are `/a-z-/`. Must be unique across all Executions in the parent MetadataStore. (Otherwise the request will fail with ALREADY_EXISTS, or PERMISSION_DENIED if the caller can't view the preexisting Execution.)
		 * @return {GoogleCloudAiplatformV1beta1Execution} Successful response
		 */
		Aiplatform_projects_locations_metadataStores_executions_create(parent: string, executionId: string | null | undefined, requestBody: GoogleCloudAiplatformV1beta1Execution): Observable<GoogleCloudAiplatformV1beta1Execution> {
			return this.http.post<GoogleCloudAiplatformV1beta1Execution>(this.baseUri + 'v1beta1/' + (parent == null ? '' : encodeURIComponent(parent)) + '/executions&executionId=' + (executionId == null ? '' : encodeURIComponent(executionId)), JSON.stringify(requestBody), { headers: { 'Content-Type': 'application/json;charset=UTF-8' } });
		}

		/**
		 * Purges Executions.
		 * Post v1beta1/{parent}/executions:purge
		 * @param {string} parent Required. The metadata store to purge Executions from. Format: `projects/{project}/locations/{location}/metadataStores/{metadatastore}`
		 * @return {GoogleLongrunningOperation} Successful response
		 */
		Aiplatform_projects_locations_metadataStores_executions_purge(parent: string, requestBody: GoogleCloudAiplatformV1beta1PurgeExecutionsRequest): Observable<GoogleLongrunningOperation> {
			return this.http.post<GoogleLongrunningOperation>(this.baseUri + 'v1beta1/' + (parent == null ? '' : encodeURIComponent(parent)) + '/executions:purge', JSON.stringify(requestBody), { headers: { 'Content-Type': 'application/json;charset=UTF-8' } });
		}

		/**
		 * Lists TensorboardExperiments in a Location.
		 * Get v1beta1/{parent}/experiments
		 * @param {string} parent Required. The resource name of the Tensorboard to list TensorboardExperiments. Format: `projects/{project}/locations/{location}/tensorboards/{tensorboard}`
		 * @param {string} filter Lists the TensorboardExperiments that match the filter expression.
		 * @param {string} orderBy Field to use to sort the list.
		 * @param {number} pageSize The maximum number of TensorboardExperiments to return. The service may return fewer than this value. If unspecified, at most 50 TensorboardExperiments are returned. The maximum value is 1000; values above 1000 are coerced to 1000.
		 * @param {string} pageToken A page token, received from a previous TensorboardService.ListTensorboardExperiments call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to TensorboardService.ListTensorboardExperiments must match the call that provided the page token.
		 * @param {string} readMask Mask specifying which fields to read.
		 * @return {GoogleCloudAiplatformV1beta1ListTensorboardExperimentsResponse} Successful response
		 */
		Aiplatform_projects_locations_tensorboards_experiments_list(parent: string, filter: string | null | undefined, orderBy: string | null | undefined, pageSize: number | null | undefined, pageToken: string | null | undefined, readMask: string | null | undefined): Observable<GoogleCloudAiplatformV1beta1ListTensorboardExperimentsResponse> {
			return this.http.get<GoogleCloudAiplatformV1beta1ListTensorboardExperimentsResponse>(this.baseUri + 'v1beta1/' + (parent == null ? '' : encodeURIComponent(parent)) + '/experiments&filter=' + (filter == null ? '' : encodeURIComponent(filter)) + '&orderBy=' + (orderBy == null ? '' : encodeURIComponent(orderBy)) + '&pageSize=' + pageSize + '&pageToken=' + (pageToken == null ? '' : encodeURIComponent(pageToken)) + '&readMask=' + (readMask == null ? '' : encodeURIComponent(readMask)), {});
		}

		/**
		 * Creates a TensorboardExperiment.
		 * Post v1beta1/{parent}/experiments
		 * @param {string} parent Required. The resource name of the Tensorboard to create the TensorboardExperiment in. Format: `projects/{project}/locations/{location}/tensorboards/{tensorboard}`
		 * @param {string} tensorboardExperimentId Required. The ID to use for the Tensorboard experiment, which becomes the final component of the Tensorboard experiment's resource name. This value should be 1-128 characters, and valid characters are `/a-z-/`.
		 * @return {GoogleCloudAiplatformV1beta1TensorboardExperiment} Successful response
		 */
		Aiplatform_projects_locations_tensorboards_experiments_create(parent: string, tensorboardExperimentId: string | null | undefined, requestBody: GoogleCloudAiplatformV1beta1TensorboardExperiment): Observable<GoogleCloudAiplatformV1beta1TensorboardExperiment> {
			return this.http.post<GoogleCloudAiplatformV1beta1TensorboardExperiment>(this.baseUri + 'v1beta1/' + (parent == null ? '' : encodeURIComponent(parent)) + '/experiments&tensorboardExperimentId=' + (tensorboardExperimentId == null ? '' : encodeURIComponent(tensorboardExperimentId)), JSON.stringify(requestBody), { headers: { 'Content-Type': 'application/json;charset=UTF-8' } });
		}

		/**
		 * Lists FeatureGroups in a given project and location.
		 * Get v1beta1/{parent}/featureGroups
		 * @param {string} parent Required. The resource name of the Location to list FeatureGroups. Format: `projects/{project}/locations/{location}`
		 * @param {string} filter Lists the FeatureGroups that match the filter expression. The following fields are supported: * `create_time`: Supports `=`, `!=`, `<`, `>`, `<=`, and `>=` comparisons. Values must be in RFC 3339 format. * `update_time`: Supports `=`, `!=`, `<`, `>`, `<=`, and `>=` comparisons. Values must be in RFC 3339 format. * `labels`: Supports key-value equality and key presence. Examples: * `create_time > "2020-01-01" OR update_time > "2020-01-01"` FeatureGroups created or updated after 2020-01-01. * `labels.env = "prod"` FeatureGroups with label "env" set to "prod".
		 * @param {string} orderBy A comma-separated list of fields to order by, sorted in ascending order. Use "desc" after a field name for descending. Supported Fields: * `create_time` * `update_time`
		 * @param {number} pageSize The maximum number of FeatureGroups to return. The service may return fewer than this value. If unspecified, at most 100 FeatureGroups will be returned. The maximum value is 100; any value greater than 100 will be coerced to 100.
		 * @param {string} pageToken A page token, received from a previous FeatureGroupAdminService.ListFeatureGroups call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to FeatureGroupAdminService.ListFeatureGroups must match the call that provided the page token.
		 * @return {GoogleCloudAiplatformV1beta1ListFeatureGroupsResponse} Successful response
		 */
		Aiplatform_projects_locations_featureGroups_list(parent: string, filter: string | null | undefined, orderBy: string | null | undefined, pageSize: number | null | undefined, pageToken: string | null | undefined): Observable<GoogleCloudAiplatformV1beta1ListFeatureGroupsResponse> {
			return this.http.get<GoogleCloudAiplatformV1beta1ListFeatureGroupsResponse>(this.baseUri + 'v1beta1/' + (parent == null ? '' : encodeURIComponent(parent)) + '/featureGroups&filter=' + (filter == null ? '' : encodeURIComponent(filter)) + '&orderBy=' + (orderBy == null ? '' : encodeURIComponent(orderBy)) + '&pageSize=' + pageSize + '&pageToken=' + (pageToken == null ? '' : encodeURIComponent(pageToken)), {});
		}

		/**
		 * Creates a new FeatureGroup in a given project and location.
		 * Post v1beta1/{parent}/featureGroups
		 * @param {string} parent Required. The resource name of the Location to create FeatureGroups. Format: `projects/{project}/locations/{location}'`
		 * @param {string} featureGroupId Required. The ID to use for this FeatureGroup, which will become the final component of the FeatureGroup's resource name. This value may be up to 60 characters, and valid characters are `[a-z0-9_]`. The first character cannot be a number. The value must be unique within the project and location.
		 * @return {GoogleLongrunningOperation} Successful response
		 */
		Aiplatform_projects_locations_featureGroups_create(parent: string, featureGroupId: string | null | undefined, requestBody: GoogleCloudAiplatformV1beta1FeatureGroup): Observable<GoogleLongrunningOperation> {
			return this.http.post<GoogleLongrunningOperation>(this.baseUri + 'v1beta1/' + (parent == null ? '' : encodeURIComponent(parent)) + '/featureGroups&featureGroupId=' + (featureGroupId == null ? '' : encodeURIComponent(featureGroupId)), JSON.stringify(requestBody), { headers: { 'Content-Type': 'application/json;charset=UTF-8' } });
		}

		/**
		 * Lists FeatureOnlineStores in a given project and location.
		 * Get v1beta1/{parent}/featureOnlineStores
		 * @param {string} parent Required. The resource name of the Location to list FeatureOnlineStores. Format: `projects/{project}/locations/{location}`
		 * @param {string} filter Lists the FeatureOnlineStores that match the filter expression. The following fields are supported: * `create_time`: Supports `=`, `!=`, `<`, `>`, `<=`, and `>=` comparisons. Values must be in RFC 3339 format. * `update_time`: Supports `=`, `!=`, `<`, `>`, `<=`, and `>=` comparisons. Values must be in RFC 3339 format. * `labels`: Supports key-value equality and key presence. Examples: * `create_time > "2020-01-01" OR update_time > "2020-01-01"` FeatureOnlineStores created or updated after 2020-01-01. * `labels.env = "prod"` FeatureOnlineStores with label "env" set to "prod".
		 * @param {string} orderBy A comma-separated list of fields to order by, sorted in ascending order. Use "desc" after a field name for descending. Supported Fields: * `create_time` * `update_time`
		 * @param {number} pageSize The maximum number of FeatureOnlineStores to return. The service may return fewer than this value. If unspecified, at most 100 FeatureOnlineStores will be returned. The maximum value is 100; any value greater than 100 will be coerced to 100.
		 * @param {string} pageToken A page token, received from a previous FeatureOnlineStoreAdminService.ListFeatureOnlineStores call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to FeatureOnlineStoreAdminService.ListFeatureOnlineStores must match the call that provided the page token.
		 * @return {GoogleCloudAiplatformV1beta1ListFeatureOnlineStoresResponse} Successful response
		 */
		Aiplatform_projects_locations_featureOnlineStores_list(parent: string, filter: string | null | undefined, orderBy: string | null | undefined, pageSize: number | null | undefined, pageToken: string | null | undefined): Observable<GoogleCloudAiplatformV1beta1ListFeatureOnlineStoresResponse> {
			return this.http.get<GoogleCloudAiplatformV1beta1ListFeatureOnlineStoresResponse>(this.baseUri + 'v1beta1/' + (parent == null ? '' : encodeURIComponent(parent)) + '/featureOnlineStores&filter=' + (filter == null ? '' : encodeURIComponent(filter)) + '&orderBy=' + (orderBy == null ? '' : encodeURIComponent(orderBy)) + '&pageSize=' + pageSize + '&pageToken=' + (pageToken == null ? '' : encodeURIComponent(pageToken)), {});
		}

		/**
		 * Creates a new FeatureOnlineStore in a given project and location.
		 * Post v1beta1/{parent}/featureOnlineStores
		 * @param {string} parent Required. The resource name of the Location to create FeatureOnlineStores. Format: `projects/{project}/locations/{location}'`
		 * @param {string} featureOnlineStoreId Required. The ID to use for this FeatureOnlineStore, which will become the final component of the FeatureOnlineStore's resource name. This value may be up to 60 characters, and valid characters are `[a-z0-9_]`. The first character cannot be a number. The value must be unique within the project and location.
		 * @return {GoogleLongrunningOperation} Successful response
		 */
		Aiplatform_projects_locations_featureOnlineStores_create(parent: string, featureOnlineStoreId: string | null | undefined, requestBody: GoogleCloudAiplatformV1beta1FeatureOnlineStore): Observable<GoogleLongrunningOperation> {
			return this.http.post<GoogleLongrunningOperation>(this.baseUri + 'v1beta1/' + (parent == null ? '' : encodeURIComponent(parent)) + '/featureOnlineStores&featureOnlineStoreId=' + (featureOnlineStoreId == null ? '' : encodeURIComponent(featureOnlineStoreId)), JSON.stringify(requestBody), { headers: { 'Content-Type': 'application/json;charset=UTF-8' } });
		}

		/**
		 * Lists FeatureViewSyncs in a given FeatureView.
		 * Get v1beta1/{parent}/featureViewSyncs
		 * @param {string} parent Required. The resource name of the FeatureView to list FeatureViewSyncs. Format: `projects/{project}/locations/{location}/featureOnlineStores/{feature_online_store}/featureViews/{feature_view}`
		 * @param {string} filter Lists the FeatureViewSyncs that match the filter expression. The following filters are supported: * `create_time`: Supports `=`, `!=`, `<`, `>`, `>=`, and `<=` comparisons. Values must be in RFC 3339 format. Examples: * `create_time > \"2020-01-31T15:30:00.000000Z\"` --> FeatureViewSyncs created after 2020-01-31T15:30:00.000000Z.
		 * @param {string} orderBy A comma-separated list of fields to order by, sorted in ascending order. Use "desc" after a field name for descending. Supported fields: * `create_time`
		 * @param {number} pageSize The maximum number of FeatureViewSyncs to return. The service may return fewer than this value. If unspecified, at most 1000 FeatureViewSyncs will be returned. The maximum value is 1000; any value greater than 1000 will be coerced to 1000.
		 * @param {string} pageToken A page token, received from a previous FeatureOnlineStoreAdminService.ListFeatureViewSyncs call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to FeatureOnlineStoreAdminService.ListFeatureViewSyncs must match the call that provided the page token.
		 * @return {GoogleCloudAiplatformV1beta1ListFeatureViewSyncsResponse} Successful response
		 */
		Aiplatform_projects_locations_featureOnlineStores_featureViews_featureViewSyncs_list(parent: string, filter: string | null | undefined, orderBy: string | null | undefined, pageSize: number | null | undefined, pageToken: string | null | undefined): Observable<GoogleCloudAiplatformV1beta1ListFeatureViewSyncsResponse> {
			return this.http.get<GoogleCloudAiplatformV1beta1ListFeatureViewSyncsResponse>(this.baseUri + 'v1beta1/' + (parent == null ? '' : encodeURIComponent(parent)) + '/featureViewSyncs&filter=' + (filter == null ? '' : encodeURIComponent(filter)) + '&orderBy=' + (orderBy == null ? '' : encodeURIComponent(orderBy)) + '&pageSize=' + pageSize + '&pageToken=' + (pageToken == null ? '' : encodeURIComponent(pageToken)), {});
		}

		/**
		 * Lists FeatureViews in a given FeatureOnlineStore.
		 * Get v1beta1/{parent}/featureViews
		 * @param {string} parent Required. The resource name of the FeatureOnlineStore to list FeatureViews. Format: `projects/{project}/locations/{location}/featureOnlineStores/{feature_online_store}`
		 * @param {string} filter Lists the FeatureViews that match the filter expression. The following filters are supported: * `create_time`: Supports `=`, `!=`, `<`, `>`, `>=`, and `<=` comparisons. Values must be in RFC 3339 format. * `update_time`: Supports `=`, `!=`, `<`, `>`, `>=`, and `<=` comparisons. Values must be in RFC 3339 format. * `labels`: Supports key-value equality as well as key presence. Examples: * `create_time > \"2020-01-31T15:30:00.000000Z\" OR update_time > \"2020-01-31T15:30:00.000000Z\"` --> FeatureViews created or updated after 2020-01-31T15:30:00.000000Z. * `labels.active = yes AND labels.env = prod` --> FeatureViews having both (active: yes) and (env: prod) labels. * `labels.env: *` --> Any FeatureView which has a label with 'env' as the key.
		 * @param {string} orderBy A comma-separated list of fields to order by, sorted in ascending order. Use "desc" after a field name for descending. Supported fields: * `feature_view_id` * `create_time` * `update_time`
		 * @param {number} pageSize The maximum number of FeatureViews to return. The service may return fewer than this value. If unspecified, at most 1000 FeatureViews will be returned. The maximum value is 1000; any value greater than 1000 will be coerced to 1000.
		 * @param {string} pageToken A page token, received from a previous FeatureOnlineStoreAdminService.ListFeatureViews call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to FeatureOnlineStoreAdminService.ListFeatureViews must match the call that provided the page token.
		 * @return {GoogleCloudAiplatformV1beta1ListFeatureViewsResponse} Successful response
		 */
		Aiplatform_projects_locations_featureOnlineStores_featureViews_list(parent: string, filter: string | null | undefined, orderBy: string | null | undefined, pageSize: number | null | undefined, pageToken: string | null | undefined): Observable<GoogleCloudAiplatformV1beta1ListFeatureViewsResponse> {
			return this.http.get<GoogleCloudAiplatformV1beta1ListFeatureViewsResponse>(this.baseUri + 'v1beta1/' + (parent == null ? '' : encodeURIComponent(parent)) + '/featureViews&filter=' + (filter == null ? '' : encodeURIComponent(filter)) + '&orderBy=' + (orderBy == null ? '' : encodeURIComponent(orderBy)) + '&pageSize=' + pageSize + '&pageToken=' + (pageToken == null ? '' : encodeURIComponent(pageToken)), {});
		}

		/**
		 * Creates a new FeatureView in a given FeatureOnlineStore.
		 * Post v1beta1/{parent}/featureViews
		 * @param {string} parent Required. The resource name of the FeatureOnlineStore to create FeatureViews. Format: `projects/{project}/locations/{location}/featureOnlineStores/{feature_online_store}`
		 * @param {string} featureViewId Required. The ID to use for the FeatureView, which will become the final component of the FeatureView's resource name. This value may be up to 60 characters, and valid characters are `[a-z0-9_]`. The first character cannot be a number. The value must be unique within a FeatureOnlineStore.
		 * @param {boolean} runSyncImmediately Immutable. If set to true, one on demand sync will be run immediately, regardless whether the FeatureView.sync_config is configured or not.
		 * @return {GoogleLongrunningOperation} Successful response
		 */
		Aiplatform_projects_locations_featureOnlineStores_featureViews_create(parent: string, featureViewId: string | null | undefined, runSyncImmediately: boolean | null | undefined, requestBody: GoogleCloudAiplatformV1beta1FeatureView): Observable<GoogleLongrunningOperation> {
			return this.http.post<GoogleLongrunningOperation>(this.baseUri + 'v1beta1/' + (parent == null ? '' : encodeURIComponent(parent)) + '/featureViews&featureViewId=' + (featureViewId == null ? '' : encodeURIComponent(featureViewId)) + '&runSyncImmediately=' + runSyncImmediately, JSON.stringify(requestBody), { headers: { 'Content-Type': 'application/json;charset=UTF-8' } });
		}

		/**
		 * Lists Features in a given EntityType.
		 * Get v1beta1/{parent}/features
		 * @param {string} parent Required. The resource name of the Location to list Features. Format for entity_type as parent: `projects/{project}/locations/{location}/featurestores/{featurestore}/entityTypes/{entity_type}` Format for feature_group as parent: `projects/{project}/locations/{location}/featureGroups/{feature_group}`
		 * @param {string} filter Lists the Features that match the filter expression. The following filters are supported: * `value_type`: Supports = and != comparisons. * `create_time`: Supports =, !=, <, >, >=, and <= comparisons. Values must be in RFC 3339 format. * `update_time`: Supports =, !=, <, >, >=, and <= comparisons. Values must be in RFC 3339 format. * `labels`: Supports key-value equality as well as key presence. Examples: * `value_type = DOUBLE` --> Features whose type is DOUBLE. * `create_time > \"2020-01-31T15:30:00.000000Z\" OR update_time > \"2020-01-31T15:30:00.000000Z\"` --> EntityTypes created or updated after 2020-01-31T15:30:00.000000Z. * `labels.active = yes AND labels.env = prod` --> Features having both (active: yes) and (env: prod) labels. * `labels.env: *` --> Any Feature which has a label with 'env' as the key.
		 * @param {number} latestStatsCount Only applicable for Vertex AI Feature Store (Legacy). If set, return the most recent ListFeaturesRequest.latest_stats_count of stats for each Feature in response. Valid value is [0, 10]. If number of stats exists < ListFeaturesRequest.latest_stats_count, return all existing stats.
		 * @param {string} orderBy A comma-separated list of fields to order by, sorted in ascending order. Use "desc" after a field name for descending. Supported fields: * `feature_id` * `value_type` (Not supported for FeatureRegistry Feature) * `create_time` * `update_time`
		 * @param {number} pageSize The maximum number of Features to return. The service may return fewer than this value. If unspecified, at most 1000 Features will be returned. The maximum value is 1000; any value greater than 1000 will be coerced to 1000.
		 * @param {string} pageToken A page token, received from a previous FeaturestoreService.ListFeatures call or FeatureRegistryService.ListFeatures call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to FeaturestoreService.ListFeatures or FeatureRegistryService.ListFeatures must match the call that provided the page token.
		 * @param {string} readMask Mask specifying which fields to read.
		 * @return {GoogleCloudAiplatformV1beta1ListFeaturesResponse} Successful response
		 */
		Aiplatform_projects_locations_featurestores_entityTypes_features_list(parent: string, filter: string | null | undefined, latestStatsCount: number | null | undefined, orderBy: string | null | undefined, pageSize: number | null | undefined, pageToken: string | null | undefined, readMask: string | null | undefined): Observable<GoogleCloudAiplatformV1beta1ListFeaturesResponse> {
			return this.http.get<GoogleCloudAiplatformV1beta1ListFeaturesResponse>(this.baseUri + 'v1beta1/' + (parent == null ? '' : encodeURIComponent(parent)) + '/features&filter=' + (filter == null ? '' : encodeURIComponent(filter)) + '&latestStatsCount=' + latestStatsCount + '&orderBy=' + (orderBy == null ? '' : encodeURIComponent(orderBy)) + '&pageSize=' + pageSize + '&pageToken=' + (pageToken == null ? '' : encodeURIComponent(pageToken)) + '&readMask=' + (readMask == null ? '' : encodeURIComponent(readMask)), {});
		}

		/**
		 * Creates a new Feature in a given EntityType.
		 * Post v1beta1/{parent}/features
		 * @param {string} parent Required. The resource name of the EntityType or FeatureGroup to create a Feature. Format for entity_type as parent: `projects/{project}/locations/{location}/featurestores/{featurestore}/entityTypes/{entity_type}` Format for feature_group as parent: `projects/{project}/locations/{location}/featureGroups/{feature_group}`
		 * @param {string} featureId Required. The ID to use for the Feature, which will become the final component of the Feature's resource name. This value may be up to 128 characters, and valid characters are `[a-z0-9_]`. The first character cannot be a number. The value must be unique within an EntityType/FeatureGroup.
		 * @return {GoogleLongrunningOperation} Successful response
		 */
		Aiplatform_projects_locations_featurestores_entityTypes_features_create(parent: string, featureId: string | null | undefined, requestBody: GoogleCloudAiplatformV1beta1Feature): Observable<GoogleLongrunningOperation> {
			return this.http.post<GoogleLongrunningOperation>(this.baseUri + 'v1beta1/' + (parent == null ? '' : encodeURIComponent(parent)) + '/features&featureId=' + (featureId == null ? '' : encodeURIComponent(featureId)), JSON.stringify(requestBody), { headers: { 'Content-Type': 'application/json;charset=UTF-8' } });
		}

		/**
		 * Creates a batch of Features in a given EntityType.
		 * Post v1beta1/{parent}/features:batchCreate
		 * @param {string} parent Required. The resource name of the EntityType to create the batch of Features under. Format: `projects/{project}/locations/{location}/featurestores/{featurestore}/entityTypes/{entity_type}`
		 * @return {GoogleLongrunningOperation} Successful response
		 */
		Aiplatform_projects_locations_featurestores_entityTypes_features_batchCreate(parent: string, requestBody: GoogleCloudAiplatformV1beta1BatchCreateFeaturesRequest): Observable<GoogleLongrunningOperation> {
			return this.http.post<GoogleLongrunningOperation>(this.baseUri + 'v1beta1/' + (parent == null ? '' : encodeURIComponent(parent)) + '/features:batchCreate', JSON.stringify(requestBody), { headers: { 'Content-Type': 'application/json;charset=UTF-8' } });
		}

		/**
		 * Lists Featurestores in a given project and location.
		 * Get v1beta1/{parent}/featurestores
		 * @param {string} parent Required. The resource name of the Location to list Featurestores. Format: `projects/{project}/locations/{location}`
		 * @param {string} filter Lists the featurestores that match the filter expression. The following fields are supported: * `create_time`: Supports `=`, `!=`, `<`, `>`, `<=`, and `>=` comparisons. Values must be in RFC 3339 format. * `update_time`: Supports `=`, `!=`, `<`, `>`, `<=`, and `>=` comparisons. Values must be in RFC 3339 format. * `online_serving_config.fixed_node_count`: Supports `=`, `!=`, `<`, `>`, `<=`, and `>=` comparisons. * `labels`: Supports key-value equality and key presence. Examples: * `create_time > "2020-01-01" OR update_time > "2020-01-01"` Featurestores created or updated after 2020-01-01. * `labels.env = "prod"` Featurestores with label "env" set to "prod".
		 * @param {string} orderBy A comma-separated list of fields to order by, sorted in ascending order. Use "desc" after a field name for descending. Supported Fields: * `create_time` * `update_time` * `online_serving_config.fixed_node_count`
		 * @param {number} pageSize The maximum number of Featurestores to return. The service may return fewer than this value. If unspecified, at most 100 Featurestores will be returned. The maximum value is 100; any value greater than 100 will be coerced to 100.
		 * @param {string} pageToken A page token, received from a previous FeaturestoreService.ListFeaturestores call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to FeaturestoreService.ListFeaturestores must match the call that provided the page token.
		 * @param {string} readMask Mask specifying which fields to read.
		 * @return {GoogleCloudAiplatformV1beta1ListFeaturestoresResponse} Successful response
		 */
		Aiplatform_projects_locations_featurestores_list(parent: string, filter: string | null | undefined, orderBy: string | null | undefined, pageSize: number | null | undefined, pageToken: string | null | undefined, readMask: string | null | undefined): Observable<GoogleCloudAiplatformV1beta1ListFeaturestoresResponse> {
			return this.http.get<GoogleCloudAiplatformV1beta1ListFeaturestoresResponse>(this.baseUri + 'v1beta1/' + (parent == null ? '' : encodeURIComponent(parent)) + '/featurestores&filter=' + (filter == null ? '' : encodeURIComponent(filter)) + '&orderBy=' + (orderBy == null ? '' : encodeURIComponent(orderBy)) + '&pageSize=' + pageSize + '&pageToken=' + (pageToken == null ? '' : encodeURIComponent(pageToken)) + '&readMask=' + (readMask == null ? '' : encodeURIComponent(readMask)), {});
		}

		/**
		 * Creates a new Featurestore in a given project and location.
		 * Post v1beta1/{parent}/featurestores
		 * @param {string} parent Required. The resource name of the Location to create Featurestores. Format: `projects/{project}/locations/{location}`
		 * @param {string} featurestoreId Required. The ID to use for this Featurestore, which will become the final component of the Featurestore's resource name. This value may be up to 60 characters, and valid characters are `[a-z0-9_]`. The first character cannot be a number. The value must be unique within the project and location.
		 * @return {GoogleLongrunningOperation} Successful response
		 */
		Aiplatform_projects_locations_featurestores_create(parent: string, featurestoreId: string | null | undefined, requestBody: GoogleCloudAiplatformV1beta1Featurestore): Observable<GoogleLongrunningOperation> {
			return this.http.post<GoogleLongrunningOperation>(this.baseUri + 'v1beta1/' + (parent == null ? '' : encodeURIComponent(parent)) + '/featurestores&featurestoreId=' + (featurestoreId == null ? '' : encodeURIComponent(featurestoreId)), JSON.stringify(requestBody), { headers: { 'Content-Type': 'application/json;charset=UTF-8' } });
		}

		/**
		 * Lists HyperparameterTuningJobs in a Location.
		 * Get v1beta1/{parent}/hyperparameterTuningJobs
		 * @param {string} parent Required. The resource name of the Location to list the HyperparameterTuningJobs from. Format: `projects/{project}/locations/{location}`
		 * @param {string} filter The standard list filter. Supported fields: * `display_name` supports `=`, `!=` comparisons, and `:` wildcard. * `state` supports `=`, `!=` comparisons. * `create_time` supports `=`, `!=`,`<`, `<=`,`>`, `>=` comparisons. `create_time` must be in RFC 3339 format. * `labels` supports general map functions that is: `labels.key=value` - key:value equality `labels.key:* - key existence Some examples of using the filter are: * `state="JOB_STATE_SUCCEEDED" AND display_name:"my_job_*"` * `state!="JOB_STATE_FAILED" OR display_name="my_job"` * `NOT display_name="my_job"` * `create_time>"2021-05-18T00:00:00Z"` * `labels.keyA=valueA` * `labels.keyB:*`
		 * @param {number} pageSize The standard list page size.
		 * @param {string} pageToken The standard list page token. Typically obtained via ListHyperparameterTuningJobsResponse.next_page_token of the previous JobService.ListHyperparameterTuningJobs call.
		 * @param {string} readMask Mask specifying which fields to read.
		 * @return {GoogleCloudAiplatformV1beta1ListHyperparameterTuningJobsResponse} Successful response
		 */
		Aiplatform_projects_locations_hyperparameterTuningJobs_list(parent: string, filter: string | null | undefined, pageSize: number | null | undefined, pageToken: string | null | undefined, readMask: string | null | undefined): Observable<GoogleCloudAiplatformV1beta1ListHyperparameterTuningJobsResponse> {
			return this.http.get<GoogleCloudAiplatformV1beta1ListHyperparameterTuningJobsResponse>(this.baseUri + 'v1beta1/' + (parent == null ? '' : encodeURIComponent(parent)) + '/hyperparameterTuningJobs&filter=' + (filter == null ? '' : encodeURIComponent(filter)) + '&pageSize=' + pageSize + '&pageToken=' + (pageToken == null ? '' : encodeURIComponent(pageToken)) + '&readMask=' + (readMask == null ? '' : encodeURIComponent(readMask)), {});
		}

		/**
		 * Creates a HyperparameterTuningJob
		 * Post v1beta1/{parent}/hyperparameterTuningJobs
		 * @param {string} parent Required. The resource name of the Location to create the HyperparameterTuningJob in. Format: `projects/{project}/locations/{location}`
		 * @return {GoogleCloudAiplatformV1beta1HyperparameterTuningJob} Successful response
		 */
		Aiplatform_projects_locations_hyperparameterTuningJobs_create(parent: string, requestBody: GoogleCloudAiplatformV1beta1HyperparameterTuningJob): Observable<GoogleCloudAiplatformV1beta1HyperparameterTuningJob> {
			return this.http.post<GoogleCloudAiplatformV1beta1HyperparameterTuningJob>(this.baseUri + 'v1beta1/' + (parent == null ? '' : encodeURIComponent(parent)) + '/hyperparameterTuningJobs', JSON.stringify(requestBody), { headers: { 'Content-Type': 'application/json;charset=UTF-8' } });
		}

		/**
		 * Lists IndexEndpoints in a Location.
		 * Get v1beta1/{parent}/indexEndpoints
		 * @param {string} parent Required. The resource name of the Location from which to list the IndexEndpoints. Format: `projects/{project}/locations/{location}`
		 * @param {string} filter Optional. An expression for filtering the results of the request. For field names both snake_case and camelCase are supported. * `index_endpoint` supports = and !=. `index_endpoint` represents the IndexEndpoint ID, ie. the last segment of the IndexEndpoint's resourcename. * `display_name` supports =, != and regex() (uses [re2](https://github.com/google/re2/wiki/Syntax) syntax) * `labels` supports general map functions that is: `labels.key=value` - key:value equality `labels.key:* or labels:key - key existence A key including a space must be quoted. `labels."a key"`. Some examples: * `index_endpoint="1"` * `display_name="myDisplayName"` * `regex(display_name, "^A") -> The display name starts with an A. * `labels.myKey="myValue"`
		 * @param {number} pageSize Optional. The standard list page size.
		 * @param {string} pageToken Optional. The standard list page token. Typically obtained via ListIndexEndpointsResponse.next_page_token of the previous IndexEndpointService.ListIndexEndpoints call.
		 * @param {string} readMask Optional. Mask specifying which fields to read.
		 * @return {GoogleCloudAiplatformV1beta1ListIndexEndpointsResponse} Successful response
		 */
		Aiplatform_projects_locations_indexEndpoints_list(parent: string, filter: string | null | undefined, pageSize: number | null | undefined, pageToken: string | null | undefined, readMask: string | null | undefined): Observable<GoogleCloudAiplatformV1beta1ListIndexEndpointsResponse> {
			return this.http.get<GoogleCloudAiplatformV1beta1ListIndexEndpointsResponse>(this.baseUri + 'v1beta1/' + (parent == null ? '' : encodeURIComponent(parent)) + '/indexEndpoints&filter=' + (filter == null ? '' : encodeURIComponent(filter)) + '&pageSize=' + pageSize + '&pageToken=' + (pageToken == null ? '' : encodeURIComponent(pageToken)) + '&readMask=' + (readMask == null ? '' : encodeURIComponent(readMask)), {});
		}

		/**
		 * Creates an IndexEndpoint.
		 * Post v1beta1/{parent}/indexEndpoints
		 * @param {string} parent Required. The resource name of the Location to create the IndexEndpoint in. Format: `projects/{project}/locations/{location}`
		 * @return {GoogleLongrunningOperation} Successful response
		 */
		Aiplatform_projects_locations_indexEndpoints_create(parent: string, requestBody: GoogleCloudAiplatformV1beta1IndexEndpoint): Observable<GoogleLongrunningOperation> {
			return this.http.post<GoogleLongrunningOperation>(this.baseUri + 'v1beta1/' + (parent == null ? '' : encodeURIComponent(parent)) + '/indexEndpoints', JSON.stringify(requestBody), { headers: { 'Content-Type': 'application/json;charset=UTF-8' } });
		}

		/**
		 * Lists Indexes in a Location.
		 * Get v1beta1/{parent}/indexes
		 * @param {string} parent Required. The resource name of the Location from which to list the Indexes. Format: `projects/{project}/locations/{location}`
		 * @param {string} filter The standard list filter.
		 * @param {number} pageSize The standard list page size.
		 * @param {string} pageToken The standard list page token. Typically obtained via ListIndexesResponse.next_page_token of the previous IndexService.ListIndexes call.
		 * @param {string} readMask Mask specifying which fields to read.
		 * @return {GoogleCloudAiplatformV1beta1ListIndexesResponse} Successful response
		 */
		Aiplatform_projects_locations_indexes_list(parent: string, filter: string | null | undefined, pageSize: number | null | undefined, pageToken: string | null | undefined, readMask: string | null | undefined): Observable<GoogleCloudAiplatformV1beta1ListIndexesResponse> {
			return this.http.get<GoogleCloudAiplatformV1beta1ListIndexesResponse>(this.baseUri + 'v1beta1/' + (parent == null ? '' : encodeURIComponent(parent)) + '/indexes&filter=' + (filter == null ? '' : encodeURIComponent(filter)) + '&pageSize=' + pageSize + '&pageToken=' + (pageToken == null ? '' : encodeURIComponent(pageToken)) + '&readMask=' + (readMask == null ? '' : encodeURIComponent(readMask)), {});
		}

		/**
		 * Creates an Index.
		 * Post v1beta1/{parent}/indexes
		 * @param {string} parent Required. The resource name of the Location to create the Index in. Format: `projects/{project}/locations/{location}`
		 * @return {GoogleLongrunningOperation} Successful response
		 */
		Aiplatform_projects_locations_indexes_create(parent: string, requestBody: GoogleCloudAiplatformV1beta1Index): Observable<GoogleLongrunningOperation> {
			return this.http.post<GoogleLongrunningOperation>(this.baseUri + 'v1beta1/' + (parent == null ? '' : encodeURIComponent(parent)) + '/indexes', JSON.stringify(requestBody), { headers: { 'Content-Type': 'application/json;charset=UTF-8' } });
		}

		/**
		 * Lists MetadataSchemas.
		 * Get v1beta1/{parent}/metadataSchemas
		 * @param {string} parent Required. The MetadataStore whose MetadataSchemas should be listed. Format: `projects/{project}/locations/{location}/metadataStores/{metadatastore}`
		 * @param {string} filter A query to filter available MetadataSchemas for matching results.
		 * @param {number} pageSize The maximum number of MetadataSchemas to return. The service may return fewer. Must be in range 1-1000, inclusive. Defaults to 100.
		 * @param {string} pageToken A page token, received from a previous MetadataService.ListMetadataSchemas call. Provide this to retrieve the next page. When paginating, all other provided parameters must match the call that provided the page token. (Otherwise the request will fail with INVALID_ARGUMENT error.)
		 * @return {GoogleCloudAiplatformV1beta1ListMetadataSchemasResponse} Successful response
		 */
		Aiplatform_projects_locations_metadataStores_metadataSchemas_list(parent: string, filter: string | null | undefined, pageSize: number | null | undefined, pageToken: string | null | undefined): Observable<GoogleCloudAiplatformV1beta1ListMetadataSchemasResponse> {
			return this.http.get<GoogleCloudAiplatformV1beta1ListMetadataSchemasResponse>(this.baseUri + 'v1beta1/' + (parent == null ? '' : encodeURIComponent(parent)) + '/metadataSchemas&filter=' + (filter == null ? '' : encodeURIComponent(filter)) + '&pageSize=' + pageSize + '&pageToken=' + (pageToken == null ? '' : encodeURIComponent(pageToken)), {});
		}

		/**
		 * Creates a MetadataSchema.
		 * Post v1beta1/{parent}/metadataSchemas
		 * @param {string} parent Required. The resource name of the MetadataStore where the MetadataSchema should be created. Format: `projects/{project}/locations/{location}/metadataStores/{metadatastore}`
		 * @param {string} metadataSchemaId The {metadata_schema} portion of the resource name with the format: `projects/{project}/locations/{location}/metadataStores/{metadatastore}/metadataSchemas/{metadataschema}` If not provided, the MetadataStore's ID will be a UUID generated by the service. Must be 4-128 characters in length. Valid characters are `/a-z-/`. Must be unique across all MetadataSchemas in the parent Location. (Otherwise the request will fail with ALREADY_EXISTS, or PERMISSION_DENIED if the caller can't view the preexisting MetadataSchema.)
		 * @return {GoogleCloudAiplatformV1beta1MetadataSchema} Successful response
		 */
		Aiplatform_projects_locations_metadataStores_metadataSchemas_create(parent: string, metadataSchemaId: string | null | undefined, requestBody: GoogleCloudAiplatformV1beta1MetadataSchema): Observable<GoogleCloudAiplatformV1beta1MetadataSchema> {
			return this.http.post<GoogleCloudAiplatformV1beta1MetadataSchema>(this.baseUri + 'v1beta1/' + (parent == null ? '' : encodeURIComponent(parent)) + '/metadataSchemas&metadataSchemaId=' + (metadataSchemaId == null ? '' : encodeURIComponent(metadataSchemaId)), JSON.stringify(requestBody), { headers: { 'Content-Type': 'application/json;charset=UTF-8' } });
		}

		/**
		 * Lists MetadataStores for a Location.
		 * Get v1beta1/{parent}/metadataStores
		 * @param {string} parent Required. The Location whose MetadataStores should be listed. Format: `projects/{project}/locations/{location}`
		 * @param {number} pageSize The maximum number of Metadata Stores to return. The service may return fewer. Must be in range 1-1000, inclusive. Defaults to 100.
		 * @param {string} pageToken A page token, received from a previous MetadataService.ListMetadataStores call. Provide this to retrieve the subsequent page. When paginating, all other provided parameters must match the call that provided the page token. (Otherwise the request will fail with INVALID_ARGUMENT error.)
		 * @return {GoogleCloudAiplatformV1beta1ListMetadataStoresResponse} Successful response
		 */
		Aiplatform_projects_locations_metadataStores_list(parent: string, pageSize: number | null | undefined, pageToken: string | null | undefined): Observable<GoogleCloudAiplatformV1beta1ListMetadataStoresResponse> {
			return this.http.get<GoogleCloudAiplatformV1beta1ListMetadataStoresResponse>(this.baseUri + 'v1beta1/' + (parent == null ? '' : encodeURIComponent(parent)) + '/metadataStores&pageSize=' + pageSize + '&pageToken=' + (pageToken == null ? '' : encodeURIComponent(pageToken)), {});
		}

		/**
		 * Initializes a MetadataStore, including allocation of resources.
		 * Post v1beta1/{parent}/metadataStores
		 * @param {string} parent Required. The resource name of the Location where the MetadataStore should be created. Format: `projects/{project}/locations/{location}/`
		 * @param {string} metadataStoreId The {metadatastore} portion of the resource name with the format: `projects/{project}/locations/{location}/metadataStores/{metadatastore}` If not provided, the MetadataStore's ID will be a UUID generated by the service. Must be 4-128 characters in length. Valid characters are `/a-z-/`. Must be unique across all MetadataStores in the parent Location. (Otherwise the request will fail with ALREADY_EXISTS, or PERMISSION_DENIED if the caller can't view the preexisting MetadataStore.)
		 * @return {GoogleLongrunningOperation} Successful response
		 */
		Aiplatform_projects_locations_metadataStores_create(parent: string, metadataStoreId: string | null | undefined, requestBody: GoogleCloudAiplatformV1beta1MetadataStore): Observable<GoogleLongrunningOperation> {
			return this.http.post<GoogleLongrunningOperation>(this.baseUri + 'v1beta1/' + (parent == null ? '' : encodeURIComponent(parent)) + '/metadataStores&metadataStoreId=' + (metadataStoreId == null ? '' : encodeURIComponent(metadataStoreId)), JSON.stringify(requestBody), { headers: { 'Content-Type': 'application/json;charset=UTF-8' } });
		}

		/**
		 * Batch migrates resources from ml.googleapis.com, automl.googleapis.com, and datalabeling.googleapis.com to Vertex AI.
		 * Post v1beta1/{parent}/migratableResources:batchMigrate
		 * @param {string} parent Required. The location of the migrated resource will live in. Format: `projects/{project}/locations/{location}`
		 * @return {GoogleLongrunningOperation} Successful response
		 */
		Aiplatform_projects_locations_migratableResources_batchMigrate(parent: string, requestBody: GoogleCloudAiplatformV1beta1BatchMigrateResourcesRequest): Observable<GoogleLongrunningOperation> {
			return this.http.post<GoogleLongrunningOperation>(this.baseUri + 'v1beta1/' + (parent == null ? '' : encodeURIComponent(parent)) + '/migratableResources:batchMigrate', JSON.stringify(requestBody), { headers: { 'Content-Type': 'application/json;charset=UTF-8' } });
		}

		/**
		 * Searches all of the resources in automl.googleapis.com, datalabeling.googleapis.com and ml.googleapis.com that can be migrated to Vertex AI's given location.
		 * Post v1beta1/{parent}/migratableResources:search
		 * @param {string} parent Required. The location that the migratable resources should be searched from. It's the Vertex AI location that the resources can be migrated to, not the resources' original location. Format: `projects/{project}/locations/{location}`
		 * @return {GoogleCloudAiplatformV1beta1SearchMigratableResourcesResponse} Successful response
		 */
		Aiplatform_projects_locations_migratableResources_search(parent: string, requestBody: GoogleCloudAiplatformV1beta1SearchMigratableResourcesRequest): Observable<GoogleCloudAiplatformV1beta1SearchMigratableResourcesResponse> {
			return this.http.post<GoogleCloudAiplatformV1beta1SearchMigratableResourcesResponse>(this.baseUri + 'v1beta1/' + (parent == null ? '' : encodeURIComponent(parent)) + '/migratableResources:search', JSON.stringify(requestBody), { headers: { 'Content-Type': 'application/json;charset=UTF-8' } });
		}

		/**
		 * Lists ModelDeploymentMonitoringJobs in a Location.
		 * Get v1beta1/{parent}/modelDeploymentMonitoringJobs
		 * @param {string} parent Required. The parent of the ModelDeploymentMonitoringJob. Format: `projects/{project}/locations/{location}`
		 * @param {string} filter The standard list filter. Supported fields: * `display_name` supports `=`, `!=` comparisons, and `:` wildcard. * `state` supports `=`, `!=` comparisons. * `create_time` supports `=`, `!=`,`<`, `<=`,`>`, `>=` comparisons. `create_time` must be in RFC 3339 format. * `labels` supports general map functions that is: `labels.key=value` - key:value equality `labels.key:* - key existence Some examples of using the filter are: * `state="JOB_STATE_SUCCEEDED" AND display_name:"my_job_*"` * `state!="JOB_STATE_FAILED" OR display_name="my_job"` * `NOT display_name="my_job"` * `create_time>"2021-05-18T00:00:00Z"` * `labels.keyA=valueA` * `labels.keyB:*`
		 * @param {number} pageSize The standard list page size.
		 * @param {string} pageToken The standard list page token.
		 * @param {string} readMask Mask specifying which fields to read
		 * @return {GoogleCloudAiplatformV1beta1ListModelDeploymentMonitoringJobsResponse} Successful response
		 */
		Aiplatform_projects_locations_modelDeploymentMonitoringJobs_list(parent: string, filter: string | null | undefined, pageSize: number | null | undefined, pageToken: string | null | undefined, readMask: string | null | undefined): Observable<GoogleCloudAiplatformV1beta1ListModelDeploymentMonitoringJobsResponse> {
			return this.http.get<GoogleCloudAiplatformV1beta1ListModelDeploymentMonitoringJobsResponse>(this.baseUri + 'v1beta1/' + (parent == null ? '' : encodeURIComponent(parent)) + '/modelDeploymentMonitoringJobs&filter=' + (filter == null ? '' : encodeURIComponent(filter)) + '&pageSize=' + pageSize + '&pageToken=' + (pageToken == null ? '' : encodeURIComponent(pageToken)) + '&readMask=' + (readMask == null ? '' : encodeURIComponent(readMask)), {});
		}

		/**
		 * Creates a ModelDeploymentMonitoringJob. It will run periodically on a configured interval.
		 * Post v1beta1/{parent}/modelDeploymentMonitoringJobs
		 * @param {string} parent Required. The parent of the ModelDeploymentMonitoringJob. Format: `projects/{project}/locations/{location}`
		 * @return {GoogleCloudAiplatformV1beta1ModelDeploymentMonitoringJob} Successful response
		 */
		Aiplatform_projects_locations_modelDeploymentMonitoringJobs_create(parent: string, requestBody: GoogleCloudAiplatformV1beta1ModelDeploymentMonitoringJob): Observable<GoogleCloudAiplatformV1beta1ModelDeploymentMonitoringJob> {
			return this.http.post<GoogleCloudAiplatformV1beta1ModelDeploymentMonitoringJob>(this.baseUri + 'v1beta1/' + (parent == null ? '' : encodeURIComponent(parent)) + '/modelDeploymentMonitoringJobs', JSON.stringify(requestBody), { headers: { 'Content-Type': 'application/json;charset=UTF-8' } });
		}

		/**
		 * Lists publisher models in Model Garden.
		 * Get v1beta1/{parent}/models
		 * @param {string} parent Required. The name of the Publisher from which to list the PublisherModels. Format: `publishers/{publisher}`
		 * @param {string} filter Optional. The standard list filter.
		 * @param {string} languageCode Optional. The IETF BCP-47 language code representing the language in which the publisher models' text information should be written in (see go/bcp47). If not set, by default English (en).
		 * @param {string} orderBy Optional. A comma-separated list of fields to order by, sorted in ascending order. Use "desc" after a field name for descending.
		 * @param {number} pageSize Optional. The standard list page size.
		 * @param {string} pageToken Optional. The standard list page token. Typically obtained via ListPublisherModelsResponse.next_page_token of the previous ModelGardenService.ListPublisherModels call.
		 * @param {Aiplatform_publishers_models_getView} view Optional. PublisherModel view specifying which fields to read.
		 * @return {GoogleCloudAiplatformV1beta1ListPublisherModelsResponse} Successful response
		 */
		Aiplatform_publishers_models_list(parent: string, filter: string | null | undefined, languageCode: string | null | undefined, orderBy: string | null | undefined, pageSize: number | null | undefined, pageToken: string | null | undefined, view: Aiplatform_publishers_models_getView | null | undefined): Observable<GoogleCloudAiplatformV1beta1ListPublisherModelsResponse> {
			return this.http.get<GoogleCloudAiplatformV1beta1ListPublisherModelsResponse>(this.baseUri + 'v1beta1/' + (parent == null ? '' : encodeURIComponent(parent)) + '/models&filter=' + (filter == null ? '' : encodeURIComponent(filter)) + '&languageCode=' + (languageCode == null ? '' : encodeURIComponent(languageCode)) + '&orderBy=' + (orderBy == null ? '' : encodeURIComponent(orderBy)) + '&pageSize=' + pageSize + '&pageToken=' + (pageToken == null ? '' : encodeURIComponent(pageToken)) + '&view=' + view, {});
		}

		/**
		 * Copies an already existing Vertex AI Model into the specified Location. The source Model must exist in the same Project. When copying custom Models, the users themselves are responsible for Model.metadata content to be region-agnostic, as well as making sure that any resources (e.g. files) it depends on remain accessible.
		 * Post v1beta1/{parent}/models:copy
		 * @param {string} parent Required. The resource name of the Location into which to copy the Model. Format: `projects/{project}/locations/{location}`
		 * @return {GoogleLongrunningOperation} Successful response
		 */
		Aiplatform_projects_locations_models_copy(parent: string, requestBody: GoogleCloudAiplatformV1beta1CopyModelRequest): Observable<GoogleLongrunningOperation> {
			return this.http.post<GoogleLongrunningOperation>(this.baseUri + 'v1beta1/' + (parent == null ? '' : encodeURIComponent(parent)) + '/models:copy', JSON.stringify(requestBody), { headers: { 'Content-Type': 'application/json;charset=UTF-8' } });
		}

		/**
		 * Uploads a Model artifact into Vertex AI.
		 * Post v1beta1/{parent}/models:upload
		 * @param {string} parent Required. The resource name of the Location into which to upload the Model. Format: `projects/{project}/locations/{location}`
		 * @return {GoogleLongrunningOperation} Successful response
		 */
		Aiplatform_projects_locations_models_upload(parent: string, requestBody: GoogleCloudAiplatformV1beta1UploadModelRequest): Observable<GoogleLongrunningOperation> {
			return this.http.post<GoogleLongrunningOperation>(this.baseUri + 'v1beta1/' + (parent == null ? '' : encodeURIComponent(parent)) + '/models:upload', JSON.stringify(requestBody), { headers: { 'Content-Type': 'application/json;charset=UTF-8' } });
		}

		/**
		 * Lists NasJobs in a Location.
		 * Get v1beta1/{parent}/nasJobs
		 * @param {string} parent Required. The resource name of the Location to list the NasJobs from. Format: `projects/{project}/locations/{location}`
		 * @param {string} filter The standard list filter. Supported fields: * `display_name` supports `=`, `!=` comparisons, and `:` wildcard. * `state` supports `=`, `!=` comparisons. * `create_time` supports `=`, `!=`,`<`, `<=`,`>`, `>=` comparisons. `create_time` must be in RFC 3339 format. * `labels` supports general map functions that is: `labels.key=value` - key:value equality `labels.key:* - key existence Some examples of using the filter are: * `state="JOB_STATE_SUCCEEDED" AND display_name:"my_job_*"` * `state!="JOB_STATE_FAILED" OR display_name="my_job"` * `NOT display_name="my_job"` * `create_time>"2021-05-18T00:00:00Z"` * `labels.keyA=valueA` * `labels.keyB:*`
		 * @param {number} pageSize The standard list page size.
		 * @param {string} pageToken The standard list page token. Typically obtained via ListNasJobsResponse.next_page_token of the previous JobService.ListNasJobs call.
		 * @param {string} readMask Mask specifying which fields to read.
		 * @return {GoogleCloudAiplatformV1beta1ListNasJobsResponse} Successful response
		 */
		Aiplatform_projects_locations_nasJobs_list(parent: string, filter: string | null | undefined, pageSize: number | null | undefined, pageToken: string | null | undefined, readMask: string | null | undefined): Observable<GoogleCloudAiplatformV1beta1ListNasJobsResponse> {
			return this.http.get<GoogleCloudAiplatformV1beta1ListNasJobsResponse>(this.baseUri + 'v1beta1/' + (parent == null ? '' : encodeURIComponent(parent)) + '/nasJobs&filter=' + (filter == null ? '' : encodeURIComponent(filter)) + '&pageSize=' + pageSize + '&pageToken=' + (pageToken == null ? '' : encodeURIComponent(pageToken)) + '&readMask=' + (readMask == null ? '' : encodeURIComponent(readMask)), {});
		}

		/**
		 * Creates a NasJob
		 * Post v1beta1/{parent}/nasJobs
		 * @param {string} parent Required. The resource name of the Location to create the NasJob in. Format: `projects/{project}/locations/{location}`
		 * @return {GoogleCloudAiplatformV1beta1NasJob} Successful response
		 */
		Aiplatform_projects_locations_nasJobs_create(parent: string, requestBody: GoogleCloudAiplatformV1beta1NasJob): Observable<GoogleCloudAiplatformV1beta1NasJob> {
			return this.http.post<GoogleCloudAiplatformV1beta1NasJob>(this.baseUri + 'v1beta1/' + (parent == null ? '' : encodeURIComponent(parent)) + '/nasJobs', JSON.stringify(requestBody), { headers: { 'Content-Type': 'application/json;charset=UTF-8' } });
		}

		/**
		 * List top NasTrialDetails of a NasJob.
		 * Get v1beta1/{parent}/nasTrialDetails
		 * @param {string} parent Required. The name of the NasJob resource. Format: `projects/{project}/locations/{location}/nasJobs/{nas_job}`
		 * @param {number} pageSize The standard list page size.
		 * @param {string} pageToken The standard list page token. Typically obtained via ListNasTrialDetailsResponse.next_page_token of the previous JobService.ListNasTrialDetails call.
		 * @return {GoogleCloudAiplatformV1beta1ListNasTrialDetailsResponse} Successful response
		 */
		Aiplatform_projects_locations_nasJobs_nasTrialDetails_list(parent: string, pageSize: number | null | undefined, pageToken: string | null | undefined): Observable<GoogleCloudAiplatformV1beta1ListNasTrialDetailsResponse> {
			return this.http.get<GoogleCloudAiplatformV1beta1ListNasTrialDetailsResponse>(this.baseUri + 'v1beta1/' + (parent == null ? '' : encodeURIComponent(parent)) + '/nasTrialDetails&pageSize=' + pageSize + '&pageToken=' + (pageToken == null ? '' : encodeURIComponent(pageToken)), {});
		}

		/**
		 * Lists NotebookRuntimeTemplates in a Location.
		 * Get v1beta1/{parent}/notebookRuntimeTemplates
		 * @param {string} parent Required. The resource name of the Location from which to list the NotebookRuntimeTemplates. Format: `projects/{project}/locations/{location}`
		 * @param {string} filter Optional. An expression for filtering the results of the request. For field names both snake_case and camelCase are supported. * `notebookRuntimeTemplate` supports = and !=. `notebookRuntimeTemplate` represents the NotebookRuntimeTemplate ID, i.e. the last segment of the NotebookRuntimeTemplate's resource name. * `display_name` supports = and != * `labels` supports general map functions that is: * `labels.key=value` - key:value equality * `labels.key:* or labels:key - key existence * A key including a space must be quoted. `labels."a key"`. * `notebookRuntimeType` supports = and !=. notebookRuntimeType enum: [USER_DEFINED, ONE_CLICK]. Some examples: * `notebookRuntimeTemplate=notebookRuntimeTemplate123` * `displayName="myDisplayName"` * `labels.myKey="myValue"` * `notebookRuntimeType=USER_DEFINED`
		 * @param {string} orderBy Optional. A comma-separated list of fields to order by, sorted in ascending order. Use "desc" after a field name for descending. Supported fields: * `display_name` * `create_time` * `update_time` Example: `display_name, create_time desc`.
		 * @param {number} pageSize Optional. The standard list page size.
		 * @param {string} pageToken Optional. The standard list page token. Typically obtained via ListNotebookRuntimeTemplatesResponse.next_page_token of the previous NotebookService.ListNotebookRuntimeTemplates call.
		 * @param {string} readMask Optional. Mask specifying which fields to read.
		 * @return {GoogleCloudAiplatformV1beta1ListNotebookRuntimeTemplatesResponse} Successful response
		 */
		Aiplatform_projects_locations_notebookRuntimeTemplates_list(parent: string, filter: string | null | undefined, orderBy: string | null | undefined, pageSize: number | null | undefined, pageToken: string | null | undefined, readMask: string | null | undefined): Observable<GoogleCloudAiplatformV1beta1ListNotebookRuntimeTemplatesResponse> {
			return this.http.get<GoogleCloudAiplatformV1beta1ListNotebookRuntimeTemplatesResponse>(this.baseUri + 'v1beta1/' + (parent == null ? '' : encodeURIComponent(parent)) + '/notebookRuntimeTemplates&filter=' + (filter == null ? '' : encodeURIComponent(filter)) + '&orderBy=' + (orderBy == null ? '' : encodeURIComponent(orderBy)) + '&pageSize=' + pageSize + '&pageToken=' + (pageToken == null ? '' : encodeURIComponent(pageToken)) + '&readMask=' + (readMask == null ? '' : encodeURIComponent(readMask)), {});
		}

		/**
		 * Creates a NotebookRuntimeTemplate.
		 * Post v1beta1/{parent}/notebookRuntimeTemplates
		 * @param {string} parent Required. The resource name of the Location to create the NotebookRuntimeTemplate. Format: `projects/{project}/locations/{location}`
		 * @param {string} notebookRuntimeTemplateId Optional. User specified ID for the notebook runtime template.
		 * @return {GoogleLongrunningOperation} Successful response
		 */
		Aiplatform_projects_locations_notebookRuntimeTemplates_create(parent: string, notebookRuntimeTemplateId: string | null | undefined, requestBody: GoogleCloudAiplatformV1beta1NotebookRuntimeTemplate): Observable<GoogleLongrunningOperation> {
			return this.http.post<GoogleLongrunningOperation>(this.baseUri + 'v1beta1/' + (parent == null ? '' : encodeURIComponent(parent)) + '/notebookRuntimeTemplates&notebookRuntimeTemplateId=' + (notebookRuntimeTemplateId == null ? '' : encodeURIComponent(notebookRuntimeTemplateId)), JSON.stringify(requestBody), { headers: { 'Content-Type': 'application/json;charset=UTF-8' } });
		}

		/**
		 * Lists NotebookRuntimes in a Location.
		 * Get v1beta1/{parent}/notebookRuntimes
		 * @param {string} parent Required. The resource name of the Location from which to list the NotebookRuntimes. Format: `projects/{project}/locations/{location}`
		 * @param {string} filter Optional. An expression for filtering the results of the request. For field names both snake_case and camelCase are supported. * `notebookRuntime` supports = and !=. `notebookRuntime` represents the NotebookRuntime ID, i.e. the last segment of the NotebookRuntime's resource name. * `displayName` supports = and != and regex. * `notebookRuntimeTemplate` supports = and !=. `notebookRuntimeTemplate` represents the NotebookRuntimeTemplate ID, i.e. the last segment of the NotebookRuntimeTemplate's resource name. * `healthState` supports = and !=. healthState enum: [HEALTHY, UNHEALTHY, HEALTH_STATE_UNSPECIFIED]. * `runtimeState` supports = and !=. runtimeState enum: [RUNTIME_STATE_UNSPECIFIED, RUNNING, BEING_STARTED, BEING_STOPPED, STOPPED, BEING_UPGRADED]. * `runtimeUser` supports = and !=. * API version is UI only: `uiState` supports = and !=. uiState enum: [UI_RESOURCE_STATE_UNSPECIFIED, UI_RESOURCE_STATE_BEING_CREATED, UI_RESOURCE_STATE_ACTIVE, UI_RESOURCE_STATE_BEING_DELETED, UI_RESOURCE_STATE_CREATION_FAILED]. * `notebookRuntimeType` supports = and !=. notebookRuntimeType enum: [USER_DEFINED, ONE_CLICK]. Some examples: * `notebookRuntime="notebookRuntime123"` * `displayName="myDisplayName"` and `displayName=~"myDisplayNameRegex"` * `notebookRuntimeTemplate="notebookRuntimeTemplate321"` * `healthState=HEALTHY` * `runtimeState=RUNNING` * `runtimeUser="test@google.com"` * `uiState=UI_RESOURCE_STATE_BEING_DELETED` * `notebookRuntimeType=USER_DEFINED`
		 * @param {string} orderBy Optional. A comma-separated list of fields to order by, sorted in ascending order. Use "desc" after a field name for descending. Supported fields: * `display_name` * `create_time` * `update_time` Example: `display_name, create_time desc`.
		 * @param {number} pageSize Optional. The standard list page size.
		 * @param {string} pageToken Optional. The standard list page token. Typically obtained via ListNotebookRuntimesResponse.next_page_token of the previous NotebookService.ListNotebookRuntimes call.
		 * @param {string} readMask Optional. Mask specifying which fields to read.
		 * @return {GoogleCloudAiplatformV1beta1ListNotebookRuntimesResponse} Successful response
		 */
		Aiplatform_projects_locations_notebookRuntimes_list(parent: string, filter: string | null | undefined, orderBy: string | null | undefined, pageSize: number | null | undefined, pageToken: string | null | undefined, readMask: string | null | undefined): Observable<GoogleCloudAiplatformV1beta1ListNotebookRuntimesResponse> {
			return this.http.get<GoogleCloudAiplatformV1beta1ListNotebookRuntimesResponse>(this.baseUri + 'v1beta1/' + (parent == null ? '' : encodeURIComponent(parent)) + '/notebookRuntimes&filter=' + (filter == null ? '' : encodeURIComponent(filter)) + '&orderBy=' + (orderBy == null ? '' : encodeURIComponent(orderBy)) + '&pageSize=' + pageSize + '&pageToken=' + (pageToken == null ? '' : encodeURIComponent(pageToken)) + '&readMask=' + (readMask == null ? '' : encodeURIComponent(readMask)), {});
		}

		/**
		 * Assigns a NotebookRuntime to a user for a particular Notebook file. This method will either returns an existing assignment or generates a new one.
		 * Post v1beta1/{parent}/notebookRuntimes:assign
		 * @param {string} parent Required. The resource name of the Location to get the NotebookRuntime assignment. Format: `projects/{project}/locations/{location}`
		 * @return {GoogleLongrunningOperation} Successful response
		 */
		Aiplatform_projects_locations_notebookRuntimes_assign(parent: string, requestBody: GoogleCloudAiplatformV1beta1AssignNotebookRuntimeRequest): Observable<GoogleLongrunningOperation> {
			return this.http.post<GoogleLongrunningOperation>(this.baseUri + 'v1beta1/' + (parent == null ? '' : encodeURIComponent(parent)) + '/notebookRuntimes:assign', JSON.stringify(requestBody), { headers: { 'Content-Type': 'application/json;charset=UTF-8' } });
		}

		/**
		 * Lists PersistentResources in a Location.
		 * Get v1beta1/{parent}/persistentResources
		 * @param {string} parent Required. The resource name of the Location to list the PersistentResources from. Format: `projects/{project}/locations/{location}`
		 * @param {number} pageSize Optional. The standard list page size.
		 * @param {string} pageToken Optional. The standard list page token. Typically obtained via ListPersistentResourceResponse.next_page_token of the previous PersistentResourceService.ListPersistentResource call.
		 * @return {GoogleCloudAiplatformV1beta1ListPersistentResourcesResponse} Successful response
		 */
		Aiplatform_projects_locations_persistentResources_list(parent: string, pageSize: number | null | undefined, pageToken: string | null | undefined): Observable<GoogleCloudAiplatformV1beta1ListPersistentResourcesResponse> {
			return this.http.get<GoogleCloudAiplatformV1beta1ListPersistentResourcesResponse>(this.baseUri + 'v1beta1/' + (parent == null ? '' : encodeURIComponent(parent)) + '/persistentResources&pageSize=' + pageSize + '&pageToken=' + (pageToken == null ? '' : encodeURIComponent(pageToken)), {});
		}

		/**
		 * Creates a PersistentResource.
		 * Post v1beta1/{parent}/persistentResources
		 * @param {string} parent Required. The resource name of the Location to create the PersistentResource in. Format: `projects/{project}/locations/{location}`
		 * @param {string} persistentResourceId Required. The ID to use for the PersistentResource, which become the final component of the PersistentResource's resource name. The maximum length is 63 characters, and valid characters are `/^[a-z]([a-z0-9-]{0,61}[a-z0-9])?$/`.
		 * @return {GoogleLongrunningOperation} Successful response
		 */
		Aiplatform_projects_locations_persistentResources_create(parent: string, persistentResourceId: string | null | undefined, requestBody: GoogleCloudAiplatformV1beta1PersistentResource): Observable<GoogleLongrunningOperation> {
			return this.http.post<GoogleLongrunningOperation>(this.baseUri + 'v1beta1/' + (parent == null ? '' : encodeURIComponent(parent)) + '/persistentResources&persistentResourceId=' + (persistentResourceId == null ? '' : encodeURIComponent(persistentResourceId)), JSON.stringify(requestBody), { headers: { 'Content-Type': 'application/json;charset=UTF-8' } });
		}

		/**
		 * Lists PipelineJobs in a Location.
		 * Get v1beta1/{parent}/pipelineJobs
		 * @param {string} parent Required. The resource name of the Location to list the PipelineJobs from. Format: `projects/{project}/locations/{location}`
		 * @param {string} filter Lists the PipelineJobs that match the filter expression. The following fields are supported: * `pipeline_name`: Supports `=` and `!=` comparisons. * `display_name`: Supports `=`, `!=` comparisons, and `:` wildcard. * `pipeline_job_user_id`: Supports `=`, `!=` comparisons, and `:` wildcard. for example, can check if pipeline's display_name contains *step* by doing display_name:\"*step*\" * `state`: Supports `=` and `!=` comparisons. * `create_time`: Supports `=`, `!=`, `<`, `>`, `<=`, and `>=` comparisons. Values must be in RFC 3339 format. * `update_time`: Supports `=`, `!=`, `<`, `>`, `<=`, and `>=` comparisons. Values must be in RFC 3339 format. * `end_time`: Supports `=`, `!=`, `<`, `>`, `<=`, and `>=` comparisons. Values must be in RFC 3339 format. * `labels`: Supports key-value equality and key presence. * `template_uri`: Supports `=`, `!=` comparisons, and `:` wildcard. * `template_metadata.version`: Supports `=`, `!=` comparisons, and `:` wildcard. Filter expressions can be combined together using logical operators (`AND` & `OR`). For example: `pipeline_name="test" AND create_time>"2020-05-18T13:30:00Z"`. The syntax to define filter expression is based on https://google.aip.dev/160. Examples: * `create_time>"2021-05-18T00:00:00Z" OR update_time>"2020-05-18T00:00:00Z"` PipelineJobs created or updated after 2020-05-18 00:00:00 UTC. * `labels.env = "prod"` PipelineJobs with label "env" set to "prod".
		 * @param {string} orderBy A comma-separated list of fields to order by. The default sort order is in ascending order. Use "desc" after a field name for descending. You can have multiple order_by fields provided e.g. "create_time desc, end_time", "end_time, start_time, update_time" For example, using "create_time desc, end_time" will order results by create time in descending order, and if there are multiple jobs having the same create time, order them by the end time in ascending order. if order_by is not specified, it will order by default order is create time in descending order. Supported fields: * `create_time` * `update_time` * `end_time` * `start_time`
		 * @param {number} pageSize The standard list page size.
		 * @param {string} pageToken The standard list page token. Typically obtained via ListPipelineJobsResponse.next_page_token of the previous PipelineService.ListPipelineJobs call.
		 * @param {string} readMask Mask specifying which fields to read.
		 * @return {GoogleCloudAiplatformV1beta1ListPipelineJobsResponse} Successful response
		 */
		Aiplatform_projects_locations_pipelineJobs_list(parent: string, filter: string | null | undefined, orderBy: string | null | undefined, pageSize: number | null | undefined, pageToken: string | null | undefined, readMask: string | null | undefined): Observable<GoogleCloudAiplatformV1beta1ListPipelineJobsResponse> {
			return this.http.get<GoogleCloudAiplatformV1beta1ListPipelineJobsResponse>(this.baseUri + 'v1beta1/' + (parent == null ? '' : encodeURIComponent(parent)) + '/pipelineJobs&filter=' + (filter == null ? '' : encodeURIComponent(filter)) + '&orderBy=' + (orderBy == null ? '' : encodeURIComponent(orderBy)) + '&pageSize=' + pageSize + '&pageToken=' + (pageToken == null ? '' : encodeURIComponent(pageToken)) + '&readMask=' + (readMask == null ? '' : encodeURIComponent(readMask)), {});
		}

		/**
		 * Creates a PipelineJob. A PipelineJob will run immediately when created.
		 * Post v1beta1/{parent}/pipelineJobs
		 * @param {string} parent Required. The resource name of the Location to create the PipelineJob in. Format: `projects/{project}/locations/{location}`
		 * @param {string} pipelineJobId The ID to use for the PipelineJob, which will become the final component of the PipelineJob name. If not provided, an ID will be automatically generated. This value should be less than 128 characters, and valid characters are `/a-z-/`.
		 * @return {GoogleCloudAiplatformV1beta1PipelineJob} Successful response
		 */
		Aiplatform_projects_locations_pipelineJobs_create(parent: string, pipelineJobId: string | null | undefined, requestBody: GoogleCloudAiplatformV1beta1PipelineJob): Observable<GoogleCloudAiplatformV1beta1PipelineJob> {
			return this.http.post<GoogleCloudAiplatformV1beta1PipelineJob>(this.baseUri + 'v1beta1/' + (parent == null ? '' : encodeURIComponent(parent)) + '/pipelineJobs&pipelineJobId=' + (pipelineJobId == null ? '' : encodeURIComponent(pipelineJobId)), JSON.stringify(requestBody), { headers: { 'Content-Type': 'application/json;charset=UTF-8' } });
		}

		/**
		 * Batch cancel PipelineJobs. Firstly the server will check if all the jobs are in non-terminal states, and skip the jobs that are already terminated. If the operation failed, none of the pipeline jobs are cancelled. The server will poll the states of all the pipeline jobs periodically to check the cancellation status. This operation will return an LRO.
		 * Post v1beta1/{parent}/pipelineJobs:batchCancel
		 * @param {string} parent Required. The name of the PipelineJobs' parent resource. Format: `projects/{project}/locations/{location}`
		 * @return {GoogleLongrunningOperation} Successful response
		 */
		Aiplatform_projects_locations_pipelineJobs_batchCancel(parent: string, requestBody: GoogleCloudAiplatformV1beta1BatchCancelPipelineJobsRequest): Observable<GoogleLongrunningOperation> {
			return this.http.post<GoogleLongrunningOperation>(this.baseUri + 'v1beta1/' + (parent == null ? '' : encodeURIComponent(parent)) + '/pipelineJobs:batchCancel', JSON.stringify(requestBody), { headers: { 'Content-Type': 'application/json;charset=UTF-8' } });
		}

		/**
		 * Batch deletes PipelineJobs The Operation is atomic. If it fails, none of the PipelineJobs are deleted. If it succeeds, all of the PipelineJobs are deleted.
		 * Post v1beta1/{parent}/pipelineJobs:batchDelete
		 * @param {string} parent Required. The name of the PipelineJobs' parent resource. Format: `projects/{project}/locations/{location}`
		 * @return {GoogleLongrunningOperation} Successful response
		 */
		Aiplatform_projects_locations_pipelineJobs_batchDelete(parent: string, requestBody: GoogleCloudAiplatformV1beta1BatchDeletePipelineJobsRequest): Observable<GoogleLongrunningOperation> {
			return this.http.post<GoogleLongrunningOperation>(this.baseUri + 'v1beta1/' + (parent == null ? '' : encodeURIComponent(parent)) + '/pipelineJobs:batchDelete', JSON.stringify(requestBody), { headers: { 'Content-Type': 'application/json;charset=UTF-8' } });
		}

		/**
		 * Lists TensorboardRuns in a Location.
		 * Get v1beta1/{parent}/runs
		 * @param {string} parent Required. The resource name of the TensorboardExperiment to list TensorboardRuns. Format: `projects/{project}/locations/{location}/tensorboards/{tensorboard}/experiments/{experiment}`
		 * @param {string} filter Lists the TensorboardRuns that match the filter expression.
		 * @param {string} orderBy Field to use to sort the list.
		 * @param {number} pageSize The maximum number of TensorboardRuns to return. The service may return fewer than this value. If unspecified, at most 50 TensorboardRuns are returned. The maximum value is 1000; values above 1000 are coerced to 1000.
		 * @param {string} pageToken A page token, received from a previous TensorboardService.ListTensorboardRuns call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to TensorboardService.ListTensorboardRuns must match the call that provided the page token.
		 * @param {string} readMask Mask specifying which fields to read.
		 * @return {GoogleCloudAiplatformV1beta1ListTensorboardRunsResponse} Successful response
		 */
		Aiplatform_projects_locations_tensorboards_experiments_runs_list(parent: string, filter: string | null | undefined, orderBy: string | null | undefined, pageSize: number | null | undefined, pageToken: string | null | undefined, readMask: string | null | undefined): Observable<GoogleCloudAiplatformV1beta1ListTensorboardRunsResponse> {
			return this.http.get<GoogleCloudAiplatformV1beta1ListTensorboardRunsResponse>(this.baseUri + 'v1beta1/' + (parent == null ? '' : encodeURIComponent(parent)) + '/runs&filter=' + (filter == null ? '' : encodeURIComponent(filter)) + '&orderBy=' + (orderBy == null ? '' : encodeURIComponent(orderBy)) + '&pageSize=' + pageSize + '&pageToken=' + (pageToken == null ? '' : encodeURIComponent(pageToken)) + '&readMask=' + (readMask == null ? '' : encodeURIComponent(readMask)), {});
		}

		/**
		 * Creates a TensorboardRun.
		 * Post v1beta1/{parent}/runs
		 * @param {string} parent Required. The resource name of the TensorboardExperiment to create the TensorboardRun in. Format: `projects/{project}/locations/{location}/tensorboards/{tensorboard}/experiments/{experiment}`
		 * @param {string} tensorboardRunId Required. The ID to use for the Tensorboard run, which becomes the final component of the Tensorboard run's resource name. This value should be 1-128 characters, and valid characters are `/a-z-/`.
		 * @return {GoogleCloudAiplatformV1beta1TensorboardRun} Successful response
		 */
		Aiplatform_projects_locations_tensorboards_experiments_runs_create(parent: string, tensorboardRunId: string | null | undefined, requestBody: GoogleCloudAiplatformV1beta1TensorboardRun): Observable<GoogleCloudAiplatformV1beta1TensorboardRun> {
			return this.http.post<GoogleCloudAiplatformV1beta1TensorboardRun>(this.baseUri + 'v1beta1/' + (parent == null ? '' : encodeURIComponent(parent)) + '/runs&tensorboardRunId=' + (tensorboardRunId == null ? '' : encodeURIComponent(tensorboardRunId)), JSON.stringify(requestBody), { headers: { 'Content-Type': 'application/json;charset=UTF-8' } });
		}

		/**
		 * Batch create TensorboardRuns.
		 * Post v1beta1/{parent}/runs:batchCreate
		 * @param {string} parent Required. The resource name of the TensorboardExperiment to create the TensorboardRuns in. Format: `projects/{project}/locations/{location}/tensorboards/{tensorboard}/experiments/{experiment}` The parent field in the CreateTensorboardRunRequest messages must match this field.
		 * @return {GoogleCloudAiplatformV1beta1BatchCreateTensorboardRunsResponse} Successful response
		 */
		Aiplatform_projects_locations_tensorboards_experiments_runs_batchCreate(parent: string, requestBody: GoogleCloudAiplatformV1beta1BatchCreateTensorboardRunsRequest): Observable<GoogleCloudAiplatformV1beta1BatchCreateTensorboardRunsResponse> {
			return this.http.post<GoogleCloudAiplatformV1beta1BatchCreateTensorboardRunsResponse>(this.baseUri + 'v1beta1/' + (parent == null ? '' : encodeURIComponent(parent)) + '/runs:batchCreate', JSON.stringify(requestBody), { headers: { 'Content-Type': 'application/json;charset=UTF-8' } });
		}

		/**
		 * Lists SavedQueries in a Dataset.
		 * Get v1beta1/{parent}/savedQueries
		 * @param {string} parent Required. The resource name of the Dataset to list SavedQueries from. Format: `projects/{project}/locations/{location}/datasets/{dataset}`
		 * @param {string} filter The standard list filter.
		 * @param {string} orderBy A comma-separated list of fields to order by, sorted in ascending order. Use "desc" after a field name for descending.
		 * @param {number} pageSize The standard list page size.
		 * @param {string} pageToken The standard list page token.
		 * @param {string} readMask Mask specifying which fields to read.
		 * @return {GoogleCloudAiplatformV1beta1ListSavedQueriesResponse} Successful response
		 */
		Aiplatform_projects_locations_datasets_savedQueries_list(parent: string, filter: string | null | undefined, orderBy: string | null | undefined, pageSize: number | null | undefined, pageToken: string | null | undefined, readMask: string | null | undefined): Observable<GoogleCloudAiplatformV1beta1ListSavedQueriesResponse> {
			return this.http.get<GoogleCloudAiplatformV1beta1ListSavedQueriesResponse>(this.baseUri + 'v1beta1/' + (parent == null ? '' : encodeURIComponent(parent)) + '/savedQueries&filter=' + (filter == null ? '' : encodeURIComponent(filter)) + '&orderBy=' + (orderBy == null ? '' : encodeURIComponent(orderBy)) + '&pageSize=' + pageSize + '&pageToken=' + (pageToken == null ? '' : encodeURIComponent(pageToken)) + '&readMask=' + (readMask == null ? '' : encodeURIComponent(readMask)), {});
		}

		/**
		 * Lists Schedules in a Location.
		 * Get v1beta1/{parent}/schedules
		 * @param {string} parent Required. The resource name of the Location to list the Schedules from. Format: `projects/{project}/locations/{location}`
		 * @param {string} filter Lists the Schedules that match the filter expression. The following fields are supported: * `display_name`: Supports `=`, `!=` comparisons, and `:` wildcard. * `state`: Supports `=` and `!=` comparisons. * `request`: Supports existence of the check. (e.g. `create_pipeline_job_request:*` --> Schedule has create_pipeline_job_request). * `create_time`: Supports `=`, `!=`, `<`, `>`, `<=`, and `>=` comparisons. Values must be in RFC 3339 format. * `start_time`: Supports `=`, `!=`, `<`, `>`, `<=`, and `>=` comparisons. Values must be in RFC 3339 format. * `end_time`: Supports `=`, `!=`, `<`, `>`, `<=`, `>=` comparisons and `:*` existence check. Values must be in RFC 3339 format. * `next_run_time`: Supports `=`, `!=`, `<`, `>`, `<=`, and `>=` comparisons. Values must be in RFC 3339 format. Filter expressions can be combined together using logical operators (`NOT`, `AND` & `OR`). The syntax to define filter expression is based on https://google.aip.dev/160. Examples: * `state="ACTIVE" AND display_name:"my_schedule_*"` * `NOT display_name="my_schedule"` * `create_time>"2021-05-18T00:00:00Z"` * `end_time>"2021-05-18T00:00:00Z" OR NOT end_time:*` * `create_pipeline_job_request:*`
		 * @param {string} orderBy A comma-separated list of fields to order by. The default sort order is in ascending order. Use "desc" after a field name for descending. You can have multiple order_by fields provided. For example, using "create_time desc, end_time" will order results by create time in descending order, and if there are multiple schedules having the same create time, order them by the end time in ascending order. If order_by is not specified, it will order by default with create_time in descending order. Supported fields: * `create_time` * `start_time` * `end_time` * `next_run_time`
		 * @param {number} pageSize The standard list page size. Default to 100 if not specified.
		 * @param {string} pageToken The standard list page token. Typically obtained via ListSchedulesResponse.next_page_token of the previous ScheduleService.ListSchedules call.
		 * @return {GoogleCloudAiplatformV1beta1ListSchedulesResponse} Successful response
		 */
		Aiplatform_projects_locations_schedules_list(parent: string, filter: string | null | undefined, orderBy: string | null | undefined, pageSize: number | null | undefined, pageToken: string | null | undefined): Observable<GoogleCloudAiplatformV1beta1ListSchedulesResponse> {
			return this.http.get<GoogleCloudAiplatformV1beta1ListSchedulesResponse>(this.baseUri + 'v1beta1/' + (parent == null ? '' : encodeURIComponent(parent)) + '/schedules&filter=' + (filter == null ? '' : encodeURIComponent(filter)) + '&orderBy=' + (orderBy == null ? '' : encodeURIComponent(orderBy)) + '&pageSize=' + pageSize + '&pageToken=' + (pageToken == null ? '' : encodeURIComponent(pageToken)), {});
		}

		/**
		 * Creates a Schedule.
		 * Post v1beta1/{parent}/schedules
		 * @param {string} parent Required. The resource name of the Location to create the Schedule in. Format: `projects/{project}/locations/{location}`
		 * @return {GoogleCloudAiplatformV1beta1Schedule} Successful response
		 */
		Aiplatform_projects_locations_schedules_create(parent: string, requestBody: GoogleCloudAiplatformV1beta1Schedule): Observable<GoogleCloudAiplatformV1beta1Schedule> {
			return this.http.post<GoogleCloudAiplatformV1beta1Schedule>(this.baseUri + 'v1beta1/' + (parent == null ? '' : encodeURIComponent(parent)) + '/schedules', JSON.stringify(requestBody), { headers: { 'Content-Type': 'application/json;charset=UTF-8' } });
		}

		/**
		 * Lists ModelEvaluationSlices in a ModelEvaluation.
		 * Get v1beta1/{parent}/slices
		 * @param {string} parent Required. The resource name of the ModelEvaluation to list the ModelEvaluationSlices from. Format: `projects/{project}/locations/{location}/models/{model}/evaluations/{evaluation}`
		 * @param {string} filter The standard list filter. * `slice.dimension` - for =.
		 * @param {number} pageSize The standard list page size.
		 * @param {string} pageToken The standard list page token. Typically obtained via ListModelEvaluationSlicesResponse.next_page_token of the previous ModelService.ListModelEvaluationSlices call.
		 * @param {string} readMask Mask specifying which fields to read.
		 * @return {GoogleCloudAiplatformV1beta1ListModelEvaluationSlicesResponse} Successful response
		 */
		Aiplatform_projects_locations_models_evaluations_slices_list(parent: string, filter: string | null | undefined, pageSize: number | null | undefined, pageToken: string | null | undefined, readMask: string | null | undefined): Observable<GoogleCloudAiplatformV1beta1ListModelEvaluationSlicesResponse> {
			return this.http.get<GoogleCloudAiplatformV1beta1ListModelEvaluationSlicesResponse>(this.baseUri + 'v1beta1/' + (parent == null ? '' : encodeURIComponent(parent)) + '/slices&filter=' + (filter == null ? '' : encodeURIComponent(filter)) + '&pageSize=' + pageSize + '&pageToken=' + (pageToken == null ? '' : encodeURIComponent(pageToken)) + '&readMask=' + (readMask == null ? '' : encodeURIComponent(readMask)), {});
		}

		/**
		 * Lists SpecialistPools in a Location.
		 * Get v1beta1/{parent}/specialistPools
		 * @param {string} parent Required. The name of the SpecialistPool's parent resource. Format: `projects/{project}/locations/{location}`
		 * @param {number} pageSize The standard list page size.
		 * @param {string} pageToken The standard list page token. Typically obtained by ListSpecialistPoolsResponse.next_page_token of the previous SpecialistPoolService.ListSpecialistPools call. Return first page if empty.
		 * @param {string} readMask Mask specifying which fields to read. FieldMask represents a set of
		 * @return {GoogleCloudAiplatformV1beta1ListSpecialistPoolsResponse} Successful response
		 */
		Aiplatform_projects_locations_specialistPools_list(parent: string, pageSize: number | null | undefined, pageToken: string | null | undefined, readMask: string | null | undefined): Observable<GoogleCloudAiplatformV1beta1ListSpecialistPoolsResponse> {
			return this.http.get<GoogleCloudAiplatformV1beta1ListSpecialistPoolsResponse>(this.baseUri + 'v1beta1/' + (parent == null ? '' : encodeURIComponent(parent)) + '/specialistPools&pageSize=' + pageSize + '&pageToken=' + (pageToken == null ? '' : encodeURIComponent(pageToken)) + '&readMask=' + (readMask == null ? '' : encodeURIComponent(readMask)), {});
		}

		/**
		 * Creates a SpecialistPool.
		 * Post v1beta1/{parent}/specialistPools
		 * @param {string} parent Required. The parent Project name for the new SpecialistPool. The form is `projects/{project}/locations/{location}`.
		 * @return {GoogleLongrunningOperation} Successful response
		 */
		Aiplatform_projects_locations_specialistPools_create(parent: string, requestBody: GoogleCloudAiplatformV1beta1SpecialistPool): Observable<GoogleLongrunningOperation> {
			return this.http.post<GoogleLongrunningOperation>(this.baseUri + 'v1beta1/' + (parent == null ? '' : encodeURIComponent(parent)) + '/specialistPools', JSON.stringify(requestBody), { headers: { 'Content-Type': 'application/json;charset=UTF-8' } });
		}

		/**
		 * Lists all the studies in a region for an associated project.
		 * Get v1beta1/{parent}/studies
		 * @param {string} parent Required. The resource name of the Location to list the Study from. Format: `projects/{project}/locations/{location}`
		 * @param {number} pageSize Optional. The maximum number of studies to return per "page" of results. If unspecified, service will pick an appropriate default.
		 * @param {string} pageToken Optional. A page token to request the next page of results. If unspecified, there are no subsequent pages.
		 * @return {GoogleCloudAiplatformV1beta1ListStudiesResponse} Successful response
		 */
		Aiplatform_projects_locations_studies_list(parent: string, pageSize: number | null | undefined, pageToken: string | null | undefined): Observable<GoogleCloudAiplatformV1beta1ListStudiesResponse> {
			return this.http.get<GoogleCloudAiplatformV1beta1ListStudiesResponse>(this.baseUri + 'v1beta1/' + (parent == null ? '' : encodeURIComponent(parent)) + '/studies&pageSize=' + pageSize + '&pageToken=' + (pageToken == null ? '' : encodeURIComponent(pageToken)), {});
		}

		/**
		 * Creates a Study. A resource name will be generated after creation of the Study.
		 * Post v1beta1/{parent}/studies
		 * @param {string} parent Required. The resource name of the Location to create the CustomJob in. Format: `projects/{project}/locations/{location}`
		 * @return {GoogleCloudAiplatformV1beta1Study} Successful response
		 */
		Aiplatform_projects_locations_studies_create(parent: string, requestBody: GoogleCloudAiplatformV1beta1Study): Observable<GoogleCloudAiplatformV1beta1Study> {
			return this.http.post<GoogleCloudAiplatformV1beta1Study>(this.baseUri + 'v1beta1/' + (parent == null ? '' : encodeURIComponent(parent)) + '/studies', JSON.stringify(requestBody), { headers: { 'Content-Type': 'application/json;charset=UTF-8' } });
		}

		/**
		 * Looks a study up using the user-defined display_name field instead of the fully qualified resource name.
		 * Post v1beta1/{parent}/studies:lookup
		 * @param {string} parent Required. The resource name of the Location to get the Study from. Format: `projects/{project}/locations/{location}`
		 * @return {GoogleCloudAiplatformV1beta1Study} Successful response
		 */
		Aiplatform_projects_locations_studies_lookup(parent: string, requestBody: GoogleCloudAiplatformV1beta1LookupStudyRequest): Observable<GoogleCloudAiplatformV1beta1Study> {
			return this.http.post<GoogleCloudAiplatformV1beta1Study>(this.baseUri + 'v1beta1/' + (parent == null ? '' : encodeURIComponent(parent)) + '/studies:lookup', JSON.stringify(requestBody), { headers: { 'Content-Type': 'application/json;charset=UTF-8' } });
		}

		/**
		 * Lists Tensorboards in a Location.
		 * Get v1beta1/{parent}/tensorboards
		 * @param {string} parent Required. The resource name of the Location to list Tensorboards. Format: `projects/{project}/locations/{location}`
		 * @param {string} filter Lists the Tensorboards that match the filter expression.
		 * @param {string} orderBy Field to use to sort the list.
		 * @param {number} pageSize The maximum number of Tensorboards to return. The service may return fewer than this value. If unspecified, at most 100 Tensorboards are returned. The maximum value is 100; values above 100 are coerced to 100.
		 * @param {string} pageToken A page token, received from a previous TensorboardService.ListTensorboards call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to TensorboardService.ListTensorboards must match the call that provided the page token.
		 * @param {string} readMask Mask specifying which fields to read.
		 * @return {GoogleCloudAiplatformV1beta1ListTensorboardsResponse} Successful response
		 */
		Aiplatform_projects_locations_tensorboards_list(parent: string, filter: string | null | undefined, orderBy: string | null | undefined, pageSize: number | null | undefined, pageToken: string | null | undefined, readMask: string | null | undefined): Observable<GoogleCloudAiplatformV1beta1ListTensorboardsResponse> {
			return this.http.get<GoogleCloudAiplatformV1beta1ListTensorboardsResponse>(this.baseUri + 'v1beta1/' + (parent == null ? '' : encodeURIComponent(parent)) + '/tensorboards&filter=' + (filter == null ? '' : encodeURIComponent(filter)) + '&orderBy=' + (orderBy == null ? '' : encodeURIComponent(orderBy)) + '&pageSize=' + pageSize + '&pageToken=' + (pageToken == null ? '' : encodeURIComponent(pageToken)) + '&readMask=' + (readMask == null ? '' : encodeURIComponent(readMask)), {});
		}

		/**
		 * Creates a Tensorboard.
		 * Post v1beta1/{parent}/tensorboards
		 * @param {string} parent Required. The resource name of the Location to create the Tensorboard in. Format: `projects/{project}/locations/{location}`
		 * @return {GoogleLongrunningOperation} Successful response
		 */
		Aiplatform_projects_locations_tensorboards_create(parent: string, requestBody: GoogleCloudAiplatformV1beta1Tensorboard): Observable<GoogleLongrunningOperation> {
			return this.http.post<GoogleLongrunningOperation>(this.baseUri + 'v1beta1/' + (parent == null ? '' : encodeURIComponent(parent)) + '/tensorboards', JSON.stringify(requestBody), { headers: { 'Content-Type': 'application/json;charset=UTF-8' } });
		}

		/**
		 * Lists TensorboardTimeSeries in a Location.
		 * Get v1beta1/{parent}/timeSeries
		 * @param {string} parent Required. The resource name of the TensorboardRun to list TensorboardTimeSeries. Format: `projects/{project}/locations/{location}/tensorboards/{tensorboard}/experiments/{experiment}/runs/{run}`
		 * @param {string} filter Lists the TensorboardTimeSeries that match the filter expression.
		 * @param {string} orderBy Field to use to sort the list.
		 * @param {number} pageSize The maximum number of TensorboardTimeSeries to return. The service may return fewer than this value. If unspecified, at most 50 TensorboardTimeSeries are returned. The maximum value is 1000; values above 1000 are coerced to 1000.
		 * @param {string} pageToken A page token, received from a previous TensorboardService.ListTensorboardTimeSeries call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to TensorboardService.ListTensorboardTimeSeries must match the call that provided the page token.
		 * @param {string} readMask Mask specifying which fields to read.
		 * @return {GoogleCloudAiplatformV1beta1ListTensorboardTimeSeriesResponse} Successful response
		 */
		Aiplatform_projects_locations_tensorboards_experiments_runs_timeSeries_list(parent: string, filter: string | null | undefined, orderBy: string | null | undefined, pageSize: number | null | undefined, pageToken: string | null | undefined, readMask: string | null | undefined): Observable<GoogleCloudAiplatformV1beta1ListTensorboardTimeSeriesResponse> {
			return this.http.get<GoogleCloudAiplatformV1beta1ListTensorboardTimeSeriesResponse>(this.baseUri + 'v1beta1/' + (parent == null ? '' : encodeURIComponent(parent)) + '/timeSeries&filter=' + (filter == null ? '' : encodeURIComponent(filter)) + '&orderBy=' + (orderBy == null ? '' : encodeURIComponent(orderBy)) + '&pageSize=' + pageSize + '&pageToken=' + (pageToken == null ? '' : encodeURIComponent(pageToken)) + '&readMask=' + (readMask == null ? '' : encodeURIComponent(readMask)), {});
		}

		/**
		 * Creates a TensorboardTimeSeries.
		 * Post v1beta1/{parent}/timeSeries
		 * @param {string} parent Required. The resource name of the TensorboardRun to create the TensorboardTimeSeries in. Format: `projects/{project}/locations/{location}/tensorboards/{tensorboard}/experiments/{experiment}/runs/{run}`
		 * @param {string} tensorboardTimeSeriesId Optional. The user specified unique ID to use for the TensorboardTimeSeries, which becomes the final component of the TensorboardTimeSeries's resource name. This value should match "a-z0-9{0, 127}"
		 * @return {GoogleCloudAiplatformV1beta1TensorboardTimeSeries} Successful response
		 */
		Aiplatform_projects_locations_tensorboards_experiments_runs_timeSeries_create(parent: string, tensorboardTimeSeriesId: string | null | undefined, requestBody: GoogleCloudAiplatformV1beta1TensorboardTimeSeries): Observable<GoogleCloudAiplatformV1beta1TensorboardTimeSeries> {
			return this.http.post<GoogleCloudAiplatformV1beta1TensorboardTimeSeries>(this.baseUri + 'v1beta1/' + (parent == null ? '' : encodeURIComponent(parent)) + '/timeSeries&tensorboardTimeSeriesId=' + (tensorboardTimeSeriesId == null ? '' : encodeURIComponent(tensorboardTimeSeriesId)), JSON.stringify(requestBody), { headers: { 'Content-Type': 'application/json;charset=UTF-8' } });
		}

		/**
		 * Lists TrainingPipelines in a Location.
		 * Get v1beta1/{parent}/trainingPipelines
		 * @param {string} parent Required. The resource name of the Location to list the TrainingPipelines from. Format: `projects/{project}/locations/{location}`
		 * @param {string} filter The standard list filter. Supported fields: * `display_name` supports `=`, `!=` comparisons, and `:` wildcard. * `state` supports `=`, `!=` comparisons. * `training_task_definition` `=`, `!=` comparisons, and `:` wildcard. * `create_time` supports `=`, `!=`,`<`, `<=`,`>`, `>=` comparisons. `create_time` must be in RFC 3339 format. * `labels` supports general map functions that is: `labels.key=value` - key:value equality `labels.key:* - key existence Some examples of using the filter are: * `state="PIPELINE_STATE_SUCCEEDED" AND display_name:"my_pipeline_*"` * `state!="PIPELINE_STATE_FAILED" OR display_name="my_pipeline"` * `NOT display_name="my_pipeline"` * `create_time>"2021-05-18T00:00:00Z"` * `training_task_definition:"*automl_text_classification*"`
		 * @param {number} pageSize The standard list page size.
		 * @param {string} pageToken The standard list page token. Typically obtained via ListTrainingPipelinesResponse.next_page_token of the previous PipelineService.ListTrainingPipelines call.
		 * @param {string} readMask Mask specifying which fields to read.
		 * @return {GoogleCloudAiplatformV1beta1ListTrainingPipelinesResponse} Successful response
		 */
		Aiplatform_projects_locations_trainingPipelines_list(parent: string, filter: string | null | undefined, pageSize: number | null | undefined, pageToken: string | null | undefined, readMask: string | null | undefined): Observable<GoogleCloudAiplatformV1beta1ListTrainingPipelinesResponse> {
			return this.http.get<GoogleCloudAiplatformV1beta1ListTrainingPipelinesResponse>(this.baseUri + 'v1beta1/' + (parent == null ? '' : encodeURIComponent(parent)) + '/trainingPipelines&filter=' + (filter == null ? '' : encodeURIComponent(filter)) + '&pageSize=' + pageSize + '&pageToken=' + (pageToken == null ? '' : encodeURIComponent(pageToken)) + '&readMask=' + (readMask == null ? '' : encodeURIComponent(readMask)), {});
		}

		/**
		 * Creates a TrainingPipeline. A created TrainingPipeline right away will be attempted to be run.
		 * Post v1beta1/{parent}/trainingPipelines
		 * @param {string} parent Required. The resource name of the Location to create the TrainingPipeline in. Format: `projects/{project}/locations/{location}`
		 * @return {GoogleCloudAiplatformV1beta1TrainingPipeline} Successful response
		 */
		Aiplatform_projects_locations_trainingPipelines_create(parent: string, requestBody: GoogleCloudAiplatformV1beta1TrainingPipeline): Observable<GoogleCloudAiplatformV1beta1TrainingPipeline> {
			return this.http.post<GoogleCloudAiplatformV1beta1TrainingPipeline>(this.baseUri + 'v1beta1/' + (parent == null ? '' : encodeURIComponent(parent)) + '/trainingPipelines', JSON.stringify(requestBody), { headers: { 'Content-Type': 'application/json;charset=UTF-8' } });
		}

		/**
		 * Lists the Trials associated with a Study.
		 * Get v1beta1/{parent}/trials
		 * @param {string} parent Required. The resource name of the Study to list the Trial from. Format: `projects/{project}/locations/{location}/studies/{study}`
		 * @param {number} pageSize Optional. The number of Trials to retrieve per "page" of results. If unspecified, the service will pick an appropriate default.
		 * @param {string} pageToken Optional. A page token to request the next page of results. If unspecified, there are no subsequent pages.
		 * @return {GoogleCloudAiplatformV1beta1ListTrialsResponse} Successful response
		 */
		Aiplatform_projects_locations_studies_trials_list(parent: string, pageSize: number | null | undefined, pageToken: string | null | undefined): Observable<GoogleCloudAiplatformV1beta1ListTrialsResponse> {
			return this.http.get<GoogleCloudAiplatformV1beta1ListTrialsResponse>(this.baseUri + 'v1beta1/' + (parent == null ? '' : encodeURIComponent(parent)) + '/trials&pageSize=' + pageSize + '&pageToken=' + (pageToken == null ? '' : encodeURIComponent(pageToken)), {});
		}

		/**
		 * Adds a user provided Trial to a Study.
		 * Post v1beta1/{parent}/trials
		 * @param {string} parent Required. The resource name of the Study to create the Trial in. Format: `projects/{project}/locations/{location}/studies/{study}`
		 * @return {GoogleCloudAiplatformV1beta1Trial} Successful response
		 */
		Aiplatform_projects_locations_studies_trials_create(parent: string, requestBody: GoogleCloudAiplatformV1beta1Trial): Observable<GoogleCloudAiplatformV1beta1Trial> {
			return this.http.post<GoogleCloudAiplatformV1beta1Trial>(this.baseUri + 'v1beta1/' + (parent == null ? '' : encodeURIComponent(parent)) + '/trials', JSON.stringify(requestBody), { headers: { 'Content-Type': 'application/json;charset=UTF-8' } });
		}

		/**
		 * Lists the pareto-optimal Trials for multi-objective Study or the optimal Trials for single-objective Study. The definition of pareto-optimal can be checked in wiki page. https://en.wikipedia.org/wiki/Pareto_efficiency
		 * Post v1beta1/{parent}/trials:listOptimalTrials
		 * @param {string} parent Required. The name of the Study that the optimal Trial belongs to.
		 * @return {GoogleCloudAiplatformV1beta1ListOptimalTrialsResponse} Successful response
		 */
		Aiplatform_projects_locations_studies_trials_listOptimalTrials(parent: string, requestBody: GoogleCloudAiplatformV1beta1ListOptimalTrialsRequest): Observable<GoogleCloudAiplatformV1beta1ListOptimalTrialsResponse> {
			return this.http.post<GoogleCloudAiplatformV1beta1ListOptimalTrialsResponse>(this.baseUri + 'v1beta1/' + (parent == null ? '' : encodeURIComponent(parent)) + '/trials:listOptimalTrials', JSON.stringify(requestBody), { headers: { 'Content-Type': 'application/json;charset=UTF-8' } });
		}

		/**
		 * Adds one or more Trials to a Study, with parameter values suggested by Vertex AI Vizier. Returns a long-running operation associated with the generation of Trial suggestions. When this long-running operation succeeds, it will contain a SuggestTrialsResponse.
		 * Post v1beta1/{parent}/trials:suggest
		 * @param {string} parent Required. The project and location that the Study belongs to. Format: `projects/{project}/locations/{location}/studies/{study}`
		 * @return {GoogleLongrunningOperation} Successful response
		 */
		Aiplatform_projects_locations_studies_trials_suggest(parent: string, requestBody: GoogleCloudAiplatformV1beta1SuggestTrialsRequest): Observable<GoogleLongrunningOperation> {
			return this.http.post<GoogleLongrunningOperation>(this.baseUri + 'v1beta1/' + (parent == null ? '' : encodeURIComponent(parent)) + '/trials:suggest', JSON.stringify(requestBody), { headers: { 'Content-Type': 'application/json;charset=UTF-8' } });
		}

		/**
		 * Batch create TensorboardTimeSeries that belong to a TensorboardExperiment.
		 * Post v1beta1/{parent}:batchCreate
		 * @param {string} parent Required. The resource name of the TensorboardExperiment to create the TensorboardTimeSeries in. Format: `projects/{project}/locations/{location}/tensorboards/{tensorboard}/experiments/{experiment}` The TensorboardRuns referenced by the parent fields in the CreateTensorboardTimeSeriesRequest messages must be sub resources of this TensorboardExperiment.
		 * @return {GoogleCloudAiplatformV1beta1BatchCreateTensorboardTimeSeriesResponse} Successful response
		 */
		Aiplatform_projects_locations_tensorboards_experiments_batchCreate(parent: string, requestBody: GoogleCloudAiplatformV1beta1BatchCreateTensorboardTimeSeriesRequest): Observable<GoogleCloudAiplatformV1beta1BatchCreateTensorboardTimeSeriesResponse> {
			return this.http.post<GoogleCloudAiplatformV1beta1BatchCreateTensorboardTimeSeriesResponse>(this.baseUri + 'v1beta1/' + (parent == null ? '' : encodeURIComponent(parent)) + ':batchCreate', JSON.stringify(requestBody), { headers: { 'Content-Type': 'application/json;charset=UTF-8' } });
		}

		/**
		 * Imports a list of externally generated EvaluatedAnnotations.
		 * Post v1beta1/{parent}:batchImport
		 * @param {string} parent Required. The name of the parent ModelEvaluationSlice resource. Format: `projects/{project}/locations/{location}/models/{model}/evaluations/{evaluation}/slices/{slice}`
		 * @return {GoogleCloudAiplatformV1beta1BatchImportEvaluatedAnnotationsResponse} Successful response
		 */
		Aiplatform_projects_locations_models_evaluations_slices_batchImport(parent: string, requestBody: GoogleCloudAiplatformV1beta1BatchImportEvaluatedAnnotationsRequest): Observable<GoogleCloudAiplatformV1beta1BatchImportEvaluatedAnnotationsResponse> {
			return this.http.post<GoogleCloudAiplatformV1beta1BatchImportEvaluatedAnnotationsResponse>(this.baseUri + 'v1beta1/' + (parent == null ? '' : encodeURIComponent(parent)) + ':batchImport', JSON.stringify(requestBody), { headers: { 'Content-Type': 'application/json;charset=UTF-8' } });
		}

		/**
		 * Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.
		 * Post v1beta1/{resource}:getIamPolicy
		 * @param {string} resource REQUIRED: The resource for which the policy is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.
		 * @param {number} options_requestedPolicyVersion Optional. The maximum policy version that will be used to format the policy. Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests for policies with any conditional role bindings must specify version 3. Policies with no conditional role bindings may specify any valid value or leave the field unset. The policy in the response might use the policy version that you specified, or it might use a lower policy version. For example, if you specify version 3, but the policy has no conditional role bindings, the response uses version 1. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
		 * @return {GoogleIamV1Policy} Successful response
		 */
		Aiplatform_projects_locations_publishers_models_getIamPolicy(resource: string, options_requestedPolicyVersion: number | null | undefined, requestBody: GoogleIamV1GetIamPolicyRequest): Observable<GoogleIamV1Policy> {
			return this.http.post<GoogleIamV1Policy>(this.baseUri + 'v1beta1/' + (resource == null ? '' : encodeURIComponent(resource)) + ':getIamPolicy&options_requestedPolicyVersion=' + options_requestedPolicyVersion, JSON.stringify(requestBody), { headers: { 'Content-Type': 'application/json;charset=UTF-8' } });
		}

		/**
		 * Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.
		 * Post v1beta1/{resource}:setIamPolicy
		 * @param {string} resource REQUIRED: The resource for which the policy is being specified. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.
		 * @return {GoogleIamV1Policy} Successful response
		 */
		Aiplatform_projects_locations_notebookRuntimeTemplates_setIamPolicy(resource: string, requestBody: GoogleIamV1SetIamPolicyRequest): Observable<GoogleIamV1Policy> {
			return this.http.post<GoogleIamV1Policy>(this.baseUri + 'v1beta1/' + (resource == null ? '' : encodeURIComponent(resource)) + ':setIamPolicy', JSON.stringify(requestBody), { headers: { 'Content-Type': 'application/json;charset=UTF-8' } });
		}

		/**
		 * Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may "fail open" without warning.
		 * Post v1beta1/{resource}:testIamPermissions
		 * @param {string} resource REQUIRED: The resource for which the policy detail is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.
		 * @param {Array<string>} permissions The set of permissions to check for the `resource`. Permissions with wildcards (such as `*` or `storage.*`) are not allowed. For more information see [IAM Overview](https://cloud.google.com/iam/docs/overview#permissions).
		 * @return {GoogleIamV1TestIamPermissionsResponse} Successful response
		 */
		Aiplatform_projects_locations_notebookRuntimeTemplates_testIamPermissions(resource: string, permissions: Array<string> | null | undefined, requestBody: GoogleIamV1TestIamPermissionsRequest): Observable<GoogleIamV1TestIamPermissionsResponse> {
			return this.http.post<GoogleIamV1TestIamPermissionsResponse>(this.baseUri + 'v1beta1/' + (resource == null ? '' : encodeURIComponent(resource)) + ':testIamPermissions&' + permissions?.map(z => `permissions=${encodeURIComponent(z)}`).join('&'), JSON.stringify(requestBody), { headers: { 'Content-Type': 'application/json;charset=UTF-8' } });
		}

		/**
		 * Write time series data points of multiple TensorboardTimeSeries in multiple TensorboardRun's. If any data fail to be ingested, an error is returned.
		 * Post v1beta1/{tensorboardExperiment}:write
		 * @param {string} tensorboardExperiment Required. The resource name of the TensorboardExperiment to write data to. Format: `projects/{project}/locations/{location}/tensorboards/{tensorboard}/experiments/{experiment}`
		 * @return {GoogleCloudAiplatformV1beta1WriteTensorboardExperimentDataResponse} Successful response
		 */
		Aiplatform_projects_locations_tensorboards_experiments_write(tensorboardExperiment: string, requestBody: GoogleCloudAiplatformV1beta1WriteTensorboardExperimentDataRequest): Observable<GoogleCloudAiplatformV1beta1WriteTensorboardExperimentDataResponse> {
			return this.http.post<GoogleCloudAiplatformV1beta1WriteTensorboardExperimentDataResponse>(this.baseUri + 'v1beta1/' + (tensorboardExperiment == null ? '' : encodeURIComponent(tensorboardExperiment)) + ':write', JSON.stringify(requestBody), { headers: { 'Content-Type': 'application/json;charset=UTF-8' } });
		}

		/**
		 * Write time series data points into multiple TensorboardTimeSeries under a TensorboardRun. If any data fail to be ingested, an error is returned.
		 * Post v1beta1/{tensorboardRun}:write
		 * @param {string} tensorboardRun Required. The resource name of the TensorboardRun to write data to. Format: `projects/{project}/locations/{location}/tensorboards/{tensorboard}/experiments/{experiment}/runs/{run}`
		 * @return {GoogleCloudAiplatformV1beta1WriteTensorboardRunDataResponse} Successful response
		 */
		Aiplatform_projects_locations_tensorboards_experiments_runs_write(tensorboardRun: string, requestBody: GoogleCloudAiplatformV1beta1WriteTensorboardRunDataRequest): Observable<GoogleCloudAiplatformV1beta1WriteTensorboardRunDataResponse> {
			return this.http.post<GoogleCloudAiplatformV1beta1WriteTensorboardRunDataResponse>(this.baseUri + 'v1beta1/' + (tensorboardRun == null ? '' : encodeURIComponent(tensorboardRun)) + ':write', JSON.stringify(requestBody), { headers: { 'Content-Type': 'application/json;charset=UTF-8' } });
		}

		/**
		 * Exports a TensorboardTimeSeries' data. Data is returned in paginated responses.
		 * Post v1beta1/{tensorboardTimeSeries}:exportTensorboardTimeSeries
		 * @param {string} tensorboardTimeSeries Required. The resource name of the TensorboardTimeSeries to export data from. Format: `projects/{project}/locations/{location}/tensorboards/{tensorboard}/experiments/{experiment}/runs/{run}/timeSeries/{time_series}`
		 * @return {GoogleCloudAiplatformV1beta1ExportTensorboardTimeSeriesDataResponse} Successful response
		 */
		Aiplatform_projects_locations_tensorboards_experiments_runs_timeSeries_exportTensorboardTimeSeries(tensorboardTimeSeries: string, requestBody: GoogleCloudAiplatformV1beta1ExportTensorboardTimeSeriesDataRequest): Observable<GoogleCloudAiplatformV1beta1ExportTensorboardTimeSeriesDataResponse> {
			return this.http.post<GoogleCloudAiplatformV1beta1ExportTensorboardTimeSeriesDataResponse>(this.baseUri + 'v1beta1/' + (tensorboardTimeSeries == null ? '' : encodeURIComponent(tensorboardTimeSeries)) + ':exportTensorboardTimeSeries', JSON.stringify(requestBody), { headers: { 'Content-Type': 'application/json;charset=UTF-8' } });
		}

		/**
		 * Reads a TensorboardTimeSeries' data. By default, if the number of data points stored is less than 1000, all data is returned. Otherwise, 1000 data points is randomly selected from this time series and returned. This value can be changed by changing max_data_points, which can't be greater than 10k.
		 * Get v1beta1/{tensorboardTimeSeries}:read
		 * @param {string} tensorboardTimeSeries Required. The resource name of the TensorboardTimeSeries to read data from. Format: `projects/{project}/locations/{location}/tensorboards/{tensorboard}/experiments/{experiment}/runs/{run}/timeSeries/{time_series}`
		 * @param {string} filter Reads the TensorboardTimeSeries' data that match the filter expression.
		 * @param {number} maxDataPoints The maximum number of TensorboardTimeSeries' data to return. This value should be a positive integer. This value can be set to -1 to return all data.
		 * @return {GoogleCloudAiplatformV1beta1ReadTensorboardTimeSeriesDataResponse} Successful response
		 */
		Aiplatform_projects_locations_tensorboards_experiments_runs_timeSeries_read(tensorboardTimeSeries: string, filter: string | null | undefined, maxDataPoints: number | null | undefined): Observable<GoogleCloudAiplatformV1beta1ReadTensorboardTimeSeriesDataResponse> {
			return this.http.get<GoogleCloudAiplatformV1beta1ReadTensorboardTimeSeriesDataResponse>(this.baseUri + 'v1beta1/' + (tensorboardTimeSeries == null ? '' : encodeURIComponent(tensorboardTimeSeries)) + ':read&filter=' + (filter == null ? '' : encodeURIComponent(filter)) + '&maxDataPoints=' + maxDataPoints, {});
		}

		/**
		 * Reads multiple TensorboardTimeSeries' data. The data point number limit is 1000 for scalars, 100 for tensors and blob references. If the number of data points stored is less than the limit, all data is returned. Otherwise, the number limit of data points is randomly selected from this time series and returned.
		 * Get v1beta1/{tensorboard}:batchRead
		 * @param {string} tensorboard Required. The resource name of the Tensorboard containing TensorboardTimeSeries to read data from. Format: `projects/{project}/locations/{location}/tensorboards/{tensorboard}`. The TensorboardTimeSeries referenced by time_series must be sub resources of this Tensorboard.
		 * @param {Array<string>} timeSeries Required. The resource names of the TensorboardTimeSeries to read data from. Format: `projects/{project}/locations/{location}/tensorboards/{tensorboard}/experiments/{experiment}/runs/{run}/timeSeries/{time_series}`
		 * @return {GoogleCloudAiplatformV1beta1BatchReadTensorboardTimeSeriesDataResponse} Successful response
		 */
		Aiplatform_projects_locations_tensorboards_batchRead(tensorboard: string, timeSeries: Array<string> | null | undefined): Observable<GoogleCloudAiplatformV1beta1BatchReadTensorboardTimeSeriesDataResponse> {
			return this.http.get<GoogleCloudAiplatformV1beta1BatchReadTensorboardTimeSeriesDataResponse>(this.baseUri + 'v1beta1/' + (tensorboard == null ? '' : encodeURIComponent(tensorboard)) + ':batchRead&' + timeSeries?.map(z => `timeSeries=${encodeURIComponent(z)}`).join('&'), {});
		}

		/**
		 * Returns the storage size for a given TensorBoard instance.
		 * Get v1beta1/{tensorboard}:readSize
		 * @param {string} tensorboard Required. The name of the Tensorboard resource. Format: `projects/{project}/locations/{location}/tensorboards/{tensorboard}`
		 * @return {GoogleCloudAiplatformV1beta1ReadTensorboardSizeResponse} Successful response
		 */
		Aiplatform_projects_locations_tensorboards_readSize(tensorboard: string): Observable<GoogleCloudAiplatformV1beta1ReadTensorboardSizeResponse> {
			return this.http.get<GoogleCloudAiplatformV1beta1ReadTensorboardSizeResponse>(this.baseUri + 'v1beta1/' + (tensorboard == null ? '' : encodeURIComponent(tensorboard)) + ':readSize', {});
		}

		/**
		 * Returns a list of monthly active users for a given TensorBoard instance.
		 * Get v1beta1/{tensorboard}:readUsage
		 * @param {string} tensorboard Required. The name of the Tensorboard resource. Format: `projects/{project}/locations/{location}/tensorboards/{tensorboard}`
		 * @return {GoogleCloudAiplatformV1beta1ReadTensorboardUsageResponse} Successful response
		 */
		Aiplatform_projects_locations_tensorboards_readUsage(tensorboard: string): Observable<GoogleCloudAiplatformV1beta1ReadTensorboardUsageResponse> {
			return this.http.get<GoogleCloudAiplatformV1beta1ReadTensorboardUsageResponse>(this.baseUri + 'v1beta1/' + (tensorboard == null ? '' : encodeURIComponent(tensorboard)) + ':readUsage', {});
		}

		/**
		 * Gets bytes of TensorboardBlobs. This is to allow reading blob data stored in consumer project's Cloud Storage bucket without users having to obtain Cloud Storage access permission.
		 * Get v1beta1/{timeSeries}:readBlobData
		 * @param {string} timeSeries Required. The resource name of the TensorboardTimeSeries to list Blobs. Format: `projects/{project}/locations/{location}/tensorboards/{tensorboard}/experiments/{experiment}/runs/{run}/timeSeries/{time_series}`
		 * @param {Array<string>} blobIds IDs of the blobs to read.
		 * @return {GoogleCloudAiplatformV1beta1ReadTensorboardBlobDataResponse} Successful response
		 */
		Aiplatform_projects_locations_tensorboards_experiments_runs_timeSeries_readBlobData(timeSeries: string, blobIds: Array<string> | null | undefined): Observable<GoogleCloudAiplatformV1beta1ReadTensorboardBlobDataResponse> {
			return this.http.get<GoogleCloudAiplatformV1beta1ReadTensorboardBlobDataResponse>(this.baseUri + 'v1beta1/' + (timeSeries == null ? '' : encodeURIComponent(timeSeries)) + ':readBlobData&' + blobIds?.map(z => `blobIds=${encodeURIComponent(z)}`).join('&'), {});
		}

		/**
		 * Adds a measurement of the objective metrics to a Trial. This measurement is assumed to have been taken before the Trial is complete.
		 * Post v1beta1/{trialName}:addTrialMeasurement
		 * @param {string} trialName Required. The name of the trial to add measurement. Format: `projects/{project}/locations/{location}/studies/{study}/trials/{trial}`
		 * @return {GoogleCloudAiplatformV1beta1Trial} Successful response
		 */
		Aiplatform_projects_locations_studies_trials_addTrialMeasurement(trialName: string, requestBody: GoogleCloudAiplatformV1beta1AddTrialMeasurementRequest): Observable<GoogleCloudAiplatformV1beta1Trial> {
			return this.http.post<GoogleCloudAiplatformV1beta1Trial>(this.baseUri + 'v1beta1/' + (trialName == null ? '' : encodeURIComponent(trialName)) + ':addTrialMeasurement', JSON.stringify(requestBody), { headers: { 'Content-Type': 'application/json;charset=UTF-8' } });
		}

		/**
		 * Checks whether a Trial should stop or not. Returns a long-running operation. When the operation is successful, it will contain a CheckTrialEarlyStoppingStateResponse.
		 * Post v1beta1/{trialName}:checkTrialEarlyStoppingState
		 * @param {string} trialName Required. The Trial's name. Format: `projects/{project}/locations/{location}/studies/{study}/trials/{trial}`
		 * @return {GoogleLongrunningOperation} Successful response
		 */
		Aiplatform_projects_locations_studies_trials_checkTrialEarlyStoppingState(trialName: string, requestBody: GoogleCloudAiplatformV1beta1CheckTrialEarlyStoppingStateRequest): Observable<GoogleLongrunningOperation> {
			return this.http.post<GoogleLongrunningOperation>(this.baseUri + 'v1beta1/' + (trialName == null ? '' : encodeURIComponent(trialName)) + ':checkTrialEarlyStoppingState', JSON.stringify(requestBody), { headers: { 'Content-Type': 'application/json;charset=UTF-8' } });
		}
	}

	export enum Aiplatform_publishers_models_getView { PUBLISHER_MODEL_VIEW_UNSPECIFIED = 0, PUBLISHER_MODEL_VIEW_BASIC = 1, PUBLISHER_MODEL_VIEW_FULL = 2, PUBLISHER_MODEL_VERSION_VIEW_BASIC = 3 }

}


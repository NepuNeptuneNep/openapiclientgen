import { Injectable, Inject } from '@angular/core';
import { HttpClient, HttpHeaders, HttpResponse } from '@angular/common/http';
import { Observable } from 'rxjs';
import { FormControl, FormGroup, Validators } from '@angular/forms';
export namespace MyNS {
	@Injectable()
	export class MyClient {
		constructor(@Inject('baseUri') private baseUri: string = location.protocol + '//' + location.hostname + (location.port ? ':' + location.port : '') + '/', private http: HttpClient) {
		}

		/**
		 * Geocode an address
		 * Represents the set of geocoded and standardized sites and intersections whose address best matches a given query address.
		 * Get addresses.{outputFormat}
		 * @param {Addresses__outputFormatGetByAddressStringAndLocationDescriptorAndMaxResultsAndInterpolationAndEchoAndBriefAndAutoCompleteAndSetBackAndOutputSRSAndMinScoreAndMatchPrecisionAndMatchPrecisionNotAndSiteNameAndUnitDesignatorAndUnitNumberAndUnitNumberSuffixAndCivicNumberAndCivicNumberSuffixAndStreetNameAndStreetTypeAndStreetDirectionAndStreetQualifierAndLocalityNameAndProvinceCodeAndLocalitiesAndNotLocalitiesAndBboxAndCentreAndMaxDistanceAndExtrapolateAndParcelPointOutputFormat} outputFormat Results format. See <a href=https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#outputFormat target="_blank">outputFormat</a>. 
		 * Note: GeoJSON and KML formats only support EPSG:4326 (outputSRS=4326)
		 * @param {string} addressString Civic or intersection address as a single string. See <a href=https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#addressString target="_blank">addressString</a>
		 * @param {Addresses__outputFormatGetByAddressStringAndLocationDescriptorAndMaxResultsAndInterpolationAndEchoAndBriefAndAutoCompleteAndSetBackAndOutputSRSAndMinScoreAndMatchPrecisionAndMatchPrecisionNotAndSiteNameAndUnitDesignatorAndUnitNumberAndUnitNumberSuffixAndCivicNumberAndCivicNumberSuffixAndStreetNameAndStreetTypeAndStreetDirectionAndStreetQualifierAndLocalityNameAndProvinceCodeAndLocalitiesAndNotLocalitiesAndBboxAndCentreAndMaxDistanceAndExtrapolateAndParcelPointLocationDescriptor} locationDescriptor Describes the nature of the address location. See <a href=https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#locationDescriptor target="_blank">locationDescriptor</a>
		 * @param {number} maxResults The maximum number of search results to return.
		 * @param {Addresses__outputFormatGetByAddressStringAndLocationDescriptorAndMaxResultsAndInterpolationAndEchoAndBriefAndAutoCompleteAndSetBackAndOutputSRSAndMinScoreAndMatchPrecisionAndMatchPrecisionNotAndSiteNameAndUnitDesignatorAndUnitNumberAndUnitNumberSuffixAndCivicNumberAndCivicNumberSuffixAndStreetNameAndStreetTypeAndStreetDirectionAndStreetQualifierAndLocalityNameAndProvinceCodeAndLocalitiesAndNotLocalitiesAndBboxAndCentreAndMaxDistanceAndExtrapolateAndParcelPointInterpolation} interpolation accessPoint interpolation method. See <a href=https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#interpolation target="_blank">interpolation</a>
		 * @param {boolean} echo If true, include unmatched address details such as site name in results.
		 * @param {boolean} brief If true, include only basic match and address details in results. Not supported for shp, csv, and gml formats.
		 * @param {boolean} autoComplete If true, addressString is expected to contain a partial address that requires completion. Not supported for shp, csv, gml formats.
		 * @param {number} setBack The distance to move the accessPoint away from the curb and towards the inside of the parcel (in metres). Ignored if locationDescriptor not set to accessPoint.
		 * @param {Addresses__outputFormatGetByAddressStringAndLocationDescriptorAndMaxResultsAndInterpolationAndEchoAndBriefAndAutoCompleteAndSetBackAndOutputSRSAndMinScoreAndMatchPrecisionAndMatchPrecisionNotAndSiteNameAndUnitDesignatorAndUnitNumberAndUnitNumberSuffixAndCivicNumberAndCivicNumberSuffixAndStreetNameAndStreetTypeAndStreetDirectionAndStreetQualifierAndLocalityNameAndProvinceCodeAndLocalitiesAndNotLocalitiesAndBboxAndCentreAndMaxDistanceAndExtrapolateAndParcelPointOutputSRS} outputSRS The EPSG code of the spatial reference system (SRS) to use for output geometries. See <a href=https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#outputSRS target="_blank">outputSRS</a>
		 * @param {number} minScore The minimum score required for a match to be returned. See <a href=https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#minScore target="_blank">minScore</a>
		 * @param {string} matchPrecision Example: street,locality.  A comma separated list of individual match precision levels to include in results. See <a href=https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#matchPrecision target="_blank">matchPrecision</a>
		 * @param {string} matchPrecisionNot Example: street,locality.  A comma separated list of individual match precision levels to exclude from results. See <a href=https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#matchPrecisionNot target="_blank">matchPrecisionNot</a>
		 * @param {string} siteName A string containing the name of the building, facility, or institution (e.g., Duck Building, Casa Del Mar, Crystal Garden, Bluebird House).See <a href=https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#siteName target="_blank">siteName</a>
		 * @param {Addresses__outputFormatGetByAddressStringAndLocationDescriptorAndMaxResultsAndInterpolationAndEchoAndBriefAndAutoCompleteAndSetBackAndOutputSRSAndMinScoreAndMatchPrecisionAndMatchPrecisionNotAndSiteNameAndUnitDesignatorAndUnitNumberAndUnitNumberSuffixAndCivicNumberAndCivicNumberSuffixAndStreetNameAndStreetTypeAndStreetDirectionAndStreetQualifierAndLocalityNameAndProvinceCodeAndLocalitiesAndNotLocalitiesAndBboxAndCentreAndMaxDistanceAndExtrapolateAndParcelPointUnitDesignator} unitDesignator The type of unit within a house or building. See <a href=https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#unitDesignator target="_blank">unitDesignator</a>
		 * @param {string} unitNumber The number of the unit, suite, or apartment within a house or building.
		 * @param {string} unitNumberSuffix A letter that follows the unit number as in Unit 1A or Suite 302B.
		 * @param {string} civicNumber The official number assigned to a site by an address authority. See <a href=https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#civicNumber target="_blank">civicNumber</a>
		 * @param {string} civicNumberSuffix A letter or fraction that follows the civic number (e.g., the A in 1039A Bledsoe St). See <a href=https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#civicNumberSuffix target="_blank">civicNumberSuffix</a>
		 * @param {string} streetName The official name of the street as assigned by an address authority (e.g., the Douglas in 1175 Douglas Street). See <a href=https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#streetName target="_blank">streetName</a>
		 * @param {string} streetType The type of street as assigned by a municipality (e.g., the ST in 1175 DOUGLAS St). See <a href=https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#streetType target="_blank">streetType</a>
		 * @param {Addresses__outputFormatGetByAddressStringAndLocationDescriptorAndMaxResultsAndInterpolationAndEchoAndBriefAndAutoCompleteAndSetBackAndOutputSRSAndMinScoreAndMatchPrecisionAndMatchPrecisionNotAndSiteNameAndUnitDesignatorAndUnitNumberAndUnitNumberSuffixAndCivicNumberAndCivicNumberSuffixAndStreetNameAndStreetTypeAndStreetDirectionAndStreetQualifierAndLocalityNameAndProvinceCodeAndLocalitiesAndNotLocalitiesAndBboxAndCentreAndMaxDistanceAndExtrapolateAndParcelPointStreetDirection} streetDirection The abbreviated compass direction as defined by Canada Post and B.C. civic addressing authorities. See <a href=https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#streetDirection target="_blank">streetDirection</a>
		 * @param {string} streetQualifier Example: the Bridge in Johnson St Bridge. The qualifier of a street name. See <a href=https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#streetQualifier target="_blank">streetQualifier</a>
		 * @param {string} localityName The name of the locality assigned to a given site by an address authority. See <a href=https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#localityName target="_blank">localityName</a>
		 * @param {string} provinceCode The ISO 3166-2 Sub-Country Code. The code for British Columbia is BC.
		 * @param {string} localities A comma separated list of locality names that matched addresses must belong to. For example, setting localities to Nanaimo only returns addresses in Nanaimo
		 * @param {string} notLocalities A comma-separated list of localities to exclude from the search.
		 * @param {string} bbox Example: -126.07929,49.7628,-126.0163,49.7907.  A bounding box (xmin,ymin,xmax,ymax) that limits the search area. See <a href=https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#bbox target="_blank">bbox</a>
		 * @param {string} centre Example: -124.0165926,49.2296251 .  The coordinates of a centre point (x,y) used to define a bounding circle that will limit the search area. This parameter must be specified together with 'maxDistance'. See <a href=https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#centre target='_blank'>centre</a>
		 * @param {number} maxDistance The maximum distance (in metres) to search from the given point.  If not specified, the search distance is unlimited.
		 * @param {boolean} extrapolate If true, uses supplied parcelPoint to derive an appropriate accessPoint.           See <a href=https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#extrapolate target="_blank">extrapolate</a>
		 * @param {string} parcelPoint The coordinates of a point (x,y) known to be inside the parcel containing a given address. See <a href=https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#parcelPoint target="_blank">parcelPoint</a>
		 * @return {void} A list of matching sites or intersections and their physical locations. See <a href='https://github.com/bcgov/ols-geocoder/blob/gh-pages/geocoder-developer-guide.md#resource-representations-in-http-responses' target="_blank">addresses response</a>
		 */
		Addresses__outputFormatGetByAddressStringAndLocationDescriptorAndMaxResultsAndInterpolationAndEchoAndBriefAndAutoCompleteAndSetBackAndOutputSRSAndMinScoreAndMatchPrecisionAndMatchPrecisionNotAndSiteNameAndUnitDesignatorAndUnitNumberAndUnitNumberSuffixAndCivicNumberAndCivicNumberSuffixAndStreetNameAndStreetTypeAndStreetDirectionAndStreetQualifierAndLocalityNameAndProvinceCodeAndLocalitiesAndNotLocalitiesAndBboxAndCentreAndMaxDistanceAndExtrapolateAndParcelPoint(outputFormat: Addresses__outputFormatGetByAddressStringAndLocationDescriptorAndMaxResultsAndInterpolationAndEchoAndBriefAndAutoCompleteAndSetBackAndOutputSRSAndMinScoreAndMatchPrecisionAndMatchPrecisionNotAndSiteNameAndUnitDesignatorAndUnitNumberAndUnitNumberSuffixAndCivicNumberAndCivicNumberSuffixAndStreetNameAndStreetTypeAndStreetDirectionAndStreetQualifierAndLocalityNameAndProvinceCodeAndLocalitiesAndNotLocalitiesAndBboxAndCentreAndMaxDistanceAndExtrapolateAndParcelPointOutputFormat, addressString: string | null | undefined, locationDescriptor: Addresses__outputFormatGetByAddressStringAndLocationDescriptorAndMaxResultsAndInterpolationAndEchoAndBriefAndAutoCompleteAndSetBackAndOutputSRSAndMinScoreAndMatchPrecisionAndMatchPrecisionNotAndSiteNameAndUnitDesignatorAndUnitNumberAndUnitNumberSuffixAndCivicNumberAndCivicNumberSuffixAndStreetNameAndStreetTypeAndStreetDirectionAndStreetQualifierAndLocalityNameAndProvinceCodeAndLocalitiesAndNotLocalitiesAndBboxAndCentreAndMaxDistanceAndExtrapolateAndParcelPointLocationDescriptor | null | undefined, maxResults: number | null | undefined, interpolation: Addresses__outputFormatGetByAddressStringAndLocationDescriptorAndMaxResultsAndInterpolationAndEchoAndBriefAndAutoCompleteAndSetBackAndOutputSRSAndMinScoreAndMatchPrecisionAndMatchPrecisionNotAndSiteNameAndUnitDesignatorAndUnitNumberAndUnitNumberSuffixAndCivicNumberAndCivicNumberSuffixAndStreetNameAndStreetTypeAndStreetDirectionAndStreetQualifierAndLocalityNameAndProvinceCodeAndLocalitiesAndNotLocalitiesAndBboxAndCentreAndMaxDistanceAndExtrapolateAndParcelPointInterpolation | null | undefined, echo: boolean | null | undefined, brief: boolean | null | undefined, autoComplete: boolean | null | undefined, setBack: number | null | undefined, outputSRS: Addresses__outputFormatGetByAddressStringAndLocationDescriptorAndMaxResultsAndInterpolationAndEchoAndBriefAndAutoCompleteAndSetBackAndOutputSRSAndMinScoreAndMatchPrecisionAndMatchPrecisionNotAndSiteNameAndUnitDesignatorAndUnitNumberAndUnitNumberSuffixAndCivicNumberAndCivicNumberSuffixAndStreetNameAndStreetTypeAndStreetDirectionAndStreetQualifierAndLocalityNameAndProvinceCodeAndLocalitiesAndNotLocalitiesAndBboxAndCentreAndMaxDistanceAndExtrapolateAndParcelPointOutputSRS | null | undefined, minScore: number | null | undefined, matchPrecision: string | null | undefined, matchPrecisionNot: string | null | undefined, siteName: string | null | undefined, unitDesignator: Addresses__outputFormatGetByAddressStringAndLocationDescriptorAndMaxResultsAndInterpolationAndEchoAndBriefAndAutoCompleteAndSetBackAndOutputSRSAndMinScoreAndMatchPrecisionAndMatchPrecisionNotAndSiteNameAndUnitDesignatorAndUnitNumberAndUnitNumberSuffixAndCivicNumberAndCivicNumberSuffixAndStreetNameAndStreetTypeAndStreetDirectionAndStreetQualifierAndLocalityNameAndProvinceCodeAndLocalitiesAndNotLocalitiesAndBboxAndCentreAndMaxDistanceAndExtrapolateAndParcelPointUnitDesignator | null | undefined, unitNumber: string | null | undefined, unitNumberSuffix: string | null | undefined, civicNumber: string | null | undefined, civicNumberSuffix: string | null | undefined, streetName: string | null | undefined, streetType: string | null | undefined, streetDirection: Addresses__outputFormatGetByAddressStringAndLocationDescriptorAndMaxResultsAndInterpolationAndEchoAndBriefAndAutoCompleteAndSetBackAndOutputSRSAndMinScoreAndMatchPrecisionAndMatchPrecisionNotAndSiteNameAndUnitDesignatorAndUnitNumberAndUnitNumberSuffixAndCivicNumberAndCivicNumberSuffixAndStreetNameAndStreetTypeAndStreetDirectionAndStreetQualifierAndLocalityNameAndProvinceCodeAndLocalitiesAndNotLocalitiesAndBboxAndCentreAndMaxDistanceAndExtrapolateAndParcelPointStreetDirection | null | undefined, streetQualifier: string | null | undefined, localityName: string | null | undefined, provinceCode: string | null | undefined, localities: string | null | undefined, notLocalities: string | null | undefined, bbox: string | null | undefined, centre: string | null | undefined, maxDistance: number | null | undefined, extrapolate: boolean | null | undefined, parcelPoint: string | null | undefined, headersHandler?: () => HttpHeaders): Observable<HttpResponse<string>> {
			return this.http.get(this.baseUri + 'addresses.' + outputFormat + '?addressString=' + (addressString == null ? '' : encodeURIComponent(addressString)) + '&locationDescriptor=' + locationDescriptor + '&maxResults=' + maxResults + '&interpolation=' + interpolation + '&echo=' + echo + '&brief=' + brief + '&autoComplete=' + autoComplete + '&setBack=' + setBack + '&outputSRS=' + outputSRS + '&minScore=' + minScore + '&matchPrecision=' + (matchPrecision == null ? '' : encodeURIComponent(matchPrecision)) + '&matchPrecisionNot=' + (matchPrecisionNot == null ? '' : encodeURIComponent(matchPrecisionNot)) + '&siteName=' + (siteName == null ? '' : encodeURIComponent(siteName)) + '&unitDesignator=' + unitDesignator + '&unitNumber=' + (unitNumber == null ? '' : encodeURIComponent(unitNumber)) + '&unitNumberSuffix=' + (unitNumberSuffix == null ? '' : encodeURIComponent(unitNumberSuffix)) + '&civicNumber=' + (civicNumber == null ? '' : encodeURIComponent(civicNumber)) + '&civicNumberSuffix=' + (civicNumberSuffix == null ? '' : encodeURIComponent(civicNumberSuffix)) + '&streetName=' + (streetName == null ? '' : encodeURIComponent(streetName)) + '&streetType=' + (streetType == null ? '' : encodeURIComponent(streetType)) + '&streetDirection=' + streetDirection + '&streetQualifier=' + (streetQualifier == null ? '' : encodeURIComponent(streetQualifier)) + '&localityName=' + (localityName == null ? '' : encodeURIComponent(localityName)) + '&provinceCode=' + (provinceCode == null ? '' : encodeURIComponent(provinceCode)) + '&localities=' + (localities == null ? '' : encodeURIComponent(localities)) + '&notLocalities=' + (notLocalities == null ? '' : encodeURIComponent(notLocalities)) + '&bbox=' + (bbox == null ? '' : encodeURIComponent(bbox)) + '&centre=' + (centre == null ? '' : encodeURIComponent(centre)) + '&maxDistance=' + maxDistance + '&extrapolate=' + extrapolate + '&parcelPoint=' + (parcelPoint == null ? '' : encodeURIComponent(parcelPoint)), { headers: headersHandler ? headersHandler() : undefined, observe: 'response', responseType: 'text' });
		}

		/**
		 * Find intersections near to a geographic point
		 * Represents intersections near a given point
		 * Get intersections/near.{outputFormat}
		 * @param {Addresses__outputFormatGetByAddressStringAndLocationDescriptorAndMaxResultsAndInterpolationAndEchoAndBriefAndAutoCompleteAndSetBackAndOutputSRSAndMinScoreAndMatchPrecisionAndMatchPrecisionNotAndSiteNameAndUnitDesignatorAndUnitNumberAndUnitNumberSuffixAndCivicNumberAndCivicNumberSuffixAndStreetNameAndStreetTypeAndStreetDirectionAndStreetQualifierAndLocalityNameAndProvinceCodeAndLocalitiesAndNotLocalitiesAndBboxAndCentreAndMaxDistanceAndExtrapolateAndParcelPointOutputFormat} outputFormat Results format. See <a href=https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#outputFormat target="_blank">outputFormat</a>. 
		 * Note: GeoJSON and KML formats only support EPSG:4326 (outputSRS=4326)
		 * @param {string} point The point (x,y) from which the nearest site will be identified. The coordinates must be specified in the same SRS as given by the 'outputSRS' parameter.
		 * @param {number} maxDistance The maximum distance (in metres) to search from the given point.  If not specified, the search distance is unlimited.
		 * @param {IntersectionsNear__outputFormatGetByPointAndMaxDistanceAndOutputSRSAndMaxResultsAndMinDegreeAndMaxDegreeOutputSRS} outputSRS The EPSG code of the spatial reference system (SRS) to use for output geometries. See <a href=https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#outputSRS target="_blank">outputSRS</a>
		 * @param {number} maxResults The maximum number of search results to return.
		 * @param {number} minDegree The minimum degree an intersection can have to be included in results. A dead-end has a degree of 1.
		 * @param {number} maxDegree The maximum degree an interesection can have to be included in results. A four-way stop has a degree of 4.
		 * @return {void} A list of selected intersections near a given point. Each intersection is in <a href="https://github.com/bcgov/ols-geocoder/blob/gh-pages/geocoder-developer-guide.md#intersection-address-representation" target="_blank">Intersection Address Representation</a>
		 */
		IntersectionsNear__outputFormatGetByPointAndMaxDistanceAndOutputSRSAndMaxResultsAndMinDegreeAndMaxDegree(outputFormat: Addresses__outputFormatGetByAddressStringAndLocationDescriptorAndMaxResultsAndInterpolationAndEchoAndBriefAndAutoCompleteAndSetBackAndOutputSRSAndMinScoreAndMatchPrecisionAndMatchPrecisionNotAndSiteNameAndUnitDesignatorAndUnitNumberAndUnitNumberSuffixAndCivicNumberAndCivicNumberSuffixAndStreetNameAndStreetTypeAndStreetDirectionAndStreetQualifierAndLocalityNameAndProvinceCodeAndLocalitiesAndNotLocalitiesAndBboxAndCentreAndMaxDistanceAndExtrapolateAndParcelPointOutputFormat, point: string, maxDistance: number | null | undefined, outputSRS: IntersectionsNear__outputFormatGetByPointAndMaxDistanceAndOutputSRSAndMaxResultsAndMinDegreeAndMaxDegreeOutputSRS, maxResults: number | null | undefined, minDegree: number | null | undefined, maxDegree: number | null | undefined, headersHandler?: () => HttpHeaders): Observable<HttpResponse<string>> {
			return this.http.get(this.baseUri + 'intersections/near.' + outputFormat + '?point=' + (point == null ? '' : encodeURIComponent(point)) + '&maxDistance=' + maxDistance + '&outputSRS=' + outputSRS + '&maxResults=' + maxResults + '&minDegree=' + minDegree + '&maxDegree=' + maxDegree, { headers: headersHandler ? headersHandler() : undefined, observe: 'response', responseType: 'text' });
		}

		/**
		 * Find nearest intersection to a geographic point
		 * Represents the closest intersection to a given point
		 * Get intersections/nearest.{outputFormat}
		 * @param {Addresses__outputFormatGetByAddressStringAndLocationDescriptorAndMaxResultsAndInterpolationAndEchoAndBriefAndAutoCompleteAndSetBackAndOutputSRSAndMinScoreAndMatchPrecisionAndMatchPrecisionNotAndSiteNameAndUnitDesignatorAndUnitNumberAndUnitNumberSuffixAndCivicNumberAndCivicNumberSuffixAndStreetNameAndStreetTypeAndStreetDirectionAndStreetQualifierAndLocalityNameAndProvinceCodeAndLocalitiesAndNotLocalitiesAndBboxAndCentreAndMaxDistanceAndExtrapolateAndParcelPointOutputFormat} outputFormat Results format. See <a href=https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#outputFormat target="_blank">outputFormat</a>. 
		 * Note: GeoJSON and KML formats only support EPSG:4326 (outputSRS=4326)
		 * @param {string} point Example: -122.377,50.121  The point (x,y) from which the nearest site will be identified. The coordinates must be specified in the same SRS as given by the 'outputSRS' parameter.
		 * @param {number} maxDistance The maximum distance (in metres) to search from the given point.  If not specified, the search distance is unlimited.
		 * @param {IntersectionsNearest__outputFormatGetByPointAndMaxDistanceAndOutputSRSAndMinDegreeAndMaxDegreeOutputSRS} outputSRS The EPSG code of the spatial reference system (SRS) to use for output geometries. See <a href=https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#outputSRS target="_blank">outputSRS</a>
		 * @param {number} minDegree The minimum degree an intersection can have to be included in results. A dead-end has a degree of 1.
		 * @param {number} maxDegree The maximum degree an interesection can have to be included in results. A four-way stop has a degree of 4.
		 * @return {void} The nearest intersection in <a href="https://github.com/bcgov/ols-geocoder/blob/gh-pages/geocoder-developer-guide.md#intersection-address-representation" target="_blank">Intersection Address Representation</a>
		 */
		IntersectionsNearest__outputFormatGetByPointAndMaxDistanceAndOutputSRSAndMinDegreeAndMaxDegree(outputFormat: Addresses__outputFormatGetByAddressStringAndLocationDescriptorAndMaxResultsAndInterpolationAndEchoAndBriefAndAutoCompleteAndSetBackAndOutputSRSAndMinScoreAndMatchPrecisionAndMatchPrecisionNotAndSiteNameAndUnitDesignatorAndUnitNumberAndUnitNumberSuffixAndCivicNumberAndCivicNumberSuffixAndStreetNameAndStreetTypeAndStreetDirectionAndStreetQualifierAndLocalityNameAndProvinceCodeAndLocalitiesAndNotLocalitiesAndBboxAndCentreAndMaxDistanceAndExtrapolateAndParcelPointOutputFormat, point: string, maxDistance: number | null | undefined, outputSRS: IntersectionsNearest__outputFormatGetByPointAndMaxDistanceAndOutputSRSAndMinDegreeAndMaxDegreeOutputSRS | null | undefined, minDegree: number | null | undefined, maxDegree: number | null | undefined, headersHandler?: () => HttpHeaders): Observable<HttpResponse<string>> {
			return this.http.get(this.baseUri + 'intersections/nearest.' + outputFormat + '?point=' + (point == null ? '' : encodeURIComponent(point)) + '&maxDistance=' + maxDistance + '&outputSRS=' + outputSRS + '&minDegree=' + minDegree + '&maxDegree=' + maxDegree, { headers: headersHandler ? headersHandler() : undefined, observe: 'response', responseType: 'text' });
		}

		/**
		 * Find intersections in a geographic area
		 * Represents all intersections within a given area
		 * Get intersections/within.{outputFormat}
		 * @param {Addresses__outputFormatGetByAddressStringAndLocationDescriptorAndMaxResultsAndInterpolationAndEchoAndBriefAndAutoCompleteAndSetBackAndOutputSRSAndMinScoreAndMatchPrecisionAndMatchPrecisionNotAndSiteNameAndUnitDesignatorAndUnitNumberAndUnitNumberSuffixAndCivicNumberAndCivicNumberSuffixAndStreetNameAndStreetTypeAndStreetDirectionAndStreetQualifierAndLocalityNameAndProvinceCodeAndLocalitiesAndNotLocalitiesAndBboxAndCentreAndMaxDistanceAndExtrapolateAndParcelPointOutputFormat} outputFormat Results format. See <a href=https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#outputFormat target="_blank">outputFormat</a>. 
		 * Note: GeoJSON and KML formats only support EPSG:4326 (outputSRS=4326)
		 * @param {string} bbox A bounding box (xmin,ymin,xmax,ymax) used to limit the search area. See <a href=https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#bbox target="_blank">bbox</a>
		 * @param {IntersectionsWithin__outputFormatGetByBboxAndOutputSRSAndMaxResultsAndMinDegreeAndMaxDegreeOutputSRS} outputSRS The EPSG code of the spatial reference system (SRS) to use for output geometries. See <a href=https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#outputSRS target="_blank">outputSRS</a>
		 * @param {number} maxResults The maximum number of search results
		 * @param {number} minDegree The minimum degree an intersection can have to be included in results. A dead-end has a degree of 1.
		 * @param {number} maxDegree The maximum degree an interesection can have to be included in results. A four-way stop has a degree of 4.
		 * @return {void} A list of selected intersections within the given area. Each intersection is in Each intersection is in <a href="https://github.com/bcgov/ols-geocoder/blob/gh-pages/geocoder-developer-guide.md#intersection-address-representation" target="_blank">Intersection Address Representation</a>
		 */
		IntersectionsWithin__outputFormatGetByBboxAndOutputSRSAndMaxResultsAndMinDegreeAndMaxDegree(outputFormat: Addresses__outputFormatGetByAddressStringAndLocationDescriptorAndMaxResultsAndInterpolationAndEchoAndBriefAndAutoCompleteAndSetBackAndOutputSRSAndMinScoreAndMatchPrecisionAndMatchPrecisionNotAndSiteNameAndUnitDesignatorAndUnitNumberAndUnitNumberSuffixAndCivicNumberAndCivicNumberSuffixAndStreetNameAndStreetTypeAndStreetDirectionAndStreetQualifierAndLocalityNameAndProvinceCodeAndLocalitiesAndNotLocalitiesAndBboxAndCentreAndMaxDistanceAndExtrapolateAndParcelPointOutputFormat, bbox: string, outputSRS: IntersectionsWithin__outputFormatGetByBboxAndOutputSRSAndMaxResultsAndMinDegreeAndMaxDegreeOutputSRS | null | undefined, maxResults: number | null | undefined, minDegree: number | null | undefined, maxDegree: number | null | undefined, headersHandler?: () => HttpHeaders): Observable<HttpResponse<string>> {
			return this.http.get(this.baseUri + 'intersections/within.' + outputFormat + '?bbox=' + (bbox == null ? '' : encodeURIComponent(bbox)) + '&outputSRS=' + outputSRS + '&maxResults=' + maxResults + '&minDegree=' + minDegree + '&maxDegree=' + maxDegree, { headers: headersHandler ? headersHandler() : undefined, observe: 'response', responseType: 'text' });
		}

		/**
		 * Get an intersection by its unique ID
		 * Represents a individual intersection
		 * Get intersections/{intersectionID}.{outputFormat}
		 * @param {string} intersectionID A unique intersection identifier
		 * @param {Addresses__outputFormatGetByAddressStringAndLocationDescriptorAndMaxResultsAndInterpolationAndEchoAndBriefAndAutoCompleteAndSetBackAndOutputSRSAndMinScoreAndMatchPrecisionAndMatchPrecisionNotAndSiteNameAndUnitDesignatorAndUnitNumberAndUnitNumberSuffixAndCivicNumberAndCivicNumberSuffixAndStreetNameAndStreetTypeAndStreetDirectionAndStreetQualifierAndLocalityNameAndProvinceCodeAndLocalitiesAndNotLocalitiesAndBboxAndCentreAndMaxDistanceAndExtrapolateAndParcelPointOutputFormat} outputFormat Results format. See <a href=https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#outputFormat target="_blank">outputFormat</a>. 
		 * Note: GeoJSON and KML formats only support EPSG:4326 (outputSRS=4326)
		 * @param {Intersections_intersectionID__outputFormatGetByOutputSRSOutputSRS} outputSRS The EPSG code of the spatial reference system (SRS) to use for output geometries. See <a href=https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#outputSRS target="_blank">outputSRS</a>
		 * @return {void} The Intersection with the requested intersectionID in <a href="https://github.com/bcgov/ols-geocoder/blob/gh-pages/geocoder-developer-guide.md#intersection-address-representation" target="_blank">Intersection Address Representation</a>
		 */
		Intersections_intersectionID__outputFormatGetByOutputSRS(intersectionID: string, outputFormat: Addresses__outputFormatGetByAddressStringAndLocationDescriptorAndMaxResultsAndInterpolationAndEchoAndBriefAndAutoCompleteAndSetBackAndOutputSRSAndMinScoreAndMatchPrecisionAndMatchPrecisionNotAndSiteNameAndUnitDesignatorAndUnitNumberAndUnitNumberSuffixAndCivicNumberAndCivicNumberSuffixAndStreetNameAndStreetTypeAndStreetDirectionAndStreetQualifierAndLocalityNameAndProvinceCodeAndLocalitiesAndNotLocalitiesAndBboxAndCentreAndMaxDistanceAndExtrapolateAndParcelPointOutputFormat, outputSRS: Intersections_intersectionID__outputFormatGetByOutputSRSOutputSRS | null | undefined, headersHandler?: () => HttpHeaders): Observable<HttpResponse<string>> {
			return this.http.get(this.baseUri + 'intersections/' + (intersectionID == null ? '' : encodeURIComponent(intersectionID)) + '.' + outputFormat + '&outputSRS=' + outputSRS, { headers: headersHandler ? headersHandler() : undefined, observe: 'response', responseType: 'text' });
		}

		/**
		 * Geocode an address and identify site occupants
		 * Represents the set of occupants whose addresses best match a given query address. Every occupant has an associated site which has a standardized address and a coordinate location on the Earth.
		 * Get occupants/addresses.{outputFormat}
		 * @param {Addresses__outputFormatGetByAddressStringAndLocationDescriptorAndMaxResultsAndInterpolationAndEchoAndBriefAndAutoCompleteAndSetBackAndOutputSRSAndMinScoreAndMatchPrecisionAndMatchPrecisionNotAndSiteNameAndUnitDesignatorAndUnitNumberAndUnitNumberSuffixAndCivicNumberAndCivicNumberSuffixAndStreetNameAndStreetTypeAndStreetDirectionAndStreetQualifierAndLocalityNameAndProvinceCodeAndLocalitiesAndNotLocalitiesAndBboxAndCentreAndMaxDistanceAndExtrapolateAndParcelPointOutputFormat} outputFormat Results format. See <a href=https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#outputFormat target="_blank">outputFormat</a>. 
		 * Note: GeoJSON and KML formats only support EPSG:4326 (outputSRS=4326)
		 * @param {string} addressString Occupant name OR Occupant name ** address
		 * @param {string} tags Example: schools;courts;employment<br>A list of tags separated by semicolons.
		 * @param {Addresses__outputFormatGetByAddressStringAndLocationDescriptorAndMaxResultsAndInterpolationAndEchoAndBriefAndAutoCompleteAndSetBackAndOutputSRSAndMinScoreAndMatchPrecisionAndMatchPrecisionNotAndSiteNameAndUnitDesignatorAndUnitNumberAndUnitNumberSuffixAndCivicNumberAndCivicNumberSuffixAndStreetNameAndStreetTypeAndStreetDirectionAndStreetQualifierAndLocalityNameAndProvinceCodeAndLocalitiesAndNotLocalitiesAndBboxAndCentreAndMaxDistanceAndExtrapolateAndParcelPointLocationDescriptor} locationDescriptor Describes the nature of the address location. See <a href=https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#locationDescriptor target="_blank">locationDescriptor</a>
		 * @param {number} maxResults The maximum number of search results to return.
		 * @param {Addresses__outputFormatGetByAddressStringAndLocationDescriptorAndMaxResultsAndInterpolationAndEchoAndBriefAndAutoCompleteAndSetBackAndOutputSRSAndMinScoreAndMatchPrecisionAndMatchPrecisionNotAndSiteNameAndUnitDesignatorAndUnitNumberAndUnitNumberSuffixAndCivicNumberAndCivicNumberSuffixAndStreetNameAndStreetTypeAndStreetDirectionAndStreetQualifierAndLocalityNameAndProvinceCodeAndLocalitiesAndNotLocalitiesAndBboxAndCentreAndMaxDistanceAndExtrapolateAndParcelPointInterpolation} interpolation accessPoint interpolation method. See <a href=https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#interpolation target="_blank">interpolation</a>
		 * @param {boolean} echo If true, include unmatched address details such as site name in results.
		 * @param {boolean} brief If true, include only basic match and address details in results. Not supported for shp, csv, and gml formats.
		 * @param {boolean} autoComplete If true, addressString is expected to contain a partial address that requires completion. Not supported for shp, csv, gml formats.
		 * @param {number} setBack The distance to move the accessPoint away from the curb and towards the inside of the parcel (in metres). Ignored if locationDescriptor not set to accessPoint.
		 * @param {OccupantsAddresses__outputFormatGetByAddressStringAndTagsAndLocationDescriptorAndMaxResultsAndInterpolationAndEchoAndBriefAndAutoCompleteAndSetBackAndOutputSRSAndMinScoreAndMatchPrecisionAndMatchPrecisionNotAndSiteNameAndUnitDesignatorAndUnitNumberAndUnitNumberSuffixAndCivicNumberAndCivicNumberSuffixAndStreetNameAndStreetTypeAndStreetDirectionAndStreetQualifierAndLocalityNameAndProvinceCodeAndLocalitiesAndNotLocalitiesAndBboxAndCentreAndMaxDistanceAndExtrapolateAndParcelPointOutputSRS} outputSRS The EPSG code of the spatial reference system (SRS) to use for output geometries. See <a href=https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#outputSRS target="_blank">outputSRS</a>
		 * @param {number} minScore The minimum score required for a match to be returned. See <a href=https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#minScore target="_blank">minScore</a>
		 * @param {string} matchPrecision Example: street,locality.  A comma separated list of individual match precision levels to include in results. See <a href=https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#matchPrecision target="_blank">matchPrecision</a>
		 * @param {string} matchPrecisionNot Example: street,locality.  A comma separated list of individual match precision levels to exclude from results. See <a href=https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#matchPrecisionNot target="_blank">matchPrecisionNot</a>
		 * @param {string} siteName A string containing the name of the building, facility, or institution (e.g., Duck Building, Casa Del Mar, Crystal Garden, Bluebird House).See <a href=https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#siteName target="_blank">siteName</a>
		 * @param {Addresses__outputFormatGetByAddressStringAndLocationDescriptorAndMaxResultsAndInterpolationAndEchoAndBriefAndAutoCompleteAndSetBackAndOutputSRSAndMinScoreAndMatchPrecisionAndMatchPrecisionNotAndSiteNameAndUnitDesignatorAndUnitNumberAndUnitNumberSuffixAndCivicNumberAndCivicNumberSuffixAndStreetNameAndStreetTypeAndStreetDirectionAndStreetQualifierAndLocalityNameAndProvinceCodeAndLocalitiesAndNotLocalitiesAndBboxAndCentreAndMaxDistanceAndExtrapolateAndParcelPointUnitDesignator} unitDesignator The type of unit within a house or building. See <a href=https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#unitDesignator target="_blank">unitDesignator</a>
		 * @param {string} unitNumber The number of the unit, suite, or apartment within a house or building.
		 * @param {string} unitNumberSuffix A letter that follows the unit number as in Unit 1A or Suite 302B.
		 * @param {string} civicNumber The official number assigned to a site by an address authority. See <a href=https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#civicNumber target="_blank">civicNumber</a>
		 * @param {string} civicNumberSuffix A letter or fraction that follows the civic number (e.g., the A in 1039A Bledsoe St). See <a href=https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#civicNumberSuffix target="_blank">civicNumberSuffix</a>
		 * @param {string} streetName The official name of the street as assigned by an address authority (e.g., the Douglas in 1175 Douglas Street). See <a href=https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#streetName target="_blank">streetName</a>
		 * @param {string} streetType The type of street as assigned by a municipality (e.g., the ST in 1175 DOUGLAS St). See <a href=https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#streetType target="_blank">streetType</a>
		 * @param {Addresses__outputFormatGetByAddressStringAndLocationDescriptorAndMaxResultsAndInterpolationAndEchoAndBriefAndAutoCompleteAndSetBackAndOutputSRSAndMinScoreAndMatchPrecisionAndMatchPrecisionNotAndSiteNameAndUnitDesignatorAndUnitNumberAndUnitNumberSuffixAndCivicNumberAndCivicNumberSuffixAndStreetNameAndStreetTypeAndStreetDirectionAndStreetQualifierAndLocalityNameAndProvinceCodeAndLocalitiesAndNotLocalitiesAndBboxAndCentreAndMaxDistanceAndExtrapolateAndParcelPointStreetDirection} streetDirection The abbreviated compass direction as defined by Canada Post and B.C. civic addressing authorities. See <a href=https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#streetDirection target="_blank">streetDirection</a>
		 * @param {string} streetQualifier The qualifier of a street name (e.g., the Bridge in Johnson St Bridge)
		 * @param {string} localityName The name of the locality assigned to a given site by an address authority. See <a href=https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#streetDirection target="_blank">streetDirection</a>
		 * @param {string} provinceCode The ISO 3166-2 Sub-Country Code. The code for British Columbia is BC.
		 * @param {string} localities A comma separated list of locality names that matched addresses must belong to. For example, setting localities to Nanaimo only returns addresses in Nanaimo
		 * @param {string} notLocalities A comma-separated list of localities to exclude from the search.
		 * @param {string} bbox Example: -126.07929,49.7628,-126.0163,49.7907.  A bounding box (xmin,ymin,xmax,ymax) that limits the search area. See <a href=https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#bbox target="_blank">bbox</a>
		 * @param {string} centre Example: -124.0165926,49.2296251 .  The coordinates of a centre point (x,y) used to define a bounding circle that will limit the search area. This parameter must be specified together with 'maxDistance'. See <a href=https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#centre target='_blank'>centre</a>
		 * @param {number} maxDistance The maximum distance (in metres) to search from the given point.  If not specified, the search distance is unlimited.
		 * @param {boolean} extrapolate If true, uses supplied parcelPoint to derive an appropriate accessPoint.           See <a href=https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#extrapolate target="_blank">extrapolate</a>
		 * @param {string} parcelPoint The coordinates of a point (x,y) known to be inside the parcel containing a given address. See <a href=https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#parcelPoint target="_blank">parcelPoint</a>
		 * @return {void} A list of matching occupants, sites, and their physical locations. Response document will contain one <a href="https://github.com/bcgov/ols-geocoder/blob/gh-pages/geocoder-developer-guide.md#about-query-representation" target="_blank">About Query Representation</a> and one <a href="https://github.com/bcgov/ols-geocoder/blob/gh-pages/geocoder-developer-guide.md#site-address-representation" target="_blank">Site Address Representation</a> plus <a href="https://github.com/bcgov/ols-geocoder/blob/gh-pages/geocoder-developer-guide.md#occupant-representation" target="_blank">Occupant Representation</a> for each matching occupant.
		 */
		OccupantsAddresses__outputFormatGetByAddressStringAndTagsAndLocationDescriptorAndMaxResultsAndInterpolationAndEchoAndBriefAndAutoCompleteAndSetBackAndOutputSRSAndMinScoreAndMatchPrecisionAndMatchPrecisionNotAndSiteNameAndUnitDesignatorAndUnitNumberAndUnitNumberSuffixAndCivicNumberAndCivicNumberSuffixAndStreetNameAndStreetTypeAndStreetDirectionAndStreetQualifierAndLocalityNameAndProvinceCodeAndLocalitiesAndNotLocalitiesAndBboxAndCentreAndMaxDistanceAndExtrapolateAndParcelPoint(outputFormat: Addresses__outputFormatGetByAddressStringAndLocationDescriptorAndMaxResultsAndInterpolationAndEchoAndBriefAndAutoCompleteAndSetBackAndOutputSRSAndMinScoreAndMatchPrecisionAndMatchPrecisionNotAndSiteNameAndUnitDesignatorAndUnitNumberAndUnitNumberSuffixAndCivicNumberAndCivicNumberSuffixAndStreetNameAndStreetTypeAndStreetDirectionAndStreetQualifierAndLocalityNameAndProvinceCodeAndLocalitiesAndNotLocalitiesAndBboxAndCentreAndMaxDistanceAndExtrapolateAndParcelPointOutputFormat, addressString: string | null | undefined, tags: string | null | undefined, locationDescriptor: Addresses__outputFormatGetByAddressStringAndLocationDescriptorAndMaxResultsAndInterpolationAndEchoAndBriefAndAutoCompleteAndSetBackAndOutputSRSAndMinScoreAndMatchPrecisionAndMatchPrecisionNotAndSiteNameAndUnitDesignatorAndUnitNumberAndUnitNumberSuffixAndCivicNumberAndCivicNumberSuffixAndStreetNameAndStreetTypeAndStreetDirectionAndStreetQualifierAndLocalityNameAndProvinceCodeAndLocalitiesAndNotLocalitiesAndBboxAndCentreAndMaxDistanceAndExtrapolateAndParcelPointLocationDescriptor | null | undefined, maxResults: number | null | undefined, interpolation: Addresses__outputFormatGetByAddressStringAndLocationDescriptorAndMaxResultsAndInterpolationAndEchoAndBriefAndAutoCompleteAndSetBackAndOutputSRSAndMinScoreAndMatchPrecisionAndMatchPrecisionNotAndSiteNameAndUnitDesignatorAndUnitNumberAndUnitNumberSuffixAndCivicNumberAndCivicNumberSuffixAndStreetNameAndStreetTypeAndStreetDirectionAndStreetQualifierAndLocalityNameAndProvinceCodeAndLocalitiesAndNotLocalitiesAndBboxAndCentreAndMaxDistanceAndExtrapolateAndParcelPointInterpolation | null | undefined, echo: boolean | null | undefined, brief: boolean | null | undefined, autoComplete: boolean | null | undefined, setBack: number | null | undefined, outputSRS: OccupantsAddresses__outputFormatGetByAddressStringAndTagsAndLocationDescriptorAndMaxResultsAndInterpolationAndEchoAndBriefAndAutoCompleteAndSetBackAndOutputSRSAndMinScoreAndMatchPrecisionAndMatchPrecisionNotAndSiteNameAndUnitDesignatorAndUnitNumberAndUnitNumberSuffixAndCivicNumberAndCivicNumberSuffixAndStreetNameAndStreetTypeAndStreetDirectionAndStreetQualifierAndLocalityNameAndProvinceCodeAndLocalitiesAndNotLocalitiesAndBboxAndCentreAndMaxDistanceAndExtrapolateAndParcelPointOutputSRS | null | undefined, minScore: number | null | undefined, matchPrecision: string | null | undefined, matchPrecisionNot: string | null | undefined, siteName: string | null | undefined, unitDesignator: Addresses__outputFormatGetByAddressStringAndLocationDescriptorAndMaxResultsAndInterpolationAndEchoAndBriefAndAutoCompleteAndSetBackAndOutputSRSAndMinScoreAndMatchPrecisionAndMatchPrecisionNotAndSiteNameAndUnitDesignatorAndUnitNumberAndUnitNumberSuffixAndCivicNumberAndCivicNumberSuffixAndStreetNameAndStreetTypeAndStreetDirectionAndStreetQualifierAndLocalityNameAndProvinceCodeAndLocalitiesAndNotLocalitiesAndBboxAndCentreAndMaxDistanceAndExtrapolateAndParcelPointUnitDesignator | null | undefined, unitNumber: string | null | undefined, unitNumberSuffix: string | null | undefined, civicNumber: string | null | undefined, civicNumberSuffix: string | null | undefined, streetName: string | null | undefined, streetType: string | null | undefined, streetDirection: Addresses__outputFormatGetByAddressStringAndLocationDescriptorAndMaxResultsAndInterpolationAndEchoAndBriefAndAutoCompleteAndSetBackAndOutputSRSAndMinScoreAndMatchPrecisionAndMatchPrecisionNotAndSiteNameAndUnitDesignatorAndUnitNumberAndUnitNumberSuffixAndCivicNumberAndCivicNumberSuffixAndStreetNameAndStreetTypeAndStreetDirectionAndStreetQualifierAndLocalityNameAndProvinceCodeAndLocalitiesAndNotLocalitiesAndBboxAndCentreAndMaxDistanceAndExtrapolateAndParcelPointStreetDirection | null | undefined, streetQualifier: string | null | undefined, localityName: string | null | undefined, provinceCode: string | null | undefined, localities: string | null | undefined, notLocalities: string | null | undefined, bbox: string | null | undefined, centre: string | null | undefined, maxDistance: number | null | undefined, extrapolate: boolean | null | undefined, parcelPoint: string | null | undefined, headersHandler?: () => HttpHeaders): Observable<HttpResponse<string>> {
			return this.http.get(this.baseUri + 'occupants/addresses.' + outputFormat + '?addressString=' + (addressString == null ? '' : encodeURIComponent(addressString)) + '&tags=' + (tags == null ? '' : encodeURIComponent(tags)) + '&locationDescriptor=' + locationDescriptor + '&maxResults=' + maxResults + '&interpolation=' + interpolation + '&echo=' + echo + '&brief=' + brief + '&autoComplete=' + autoComplete + '&setBack=' + setBack + '&outputSRS=' + outputSRS + '&minScore=' + minScore + '&matchPrecision=' + (matchPrecision == null ? '' : encodeURIComponent(matchPrecision)) + '&matchPrecisionNot=' + (matchPrecisionNot == null ? '' : encodeURIComponent(matchPrecisionNot)) + '&siteName=' + (siteName == null ? '' : encodeURIComponent(siteName)) + '&unitDesignator=' + unitDesignator + '&unitNumber=' + (unitNumber == null ? '' : encodeURIComponent(unitNumber)) + '&unitNumberSuffix=' + (unitNumberSuffix == null ? '' : encodeURIComponent(unitNumberSuffix)) + '&civicNumber=' + (civicNumber == null ? '' : encodeURIComponent(civicNumber)) + '&civicNumberSuffix=' + (civicNumberSuffix == null ? '' : encodeURIComponent(civicNumberSuffix)) + '&streetName=' + (streetName == null ? '' : encodeURIComponent(streetName)) + '&streetType=' + (streetType == null ? '' : encodeURIComponent(streetType)) + '&streetDirection=' + streetDirection + '&streetQualifier=' + (streetQualifier == null ? '' : encodeURIComponent(streetQualifier)) + '&localityName=' + (localityName == null ? '' : encodeURIComponent(localityName)) + '&provinceCode=' + (provinceCode == null ? '' : encodeURIComponent(provinceCode)) + '&localities=' + (localities == null ? '' : encodeURIComponent(localities)) + '&notLocalities=' + (notLocalities == null ? '' : encodeURIComponent(notLocalities)) + '&bbox=' + (bbox == null ? '' : encodeURIComponent(bbox)) + '&centre=' + (centre == null ? '' : encodeURIComponent(centre)) + '&maxDistance=' + maxDistance + '&extrapolate=' + extrapolate + '&parcelPoint=' + (parcelPoint == null ? '' : encodeURIComponent(parcelPoint)), { headers: headersHandler ? headersHandler() : undefined, observe: 'response', responseType: 'text' });
		}

		/**
		 * Find occupants of sites near to a geographic point
		 * Represents occupants near a given point in order of closest to farthest
		 * Get occupants/near.{outputFormat}
		 * @param {Addresses__outputFormatGetByAddressStringAndLocationDescriptorAndMaxResultsAndInterpolationAndEchoAndBriefAndAutoCompleteAndSetBackAndOutputSRSAndMinScoreAndMatchPrecisionAndMatchPrecisionNotAndSiteNameAndUnitDesignatorAndUnitNumberAndUnitNumberSuffixAndCivicNumberAndCivicNumberSuffixAndStreetNameAndStreetTypeAndStreetDirectionAndStreetQualifierAndLocalityNameAndProvinceCodeAndLocalitiesAndNotLocalitiesAndBboxAndCentreAndMaxDistanceAndExtrapolateAndParcelPointOutputFormat} outputFormat Results format. See <a href=https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#outputFormat target="_blank">outputFormat</a>. 
		 * Note: GeoJSON and KML formats only support EPSG:4326 (outputSRS=4326)
		 * @param {string} point The point (x,y) from which the nearest site will be identified. The coordinates must be specified in the same SRS as given by the 'outputSRS' parameter.
		 * @param {string} tags Example: schools;courts;employment<br>A list of tags separated by semicolons.
		 * @param {number} maxDistance The maximum distance (in metres) to search from the given point.  If not specified, the search distance is unlimited.
		 * @param {OccupantsNear__outputFormatGetByPointAndTagsAndMaxDistanceAndOutputSRSAndMaxResultsAndLocationDescriptorAndBriefAndSetBackOutputSRS} outputSRS The EPSG code of the spatial reference system (SRS) to use for output geometries. See <a href=https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#outputSRS target="_blank">outputSRS</a>
		 * @param {number} maxResults The maximum number of search results to return.
		 * @param {Addresses__outputFormatGetByAddressStringAndLocationDescriptorAndMaxResultsAndInterpolationAndEchoAndBriefAndAutoCompleteAndSetBackAndOutputSRSAndMinScoreAndMatchPrecisionAndMatchPrecisionNotAndSiteNameAndUnitDesignatorAndUnitNumberAndUnitNumberSuffixAndCivicNumberAndCivicNumberSuffixAndStreetNameAndStreetTypeAndStreetDirectionAndStreetQualifierAndLocalityNameAndProvinceCodeAndLocalitiesAndNotLocalitiesAndBboxAndCentreAndMaxDistanceAndExtrapolateAndParcelPointLocationDescriptor} locationDescriptor Describes the nature of the address location. See <a href=https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#locationDescriptor target="_blank">locationDescriptor</a>
		 * @param {boolean} brief If true, include only basic match and address details in results. Not supported for shp, csv, and gml formats.
		 * @param {number} setBack The distance to move the accessPoint away from the curb and towards the inside of the parcel (in metres). Ignored if locationDescriptor not set to accessPoint.
		 * @return {void} A list of selected occupants that are near a given point in order of closest to farther. Each occupant is returned as a <a href="https://github.com/bcgov/ols-geocoder/blob/gh-pages/geocoder-developer-guide.md#site-address-representation" target="_blank">Site Address Representation</a> plus a <a href="https://github.com/bcgov/ols-geocoder/blob/gh-pages/geocoder-developer-guide.md#occupant-representation" target="_blank">Occupant Representation</a>
		 */
		OccupantsNear__outputFormatGetByPointAndTagsAndMaxDistanceAndOutputSRSAndMaxResultsAndLocationDescriptorAndBriefAndSetBack(outputFormat: Addresses__outputFormatGetByAddressStringAndLocationDescriptorAndMaxResultsAndInterpolationAndEchoAndBriefAndAutoCompleteAndSetBackAndOutputSRSAndMinScoreAndMatchPrecisionAndMatchPrecisionNotAndSiteNameAndUnitDesignatorAndUnitNumberAndUnitNumberSuffixAndCivicNumberAndCivicNumberSuffixAndStreetNameAndStreetTypeAndStreetDirectionAndStreetQualifierAndLocalityNameAndProvinceCodeAndLocalitiesAndNotLocalitiesAndBboxAndCentreAndMaxDistanceAndExtrapolateAndParcelPointOutputFormat, point: string, tags: string | null | undefined, maxDistance: number | null | undefined, outputSRS: OccupantsNear__outputFormatGetByPointAndTagsAndMaxDistanceAndOutputSRSAndMaxResultsAndLocationDescriptorAndBriefAndSetBackOutputSRS | null | undefined, maxResults: number | null | undefined, locationDescriptor: Addresses__outputFormatGetByAddressStringAndLocationDescriptorAndMaxResultsAndInterpolationAndEchoAndBriefAndAutoCompleteAndSetBackAndOutputSRSAndMinScoreAndMatchPrecisionAndMatchPrecisionNotAndSiteNameAndUnitDesignatorAndUnitNumberAndUnitNumberSuffixAndCivicNumberAndCivicNumberSuffixAndStreetNameAndStreetTypeAndStreetDirectionAndStreetQualifierAndLocalityNameAndProvinceCodeAndLocalitiesAndNotLocalitiesAndBboxAndCentreAndMaxDistanceAndExtrapolateAndParcelPointLocationDescriptor | null | undefined, brief: boolean | null | undefined, setBack: number | null | undefined, headersHandler?: () => HttpHeaders): Observable<HttpResponse<string>> {
			return this.http.get(this.baseUri + 'occupants/near.' + outputFormat + '?point=' + (point == null ? '' : encodeURIComponent(point)) + '&tags=' + (tags == null ? '' : encodeURIComponent(tags)) + '&maxDistance=' + maxDistance + '&outputSRS=' + outputSRS + '&maxResults=' + maxResults + '&locationDescriptor=' + locationDescriptor + '&brief=' + brief + '&setBack=' + setBack, { headers: headersHandler ? headersHandler() : undefined, observe: 'response', responseType: 'text' });
		}

		/**
		 * Find occupants of the site nearest to a geographic point
		 * Represents the closest occupant to a given point
		 * Get occupants/nearest.{outputFormat}
		 * @param {Addresses__outputFormatGetByAddressStringAndLocationDescriptorAndMaxResultsAndInterpolationAndEchoAndBriefAndAutoCompleteAndSetBackAndOutputSRSAndMinScoreAndMatchPrecisionAndMatchPrecisionNotAndSiteNameAndUnitDesignatorAndUnitNumberAndUnitNumberSuffixAndCivicNumberAndCivicNumberSuffixAndStreetNameAndStreetTypeAndStreetDirectionAndStreetQualifierAndLocalityNameAndProvinceCodeAndLocalitiesAndNotLocalitiesAndBboxAndCentreAndMaxDistanceAndExtrapolateAndParcelPointOutputFormat} outputFormat Results format. See <a href=https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#outputFormat target="_blank">outputFormat</a>. 
		 * Note: GeoJSON and KML formats only support EPSG:4326 (outputSRS=4326)
		 * @param {string} point The point (x,y) from which the nearest site will be identified. The coordinates must be specified in the same SRS as given by the 'outputSRS' parameter.
		 * @param {number} maxDistance The maximum distance (in metres) to search from the given point.  If not specified, the search distance is unlimited.
		 * @param {string} tags Example: schools;courts;employment<br>A list of tags separated by semicolons.
		 * @param {OccupantsNearest__outputFormatGetByPointAndMaxDistanceAndTagsAndOutputSRSAndLocationDescriptorAndBriefAndSetBackOutputSRS} outputSRS The EPSG code of the spatial reference system (SRS) to use for output geometries. See <a href=https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#outputSRS target="_blank">outputSRS</a>
		 * @param {Addresses__outputFormatGetByAddressStringAndLocationDescriptorAndMaxResultsAndInterpolationAndEchoAndBriefAndAutoCompleteAndSetBackAndOutputSRSAndMinScoreAndMatchPrecisionAndMatchPrecisionNotAndSiteNameAndUnitDesignatorAndUnitNumberAndUnitNumberSuffixAndCivicNumberAndCivicNumberSuffixAndStreetNameAndStreetTypeAndStreetDirectionAndStreetQualifierAndLocalityNameAndProvinceCodeAndLocalitiesAndNotLocalitiesAndBboxAndCentreAndMaxDistanceAndExtrapolateAndParcelPointLocationDescriptor} locationDescriptor Describes the nature of the address location. See <a href=https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#locationDescriptor target="_blank">locationDescriptor</a>
		 * @param {boolean} brief If true, include only basic match and address details in results. Not supported for shp, csv, and gml formats.
		 * @param {number} setBack The distance to move the accessPoint away from the curb and towards the inside of the parcel (in metres). Ignored if locationDescriptor not set to accessPoint.
		 * @return {void} The nearest occupant in <a href="https://github.com/bcgov/ols-geocoder/blob/gh-pages/geocoder-developer-guide.md#site-address-representation" target="_blank">Site Address Representation</a> plus <a href="https://github.com/bcgov/ols-geocoder/blob/gh-pages/geocoder-developer-guide.md#occupant-representation" target="_blank">Occupant Representation</a>
		 */
		OccupantsNearest__outputFormatGetByPointAndMaxDistanceAndTagsAndOutputSRSAndLocationDescriptorAndBriefAndSetBack(outputFormat: Addresses__outputFormatGetByAddressStringAndLocationDescriptorAndMaxResultsAndInterpolationAndEchoAndBriefAndAutoCompleteAndSetBackAndOutputSRSAndMinScoreAndMatchPrecisionAndMatchPrecisionNotAndSiteNameAndUnitDesignatorAndUnitNumberAndUnitNumberSuffixAndCivicNumberAndCivicNumberSuffixAndStreetNameAndStreetTypeAndStreetDirectionAndStreetQualifierAndLocalityNameAndProvinceCodeAndLocalitiesAndNotLocalitiesAndBboxAndCentreAndMaxDistanceAndExtrapolateAndParcelPointOutputFormat, point: string, maxDistance: number | null | undefined, tags: string | null | undefined, outputSRS: OccupantsNearest__outputFormatGetByPointAndMaxDistanceAndTagsAndOutputSRSAndLocationDescriptorAndBriefAndSetBackOutputSRS | null | undefined, locationDescriptor: Addresses__outputFormatGetByAddressStringAndLocationDescriptorAndMaxResultsAndInterpolationAndEchoAndBriefAndAutoCompleteAndSetBackAndOutputSRSAndMinScoreAndMatchPrecisionAndMatchPrecisionNotAndSiteNameAndUnitDesignatorAndUnitNumberAndUnitNumberSuffixAndCivicNumberAndCivicNumberSuffixAndStreetNameAndStreetTypeAndStreetDirectionAndStreetQualifierAndLocalityNameAndProvinceCodeAndLocalitiesAndNotLocalitiesAndBboxAndCentreAndMaxDistanceAndExtrapolateAndParcelPointLocationDescriptor | null | undefined, brief: boolean | null | undefined, setBack: number | null | undefined, headersHandler?: () => HttpHeaders): Observable<HttpResponse<string>> {
			return this.http.get(this.baseUri + 'occupants/nearest.' + outputFormat + '?point=' + (point == null ? '' : encodeURIComponent(point)) + '&maxDistance=' + maxDistance + '&tags=' + (tags == null ? '' : encodeURIComponent(tags)) + '&outputSRS=' + outputSRS + '&locationDescriptor=' + locationDescriptor + '&brief=' + brief + '&setBack=' + setBack, { headers: headersHandler ? headersHandler() : undefined, observe: 'response', responseType: 'text' });
		}

		/**
		 * Find occupants of sites in a geographic area
		 * Represents all occupants within a given area
		 * Get occupants/within.{outputFormat}
		 * @param {Addresses__outputFormatGetByAddressStringAndLocationDescriptorAndMaxResultsAndInterpolationAndEchoAndBriefAndAutoCompleteAndSetBackAndOutputSRSAndMinScoreAndMatchPrecisionAndMatchPrecisionNotAndSiteNameAndUnitDesignatorAndUnitNumberAndUnitNumberSuffixAndCivicNumberAndCivicNumberSuffixAndStreetNameAndStreetTypeAndStreetDirectionAndStreetQualifierAndLocalityNameAndProvinceCodeAndLocalitiesAndNotLocalitiesAndBboxAndCentreAndMaxDistanceAndExtrapolateAndParcelPointOutputFormat} outputFormat Results format. See <a href=https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#outputFormat target="_blank">outputFormat</a>. 
		 * Note: GeoJSON and KML formats only support EPSG:4326 (outputSRS=4326)
		 * @param {string} bbox A bounding box (xmin,ymin,xmax,ymax) used to limit the search area. See <a href=https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#bbox target="_blank">bbox</a>
		 * @param {string} tags Example: schools;courts;employment<br>A list of tags separated by semicolons.
		 * @param {OccupantsWithin__outputFormatGetByBboxAndTagsAndOutputSRSAndMaxResultsAndLocationDescriptorAndBriefAndSetBackOutputSRS} outputSRS The EPSG code of the spatial reference system (SRS) to use for output geometries. See <a href=https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#outputSRS target="_blank">outputSRS</a>
		 * @param {number} maxResults The maximum number of search results to return.
		 * @param {Addresses__outputFormatGetByAddressStringAndLocationDescriptorAndMaxResultsAndInterpolationAndEchoAndBriefAndAutoCompleteAndSetBackAndOutputSRSAndMinScoreAndMatchPrecisionAndMatchPrecisionNotAndSiteNameAndUnitDesignatorAndUnitNumberAndUnitNumberSuffixAndCivicNumberAndCivicNumberSuffixAndStreetNameAndStreetTypeAndStreetDirectionAndStreetQualifierAndLocalityNameAndProvinceCodeAndLocalitiesAndNotLocalitiesAndBboxAndCentreAndMaxDistanceAndExtrapolateAndParcelPointLocationDescriptor} locationDescriptor Describes the nature of the address location. See <a href=https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#locationDescriptor target="_blank">locationDescriptor</a>
		 * @param {boolean} brief If true, include only basic match and address details in results. Not supported for shp, csv, and gml formats.
		 * @param {number} setBack The distance to move the accessPoint away from the curb and towards the inside of the parcel (in metres). Ignored if locationDescriptor not set to accessPoint.
		 * @return {void} A list of selected occupants within the given area. Each occupant is returned in a <a href="https://github.com/bcgov/ols-geocoder/blob/gh-pages/geocoder-developer-guide.md#site-address-representation" target="_blank">Site Address Representation</a> plus <a href="https://github.com/bcgov/ols-geocoder/blob/gh-pages/geocoder-developer-guide.md#occupant-representation" target="_blank">Occupant Representation</a>
		 */
		OccupantsWithin__outputFormatGetByBboxAndTagsAndOutputSRSAndMaxResultsAndLocationDescriptorAndBriefAndSetBack(outputFormat: Addresses__outputFormatGetByAddressStringAndLocationDescriptorAndMaxResultsAndInterpolationAndEchoAndBriefAndAutoCompleteAndSetBackAndOutputSRSAndMinScoreAndMatchPrecisionAndMatchPrecisionNotAndSiteNameAndUnitDesignatorAndUnitNumberAndUnitNumberSuffixAndCivicNumberAndCivicNumberSuffixAndStreetNameAndStreetTypeAndStreetDirectionAndStreetQualifierAndLocalityNameAndProvinceCodeAndLocalitiesAndNotLocalitiesAndBboxAndCentreAndMaxDistanceAndExtrapolateAndParcelPointOutputFormat, bbox: string, tags: string | null | undefined, outputSRS: OccupantsWithin__outputFormatGetByBboxAndTagsAndOutputSRSAndMaxResultsAndLocationDescriptorAndBriefAndSetBackOutputSRS | null | undefined, maxResults: number | null | undefined, locationDescriptor: Addresses__outputFormatGetByAddressStringAndLocationDescriptorAndMaxResultsAndInterpolationAndEchoAndBriefAndAutoCompleteAndSetBackAndOutputSRSAndMinScoreAndMatchPrecisionAndMatchPrecisionNotAndSiteNameAndUnitDesignatorAndUnitNumberAndUnitNumberSuffixAndCivicNumberAndCivicNumberSuffixAndStreetNameAndStreetTypeAndStreetDirectionAndStreetQualifierAndLocalityNameAndProvinceCodeAndLocalitiesAndNotLocalitiesAndBboxAndCentreAndMaxDistanceAndExtrapolateAndParcelPointLocationDescriptor | null | undefined, brief: boolean | null | undefined, setBack: number | null | undefined, headersHandler?: () => HttpHeaders): Observable<HttpResponse<string>> {
			return this.http.get(this.baseUri + 'occupants/within.' + outputFormat + '?bbox=' + (bbox == null ? '' : encodeURIComponent(bbox)) + '&tags=' + (tags == null ? '' : encodeURIComponent(tags)) + '&outputSRS=' + outputSRS + '&maxResults=' + maxResults + '&locationDescriptor=' + locationDescriptor + '&brief=' + brief + '&setBack=' + setBack, { headers: headersHandler ? headersHandler() : undefined, observe: 'response', responseType: 'text' });
		}

		/**
		 * Get an occupant (of a site) by its unique ID
		 * Represents an individual occupant
		 * Get occupants/{occupantID}.{outputFormat}
		 * @param {string} occupantID Occupant identifier
		 * @param {Addresses__outputFormatGetByAddressStringAndLocationDescriptorAndMaxResultsAndInterpolationAndEchoAndBriefAndAutoCompleteAndSetBackAndOutputSRSAndMinScoreAndMatchPrecisionAndMatchPrecisionNotAndSiteNameAndUnitDesignatorAndUnitNumberAndUnitNumberSuffixAndCivicNumberAndCivicNumberSuffixAndStreetNameAndStreetTypeAndStreetDirectionAndStreetQualifierAndLocalityNameAndProvinceCodeAndLocalitiesAndNotLocalitiesAndBboxAndCentreAndMaxDistanceAndExtrapolateAndParcelPointOutputFormat} outputFormat Results format. See <a href=https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#outputFormat target="_blank">outputFormat</a>. 
		 * Note: GeoJSON and KML formats only support EPSG:4326 (outputSRS=4326)
		 * @param {Occupants_occupantID__outputFormatGetByOutputSRSAndLocationDescriptorAndBriefAndSetBackOutputSRS} outputSRS The EPSG code of the spatial reference system (SRS) to use for output geometries. See <a href=https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#outputSRS target="_blank">outputSRS</a>
		 * @param {Addresses__outputFormatGetByAddressStringAndLocationDescriptorAndMaxResultsAndInterpolationAndEchoAndBriefAndAutoCompleteAndSetBackAndOutputSRSAndMinScoreAndMatchPrecisionAndMatchPrecisionNotAndSiteNameAndUnitDesignatorAndUnitNumberAndUnitNumberSuffixAndCivicNumberAndCivicNumberSuffixAndStreetNameAndStreetTypeAndStreetDirectionAndStreetQualifierAndLocalityNameAndProvinceCodeAndLocalitiesAndNotLocalitiesAndBboxAndCentreAndMaxDistanceAndExtrapolateAndParcelPointLocationDescriptor} locationDescriptor Describes the nature of the address location. See <a href=https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#locationDescriptor target="_blank">locationDescriptor</a>
		 * @param {boolean} brief If true, include only basic match and address details in results. Not supported for shp, csv, and gml formats.
		 * @param {number} setBack The distance to move the accessPoint away from the curb and towards the inside of the parcel (in metres). Ignored if locationDescriptor not set to accessPoint.
		 * @return {void} The occupant with the requested occupantID in <a href="https://github.com/bcgov/ols-geocoder/blob/gh-pages/geocoder-developer-guide.md#site-address-representation" target="_blank">Site Address Representation</a> plus <a href="https://github.com/bcgov/ols-geocoder/blob/gh-pages/geocoder-developer-guide.md#occupant-representation" target="_blank">Occupant Representation</a>
		 */
		Occupants_occupantID__outputFormatGetByOutputSRSAndLocationDescriptorAndBriefAndSetBack(occupantID: string, outputFormat: Addresses__outputFormatGetByAddressStringAndLocationDescriptorAndMaxResultsAndInterpolationAndEchoAndBriefAndAutoCompleteAndSetBackAndOutputSRSAndMinScoreAndMatchPrecisionAndMatchPrecisionNotAndSiteNameAndUnitDesignatorAndUnitNumberAndUnitNumberSuffixAndCivicNumberAndCivicNumberSuffixAndStreetNameAndStreetTypeAndStreetDirectionAndStreetQualifierAndLocalityNameAndProvinceCodeAndLocalitiesAndNotLocalitiesAndBboxAndCentreAndMaxDistanceAndExtrapolateAndParcelPointOutputFormat, outputSRS: Occupants_occupantID__outputFormatGetByOutputSRSAndLocationDescriptorAndBriefAndSetBackOutputSRS | null | undefined, locationDescriptor: Addresses__outputFormatGetByAddressStringAndLocationDescriptorAndMaxResultsAndInterpolationAndEchoAndBriefAndAutoCompleteAndSetBackAndOutputSRSAndMinScoreAndMatchPrecisionAndMatchPrecisionNotAndSiteNameAndUnitDesignatorAndUnitNumberAndUnitNumberSuffixAndCivicNumberAndCivicNumberSuffixAndStreetNameAndStreetTypeAndStreetDirectionAndStreetQualifierAndLocalityNameAndProvinceCodeAndLocalitiesAndNotLocalitiesAndBboxAndCentreAndMaxDistanceAndExtrapolateAndParcelPointLocationDescriptor | null | undefined, brief: boolean | null | undefined, setBack: number | null | undefined, headersHandler?: () => HttpHeaders): Observable<HttpResponse<string>> {
			return this.http.get(this.baseUri + 'occupants/' + (occupantID == null ? '' : encodeURIComponent(occupantID)) + '.' + outputFormat + '&outputSRS=' + outputSRS + '&locationDescriptor=' + locationDescriptor + '&brief=' + brief + '&setBack=' + setBack, { headers: headersHandler ? headersHandler() : undefined, observe: 'response', responseType: 'text' });
		}

		/**
		 * Get a comma-separated string of all pids for a given site
		 * Represents all parcel identifiers associated with an individual site
		 * Get parcels/pids/{siteID}.{outputFormat}
		 * @param {string} siteID A unique, but not immutable, site identifier.
		 * @param {Addresses__outputFormatGetByAddressStringAndLocationDescriptorAndMaxResultsAndInterpolationAndEchoAndBriefAndAutoCompleteAndSetBackAndOutputSRSAndMinScoreAndMatchPrecisionAndMatchPrecisionNotAndSiteNameAndUnitDesignatorAndUnitNumberAndUnitNumberSuffixAndCivicNumberAndCivicNumberSuffixAndStreetNameAndStreetTypeAndStreetDirectionAndStreetQualifierAndLocalityNameAndProvinceCodeAndLocalitiesAndNotLocalitiesAndBboxAndCentreAndMaxDistanceAndExtrapolateAndParcelPointOutputFormat} outputFormat Results format. See <a href=https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#outputFormat target="_blank">outputFormat</a>. 
		 * Note: GeoJSON and KML formats only support EPSG:4326 (outputSRS=4326)
		 * @return {void} A comma-separated string containing all the parcel identifiers associated with the requested siteID
		 */
		ParcelsPids_siteID__outputFormatGet(siteID: string, outputFormat: Addresses__outputFormatGetByAddressStringAndLocationDescriptorAndMaxResultsAndInterpolationAndEchoAndBriefAndAutoCompleteAndSetBackAndOutputSRSAndMinScoreAndMatchPrecisionAndMatchPrecisionNotAndSiteNameAndUnitDesignatorAndUnitNumberAndUnitNumberSuffixAndCivicNumberAndCivicNumberSuffixAndStreetNameAndStreetTypeAndStreetDirectionAndStreetQualifierAndLocalityNameAndProvinceCodeAndLocalitiesAndNotLocalitiesAndBboxAndCentreAndMaxDistanceAndExtrapolateAndParcelPointOutputFormat, headersHandler?: () => HttpHeaders): Observable<HttpResponse<string>> {
			return this.http.get(this.baseUri + 'parcels/pids/' + (siteID == null ? '' : encodeURIComponent(siteID)) + '.' + outputFormat, { headers: headersHandler ? headersHandler() : undefined, observe: 'response', responseType: 'text' });
		}

		/**
		 * Find sites near to a geographic point
		 * Represents sites near a given point in the order of closest to farthest
		 * Get sites/near.{outputFormat}
		 * @param {Addresses__outputFormatGetByAddressStringAndLocationDescriptorAndMaxResultsAndInterpolationAndEchoAndBriefAndAutoCompleteAndSetBackAndOutputSRSAndMinScoreAndMatchPrecisionAndMatchPrecisionNotAndSiteNameAndUnitDesignatorAndUnitNumberAndUnitNumberSuffixAndCivicNumberAndCivicNumberSuffixAndStreetNameAndStreetTypeAndStreetDirectionAndStreetQualifierAndLocalityNameAndProvinceCodeAndLocalitiesAndNotLocalitiesAndBboxAndCentreAndMaxDistanceAndExtrapolateAndParcelPointOutputFormat} outputFormat Results format. See <a href=https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#outputFormat target="_blank">outputFormat</a>. 
		 * Note: GeoJSON and KML formats only support EPSG:4326 (outputSRS=4326)
		 * @param {string} point The point (x,y) from which the nearby sites will be identified. The coordinates must be specified in the same SRS as given by the 'outputSRS' parameter.
		 * @param {number} maxDistance The maximum distance (in metres) to search from the given point.  If not specified, the search distance is unlimited.
		 * @param {SitesNear__outputFormatGetByPointAndMaxDistanceAndOutputSRSAndMaxResultsAndLocationDescriptorAndSetBackAndBriefAndExcludeUnitsAndOnlyCivicOutputSRS} outputSRS The EPSG code of the spatial reference system (SRS) to use for output geometries. See <a href=https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#outputSRS target="_blank">outputSRS</a>
		 * @param {number} maxResults The maximum number of search results to return.
		 * @param {Addresses__outputFormatGetByAddressStringAndLocationDescriptorAndMaxResultsAndInterpolationAndEchoAndBriefAndAutoCompleteAndSetBackAndOutputSRSAndMinScoreAndMatchPrecisionAndMatchPrecisionNotAndSiteNameAndUnitDesignatorAndUnitNumberAndUnitNumberSuffixAndCivicNumberAndCivicNumberSuffixAndStreetNameAndStreetTypeAndStreetDirectionAndStreetQualifierAndLocalityNameAndProvinceCodeAndLocalitiesAndNotLocalitiesAndBboxAndCentreAndMaxDistanceAndExtrapolateAndParcelPointLocationDescriptor} locationDescriptor Describes the nature of the address location. See <a href=https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#locationDescriptor target="_blank">locationDescriptor</a>
		 * @param {number} setBack The distance to move the accessPoint away from the curb and towards the inside of the parcel (in metres). Ignored if locationDescriptor not set to accessPoint.
		 * @param {boolean} brief If true, include only basic match and address details in results. Not supported for shp, csv, and gml formats.
		 * @param {boolean} excludeUnits If true, excludes sites that are units of a parent site
		 * @param {boolean} onlyCivic If true, excludes sites without a civic address
		 * @return {void} A list of selected sites that are near a given point in order of closest to farther. Each site in the response document is structured as a <a href="https://github.com/bcgov/ols-geocoder/blob/gh-pages/geocoder-developer-guide.md#site-address-representation" target="_blank">Site Address Representation</a>
		 */
		SitesNear__outputFormatGetByPointAndMaxDistanceAndOutputSRSAndMaxResultsAndLocationDescriptorAndSetBackAndBriefAndExcludeUnitsAndOnlyCivic(outputFormat: Addresses__outputFormatGetByAddressStringAndLocationDescriptorAndMaxResultsAndInterpolationAndEchoAndBriefAndAutoCompleteAndSetBackAndOutputSRSAndMinScoreAndMatchPrecisionAndMatchPrecisionNotAndSiteNameAndUnitDesignatorAndUnitNumberAndUnitNumberSuffixAndCivicNumberAndCivicNumberSuffixAndStreetNameAndStreetTypeAndStreetDirectionAndStreetQualifierAndLocalityNameAndProvinceCodeAndLocalitiesAndNotLocalitiesAndBboxAndCentreAndMaxDistanceAndExtrapolateAndParcelPointOutputFormat, point: string, maxDistance: number | null | undefined, outputSRS: SitesNear__outputFormatGetByPointAndMaxDistanceAndOutputSRSAndMaxResultsAndLocationDescriptorAndSetBackAndBriefAndExcludeUnitsAndOnlyCivicOutputSRS | null | undefined, maxResults: number | null | undefined, locationDescriptor: Addresses__outputFormatGetByAddressStringAndLocationDescriptorAndMaxResultsAndInterpolationAndEchoAndBriefAndAutoCompleteAndSetBackAndOutputSRSAndMinScoreAndMatchPrecisionAndMatchPrecisionNotAndSiteNameAndUnitDesignatorAndUnitNumberAndUnitNumberSuffixAndCivicNumberAndCivicNumberSuffixAndStreetNameAndStreetTypeAndStreetDirectionAndStreetQualifierAndLocalityNameAndProvinceCodeAndLocalitiesAndNotLocalitiesAndBboxAndCentreAndMaxDistanceAndExtrapolateAndParcelPointLocationDescriptor | null | undefined, setBack: number | null | undefined, brief: boolean | null | undefined, excludeUnits: boolean | null | undefined, onlyCivic: boolean | null | undefined, headersHandler?: () => HttpHeaders): Observable<HttpResponse<string>> {
			return this.http.get(this.baseUri + 'sites/near.' + outputFormat + '?point=' + (point == null ? '' : encodeURIComponent(point)) + '&maxDistance=' + maxDistance + '&outputSRS=' + outputSRS + '&maxResults=' + maxResults + '&locationDescriptor=' + locationDescriptor + '&setBack=' + setBack + '&brief=' + brief + '&excludeUnits=' + excludeUnits + '&onlyCivic=' + onlyCivic, { headers: headersHandler ? headersHandler() : undefined, observe: 'response', responseType: 'text' });
		}

		/**
		 * Find the site nearest to a geographic point
		 * Represents the site nearest a given point
		 * Get sites/nearest.{outputFormat}
		 * @param {Addresses__outputFormatGetByAddressStringAndLocationDescriptorAndMaxResultsAndInterpolationAndEchoAndBriefAndAutoCompleteAndSetBackAndOutputSRSAndMinScoreAndMatchPrecisionAndMatchPrecisionNotAndSiteNameAndUnitDesignatorAndUnitNumberAndUnitNumberSuffixAndCivicNumberAndCivicNumberSuffixAndStreetNameAndStreetTypeAndStreetDirectionAndStreetQualifierAndLocalityNameAndProvinceCodeAndLocalitiesAndNotLocalitiesAndBboxAndCentreAndMaxDistanceAndExtrapolateAndParcelPointOutputFormat} outputFormat Results format. See <a href=https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#outputFormat target="_blank">outputFormat</a>. 
		 * Note: GeoJSON and KML formats only support EPSG:4326 (outputSRS=4326)
		 * @param {string} point Centre point of search. See <a href=https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#point target="_blank">point</a>
		 * @param {number} maxDistance The maximum distance (in metres) to search from the given point.  If not specified, the search distance is unlimited.
		 * @param {SitesNearest__outputFormatGetByPointAndMaxDistanceAndOutputSRSAndLocationDescriptorAndSetBackAndBriefAndExcludeUnitsAndOnlyCivicOutputSRS} outputSRS The EPSG code of the spatial reference system (SRS) to use for output geometries. See <a href=https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#outputSRS target="_blank">outputSRS</a>
		 * @param {Addresses__outputFormatGetByAddressStringAndLocationDescriptorAndMaxResultsAndInterpolationAndEchoAndBriefAndAutoCompleteAndSetBackAndOutputSRSAndMinScoreAndMatchPrecisionAndMatchPrecisionNotAndSiteNameAndUnitDesignatorAndUnitNumberAndUnitNumberSuffixAndCivicNumberAndCivicNumberSuffixAndStreetNameAndStreetTypeAndStreetDirectionAndStreetQualifierAndLocalityNameAndProvinceCodeAndLocalitiesAndNotLocalitiesAndBboxAndCentreAndMaxDistanceAndExtrapolateAndParcelPointLocationDescriptor} locationDescriptor Describes the nature of the address location. See <a href=https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#locationDescriptor target="_blank">locationDescriptor</a>
		 * @param {number} setBack The distance to move the accessPoint away from the curb and towards the inside of the parcel (in metres). Ignored if locationDescriptor not set to accessPoint.
		 * @param {boolean} brief If true, include only basic match and address details in results. Not supported for shp, csv, and gml formats.
		 * @param {boolean} excludeUnits If true, excludes sites that are units of a parent site
		 * @param {boolean} onlyCivic If true, excludes sites without a civic address
		 * @return {void} The nearest site in <a href="https://github.com/bcgov/ols-geocoder/blob/gh-pages/geocoder-developer-guide.md#site-address-representation" target="_blank">Site Address Representation</a>
		 */
		SitesNearest__outputFormatGetByPointAndMaxDistanceAndOutputSRSAndLocationDescriptorAndSetBackAndBriefAndExcludeUnitsAndOnlyCivic(outputFormat: Addresses__outputFormatGetByAddressStringAndLocationDescriptorAndMaxResultsAndInterpolationAndEchoAndBriefAndAutoCompleteAndSetBackAndOutputSRSAndMinScoreAndMatchPrecisionAndMatchPrecisionNotAndSiteNameAndUnitDesignatorAndUnitNumberAndUnitNumberSuffixAndCivicNumberAndCivicNumberSuffixAndStreetNameAndStreetTypeAndStreetDirectionAndStreetQualifierAndLocalityNameAndProvinceCodeAndLocalitiesAndNotLocalitiesAndBboxAndCentreAndMaxDistanceAndExtrapolateAndParcelPointOutputFormat, point: string, maxDistance: number | null | undefined, outputSRS: SitesNearest__outputFormatGetByPointAndMaxDistanceAndOutputSRSAndLocationDescriptorAndSetBackAndBriefAndExcludeUnitsAndOnlyCivicOutputSRS | null | undefined, locationDescriptor: Addresses__outputFormatGetByAddressStringAndLocationDescriptorAndMaxResultsAndInterpolationAndEchoAndBriefAndAutoCompleteAndSetBackAndOutputSRSAndMinScoreAndMatchPrecisionAndMatchPrecisionNotAndSiteNameAndUnitDesignatorAndUnitNumberAndUnitNumberSuffixAndCivicNumberAndCivicNumberSuffixAndStreetNameAndStreetTypeAndStreetDirectionAndStreetQualifierAndLocalityNameAndProvinceCodeAndLocalitiesAndNotLocalitiesAndBboxAndCentreAndMaxDistanceAndExtrapolateAndParcelPointLocationDescriptor | null | undefined, setBack: number | null | undefined, brief: boolean | null | undefined, excludeUnits: boolean | null | undefined, onlyCivic: boolean | null | undefined, headersHandler?: () => HttpHeaders): Observable<HttpResponse<string>> {
			return this.http.get(this.baseUri + 'sites/nearest.' + outputFormat + '?point=' + (point == null ? '' : encodeURIComponent(point)) + '&maxDistance=' + maxDistance + '&outputSRS=' + outputSRS + '&locationDescriptor=' + locationDescriptor + '&setBack=' + setBack + '&brief=' + brief + '&excludeUnits=' + excludeUnits + '&onlyCivic=' + onlyCivic, { headers: headersHandler ? headersHandler() : undefined, observe: 'response', responseType: 'text' });
		}

		/**
		 * Find sites in a geographic area
		 * Represents sites within a given area
		 * Get sites/within.{outputFormat}
		 * @param {Addresses__outputFormatGetByAddressStringAndLocationDescriptorAndMaxResultsAndInterpolationAndEchoAndBriefAndAutoCompleteAndSetBackAndOutputSRSAndMinScoreAndMatchPrecisionAndMatchPrecisionNotAndSiteNameAndUnitDesignatorAndUnitNumberAndUnitNumberSuffixAndCivicNumberAndCivicNumberSuffixAndStreetNameAndStreetTypeAndStreetDirectionAndStreetQualifierAndLocalityNameAndProvinceCodeAndLocalitiesAndNotLocalitiesAndBboxAndCentreAndMaxDistanceAndExtrapolateAndParcelPointOutputFormat} outputFormat Results format. See <a href=https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#outputFormat target="_blank">outputFormat</a>. 
		 * Note: GeoJSON and KML formats only support EPSG:4326 (outputSRS=4326)
		 * @param {string} bbox A bounding box (xmin,ymin,xmax,ymax) used to limit the search area. See <a href=https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#bbox target="_blank">bbox</a>
		 * @param {SitesWithin__outputFormatGetByBboxAndOutputSRSAndMaxResultsAndLocationDescriptorAndSetBackAndBriefAndExcludeUnitsAndOnlyCivicOutputSRS} outputSRS The EPSG code of the spatial reference system (SRS) to use for output geometries. See <a href=https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#outputSRS target="_blank">outputSRS</a>
		 * @param {number} maxResults The maximum number of search results to return.
		 * @param {Addresses__outputFormatGetByAddressStringAndLocationDescriptorAndMaxResultsAndInterpolationAndEchoAndBriefAndAutoCompleteAndSetBackAndOutputSRSAndMinScoreAndMatchPrecisionAndMatchPrecisionNotAndSiteNameAndUnitDesignatorAndUnitNumberAndUnitNumberSuffixAndCivicNumberAndCivicNumberSuffixAndStreetNameAndStreetTypeAndStreetDirectionAndStreetQualifierAndLocalityNameAndProvinceCodeAndLocalitiesAndNotLocalitiesAndBboxAndCentreAndMaxDistanceAndExtrapolateAndParcelPointLocationDescriptor} locationDescriptor Describes the nature of the address location. See <a href=https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#locationDescriptor target="_blank">locationDescriptor</a>
		 * @param {number} setBack The distance to move the accessPoint away from the curb and towards the inside of the parcel (in metres). Ignored if locationDescriptor not set to accessPoint.
		 * @param {boolean} brief If true, include only basic match and address details in results. Not supported for shp, csv, and gml formats.
		 * @param {boolean} excludeUnits If true, excludes sites that are units of a parent site
		 * @param {boolean} onlyCivic If true, excludes sites without a civic address
		 * @return {void} A list of selected sites within a given area. Each site in the response document is structured as a <a href="https://github.com/bcgov/ols-geocoder/blob/gh-pages/geocoder-developer-guide.md#site-address-representation" target="_blank">Site Address Representation</a>
		 */
		SitesWithin__outputFormatGetByBboxAndOutputSRSAndMaxResultsAndLocationDescriptorAndSetBackAndBriefAndExcludeUnitsAndOnlyCivic(outputFormat: Addresses__outputFormatGetByAddressStringAndLocationDescriptorAndMaxResultsAndInterpolationAndEchoAndBriefAndAutoCompleteAndSetBackAndOutputSRSAndMinScoreAndMatchPrecisionAndMatchPrecisionNotAndSiteNameAndUnitDesignatorAndUnitNumberAndUnitNumberSuffixAndCivicNumberAndCivicNumberSuffixAndStreetNameAndStreetTypeAndStreetDirectionAndStreetQualifierAndLocalityNameAndProvinceCodeAndLocalitiesAndNotLocalitiesAndBboxAndCentreAndMaxDistanceAndExtrapolateAndParcelPointOutputFormat, bbox: string, outputSRS: SitesWithin__outputFormatGetByBboxAndOutputSRSAndMaxResultsAndLocationDescriptorAndSetBackAndBriefAndExcludeUnitsAndOnlyCivicOutputSRS | null | undefined, maxResults: number | null | undefined, locationDescriptor: Addresses__outputFormatGetByAddressStringAndLocationDescriptorAndMaxResultsAndInterpolationAndEchoAndBriefAndAutoCompleteAndSetBackAndOutputSRSAndMinScoreAndMatchPrecisionAndMatchPrecisionNotAndSiteNameAndUnitDesignatorAndUnitNumberAndUnitNumberSuffixAndCivicNumberAndCivicNumberSuffixAndStreetNameAndStreetTypeAndStreetDirectionAndStreetQualifierAndLocalityNameAndProvinceCodeAndLocalitiesAndNotLocalitiesAndBboxAndCentreAndMaxDistanceAndExtrapolateAndParcelPointLocationDescriptor | null | undefined, setBack: number | null | undefined, brief: boolean | null | undefined, excludeUnits: boolean | null | undefined, onlyCivic: boolean | null | undefined, headersHandler?: () => HttpHeaders): Observable<HttpResponse<string>> {
			return this.http.get(this.baseUri + 'sites/within.' + outputFormat + '?bbox=' + (bbox == null ? '' : encodeURIComponent(bbox)) + '&outputSRS=' + outputSRS + '&maxResults=' + maxResults + '&locationDescriptor=' + locationDescriptor + '&setBack=' + setBack + '&brief=' + brief + '&excludeUnits=' + excludeUnits + '&onlyCivic=' + onlyCivic, { headers: headersHandler ? headersHandler() : undefined, observe: 'response', responseType: 'text' });
		}

		/**
		 * Get a site by its unique ID
		 * Represents an individual site
		 * Get sites/{siteID}.{outputFormat}
		 * @param {string} siteID A unique, but not immutable, site identifier.
		 * @param {Addresses__outputFormatGetByAddressStringAndLocationDescriptorAndMaxResultsAndInterpolationAndEchoAndBriefAndAutoCompleteAndSetBackAndOutputSRSAndMinScoreAndMatchPrecisionAndMatchPrecisionNotAndSiteNameAndUnitDesignatorAndUnitNumberAndUnitNumberSuffixAndCivicNumberAndCivicNumberSuffixAndStreetNameAndStreetTypeAndStreetDirectionAndStreetQualifierAndLocalityNameAndProvinceCodeAndLocalitiesAndNotLocalitiesAndBboxAndCentreAndMaxDistanceAndExtrapolateAndParcelPointOutputFormat} outputFormat Results format. See <a href=https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#outputFormat target="_blank">outputFormat</a>. 
		 * Note: GeoJSON and KML formats only support EPSG:4326 (outputSRS=4326)
		 * @param {Sites_siteID__outputFormatGetByOutputSRSAndLocationDescriptorAndBriefAndSetBackOutputSRS} outputSRS The EPSG code of the spatial reference system (SRS) to use for output geometries. See <a href=https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#outputSRS target="_blank">outputSRS</a>
		 * @param {Addresses__outputFormatGetByAddressStringAndLocationDescriptorAndMaxResultsAndInterpolationAndEchoAndBriefAndAutoCompleteAndSetBackAndOutputSRSAndMinScoreAndMatchPrecisionAndMatchPrecisionNotAndSiteNameAndUnitDesignatorAndUnitNumberAndUnitNumberSuffixAndCivicNumberAndCivicNumberSuffixAndStreetNameAndStreetTypeAndStreetDirectionAndStreetQualifierAndLocalityNameAndProvinceCodeAndLocalitiesAndNotLocalitiesAndBboxAndCentreAndMaxDistanceAndExtrapolateAndParcelPointLocationDescriptor} locationDescriptor Describes the nature of the address location. See <a href=https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#locationDescriptor target="_blank">locationDescriptor</a>
		 * @param {boolean} brief If true, include only basic match and address details in results. Not supported for shp, csv, and gml formats.
		 * @param {number} setBack The distance to move the accessPoint away from the curb and towards the inside of the parcel (in metres). Ignored if locationDescriptor not set to accessPoint.
		 * @return {void} The site with the requested siteID in <a href="https://github.com/bcgov/ols-geocoder/blob/gh-pages/geocoder-developer-guide.md#site-address-representation" target="_blank">Site Address Representation</a>
		 */
		Sites_siteID__outputFormatGetByOutputSRSAndLocationDescriptorAndBriefAndSetBack(siteID: string, outputFormat: Addresses__outputFormatGetByAddressStringAndLocationDescriptorAndMaxResultsAndInterpolationAndEchoAndBriefAndAutoCompleteAndSetBackAndOutputSRSAndMinScoreAndMatchPrecisionAndMatchPrecisionNotAndSiteNameAndUnitDesignatorAndUnitNumberAndUnitNumberSuffixAndCivicNumberAndCivicNumberSuffixAndStreetNameAndStreetTypeAndStreetDirectionAndStreetQualifierAndLocalityNameAndProvinceCodeAndLocalitiesAndNotLocalitiesAndBboxAndCentreAndMaxDistanceAndExtrapolateAndParcelPointOutputFormat, outputSRS: Sites_siteID__outputFormatGetByOutputSRSAndLocationDescriptorAndBriefAndSetBackOutputSRS | null | undefined, locationDescriptor: Addresses__outputFormatGetByAddressStringAndLocationDescriptorAndMaxResultsAndInterpolationAndEchoAndBriefAndAutoCompleteAndSetBackAndOutputSRSAndMinScoreAndMatchPrecisionAndMatchPrecisionNotAndSiteNameAndUnitDesignatorAndUnitNumberAndUnitNumberSuffixAndCivicNumberAndCivicNumberSuffixAndStreetNameAndStreetTypeAndStreetDirectionAndStreetQualifierAndLocalityNameAndProvinceCodeAndLocalitiesAndNotLocalitiesAndBboxAndCentreAndMaxDistanceAndExtrapolateAndParcelPointLocationDescriptor | null | undefined, brief: boolean | null | undefined, setBack: number | null | undefined, headersHandler?: () => HttpHeaders): Observable<HttpResponse<string>> {
			return this.http.get(this.baseUri + 'sites/' + (siteID == null ? '' : encodeURIComponent(siteID)) + '.' + outputFormat + '&outputSRS=' + outputSRS + '&locationDescriptor=' + locationDescriptor + '&brief=' + brief + '&setBack=' + setBack, { headers: headersHandler ? headersHandler() : undefined, observe: 'response', responseType: 'text' });
		}

		/**
		 * Represents all subsites of a given site
		 * Represents all subsites of a given site
		 * Get sites/{siteID}/subsites.{outputFormat}
		 * @param {string} siteID A unique, but not immutable, site identifier.
		 * @param {Addresses__outputFormatGetByAddressStringAndLocationDescriptorAndMaxResultsAndInterpolationAndEchoAndBriefAndAutoCompleteAndSetBackAndOutputSRSAndMinScoreAndMatchPrecisionAndMatchPrecisionNotAndSiteNameAndUnitDesignatorAndUnitNumberAndUnitNumberSuffixAndCivicNumberAndCivicNumberSuffixAndStreetNameAndStreetTypeAndStreetDirectionAndStreetQualifierAndLocalityNameAndProvinceCodeAndLocalitiesAndNotLocalitiesAndBboxAndCentreAndMaxDistanceAndExtrapolateAndParcelPointOutputFormat} outputFormat Results format. See <a href=https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#outputFormat target="_blank">outputFormat</a>. 
		 * Note: GeoJSON and KML formats only support EPSG:4326 (outputSRS=4326)
		 * @param {Sites_siteIDSubsites__outputFormatGetByOutputSRSAndLocationDescriptorAndBriefAndSetBackOutputSRS} outputSRS The EPSG code of the spatial reference system (SRS) to use for output geometries. See <a href=https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#outputSRS target="_blank">outputSRS</a>
		 * @param {Addresses__outputFormatGetByAddressStringAndLocationDescriptorAndMaxResultsAndInterpolationAndEchoAndBriefAndAutoCompleteAndSetBackAndOutputSRSAndMinScoreAndMatchPrecisionAndMatchPrecisionNotAndSiteNameAndUnitDesignatorAndUnitNumberAndUnitNumberSuffixAndCivicNumberAndCivicNumberSuffixAndStreetNameAndStreetTypeAndStreetDirectionAndStreetQualifierAndLocalityNameAndProvinceCodeAndLocalitiesAndNotLocalitiesAndBboxAndCentreAndMaxDistanceAndExtrapolateAndParcelPointLocationDescriptor} locationDescriptor Describes the nature of the address location. See <a href=https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#locationDescriptor target="_blank">locationDescriptor</a>
		 * @param {boolean} brief If true, include only basic match and address details in results. Not supported for shp, csv, and gml formats.
		 * @param {number} setBack The distance to move the accessPoint away from the curb and towards the inside of the parcel (in metres). Ignored if locationDescriptor not set to accessPoint.
		 * @return {void} Returns all subsites of a given site in <a href="https://github.com/bcgov/ols-geocoder/blob/gh-pages/geocoder-developer-guide.md#site-address-representation" target="_blank">Site Address Representation</a>
		 */
		Sites_siteIDSubsites__outputFormatGetByOutputSRSAndLocationDescriptorAndBriefAndSetBack(siteID: string, outputFormat: Addresses__outputFormatGetByAddressStringAndLocationDescriptorAndMaxResultsAndInterpolationAndEchoAndBriefAndAutoCompleteAndSetBackAndOutputSRSAndMinScoreAndMatchPrecisionAndMatchPrecisionNotAndSiteNameAndUnitDesignatorAndUnitNumberAndUnitNumberSuffixAndCivicNumberAndCivicNumberSuffixAndStreetNameAndStreetTypeAndStreetDirectionAndStreetQualifierAndLocalityNameAndProvinceCodeAndLocalitiesAndNotLocalitiesAndBboxAndCentreAndMaxDistanceAndExtrapolateAndParcelPointOutputFormat, outputSRS: Sites_siteIDSubsites__outputFormatGetByOutputSRSAndLocationDescriptorAndBriefAndSetBackOutputSRS | null | undefined, locationDescriptor: Addresses__outputFormatGetByAddressStringAndLocationDescriptorAndMaxResultsAndInterpolationAndEchoAndBriefAndAutoCompleteAndSetBackAndOutputSRSAndMinScoreAndMatchPrecisionAndMatchPrecisionNotAndSiteNameAndUnitDesignatorAndUnitNumberAndUnitNumberSuffixAndCivicNumberAndCivicNumberSuffixAndStreetNameAndStreetTypeAndStreetDirectionAndStreetQualifierAndLocalityNameAndProvinceCodeAndLocalitiesAndNotLocalitiesAndBboxAndCentreAndMaxDistanceAndExtrapolateAndParcelPointLocationDescriptor | null | undefined, brief: boolean | null | undefined, setBack: number | null | undefined, headersHandler?: () => HttpHeaders): Observable<HttpResponse<string>> {
			return this.http.get(this.baseUri + 'sites/' + (siteID == null ? '' : encodeURIComponent(siteID)) + '/subsites.' + outputFormat + '&outputSRS=' + outputSRS + '&locationDescriptor=' + locationDescriptor + '&brief=' + brief + '&setBack=' + setBack, { headers: headersHandler ? headersHandler() : undefined, observe: 'response', responseType: 'text' });
		}
	}

	export enum Addresses__outputFormatGetByAddressStringAndLocationDescriptorAndMaxResultsAndInterpolationAndEchoAndBriefAndAutoCompleteAndSetBackAndOutputSRSAndMinScoreAndMatchPrecisionAndMatchPrecisionNotAndSiteNameAndUnitDesignatorAndUnitNumberAndUnitNumberSuffixAndCivicNumberAndCivicNumberSuffixAndStreetNameAndStreetTypeAndStreetDirectionAndStreetQualifierAndLocalityNameAndProvinceCodeAndLocalitiesAndNotLocalitiesAndBboxAndCentreAndMaxDistanceAndExtrapolateAndParcelPointOutputFormat { json = 'json', geojson = 'geojson', xhtml = 'xhtml', kml = 'kml', gml = 'gml', csv = 'csv', shpz = 'shpz' }

	export enum Addresses__outputFormatGetByAddressStringAndLocationDescriptorAndMaxResultsAndInterpolationAndEchoAndBriefAndAutoCompleteAndSetBackAndOutputSRSAndMinScoreAndMatchPrecisionAndMatchPrecisionNotAndSiteNameAndUnitDesignatorAndUnitNumberAndUnitNumberSuffixAndCivicNumberAndCivicNumberSuffixAndStreetNameAndStreetTypeAndStreetDirectionAndStreetQualifierAndLocalityNameAndProvinceCodeAndLocalitiesAndNotLocalitiesAndBboxAndCentreAndMaxDistanceAndExtrapolateAndParcelPointLocationDescriptor { any = 'any', accessPoint = 'accessPoint', frontDoorPoint = 'frontDoorPoint', parcelPoint = 'parcelPoint', rooftopPoint = 'rooftopPoint', routingPoint = 'routingPoint' }

	export enum Addresses__outputFormatGetByAddressStringAndLocationDescriptorAndMaxResultsAndInterpolationAndEchoAndBriefAndAutoCompleteAndSetBackAndOutputSRSAndMinScoreAndMatchPrecisionAndMatchPrecisionNotAndSiteNameAndUnitDesignatorAndUnitNumberAndUnitNumberSuffixAndCivicNumberAndCivicNumberSuffixAndStreetNameAndStreetTypeAndStreetDirectionAndStreetQualifierAndLocalityNameAndProvinceCodeAndLocalitiesAndNotLocalitiesAndBboxAndCentreAndMaxDistanceAndExtrapolateAndParcelPointInterpolation { adaptive = 'adaptive', linear = 'linear', none = 'none' }

	export enum Addresses__outputFormatGetByAddressStringAndLocationDescriptorAndMaxResultsAndInterpolationAndEchoAndBriefAndAutoCompleteAndSetBackAndOutputSRSAndMinScoreAndMatchPrecisionAndMatchPrecisionNotAndSiteNameAndUnitDesignatorAndUnitNumberAndUnitNumberSuffixAndCivicNumberAndCivicNumberSuffixAndStreetNameAndStreetTypeAndStreetDirectionAndStreetQualifierAndLocalityNameAndProvinceCodeAndLocalitiesAndNotLocalitiesAndBboxAndCentreAndMaxDistanceAndExtrapolateAndParcelPointOutputSRS { _4326 = 0, _4269 = 1, _3005 = 2, _26907 = 3, _26908 = 4, _26909 = 5, _26910 = 6, _26911 = 7 }

	export enum Addresses__outputFormatGetByAddressStringAndLocationDescriptorAndMaxResultsAndInterpolationAndEchoAndBriefAndAutoCompleteAndSetBackAndOutputSRSAndMinScoreAndMatchPrecisionAndMatchPrecisionNotAndSiteNameAndUnitDesignatorAndUnitNumberAndUnitNumberSuffixAndCivicNumberAndCivicNumberSuffixAndStreetNameAndStreetTypeAndStreetDirectionAndStreetQualifierAndLocalityNameAndProvinceCodeAndLocalitiesAndNotLocalitiesAndBboxAndCentreAndMaxDistanceAndExtrapolateAndParcelPointUnitDesignator { APT = 'APT', BLDG = 'BLDG', BSMT = 'BSMT', FLR = 'FLR', LOBBY = 'LOBBY', LWR = 'LWR', PAD = 'PAD', PH = 'PH', REAR = 'REAR', RM = 'RM', SIDE = 'SIDE', SITE = 'SITE', SUITE = 'SUITE', TH = 'TH', UNIT = 'UNIT', UPPR = 'UPPR' }

	export enum Addresses__outputFormatGetByAddressStringAndLocationDescriptorAndMaxResultsAndInterpolationAndEchoAndBriefAndAutoCompleteAndSetBackAndOutputSRSAndMinScoreAndMatchPrecisionAndMatchPrecisionNotAndSiteNameAndUnitDesignatorAndUnitNumberAndUnitNumberSuffixAndCivicNumberAndCivicNumberSuffixAndStreetNameAndStreetTypeAndStreetDirectionAndStreetQualifierAndLocalityNameAndProvinceCodeAndLocalitiesAndNotLocalitiesAndBboxAndCentreAndMaxDistanceAndExtrapolateAndParcelPointStreetDirection { N = 'N', S = 'S', E = 'E', W = 'W', O = 'O', NE = 'NE', NO = 'NO', NW = 'NW', SE = 'SE', SO = 'SO', SW = 'SW' }

	export enum IntersectionsNear__outputFormatGetByPointAndMaxDistanceAndOutputSRSAndMaxResultsAndMinDegreeAndMaxDegreeOutputSRS { _4326 = 0, _4269 = 1, _3005 = 2, _26907 = 3, _26908 = 4, _26909 = 5, _26910 = 6, _26911 = 7 }

	export enum IntersectionsNearest__outputFormatGetByPointAndMaxDistanceAndOutputSRSAndMinDegreeAndMaxDegreeOutputSRS { _4326 = 0, _4269 = 1, _3005 = 2, _26907 = 3, _26908 = 4, _26909 = 5, _26910 = 6, _26911 = 7 }

	export enum IntersectionsWithin__outputFormatGetByBboxAndOutputSRSAndMaxResultsAndMinDegreeAndMaxDegreeOutputSRS { _4326 = 0, _4269 = 1, _3005 = 2, _26907 = 3, _26908 = 4, _26909 = 5, _26910 = 6, _26911 = 7 }

	export enum Intersections_intersectionID__outputFormatGetByOutputSRSOutputSRS { _4326 = 0, _4269 = 1, _3005 = 2, _26907 = 3, _26908 = 4, _26909 = 5, _26910 = 6, _26911 = 7 }

	export enum OccupantsAddresses__outputFormatGetByAddressStringAndTagsAndLocationDescriptorAndMaxResultsAndInterpolationAndEchoAndBriefAndAutoCompleteAndSetBackAndOutputSRSAndMinScoreAndMatchPrecisionAndMatchPrecisionNotAndSiteNameAndUnitDesignatorAndUnitNumberAndUnitNumberSuffixAndCivicNumberAndCivicNumberSuffixAndStreetNameAndStreetTypeAndStreetDirectionAndStreetQualifierAndLocalityNameAndProvinceCodeAndLocalitiesAndNotLocalitiesAndBboxAndCentreAndMaxDistanceAndExtrapolateAndParcelPointOutputSRS { _4326 = 0, _4269 = 1, _3005 = 2, _26907 = 3, _26908 = 4, _26909 = 5, _26910 = 6, _26911 = 7 }

	export enum OccupantsNear__outputFormatGetByPointAndTagsAndMaxDistanceAndOutputSRSAndMaxResultsAndLocationDescriptorAndBriefAndSetBackOutputSRS { _4326 = 0, _4269 = 1, _3005 = 2, _26907 = 3, _26908 = 4, _26909 = 5, _26910 = 6, _26911 = 7 }

	export enum OccupantsNearest__outputFormatGetByPointAndMaxDistanceAndTagsAndOutputSRSAndLocationDescriptorAndBriefAndSetBackOutputSRS { _4326 = 0, _4269 = 1, _3005 = 2, _26907 = 3, _26908 = 4, _26909 = 5, _26910 = 6, _26911 = 7 }

	export enum OccupantsWithin__outputFormatGetByBboxAndTagsAndOutputSRSAndMaxResultsAndLocationDescriptorAndBriefAndSetBackOutputSRS { _4326 = 0, _4269 = 1, _3005 = 2, _26907 = 3, _26908 = 4, _26909 = 5, _26910 = 6, _26911 = 7 }

	export enum Occupants_occupantID__outputFormatGetByOutputSRSAndLocationDescriptorAndBriefAndSetBackOutputSRS { _4326 = 0, _4269 = 1, _3005 = 2, _26907 = 3, _26908 = 4, _26909 = 5, _26910 = 6, _26911 = 7 }

	export enum SitesNear__outputFormatGetByPointAndMaxDistanceAndOutputSRSAndMaxResultsAndLocationDescriptorAndSetBackAndBriefAndExcludeUnitsAndOnlyCivicOutputSRS { _4326 = 0, _4269 = 1, _3005 = 2, _26907 = 3, _26908 = 4, _26909 = 5, _26910 = 6, _26911 = 7 }

	export enum SitesNearest__outputFormatGetByPointAndMaxDistanceAndOutputSRSAndLocationDescriptorAndSetBackAndBriefAndExcludeUnitsAndOnlyCivicOutputSRS { _4326 = 0, _4269 = 1, _3005 = 2, _26907 = 3, _26908 = 4, _26909 = 5, _26910 = 6, _26911 = 7 }

	export enum SitesWithin__outputFormatGetByBboxAndOutputSRSAndMaxResultsAndLocationDescriptorAndSetBackAndBriefAndExcludeUnitsAndOnlyCivicOutputSRS { _4326 = 0, _4269 = 1, _3005 = 2, _26907 = 3, _26908 = 4, _26909 = 5, _26910 = 6, _26911 = 7 }

	export enum Sites_siteID__outputFormatGetByOutputSRSAndLocationDescriptorAndBriefAndSetBackOutputSRS { _4326 = 0, _4269 = 1, _3005 = 2, _26907 = 3, _26908 = 4, _26909 = 5, _26910 = 6, _26911 = 7 }

	export enum Sites_siteIDSubsites__outputFormatGetByOutputSRSAndLocationDescriptorAndBriefAndSetBackOutputSRS { _4326 = 0, _4269 = 1, _3005 = 2, _26907 = 3, _26908 = 4, _26909 = 5, _26910 = 6, _26911 = 7 }

}


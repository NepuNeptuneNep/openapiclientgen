import { Injectable, Inject } from '@angular/core';
import { HttpClient, HttpHeaders, HttpResponse } from '@angular/common/http';
import { Observable } from 'rxjs';
import { FormControl, FormGroup, Validators } from '@angular/forms';
export namespace MyNS {
	export interface CalculateReachableRangePostDataParameters {
		allowVignette?: Array<string>;
		avoidAreas?: CalculateReachableRangePostDataParametersAvoidAreas;
		avoidVignette?: Array<string>;
	}
	export interface CalculateReachableRangePostDataParametersFormProperties {
	}
	export function CreateCalculateReachableRangePostDataParametersFormGroup() {
		return new FormGroup<CalculateReachableRangePostDataParametersFormProperties>({
		});

	}

	export interface CalculateReachableRangePostDataParametersAvoidAreas {
		CalculateReachableRangePostDataParametersAvoidAreasRectangles?: Array<CalculateReachableRangePostDataParametersAvoidAreasRectangles>;
	}
	export interface CalculateReachableRangePostDataParametersAvoidAreasFormProperties {
	}
	export function CreateCalculateReachableRangePostDataParametersAvoidAreasFormGroup() {
		return new FormGroup<CalculateReachableRangePostDataParametersAvoidAreasFormProperties>({
		});

	}

	export interface CalculateReachableRangePostDataParametersAvoidAreasRectangles {
		northEastCorner?: CalculateReachableRangePostDataParametersAvoidAreasRectanglesNorthEastCorner;
		southWestCorner?: CalculateReachableRangePostDataParametersAvoidAreasRectanglesSouthWestCorner;
	}
	export interface CalculateReachableRangePostDataParametersAvoidAreasRectanglesFormProperties {
	}
	export function CreateCalculateReachableRangePostDataParametersAvoidAreasRectanglesFormGroup() {
		return new FormGroup<CalculateReachableRangePostDataParametersAvoidAreasRectanglesFormProperties>({
		});

	}

	export interface CalculateReachableRangePostDataParametersAvoidAreasRectanglesNorthEastCorner {
		latitude?: string | null;
		longitude?: string | null;
	}
	export interface CalculateReachableRangePostDataParametersAvoidAreasRectanglesNorthEastCornerFormProperties {
		latitude: FormControl<string | null | undefined>,
		longitude: FormControl<string | null | undefined>,
	}
	export function CreateCalculateReachableRangePostDataParametersAvoidAreasRectanglesNorthEastCornerFormGroup() {
		return new FormGroup<CalculateReachableRangePostDataParametersAvoidAreasRectanglesNorthEastCornerFormProperties>({
			latitude: new FormControl<string | null | undefined>(undefined),
			longitude: new FormControl<string | null | undefined>(undefined),
		});

	}

	export interface CalculateReachableRangePostDataParametersAvoidAreasRectanglesSouthWestCorner {
		latitude?: string | null;
		longitude?: string | null;
	}
	export interface CalculateReachableRangePostDataParametersAvoidAreasRectanglesSouthWestCornerFormProperties {
		latitude: FormControl<string | null | undefined>,
		longitude: FormControl<string | null | undefined>,
	}
	export function CreateCalculateReachableRangePostDataParametersAvoidAreasRectanglesSouthWestCornerFormGroup() {
		return new FormGroup<CalculateReachableRangePostDataParametersAvoidAreasRectanglesSouthWestCornerFormProperties>({
			latitude: new FormControl<string | null | undefined>(undefined),
			longitude: new FormControl<string | null | undefined>(undefined),
		});

	}

	export interface CalculateRoutePostDataParameters {
		allowVignette?: Array<string>;
		avoidAreas?: CalculateRoutePostDataParametersAvoidAreas;
		avoidVignette?: Array<string>;
		CalculateRoutePostDataParametersSupportingPoints?: Array<CalculateRoutePostDataParametersSupportingPoints>;
	}
	export interface CalculateRoutePostDataParametersFormProperties {
	}
	export function CreateCalculateRoutePostDataParametersFormGroup() {
		return new FormGroup<CalculateRoutePostDataParametersFormProperties>({
		});

	}

	export interface CalculateRoutePostDataParametersAvoidAreas {
		CalculateRoutePostDataParametersAvoidAreasRectangles?: Array<CalculateRoutePostDataParametersAvoidAreasRectangles>;
	}
	export interface CalculateRoutePostDataParametersAvoidAreasFormProperties {
	}
	export function CreateCalculateRoutePostDataParametersAvoidAreasFormGroup() {
		return new FormGroup<CalculateRoutePostDataParametersAvoidAreasFormProperties>({
		});

	}

	export interface CalculateRoutePostDataParametersAvoidAreasRectangles {
		northEastCorner?: CalculateRoutePostDataParametersAvoidAreasRectanglesNorthEastCorner;
		southWestCorner?: CalculateRoutePostDataParametersAvoidAreasRectanglesSouthWestCorner;
	}
	export interface CalculateRoutePostDataParametersAvoidAreasRectanglesFormProperties {
	}
	export function CreateCalculateRoutePostDataParametersAvoidAreasRectanglesFormGroup() {
		return new FormGroup<CalculateRoutePostDataParametersAvoidAreasRectanglesFormProperties>({
		});

	}

	export interface CalculateRoutePostDataParametersAvoidAreasRectanglesNorthEastCorner {
		latitude?: string | null;
		longitude?: string | null;
	}
	export interface CalculateRoutePostDataParametersAvoidAreasRectanglesNorthEastCornerFormProperties {
		latitude: FormControl<string | null | undefined>,
		longitude: FormControl<string | null | undefined>,
	}
	export function CreateCalculateRoutePostDataParametersAvoidAreasRectanglesNorthEastCornerFormGroup() {
		return new FormGroup<CalculateRoutePostDataParametersAvoidAreasRectanglesNorthEastCornerFormProperties>({
			latitude: new FormControl<string | null | undefined>(undefined),
			longitude: new FormControl<string | null | undefined>(undefined),
		});

	}

	export interface CalculateRoutePostDataParametersAvoidAreasRectanglesSouthWestCorner {
		latitude?: string | null;
		longitude?: string | null;
	}
	export interface CalculateRoutePostDataParametersAvoidAreasRectanglesSouthWestCornerFormProperties {
		latitude: FormControl<string | null | undefined>,
		longitude: FormControl<string | null | undefined>,
	}
	export function CreateCalculateRoutePostDataParametersAvoidAreasRectanglesSouthWestCornerFormGroup() {
		return new FormGroup<CalculateRoutePostDataParametersAvoidAreasRectanglesSouthWestCornerFormProperties>({
			latitude: new FormControl<string | null | undefined>(undefined),
			longitude: new FormControl<string | null | undefined>(undefined),
		});

	}

	export interface CalculateRoutePostDataParametersSupportingPoints {
		latitude?: string | null;
		longitude?: string | null;
	}
	export interface CalculateRoutePostDataParametersSupportingPointsFormProperties {
		latitude: FormControl<string | null | undefined>,
		longitude: FormControl<string | null | undefined>,
	}
	export function CreateCalculateRoutePostDataParametersSupportingPointsFormGroup() {
		return new FormGroup<CalculateRoutePostDataParametersSupportingPointsFormProperties>({
			latitude: new FormControl<string | null | undefined>(undefined),
			longitude: new FormControl<string | null | undefined>(undefined),
		});

	}

	@Injectable()
	export class MyClient {
		constructor(@Inject('baseUri') private baseUri: string = location.protocol + '//' + location.hostname + (location.port ? ':' + location.port : '') + '/', private http: HttpClient) {
		}

		/**
		 * Reachable Range
		 * Calculates a set of locations that can be reached from the origin point.
		 * Get routing/{versionNumber}/calculateReachableRange/{origin}/{contentType}
		 * @param {Routing_versionNumberCalculateReachableRange_origin_contentTypeGetByFuelBudgetInLitersAndEnergyBudgetInkWhAndTimeBudgetInSecAndCallbackAndReportAndDepartAtAndArriveAtAndRouteTypeAndTrafficAndAvoidAndTravelModeAndHillinessAndWindingnessAndVehicleMaxSpeedAndVehicleWeightAndVehicleAxleWeightAndVehicleLengthAndVehicleWidthAndVehicleHeightAndVehicleCommercialAndVehicleLoadTypeAndConstantSpeedConsumptionInLitersPerHundredkmAndCurrentFuelInLitersAndAuxiliaryPowerInLitersPerHourAndFuelEnergyDensityInMJoulesPerLiterAndAccelerationEfficiencyAndDecelerationEfficiencyAndUphillEfficiencyAndDownhillEfficiencyAndVehicleEngineTypeAndConstantSpeedConsumptionInkWhPerHundredkmVersionNumber} versionNumber Service version number. The current value is 1.
		 * @param {string} origin Point from which the range calculation should start.
		 * @param {Routing_versionNumberCalculateReachableRange_origin_contentTypeGetByFuelBudgetInLitersAndEnergyBudgetInkWhAndTimeBudgetInSecAndCallbackAndReportAndDepartAtAndArriveAtAndRouteTypeAndTrafficAndAvoidAndTravelModeAndHillinessAndWindingnessAndVehicleMaxSpeedAndVehicleWeightAndVehicleAxleWeightAndVehicleLengthAndVehicleWidthAndVehicleHeightAndVehicleCommercialAndVehicleLoadTypeAndConstantSpeedConsumptionInLitersPerHundredkmAndCurrentFuelInLitersAndAuxiliaryPowerInLitersPerHourAndFuelEnergyDensityInMJoulesPerLiterAndAccelerationEfficiencyAndDecelerationEfficiencyAndUphillEfficiencyAndDownhillEfficiencyAndVehicleEngineTypeAndConstantSpeedConsumptionInkWhPerHundredkmContentType} contentType The content type of the response structure. If the content type is jsonp, a callback method can be specified in the query parameters.
		 * @param {number} fuelBudgetInLiters Fuel budget in liters. Determines the maximum vehicle range using the specified Combustion Consumption Model.
		 * @param {number} energyBudgetInkWh Electric energy budget in kilowatt hours (kWh). Determines the maximum vehicle range using the specified Electric Consumption Model.
		 * @param {number} timeBudgetInSec Time budget in seconds. Determines the maximum vehicle range using the specified driving time. The consumption parameters in the request will only affect eco-routes, and thereby indirectly the driving time.
		 * @param {string} callback Specifies the jsonp callback method.
		 * @param {Routing_versionNumberCalculateReachableRange_origin_contentTypeGetByFuelBudgetInLitersAndEnergyBudgetInkWhAndTimeBudgetInSecAndCallbackAndReportAndDepartAtAndArriveAtAndRouteTypeAndTrafficAndAvoidAndTravelModeAndHillinessAndWindingnessAndVehicleMaxSpeedAndVehicleWeightAndVehicleAxleWeightAndVehicleLengthAndVehicleWidthAndVehicleHeightAndVehicleCommercialAndVehicleLoadTypeAndConstantSpeedConsumptionInLitersPerHundredkmAndCurrentFuelInLitersAndAuxiliaryPowerInLitersPerHourAndFuelEnergyDensityInMJoulesPerLiterAndAccelerationEfficiencyAndDecelerationEfficiencyAndUphillEfficiencyAndDownhillEfficiencyAndVehicleEngineTypeAndConstantSpeedConsumptionInkWhPerHundredkmReport} report Specifies which data should be reported for diagnosis purposes.
		 * @param {string} departAt The date and time of departure from the origin point. Departure times apart from <i>now</i> must be specified as a dateTime.
		 * @param {string} arriveAt The date and time of arrival at the destination point. It must be specified as a dateTime.
		 * @param {Routing_versionNumberCalculateReachableRange_origin_contentTypeGetByFuelBudgetInLitersAndEnergyBudgetInkWhAndTimeBudgetInSecAndCallbackAndReportAndDepartAtAndArriveAtAndRouteTypeAndTrafficAndAvoidAndTravelModeAndHillinessAndWindingnessAndVehicleMaxSpeedAndVehicleWeightAndVehicleAxleWeightAndVehicleLengthAndVehicleWidthAndVehicleHeightAndVehicleCommercialAndVehicleLoadTypeAndConstantSpeedConsumptionInLitersPerHundredkmAndCurrentFuelInLitersAndAuxiliaryPowerInLitersPerHourAndFuelEnergyDensityInMJoulesPerLiterAndAccelerationEfficiencyAndDecelerationEfficiencyAndUphillEfficiencyAndDownhillEfficiencyAndVehicleEngineTypeAndConstantSpeedConsumptionInkWhPerHundredkmRouteType} routeType The type of route requested.
		 * @param {boolean} traffic Determines whether current traffic is used in route calculations. Note that information on historic road speeds is always used.
		 * @param {string} avoid Specifies whether the routing engine should try to avoid specific types of road segment when calculating the route. Can be specified multiple times.
		 * Possible values:
		 *   - tollRoads
		 *   - motorways
		 *   - ferries
		 *   - unpavedRoads
		 *   - carpools
		 * @param {Routing_versionNumberCalculateReachableRange_origin_contentTypeGetByFuelBudgetInLitersAndEnergyBudgetInkWhAndTimeBudgetInSecAndCallbackAndReportAndDepartAtAndArriveAtAndRouteTypeAndTrafficAndAvoidAndTravelModeAndHillinessAndWindingnessAndVehicleMaxSpeedAndVehicleWeightAndVehicleAxleWeightAndVehicleLengthAndVehicleWidthAndVehicleHeightAndVehicleCommercialAndVehicleLoadTypeAndConstantSpeedConsumptionInLitersPerHundredkmAndCurrentFuelInLitersAndAuxiliaryPowerInLitersPerHourAndFuelEnergyDensityInMJoulesPerLiterAndAccelerationEfficiencyAndDecelerationEfficiencyAndUphillEfficiencyAndDownhillEfficiencyAndVehicleEngineTypeAndConstantSpeedConsumptionInkWhPerHundredkmTravelMode} travelMode The mode of travel for the requested route.
		 * @param {Routing_versionNumberCalculateReachableRange_origin_contentTypeGetByFuelBudgetInLitersAndEnergyBudgetInkWhAndTimeBudgetInSecAndCallbackAndReportAndDepartAtAndArriveAtAndRouteTypeAndTrafficAndAvoidAndTravelModeAndHillinessAndWindingnessAndVehicleMaxSpeedAndVehicleWeightAndVehicleAxleWeightAndVehicleLengthAndVehicleWidthAndVehicleHeightAndVehicleCommercialAndVehicleLoadTypeAndConstantSpeedConsumptionInLitersPerHundredkmAndCurrentFuelInLitersAndAuxiliaryPowerInLitersPerHourAndFuelEnergyDensityInMJoulesPerLiterAndAccelerationEfficiencyAndDecelerationEfficiencyAndUphillEfficiencyAndDownhillEfficiencyAndVehicleEngineTypeAndConstantSpeedConsumptionInkWhPerHundredkmHilliness} hilliness Degree of hilliness for calculating a thrilling route.
		 * @param {Routing_versionNumberCalculateReachableRange_origin_contentTypeGetByFuelBudgetInLitersAndEnergyBudgetInkWhAndTimeBudgetInSecAndCallbackAndReportAndDepartAtAndArriveAtAndRouteTypeAndTrafficAndAvoidAndTravelModeAndHillinessAndWindingnessAndVehicleMaxSpeedAndVehicleWeightAndVehicleAxleWeightAndVehicleLengthAndVehicleWidthAndVehicleHeightAndVehicleCommercialAndVehicleLoadTypeAndConstantSpeedConsumptionInLitersPerHundredkmAndCurrentFuelInLitersAndAuxiliaryPowerInLitersPerHourAndFuelEnergyDensityInMJoulesPerLiterAndAccelerationEfficiencyAndDecelerationEfficiencyAndUphillEfficiencyAndDownhillEfficiencyAndVehicleEngineTypeAndConstantSpeedConsumptionInkWhPerHundredkmHilliness} windingness Amount that a thrilling route should wind.
		 * @param {number} vehicleMaxSpeed Maximum speed of the vehicle in km/hour.
		 * @param {number} vehicleWeight Weight of the vehicle in kilograms.
		 * @param {number} vehicleAxleWeight Weight per axle of the vehicle in kg.
		 * @param {number} vehicleLength Length of the vehicle in meters.
		 * @param {number} vehicleWidth Width of the vehicle in meters.
		 * @param {number} vehicleHeight Height of the vehicle in meters.
		 * @param {boolean} vehicleCommercial Indicates that the vehicle is used for commercial purposes. This means it may not be allowed on certain roads.
		 * @param {string} vehicleLoadType Indicates what kinds of hazardous materials the vehicle is carrying (if any). This means it may not be allowed on certain roads.
		 * Use these for routing in the US:
		 *   - <i>USHazmatClass1</i> Explosives
		 *   - <i>USHazmatClass2</i> Compressed gas
		 *   - <i>USHazmatClass3</i> Flammable liquids
		 *   - <i>USHazmatClass4</i> Flammable solids
		 *   - <i>USHazmatClass5</i> Oxidizers
		 *   - <i>USHazmatClass6</i> Poisons
		 *   - <i>USHazmatClass7</i> Radioactive
		 *   - <i>USHazmatClass8</i> Corrosives
		 *   - <i>USHazmatClass9</i> Miscellaneous
		 * Use these for routing in all other countries:
		 *   - <i>otherHazmatExplosive</i> Explosives
		 *   - <i>otherHazmatGeneral</i> Miscellaneous
		 *   - <i>otherHazmatHarmfulToWater</i> Harmful to water
		 * vehicleLoadType can be specified multiple times. This parameter is currently only considered for <b>travelMode</b>=<i>truck</i>.
		 * @param {string} constantSpeedConsumptionInLitersPerHundredkm Specifies the speed-dependent component of consumption. Provided as an unordered list of speed/consumption-rate pairs.
		 * @param {number} currentFuelInLiters Specifies the current supply of fuel in liters.
		 * @param {number} auxiliaryPowerInLitersPerHour Specifies the amount of fuel consumed for sustaining auxiliary systems of the vehicle, in liters per hour.
		 * @param {number} fuelEnergyDensityInMJoulesPerLiter Specifies the amount of chemical energy stored in one liter of fuel in megajoules (MJ).
		 * @param {number} accelerationEfficiency Specifies the efficiency of converting chemical energy stored in fuel to kinetic energy when the vehicle accelerates (i.e. KineticEnergyGained/ChemicalEnergyConsumed).
		 * @param {number} decelerationEfficiency Specifies the efficiency of converting kinetic energy to saved (not consumed) fuel when the vehicle decelerates (i.e. ChemicalEnergySaved/KineticEnergyLost).
		 * @param {number} uphillEfficiency Specifies the efficiency of converting chemical energy stored in fuel to potential energy when the vehicle gains elevation (i.e. PotentialEnergyGained/ChemicalEnergyConsumed).
		 * @param {number} downhillEfficiency Specifies the efficiency of converting potential energy to saved (not consumed) fuel when the vehicle loses elevation (i.e. ChemicalEnergySaved/PotentialEnergyLost).
		 * @param {Routing_versionNumberCalculateReachableRange_origin_contentTypeGetByFuelBudgetInLitersAndEnergyBudgetInkWhAndTimeBudgetInSecAndCallbackAndReportAndDepartAtAndArriveAtAndRouteTypeAndTrafficAndAvoidAndTravelModeAndHillinessAndWindingnessAndVehicleMaxSpeedAndVehicleWeightAndVehicleAxleWeightAndVehicleLengthAndVehicleWidthAndVehicleHeightAndVehicleCommercialAndVehicleLoadTypeAndConstantSpeedConsumptionInLitersPerHundredkmAndCurrentFuelInLitersAndAuxiliaryPowerInLitersPerHourAndFuelEnergyDensityInMJoulesPerLiterAndAccelerationEfficiencyAndDecelerationEfficiencyAndUphillEfficiencyAndDownhillEfficiencyAndVehicleEngineTypeAndConstantSpeedConsumptionInkWhPerHundredkmVehicleEngineType} vehicleEngineType Engine type of the vehicle.
		 * @param {string} constantSpeedConsumptionInkWhPerHundredkm Specifies the speed-dependent component of consumption. Provided as an unordered list of speed/consumption-rate pairs.
		 * @return {void} OK: a range was calculated and the body of the response contains the polygon description and further data.
		 */
		Routing_versionNumberCalculateReachableRange_origin_contentTypeGetByFuelBudgetInLitersAndEnergyBudgetInkWhAndTimeBudgetInSecAndCallbackAndReportAndDepartAtAndArriveAtAndRouteTypeAndTrafficAndAvoidAndTravelModeAndHillinessAndWindingnessAndVehicleMaxSpeedAndVehicleWeightAndVehicleAxleWeightAndVehicleLengthAndVehicleWidthAndVehicleHeightAndVehicleCommercialAndVehicleLoadTypeAndConstantSpeedConsumptionInLitersPerHundredkmAndCurrentFuelInLitersAndAuxiliaryPowerInLitersPerHourAndFuelEnergyDensityInMJoulesPerLiterAndAccelerationEfficiencyAndDecelerationEfficiencyAndUphillEfficiencyAndDownhillEfficiencyAndVehicleEngineTypeAndConstantSpeedConsumptionInkWhPerHundredkm(versionNumber: Routing_versionNumberCalculateReachableRange_origin_contentTypeGetByFuelBudgetInLitersAndEnergyBudgetInkWhAndTimeBudgetInSecAndCallbackAndReportAndDepartAtAndArriveAtAndRouteTypeAndTrafficAndAvoidAndTravelModeAndHillinessAndWindingnessAndVehicleMaxSpeedAndVehicleWeightAndVehicleAxleWeightAndVehicleLengthAndVehicleWidthAndVehicleHeightAndVehicleCommercialAndVehicleLoadTypeAndConstantSpeedConsumptionInLitersPerHundredkmAndCurrentFuelInLitersAndAuxiliaryPowerInLitersPerHourAndFuelEnergyDensityInMJoulesPerLiterAndAccelerationEfficiencyAndDecelerationEfficiencyAndUphillEfficiencyAndDownhillEfficiencyAndVehicleEngineTypeAndConstantSpeedConsumptionInkWhPerHundredkmVersionNumber, origin: string, contentType: Routing_versionNumberCalculateReachableRange_origin_contentTypeGetByFuelBudgetInLitersAndEnergyBudgetInkWhAndTimeBudgetInSecAndCallbackAndReportAndDepartAtAndArriveAtAndRouteTypeAndTrafficAndAvoidAndTravelModeAndHillinessAndWindingnessAndVehicleMaxSpeedAndVehicleWeightAndVehicleAxleWeightAndVehicleLengthAndVehicleWidthAndVehicleHeightAndVehicleCommercialAndVehicleLoadTypeAndConstantSpeedConsumptionInLitersPerHundredkmAndCurrentFuelInLitersAndAuxiliaryPowerInLitersPerHourAndFuelEnergyDensityInMJoulesPerLiterAndAccelerationEfficiencyAndDecelerationEfficiencyAndUphillEfficiencyAndDownhillEfficiencyAndVehicleEngineTypeAndConstantSpeedConsumptionInkWhPerHundredkmContentType, fuelBudgetInLiters: number | null | undefined, energyBudgetInkWh: number | null | undefined, timeBudgetInSec: number | null | undefined, callback: string | null | undefined, report: Routing_versionNumberCalculateReachableRange_origin_contentTypeGetByFuelBudgetInLitersAndEnergyBudgetInkWhAndTimeBudgetInSecAndCallbackAndReportAndDepartAtAndArriveAtAndRouteTypeAndTrafficAndAvoidAndTravelModeAndHillinessAndWindingnessAndVehicleMaxSpeedAndVehicleWeightAndVehicleAxleWeightAndVehicleLengthAndVehicleWidthAndVehicleHeightAndVehicleCommercialAndVehicleLoadTypeAndConstantSpeedConsumptionInLitersPerHundredkmAndCurrentFuelInLitersAndAuxiliaryPowerInLitersPerHourAndFuelEnergyDensityInMJoulesPerLiterAndAccelerationEfficiencyAndDecelerationEfficiencyAndUphillEfficiencyAndDownhillEfficiencyAndVehicleEngineTypeAndConstantSpeedConsumptionInkWhPerHundredkmReport | null | undefined, departAt: string | null | undefined, arriveAt: string | null | undefined, routeType: Routing_versionNumberCalculateReachableRange_origin_contentTypeGetByFuelBudgetInLitersAndEnergyBudgetInkWhAndTimeBudgetInSecAndCallbackAndReportAndDepartAtAndArriveAtAndRouteTypeAndTrafficAndAvoidAndTravelModeAndHillinessAndWindingnessAndVehicleMaxSpeedAndVehicleWeightAndVehicleAxleWeightAndVehicleLengthAndVehicleWidthAndVehicleHeightAndVehicleCommercialAndVehicleLoadTypeAndConstantSpeedConsumptionInLitersPerHundredkmAndCurrentFuelInLitersAndAuxiliaryPowerInLitersPerHourAndFuelEnergyDensityInMJoulesPerLiterAndAccelerationEfficiencyAndDecelerationEfficiencyAndUphillEfficiencyAndDownhillEfficiencyAndVehicleEngineTypeAndConstantSpeedConsumptionInkWhPerHundredkmRouteType | null | undefined, traffic: boolean | null | undefined, avoid: string | null | undefined, travelMode: Routing_versionNumberCalculateReachableRange_origin_contentTypeGetByFuelBudgetInLitersAndEnergyBudgetInkWhAndTimeBudgetInSecAndCallbackAndReportAndDepartAtAndArriveAtAndRouteTypeAndTrafficAndAvoidAndTravelModeAndHillinessAndWindingnessAndVehicleMaxSpeedAndVehicleWeightAndVehicleAxleWeightAndVehicleLengthAndVehicleWidthAndVehicleHeightAndVehicleCommercialAndVehicleLoadTypeAndConstantSpeedConsumptionInLitersPerHundredkmAndCurrentFuelInLitersAndAuxiliaryPowerInLitersPerHourAndFuelEnergyDensityInMJoulesPerLiterAndAccelerationEfficiencyAndDecelerationEfficiencyAndUphillEfficiencyAndDownhillEfficiencyAndVehicleEngineTypeAndConstantSpeedConsumptionInkWhPerHundredkmTravelMode | null | undefined, hilliness: Routing_versionNumberCalculateReachableRange_origin_contentTypeGetByFuelBudgetInLitersAndEnergyBudgetInkWhAndTimeBudgetInSecAndCallbackAndReportAndDepartAtAndArriveAtAndRouteTypeAndTrafficAndAvoidAndTravelModeAndHillinessAndWindingnessAndVehicleMaxSpeedAndVehicleWeightAndVehicleAxleWeightAndVehicleLengthAndVehicleWidthAndVehicleHeightAndVehicleCommercialAndVehicleLoadTypeAndConstantSpeedConsumptionInLitersPerHundredkmAndCurrentFuelInLitersAndAuxiliaryPowerInLitersPerHourAndFuelEnergyDensityInMJoulesPerLiterAndAccelerationEfficiencyAndDecelerationEfficiencyAndUphillEfficiencyAndDownhillEfficiencyAndVehicleEngineTypeAndConstantSpeedConsumptionInkWhPerHundredkmHilliness | null | undefined, windingness: Routing_versionNumberCalculateReachableRange_origin_contentTypeGetByFuelBudgetInLitersAndEnergyBudgetInkWhAndTimeBudgetInSecAndCallbackAndReportAndDepartAtAndArriveAtAndRouteTypeAndTrafficAndAvoidAndTravelModeAndHillinessAndWindingnessAndVehicleMaxSpeedAndVehicleWeightAndVehicleAxleWeightAndVehicleLengthAndVehicleWidthAndVehicleHeightAndVehicleCommercialAndVehicleLoadTypeAndConstantSpeedConsumptionInLitersPerHundredkmAndCurrentFuelInLitersAndAuxiliaryPowerInLitersPerHourAndFuelEnergyDensityInMJoulesPerLiterAndAccelerationEfficiencyAndDecelerationEfficiencyAndUphillEfficiencyAndDownhillEfficiencyAndVehicleEngineTypeAndConstantSpeedConsumptionInkWhPerHundredkmHilliness | null | undefined, vehicleMaxSpeed: number | null | undefined, vehicleWeight: number | null | undefined, vehicleAxleWeight: number | null | undefined, vehicleLength: number | null | undefined, vehicleWidth: number | null | undefined, vehicleHeight: number | null | undefined, vehicleCommercial: boolean | null | undefined, vehicleLoadType: string | null | undefined, constantSpeedConsumptionInLitersPerHundredkm: string | null | undefined, currentFuelInLiters: number | null | undefined, auxiliaryPowerInLitersPerHour: number | null | undefined, fuelEnergyDensityInMJoulesPerLiter: number | null | undefined, accelerationEfficiency: number | null | undefined, decelerationEfficiency: number | null | undefined, uphillEfficiency: number | null | undefined, downhillEfficiency: number | null | undefined, vehicleEngineType: Routing_versionNumberCalculateReachableRange_origin_contentTypeGetByFuelBudgetInLitersAndEnergyBudgetInkWhAndTimeBudgetInSecAndCallbackAndReportAndDepartAtAndArriveAtAndRouteTypeAndTrafficAndAvoidAndTravelModeAndHillinessAndWindingnessAndVehicleMaxSpeedAndVehicleWeightAndVehicleAxleWeightAndVehicleLengthAndVehicleWidthAndVehicleHeightAndVehicleCommercialAndVehicleLoadTypeAndConstantSpeedConsumptionInLitersPerHundredkmAndCurrentFuelInLitersAndAuxiliaryPowerInLitersPerHourAndFuelEnergyDensityInMJoulesPerLiterAndAccelerationEfficiencyAndDecelerationEfficiencyAndUphillEfficiencyAndDownhillEfficiencyAndVehicleEngineTypeAndConstantSpeedConsumptionInkWhPerHundredkmVehicleEngineType | null | undefined, constantSpeedConsumptionInkWhPerHundredkm: string | null | undefined, headersHandler?: () => HttpHeaders): Observable<HttpResponse<string>> {
			return this.http.get(this.baseUri + 'routing/' + versionNumber + '/calculateReachableRange/' + (origin == null ? '' : encodeURIComponent(origin)) + '/' + contentType + '&fuelBudgetInLiters=' + fuelBudgetInLiters + '&energyBudgetInkWh=' + energyBudgetInkWh + '&timeBudgetInSec=' + timeBudgetInSec + '&callback=' + (callback == null ? '' : encodeURIComponent(callback)) + '&report=' + report + '&departAt=' + (departAt == null ? '' : encodeURIComponent(departAt)) + '&arriveAt=' + (arriveAt == null ? '' : encodeURIComponent(arriveAt)) + '&routeType=' + routeType + '&traffic=' + traffic + '&avoid=' + (avoid == null ? '' : encodeURIComponent(avoid)) + '&travelMode=' + travelMode + '&hilliness=' + hilliness + '&windingness=' + windingness + '&vehicleMaxSpeed=' + vehicleMaxSpeed + '&vehicleWeight=' + vehicleWeight + '&vehicleAxleWeight=' + vehicleAxleWeight + '&vehicleLength=' + vehicleLength + '&vehicleWidth=' + vehicleWidth + '&vehicleHeight=' + vehicleHeight + '&vehicleCommercial=' + vehicleCommercial + '&vehicleLoadType=' + (vehicleLoadType == null ? '' : encodeURIComponent(vehicleLoadType)) + '&constantSpeedConsumptionInLitersPerHundredkm=' + (constantSpeedConsumptionInLitersPerHundredkm == null ? '' : encodeURIComponent(constantSpeedConsumptionInLitersPerHundredkm)) + '&currentFuelInLiters=' + currentFuelInLiters + '&auxiliaryPowerInLitersPerHour=' + auxiliaryPowerInLitersPerHour + '&fuelEnergyDensityInMJoulesPerLiter=' + fuelEnergyDensityInMJoulesPerLiter + '&accelerationEfficiency=' + accelerationEfficiency + '&decelerationEfficiency=' + decelerationEfficiency + '&uphillEfficiency=' + uphillEfficiency + '&downhillEfficiency=' + downhillEfficiency + '&vehicleEngineType=' + vehicleEngineType + '&constantSpeedConsumptionInkWhPerHundredkm=' + (constantSpeedConsumptionInkWhPerHundredkm == null ? '' : encodeURIComponent(constantSpeedConsumptionInkWhPerHundredkm)), { headers: headersHandler ? headersHandler() : undefined, observe: 'response', responseType: 'text' });
		}

		/**
		 * Reachable Range
		 * Calculates a set of locations that can be reached from the origin point. POST method handles additionally parameters: <em>supportingPoints</em>, <em>allowVignette</em>, <em>avoidVignette</em>, <em>avoidAreas</em>.
		 * Post routing/{versionNumber}/calculateReachableRange/{origin}/{contentType}
		 * @param {Routing_versionNumberCalculateReachableRange_origin_contentTypePostByFuelBudgetInLitersAndEnergyBudgetInkWhAndTimeBudgetInSecAndCallbackAndReportAndDepartAtAndArriveAtAndRouteTypeAndTrafficAndAvoidAndTravelModeAndHillinessAndWindingnessAndVehicleMaxSpeedAndVehicleWeightAndVehicleAxleWeightAndVehicleLengthAndVehicleWidthAndVehicleHeightAndVehicleCommercialAndVehicleLoadTypeAndConstantSpeedConsumptionInLitersPerHundredkmAndCurrentFuelInLitersAndAuxiliaryPowerInLitersPerHourAndFuelEnergyDensityInMJoulesPerLiterAndAccelerationEfficiencyAndDecelerationEfficiencyAndUphillEfficiencyAndDownhillEfficiencyAndVehicleEngineTypeAndConstantSpeedConsumptionInkWhPerHundredkmVersionNumber} versionNumber Service version number. The current value is 1.
		 * @param {string} origin Point from which the range calculation should start.
		 * @param {Routing_versionNumberCalculateReachableRange_origin_contentTypeGetByFuelBudgetInLitersAndEnergyBudgetInkWhAndTimeBudgetInSecAndCallbackAndReportAndDepartAtAndArriveAtAndRouteTypeAndTrafficAndAvoidAndTravelModeAndHillinessAndWindingnessAndVehicleMaxSpeedAndVehicleWeightAndVehicleAxleWeightAndVehicleLengthAndVehicleWidthAndVehicleHeightAndVehicleCommercialAndVehicleLoadTypeAndConstantSpeedConsumptionInLitersPerHundredkmAndCurrentFuelInLitersAndAuxiliaryPowerInLitersPerHourAndFuelEnergyDensityInMJoulesPerLiterAndAccelerationEfficiencyAndDecelerationEfficiencyAndUphillEfficiencyAndDownhillEfficiencyAndVehicleEngineTypeAndConstantSpeedConsumptionInkWhPerHundredkmContentType} contentType The content type of the response structure. If the content type is jsonp, a callback method can be specified in the query parameters.
		 * @param {number} fuelBudgetInLiters Fuel budget in liters. Determines the maximum vehicle range using the specified Combustion Consumption Model.
		 * @param {number} energyBudgetInkWh Electric energy budget in kilowatt hours (kWh). Determines the maximum vehicle range using the specified Electric Consumption Model.
		 * @param {number} timeBudgetInSec Time budget in seconds. Determines the maximum vehicle range using the specified driving time. The consumption parameters in the request will only affect eco-routes, and thereby indirectly the driving time.
		 * @param {string} callback Specifies the jsonp callback method.
		 * @param {Routing_versionNumberCalculateReachableRange_origin_contentTypeGetByFuelBudgetInLitersAndEnergyBudgetInkWhAndTimeBudgetInSecAndCallbackAndReportAndDepartAtAndArriveAtAndRouteTypeAndTrafficAndAvoidAndTravelModeAndHillinessAndWindingnessAndVehicleMaxSpeedAndVehicleWeightAndVehicleAxleWeightAndVehicleLengthAndVehicleWidthAndVehicleHeightAndVehicleCommercialAndVehicleLoadTypeAndConstantSpeedConsumptionInLitersPerHundredkmAndCurrentFuelInLitersAndAuxiliaryPowerInLitersPerHourAndFuelEnergyDensityInMJoulesPerLiterAndAccelerationEfficiencyAndDecelerationEfficiencyAndUphillEfficiencyAndDownhillEfficiencyAndVehicleEngineTypeAndConstantSpeedConsumptionInkWhPerHundredkmReport} report Specifies which data should be reported for diagnosis purposes.
		 * @param {string} departAt The date and time of departure from the origin point. Departure times apart from <i>now</i> must be specified as a dateTime.
		 * @param {string} arriveAt The date and time of arrival at the destination point. It must be specified as a dateTime.
		 * @param {Routing_versionNumberCalculateReachableRange_origin_contentTypeGetByFuelBudgetInLitersAndEnergyBudgetInkWhAndTimeBudgetInSecAndCallbackAndReportAndDepartAtAndArriveAtAndRouteTypeAndTrafficAndAvoidAndTravelModeAndHillinessAndWindingnessAndVehicleMaxSpeedAndVehicleWeightAndVehicleAxleWeightAndVehicleLengthAndVehicleWidthAndVehicleHeightAndVehicleCommercialAndVehicleLoadTypeAndConstantSpeedConsumptionInLitersPerHundredkmAndCurrentFuelInLitersAndAuxiliaryPowerInLitersPerHourAndFuelEnergyDensityInMJoulesPerLiterAndAccelerationEfficiencyAndDecelerationEfficiencyAndUphillEfficiencyAndDownhillEfficiencyAndVehicleEngineTypeAndConstantSpeedConsumptionInkWhPerHundredkmRouteType} routeType The type of route requested.
		 * @param {boolean} traffic Determines whether current traffic is used in route calculations. Note that information on historic road speeds is always used.
		 * @param {string} avoid Specifies whether the routing engine should try to avoid specific types of road segment when calculating the route. Can be specified multiple times.
		 * Possible values:
		 *   - tollRoads
		 *   - motorways
		 *   - ferries
		 *   - unpavedRoads
		 *   - carpools
		 * @param {Routing_versionNumberCalculateReachableRange_origin_contentTypeGetByFuelBudgetInLitersAndEnergyBudgetInkWhAndTimeBudgetInSecAndCallbackAndReportAndDepartAtAndArriveAtAndRouteTypeAndTrafficAndAvoidAndTravelModeAndHillinessAndWindingnessAndVehicleMaxSpeedAndVehicleWeightAndVehicleAxleWeightAndVehicleLengthAndVehicleWidthAndVehicleHeightAndVehicleCommercialAndVehicleLoadTypeAndConstantSpeedConsumptionInLitersPerHundredkmAndCurrentFuelInLitersAndAuxiliaryPowerInLitersPerHourAndFuelEnergyDensityInMJoulesPerLiterAndAccelerationEfficiencyAndDecelerationEfficiencyAndUphillEfficiencyAndDownhillEfficiencyAndVehicleEngineTypeAndConstantSpeedConsumptionInkWhPerHundredkmTravelMode} travelMode The mode of travel for the requested route.
		 * @param {Routing_versionNumberCalculateReachableRange_origin_contentTypeGetByFuelBudgetInLitersAndEnergyBudgetInkWhAndTimeBudgetInSecAndCallbackAndReportAndDepartAtAndArriveAtAndRouteTypeAndTrafficAndAvoidAndTravelModeAndHillinessAndWindingnessAndVehicleMaxSpeedAndVehicleWeightAndVehicleAxleWeightAndVehicleLengthAndVehicleWidthAndVehicleHeightAndVehicleCommercialAndVehicleLoadTypeAndConstantSpeedConsumptionInLitersPerHundredkmAndCurrentFuelInLitersAndAuxiliaryPowerInLitersPerHourAndFuelEnergyDensityInMJoulesPerLiterAndAccelerationEfficiencyAndDecelerationEfficiencyAndUphillEfficiencyAndDownhillEfficiencyAndVehicleEngineTypeAndConstantSpeedConsumptionInkWhPerHundredkmHilliness} hilliness Degree of hilliness for calculating a thrilling route.
		 * @param {Routing_versionNumberCalculateReachableRange_origin_contentTypeGetByFuelBudgetInLitersAndEnergyBudgetInkWhAndTimeBudgetInSecAndCallbackAndReportAndDepartAtAndArriveAtAndRouteTypeAndTrafficAndAvoidAndTravelModeAndHillinessAndWindingnessAndVehicleMaxSpeedAndVehicleWeightAndVehicleAxleWeightAndVehicleLengthAndVehicleWidthAndVehicleHeightAndVehicleCommercialAndVehicleLoadTypeAndConstantSpeedConsumptionInLitersPerHundredkmAndCurrentFuelInLitersAndAuxiliaryPowerInLitersPerHourAndFuelEnergyDensityInMJoulesPerLiterAndAccelerationEfficiencyAndDecelerationEfficiencyAndUphillEfficiencyAndDownhillEfficiencyAndVehicleEngineTypeAndConstantSpeedConsumptionInkWhPerHundredkmHilliness} windingness Amount that a thrilling route should wind.
		 * @param {number} vehicleMaxSpeed Maximum speed of the vehicle in km/hour.
		 * @param {number} vehicleWeight Weight of the vehicle in kilograms.
		 * @param {number} vehicleAxleWeight Weight per axle of the vehicle in kg.
		 * @param {number} vehicleLength Length of the vehicle in meters.
		 * @param {number} vehicleWidth Width of the vehicle in meters.
		 * @param {number} vehicleHeight Height of the vehicle in meters.
		 * @param {boolean} vehicleCommercial Indicates that the vehicle is used for commercial purposes. This means it may not be allowed on certain roads.
		 * @param {string} vehicleLoadType Indicates what kinds of hazardous materials the vehicle is carrying (if any). This means it may not be allowed on certain roads.
		 * Use these for routing in the US:
		 *   - <i>USHazmatClass1</i> Explosives
		 *   - <i>USHazmatClass2</i> Compressed gas
		 *   - <i>USHazmatClass3</i> Flammable liquids
		 *   - <i>USHazmatClass4</i> Flammable solids
		 *   - <i>USHazmatClass5</i> Oxidizers
		 *   - <i>USHazmatClass6</i> Poisons
		 *   - <i>USHazmatClass7</i> Radioactive
		 *   - <i>USHazmatClass8</i> Corrosives
		 *   - <i>USHazmatClass9</i> Miscellaneous
		 * Use these for routing in all other countries:
		 *   - <i>otherHazmatExplosive</i> Explosives
		 *   - <i>otherHazmatGeneral</i> Miscellaneous
		 *   - <i>otherHazmatHarmfulToWater</i> Harmful to water
		 * vehicleLoadType can be specified multiple times. This parameter is currently only considered for <b>travelMode</b>=<i>truck</i>.
		 * @param {string} constantSpeedConsumptionInLitersPerHundredkm Specifies the speed-dependent component of consumption. Provided as an unordered list of speed/consumption-rate pairs.
		 * @param {number} currentFuelInLiters Specifies the current supply of fuel in liters.
		 * @param {number} auxiliaryPowerInLitersPerHour Specifies the amount of fuel consumed for sustaining auxiliary systems of the vehicle, in liters per hour.
		 * @param {number} fuelEnergyDensityInMJoulesPerLiter Specifies the amount of chemical energy stored in one liter of fuel in megajoules (MJ).
		 * @param {number} accelerationEfficiency Specifies the efficiency of converting chemical energy stored in fuel to kinetic energy when the vehicle accelerates (i.e. KineticEnergyGained/ChemicalEnergyConsumed).
		 * @param {number} decelerationEfficiency Specifies the efficiency of converting kinetic energy to saved (not consumed) fuel when the vehicle decelerates (i.e. ChemicalEnergySaved/KineticEnergyLost).
		 * @param {number} uphillEfficiency Specifies the efficiency of converting chemical energy stored in fuel to potential energy when the vehicle gains elevation (i.e. PotentialEnergyGained/ChemicalEnergyConsumed).
		 * @param {number} downhillEfficiency Specifies the efficiency of converting potential energy to saved (not consumed) fuel when the vehicle loses elevation (i.e. ChemicalEnergySaved/PotentialEnergyLost).
		 * @param {Routing_versionNumberCalculateReachableRange_origin_contentTypeGetByFuelBudgetInLitersAndEnergyBudgetInkWhAndTimeBudgetInSecAndCallbackAndReportAndDepartAtAndArriveAtAndRouteTypeAndTrafficAndAvoidAndTravelModeAndHillinessAndWindingnessAndVehicleMaxSpeedAndVehicleWeightAndVehicleAxleWeightAndVehicleLengthAndVehicleWidthAndVehicleHeightAndVehicleCommercialAndVehicleLoadTypeAndConstantSpeedConsumptionInLitersPerHundredkmAndCurrentFuelInLitersAndAuxiliaryPowerInLitersPerHourAndFuelEnergyDensityInMJoulesPerLiterAndAccelerationEfficiencyAndDecelerationEfficiencyAndUphillEfficiencyAndDownhillEfficiencyAndVehicleEngineTypeAndConstantSpeedConsumptionInkWhPerHundredkmVehicleEngineType} vehicleEngineType Engine type of the vehicle.
		 * @param {string} constantSpeedConsumptionInkWhPerHundredkm Specifies the speed-dependent component of consumption. Provided as an unordered list of speed/consumption-rate pairs.
		 * @return {void} OK: a range was calculated and the body of the response contains the polygon description and further data.
		 */
		Routing_versionNumberCalculateReachableRange_origin_contentTypePostByFuelBudgetInLitersAndEnergyBudgetInkWhAndTimeBudgetInSecAndCallbackAndReportAndDepartAtAndArriveAtAndRouteTypeAndTrafficAndAvoidAndTravelModeAndHillinessAndWindingnessAndVehicleMaxSpeedAndVehicleWeightAndVehicleAxleWeightAndVehicleLengthAndVehicleWidthAndVehicleHeightAndVehicleCommercialAndVehicleLoadTypeAndConstantSpeedConsumptionInLitersPerHundredkmAndCurrentFuelInLitersAndAuxiliaryPowerInLitersPerHourAndFuelEnergyDensityInMJoulesPerLiterAndAccelerationEfficiencyAndDecelerationEfficiencyAndUphillEfficiencyAndDownhillEfficiencyAndVehicleEngineTypeAndConstantSpeedConsumptionInkWhPerHundredkm(versionNumber: Routing_versionNumberCalculateReachableRange_origin_contentTypePostByFuelBudgetInLitersAndEnergyBudgetInkWhAndTimeBudgetInSecAndCallbackAndReportAndDepartAtAndArriveAtAndRouteTypeAndTrafficAndAvoidAndTravelModeAndHillinessAndWindingnessAndVehicleMaxSpeedAndVehicleWeightAndVehicleAxleWeightAndVehicleLengthAndVehicleWidthAndVehicleHeightAndVehicleCommercialAndVehicleLoadTypeAndConstantSpeedConsumptionInLitersPerHundredkmAndCurrentFuelInLitersAndAuxiliaryPowerInLitersPerHourAndFuelEnergyDensityInMJoulesPerLiterAndAccelerationEfficiencyAndDecelerationEfficiencyAndUphillEfficiencyAndDownhillEfficiencyAndVehicleEngineTypeAndConstantSpeedConsumptionInkWhPerHundredkmVersionNumber, origin: string, contentType: Routing_versionNumberCalculateReachableRange_origin_contentTypeGetByFuelBudgetInLitersAndEnergyBudgetInkWhAndTimeBudgetInSecAndCallbackAndReportAndDepartAtAndArriveAtAndRouteTypeAndTrafficAndAvoidAndTravelModeAndHillinessAndWindingnessAndVehicleMaxSpeedAndVehicleWeightAndVehicleAxleWeightAndVehicleLengthAndVehicleWidthAndVehicleHeightAndVehicleCommercialAndVehicleLoadTypeAndConstantSpeedConsumptionInLitersPerHundredkmAndCurrentFuelInLitersAndAuxiliaryPowerInLitersPerHourAndFuelEnergyDensityInMJoulesPerLiterAndAccelerationEfficiencyAndDecelerationEfficiencyAndUphillEfficiencyAndDownhillEfficiencyAndVehicleEngineTypeAndConstantSpeedConsumptionInkWhPerHundredkmContentType, fuelBudgetInLiters: number | null | undefined, energyBudgetInkWh: number | null | undefined, timeBudgetInSec: number | null | undefined, callback: string | null | undefined, report: Routing_versionNumberCalculateReachableRange_origin_contentTypeGetByFuelBudgetInLitersAndEnergyBudgetInkWhAndTimeBudgetInSecAndCallbackAndReportAndDepartAtAndArriveAtAndRouteTypeAndTrafficAndAvoidAndTravelModeAndHillinessAndWindingnessAndVehicleMaxSpeedAndVehicleWeightAndVehicleAxleWeightAndVehicleLengthAndVehicleWidthAndVehicleHeightAndVehicleCommercialAndVehicleLoadTypeAndConstantSpeedConsumptionInLitersPerHundredkmAndCurrentFuelInLitersAndAuxiliaryPowerInLitersPerHourAndFuelEnergyDensityInMJoulesPerLiterAndAccelerationEfficiencyAndDecelerationEfficiencyAndUphillEfficiencyAndDownhillEfficiencyAndVehicleEngineTypeAndConstantSpeedConsumptionInkWhPerHundredkmReport | null | undefined, departAt: string | null | undefined, arriveAt: string | null | undefined, routeType: Routing_versionNumberCalculateReachableRange_origin_contentTypeGetByFuelBudgetInLitersAndEnergyBudgetInkWhAndTimeBudgetInSecAndCallbackAndReportAndDepartAtAndArriveAtAndRouteTypeAndTrafficAndAvoidAndTravelModeAndHillinessAndWindingnessAndVehicleMaxSpeedAndVehicleWeightAndVehicleAxleWeightAndVehicleLengthAndVehicleWidthAndVehicleHeightAndVehicleCommercialAndVehicleLoadTypeAndConstantSpeedConsumptionInLitersPerHundredkmAndCurrentFuelInLitersAndAuxiliaryPowerInLitersPerHourAndFuelEnergyDensityInMJoulesPerLiterAndAccelerationEfficiencyAndDecelerationEfficiencyAndUphillEfficiencyAndDownhillEfficiencyAndVehicleEngineTypeAndConstantSpeedConsumptionInkWhPerHundredkmRouteType | null | undefined, traffic: boolean | null | undefined, avoid: string | null | undefined, travelMode: Routing_versionNumberCalculateReachableRange_origin_contentTypeGetByFuelBudgetInLitersAndEnergyBudgetInkWhAndTimeBudgetInSecAndCallbackAndReportAndDepartAtAndArriveAtAndRouteTypeAndTrafficAndAvoidAndTravelModeAndHillinessAndWindingnessAndVehicleMaxSpeedAndVehicleWeightAndVehicleAxleWeightAndVehicleLengthAndVehicleWidthAndVehicleHeightAndVehicleCommercialAndVehicleLoadTypeAndConstantSpeedConsumptionInLitersPerHundredkmAndCurrentFuelInLitersAndAuxiliaryPowerInLitersPerHourAndFuelEnergyDensityInMJoulesPerLiterAndAccelerationEfficiencyAndDecelerationEfficiencyAndUphillEfficiencyAndDownhillEfficiencyAndVehicleEngineTypeAndConstantSpeedConsumptionInkWhPerHundredkmTravelMode | null | undefined, hilliness: Routing_versionNumberCalculateReachableRange_origin_contentTypeGetByFuelBudgetInLitersAndEnergyBudgetInkWhAndTimeBudgetInSecAndCallbackAndReportAndDepartAtAndArriveAtAndRouteTypeAndTrafficAndAvoidAndTravelModeAndHillinessAndWindingnessAndVehicleMaxSpeedAndVehicleWeightAndVehicleAxleWeightAndVehicleLengthAndVehicleWidthAndVehicleHeightAndVehicleCommercialAndVehicleLoadTypeAndConstantSpeedConsumptionInLitersPerHundredkmAndCurrentFuelInLitersAndAuxiliaryPowerInLitersPerHourAndFuelEnergyDensityInMJoulesPerLiterAndAccelerationEfficiencyAndDecelerationEfficiencyAndUphillEfficiencyAndDownhillEfficiencyAndVehicleEngineTypeAndConstantSpeedConsumptionInkWhPerHundredkmHilliness | null | undefined, windingness: Routing_versionNumberCalculateReachableRange_origin_contentTypeGetByFuelBudgetInLitersAndEnergyBudgetInkWhAndTimeBudgetInSecAndCallbackAndReportAndDepartAtAndArriveAtAndRouteTypeAndTrafficAndAvoidAndTravelModeAndHillinessAndWindingnessAndVehicleMaxSpeedAndVehicleWeightAndVehicleAxleWeightAndVehicleLengthAndVehicleWidthAndVehicleHeightAndVehicleCommercialAndVehicleLoadTypeAndConstantSpeedConsumptionInLitersPerHundredkmAndCurrentFuelInLitersAndAuxiliaryPowerInLitersPerHourAndFuelEnergyDensityInMJoulesPerLiterAndAccelerationEfficiencyAndDecelerationEfficiencyAndUphillEfficiencyAndDownhillEfficiencyAndVehicleEngineTypeAndConstantSpeedConsumptionInkWhPerHundredkmHilliness | null | undefined, vehicleMaxSpeed: number | null | undefined, vehicleWeight: number | null | undefined, vehicleAxleWeight: number | null | undefined, vehicleLength: number | null | undefined, vehicleWidth: number | null | undefined, vehicleHeight: number | null | undefined, vehicleCommercial: boolean | null | undefined, vehicleLoadType: string | null | undefined, constantSpeedConsumptionInLitersPerHundredkm: string | null | undefined, currentFuelInLiters: number | null | undefined, auxiliaryPowerInLitersPerHour: number | null | undefined, fuelEnergyDensityInMJoulesPerLiter: number | null | undefined, accelerationEfficiency: number | null | undefined, decelerationEfficiency: number | null | undefined, uphillEfficiency: number | null | undefined, downhillEfficiency: number | null | undefined, vehicleEngineType: Routing_versionNumberCalculateReachableRange_origin_contentTypeGetByFuelBudgetInLitersAndEnergyBudgetInkWhAndTimeBudgetInSecAndCallbackAndReportAndDepartAtAndArriveAtAndRouteTypeAndTrafficAndAvoidAndTravelModeAndHillinessAndWindingnessAndVehicleMaxSpeedAndVehicleWeightAndVehicleAxleWeightAndVehicleLengthAndVehicleWidthAndVehicleHeightAndVehicleCommercialAndVehicleLoadTypeAndConstantSpeedConsumptionInLitersPerHundredkmAndCurrentFuelInLitersAndAuxiliaryPowerInLitersPerHourAndFuelEnergyDensityInMJoulesPerLiterAndAccelerationEfficiencyAndDecelerationEfficiencyAndUphillEfficiencyAndDownhillEfficiencyAndVehicleEngineTypeAndConstantSpeedConsumptionInkWhPerHundredkmVehicleEngineType | null | undefined, constantSpeedConsumptionInkWhPerHundredkm: string | null | undefined, requestBody: CalculateReachableRangePostDataParameters, headersHandler?: () => HttpHeaders): Observable<HttpResponse<string>> {
			return this.http.post(this.baseUri + 'routing/' + versionNumber + '/calculateReachableRange/' + (origin == null ? '' : encodeURIComponent(origin)) + '/' + contentType + '&fuelBudgetInLiters=' + fuelBudgetInLiters + '&energyBudgetInkWh=' + energyBudgetInkWh + '&timeBudgetInSec=' + timeBudgetInSec + '&callback=' + (callback == null ? '' : encodeURIComponent(callback)) + '&report=' + report + '&departAt=' + (departAt == null ? '' : encodeURIComponent(departAt)) + '&arriveAt=' + (arriveAt == null ? '' : encodeURIComponent(arriveAt)) + '&routeType=' + routeType + '&traffic=' + traffic + '&avoid=' + (avoid == null ? '' : encodeURIComponent(avoid)) + '&travelMode=' + travelMode + '&hilliness=' + hilliness + '&windingness=' + windingness + '&vehicleMaxSpeed=' + vehicleMaxSpeed + '&vehicleWeight=' + vehicleWeight + '&vehicleAxleWeight=' + vehicleAxleWeight + '&vehicleLength=' + vehicleLength + '&vehicleWidth=' + vehicleWidth + '&vehicleHeight=' + vehicleHeight + '&vehicleCommercial=' + vehicleCommercial + '&vehicleLoadType=' + (vehicleLoadType == null ? '' : encodeURIComponent(vehicleLoadType)) + '&constantSpeedConsumptionInLitersPerHundredkm=' + (constantSpeedConsumptionInLitersPerHundredkm == null ? '' : encodeURIComponent(constantSpeedConsumptionInLitersPerHundredkm)) + '&currentFuelInLiters=' + currentFuelInLiters + '&auxiliaryPowerInLitersPerHour=' + auxiliaryPowerInLitersPerHour + '&fuelEnergyDensityInMJoulesPerLiter=' + fuelEnergyDensityInMJoulesPerLiter + '&accelerationEfficiency=' + accelerationEfficiency + '&decelerationEfficiency=' + decelerationEfficiency + '&uphillEfficiency=' + uphillEfficiency + '&downhillEfficiency=' + downhillEfficiency + '&vehicleEngineType=' + vehicleEngineType + '&constantSpeedConsumptionInkWhPerHundredkm=' + (constantSpeedConsumptionInkWhPerHundredkm == null ? '' : encodeURIComponent(constantSpeedConsumptionInkWhPerHundredkm)), JSON.stringify(requestBody), { headers: headersHandler ? headersHandler().append('Content-Type', 'application/json;charset=UTF-8') : new HttpHeaders({ 'Content-Type': 'application/json;charset=UTF-8' }), observe: 'response', responseType: 'text' });
		}

		/**
		 * Calculate Route
		 * Calculates a route between an origin and a destination.
		 * Get routing/{versionNumber}/calculateRoute/{locations}/{contentType}
		 * @param {Routing_versionNumberCalculateRoute_locations_contentTypeGetByMaxAlternativesAndAlternativeTypeAndMinDeviationDistanceAndMinDeviationTimeAndInstructionsTypeAndLanguageAndComputeBestOrderAndRouteRepresentationAndComputeTravelTimeForAndVehicleHeadingAndSectionTypeAndCallbackAndReportAndDepartAtAndArriveAtAndRouteTypeAndTrafficAndAvoidAndTravelModeAndHillinessAndWindingnessAndVehicleMaxSpeedAndVehicleWeightAndVehicleAxleWeightAndVehicleLengthAndVehicleWidthAndVehicleHeightAndVehicleCommercialAndVehicleLoadTypeAndVehicleEngineTypeAndConstantSpeedConsumptionInLitersPerHundredkmAndCurrentFuelInLitersAndAuxiliaryPowerInLitersPerHourAndFuelEnergyDensityInMJoulesPerLiterAndAccelerationEfficiencyAndDecelerationEfficiencyAndUphillEfficiencyAndDownhillEfficiencyAndConstantSpeedConsumptionInkWhPerHundredkmVersionNumber} versionNumber Service version number. The current value is 1.
		 * @param {string} locations Locations through which the calculated route must pass.
		 * @param {Routing_versionNumberCalculateReachableRange_origin_contentTypeGetByFuelBudgetInLitersAndEnergyBudgetInkWhAndTimeBudgetInSecAndCallbackAndReportAndDepartAtAndArriveAtAndRouteTypeAndTrafficAndAvoidAndTravelModeAndHillinessAndWindingnessAndVehicleMaxSpeedAndVehicleWeightAndVehicleAxleWeightAndVehicleLengthAndVehicleWidthAndVehicleHeightAndVehicleCommercialAndVehicleLoadTypeAndConstantSpeedConsumptionInLitersPerHundredkmAndCurrentFuelInLitersAndAuxiliaryPowerInLitersPerHourAndFuelEnergyDensityInMJoulesPerLiterAndAccelerationEfficiencyAndDecelerationEfficiencyAndUphillEfficiencyAndDownhillEfficiencyAndVehicleEngineTypeAndConstantSpeedConsumptionInkWhPerHundredkmContentType} contentType The content type of the response structure. If the content type is jsonp, a callback method can be specified in the query parameters.
		 * @param {number} maxAlternatives Number of alternative routes to be calculated.
		 * @param {Routing_versionNumberCalculateRoute_locations_contentTypeGetByMaxAlternativesAndAlternativeTypeAndMinDeviationDistanceAndMinDeviationTimeAndInstructionsTypeAndLanguageAndComputeBestOrderAndRouteRepresentationAndComputeTravelTimeForAndVehicleHeadingAndSectionTypeAndCallbackAndReportAndDepartAtAndArriveAtAndRouteTypeAndTrafficAndAvoidAndTravelModeAndHillinessAndWindingnessAndVehicleMaxSpeedAndVehicleWeightAndVehicleAxleWeightAndVehicleLengthAndVehicleWidthAndVehicleHeightAndVehicleCommercialAndVehicleLoadTypeAndVehicleEngineTypeAndConstantSpeedConsumptionInLitersPerHundredkmAndCurrentFuelInLitersAndAuxiliaryPowerInLitersPerHourAndFuelEnergyDensityInMJoulesPerLiterAndAccelerationEfficiencyAndDecelerationEfficiencyAndUphillEfficiencyAndDownhillEfficiencyAndConstantSpeedConsumptionInkWhPerHundredkmAlternativeType} alternativeType Determines whether the alternative routes to be calculated should be better with respect to the planning criteria provided than the reference route.
		 * @param {number} minDeviationDistance All alternative routes will follow the reference route for the specified minimum number of meters starting from the origin point.
		 * @param {number} minDeviationTime All alternative routes will follow the reference route for the specified minimum number of seconds starting from the origin point.
		 * @param {Routing_versionNumberCalculateRoute_locations_contentTypeGetByMaxAlternativesAndAlternativeTypeAndMinDeviationDistanceAndMinDeviationTimeAndInstructionsTypeAndLanguageAndComputeBestOrderAndRouteRepresentationAndComputeTravelTimeForAndVehicleHeadingAndSectionTypeAndCallbackAndReportAndDepartAtAndArriveAtAndRouteTypeAndTrafficAndAvoidAndTravelModeAndHillinessAndWindingnessAndVehicleMaxSpeedAndVehicleWeightAndVehicleAxleWeightAndVehicleLengthAndVehicleWidthAndVehicleHeightAndVehicleCommercialAndVehicleLoadTypeAndVehicleEngineTypeAndConstantSpeedConsumptionInLitersPerHundredkmAndCurrentFuelInLitersAndAuxiliaryPowerInLitersPerHourAndFuelEnergyDensityInMJoulesPerLiterAndAccelerationEfficiencyAndDecelerationEfficiencyAndUphillEfficiencyAndDownhillEfficiencyAndConstantSpeedConsumptionInkWhPerHundredkmInstructionsType} instructionsType If specified, guidance instructions will be returned (if available).
		 * @param {string} language The language parameter determines the language of the guidance messages.
		 * @param {boolean} computeBestOrder Re-order the route waypoints to reduce the route length.
		 * @param {Routing_versionNumberCalculateRoute_locations_contentTypeGetByMaxAlternativesAndAlternativeTypeAndMinDeviationDistanceAndMinDeviationTimeAndInstructionsTypeAndLanguageAndComputeBestOrderAndRouteRepresentationAndComputeTravelTimeForAndVehicleHeadingAndSectionTypeAndCallbackAndReportAndDepartAtAndArriveAtAndRouteTypeAndTrafficAndAvoidAndTravelModeAndHillinessAndWindingnessAndVehicleMaxSpeedAndVehicleWeightAndVehicleAxleWeightAndVehicleLengthAndVehicleWidthAndVehicleHeightAndVehicleCommercialAndVehicleLoadTypeAndVehicleEngineTypeAndConstantSpeedConsumptionInLitersPerHundredkmAndCurrentFuelInLitersAndAuxiliaryPowerInLitersPerHourAndFuelEnergyDensityInMJoulesPerLiterAndAccelerationEfficiencyAndDecelerationEfficiencyAndUphillEfficiencyAndDownhillEfficiencyAndConstantSpeedConsumptionInkWhPerHundredkmRouteRepresentation} routeRepresentation Specifies the representation of the set of routes provided as a response.
		 * @param {Routing_versionNumberCalculateRoute_locations_contentTypeGetByMaxAlternativesAndAlternativeTypeAndMinDeviationDistanceAndMinDeviationTimeAndInstructionsTypeAndLanguageAndComputeBestOrderAndRouteRepresentationAndComputeTravelTimeForAndVehicleHeadingAndSectionTypeAndCallbackAndReportAndDepartAtAndArriveAtAndRouteTypeAndTrafficAndAvoidAndTravelModeAndHillinessAndWindingnessAndVehicleMaxSpeedAndVehicleWeightAndVehicleAxleWeightAndVehicleLengthAndVehicleWidthAndVehicleHeightAndVehicleCommercialAndVehicleLoadTypeAndVehicleEngineTypeAndConstantSpeedConsumptionInLitersPerHundredkmAndCurrentFuelInLitersAndAuxiliaryPowerInLitersPerHourAndFuelEnergyDensityInMJoulesPerLiterAndAccelerationEfficiencyAndDecelerationEfficiencyAndUphillEfficiencyAndDownhillEfficiencyAndConstantSpeedConsumptionInkWhPerHundredkmComputeTravelTimeFor} computeTravelTimeFor Specifies whether to return additional travel times using different types of traffic information (none, historic, live) as well as the default best-estimate travel time.
		 * @param {number} vehicleHeading The directional heading of the vehicle in degrees. Entered in degrees, measured clockwise from north (so north is 0, east is 90, etc.).
		 * @param {string} sectionType Specifies which section types are explicitly reported in the route response. Can be specified multiple times.
		 *   - carTrain, ferry, tunnel or motorway
		 *   - pedestrian
		 *   - tollRoad
		 *   - tollVignette
		 *   - country
		 *   - travelMode
		 *   - traffic
		 * @param {string} callback Specifies the jsonp callback method.
		 * @param {Routing_versionNumberCalculateReachableRange_origin_contentTypeGetByFuelBudgetInLitersAndEnergyBudgetInkWhAndTimeBudgetInSecAndCallbackAndReportAndDepartAtAndArriveAtAndRouteTypeAndTrafficAndAvoidAndTravelModeAndHillinessAndWindingnessAndVehicleMaxSpeedAndVehicleWeightAndVehicleAxleWeightAndVehicleLengthAndVehicleWidthAndVehicleHeightAndVehicleCommercialAndVehicleLoadTypeAndConstantSpeedConsumptionInLitersPerHundredkmAndCurrentFuelInLitersAndAuxiliaryPowerInLitersPerHourAndFuelEnergyDensityInMJoulesPerLiterAndAccelerationEfficiencyAndDecelerationEfficiencyAndUphillEfficiencyAndDownhillEfficiencyAndVehicleEngineTypeAndConstantSpeedConsumptionInkWhPerHundredkmReport} report Specifies which data should be reported for diagnosis purposes.
		 * @param {string} departAt The date and time of departure from the origin point. Departure times apart from <i>now</i> must be specified as a dateTime.
		 * @param {string} arriveAt The date and time of arrival at the destination point. It must be specified as a dateTime.
		 * @param {Routing_versionNumberCalculateReachableRange_origin_contentTypeGetByFuelBudgetInLitersAndEnergyBudgetInkWhAndTimeBudgetInSecAndCallbackAndReportAndDepartAtAndArriveAtAndRouteTypeAndTrafficAndAvoidAndTravelModeAndHillinessAndWindingnessAndVehicleMaxSpeedAndVehicleWeightAndVehicleAxleWeightAndVehicleLengthAndVehicleWidthAndVehicleHeightAndVehicleCommercialAndVehicleLoadTypeAndConstantSpeedConsumptionInLitersPerHundredkmAndCurrentFuelInLitersAndAuxiliaryPowerInLitersPerHourAndFuelEnergyDensityInMJoulesPerLiterAndAccelerationEfficiencyAndDecelerationEfficiencyAndUphillEfficiencyAndDownhillEfficiencyAndVehicleEngineTypeAndConstantSpeedConsumptionInkWhPerHundredkmRouteType} routeType The type of route requested.
		 * @param {boolean} traffic Determines whether current traffic is used in route calculations. Note that information on historic road speeds is always used.
		 * @param {string} avoid Specifies whether the routing engine should try to avoid specific types of road segment when calculating the route. Can be specified multiple times.
		 * Possible values:
		 *   - tollRoads
		 *   - motorways
		 *   - ferries
		 *   - unpavedRoads
		 *   - carpools
		 *   - alreadyUsedRoads
		 * @param {Routing_versionNumberCalculateReachableRange_origin_contentTypeGetByFuelBudgetInLitersAndEnergyBudgetInkWhAndTimeBudgetInSecAndCallbackAndReportAndDepartAtAndArriveAtAndRouteTypeAndTrafficAndAvoidAndTravelModeAndHillinessAndWindingnessAndVehicleMaxSpeedAndVehicleWeightAndVehicleAxleWeightAndVehicleLengthAndVehicleWidthAndVehicleHeightAndVehicleCommercialAndVehicleLoadTypeAndConstantSpeedConsumptionInLitersPerHundredkmAndCurrentFuelInLitersAndAuxiliaryPowerInLitersPerHourAndFuelEnergyDensityInMJoulesPerLiterAndAccelerationEfficiencyAndDecelerationEfficiencyAndUphillEfficiencyAndDownhillEfficiencyAndVehicleEngineTypeAndConstantSpeedConsumptionInkWhPerHundredkmTravelMode} travelMode The mode of travel for the requested route.
		 * @param {Routing_versionNumberCalculateReachableRange_origin_contentTypeGetByFuelBudgetInLitersAndEnergyBudgetInkWhAndTimeBudgetInSecAndCallbackAndReportAndDepartAtAndArriveAtAndRouteTypeAndTrafficAndAvoidAndTravelModeAndHillinessAndWindingnessAndVehicleMaxSpeedAndVehicleWeightAndVehicleAxleWeightAndVehicleLengthAndVehicleWidthAndVehicleHeightAndVehicleCommercialAndVehicleLoadTypeAndConstantSpeedConsumptionInLitersPerHundredkmAndCurrentFuelInLitersAndAuxiliaryPowerInLitersPerHourAndFuelEnergyDensityInMJoulesPerLiterAndAccelerationEfficiencyAndDecelerationEfficiencyAndUphillEfficiencyAndDownhillEfficiencyAndVehicleEngineTypeAndConstantSpeedConsumptionInkWhPerHundredkmHilliness} hilliness Degree of hilliness for calculating a thrilling route.
		 * @param {Routing_versionNumberCalculateReachableRange_origin_contentTypeGetByFuelBudgetInLitersAndEnergyBudgetInkWhAndTimeBudgetInSecAndCallbackAndReportAndDepartAtAndArriveAtAndRouteTypeAndTrafficAndAvoidAndTravelModeAndHillinessAndWindingnessAndVehicleMaxSpeedAndVehicleWeightAndVehicleAxleWeightAndVehicleLengthAndVehicleWidthAndVehicleHeightAndVehicleCommercialAndVehicleLoadTypeAndConstantSpeedConsumptionInLitersPerHundredkmAndCurrentFuelInLitersAndAuxiliaryPowerInLitersPerHourAndFuelEnergyDensityInMJoulesPerLiterAndAccelerationEfficiencyAndDecelerationEfficiencyAndUphillEfficiencyAndDownhillEfficiencyAndVehicleEngineTypeAndConstantSpeedConsumptionInkWhPerHundredkmHilliness} windingness Amount that a thrilling route should wind.
		 * @param {number} vehicleMaxSpeed Maximum speed of the vehicle in km/hour.
		 * @param {number} vehicleWeight Weight of the vehicle in kilograms.
		 * @param {number} vehicleAxleWeight Weight per axle of the vehicle in kg.
		 * @param {number} vehicleLength Length of the vehicle in meters.
		 * @param {number} vehicleWidth Width of the vehicle in meters.
		 * @param {number} vehicleHeight Height of the vehicle in meters.
		 * @param {boolean} vehicleCommercial Indicates that the vehicle is used for commercial purposes. This means it may not be allowed on certain roads.
		 * @param {string} vehicleLoadType Indicates what kinds of hazardous materials the vehicle is carrying (if any). This means it may not be allowed on certain roads.
		 * Use these for routing in the US:
		 *   - <i>USHazmatClass1</i> Explosives
		 *   - <i>USHazmatClass2</i> Compressed gas
		 *   - <i>USHazmatClass3</i> Flammable liquids
		 *   - <i>USHazmatClass4</i> Flammable solids
		 *   - <i>USHazmatClass5</i> Oxidizers
		 *   - <i>USHazmatClass6</i> Poisons
		 *   - <i>USHazmatClass7</i> Radioactive
		 *   - <i>USHazmatClass8</i> Corrosives
		 *   - <i>USHazmatClass9</i> Miscellaneous
		 * Use these for routing in all other countries:
		 *   - <i>otherHazmatExplosive</i> Explosives
		 *   - <i>otherHazmatGeneral</i> Miscellaneous
		 *   - <i>otherHazmatHarmfulToWater</i> Harmful to water
		 * vehicleLoadType can be specified multiple times. This parameter is currently only considered for <b>travelMode</b>=<i>truck</i>.
		 * @param {Routing_versionNumberCalculateReachableRange_origin_contentTypeGetByFuelBudgetInLitersAndEnergyBudgetInkWhAndTimeBudgetInSecAndCallbackAndReportAndDepartAtAndArriveAtAndRouteTypeAndTrafficAndAvoidAndTravelModeAndHillinessAndWindingnessAndVehicleMaxSpeedAndVehicleWeightAndVehicleAxleWeightAndVehicleLengthAndVehicleWidthAndVehicleHeightAndVehicleCommercialAndVehicleLoadTypeAndConstantSpeedConsumptionInLitersPerHundredkmAndCurrentFuelInLitersAndAuxiliaryPowerInLitersPerHourAndFuelEnergyDensityInMJoulesPerLiterAndAccelerationEfficiencyAndDecelerationEfficiencyAndUphillEfficiencyAndDownhillEfficiencyAndVehicleEngineTypeAndConstantSpeedConsumptionInkWhPerHundredkmVehicleEngineType} vehicleEngineType Engine type of the vehicle.
		 * @param {string} constantSpeedConsumptionInLitersPerHundredkm Specifies the speed-dependent component of consumption. Provided as an unordered list of speed/consumption-rate pairs.
		 * @param {number} currentFuelInLiters Specifies the current supply of fuel in liters.
		 * @param {number} auxiliaryPowerInLitersPerHour Specifies the amount of fuel consumed for sustaining auxiliary systems of the vehicle, in liters per hour.
		 * @param {number} fuelEnergyDensityInMJoulesPerLiter Specifies the amount of chemical energy stored in one liter of fuel in megajoules (MJ).
		 * @param {number} accelerationEfficiency Specifies the efficiency of converting chemical energy stored in fuel to kinetic energy when the vehicle accelerates (i.e. KineticEnergyGained/ChemicalEnergyConsumed).
		 * @param {number} decelerationEfficiency Specifies the efficiency of converting kinetic energy to saved (not consumed) fuel when the vehicle decelerates (i.e. ChemicalEnergySaved/KineticEnergyLost).
		 * @param {number} uphillEfficiency Specifies the efficiency of converting chemical energy stored in fuel to potential energy when the vehicle gains elevation (i.e. PotentialEnergyGained/ChemicalEnergyConsumed).
		 * @param {number} downhillEfficiency Specifies the efficiency of converting potential energy to saved (not consumed) fuel when the vehicle loses elevation (i.e. ChemicalEnergySaved/PotentialEnergyLost).
		 * @param {string} constantSpeedConsumptionInkWhPerHundredkm Specifies the speed-dependent component of consumption. Provided as an unordered list of speed/consumption-rate pairs.
		 * @return {void} OK: a route was calculated and the body of the response contains the route description and any other requested data.
		 */
		Routing_versionNumberCalculateRoute_locations_contentTypeGetByMaxAlternativesAndAlternativeTypeAndMinDeviationDistanceAndMinDeviationTimeAndInstructionsTypeAndLanguageAndComputeBestOrderAndRouteRepresentationAndComputeTravelTimeForAndVehicleHeadingAndSectionTypeAndCallbackAndReportAndDepartAtAndArriveAtAndRouteTypeAndTrafficAndAvoidAndTravelModeAndHillinessAndWindingnessAndVehicleMaxSpeedAndVehicleWeightAndVehicleAxleWeightAndVehicleLengthAndVehicleWidthAndVehicleHeightAndVehicleCommercialAndVehicleLoadTypeAndVehicleEngineTypeAndConstantSpeedConsumptionInLitersPerHundredkmAndCurrentFuelInLitersAndAuxiliaryPowerInLitersPerHourAndFuelEnergyDensityInMJoulesPerLiterAndAccelerationEfficiencyAndDecelerationEfficiencyAndUphillEfficiencyAndDownhillEfficiencyAndConstantSpeedConsumptionInkWhPerHundredkm(versionNumber: Routing_versionNumberCalculateRoute_locations_contentTypeGetByMaxAlternativesAndAlternativeTypeAndMinDeviationDistanceAndMinDeviationTimeAndInstructionsTypeAndLanguageAndComputeBestOrderAndRouteRepresentationAndComputeTravelTimeForAndVehicleHeadingAndSectionTypeAndCallbackAndReportAndDepartAtAndArriveAtAndRouteTypeAndTrafficAndAvoidAndTravelModeAndHillinessAndWindingnessAndVehicleMaxSpeedAndVehicleWeightAndVehicleAxleWeightAndVehicleLengthAndVehicleWidthAndVehicleHeightAndVehicleCommercialAndVehicleLoadTypeAndVehicleEngineTypeAndConstantSpeedConsumptionInLitersPerHundredkmAndCurrentFuelInLitersAndAuxiliaryPowerInLitersPerHourAndFuelEnergyDensityInMJoulesPerLiterAndAccelerationEfficiencyAndDecelerationEfficiencyAndUphillEfficiencyAndDownhillEfficiencyAndConstantSpeedConsumptionInkWhPerHundredkmVersionNumber, locations: string, contentType: Routing_versionNumberCalculateReachableRange_origin_contentTypeGetByFuelBudgetInLitersAndEnergyBudgetInkWhAndTimeBudgetInSecAndCallbackAndReportAndDepartAtAndArriveAtAndRouteTypeAndTrafficAndAvoidAndTravelModeAndHillinessAndWindingnessAndVehicleMaxSpeedAndVehicleWeightAndVehicleAxleWeightAndVehicleLengthAndVehicleWidthAndVehicleHeightAndVehicleCommercialAndVehicleLoadTypeAndConstantSpeedConsumptionInLitersPerHundredkmAndCurrentFuelInLitersAndAuxiliaryPowerInLitersPerHourAndFuelEnergyDensityInMJoulesPerLiterAndAccelerationEfficiencyAndDecelerationEfficiencyAndUphillEfficiencyAndDownhillEfficiencyAndVehicleEngineTypeAndConstantSpeedConsumptionInkWhPerHundredkmContentType, maxAlternatives: number | null | undefined, alternativeType: Routing_versionNumberCalculateRoute_locations_contentTypeGetByMaxAlternativesAndAlternativeTypeAndMinDeviationDistanceAndMinDeviationTimeAndInstructionsTypeAndLanguageAndComputeBestOrderAndRouteRepresentationAndComputeTravelTimeForAndVehicleHeadingAndSectionTypeAndCallbackAndReportAndDepartAtAndArriveAtAndRouteTypeAndTrafficAndAvoidAndTravelModeAndHillinessAndWindingnessAndVehicleMaxSpeedAndVehicleWeightAndVehicleAxleWeightAndVehicleLengthAndVehicleWidthAndVehicleHeightAndVehicleCommercialAndVehicleLoadTypeAndVehicleEngineTypeAndConstantSpeedConsumptionInLitersPerHundredkmAndCurrentFuelInLitersAndAuxiliaryPowerInLitersPerHourAndFuelEnergyDensityInMJoulesPerLiterAndAccelerationEfficiencyAndDecelerationEfficiencyAndUphillEfficiencyAndDownhillEfficiencyAndConstantSpeedConsumptionInkWhPerHundredkmAlternativeType | null | undefined, minDeviationDistance: number | null | undefined, minDeviationTime: number | null | undefined, instructionsType: Routing_versionNumberCalculateRoute_locations_contentTypeGetByMaxAlternativesAndAlternativeTypeAndMinDeviationDistanceAndMinDeviationTimeAndInstructionsTypeAndLanguageAndComputeBestOrderAndRouteRepresentationAndComputeTravelTimeForAndVehicleHeadingAndSectionTypeAndCallbackAndReportAndDepartAtAndArriveAtAndRouteTypeAndTrafficAndAvoidAndTravelModeAndHillinessAndWindingnessAndVehicleMaxSpeedAndVehicleWeightAndVehicleAxleWeightAndVehicleLengthAndVehicleWidthAndVehicleHeightAndVehicleCommercialAndVehicleLoadTypeAndVehicleEngineTypeAndConstantSpeedConsumptionInLitersPerHundredkmAndCurrentFuelInLitersAndAuxiliaryPowerInLitersPerHourAndFuelEnergyDensityInMJoulesPerLiterAndAccelerationEfficiencyAndDecelerationEfficiencyAndUphillEfficiencyAndDownhillEfficiencyAndConstantSpeedConsumptionInkWhPerHundredkmInstructionsType | null | undefined, language: string | null | undefined, computeBestOrder: boolean | null | undefined, routeRepresentation: Routing_versionNumberCalculateRoute_locations_contentTypeGetByMaxAlternativesAndAlternativeTypeAndMinDeviationDistanceAndMinDeviationTimeAndInstructionsTypeAndLanguageAndComputeBestOrderAndRouteRepresentationAndComputeTravelTimeForAndVehicleHeadingAndSectionTypeAndCallbackAndReportAndDepartAtAndArriveAtAndRouteTypeAndTrafficAndAvoidAndTravelModeAndHillinessAndWindingnessAndVehicleMaxSpeedAndVehicleWeightAndVehicleAxleWeightAndVehicleLengthAndVehicleWidthAndVehicleHeightAndVehicleCommercialAndVehicleLoadTypeAndVehicleEngineTypeAndConstantSpeedConsumptionInLitersPerHundredkmAndCurrentFuelInLitersAndAuxiliaryPowerInLitersPerHourAndFuelEnergyDensityInMJoulesPerLiterAndAccelerationEfficiencyAndDecelerationEfficiencyAndUphillEfficiencyAndDownhillEfficiencyAndConstantSpeedConsumptionInkWhPerHundredkmRouteRepresentation | null | undefined, computeTravelTimeFor: Routing_versionNumberCalculateRoute_locations_contentTypeGetByMaxAlternativesAndAlternativeTypeAndMinDeviationDistanceAndMinDeviationTimeAndInstructionsTypeAndLanguageAndComputeBestOrderAndRouteRepresentationAndComputeTravelTimeForAndVehicleHeadingAndSectionTypeAndCallbackAndReportAndDepartAtAndArriveAtAndRouteTypeAndTrafficAndAvoidAndTravelModeAndHillinessAndWindingnessAndVehicleMaxSpeedAndVehicleWeightAndVehicleAxleWeightAndVehicleLengthAndVehicleWidthAndVehicleHeightAndVehicleCommercialAndVehicleLoadTypeAndVehicleEngineTypeAndConstantSpeedConsumptionInLitersPerHundredkmAndCurrentFuelInLitersAndAuxiliaryPowerInLitersPerHourAndFuelEnergyDensityInMJoulesPerLiterAndAccelerationEfficiencyAndDecelerationEfficiencyAndUphillEfficiencyAndDownhillEfficiencyAndConstantSpeedConsumptionInkWhPerHundredkmComputeTravelTimeFor | null | undefined, vehicleHeading: number | null | undefined, sectionType: string | null | undefined, callback: string | null | undefined, report: Routing_versionNumberCalculateReachableRange_origin_contentTypeGetByFuelBudgetInLitersAndEnergyBudgetInkWhAndTimeBudgetInSecAndCallbackAndReportAndDepartAtAndArriveAtAndRouteTypeAndTrafficAndAvoidAndTravelModeAndHillinessAndWindingnessAndVehicleMaxSpeedAndVehicleWeightAndVehicleAxleWeightAndVehicleLengthAndVehicleWidthAndVehicleHeightAndVehicleCommercialAndVehicleLoadTypeAndConstantSpeedConsumptionInLitersPerHundredkmAndCurrentFuelInLitersAndAuxiliaryPowerInLitersPerHourAndFuelEnergyDensityInMJoulesPerLiterAndAccelerationEfficiencyAndDecelerationEfficiencyAndUphillEfficiencyAndDownhillEfficiencyAndVehicleEngineTypeAndConstantSpeedConsumptionInkWhPerHundredkmReport | null | undefined, departAt: string | null | undefined, arriveAt: string | null | undefined, routeType: Routing_versionNumberCalculateReachableRange_origin_contentTypeGetByFuelBudgetInLitersAndEnergyBudgetInkWhAndTimeBudgetInSecAndCallbackAndReportAndDepartAtAndArriveAtAndRouteTypeAndTrafficAndAvoidAndTravelModeAndHillinessAndWindingnessAndVehicleMaxSpeedAndVehicleWeightAndVehicleAxleWeightAndVehicleLengthAndVehicleWidthAndVehicleHeightAndVehicleCommercialAndVehicleLoadTypeAndConstantSpeedConsumptionInLitersPerHundredkmAndCurrentFuelInLitersAndAuxiliaryPowerInLitersPerHourAndFuelEnergyDensityInMJoulesPerLiterAndAccelerationEfficiencyAndDecelerationEfficiencyAndUphillEfficiencyAndDownhillEfficiencyAndVehicleEngineTypeAndConstantSpeedConsumptionInkWhPerHundredkmRouteType | null | undefined, traffic: boolean | null | undefined, avoid: string | null | undefined, travelMode: Routing_versionNumberCalculateReachableRange_origin_contentTypeGetByFuelBudgetInLitersAndEnergyBudgetInkWhAndTimeBudgetInSecAndCallbackAndReportAndDepartAtAndArriveAtAndRouteTypeAndTrafficAndAvoidAndTravelModeAndHillinessAndWindingnessAndVehicleMaxSpeedAndVehicleWeightAndVehicleAxleWeightAndVehicleLengthAndVehicleWidthAndVehicleHeightAndVehicleCommercialAndVehicleLoadTypeAndConstantSpeedConsumptionInLitersPerHundredkmAndCurrentFuelInLitersAndAuxiliaryPowerInLitersPerHourAndFuelEnergyDensityInMJoulesPerLiterAndAccelerationEfficiencyAndDecelerationEfficiencyAndUphillEfficiencyAndDownhillEfficiencyAndVehicleEngineTypeAndConstantSpeedConsumptionInkWhPerHundredkmTravelMode | null | undefined, hilliness: Routing_versionNumberCalculateReachableRange_origin_contentTypeGetByFuelBudgetInLitersAndEnergyBudgetInkWhAndTimeBudgetInSecAndCallbackAndReportAndDepartAtAndArriveAtAndRouteTypeAndTrafficAndAvoidAndTravelModeAndHillinessAndWindingnessAndVehicleMaxSpeedAndVehicleWeightAndVehicleAxleWeightAndVehicleLengthAndVehicleWidthAndVehicleHeightAndVehicleCommercialAndVehicleLoadTypeAndConstantSpeedConsumptionInLitersPerHundredkmAndCurrentFuelInLitersAndAuxiliaryPowerInLitersPerHourAndFuelEnergyDensityInMJoulesPerLiterAndAccelerationEfficiencyAndDecelerationEfficiencyAndUphillEfficiencyAndDownhillEfficiencyAndVehicleEngineTypeAndConstantSpeedConsumptionInkWhPerHundredkmHilliness | null | undefined, windingness: Routing_versionNumberCalculateReachableRange_origin_contentTypeGetByFuelBudgetInLitersAndEnergyBudgetInkWhAndTimeBudgetInSecAndCallbackAndReportAndDepartAtAndArriveAtAndRouteTypeAndTrafficAndAvoidAndTravelModeAndHillinessAndWindingnessAndVehicleMaxSpeedAndVehicleWeightAndVehicleAxleWeightAndVehicleLengthAndVehicleWidthAndVehicleHeightAndVehicleCommercialAndVehicleLoadTypeAndConstantSpeedConsumptionInLitersPerHundredkmAndCurrentFuelInLitersAndAuxiliaryPowerInLitersPerHourAndFuelEnergyDensityInMJoulesPerLiterAndAccelerationEfficiencyAndDecelerationEfficiencyAndUphillEfficiencyAndDownhillEfficiencyAndVehicleEngineTypeAndConstantSpeedConsumptionInkWhPerHundredkmHilliness | null | undefined, vehicleMaxSpeed: number | null | undefined, vehicleWeight: number | null | undefined, vehicleAxleWeight: number | null | undefined, vehicleLength: number | null | undefined, vehicleWidth: number | null | undefined, vehicleHeight: number | null | undefined, vehicleCommercial: boolean | null | undefined, vehicleLoadType: string | null | undefined, vehicleEngineType: Routing_versionNumberCalculateReachableRange_origin_contentTypeGetByFuelBudgetInLitersAndEnergyBudgetInkWhAndTimeBudgetInSecAndCallbackAndReportAndDepartAtAndArriveAtAndRouteTypeAndTrafficAndAvoidAndTravelModeAndHillinessAndWindingnessAndVehicleMaxSpeedAndVehicleWeightAndVehicleAxleWeightAndVehicleLengthAndVehicleWidthAndVehicleHeightAndVehicleCommercialAndVehicleLoadTypeAndConstantSpeedConsumptionInLitersPerHundredkmAndCurrentFuelInLitersAndAuxiliaryPowerInLitersPerHourAndFuelEnergyDensityInMJoulesPerLiterAndAccelerationEfficiencyAndDecelerationEfficiencyAndUphillEfficiencyAndDownhillEfficiencyAndVehicleEngineTypeAndConstantSpeedConsumptionInkWhPerHundredkmVehicleEngineType | null | undefined, constantSpeedConsumptionInLitersPerHundredkm: string | null | undefined, currentFuelInLiters: number | null | undefined, auxiliaryPowerInLitersPerHour: number | null | undefined, fuelEnergyDensityInMJoulesPerLiter: number | null | undefined, accelerationEfficiency: number | null | undefined, decelerationEfficiency: number | null | undefined, uphillEfficiency: number | null | undefined, downhillEfficiency: number | null | undefined, constantSpeedConsumptionInkWhPerHundredkm: string | null | undefined, headersHandler?: () => HttpHeaders): Observable<HttpResponse<string>> {
			return this.http.get(this.baseUri + 'routing/' + versionNumber + '/calculateRoute/' + (locations == null ? '' : encodeURIComponent(locations)) + '/' + contentType + '&maxAlternatives=' + maxAlternatives + '&alternativeType=' + alternativeType + '&minDeviationDistance=' + minDeviationDistance + '&minDeviationTime=' + minDeviationTime + '&instructionsType=' + instructionsType + '&language=' + (language == null ? '' : encodeURIComponent(language)) + '&computeBestOrder=' + computeBestOrder + '&routeRepresentation=' + routeRepresentation + '&computeTravelTimeFor=' + computeTravelTimeFor + '&vehicleHeading=' + vehicleHeading + '&sectionType=' + (sectionType == null ? '' : encodeURIComponent(sectionType)) + '&callback=' + (callback == null ? '' : encodeURIComponent(callback)) + '&report=' + report + '&departAt=' + (departAt == null ? '' : encodeURIComponent(departAt)) + '&arriveAt=' + (arriveAt == null ? '' : encodeURIComponent(arriveAt)) + '&routeType=' + routeType + '&traffic=' + traffic + '&avoid=' + (avoid == null ? '' : encodeURIComponent(avoid)) + '&travelMode=' + travelMode + '&hilliness=' + hilliness + '&windingness=' + windingness + '&vehicleMaxSpeed=' + vehicleMaxSpeed + '&vehicleWeight=' + vehicleWeight + '&vehicleAxleWeight=' + vehicleAxleWeight + '&vehicleLength=' + vehicleLength + '&vehicleWidth=' + vehicleWidth + '&vehicleHeight=' + vehicleHeight + '&vehicleCommercial=' + vehicleCommercial + '&vehicleLoadType=' + (vehicleLoadType == null ? '' : encodeURIComponent(vehicleLoadType)) + '&vehicleEngineType=' + vehicleEngineType + '&constantSpeedConsumptionInLitersPerHundredkm=' + (constantSpeedConsumptionInLitersPerHundredkm == null ? '' : encodeURIComponent(constantSpeedConsumptionInLitersPerHundredkm)) + '&currentFuelInLiters=' + currentFuelInLiters + '&auxiliaryPowerInLitersPerHour=' + auxiliaryPowerInLitersPerHour + '&fuelEnergyDensityInMJoulesPerLiter=' + fuelEnergyDensityInMJoulesPerLiter + '&accelerationEfficiency=' + accelerationEfficiency + '&decelerationEfficiency=' + decelerationEfficiency + '&uphillEfficiency=' + uphillEfficiency + '&downhillEfficiency=' + downhillEfficiency + '&constantSpeedConsumptionInkWhPerHundredkm=' + (constantSpeedConsumptionInkWhPerHundredkm == null ? '' : encodeURIComponent(constantSpeedConsumptionInkWhPerHundredkm)), { headers: headersHandler ? headersHandler() : undefined, observe: 'response', responseType: 'text' });
		}

		/**
		 * Calculate Route
		 * Calculates a route between an origin and a destination. POST method handles additionally parameters: <em>supportingPoints</em>, <em>allowVignette</em>, <em>avoidVignette</em>, <em>avoidAreas</em>.
		 * Post routing/{versionNumber}/calculateRoute/{locations}/{contentType}
		 * @param {Routing_versionNumberCalculateRoute_locations_contentTypePostByMaxAlternativesAndAlternativeTypeAndMinDeviationDistanceAndMinDeviationTimeAndInstructionsTypeAndLanguageAndComputeBestOrderAndRouteRepresentationAndComputeTravelTimeForAndVehicleHeadingAndSectionTypeAndCallbackAndReportAndDepartAtAndArriveAtAndRouteTypeAndTrafficAndAvoidAndTravelModeAndHillinessAndWindingnessAndVehicleMaxSpeedAndVehicleWeightAndVehicleAxleWeightAndVehicleLengthAndVehicleWidthAndVehicleHeightAndVehicleCommercialAndVehicleLoadTypeAndVehicleEngineTypeAndConstantSpeedConsumptionInLitersPerHundredkmAndCurrentFuelInLitersAndAuxiliaryPowerInLitersPerHourAndFuelEnergyDensityInMJoulesPerLiterAndAccelerationEfficiencyAndDecelerationEfficiencyAndUphillEfficiencyAndDownhillEfficiencyAndConstantSpeedConsumptionInkWhPerHundredkmVersionNumber} versionNumber Service version number. The current value is 1.
		 * @param {string} locations Locations through which the calculated route must pass.
		 * @param {Routing_versionNumberCalculateReachableRange_origin_contentTypeGetByFuelBudgetInLitersAndEnergyBudgetInkWhAndTimeBudgetInSecAndCallbackAndReportAndDepartAtAndArriveAtAndRouteTypeAndTrafficAndAvoidAndTravelModeAndHillinessAndWindingnessAndVehicleMaxSpeedAndVehicleWeightAndVehicleAxleWeightAndVehicleLengthAndVehicleWidthAndVehicleHeightAndVehicleCommercialAndVehicleLoadTypeAndConstantSpeedConsumptionInLitersPerHundredkmAndCurrentFuelInLitersAndAuxiliaryPowerInLitersPerHourAndFuelEnergyDensityInMJoulesPerLiterAndAccelerationEfficiencyAndDecelerationEfficiencyAndUphillEfficiencyAndDownhillEfficiencyAndVehicleEngineTypeAndConstantSpeedConsumptionInkWhPerHundredkmContentType} contentType The content type of the response structure. If the content type is jsonp, a callback method can be specified in the query parameters.
		 * @param {number} maxAlternatives Number of alternative routes to be calculated.
		 * @param {Routing_versionNumberCalculateRoute_locations_contentTypeGetByMaxAlternativesAndAlternativeTypeAndMinDeviationDistanceAndMinDeviationTimeAndInstructionsTypeAndLanguageAndComputeBestOrderAndRouteRepresentationAndComputeTravelTimeForAndVehicleHeadingAndSectionTypeAndCallbackAndReportAndDepartAtAndArriveAtAndRouteTypeAndTrafficAndAvoidAndTravelModeAndHillinessAndWindingnessAndVehicleMaxSpeedAndVehicleWeightAndVehicleAxleWeightAndVehicleLengthAndVehicleWidthAndVehicleHeightAndVehicleCommercialAndVehicleLoadTypeAndVehicleEngineTypeAndConstantSpeedConsumptionInLitersPerHundredkmAndCurrentFuelInLitersAndAuxiliaryPowerInLitersPerHourAndFuelEnergyDensityInMJoulesPerLiterAndAccelerationEfficiencyAndDecelerationEfficiencyAndUphillEfficiencyAndDownhillEfficiencyAndConstantSpeedConsumptionInkWhPerHundredkmAlternativeType} alternativeType Determines whether the alternative routes to be calculated should be better with respect to the planning criteria provided than the reference route.
		 * @param {number} minDeviationDistance All alternative routes will follow the reference route for the specified minimum number of meters starting from the origin point.
		 * @param {number} minDeviationTime All alternative routes will follow the reference route for the specified minimum number of seconds starting from the origin point.
		 * @param {Routing_versionNumberCalculateRoute_locations_contentTypeGetByMaxAlternativesAndAlternativeTypeAndMinDeviationDistanceAndMinDeviationTimeAndInstructionsTypeAndLanguageAndComputeBestOrderAndRouteRepresentationAndComputeTravelTimeForAndVehicleHeadingAndSectionTypeAndCallbackAndReportAndDepartAtAndArriveAtAndRouteTypeAndTrafficAndAvoidAndTravelModeAndHillinessAndWindingnessAndVehicleMaxSpeedAndVehicleWeightAndVehicleAxleWeightAndVehicleLengthAndVehicleWidthAndVehicleHeightAndVehicleCommercialAndVehicleLoadTypeAndVehicleEngineTypeAndConstantSpeedConsumptionInLitersPerHundredkmAndCurrentFuelInLitersAndAuxiliaryPowerInLitersPerHourAndFuelEnergyDensityInMJoulesPerLiterAndAccelerationEfficiencyAndDecelerationEfficiencyAndUphillEfficiencyAndDownhillEfficiencyAndConstantSpeedConsumptionInkWhPerHundredkmInstructionsType} instructionsType If specified, guidance instructions will be returned (if available).
		 * @param {string} language The language parameter determines the language of the guidance messages.
		 * @param {boolean} computeBestOrder Re-order the route waypoints to reduce the route length.
		 * @param {Routing_versionNumberCalculateRoute_locations_contentTypeGetByMaxAlternativesAndAlternativeTypeAndMinDeviationDistanceAndMinDeviationTimeAndInstructionsTypeAndLanguageAndComputeBestOrderAndRouteRepresentationAndComputeTravelTimeForAndVehicleHeadingAndSectionTypeAndCallbackAndReportAndDepartAtAndArriveAtAndRouteTypeAndTrafficAndAvoidAndTravelModeAndHillinessAndWindingnessAndVehicleMaxSpeedAndVehicleWeightAndVehicleAxleWeightAndVehicleLengthAndVehicleWidthAndVehicleHeightAndVehicleCommercialAndVehicleLoadTypeAndVehicleEngineTypeAndConstantSpeedConsumptionInLitersPerHundredkmAndCurrentFuelInLitersAndAuxiliaryPowerInLitersPerHourAndFuelEnergyDensityInMJoulesPerLiterAndAccelerationEfficiencyAndDecelerationEfficiencyAndUphillEfficiencyAndDownhillEfficiencyAndConstantSpeedConsumptionInkWhPerHundredkmRouteRepresentation} routeRepresentation Specifies the representation of the set of routes provided as a response.
		 * @param {Routing_versionNumberCalculateRoute_locations_contentTypeGetByMaxAlternativesAndAlternativeTypeAndMinDeviationDistanceAndMinDeviationTimeAndInstructionsTypeAndLanguageAndComputeBestOrderAndRouteRepresentationAndComputeTravelTimeForAndVehicleHeadingAndSectionTypeAndCallbackAndReportAndDepartAtAndArriveAtAndRouteTypeAndTrafficAndAvoidAndTravelModeAndHillinessAndWindingnessAndVehicleMaxSpeedAndVehicleWeightAndVehicleAxleWeightAndVehicleLengthAndVehicleWidthAndVehicleHeightAndVehicleCommercialAndVehicleLoadTypeAndVehicleEngineTypeAndConstantSpeedConsumptionInLitersPerHundredkmAndCurrentFuelInLitersAndAuxiliaryPowerInLitersPerHourAndFuelEnergyDensityInMJoulesPerLiterAndAccelerationEfficiencyAndDecelerationEfficiencyAndUphillEfficiencyAndDownhillEfficiencyAndConstantSpeedConsumptionInkWhPerHundredkmComputeTravelTimeFor} computeTravelTimeFor Specifies whether to return additional travel times using different types of traffic information (none, historic, live) as well as the default best-estimate travel time.
		 * @param {number} vehicleHeading The directional heading of the vehicle in degrees. Entered in degrees, measured clockwise from north (so north is 0, east is 90, etc.).
		 * @param {string} sectionType Specifies which section types are explicitly reported in the route response. Can be specified multiple times.
		 *   - carTrain, ferry, tunnel or motorway
		 *   - pedestrian
		 *   - tollRoad
		 *   - tollVignette
		 *   - country
		 *   - travelMode
		 *   - traffic
		 * @param {string} callback Specifies the jsonp callback method.
		 * @param {Routing_versionNumberCalculateReachableRange_origin_contentTypeGetByFuelBudgetInLitersAndEnergyBudgetInkWhAndTimeBudgetInSecAndCallbackAndReportAndDepartAtAndArriveAtAndRouteTypeAndTrafficAndAvoidAndTravelModeAndHillinessAndWindingnessAndVehicleMaxSpeedAndVehicleWeightAndVehicleAxleWeightAndVehicleLengthAndVehicleWidthAndVehicleHeightAndVehicleCommercialAndVehicleLoadTypeAndConstantSpeedConsumptionInLitersPerHundredkmAndCurrentFuelInLitersAndAuxiliaryPowerInLitersPerHourAndFuelEnergyDensityInMJoulesPerLiterAndAccelerationEfficiencyAndDecelerationEfficiencyAndUphillEfficiencyAndDownhillEfficiencyAndVehicleEngineTypeAndConstantSpeedConsumptionInkWhPerHundredkmReport} report Specifies which data should be reported for diagnosis purposes.
		 * @param {string} departAt The date and time of departure from the origin point. Departure times apart from <i>now</i> must be specified as a dateTime.
		 * @param {string} arriveAt The date and time of arrival at the destination point. It must be specified as a dateTime.
		 * @param {Routing_versionNumberCalculateReachableRange_origin_contentTypeGetByFuelBudgetInLitersAndEnergyBudgetInkWhAndTimeBudgetInSecAndCallbackAndReportAndDepartAtAndArriveAtAndRouteTypeAndTrafficAndAvoidAndTravelModeAndHillinessAndWindingnessAndVehicleMaxSpeedAndVehicleWeightAndVehicleAxleWeightAndVehicleLengthAndVehicleWidthAndVehicleHeightAndVehicleCommercialAndVehicleLoadTypeAndConstantSpeedConsumptionInLitersPerHundredkmAndCurrentFuelInLitersAndAuxiliaryPowerInLitersPerHourAndFuelEnergyDensityInMJoulesPerLiterAndAccelerationEfficiencyAndDecelerationEfficiencyAndUphillEfficiencyAndDownhillEfficiencyAndVehicleEngineTypeAndConstantSpeedConsumptionInkWhPerHundredkmRouteType} routeType The type of route requested.
		 * @param {boolean} traffic Determines whether current traffic is used in route calculations. Note that information on historic road speeds is always used.
		 * @param {string} avoid Specifies whether the routing engine should try to avoid specific types of road segment when calculating the route. Can be specified multiple times.
		 * Possible values:
		 *   - tollRoads
		 *   - motorways
		 *   - ferries
		 *   - unpavedRoads
		 *   - carpools
		 *   - alreadyUsedRoads
		 * @param {Routing_versionNumberCalculateReachableRange_origin_contentTypeGetByFuelBudgetInLitersAndEnergyBudgetInkWhAndTimeBudgetInSecAndCallbackAndReportAndDepartAtAndArriveAtAndRouteTypeAndTrafficAndAvoidAndTravelModeAndHillinessAndWindingnessAndVehicleMaxSpeedAndVehicleWeightAndVehicleAxleWeightAndVehicleLengthAndVehicleWidthAndVehicleHeightAndVehicleCommercialAndVehicleLoadTypeAndConstantSpeedConsumptionInLitersPerHundredkmAndCurrentFuelInLitersAndAuxiliaryPowerInLitersPerHourAndFuelEnergyDensityInMJoulesPerLiterAndAccelerationEfficiencyAndDecelerationEfficiencyAndUphillEfficiencyAndDownhillEfficiencyAndVehicleEngineTypeAndConstantSpeedConsumptionInkWhPerHundredkmTravelMode} travelMode The mode of travel for the requested route.
		 * @param {Routing_versionNumberCalculateReachableRange_origin_contentTypeGetByFuelBudgetInLitersAndEnergyBudgetInkWhAndTimeBudgetInSecAndCallbackAndReportAndDepartAtAndArriveAtAndRouteTypeAndTrafficAndAvoidAndTravelModeAndHillinessAndWindingnessAndVehicleMaxSpeedAndVehicleWeightAndVehicleAxleWeightAndVehicleLengthAndVehicleWidthAndVehicleHeightAndVehicleCommercialAndVehicleLoadTypeAndConstantSpeedConsumptionInLitersPerHundredkmAndCurrentFuelInLitersAndAuxiliaryPowerInLitersPerHourAndFuelEnergyDensityInMJoulesPerLiterAndAccelerationEfficiencyAndDecelerationEfficiencyAndUphillEfficiencyAndDownhillEfficiencyAndVehicleEngineTypeAndConstantSpeedConsumptionInkWhPerHundredkmHilliness} hilliness Degree of hilliness for calculating a thrilling route.
		 * @param {Routing_versionNumberCalculateReachableRange_origin_contentTypeGetByFuelBudgetInLitersAndEnergyBudgetInkWhAndTimeBudgetInSecAndCallbackAndReportAndDepartAtAndArriveAtAndRouteTypeAndTrafficAndAvoidAndTravelModeAndHillinessAndWindingnessAndVehicleMaxSpeedAndVehicleWeightAndVehicleAxleWeightAndVehicleLengthAndVehicleWidthAndVehicleHeightAndVehicleCommercialAndVehicleLoadTypeAndConstantSpeedConsumptionInLitersPerHundredkmAndCurrentFuelInLitersAndAuxiliaryPowerInLitersPerHourAndFuelEnergyDensityInMJoulesPerLiterAndAccelerationEfficiencyAndDecelerationEfficiencyAndUphillEfficiencyAndDownhillEfficiencyAndVehicleEngineTypeAndConstantSpeedConsumptionInkWhPerHundredkmHilliness} windingness Amount that a thrilling route should wind.
		 * @param {number} vehicleMaxSpeed Maximum speed of the vehicle in km/hour.
		 * @param {number} vehicleWeight Weight of the vehicle in kilograms.
		 * @param {number} vehicleAxleWeight Weight per axle of the vehicle in kg.
		 * @param {number} vehicleLength Length of the vehicle in meters.
		 * @param {number} vehicleWidth Width of the vehicle in meters.
		 * @param {number} vehicleHeight Height of the vehicle in meters.
		 * @param {boolean} vehicleCommercial Indicates that the vehicle is used for commercial purposes. This means it may not be allowed on certain roads.
		 * @param {string} vehicleLoadType Indicates what kinds of hazardous materials the vehicle is carrying (if any). This means it may not be allowed on certain roads.
		 * Use these for routing in the US:
		 *   - <i>USHazmatClass1</i> Explosives
		 *   - <i>USHazmatClass2</i> Compressed gas
		 *   - <i>USHazmatClass3</i> Flammable liquids
		 *   - <i>USHazmatClass4</i> Flammable solids
		 *   - <i>USHazmatClass5</i> Oxidizers
		 *   - <i>USHazmatClass6</i> Poisons
		 *   - <i>USHazmatClass7</i> Radioactive
		 *   - <i>USHazmatClass8</i> Corrosives
		 *   - <i>USHazmatClass9</i> Miscellaneous
		 * Use these for routing in all other countries:
		 *   - <i>otherHazmatExplosive</i> Explosives
		 *   - <i>otherHazmatGeneral</i> Miscellaneous
		 *   - <i>otherHazmatHarmfulToWater</i> Harmful to water
		 * vehicleLoadType can be specified multiple times. This parameter is currently only considered for <b>travelMode</b>=<i>truck</i>.
		 * @param {Routing_versionNumberCalculateReachableRange_origin_contentTypeGetByFuelBudgetInLitersAndEnergyBudgetInkWhAndTimeBudgetInSecAndCallbackAndReportAndDepartAtAndArriveAtAndRouteTypeAndTrafficAndAvoidAndTravelModeAndHillinessAndWindingnessAndVehicleMaxSpeedAndVehicleWeightAndVehicleAxleWeightAndVehicleLengthAndVehicleWidthAndVehicleHeightAndVehicleCommercialAndVehicleLoadTypeAndConstantSpeedConsumptionInLitersPerHundredkmAndCurrentFuelInLitersAndAuxiliaryPowerInLitersPerHourAndFuelEnergyDensityInMJoulesPerLiterAndAccelerationEfficiencyAndDecelerationEfficiencyAndUphillEfficiencyAndDownhillEfficiencyAndVehicleEngineTypeAndConstantSpeedConsumptionInkWhPerHundredkmVehicleEngineType} vehicleEngineType Engine type of the vehicle.
		 * @param {string} constantSpeedConsumptionInLitersPerHundredkm Specifies the speed-dependent component of consumption. Provided as an unordered list of speed/consumption-rate pairs.
		 * @param {number} currentFuelInLiters Specifies the current supply of fuel in liters.
		 * @param {number} auxiliaryPowerInLitersPerHour Specifies the amount of fuel consumed for sustaining auxiliary systems of the vehicle, in liters per hour.
		 * @param {number} fuelEnergyDensityInMJoulesPerLiter Specifies the amount of chemical energy stored in one liter of fuel in megajoules (MJ).
		 * @param {number} accelerationEfficiency Specifies the efficiency of converting chemical energy stored in fuel to kinetic energy when the vehicle accelerates (i.e. KineticEnergyGained/ChemicalEnergyConsumed).
		 * @param {number} decelerationEfficiency Specifies the efficiency of converting kinetic energy to saved (not consumed) fuel when the vehicle decelerates (i.e. ChemicalEnergySaved/KineticEnergyLost).
		 * @param {number} uphillEfficiency Specifies the efficiency of converting chemical energy stored in fuel to potential energy when the vehicle gains elevation (i.e. PotentialEnergyGained/ChemicalEnergyConsumed).
		 * @param {number} downhillEfficiency Specifies the efficiency of converting potential energy to saved (not consumed) fuel when the vehicle loses elevation (i.e. ChemicalEnergySaved/PotentialEnergyLost).
		 * @param {string} constantSpeedConsumptionInkWhPerHundredkm Specifies the speed-dependent component of consumption. Provided as an unordered list of speed/consumption-rate pairs.
		 * @return {void} OK: a route was calculated and the body of the response contains the route description and any other requested data.
		 */
		Routing_versionNumberCalculateRoute_locations_contentTypePostByMaxAlternativesAndAlternativeTypeAndMinDeviationDistanceAndMinDeviationTimeAndInstructionsTypeAndLanguageAndComputeBestOrderAndRouteRepresentationAndComputeTravelTimeForAndVehicleHeadingAndSectionTypeAndCallbackAndReportAndDepartAtAndArriveAtAndRouteTypeAndTrafficAndAvoidAndTravelModeAndHillinessAndWindingnessAndVehicleMaxSpeedAndVehicleWeightAndVehicleAxleWeightAndVehicleLengthAndVehicleWidthAndVehicleHeightAndVehicleCommercialAndVehicleLoadTypeAndVehicleEngineTypeAndConstantSpeedConsumptionInLitersPerHundredkmAndCurrentFuelInLitersAndAuxiliaryPowerInLitersPerHourAndFuelEnergyDensityInMJoulesPerLiterAndAccelerationEfficiencyAndDecelerationEfficiencyAndUphillEfficiencyAndDownhillEfficiencyAndConstantSpeedConsumptionInkWhPerHundredkm(versionNumber: Routing_versionNumberCalculateRoute_locations_contentTypePostByMaxAlternativesAndAlternativeTypeAndMinDeviationDistanceAndMinDeviationTimeAndInstructionsTypeAndLanguageAndComputeBestOrderAndRouteRepresentationAndComputeTravelTimeForAndVehicleHeadingAndSectionTypeAndCallbackAndReportAndDepartAtAndArriveAtAndRouteTypeAndTrafficAndAvoidAndTravelModeAndHillinessAndWindingnessAndVehicleMaxSpeedAndVehicleWeightAndVehicleAxleWeightAndVehicleLengthAndVehicleWidthAndVehicleHeightAndVehicleCommercialAndVehicleLoadTypeAndVehicleEngineTypeAndConstantSpeedConsumptionInLitersPerHundredkmAndCurrentFuelInLitersAndAuxiliaryPowerInLitersPerHourAndFuelEnergyDensityInMJoulesPerLiterAndAccelerationEfficiencyAndDecelerationEfficiencyAndUphillEfficiencyAndDownhillEfficiencyAndConstantSpeedConsumptionInkWhPerHundredkmVersionNumber, locations: string, contentType: Routing_versionNumberCalculateReachableRange_origin_contentTypeGetByFuelBudgetInLitersAndEnergyBudgetInkWhAndTimeBudgetInSecAndCallbackAndReportAndDepartAtAndArriveAtAndRouteTypeAndTrafficAndAvoidAndTravelModeAndHillinessAndWindingnessAndVehicleMaxSpeedAndVehicleWeightAndVehicleAxleWeightAndVehicleLengthAndVehicleWidthAndVehicleHeightAndVehicleCommercialAndVehicleLoadTypeAndConstantSpeedConsumptionInLitersPerHundredkmAndCurrentFuelInLitersAndAuxiliaryPowerInLitersPerHourAndFuelEnergyDensityInMJoulesPerLiterAndAccelerationEfficiencyAndDecelerationEfficiencyAndUphillEfficiencyAndDownhillEfficiencyAndVehicleEngineTypeAndConstantSpeedConsumptionInkWhPerHundredkmContentType, maxAlternatives: number | null | undefined, alternativeType: Routing_versionNumberCalculateRoute_locations_contentTypeGetByMaxAlternativesAndAlternativeTypeAndMinDeviationDistanceAndMinDeviationTimeAndInstructionsTypeAndLanguageAndComputeBestOrderAndRouteRepresentationAndComputeTravelTimeForAndVehicleHeadingAndSectionTypeAndCallbackAndReportAndDepartAtAndArriveAtAndRouteTypeAndTrafficAndAvoidAndTravelModeAndHillinessAndWindingnessAndVehicleMaxSpeedAndVehicleWeightAndVehicleAxleWeightAndVehicleLengthAndVehicleWidthAndVehicleHeightAndVehicleCommercialAndVehicleLoadTypeAndVehicleEngineTypeAndConstantSpeedConsumptionInLitersPerHundredkmAndCurrentFuelInLitersAndAuxiliaryPowerInLitersPerHourAndFuelEnergyDensityInMJoulesPerLiterAndAccelerationEfficiencyAndDecelerationEfficiencyAndUphillEfficiencyAndDownhillEfficiencyAndConstantSpeedConsumptionInkWhPerHundredkmAlternativeType | null | undefined, minDeviationDistance: number | null | undefined, minDeviationTime: number | null | undefined, instructionsType: Routing_versionNumberCalculateRoute_locations_contentTypeGetByMaxAlternativesAndAlternativeTypeAndMinDeviationDistanceAndMinDeviationTimeAndInstructionsTypeAndLanguageAndComputeBestOrderAndRouteRepresentationAndComputeTravelTimeForAndVehicleHeadingAndSectionTypeAndCallbackAndReportAndDepartAtAndArriveAtAndRouteTypeAndTrafficAndAvoidAndTravelModeAndHillinessAndWindingnessAndVehicleMaxSpeedAndVehicleWeightAndVehicleAxleWeightAndVehicleLengthAndVehicleWidthAndVehicleHeightAndVehicleCommercialAndVehicleLoadTypeAndVehicleEngineTypeAndConstantSpeedConsumptionInLitersPerHundredkmAndCurrentFuelInLitersAndAuxiliaryPowerInLitersPerHourAndFuelEnergyDensityInMJoulesPerLiterAndAccelerationEfficiencyAndDecelerationEfficiencyAndUphillEfficiencyAndDownhillEfficiencyAndConstantSpeedConsumptionInkWhPerHundredkmInstructionsType | null | undefined, language: string | null | undefined, computeBestOrder: boolean | null | undefined, routeRepresentation: Routing_versionNumberCalculateRoute_locations_contentTypeGetByMaxAlternativesAndAlternativeTypeAndMinDeviationDistanceAndMinDeviationTimeAndInstructionsTypeAndLanguageAndComputeBestOrderAndRouteRepresentationAndComputeTravelTimeForAndVehicleHeadingAndSectionTypeAndCallbackAndReportAndDepartAtAndArriveAtAndRouteTypeAndTrafficAndAvoidAndTravelModeAndHillinessAndWindingnessAndVehicleMaxSpeedAndVehicleWeightAndVehicleAxleWeightAndVehicleLengthAndVehicleWidthAndVehicleHeightAndVehicleCommercialAndVehicleLoadTypeAndVehicleEngineTypeAndConstantSpeedConsumptionInLitersPerHundredkmAndCurrentFuelInLitersAndAuxiliaryPowerInLitersPerHourAndFuelEnergyDensityInMJoulesPerLiterAndAccelerationEfficiencyAndDecelerationEfficiencyAndUphillEfficiencyAndDownhillEfficiencyAndConstantSpeedConsumptionInkWhPerHundredkmRouteRepresentation | null | undefined, computeTravelTimeFor: Routing_versionNumberCalculateRoute_locations_contentTypeGetByMaxAlternativesAndAlternativeTypeAndMinDeviationDistanceAndMinDeviationTimeAndInstructionsTypeAndLanguageAndComputeBestOrderAndRouteRepresentationAndComputeTravelTimeForAndVehicleHeadingAndSectionTypeAndCallbackAndReportAndDepartAtAndArriveAtAndRouteTypeAndTrafficAndAvoidAndTravelModeAndHillinessAndWindingnessAndVehicleMaxSpeedAndVehicleWeightAndVehicleAxleWeightAndVehicleLengthAndVehicleWidthAndVehicleHeightAndVehicleCommercialAndVehicleLoadTypeAndVehicleEngineTypeAndConstantSpeedConsumptionInLitersPerHundredkmAndCurrentFuelInLitersAndAuxiliaryPowerInLitersPerHourAndFuelEnergyDensityInMJoulesPerLiterAndAccelerationEfficiencyAndDecelerationEfficiencyAndUphillEfficiencyAndDownhillEfficiencyAndConstantSpeedConsumptionInkWhPerHundredkmComputeTravelTimeFor | null | undefined, vehicleHeading: number | null | undefined, sectionType: string | null | undefined, callback: string | null | undefined, report: Routing_versionNumberCalculateReachableRange_origin_contentTypeGetByFuelBudgetInLitersAndEnergyBudgetInkWhAndTimeBudgetInSecAndCallbackAndReportAndDepartAtAndArriveAtAndRouteTypeAndTrafficAndAvoidAndTravelModeAndHillinessAndWindingnessAndVehicleMaxSpeedAndVehicleWeightAndVehicleAxleWeightAndVehicleLengthAndVehicleWidthAndVehicleHeightAndVehicleCommercialAndVehicleLoadTypeAndConstantSpeedConsumptionInLitersPerHundredkmAndCurrentFuelInLitersAndAuxiliaryPowerInLitersPerHourAndFuelEnergyDensityInMJoulesPerLiterAndAccelerationEfficiencyAndDecelerationEfficiencyAndUphillEfficiencyAndDownhillEfficiencyAndVehicleEngineTypeAndConstantSpeedConsumptionInkWhPerHundredkmReport | null | undefined, departAt: string | null | undefined, arriveAt: string | null | undefined, routeType: Routing_versionNumberCalculateReachableRange_origin_contentTypeGetByFuelBudgetInLitersAndEnergyBudgetInkWhAndTimeBudgetInSecAndCallbackAndReportAndDepartAtAndArriveAtAndRouteTypeAndTrafficAndAvoidAndTravelModeAndHillinessAndWindingnessAndVehicleMaxSpeedAndVehicleWeightAndVehicleAxleWeightAndVehicleLengthAndVehicleWidthAndVehicleHeightAndVehicleCommercialAndVehicleLoadTypeAndConstantSpeedConsumptionInLitersPerHundredkmAndCurrentFuelInLitersAndAuxiliaryPowerInLitersPerHourAndFuelEnergyDensityInMJoulesPerLiterAndAccelerationEfficiencyAndDecelerationEfficiencyAndUphillEfficiencyAndDownhillEfficiencyAndVehicleEngineTypeAndConstantSpeedConsumptionInkWhPerHundredkmRouteType | null | undefined, traffic: boolean | null | undefined, avoid: string | null | undefined, travelMode: Routing_versionNumberCalculateReachableRange_origin_contentTypeGetByFuelBudgetInLitersAndEnergyBudgetInkWhAndTimeBudgetInSecAndCallbackAndReportAndDepartAtAndArriveAtAndRouteTypeAndTrafficAndAvoidAndTravelModeAndHillinessAndWindingnessAndVehicleMaxSpeedAndVehicleWeightAndVehicleAxleWeightAndVehicleLengthAndVehicleWidthAndVehicleHeightAndVehicleCommercialAndVehicleLoadTypeAndConstantSpeedConsumptionInLitersPerHundredkmAndCurrentFuelInLitersAndAuxiliaryPowerInLitersPerHourAndFuelEnergyDensityInMJoulesPerLiterAndAccelerationEfficiencyAndDecelerationEfficiencyAndUphillEfficiencyAndDownhillEfficiencyAndVehicleEngineTypeAndConstantSpeedConsumptionInkWhPerHundredkmTravelMode | null | undefined, hilliness: Routing_versionNumberCalculateReachableRange_origin_contentTypeGetByFuelBudgetInLitersAndEnergyBudgetInkWhAndTimeBudgetInSecAndCallbackAndReportAndDepartAtAndArriveAtAndRouteTypeAndTrafficAndAvoidAndTravelModeAndHillinessAndWindingnessAndVehicleMaxSpeedAndVehicleWeightAndVehicleAxleWeightAndVehicleLengthAndVehicleWidthAndVehicleHeightAndVehicleCommercialAndVehicleLoadTypeAndConstantSpeedConsumptionInLitersPerHundredkmAndCurrentFuelInLitersAndAuxiliaryPowerInLitersPerHourAndFuelEnergyDensityInMJoulesPerLiterAndAccelerationEfficiencyAndDecelerationEfficiencyAndUphillEfficiencyAndDownhillEfficiencyAndVehicleEngineTypeAndConstantSpeedConsumptionInkWhPerHundredkmHilliness | null | undefined, windingness: Routing_versionNumberCalculateReachableRange_origin_contentTypeGetByFuelBudgetInLitersAndEnergyBudgetInkWhAndTimeBudgetInSecAndCallbackAndReportAndDepartAtAndArriveAtAndRouteTypeAndTrafficAndAvoidAndTravelModeAndHillinessAndWindingnessAndVehicleMaxSpeedAndVehicleWeightAndVehicleAxleWeightAndVehicleLengthAndVehicleWidthAndVehicleHeightAndVehicleCommercialAndVehicleLoadTypeAndConstantSpeedConsumptionInLitersPerHundredkmAndCurrentFuelInLitersAndAuxiliaryPowerInLitersPerHourAndFuelEnergyDensityInMJoulesPerLiterAndAccelerationEfficiencyAndDecelerationEfficiencyAndUphillEfficiencyAndDownhillEfficiencyAndVehicleEngineTypeAndConstantSpeedConsumptionInkWhPerHundredkmHilliness | null | undefined, vehicleMaxSpeed: number | null | undefined, vehicleWeight: number | null | undefined, vehicleAxleWeight: number | null | undefined, vehicleLength: number | null | undefined, vehicleWidth: number | null | undefined, vehicleHeight: number | null | undefined, vehicleCommercial: boolean | null | undefined, vehicleLoadType: string | null | undefined, vehicleEngineType: Routing_versionNumberCalculateReachableRange_origin_contentTypeGetByFuelBudgetInLitersAndEnergyBudgetInkWhAndTimeBudgetInSecAndCallbackAndReportAndDepartAtAndArriveAtAndRouteTypeAndTrafficAndAvoidAndTravelModeAndHillinessAndWindingnessAndVehicleMaxSpeedAndVehicleWeightAndVehicleAxleWeightAndVehicleLengthAndVehicleWidthAndVehicleHeightAndVehicleCommercialAndVehicleLoadTypeAndConstantSpeedConsumptionInLitersPerHundredkmAndCurrentFuelInLitersAndAuxiliaryPowerInLitersPerHourAndFuelEnergyDensityInMJoulesPerLiterAndAccelerationEfficiencyAndDecelerationEfficiencyAndUphillEfficiencyAndDownhillEfficiencyAndVehicleEngineTypeAndConstantSpeedConsumptionInkWhPerHundredkmVehicleEngineType | null | undefined, constantSpeedConsumptionInLitersPerHundredkm: string | null | undefined, currentFuelInLiters: number | null | undefined, auxiliaryPowerInLitersPerHour: number | null | undefined, fuelEnergyDensityInMJoulesPerLiter: number | null | undefined, accelerationEfficiency: number | null | undefined, decelerationEfficiency: number | null | undefined, uphillEfficiency: number | null | undefined, downhillEfficiency: number | null | undefined, constantSpeedConsumptionInkWhPerHundredkm: string | null | undefined, requestBody: CalculateRoutePostDataParameters, headersHandler?: () => HttpHeaders): Observable<HttpResponse<string>> {
			return this.http.post(this.baseUri + 'routing/' + versionNumber + '/calculateRoute/' + (locations == null ? '' : encodeURIComponent(locations)) + '/' + contentType + '&maxAlternatives=' + maxAlternatives + '&alternativeType=' + alternativeType + '&minDeviationDistance=' + minDeviationDistance + '&minDeviationTime=' + minDeviationTime + '&instructionsType=' + instructionsType + '&language=' + (language == null ? '' : encodeURIComponent(language)) + '&computeBestOrder=' + computeBestOrder + '&routeRepresentation=' + routeRepresentation + '&computeTravelTimeFor=' + computeTravelTimeFor + '&vehicleHeading=' + vehicleHeading + '&sectionType=' + (sectionType == null ? '' : encodeURIComponent(sectionType)) + '&callback=' + (callback == null ? '' : encodeURIComponent(callback)) + '&report=' + report + '&departAt=' + (departAt == null ? '' : encodeURIComponent(departAt)) + '&arriveAt=' + (arriveAt == null ? '' : encodeURIComponent(arriveAt)) + '&routeType=' + routeType + '&traffic=' + traffic + '&avoid=' + (avoid == null ? '' : encodeURIComponent(avoid)) + '&travelMode=' + travelMode + '&hilliness=' + hilliness + '&windingness=' + windingness + '&vehicleMaxSpeed=' + vehicleMaxSpeed + '&vehicleWeight=' + vehicleWeight + '&vehicleAxleWeight=' + vehicleAxleWeight + '&vehicleLength=' + vehicleLength + '&vehicleWidth=' + vehicleWidth + '&vehicleHeight=' + vehicleHeight + '&vehicleCommercial=' + vehicleCommercial + '&vehicleLoadType=' + (vehicleLoadType == null ? '' : encodeURIComponent(vehicleLoadType)) + '&vehicleEngineType=' + vehicleEngineType + '&constantSpeedConsumptionInLitersPerHundredkm=' + (constantSpeedConsumptionInLitersPerHundredkm == null ? '' : encodeURIComponent(constantSpeedConsumptionInLitersPerHundredkm)) + '&currentFuelInLiters=' + currentFuelInLiters + '&auxiliaryPowerInLitersPerHour=' + auxiliaryPowerInLitersPerHour + '&fuelEnergyDensityInMJoulesPerLiter=' + fuelEnergyDensityInMJoulesPerLiter + '&accelerationEfficiency=' + accelerationEfficiency + '&decelerationEfficiency=' + decelerationEfficiency + '&uphillEfficiency=' + uphillEfficiency + '&downhillEfficiency=' + downhillEfficiency + '&constantSpeedConsumptionInkWhPerHundredkm=' + (constantSpeedConsumptionInkWhPerHundredkm == null ? '' : encodeURIComponent(constantSpeedConsumptionInkWhPerHundredkm)), JSON.stringify(requestBody), { headers: headersHandler ? headersHandler().append('Content-Type', 'application/json;charset=UTF-8') : new HttpHeaders({ 'Content-Type': 'application/json;charset=UTF-8' }), observe: 'response', responseType: 'text' });
		}
	}

	export enum Routing_versionNumberCalculateReachableRange_origin_contentTypeGetByFuelBudgetInLitersAndEnergyBudgetInkWhAndTimeBudgetInSecAndCallbackAndReportAndDepartAtAndArriveAtAndRouteTypeAndTrafficAndAvoidAndTravelModeAndHillinessAndWindingnessAndVehicleMaxSpeedAndVehicleWeightAndVehicleAxleWeightAndVehicleLengthAndVehicleWidthAndVehicleHeightAndVehicleCommercialAndVehicleLoadTypeAndConstantSpeedConsumptionInLitersPerHundredkmAndCurrentFuelInLitersAndAuxiliaryPowerInLitersPerHourAndFuelEnergyDensityInMJoulesPerLiterAndAccelerationEfficiencyAndDecelerationEfficiencyAndUphillEfficiencyAndDownhillEfficiencyAndVehicleEngineTypeAndConstantSpeedConsumptionInkWhPerHundredkmVersionNumber { _1 = 0 }

	export enum Routing_versionNumberCalculateReachableRange_origin_contentTypeGetByFuelBudgetInLitersAndEnergyBudgetInkWhAndTimeBudgetInSecAndCallbackAndReportAndDepartAtAndArriveAtAndRouteTypeAndTrafficAndAvoidAndTravelModeAndHillinessAndWindingnessAndVehicleMaxSpeedAndVehicleWeightAndVehicleAxleWeightAndVehicleLengthAndVehicleWidthAndVehicleHeightAndVehicleCommercialAndVehicleLoadTypeAndConstantSpeedConsumptionInLitersPerHundredkmAndCurrentFuelInLitersAndAuxiliaryPowerInLitersPerHourAndFuelEnergyDensityInMJoulesPerLiterAndAccelerationEfficiencyAndDecelerationEfficiencyAndUphillEfficiencyAndDownhillEfficiencyAndVehicleEngineTypeAndConstantSpeedConsumptionInkWhPerHundredkmContentType { xml = 0, json = 1, jsonp = 2 }

	export enum Routing_versionNumberCalculateReachableRange_origin_contentTypeGetByFuelBudgetInLitersAndEnergyBudgetInkWhAndTimeBudgetInSecAndCallbackAndReportAndDepartAtAndArriveAtAndRouteTypeAndTrafficAndAvoidAndTravelModeAndHillinessAndWindingnessAndVehicleMaxSpeedAndVehicleWeightAndVehicleAxleWeightAndVehicleLengthAndVehicleWidthAndVehicleHeightAndVehicleCommercialAndVehicleLoadTypeAndConstantSpeedConsumptionInLitersPerHundredkmAndCurrentFuelInLitersAndAuxiliaryPowerInLitersPerHourAndFuelEnergyDensityInMJoulesPerLiterAndAccelerationEfficiencyAndDecelerationEfficiencyAndUphillEfficiencyAndDownhillEfficiencyAndVehicleEngineTypeAndConstantSpeedConsumptionInkWhPerHundredkmReport { effectiveSettings = 0 }

	export enum Routing_versionNumberCalculateReachableRange_origin_contentTypeGetByFuelBudgetInLitersAndEnergyBudgetInkWhAndTimeBudgetInSecAndCallbackAndReportAndDepartAtAndArriveAtAndRouteTypeAndTrafficAndAvoidAndTravelModeAndHillinessAndWindingnessAndVehicleMaxSpeedAndVehicleWeightAndVehicleAxleWeightAndVehicleLengthAndVehicleWidthAndVehicleHeightAndVehicleCommercialAndVehicleLoadTypeAndConstantSpeedConsumptionInLitersPerHundredkmAndCurrentFuelInLitersAndAuxiliaryPowerInLitersPerHourAndFuelEnergyDensityInMJoulesPerLiterAndAccelerationEfficiencyAndDecelerationEfficiencyAndUphillEfficiencyAndDownhillEfficiencyAndVehicleEngineTypeAndConstantSpeedConsumptionInkWhPerHundredkmRouteType { fastest = 0, shortest = 1, eco = 2, thrilling = 3 }

	export enum Routing_versionNumberCalculateReachableRange_origin_contentTypeGetByFuelBudgetInLitersAndEnergyBudgetInkWhAndTimeBudgetInSecAndCallbackAndReportAndDepartAtAndArriveAtAndRouteTypeAndTrafficAndAvoidAndTravelModeAndHillinessAndWindingnessAndVehicleMaxSpeedAndVehicleWeightAndVehicleAxleWeightAndVehicleLengthAndVehicleWidthAndVehicleHeightAndVehicleCommercialAndVehicleLoadTypeAndConstantSpeedConsumptionInLitersPerHundredkmAndCurrentFuelInLitersAndAuxiliaryPowerInLitersPerHourAndFuelEnergyDensityInMJoulesPerLiterAndAccelerationEfficiencyAndDecelerationEfficiencyAndUphillEfficiencyAndDownhillEfficiencyAndVehicleEngineTypeAndConstantSpeedConsumptionInkWhPerHundredkmTravelMode { car = 0, truck = 1, taxi = 2, bus = 3, van = 4, motorcycle = 5, bicycle = 6, pedestrian = 7 }

	export enum Routing_versionNumberCalculateReachableRange_origin_contentTypeGetByFuelBudgetInLitersAndEnergyBudgetInkWhAndTimeBudgetInSecAndCallbackAndReportAndDepartAtAndArriveAtAndRouteTypeAndTrafficAndAvoidAndTravelModeAndHillinessAndWindingnessAndVehicleMaxSpeedAndVehicleWeightAndVehicleAxleWeightAndVehicleLengthAndVehicleWidthAndVehicleHeightAndVehicleCommercialAndVehicleLoadTypeAndConstantSpeedConsumptionInLitersPerHundredkmAndCurrentFuelInLitersAndAuxiliaryPowerInLitersPerHourAndFuelEnergyDensityInMJoulesPerLiterAndAccelerationEfficiencyAndDecelerationEfficiencyAndUphillEfficiencyAndDownhillEfficiencyAndVehicleEngineTypeAndConstantSpeedConsumptionInkWhPerHundredkmHilliness { low = 0, normal = 1, high = 2 }

	export enum Routing_versionNumberCalculateReachableRange_origin_contentTypeGetByFuelBudgetInLitersAndEnergyBudgetInkWhAndTimeBudgetInSecAndCallbackAndReportAndDepartAtAndArriveAtAndRouteTypeAndTrafficAndAvoidAndTravelModeAndHillinessAndWindingnessAndVehicleMaxSpeedAndVehicleWeightAndVehicleAxleWeightAndVehicleLengthAndVehicleWidthAndVehicleHeightAndVehicleCommercialAndVehicleLoadTypeAndConstantSpeedConsumptionInLitersPerHundredkmAndCurrentFuelInLitersAndAuxiliaryPowerInLitersPerHourAndFuelEnergyDensityInMJoulesPerLiterAndAccelerationEfficiencyAndDecelerationEfficiencyAndUphillEfficiencyAndDownhillEfficiencyAndVehicleEngineTypeAndConstantSpeedConsumptionInkWhPerHundredkmVehicleEngineType { combustion = 0, electric = 1 }

	export enum Routing_versionNumberCalculateReachableRange_origin_contentTypePostByFuelBudgetInLitersAndEnergyBudgetInkWhAndTimeBudgetInSecAndCallbackAndReportAndDepartAtAndArriveAtAndRouteTypeAndTrafficAndAvoidAndTravelModeAndHillinessAndWindingnessAndVehicleMaxSpeedAndVehicleWeightAndVehicleAxleWeightAndVehicleLengthAndVehicleWidthAndVehicleHeightAndVehicleCommercialAndVehicleLoadTypeAndConstantSpeedConsumptionInLitersPerHundredkmAndCurrentFuelInLitersAndAuxiliaryPowerInLitersPerHourAndFuelEnergyDensityInMJoulesPerLiterAndAccelerationEfficiencyAndDecelerationEfficiencyAndUphillEfficiencyAndDownhillEfficiencyAndVehicleEngineTypeAndConstantSpeedConsumptionInkWhPerHundredkmVersionNumber { _1 = 0 }

	export enum Routing_versionNumberCalculateRoute_locations_contentTypeGetByMaxAlternativesAndAlternativeTypeAndMinDeviationDistanceAndMinDeviationTimeAndInstructionsTypeAndLanguageAndComputeBestOrderAndRouteRepresentationAndComputeTravelTimeForAndVehicleHeadingAndSectionTypeAndCallbackAndReportAndDepartAtAndArriveAtAndRouteTypeAndTrafficAndAvoidAndTravelModeAndHillinessAndWindingnessAndVehicleMaxSpeedAndVehicleWeightAndVehicleAxleWeightAndVehicleLengthAndVehicleWidthAndVehicleHeightAndVehicleCommercialAndVehicleLoadTypeAndVehicleEngineTypeAndConstantSpeedConsumptionInLitersPerHundredkmAndCurrentFuelInLitersAndAuxiliaryPowerInLitersPerHourAndFuelEnergyDensityInMJoulesPerLiterAndAccelerationEfficiencyAndDecelerationEfficiencyAndUphillEfficiencyAndDownhillEfficiencyAndConstantSpeedConsumptionInkWhPerHundredkmVersionNumber { _1 = 0 }

	export enum Routing_versionNumberCalculateRoute_locations_contentTypeGetByMaxAlternativesAndAlternativeTypeAndMinDeviationDistanceAndMinDeviationTimeAndInstructionsTypeAndLanguageAndComputeBestOrderAndRouteRepresentationAndComputeTravelTimeForAndVehicleHeadingAndSectionTypeAndCallbackAndReportAndDepartAtAndArriveAtAndRouteTypeAndTrafficAndAvoidAndTravelModeAndHillinessAndWindingnessAndVehicleMaxSpeedAndVehicleWeightAndVehicleAxleWeightAndVehicleLengthAndVehicleWidthAndVehicleHeightAndVehicleCommercialAndVehicleLoadTypeAndVehicleEngineTypeAndConstantSpeedConsumptionInLitersPerHundredkmAndCurrentFuelInLitersAndAuxiliaryPowerInLitersPerHourAndFuelEnergyDensityInMJoulesPerLiterAndAccelerationEfficiencyAndDecelerationEfficiencyAndUphillEfficiencyAndDownhillEfficiencyAndConstantSpeedConsumptionInkWhPerHundredkmAlternativeType { anyRoute = 0, betterRoute = 1 }

	export enum Routing_versionNumberCalculateRoute_locations_contentTypeGetByMaxAlternativesAndAlternativeTypeAndMinDeviationDistanceAndMinDeviationTimeAndInstructionsTypeAndLanguageAndComputeBestOrderAndRouteRepresentationAndComputeTravelTimeForAndVehicleHeadingAndSectionTypeAndCallbackAndReportAndDepartAtAndArriveAtAndRouteTypeAndTrafficAndAvoidAndTravelModeAndHillinessAndWindingnessAndVehicleMaxSpeedAndVehicleWeightAndVehicleAxleWeightAndVehicleLengthAndVehicleWidthAndVehicleHeightAndVehicleCommercialAndVehicleLoadTypeAndVehicleEngineTypeAndConstantSpeedConsumptionInLitersPerHundredkmAndCurrentFuelInLitersAndAuxiliaryPowerInLitersPerHourAndFuelEnergyDensityInMJoulesPerLiterAndAccelerationEfficiencyAndDecelerationEfficiencyAndUphillEfficiencyAndDownhillEfficiencyAndConstantSpeedConsumptionInkWhPerHundredkmInstructionsType { coded = 0, text = 1, tagged = 2 }

	export enum Routing_versionNumberCalculateRoute_locations_contentTypeGetByMaxAlternativesAndAlternativeTypeAndMinDeviationDistanceAndMinDeviationTimeAndInstructionsTypeAndLanguageAndComputeBestOrderAndRouteRepresentationAndComputeTravelTimeForAndVehicleHeadingAndSectionTypeAndCallbackAndReportAndDepartAtAndArriveAtAndRouteTypeAndTrafficAndAvoidAndTravelModeAndHillinessAndWindingnessAndVehicleMaxSpeedAndVehicleWeightAndVehicleAxleWeightAndVehicleLengthAndVehicleWidthAndVehicleHeightAndVehicleCommercialAndVehicleLoadTypeAndVehicleEngineTypeAndConstantSpeedConsumptionInLitersPerHundredkmAndCurrentFuelInLitersAndAuxiliaryPowerInLitersPerHourAndFuelEnergyDensityInMJoulesPerLiterAndAccelerationEfficiencyAndDecelerationEfficiencyAndUphillEfficiencyAndDownhillEfficiencyAndConstantSpeedConsumptionInkWhPerHundredkmRouteRepresentation { polyline = 0, none = 1 }

	export enum Routing_versionNumberCalculateRoute_locations_contentTypeGetByMaxAlternativesAndAlternativeTypeAndMinDeviationDistanceAndMinDeviationTimeAndInstructionsTypeAndLanguageAndComputeBestOrderAndRouteRepresentationAndComputeTravelTimeForAndVehicleHeadingAndSectionTypeAndCallbackAndReportAndDepartAtAndArriveAtAndRouteTypeAndTrafficAndAvoidAndTravelModeAndHillinessAndWindingnessAndVehicleMaxSpeedAndVehicleWeightAndVehicleAxleWeightAndVehicleLengthAndVehicleWidthAndVehicleHeightAndVehicleCommercialAndVehicleLoadTypeAndVehicleEngineTypeAndConstantSpeedConsumptionInLitersPerHundredkmAndCurrentFuelInLitersAndAuxiliaryPowerInLitersPerHourAndFuelEnergyDensityInMJoulesPerLiterAndAccelerationEfficiencyAndDecelerationEfficiencyAndUphillEfficiencyAndDownhillEfficiencyAndConstantSpeedConsumptionInkWhPerHundredkmComputeTravelTimeFor { none = 0, all = 1 }

	export enum Routing_versionNumberCalculateRoute_locations_contentTypePostByMaxAlternativesAndAlternativeTypeAndMinDeviationDistanceAndMinDeviationTimeAndInstructionsTypeAndLanguageAndComputeBestOrderAndRouteRepresentationAndComputeTravelTimeForAndVehicleHeadingAndSectionTypeAndCallbackAndReportAndDepartAtAndArriveAtAndRouteTypeAndTrafficAndAvoidAndTravelModeAndHillinessAndWindingnessAndVehicleMaxSpeedAndVehicleWeightAndVehicleAxleWeightAndVehicleLengthAndVehicleWidthAndVehicleHeightAndVehicleCommercialAndVehicleLoadTypeAndVehicleEngineTypeAndConstantSpeedConsumptionInLitersPerHundredkmAndCurrentFuelInLitersAndAuxiliaryPowerInLitersPerHourAndFuelEnergyDensityInMJoulesPerLiterAndAccelerationEfficiencyAndDecelerationEfficiencyAndUphillEfficiencyAndDownhillEfficiencyAndConstantSpeedConsumptionInkWhPerHundredkmVersionNumber { _1 = 0 }

}


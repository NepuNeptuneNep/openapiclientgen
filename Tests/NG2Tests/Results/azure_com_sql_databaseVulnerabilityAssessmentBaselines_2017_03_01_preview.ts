import { Injectable, Inject } from '@angular/core';
import { HttpClient, HttpHeaders, HttpResponse } from '@angular/common/http';
import { Observable } from 'rxjs';
import { FormControl, FormGroup, Validators } from '@angular/forms';
export namespace MyNS {

	/** A database vulnerability assessment rule baseline. */
	export interface DatabaseVulnerabilityAssessmentRuleBaseline {

		/** Properties of a database Vulnerability Assessment rule baseline. */
		properties?: DatabaseVulnerabilityAssessmentRuleBaselineProperties;
	}

	/** A database vulnerability assessment rule baseline. */
	export interface DatabaseVulnerabilityAssessmentRuleBaselineFormProperties {
	}
	export function CreateDatabaseVulnerabilityAssessmentRuleBaselineFormGroup() {
		return new FormGroup<DatabaseVulnerabilityAssessmentRuleBaselineFormProperties>({
		});

	}


	/** Properties of a database Vulnerability Assessment rule baseline. */
	export interface DatabaseVulnerabilityAssessmentRuleBaselineProperties {

		/**
		 * The rule baseline result
		 * Required
		 */
		baselineResults: Array<DatabaseVulnerabilityAssessmentRuleBaselineItem>;
	}

	/** Properties of a database Vulnerability Assessment rule baseline. */
	export interface DatabaseVulnerabilityAssessmentRuleBaselinePropertiesFormProperties {
	}
	export function CreateDatabaseVulnerabilityAssessmentRuleBaselinePropertiesFormGroup() {
		return new FormGroup<DatabaseVulnerabilityAssessmentRuleBaselinePropertiesFormProperties>({
		});

	}


	/** Properties for an Azure SQL Database Vulnerability Assessment rule baseline's result. */
	export interface DatabaseVulnerabilityAssessmentRuleBaselineItem {

		/**
		 * The rule baseline result
		 * Required
		 */
		result: Array<string>;
	}

	/** Properties for an Azure SQL Database Vulnerability Assessment rule baseline's result. */
	export interface DatabaseVulnerabilityAssessmentRuleBaselineItemFormProperties {
	}
	export function CreateDatabaseVulnerabilityAssessmentRuleBaselineItemFormGroup() {
		return new FormGroup<DatabaseVulnerabilityAssessmentRuleBaselineItemFormProperties>({
		});

	}

	@Injectable()
	export class MyClient {
		constructor(@Inject('baseUri') private baseUri: string = location.protocol + '//' + location.hostname + (location.port ? ':' + location.port : '') + '/', private http: HttpClient) {
		}

		/**
		 * Gets a database's vulnerability assessment rule baseline.
		 * Get subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/vulnerabilityAssessments/{vulnerabilityAssessmentName}/rules/{ruleId}/baselines/{baselineName}
		 * @param {string} resourceGroupName The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
		 * @param {string} serverName The name of the server.
		 * @param {string} databaseName The name of the database for which the vulnerability assessment rule baseline is defined.
		 * @param {DatabaseVulnerabilityAssessmentRuleBaselines_GetVulnerabilityAssessmentName} vulnerabilityAssessmentName The name of the vulnerability assessment.
		 * @param {string} ruleId The vulnerability assessment rule ID.
		 * @param {DatabaseVulnerabilityAssessmentRuleBaselines_GetBaselineName} baselineName The name of the vulnerability assessment rule baseline (default implies a baseline on a database level rule and master for server level rule).
		 * @param {string} subscriptionId The subscription ID that identifies an Azure subscription.
		 * @param {string} api_version The API version to use for the request.
		 * @return {DatabaseVulnerabilityAssessmentRuleBaseline} Successfully got the vulnerability assessment rule baseline.
		 */
		DatabaseVulnerabilityAssessmentRuleBaselines_Get(resourceGroupName: string, serverName: string, databaseName: string, vulnerabilityAssessmentName: DatabaseVulnerabilityAssessmentRuleBaselines_GetVulnerabilityAssessmentName, ruleId: string, baselineName: DatabaseVulnerabilityAssessmentRuleBaselines_GetBaselineName, subscriptionId: string, api_version: string): Observable<DatabaseVulnerabilityAssessmentRuleBaseline> {
			return this.http.get<DatabaseVulnerabilityAssessmentRuleBaseline>(this.baseUri + 'subscriptions/' + (subscriptionId == null ? '' : encodeURIComponent(subscriptionId)) + '/resourceGroups/' + (resourceGroupName == null ? '' : encodeURIComponent(resourceGroupName)) + '/providers/Microsoft.Sql/servers/' + (serverName == null ? '' : encodeURIComponent(serverName)) + '/databases/' + (databaseName == null ? '' : encodeURIComponent(databaseName)) + '/vulnerabilityAssessments/' + vulnerabilityAssessmentName + '/rules/' + (ruleId == null ? '' : encodeURIComponent(ruleId)) + '/baselines/' + baselineName + '&api_version=' + (api_version == null ? '' : encodeURIComponent(api_version)), {});
		}

		/**
		 * Creates or updates a database's vulnerability assessment rule baseline.
		 * Put subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/vulnerabilityAssessments/{vulnerabilityAssessmentName}/rules/{ruleId}/baselines/{baselineName}
		 * @param {string} resourceGroupName The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
		 * @param {string} serverName The name of the server.
		 * @param {string} databaseName The name of the database for which the vulnerability assessment rule baseline is defined.
		 * @param {DatabaseVulnerabilityAssessmentRuleBaselines_GetVulnerabilityAssessmentName} vulnerabilityAssessmentName The name of the vulnerability assessment.
		 * @param {string} ruleId The vulnerability assessment rule ID.
		 * @param {DatabaseVulnerabilityAssessmentRuleBaselines_GetBaselineName} baselineName The name of the vulnerability assessment rule baseline (default implies a baseline on a database level rule and master for server level rule).
		 * @param {string} subscriptionId The subscription ID that identifies an Azure subscription.
		 * @param {string} api_version The API version to use for the request.
		 * @param {DatabaseVulnerabilityAssessmentRuleBaseline} requestBody The requested rule baseline resource.
		 * @return {DatabaseVulnerabilityAssessmentRuleBaseline} Successfully set the vulnerability assessment rule baseline.
		 */
		DatabaseVulnerabilityAssessmentRuleBaselines_CreateOrUpdate(resourceGroupName: string, serverName: string, databaseName: string, vulnerabilityAssessmentName: DatabaseVulnerabilityAssessmentRuleBaselines_GetVulnerabilityAssessmentName, ruleId: string, baselineName: DatabaseVulnerabilityAssessmentRuleBaselines_GetBaselineName, subscriptionId: string, api_version: string, requestBody: DatabaseVulnerabilityAssessmentRuleBaseline): Observable<DatabaseVulnerabilityAssessmentRuleBaseline> {
			return this.http.put<DatabaseVulnerabilityAssessmentRuleBaseline>(this.baseUri + 'subscriptions/' + (subscriptionId == null ? '' : encodeURIComponent(subscriptionId)) + '/resourceGroups/' + (resourceGroupName == null ? '' : encodeURIComponent(resourceGroupName)) + '/providers/Microsoft.Sql/servers/' + (serverName == null ? '' : encodeURIComponent(serverName)) + '/databases/' + (databaseName == null ? '' : encodeURIComponent(databaseName)) + '/vulnerabilityAssessments/' + vulnerabilityAssessmentName + '/rules/' + (ruleId == null ? '' : encodeURIComponent(ruleId)) + '/baselines/' + baselineName + '&api_version=' + (api_version == null ? '' : encodeURIComponent(api_version)), JSON.stringify(requestBody), { headers: { 'Content-Type': 'application/json;charset=UTF-8' } });
		}

		/**
		 * Removes the database's vulnerability assessment rule baseline.
		 * Delete subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/vulnerabilityAssessments/{vulnerabilityAssessmentName}/rules/{ruleId}/baselines/{baselineName}
		 * @param {string} resourceGroupName The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
		 * @param {string} serverName The name of the server.
		 * @param {string} databaseName The name of the database for which the vulnerability assessment rule baseline is defined.
		 * @param {DatabaseVulnerabilityAssessmentRuleBaselines_GetVulnerabilityAssessmentName} vulnerabilityAssessmentName The name of the vulnerability assessment.
		 * @param {string} ruleId The vulnerability assessment rule ID.
		 * @param {DatabaseVulnerabilityAssessmentRuleBaselines_GetBaselineName} baselineName The name of the vulnerability assessment rule baseline (default implies a baseline on a database level rule and master for server level rule).
		 * @param {string} subscriptionId The subscription ID that identifies an Azure subscription.
		 * @param {string} api_version The API version to use for the request.
		 * @return {void} Successfully removed the database vulnerability assessment rule baseline.
		 */
		DatabaseVulnerabilityAssessmentRuleBaselines_Delete(resourceGroupName: string, serverName: string, databaseName: string, vulnerabilityAssessmentName: DatabaseVulnerabilityAssessmentRuleBaselines_GetVulnerabilityAssessmentName, ruleId: string, baselineName: DatabaseVulnerabilityAssessmentRuleBaselines_GetBaselineName, subscriptionId: string, api_version: string): Observable<HttpResponse<string>> {
			return this.http.delete(this.baseUri + 'subscriptions/' + (subscriptionId == null ? '' : encodeURIComponent(subscriptionId)) + '/resourceGroups/' + (resourceGroupName == null ? '' : encodeURIComponent(resourceGroupName)) + '/providers/Microsoft.Sql/servers/' + (serverName == null ? '' : encodeURIComponent(serverName)) + '/databases/' + (databaseName == null ? '' : encodeURIComponent(databaseName)) + '/vulnerabilityAssessments/' + vulnerabilityAssessmentName + '/rules/' + (ruleId == null ? '' : encodeURIComponent(ruleId)) + '/baselines/' + baselineName + '&api_version=' + (api_version == null ? '' : encodeURIComponent(api_version)), { observe: 'response', responseType: 'text' });
		}
	}

	export enum DatabaseVulnerabilityAssessmentRuleBaselines_GetVulnerabilityAssessmentName { default = 'default' }

	export enum DatabaseVulnerabilityAssessmentRuleBaselines_GetBaselineName { master = 'master', default = 'default' }

}


import { Injectable, Inject } from '@angular/core';
import { HttpClient, HttpHeaders, HttpResponse } from '@angular/common/http';
import { Observable } from 'rxjs';
import { FormControl, FormGroup, Validators } from '@angular/forms';
export namespace MyNS {

	/** Schema of the Data property of an EventGridEvent for an Microsoft.Storage.BlobCreated event. */
	export interface StorageBlobCreatedEventData {

		/** The name of the API/operation that triggered this event. */
		api?: string | null;

		/** The type of blob. */
		blobType?: string | null;

		/** A request id provided by the client of the storage API operation that triggered this event. */
		clientRequestId?: string | null;

		/**
		 * The size of the blob in bytes. This is the same as what would be returned in the Content-Length header from the blob.
		 * Type: long, -9,223,372,036,854,775,808 to 9,223,372,036,854,775,807
		 */
		contentLength?: string | null;

		/**
		 * The offset of the blob in bytes.
		 * Type: long, -9,223,372,036,854,775,808 to 9,223,372,036,854,775,807
		 */
		contentOffset?: string | null;

		/** The content type of the blob. This is the same as what would be returned in the Content-Type header from the blob. */
		contentType?: string | null;

		/** The etag of the blob at the time this event was triggered. */
		eTag?: string | null;

		/** The identity of the requester that triggered this event. */
		identity?: string | null;

		/** The request id generated by the Storage service for the storage API operation that triggered this event. */
		requestId?: string | null;

		/** An opaque string value representing the logical sequence of events for any particular blob name. Users can use standard string comparison to understand the relative sequence of two events on the same blob name. */
		sequencer?: string | null;

		/** For service use only. Diagnostic data occasionally included by the Azure Storage service. This property should be ignored by event consumers. */
		storageDiagnostics?: string | null;

		/** The path to the blob. */
		url?: string | null;
	}

	/** Schema of the Data property of an EventGridEvent for an Microsoft.Storage.BlobCreated event. */
	export interface StorageBlobCreatedEventDataFormProperties {

		/** The name of the API/operation that triggered this event. */
		api: FormControl<string | null | undefined>,

		/** The type of blob. */
		blobType: FormControl<string | null | undefined>,

		/** A request id provided by the client of the storage API operation that triggered this event. */
		clientRequestId: FormControl<string | null | undefined>,

		/**
		 * The size of the blob in bytes. This is the same as what would be returned in the Content-Length header from the blob.
		 * Type: long, -9,223,372,036,854,775,808 to 9,223,372,036,854,775,807
		 */
		contentLength: FormControl<string | null | undefined>,

		/**
		 * The offset of the blob in bytes.
		 * Type: long, -9,223,372,036,854,775,808 to 9,223,372,036,854,775,807
		 */
		contentOffset: FormControl<string | null | undefined>,

		/** The content type of the blob. This is the same as what would be returned in the Content-Type header from the blob. */
		contentType: FormControl<string | null | undefined>,

		/** The etag of the blob at the time this event was triggered. */
		eTag: FormControl<string | null | undefined>,

		/** The identity of the requester that triggered this event. */
		identity: FormControl<string | null | undefined>,

		/** The request id generated by the Storage service for the storage API operation that triggered this event. */
		requestId: FormControl<string | null | undefined>,

		/** An opaque string value representing the logical sequence of events for any particular blob name. Users can use standard string comparison to understand the relative sequence of two events on the same blob name. */
		sequencer: FormControl<string | null | undefined>,

		/** For service use only. Diagnostic data occasionally included by the Azure Storage service. This property should be ignored by event consumers. */
		storageDiagnostics: FormControl<string | null | undefined>,

		/** The path to the blob. */
		url: FormControl<string | null | undefined>,
	}
	export function CreateStorageBlobCreatedEventDataFormGroup() {
		return new FormGroup<StorageBlobCreatedEventDataFormProperties>({
			api: new FormControl<string | null | undefined>(undefined),
			blobType: new FormControl<string | null | undefined>(undefined),
			clientRequestId: new FormControl<string | null | undefined>(undefined),
			contentLength: new FormControl<string | null | undefined>(undefined),
			contentOffset: new FormControl<string | null | undefined>(undefined),
			contentType: new FormControl<string | null | undefined>(undefined),
			eTag: new FormControl<string | null | undefined>(undefined),
			identity: new FormControl<string | null | undefined>(undefined),
			requestId: new FormControl<string | null | undefined>(undefined),
			sequencer: new FormControl<string | null | undefined>(undefined),
			storageDiagnostics: new FormControl<string | null | undefined>(undefined),
			url: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Schema of the Data property of an EventGridEvent for an Microsoft.Storage.BlobDeleted event. */
	export interface StorageBlobDeletedEventData {

		/** The name of the API/operation that triggered this event. */
		api?: string | null;

		/** The type of blob. */
		blobType?: string | null;

		/** A request id provided by the client of the storage API operation that triggered this event. */
		clientRequestId?: string | null;

		/** The content type of the blob. This is the same as what would be returned in the Content-Type header from the blob. */
		contentType?: string | null;

		/** The identity of the requester that triggered this event. */
		identity?: string | null;

		/** The request id generated by the Storage service for the storage API operation that triggered this event. */
		requestId?: string | null;

		/** An opaque string value representing the logical sequence of events for any particular blob name. Users can use standard string comparison to understand the relative sequence of two events on the same blob name. */
		sequencer?: string | null;

		/** For service use only. Diagnostic data occasionally included by the Azure Storage service. This property should be ignored by event consumers. */
		storageDiagnostics?: string | null;

		/** The path to the blob. */
		url?: string | null;
	}

	/** Schema of the Data property of an EventGridEvent for an Microsoft.Storage.BlobDeleted event. */
	export interface StorageBlobDeletedEventDataFormProperties {

		/** The name of the API/operation that triggered this event. */
		api: FormControl<string | null | undefined>,

		/** The type of blob. */
		blobType: FormControl<string | null | undefined>,

		/** A request id provided by the client of the storage API operation that triggered this event. */
		clientRequestId: FormControl<string | null | undefined>,

		/** The content type of the blob. This is the same as what would be returned in the Content-Type header from the blob. */
		contentType: FormControl<string | null | undefined>,

		/** The identity of the requester that triggered this event. */
		identity: FormControl<string | null | undefined>,

		/** The request id generated by the Storage service for the storage API operation that triggered this event. */
		requestId: FormControl<string | null | undefined>,

		/** An opaque string value representing the logical sequence of events for any particular blob name. Users can use standard string comparison to understand the relative sequence of two events on the same blob name. */
		sequencer: FormControl<string | null | undefined>,

		/** For service use only. Diagnostic data occasionally included by the Azure Storage service. This property should be ignored by event consumers. */
		storageDiagnostics: FormControl<string | null | undefined>,

		/** The path to the blob. */
		url: FormControl<string | null | undefined>,
	}
	export function CreateStorageBlobDeletedEventDataFormGroup() {
		return new FormGroup<StorageBlobDeletedEventDataFormProperties>({
			api: new FormControl<string | null | undefined>(undefined),
			blobType: new FormControl<string | null | undefined>(undefined),
			clientRequestId: new FormControl<string | null | undefined>(undefined),
			contentType: new FormControl<string | null | undefined>(undefined),
			identity: new FormControl<string | null | undefined>(undefined),
			requestId: new FormControl<string | null | undefined>(undefined),
			sequencer: new FormControl<string | null | undefined>(undefined),
			storageDiagnostics: new FormControl<string | null | undefined>(undefined),
			url: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Schema of the Data property of an EventGridEvent for an Microsoft.Storage.BlobRenamed event. */
	export interface StorageBlobRenamedEventData {

		/** The name of the API/operation that triggered this event. */
		api?: string | null;

		/** A request id provided by the client of the storage API operation that triggered this event. */
		clientRequestId?: string | null;

		/** The new path to the blob after the rename operation. */
		destinationUrl?: string | null;

		/** The identity of the requester that triggered this event. */
		identity?: string | null;

		/** The request id generated by the storage service for the storage API operation that triggered this event. */
		requestId?: string | null;

		/** An opaque string value representing the logical sequence of events for any particular blob name. Users can use standard string comparison to understand the relative sequence of two events on the same blob name. */
		sequencer?: string | null;

		/** The path to the blob that was renamed. */
		sourceUrl?: string | null;

		/** For service use only. Diagnostic data occasionally included by the Azure Storage service. This property should be ignored by event consumers. */
		storageDiagnostics?: string | null;
	}

	/** Schema of the Data property of an EventGridEvent for an Microsoft.Storage.BlobRenamed event. */
	export interface StorageBlobRenamedEventDataFormProperties {

		/** The name of the API/operation that triggered this event. */
		api: FormControl<string | null | undefined>,

		/** A request id provided by the client of the storage API operation that triggered this event. */
		clientRequestId: FormControl<string | null | undefined>,

		/** The new path to the blob after the rename operation. */
		destinationUrl: FormControl<string | null | undefined>,

		/** The identity of the requester that triggered this event. */
		identity: FormControl<string | null | undefined>,

		/** The request id generated by the storage service for the storage API operation that triggered this event. */
		requestId: FormControl<string | null | undefined>,

		/** An opaque string value representing the logical sequence of events for any particular blob name. Users can use standard string comparison to understand the relative sequence of two events on the same blob name. */
		sequencer: FormControl<string | null | undefined>,

		/** The path to the blob that was renamed. */
		sourceUrl: FormControl<string | null | undefined>,

		/** For service use only. Diagnostic data occasionally included by the Azure Storage service. This property should be ignored by event consumers. */
		storageDiagnostics: FormControl<string | null | undefined>,
	}
	export function CreateStorageBlobRenamedEventDataFormGroup() {
		return new FormGroup<StorageBlobRenamedEventDataFormProperties>({
			api: new FormControl<string | null | undefined>(undefined),
			clientRequestId: new FormControl<string | null | undefined>(undefined),
			destinationUrl: new FormControl<string | null | undefined>(undefined),
			identity: new FormControl<string | null | undefined>(undefined),
			requestId: new FormControl<string | null | undefined>(undefined),
			sequencer: new FormControl<string | null | undefined>(undefined),
			sourceUrl: new FormControl<string | null | undefined>(undefined),
			storageDiagnostics: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Schema of the Data property of an EventGridEvent for an Microsoft.Storage.DirectoryCreated event. */
	export interface StorageDirectoryCreatedEventData {

		/** The name of the API/operation that triggered this event. */
		api?: string | null;

		/** A request id provided by the client of the storage API operation that triggered this event. */
		clientRequestId?: string | null;

		/** The etag of the directory at the time this event was triggered. */
		eTag?: string | null;

		/** The identity of the requester that triggered this event. */
		identity?: string | null;

		/** The request id generated by the storage service for the storage API operation that triggered this event. */
		requestId?: string | null;

		/** An opaque string value representing the logical sequence of events for any particular directory name. Users can use standard string comparison to understand the relative sequence of two events on the same directory name. */
		sequencer?: string | null;

		/** For service use only. Diagnostic data occasionally included by the Azure Storage service. This property should be ignored by event consumers. */
		storageDiagnostics?: string | null;

		/** The path to the directory. */
		url?: string | null;
	}

	/** Schema of the Data property of an EventGridEvent for an Microsoft.Storage.DirectoryCreated event. */
	export interface StorageDirectoryCreatedEventDataFormProperties {

		/** The name of the API/operation that triggered this event. */
		api: FormControl<string | null | undefined>,

		/** A request id provided by the client of the storage API operation that triggered this event. */
		clientRequestId: FormControl<string | null | undefined>,

		/** The etag of the directory at the time this event was triggered. */
		eTag: FormControl<string | null | undefined>,

		/** The identity of the requester that triggered this event. */
		identity: FormControl<string | null | undefined>,

		/** The request id generated by the storage service for the storage API operation that triggered this event. */
		requestId: FormControl<string | null | undefined>,

		/** An opaque string value representing the logical sequence of events for any particular directory name. Users can use standard string comparison to understand the relative sequence of two events on the same directory name. */
		sequencer: FormControl<string | null | undefined>,

		/** For service use only. Diagnostic data occasionally included by the Azure Storage service. This property should be ignored by event consumers. */
		storageDiagnostics: FormControl<string | null | undefined>,

		/** The path to the directory. */
		url: FormControl<string | null | undefined>,
	}
	export function CreateStorageDirectoryCreatedEventDataFormGroup() {
		return new FormGroup<StorageDirectoryCreatedEventDataFormProperties>({
			api: new FormControl<string | null | undefined>(undefined),
			clientRequestId: new FormControl<string | null | undefined>(undefined),
			eTag: new FormControl<string | null | undefined>(undefined),
			identity: new FormControl<string | null | undefined>(undefined),
			requestId: new FormControl<string | null | undefined>(undefined),
			sequencer: new FormControl<string | null | undefined>(undefined),
			storageDiagnostics: new FormControl<string | null | undefined>(undefined),
			url: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Schema of the Data property of an EventGridEvent for an Microsoft.Storage.DirectoryDeleted event. */
	export interface StorageDirectoryDeletedEventData {

		/** The name of the API/operation that triggered this event. */
		api?: string | null;

		/** A request id provided by the client of the storage API operation that triggered this event. */
		clientRequestId?: string | null;

		/** The identity of the requester that triggered this event. */
		identity?: string | null;

		/** Is this event for a recursive delete operation. */
		recursive?: boolean | null;

		/** The request id generated by the storage service for the storage API operation that triggered this event. */
		requestId?: string | null;

		/** An opaque string value representing the logical sequence of events for any particular directory name. Users can use standard string comparison to understand the relative sequence of two events on the same directory name. */
		sequencer?: string | null;

		/** For service use only. Diagnostic data occasionally included by the Azure Storage service. This property should be ignored by event consumers. */
		storageDiagnostics?: string | null;

		/** The path to the deleted directory. */
		url?: string | null;
	}

	/** Schema of the Data property of an EventGridEvent for an Microsoft.Storage.DirectoryDeleted event. */
	export interface StorageDirectoryDeletedEventDataFormProperties {

		/** The name of the API/operation that triggered this event. */
		api: FormControl<string | null | undefined>,

		/** A request id provided by the client of the storage API operation that triggered this event. */
		clientRequestId: FormControl<string | null | undefined>,

		/** The identity of the requester that triggered this event. */
		identity: FormControl<string | null | undefined>,

		/** Is this event for a recursive delete operation. */
		recursive: FormControl<boolean | null | undefined>,

		/** The request id generated by the storage service for the storage API operation that triggered this event. */
		requestId: FormControl<string | null | undefined>,

		/** An opaque string value representing the logical sequence of events for any particular directory name. Users can use standard string comparison to understand the relative sequence of two events on the same directory name. */
		sequencer: FormControl<string | null | undefined>,

		/** For service use only. Diagnostic data occasionally included by the Azure Storage service. This property should be ignored by event consumers. */
		storageDiagnostics: FormControl<string | null | undefined>,

		/** The path to the deleted directory. */
		url: FormControl<string | null | undefined>,
	}
	export function CreateStorageDirectoryDeletedEventDataFormGroup() {
		return new FormGroup<StorageDirectoryDeletedEventDataFormProperties>({
			api: new FormControl<string | null | undefined>(undefined),
			clientRequestId: new FormControl<string | null | undefined>(undefined),
			identity: new FormControl<string | null | undefined>(undefined),
			recursive: new FormControl<boolean | null | undefined>(undefined),
			requestId: new FormControl<string | null | undefined>(undefined),
			sequencer: new FormControl<string | null | undefined>(undefined),
			storageDiagnostics: new FormControl<string | null | undefined>(undefined),
			url: new FormControl<string | null | undefined>(undefined),
		});

	}


	/** Schema of the Data property of an EventGridEvent for an Microsoft.Storage.DirectoryRenamed event. */
	export interface StorageDirectoryRenamedEventData {

		/** The name of the API/operation that triggered this event. */
		api?: string | null;

		/** A request id provided by the client of the storage API operation that triggered this event. */
		clientRequestId?: string | null;

		/** The new path to the directory after the rename operation. */
		destinationUrl?: string | null;

		/** The identity of the requester that triggered this event. */
		identity?: string | null;

		/** The request id generated by the storage service for the storage API operation that triggered this event. */
		requestId?: string | null;

		/** An opaque string value representing the logical sequence of events for any particular directory name. Users can use standard string comparison to understand the relative sequence of two events on the same directory name. */
		sequencer?: string | null;

		/** The path to the directory that was renamed. */
		sourceUrl?: string | null;

		/** For service use only. Diagnostic data occasionally included by the Azure Storage service. This property should be ignored by event consumers. */
		storageDiagnostics?: string | null;
	}

	/** Schema of the Data property of an EventGridEvent for an Microsoft.Storage.DirectoryRenamed event. */
	export interface StorageDirectoryRenamedEventDataFormProperties {

		/** The name of the API/operation that triggered this event. */
		api: FormControl<string | null | undefined>,

		/** A request id provided by the client of the storage API operation that triggered this event. */
		clientRequestId: FormControl<string | null | undefined>,

		/** The new path to the directory after the rename operation. */
		destinationUrl: FormControl<string | null | undefined>,

		/** The identity of the requester that triggered this event. */
		identity: FormControl<string | null | undefined>,

		/** The request id generated by the storage service for the storage API operation that triggered this event. */
		requestId: FormControl<string | null | undefined>,

		/** An opaque string value representing the logical sequence of events for any particular directory name. Users can use standard string comparison to understand the relative sequence of two events on the same directory name. */
		sequencer: FormControl<string | null | undefined>,

		/** The path to the directory that was renamed. */
		sourceUrl: FormControl<string | null | undefined>,

		/** For service use only. Diagnostic data occasionally included by the Azure Storage service. This property should be ignored by event consumers. */
		storageDiagnostics: FormControl<string | null | undefined>,
	}
	export function CreateStorageDirectoryRenamedEventDataFormGroup() {
		return new FormGroup<StorageDirectoryRenamedEventDataFormProperties>({
			api: new FormControl<string | null | undefined>(undefined),
			clientRequestId: new FormControl<string | null | undefined>(undefined),
			destinationUrl: new FormControl<string | null | undefined>(undefined),
			identity: new FormControl<string | null | undefined>(undefined),
			requestId: new FormControl<string | null | undefined>(undefined),
			sequencer: new FormControl<string | null | undefined>(undefined),
			sourceUrl: new FormControl<string | null | undefined>(undefined),
			storageDiagnostics: new FormControl<string | null | undefined>(undefined),
		});

	}

	@Injectable()
	export class MyClient {
		constructor(@Inject('baseUri') private baseUri: string = location.protocol + '//' + location.hostname + (location.port ? ':' + location.port : '') + '/', private http: HttpClient) {
		}
	}

}


import { Injectable, Inject } from '@angular/core';
import { HttpClient, HttpHeaders, HttpResponse } from '@angular/common/http';
import { Observable } from 'rxjs';
export namespace MyNS {
	export interface QueryForecastResponse {

		/** Provides information about a forecast. Returned as part of the <a>QueryForecast</a> response. */
		Forecast?: Forecast;
	}


	/** Provides information about a forecast. Returned as part of the <a>QueryForecast</a> response. */
	export interface Forecast {
		Predictions?: Predictions;
	}

	export interface Predictions {
	}

	export interface QueryForecastRequest {
		ForecastArn: string;
		StartDate?: string;
		EndDate?: string;
		Filters: Filters;
		NextToken?: string;
	}

	export interface Filters {
	}

	export interface ResourceNotFoundException {
	}

	export interface ResourceInUseException {
	}

	export interface InvalidInputException {
	}

	export interface LimitExceededException {
	}

	export interface InvalidNextTokenException {
	}


	/** The forecast value for a specific date. Part of the <a>Forecast</a> object. */
	export interface DataPoint {
		Timestamp?: string;
		Value?: number;
	}

	@Injectable()
	export class MyClient {
		constructor(@Inject('baseUri') private baseUri: string = location.protocol + '//' + location.hostname + (location.port ? ':' + location.port : '') + '/', private http: HttpClient) {
		}

		/**
		 * <p>Retrieves a forecast for a single item, filtered by the supplied criteria.</p> <p>The criteria is a key-value pair. The key is either <code>item_id</code> (or the equivalent non-timestamp, non-target field) from the <code>TARGET_TIME_SERIES</code> dataset, or one of the forecast dimensions specified as part of the <code>FeaturizationConfig</code> object.</p> <p>By default, <code>QueryForecast</code> returns the complete date range for the filtered forecast. You can request a specific date range.</p> <p>To get the full forecast, use the <a href="https://docs.aws.amazon.com/en_us/forecast/latest/dg/API_CreateForecastExportJob.html">CreateForecastExportJob</a> operation.</p> <note> <p>The forecasts generated by Amazon Forecast are in the same timezone as the dataset that was used to create the predictor.</p> </note>
		 * Post #X-Amz-Target=AmazonForecastRuntime.QueryForecast
		 * @return {QueryForecastResponse} Success
		 */
		QueryForecast(requestBody: QueryForecastRequest): Observable<QueryForecastResponse> {
			return this.http.post<QueryForecastResponse>(this.baseUri + '#X-Amz-Target=AmazonForecastRuntime.QueryForecast', JSON.stringify(requestBody), { headers: { 'Content-Type': 'application/json;charset=UTF-8' } });
		}
	}

	export enum QueryForecastX_Amz_Target { AmazonForecastRuntime_QueryForecast = 0 }

}

